

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 17:32:17 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=4,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=4,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=4,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=4,class=CODE,delta=1
    87                           	psect	text72,global,reloc=4,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=4,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=4,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=4,class=CODE,delta=1
    97                           	psect	text82,global,reloc=4,class=CODE,delta=1
    98                           	psect	text83,global,reloc=4,class=CODE,delta=1
    99                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   100                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   101                           	psect	text84,global,reloc=4,class=CODE,delta=1
   102                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   103                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   104                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   105  0000                     
   106                           ; Version 2.20
   107                           ; Generated 05/05/2020 GMT
   108                           ; 
   109                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC18F46K42 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     
   141                           	psect	idataCOMRAM
   142  003B22                     __pidataCOMRAM:
   143                           	callstack 0
   144                           
   145                           ;initializer for _driveMode
   146  003B22  01                 	db	1
   147                           
   148                           	psect	nvBANK0
   149  0000E8                     __pnvBANK0:
   150                           	callstack 0
   151  0000E8                     _TMR4_InterruptHandler:
   152                           	callstack 0
   153  0000E8                     	ds	2
   154  0000EA                     _timer3ReloadVal:
   155                           	callstack 0
   156  0000EA                     	ds	2
   157  0000EC                     _TMR5_GateInterruptHandler:
   158                           	callstack 0
   159  0000EC                     	ds	2
   160  0000EE                     _timer5ReloadVal:
   161                           	callstack 0
   162  0000EE                     	ds	2
   163  0000F0                     _CCP4_CallBack:
   164                           	callstack 0
   165  0000F0                     	ds	2
   166  0000F2                     _CCP3_CallBack:
   167                           	callstack 0
   168  0000F2                     	ds	2
   169  0000F4                     _UART1_ErrorHandler:
   170                           	callstack 0
   171  0000F4                     	ds	2
   172  0000F6                     _UART1_OverrunErrorHandler:
   173                           	callstack 0
   174  0000F6                     	ds	2
   175  0000F8                     _UART1_FramingErrorHandler:
   176                           	callstack 0
   177  0000F8                     	ds	2
   178  0000FA                     _UART1_TxInterruptHandler:
   179                           	callstack 0
   180  0000FA                     	ds	2
   181  0000FC                     _UART1_RxInterruptHandler:
   182                           	callstack 0
   183  0000FC                     	ds	2
   184  0000FE                     _uart1TxBufferRemaining:
   185                           	callstack 0
   186  0000FE                     	ds	1
   187  0000                     _PIR4bits	set	14756
   188  0000                     _PIR1bits	set	14753
   189  0000                     _PIE1bits	set	14737
   190  0000                     _PIE7bits	set	14743
   191  0000                     _PIR7bits	set	14759
   192  0000                     _PIR6bits	set	14758
   193  0000                     _PIE8bits	set	14744
   194  0000                     _PIR8bits	set	14760
   195  0000                     _PIE10bits	set	14746
   196  0000                     _PIR10bits	set	14762
   197  0000                     _PIE9bits	set	14745
   198  0000                     _PIR9bits	set	14761
   199  0000                     _IPR9bits	set	14729
   200  0000                     _IPR7bits	set	14727
   201  0000                     _IPR8bits	set	14728
   202  0000                     _IPR10bits	set	14730
   203  0000                     _IPR1bits	set	14721
   204  0000                     _IPR3bits	set	14723
   205  0000                     _PIE3bits	set	14739
   206  0000                     _PMD7	set	14791
   207  0000                     _PMD6	set	14790
   208  0000                     _PMD5	set	14789
   209  0000                     _PMD4	set	14788
   210  0000                     _PMD3	set	14787
   211  0000                     _PMD2	set	14786
   212  0000                     _PMD1	set	14785
   213  0000                     _PMD0	set	14784
   214  0000                     _OSCTUNE	set	14814
   215  0000                     _OSCFRQ	set	14815
   216  0000                     _OSCEN	set	14813
   217  0000                     _OSCCON3	set	14811
   218  0000                     _OSCCON1	set	14809
   219  0000                     _CCP4PPS	set	15056
   220  0000                     _SMT1SIGPPS	set	15058
   221  0000                     _CLCIN2PPS	set	15067
   222  0000                     _RB3PPS	set	14859
   223  0000                     _RA3PPS	set	14851
   224  0000                     _SMT1WINPPS	set	15057
   225  0000                     _CLCIN0PPS	set	15065
   226  0000                     _RA4PPS	set	14852
   227  0000                     _T5GPPS	set	15049
   228  0000                     _RA0PPS	set	14848
   229  0000                     _U1RXPPS	set	15077
   230  0000                     _RA1PPS	set	14849
   231  0000                     _CLCIN3PPS	set	15068
   232  0000                     _CCP3PPS	set	15055
   233  0000                     _INLVLE	set	14980
   234  0000                     _INLVLD	set	14964
   235  0000                     _INLVLC	set	14948
   236  0000                     _INLVLB	set	14932
   237  0000                     _INLVLA	set	14916
   238  0000                     _SLRCONE	set	14979
   239  0000                     _SLRCOND	set	14963
   240  0000                     _SLRCONC	set	14947
   241  0000                     _SLRCONB	set	14931
   242  0000                     _SLRCONA	set	14915
   243  0000                     _ODCOND	set	14962
   244  0000                     _ODCONC	set	14946
   245  0000                     _ODCONB	set	14930
   246  0000                     _ODCONA	set	14914
   247  0000                     _ODCONE	set	14978
   248  0000                     _RD1I2C	set	14971
   249  0000                     _RD0I2C	set	14970
   250  0000                     _RC4I2C	set	14955
   251  0000                     _RC3I2C	set	14954
   252  0000                     _RB2I2C	set	14939
   253  0000                     _RB1I2C	set	14938
   254  0000                     _WPUC	set	14945
   255  0000                     _WPUA	set	14913
   256  0000                     _WPUB	set	14929
   257  0000                     _WPUE	set	14977
   258  0000                     _WPUD	set	14961
   259  0000                     _ANSELA	set	14912
   260  0000                     _ANSELE	set	14976
   261  0000                     _ANSELB	set	14928
   262  0000                     _ANSELC	set	14944
   263  0000                     _ANSELD	set	14960
   264  0000                     _CLC3CON	set	15456
   265  0000                     _CLC3GLS3	set	15465
   266  0000                     _CLC3GLS2	set	15464
   267  0000                     _CLC3GLS1	set	15463
   268  0000                     _CLC3GLS0	set	15462
   269  0000                     _CLC3SEL3	set	15461
   270  0000                     _CLC3SEL2	set	15460
   271  0000                     _CLC3SEL1	set	15459
   272  0000                     _CLC3SEL0	set	15458
   273  0000                     _CLC3POL	set	15457
   274  0000                     _CLC3CONbits	set	15456
   275  0000                     _U1RXB	set	15848
   276  0000                     _U1TXB	set	15850
   277  0000                     _U1ERRIRbits	set	15865
   278  0000                     _U1ERRIE	set	15866
   279  0000                     _U1ERRIR	set	15865
   280  0000                     _U1UIR	set	15864
   281  0000                     _U1FIFO	set	15863
   282  0000                     _U1BRGH	set	15862
   283  0000                     _U1BRGL	set	15861
   284  0000                     _U1CON2	set	15860
   285  0000                     _U1CON1	set	15859
   286  0000                     _U1CON0	set	15858
   287  0000                     _U1P3H	set	15857
   288  0000                     _U1P3L	set	15856
   289  0000                     _U1P2H	set	15855
   290  0000                     _U1P2L	set	15854
   291  0000                     _U1P1H	set	15853
   292  0000                     _U1P1L	set	15852
   293  0000                     _ADCON1bits	set	16121
   294  0000                     _ADERRL	set	16098
   295  0000                     _ADERRH	set	16099
   296  0000                     _ADPREVL	set	16109
   297  0000                     _ADPREVH	set	16110
   298  0000                     _ADFLTRL	set	16102
   299  0000                     _ADFLTRH	set	16103
   300  0000                     _ADSTATbits	set	16124
   301  0000                     _ADACCL	set	16104
   302  0000                     _ADACCH	set	16105
   303  0000                     _ADCON2bits	set	16122
   304  0000                     _ADCNT	set	16107
   305  0000                     _ADCON3bits	set	16123
   306  0000                     _ADRESL	set	16111
   307  0000                     _ADRESH	set	16112
   308  0000                     _ADCON0bits	set	16120
   309  0000                     _ADCON0	set	16120
   310  0000                     _ADCLK	set	16127
   311  0000                     _ADACT	set	16126
   312  0000                     _ADREF	set	16125
   313  0000                     _ADSTAT	set	16124
   314  0000                     _ADCON3	set	16123
   315  0000                     _ADCON2	set	16122
   316  0000                     _ADCON1	set	16121
   317  0000                     _ADPREH	set	16119
   318  0000                     _ADPREL	set	16118
   319  0000                     _ADCAP	set	16117
   320  0000                     _ADACQH	set	16116
   321  0000                     _ADACQL	set	16115
   322  0000                     _ADPCH	set	16113
   323  0000                     _ADRPT	set	16108
   324  0000                     _ADACCU	set	16106
   325  0000                     _ADSTPTH	set	16101
   326  0000                     _ADSTPTL	set	16100
   327  0000                     _ADUTHH	set	16097
   328  0000                     _ADUTHL	set	16096
   329  0000                     _ADLTHH	set	16095
   330  0000                     _ADLTHL	set	16094
   331  0000                     _SMT1TMR	set	16146
   332  0000                     _SMT1CPR	set	16149
   333  0000                     _SMT1CPW	set	16152
   334  0000                     _SMT1PR	set	16155
   335  0000                     _SMT1STATbits	set	16160
   336  0000                     _SMT1CON0bits	set	16158
   337  0000                     _SMT1CON1bits	set	16159
   338  0000                     _SMT1PRL	set	16155
   339  0000                     _SMT1PRH	set	16156
   340  0000                     _SMT1PRU	set	16157
   341  0000                     _SMT1SIG	set	16162
   342  0000                     _SMT1WIN	set	16163
   343  0000                     _SMT1CLK	set	16161
   344  0000                     _SMT1STAT	set	16160
   345  0000                     _SMT1CON1	set	16159
   346  0000                     _SMT1CON0	set	16158
   347  0000                     _CCPTMRS1bits	set	16223
   348  0000                     _CCPTMRS0bits	set	16222
   349  0000                     _PORTBbits	set	16331
   350  0000                     _PR2	set	16299
   351  0000                     _TMR2	set	16298
   352  0000                     _T2CONbits	set	16300
   353  0000                     _T2RSTbits	set	16303
   354  0000                     _T2HLTbits	set	16301
   355  0000                     _T2CON	set	16300
   356  0000                     _T2TMR	set	16298
   357  0000                     _T2PR	set	16299
   358  0000                     _T2RST	set	16303
   359  0000                     _T2HLT	set	16301
   360  0000                     _T2CLKCON	set	16302
   361  0000                     _PWM6DCL	set	16232
   362  0000                     _PWM6DCH	set	16233
   363  0000                     _PWM6CON	set	16234
   364  0000                     _PWM5DCL	set	16236
   365  0000                     _PWM5DCH	set	16237
   366  0000                     _PWM5CON	set	16238
   367  0000                     _PWM8DCL	set	16224
   368  0000                     _PWM8DCH	set	16225
   369  0000                     _PWM8CON	set	16226
   370  0000                     _PWM7DCL	set	16228
   371  0000                     _PWM7DCH	set	16229
   372  0000                     _PWM7CON	set	16230
   373  0000                     _PR4	set	16287
   374  0000                     _TMR4	set	16286
   375  0000                     _T4CONbits	set	16288
   376  0000                     _T4RSTbits	set	16291
   377  0000                     _T4HLTbits	set	16289
   378  0000                     _T4CON	set	16288
   379  0000                     _T4TMR	set	16286
   380  0000                     _T4PR	set	16287
   381  0000                     _T4RST	set	16291
   382  0000                     _T4HLT	set	16289
   383  0000                     _T4CLKCON	set	16290
   384  0000                     _T3GCONbits	set	16295
   385  0000                     _T3CONbits	set	16294
   386  0000                     _T3CON	set	16294
   387  0000                     _TMR3L	set	16292
   388  0000                     _TMR3H	set	16293
   389  0000                     _T3CLK	set	16297
   390  0000                     _T3GATE	set	16296
   391  0000                     _T3GCON	set	16295
   392  0000                     _T5GCONbits	set	16283
   393  0000                     _T5CONbits	set	16282
   394  0000                     _T5CON	set	16282
   395  0000                     _TMR5L	set	16280
   396  0000                     _TMR5H	set	16281
   397  0000                     _T5CLK	set	16285
   398  0000                     _T5GATE	set	16284
   399  0000                     _T5GCON	set	16283
   400  0000                     _CCPR4L	set	16240
   401  0000                     _CCPR4H	set	16241
   402  0000                     _CCP4CAP	set	16243
   403  0000                     _CCP4CON	set	16242
   404  0000                     _CCPR3L	set	16244
   405  0000                     _CCPR3H	set	16245
   406  0000                     _CCP3CAP	set	16247
   407  0000                     _CCP3CON	set	16246
   408  0000                     _PORTDbits	set	16333
   409  0000                     _IVTBASEL	set	16341
   410  0000                     _IVTBASEH	set	16342
   411  0000                     _IVTBASEU	set	16343
   412  0000                     _IVTLOCKbits	set	16340
   413  0000                     _IVTLOCK	set	16340
   414  0000                     _INTCON0bits	set	16338
   415  0000                     _TRISD	set	16325
   416  0000                     _TRISC	set	16324
   417  0000                     _TRISB	set	16323
   418  0000                     _TRISA	set	16322
   419  0000                     _TRISE	set	16326
   420  0000                     _LATC	set	16316
   421  0000                     _LATB	set	16315
   422  0000                     _LATA	set	16314
   423  0000                     _LATD	set	16317
   424  0000                     _LATE	set	16318
   425  0000                     _GIE	set	130711
   426                           
   427                           	psect	smallconst
   428  001000                     __psmallconst:
   429                           	callstack 0
   430  001000  00                 	db	0
   431  001001                     STR_1:
   432                           
   433                           ; BSR set to: 0
   434  001001  42                 	db	66	;'B'
   435  001002  61                 	db	97	;'a'
   436  001003  74                 	db	116	;'t'
   437  001004  74                 	db	116	;'t'
   438  001005  65                 	db	101	;'e'
   439  001006  72                 	db	114	;'r'
   440  001007  79                 	db	121	;'y'
   441  001008  20                 	db	32
   442  001009  4C                 	db	76	;'L'
   443  00100A  6F                 	db	111	;'o'
   444  00100B  77                 	db	119	;'w'
   445  00100C  00                 	db	0
   446  00100D  00                 	db	0	; dummy byte at the end
   447  0000                     
   448                           ; #config settings
   449                           
   450                           	psect	cinit
   451  003496                     __pcinit:
   452                           	callstack 0
   453  003496                     start_initialization:
   454                           	callstack 0
   455  003496                     __initialization:
   456                           	callstack 0
   457                           
   458                           ; Initialize objects allocated to COMRAM (1 bytes)
   459                           ; load TBLPTR registers with __pidataCOMRAM
   460  003496  0E22               	movlw	low __pidataCOMRAM
   461  003498  6EF6               	movwf	tblptrl,c
   462  00349A  0E3B               	movlw	high __pidataCOMRAM
   463  00349C  6EF7               	movwf	tblptrh,c
   464  00349E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   465  0034A0  6EF8               	movwf	tblptru,c
   466  0034A2  0009               	tblrd		*+	;fetch initializer
   467  0034A4  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   468                           
   469                           ; Clear objects allocated to BANK0 (103 bytes)
   470  0034AA  EE00  F060         	lfsr	0,__pbssBANK0
   471  0034AE  0E67               	movlw	103
   472  0034B0                     clear_0:
   473  0034B0  6AEE               	clrf	postinc0,c
   474  0034B2  06E8               	decf	wreg,f,c
   475  0034B4  E1FD               	bnz	clear_0
   476                           
   477                           ; Clear objects allocated to COMRAM (18 bytes)
   478  0034B6  EE00  F03A         	lfsr	0,__pbssCOMRAM
   479  0034BA  0E12               	movlw	18
   480  0034BC                     clear_1:
   481  0034BC  6AEE               	clrf	postinc0,c
   482  0034BE  06E8               	decf	wreg,f,c
   483  0034C0  E1FD               	bnz	clear_1
   484                           
   485                           ;
   486                           ; Setup IVTBASE
   487                           ;
   488  0034C2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   489  0034C4  6ED5               	movwf	213,c
   490  0034C6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   491  0034C8  6ED6               	movwf	214,c
   492  0034CA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   493  0034CC  6ED7               	movwf	215,c
   494  0034CE                     end_of_initialization:
   495                           	callstack 0
   496  0034CE                     __end_of__initialization:
   497                           	callstack 0
   498  0034CE  0100               	movlb	0
   499  0034D0  EFDD  F01C         	goto	_main	;jump to C main() function
   500                           
   501                           	psect	bssCOMRAM
   502  00003A                     __pbssCOMRAM:
   503                           	callstack 0
   504  00003A                     _oldDistLeft:
   505                           	callstack 0
   506  00003A                     	ds	2
   507  00003C                     TMR4_ISR@CountCallBack:
   508                           	callstack 0
   509  00003C                     	ds	2
   510  00003E                     _delay:
   511                           	callstack 0
   512  00003E                     	ds	1
   513  00003F                     _curveMode:
   514                           	callstack 0
   515  00003F                     	ds	1
   516  000040                     _uart1RxLastError:
   517                           	callstack 0
   518  000040                     	ds	1
   519  000041                     _uart1RxCount:
   520                           	callstack 0
   521  000041                     	ds	1
   522  000042                     _uart1RxTail:
   523                           	callstack 0
   524  000042                     	ds	1
   525  000043                     _uart1RxHead:
   526                           	callstack 0
   527  000043                     	ds	1
   528  000044                     _uart1TxTail:
   529                           	callstack 0
   530  000044                     	ds	1
   531  000045                     _uart1TxHead:
   532                           	callstack 0
   533  000045                     	ds	1
   534  000046                     _smtPeriod:
   535                           	callstack 0
   536  000046                     	ds	4
   537  00004A                     _distFront:
   538                           	callstack 0
   539  00004A                     	ds	2
   540                           
   541                           	psect	dataCOMRAM
   542  00004C                     __pdataCOMRAM:
   543                           	callstack 0
   544  00004C                     _driveMode:
   545                           	callstack 0
   546  00004C                     	ds	1
   547                           
   548                           	psect	bssBANK0
   549  000060                     __pbssBANK0:
   550                           	callstack 0
   551  000060                     	ds	32
   552  000080                     _uart1RxStatusBuffer:
   553                           	callstack 0
   554  000080                     	ds	8
   555  000088                     _uart1RxBuffer:
   556                           	callstack 0
   557  000088                     	ds	8
   558  000090                     _uart1TxBuffer:
   559                           	callstack 0
   560  000090                     	ds	8
   561  000098                     _smtWay:
   562                           	callstack 0
   563  000098                     	ds	4
   564  00009C                     _smtDuty:
   565                           	callstack 0
   566  00009C                     	ds	4
   567  0000A0                     _nout:
   568                           	callstack 0
   569  0000A0                     	ds	2
   570  0000A2                     _width:
   571                           	callstack 0
   572  0000A2                     	ds	2
   573  0000A4                     _prec:
   574                           	callstack 0
   575  0000A4                     	ds	2
   576  0000A6                     _flags:
   577                           	callstack 0
   578  0000A6                     	ds	2
   579  0000A8                     _BatteryVolt:
   580                           	callstack 0
   581  0000A8                     	ds	2
   582  0000AA                     _reverseTime:
   583                           	callstack 0
   584  0000AA                     	ds	2
   585  0000AC                     _actMotorPow:
   586                           	callstack 0
   587  0000AC                     	ds	2
   588  0000AE                     _oldSpeed:
   589                           	callstack 0
   590  0000AE                     	ds	2
   591  0000B0                     _currentSpeed:
   592                           	callstack 0
   593  0000B0                     	ds	2
   594  0000B2                     _setSpeed:
   595                           	callstack 0
   596  0000B2                     	ds	2
   597  0000B4                     _motPow:
   598                           	callstack 0
   599  0000B4                     	ds	2
   600  0000B6                     _middleOffSet:
   601                           	callstack 0
   602  0000B6                     	ds	2
   603  0000B8                     _battCheckCount:
   604                           	callstack 0
   605  0000B8                     	ds	2
   606  0000BA                     _oldDistRight:
   607                           	callstack 0
   608  0000BA                     	ds	2
   609  0000BC                     _reverseCount:
   610                           	callstack 0
   611  0000BC                     	ds	2
   612  0000BE                     _distRightM:
   613                           	callstack 0
   614  0000BE                     	ds	2
   615  0000C0                     _distRight:
   616                           	callstack 0
   617  0000C0                     	ds	2
   618  0000C2                     _distLeftM:
   619                           	callstack 0
   620  0000C2                     	ds	2
   621  0000C4                     _distLeft:
   622                           	callstack 0
   623  0000C4                     	ds	2
   624  0000C6                     _cycle10ms:
   625                           	callstack 0
   626  0000C6                     	ds	1
   627                           
   628                           	psect	cstackBANK1
   629  000100                     __pcstackBANK1:
   630                           	callstack 0
   631  000100                     ___fltol@sign1:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x0
   635  000100                     	ds	1
   636  000101                     ___fltol@exp1:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x1
   640  000101                     	ds	1
   641  000102                     ??_calcSteering:
   642  000102                     ??_calcSpeed:
   643  000102                     ??_calcMotorPow:
   644                           
   645                           ; 1 bytes @ 0x2
   646  000102                     	ds	2
   647  000104                     calcMotorPow@setSpeedDelta:
   648                           	callstack 0
   649  000104                     _calcSteering$4002:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x4
   653  000104                     	ds	2
   654  000106                     calcSteering@delta:
   655                           	callstack 0
   656  000106                     calcSpeed@speed:
   657                           	callstack 0
   658  000106                     calcMotorPow@oldSpeedDelta:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x6
   662  000106                     	ds	2
   663  000108                     calcMotorPow@addMPow:
   664                           	callstack 0
   665  000108                     startAccell@MPow:
   666                           	callstack 0
   667                           
   668                           ; 4 bytes @ 0x8
   669  000108                     	ds	4
   670                           
   671                           	psect	cstackBANK0
   672  0000C7                     __pcstackBANK0:
   673                           	callstack 0
   674  0000C7                     ___flmul@sign:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x0
   678  0000C7                     	ds	1
   679  0000C8                     ___flmul@aexp:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x1
   683  0000C8                     	ds	1
   684  0000C9                     ___flmul@grs:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x2
   688  0000C9                     	ds	4
   689  0000CD                     ___flmul@bexp:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x6
   693  0000CD                     	ds	1
   694  0000CE                     ___flmul@prod:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x7
   698  0000CE                     	ds	4
   699  0000D2                     ___flmul@temp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0xB
   703  0000D2                     	ds	2
   704  0000D4                     ?___fladd:
   705                           	callstack 0
   706  0000D4                     ___fladd@b:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0xD
   710  0000D4                     	ds	4
   711  0000D8                     ___fladd@a:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x11
   715  0000D8                     	ds	4
   716  0000DC                     ___fladd@signs:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x15
   720  0000DC                     	ds	1
   721  0000DD                     ___fladd@aexp:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x16
   725  0000DD                     	ds	1
   726  0000DE                     ___fladd@bexp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x17
   730  0000DE                     	ds	1
   731  0000DF                     ___fladd@grs:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x18
   735  0000DF                     	ds	1
   736  0000E0                     ?___fltol:
   737                           	callstack 0
   738  0000E0                     ___fltol@f1:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x19
   742  0000E0                     	ds	4
   743  0000E4                     ??___fltol:
   744                           
   745                           ; 1 bytes @ 0x1D
   746  0000E4                     	ds	4
   747                           
   748                           	psect	cstackCOMRAM
   749  000001                     __pcstackCOMRAM:
   750                           	callstack 0
   751  000001                     CCP3_DefaultCallBack@capturedValue:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x0
   755  000001                     	ds	2
   756  000003                     CCP3_CaptureISR@module:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x2
   760  000003                     	ds	2
   761  000005                     CCP4_DefaultCallBack@capturedValue:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x4
   765  000005                     	ds	2
   766  000007                     CCP4_CaptureISR@module:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x6
   770  000007                     	ds	2
   771  000009                     ?_TMR5_ReadTimer:
   772                           	callstack 0
   773  000009                     TMR5_WriteTimer@timerVal:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x8
   777  000009                     	ds	2
   778  00000B                     ??_TMR5_ReadTimer:
   779  00000B                     
   780                           ; 1 bytes @ 0xA
   781  00000B                     	ds	2
   782  00000D                     TMR5_ReadTimer@readVal:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0xC
   786  00000D                     	ds	2
   787  00000F                     TMR5_ReadTimer@readValHigh:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0xE
   791  00000F                     	ds	1
   792  000010                     TMR5_ReadTimer@readValLow:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0xF
   796  000010                     	ds	1
   797  000011                     ??_UART1_tx_vect_isr:
   798  000011                     
   799                           ; 1 bytes @ 0x10
   800  000011                     	ds	1
   801  000012                     ??_UART1_rx_vect_isr:
   802                           
   803                           ; 1 bytes @ 0x11
   804  000012                     	ds	1
   805  000013                     ??_TMR4_ISR:
   806                           
   807                           ; 1 bytes @ 0x12
   808  000013                     	ds	1
   809  000014                     ??_TMR3_Initialize:
   810  000014                     ??_getCurve:
   811  000014                     ?_ADCC_GetSingleConversion:
   812                           	callstack 0
   813  000014                     ?___awdiv:
   814                           	callstack 0
   815  000014                     ?___aldiv:
   816                           	callstack 0
   817  000014                     UART1_Write@txData:
   818                           	callstack 0
   819  000014                     INTERRUPT_Initialize@state:
   820                           	callstack 0
   821  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   822                           	callstack 0
   823  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   824                           	callstack 0
   825  000014                     UART1_SetErrorHandler@interruptHandler:
   826                           	callstack 0
   827  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
   828                           	callstack 0
   829  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
   830                           	callstack 0
   831  000014                     CCP3_SetCallBack@customCallBack:
   832                           	callstack 0
   833  000014                     CCP4_SetCallBack@customCallBack:
   834                           	callstack 0
   835  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
   836                           	callstack 0
   837  000014                     TMR4_SetInterruptHandler@InterruptHandler:
   838                           	callstack 0
   839  000014                     PWM7_LoadDutyValue@dutyValue:
   840                           	callstack 0
   841  000014                     PWM8_LoadDutyValue@dutyValue:
   842                           	callstack 0
   843  000014                     PWM5_LoadDutyValue@dutyValue:
   844                           	callstack 0
   845  000014                     PWM6_LoadDutyValue@dutyValue:
   846                           	callstack 0
   847  000014                     ___awdiv@dividend:
   848                           	callstack 0
   849  000014                     ___aldiv@dividend:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x13
   853  000014                     	ds	1
   854  000015                     putch@txData:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x14
   858  000015                     	ds	1
   859  000016                     ??_TMR5_Initialize:
   860  000016                     ??_PWM7_LoadDutyValue:
   861  000016                     ??_PWM8_LoadDutyValue:
   862  000016                     ??_PWM5_LoadDutyValue:
   863  000016                     ??_PWM6_LoadDutyValue:
   864  000016                     ??_ADCC_GetSingleConversion:
   865  000016                     getCurve@deltaRight:
   866                           	callstack 0
   867  000016                     ___awdiv@divisor:
   868                           	callstack 0
   869  000016                     fputc@c:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x15
   873  000016                     	ds	2
   874  000018                     ADCC_GetSingleConversion@channel:
   875                           	callstack 0
   876  000018                     ___awdiv@counter:
   877                           	callstack 0
   878  000018                     getCurve@deltaLeft:
   879                           	callstack 0
   880  000018                     setMotor@motorPower:
   881                           	callstack 0
   882  000018                     fputc@fp:
   883                           	callstack 0
   884  000018                     ___aldiv@divisor:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x17
   888  000018                     	ds	1
   889  000019                     ___awdiv@sign:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x18
   893  000019                     	ds	1
   894  00001A                     ??_setMotor:
   895  00001A                     ??_fputc:
   896  00001A                     ___awdiv@quotient:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x19
   900  00001A                     	ds	2
   901  00001C                     ?___xxtofl:
   902                           	callstack 0
   903  00001C                     ___aldiv@counter:
   904                           	callstack 0
   905  00001C                     setSteering@steering:
   906                           	callstack 0
   907  00001C                     ___xxtofl@val:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x1B
   911  00001C                     	ds	1
   912  00001D                     ___aldiv@sign:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x1C
   916  00001D                     	ds	1
   917  00001E                     setSteering@steeringMode:
   918                           	callstack 0
   919  00001E                     ___aldiv@quotient:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x1D
   923  00001E                     	ds	1
   924  00001F                     ??_setSteering:
   925  00001F                     ?_vfpfcnvrt:
   926                           	callstack 0
   927  00001F                     vfpfcnvrt@fp:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x1E
   931  00001F                     	ds	1
   932  000020                     ??___xxtofl:
   933                           
   934                           ; 1 bytes @ 0x1F
   935  000020                     	ds	1
   936  000021                     setSteering@steeringF:
   937                           	callstack 0
   938  000021                     vfpfcnvrt@fmt:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x20
   942  000021                     	ds	1
   943  000022                     ?_actSpeed:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x21
   947  000022                     	ds	1
   948  000023                     setSteering@steeringB:
   949                           	callstack 0
   950  000023                     vfpfcnvrt@ap:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x22
   954  000023                     	ds	1
   955  000024                     ___xxtofl@sign:
   956                           	callstack 0
   957  000024                     actSpeed@speed:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x23
   961  000024                     	ds	1
   962  000025                     ?_vfprintf:
   963                           	callstack 0
   964  000025                     ___xxtofl@exp:
   965                           	callstack 0
   966  000025                     vfprintf@fp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x24
   970  000025                     	ds	1
   971  000026                     ___xxtofl@arg:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x25
   975  000026                     	ds	1
   976  000027                     vfprintf@fmt:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x26
   980  000027                     	ds	2
   981  000029                     vfprintf@ap:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x28
   985  000029                     	ds	1
   986  00002A                     ?___flmul:
   987                           	callstack 0
   988  00002A                     ___flge@ff1:
   989                           	callstack 0
   990  00002A                     ___flmul@b:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x29
   994  00002A                     	ds	1
   995  00002B                     vfprintf@cfmt:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x2A
   999  00002B                     	ds	2
  1000  00002D                     ?_printf:
  1001                           	callstack 0
  1002  00002D                     printf@fmt:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x2C
  1006  00002D                     	ds	1
  1007  00002E                     ___flge@ff2:
  1008                           	callstack 0
  1009  00002E                     ___flmul@a:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x2D
  1013  00002E                     	ds	1
  1014  00002F                     printf@ap:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x2E
  1018  00002F                     	ds	3
  1019  000032                     ??___flmul:
  1020  000032                     ??___flge:
  1021                           
  1022                           ; 1 bytes @ 0x31
  1023  000032                     	ds	4
  1024  000036                     ??___fladd:
  1025                           
  1026                           ; 1 bytes @ 0x35
  1027  000036                     	ds	4
  1028  00003A                     
  1029                           ; 1 bytes @ 0x39
  1030 ;;
  1031 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1032 ;;
  1033 ;; *************** function _main *****************
  1034 ;; Defined at:
  1035 ;;		line 8 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels required when called: 15
  1055 ;; This function calls:
  1056 ;;		_SYSTEM_Initialize
  1057 ;;		_TMR4_SetInterruptHandler
  1058 ;;		_loop
  1059 ;; This function is called by:
  1060 ;;		Startup code after reset
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text0
  1065  0039BA                     __ptext0:
  1066                           	callstack 0
  1067  0039BA                     _main:
  1068                           	callstack 16
  1069  0039BA                     
  1070                           ;main.c: 9:     SYSTEM_Initialize();
  1071  0039BA  ECB8  F019         	call	_SYSTEM_Initialize	;wreg free
  1072  0039BE                     
  1073                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1074  0039BE  8ED2               	bsf	210,7,c	;volatile
  1075  0039C0                     
  1076                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1077  0039C0  8CD2               	bsf	210,6,c	;volatile
  1078                           
  1079                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1080  0039C2  0E12               	movlw	low _TMR4_10msISR
  1081  0039C4  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1082  0039C6  0E3B               	movlw	high _TMR4_10msISR
  1083  0039C8  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1084  0039CA  EC77  F01D         	call	_TMR4_SetInterruptHandler	;wreg free
  1085  0039CE                     l6349:
  1086                           
  1087                           ;main.c: 15:         loop();
  1088  0039CE  ECD3  F012         	call	_loop	;wreg free
  1089  0039D2  EFE7  F01C         	goto	l6349
  1090  0039D6  EF57  F000         	goto	start
  1091  0039DA                     __end_of_main:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _loop *****************
  1095 ;; Defined at:
  1096 ;;		line 19 in file "main.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 14
  1117 ;; This function calls:
  1118 ;;		___flge
  1119 ;;		___xxtofl
  1120 ;;		_calcMotorPow
  1121 ;;		_calcSpeed
  1122 ;;		_calcSteering
  1123 ;;		_checkBatt
  1124 ;;		_getBatteryVoltage
  1125 ;;		_getCurve
  1126 ;;		_getReverse
  1127 ;;		_printf
  1128 ;;		_setMotor
  1129 ;;		_setSteering
  1130 ;;		_startAccell
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text1
  1137  0025A6                     __ptext1:
  1138                           	callstack 0
  1139  0025A6                     _loop:
  1140                           	callstack 16
  1141  0025A6                     
  1142                           ;main.c: 20:     setMotor(0);
  1143  0025A6  0E00               	movlw	0
  1144  0025A8  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1145  0025AA  0E00               	movlw	0
  1146  0025AC  6E18               	movwf	setMotor@motorPower^0,c
  1147  0025AE  EC0D  F016         	call	_setMotor	;wreg free
  1148                           
  1149                           ;main.c: 21:     setSteering(0, Front);
  1150  0025B2  0E00               	movlw	0
  1151  0025B4  6E1D               	movwf	(setSteering@steering+1)^0,c
  1152  0025B6  0E00               	movlw	0
  1153  0025B8  6E1C               	movwf	setSteering@steering^0,c
  1154  0025BA  0E03               	movlw	3
  1155  0025BC  6E1E               	movwf	setSteering@steeringMode^0,c
  1156  0025BE  ECBB  F010         	call	_setSteering	;wreg free
  1157  0025C2                     l1224:
  1158  0025C2  B8CB               	btfsc	203,4,c	;volatile
  1159  0025C4  EFE6  F012         	goto	u5241
  1160  0025C8  EFE8  F012         	goto	u5240
  1161  0025CC                     u5241:
  1162  0025CC  EFE1  F012         	goto	l1224
  1163  0025D0                     u5240:
  1164  0025D0                     l6301:
  1165  0025D0  0100               	movlb	0	; () banked
  1166  0025D2  51C6               	movf	_cycle10ms& (0+255),w,b	;volatile
  1167  0025D4  B4D8               	btfsc	status,2,c
  1168  0025D6  EFEF  F012         	goto	u5251
  1169  0025DA  EFF1  F012         	goto	u5250
  1170  0025DE                     u5251:
  1171  0025DE  EFE8  F012         	goto	l6301
  1172  0025E2                     u5250:
  1173  0025E2                     
  1174                           ; BSR set to: 0
  1175                           ;main.c: 26:         cycle10ms = 0;
  1176  0025E2  0E00               	movlw	0
  1177  0025E4  6FC6               	movwf	_cycle10ms& (0+255),b	;volatile
  1178  0025E6                     
  1179                           ; BSR set to: 0
  1180                           ;main.c: 28:         getBatteryVoltage();
  1181  0025E6  EC45  F01D         	call	_getBatteryVoltage	;wreg free
  1182  0025EA                     
  1183                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1184  0025EA  C0A8  F01C         	movff	_BatteryVolt,___xxtofl@val
  1185  0025EE  C0A9  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1186  0025F2  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1187  0025F4  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1188  0025F6  0E00               	movlw	0
  1189  0025F8  ECE1  F00F         	call	___xxtofl
  1190  0025FC  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  1191  002600  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  1192  002604  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  1193  002608  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  1194  00260C  0E7B               	movlw	123
  1195  00260E  6E2E               	movwf	___flge@ff2^0,c
  1196  002610  0E14               	movlw	20
  1197  002612  6E2F               	movwf	(___flge@ff2+1)^0,c
  1198  002614  0E2E               	movlw	46
  1199  002616  6E30               	movwf	(___flge@ff2+2)^0,c
  1200  002618  0E45               	movlw	69
  1201  00261A  6E31               	movwf	(___flge@ff2+3)^0,c
  1202  00261C  EC0D  F015         	call	___flge	;wreg free
  1203  002620  A0D8               	btfss	status,0,c
  1204  002622  EF15  F013         	goto	u5261
  1205  002626  EF17  F013         	goto	u5260
  1206  00262A                     u5261:
  1207  00262A  EFE8  F012         	goto	l6301
  1208  00262E                     u5260:
  1209  00262E                     
  1210                           ;main.c: 31:     startAccell();
  1211  00262E  EC3A  F012         	call	_startAccell	;wreg free
  1212  002632                     
  1213                           ;main.c: 32:     driveMode = Straight;
  1214  002632  0E01               	movlw	1
  1215  002634  6E4C               	movwf	_driveMode^0,c
  1216  002636                     
  1217                           ;main.c: 33:     curveMode = OutCurve;
  1218  002636  0E00               	movlw	0
  1219  002638  6E3F               	movwf	_curveMode^0,c
  1220  00263A                     
  1221                           ;main.c: 34:     oldDistLeft = distLeft;
  1222  00263A  C0C4  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  1223  00263E  C0C5  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1224  002642                     
  1225                           ;main.c: 35:     oldDistRight = distRight;
  1226  002642  C0C0  F0BA         	movff	_distRight,_oldDistRight	;volatile
  1227  002646  C0C1  F0BB         	movff	_distRight+1,_oldDistRight+1	;volatile
  1228  00264A                     
  1229                           ;main.c: 36:     cycle10ms = 0;
  1230  00264A  0E00               	movlw	0
  1231  00264C  0100               	movlb	0	; () banked
  1232  00264E  6FC6               	movwf	_cycle10ms& (0+255),b	;volatile
  1233  002650                     l6321:
  1234  002650  0100               	movlb	0	; () banked
  1235  002652  51C6               	movf	_cycle10ms& (0+255),w,b	;volatile
  1236  002654  B4D8               	btfsc	status,2,c
  1237  002656  EF2F  F013         	goto	u5271
  1238  00265A  EF31  F013         	goto	u5270
  1239  00265E                     u5271:
  1240  00265E  EF28  F013         	goto	l6321
  1241  002662                     u5270:
  1242  002662                     
  1243                           ; BSR set to: 0
  1244                           ;main.c: 39:         cycle10ms = 0;
  1245  002662  0E00               	movlw	0
  1246  002664  6FC6               	movwf	_cycle10ms& (0+255),b	;volatile
  1247  002666                     
  1248                           ; BSR set to: 0
  1249                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1250  002666  BACB               	btfsc	203,5,c	;volatile
  1251  002668  EF38  F013         	goto	u5281
  1252  00266C  EF3A  F013         	goto	u5280
  1253  002670                     u5281:
  1254  002670  EF4C  F013         	goto	l6331
  1255  002674                     u5280:
  1256  002674                     
  1257                           ; BSR set to: 0
  1258                           ;main.c: 42:             setSpeed = 0;
  1259  002674  0E00               	movlw	0
  1260  002676  6FB3               	movwf	(_setSpeed+1)& (0+255),b
  1261  002678  0E00               	movlw	0
  1262  00267A  6FB2               	movwf	_setSpeed& (0+255),b
  1263                           
  1264                           ;main.c: 43:             actMotorPow = 0;
  1265  00267C  0E00               	movlw	0
  1266  00267E  6FAD               	movwf	(_actMotorPow+1)& (0+255),b
  1267  002680  0E00               	movlw	0
  1268  002682  6FAC               	movwf	_actMotorPow& (0+255),b
  1269  002684                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 44:             setSteering(0, Front);
  1272  002684  0E00               	movlw	0
  1273  002686  6E1D               	movwf	(setSteering@steering+1)^0,c
  1274  002688  0E00               	movlw	0
  1275  00268A  6E1C               	movwf	setSteering@steering^0,c
  1276  00268C  0E03               	movlw	3
  1277  00268E  6E1E               	movwf	setSteering@steeringMode^0,c
  1278  002690  ECBB  F010         	call	_setSteering	;wreg free
  1279                           
  1280                           ;main.c: 45:             break;
  1281  002694  EF6A  F013         	goto	l1240
  1282  002698                     l6331:
  1283                           
  1284                           ; BSR set to: 0
  1285                           ;main.c: 48:         if (checkBatt()) {
  1286  002698  EC8D  F018         	call	_checkBatt	;wreg free
  1287  00269C  0900               	iorlw	0
  1288  00269E  B4D8               	btfsc	status,2,c
  1289  0026A0  EF54  F013         	goto	u5291
  1290  0026A4  EF56  F013         	goto	u5290
  1291  0026A8                     u5291:
  1292  0026A8  EF5E  F013         	goto	l6335
  1293  0026AC                     u5290:
  1294  0026AC                     
  1295                           ;main.c: 49:             printf("Battery Low");
  1296  0026AC  0E01               	movlw	low STR_1
  1297  0026AE  6E2D               	movwf	printf@fmt^0,c
  1298  0026B0  0E10               	movlw	high STR_1
  1299  0026B2  6E2E               	movwf	(printf@fmt+1)^0,c
  1300  0026B4  ECA6  F01C         	call	_printf	;wreg free
  1301                           
  1302                           ;main.c: 50:             break;
  1303  0026B8  EF6A  F013         	goto	l1240
  1304  0026BC                     l6335:
  1305                           
  1306                           ;main.c: 54:         getCurve();
  1307  0026BC  EC90  F00C         	call	_getCurve	;wreg free
  1308                           
  1309                           ;main.c: 55:         getReverse();
  1310  0026C0  EC8F  F015         	call	_getReverse	;wreg free
  1311  0026C4                     
  1312                           ;main.c: 57:         calcSteering();
  1313  0026C4  ECB6  F00D         	call	_calcSteering	;wreg free
  1314  0026C8                     
  1315                           ;main.c: 58:         calcSpeed();
  1316  0026C8  ECD6  F00E         	call	_calcSpeed	;wreg free
  1317  0026CC                     
  1318                           ;main.c: 59:         calcMotorPow();
  1319  0026CC  EC8D  F011         	call	_calcMotorPow	;wreg free
  1320  0026D0  EF28  F013         	goto	l6321
  1321  0026D4                     l1240:
  1322  0026D4  0012               	return		;funcret
  1323  0026D6                     __end_of_loop:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _startAccell *****************
  1327 ;; Defined at:
  1328 ;;		line 99 in file "main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  MPow            4    8[BANK1 ] float 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1343 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;Total ram usage:        4 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 11
  1349 ;; This function calls:
  1350 ;;		___flge
  1351 ;;		___flmul
  1352 ;;		___fltol
  1353 ;;		___xxtofl
  1354 ;;		_calcSteering
  1355 ;;		_setMotor
  1356 ;;		_setSteering
  1357 ;; This function is called by:
  1358 ;;		_loop
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text2
  1363  002474                     __ptext2:
  1364                           	callstack 0
  1365  002474                     _startAccell:
  1366                           	callstack 18
  1367  002474                     
  1368                           ;main.c: 100:     setSteering(0, Front);
  1369  002474  0E00               	movlw	0
  1370  002476  6E1D               	movwf	(setSteering@steering+1)^0,c
  1371  002478  0E00               	movlw	0
  1372  00247A  6E1C               	movwf	setSteering@steering^0,c
  1373  00247C  0E03               	movlw	3
  1374  00247E  6E1E               	movwf	setSteering@steeringMode^0,c
  1375  002480  ECBB  F010         	call	_setSteering	;wreg free
  1376  002484                     
  1377                           ;main.c: 101:     driveMode = Accel;
  1378  002484  0E00               	movlw	0
  1379  002486  6E4C               	movwf	_driveMode^0,c
  1380  002488                     
  1381                           ;main.c: 103:     actMotorPow = (40);
  1382  002488  0E00               	movlw	0
  1383  00248A  0100               	movlb	0	; () banked
  1384  00248C  6FAD               	movwf	(_actMotorPow+1)& (0+255),b
  1385  00248E  0E28               	movlw	40
  1386  002490  6FAC               	movwf	_actMotorPow& (0+255),b
  1387                           
  1388                           ;main.c: 104:     float MPow = actMotorPow;
  1389  002492  C0AC  F01C         	movff	_actMotorPow,___xxtofl@val
  1390  002496  C0AD  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1391  00249A  0E00               	movlw	0
  1392  00249C  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1393  00249E  0EFF               	movlw	-1
  1394  0024A0  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1395  0024A2  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1396  0024A4  0E01               	movlw	1
  1397  0024A6  ECE1  F00F         	call	___xxtofl
  1398  0024AA  C01C  F108         	movff	?___xxtofl,startAccell@MPow
  1399  0024AE  C01D  F109         	movff	?___xxtofl+1,startAccell@MPow+1
  1400  0024B2  C01E  F10A         	movff	?___xxtofl+2,startAccell@MPow+2
  1401  0024B6  C01F  F10B         	movff	?___xxtofl+3,startAccell@MPow+3
  1402                           
  1403                           ;main.c: 106:     while (MPow < (230)) {
  1404  0024BA  EF9A  F012         	goto	l6173
  1405  0024BE                     l6163:
  1406                           
  1407                           ;main.c: 107:         MPow *= (1.1);
  1408  0024BE  C108  F02A         	movff	startAccell@MPow,___flmul@b
  1409  0024C2  C109  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1410  0024C6  C10A  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1411  0024CA  C10B  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1412  0024CE  0ECD               	movlw	205
  1413  0024D0  6E2E               	movwf	___flmul@a^0,c
  1414  0024D2  0ECC               	movlw	204
  1415  0024D4  6E2F               	movwf	(___flmul@a+1)^0,c
  1416  0024D6  0E8C               	movlw	140
  1417  0024D8  6E30               	movwf	(___flmul@a+2)^0,c
  1418  0024DA  0E3F               	movlw	63
  1419  0024DC  6E31               	movwf	(___flmul@a+3)^0,c
  1420  0024DE  EC68  F00A         	call	___flmul	;wreg free
  1421  0024E2  C02A  F108         	movff	?___flmul,startAccell@MPow
  1422  0024E6  C02B  F109         	movff	?___flmul+1,startAccell@MPow+1
  1423  0024EA  C02C  F10A         	movff	?___flmul+2,startAccell@MPow+2
  1424  0024EE  C02D  F10B         	movff	?___flmul+3,startAccell@MPow+3
  1425  0024F2                     
  1426                           ;main.c: 108:         actMotorPow = (int16_t) MPow;
  1427  0024F2  C108  F0E0         	movff	startAccell@MPow,___fltol@f1
  1428  0024F6  C109  F0E1         	movff	startAccell@MPow+1,___fltol@f1+1
  1429  0024FA  C10A  F0E2         	movff	startAccell@MPow+2,___fltol@f1+2
  1430  0024FE  C10B  F0E3         	movff	startAccell@MPow+3,___fltol@f1+3
  1431  002502  EC6B  F013         	call	___fltol	;wreg free
  1432  002506  C0E0  F0AC         	movff	?___fltol,_actMotorPow
  1433  00250A  C0E1  F0AD         	movff	?___fltol+1,_actMotorPow+1
  1434  00250E                     
  1435                           ;main.c: 109:         setMotor(actMotorPow);
  1436  00250E  C0AC  F018         	movff	_actMotorPow,setMotor@motorPower
  1437  002512  C0AD  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1438  002516  EC0D  F016         	call	_setMotor	;wreg free
  1439                           
  1440                           ;main.c: 111:         calcSteering();
  1441  00251A  ECB6  F00D         	call	_calcSteering	;wreg free
  1442  00251E                     
  1443                           ;main.c: 113:         cycle10ms = 0;
  1444  00251E  0E00               	movlw	0
  1445  002520  0100               	movlb	0	; () banked
  1446  002522  6FC6               	movwf	_cycle10ms& (0+255),b	;volatile
  1447  002524                     l6171:
  1448                           
  1449                           ; BSR set to: 0
  1450  002524  51C6               	movf	_cycle10ms& (0+255),w,b	;volatile
  1451  002526  B4D8               	btfsc	status,2,c
  1452  002528  EF98  F012         	goto	u5081
  1453  00252C  EF9A  F012         	goto	u5080
  1454  002530                     u5081:
  1455  002530  EF92  F012         	goto	l6171
  1456  002534                     u5080:
  1457  002534                     l6173:
  1458                           
  1459                           ;main.c: 106:     while (MPow < (230)) {
  1460  002534  C108  F02A         	movff	startAccell@MPow,___flge@ff1
  1461  002538  C109  F02B         	movff	startAccell@MPow+1,___flge@ff1+1
  1462  00253C  C10A  F02C         	movff	startAccell@MPow+2,___flge@ff1+2
  1463  002540  C10B  F02D         	movff	startAccell@MPow+3,___flge@ff1+3
  1464  002544  0E00               	movlw	0
  1465  002546  6E2E               	movwf	___flge@ff2^0,c
  1466  002548  0E00               	movlw	0
  1467  00254A  6E2F               	movwf	(___flge@ff2+1)^0,c
  1468  00254C  0E66               	movlw	102
  1469  00254E  6E30               	movwf	(___flge@ff2+2)^0,c
  1470  002550  0E43               	movlw	67
  1471  002552  6E31               	movwf	(___flge@ff2+3)^0,c
  1472  002554  EC0D  F015         	call	___flge	;wreg free
  1473  002558  A0D8               	btfss	status,0,c
  1474  00255A  EFB1  F012         	goto	u5091
  1475  00255E  EFB3  F012         	goto	u5090
  1476  002562                     u5091:
  1477  002562  EF5F  F012         	goto	l6163
  1478  002566                     u5090:
  1479  002566                     
  1480                           ;main.c: 117:     actMotorPow = (230);
  1481  002566  0E00               	movlw	0
  1482  002568  0100               	movlb	0	; () banked
  1483  00256A  6FAD               	movwf	(_actMotorPow+1)& (0+255),b
  1484  00256C  0EE6               	movlw	230
  1485  00256E  6FAC               	movwf	_actMotorPow& (0+255),b
  1486  002570                     
  1487                           ; BSR set to: 0
  1488                           ;main.c: 118:     setMotor(actMotorPow);
  1489  002570  C0AC  F018         	movff	_actMotorPow,setMotor@motorPower
  1490  002574  C0AD  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1491  002578  EC0D  F016         	call	_setMotor	;wreg free
  1492  00257C                     
  1493                           ;main.c: 121:     cycle10ms = 0;
  1494  00257C  0E00               	movlw	0
  1495  00257E  0100               	movlb	0	; () banked
  1496  002580  6FC6               	movwf	_cycle10ms& (0+255),b	;volatile
  1497                           
  1498                           ;main.c: 122:     while (cycle10ms < ((50) - (20))){
  1499  002582  EFC5  F012         	goto	l6183
  1500  002586                     l6181:
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;main.c: 123:         calcSteering();
  1504  002586  ECB6  F00D         	call	_calcSteering	;wreg free
  1505  00258A                     l6183:
  1506                           
  1507                           ;main.c: 122:     while (cycle10ms < ((50) - (20))){
  1508  00258A  0E1D               	movlw	29
  1509  00258C  0100               	movlb	0	; () banked
  1510  00258E  65C6               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  1511  002590  EFCC  F012         	goto	u5101
  1512  002594  EFCE  F012         	goto	u5100
  1513  002598                     u5101:
  1514  002598  EFC3  F012         	goto	l6181
  1515  00259C                     u5100:
  1516  00259C                     
  1517                           ; BSR set to: 0
  1518                           ;main.c: 125:     driveMode = Straight;
  1519  00259C  0E01               	movlw	1
  1520  00259E  6E4C               	movwf	_driveMode^0,c
  1521  0025A0                     
  1522                           ; BSR set to: 0
  1523                           ;main.c: 126:     calcSteering();
  1524  0025A0  ECB6  F00D         	call	_calcSteering	;wreg free
  1525  0025A4  0012               	return		;funcret
  1526  0025A6                     __end_of_startAccell:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _calcSteering *****************
  1530 ;; Defined at:
  1531 ;;		line 234 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  delta           2    6[BANK1 ] short 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;Total ram usage:        6 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 10
  1552 ;; This function calls:
  1553 ;;		___awdiv
  1554 ;;		___flmul
  1555 ;;		___fltol
  1556 ;;		___xxtofl
  1557 ;;		_setSteering
  1558 ;; This function is called by:
  1559 ;;		_loop
  1560 ;;		_startAccell
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text3
  1565  001B6C                     __ptext3:
  1566                           	callstack 0
  1567  001B6C                     _calcSteering:
  1568                           	callstack 18
  1569  001B6C                     
  1570                           ;main.c: 235:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  1571  001B6C  0EF3               	movlw	243
  1572  001B6E  6E2E               	movwf	___flmul@a^0,c
  1573  001B70  0E04               	movlw	4
  1574  001B72  6E2F               	movwf	(___flmul@a+1)^0,c
  1575  001B74  0EB5               	movlw	181
  1576  001B76  6E30               	movwf	(___flmul@a+2)^0,c
  1577  001B78  0E3F               	movlw	63
  1578  001B7A  6E31               	movwf	(___flmul@a+3)^0,c
  1579  001B7C  C0B6  F01C         	movff	_middleOffSet,___xxtofl@val
  1580  001B80  C0B7  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  1581  001B84  0E00               	movlw	0
  1582  001B86  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1583  001B88  0EFF               	movlw	-1
  1584  001B8A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1585  001B8C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1586  001B8E  0E01               	movlw	1
  1587  001B90  ECE1  F00F         	call	___xxtofl
  1588  001B94  C01C  F02A         	movff	?___xxtofl,___flmul@b
  1589  001B98  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  1590  001B9C  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  1591  001BA0  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  1592  001BA4  EC68  F00A         	call	___flmul	;wreg free
  1593  001BA8  C02A  F0E0         	movff	?___flmul,___fltol@f1
  1594  001BAC  C02B  F0E1         	movff	?___flmul+1,___fltol@f1+1
  1595  001BB0  C02C  F0E2         	movff	?___flmul+2,___fltol@f1+2
  1596  001BB4  C02D  F0E3         	movff	?___flmul+3,___fltol@f1+3
  1597  001BB8  EC6B  F013         	call	___fltol	;wreg free
  1598  001BBC  C0C0  F102         	movff	_distRight,??_calcSteering	;volatile
  1599  001BC0  C0C1  F103         	movff	_distRight+1,??_calcSteering+1	;volatile
  1600  001BC4  0101               	movlb	1	; () banked
  1601  001BC6  1F02               	comf	??_calcSteering& (0+255),f,b
  1602  001BC8  1F03               	comf	(??_calcSteering+1)& (0+255),f,b
  1603  001BCA  4B02               	infsnz	??_calcSteering& (0+255),f,b
  1604  001BCC  2B03               	incf	(??_calcSteering+1)& (0+255),f,b
  1605  001BCE  0100               	movlb	0	; () banked
  1606  001BD0  51E0               	movf	?___fltol& (0+255),w,b
  1607  001BD2  0101               	movlb	1	; () banked
  1608  001BD4  5F02               	subwf	??_calcSteering& (0+255),f,b
  1609  001BD6  0100               	movlb	0	; () banked
  1610  001BD8  51E1               	movf	(?___fltol+1)& (0+255),w,b
  1611  001BDA  0101               	movlb	1	; () banked
  1612  001BDC  5B03               	subwfb	(??_calcSteering+1)& (0+255),f,b
  1613  001BDE  0100               	movlb	0	; () banked
  1614  001BE0  51C4               	movf	_distLeft& (0+255),w,b	;volatile
  1615  001BE2  0101               	movlb	1	; () banked
  1616  001BE4  2502               	addwf	??_calcSteering& (0+255),w,b
  1617  001BE6  6F06               	movwf	calcSteering@delta& (0+255),b
  1618  001BE8  0100               	movlb	0	; () banked
  1619  001BEA  51C5               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1620  001BEC  0101               	movlb	1	; () banked
  1621  001BEE  2103               	addwfc	(??_calcSteering+1)& (0+255),w,b
  1622  001BF0  6F07               	movwf	(calcSteering@delta+1)& (0+255),b
  1623                           
  1624                           ;main.c: 239:     switch (driveMode) {
  1625  001BF2  EF23  F00E         	goto	l5875
  1626  001BF6                     l1319:
  1627  001BF6                     l5865:
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;main.c: 245:             if (delta > (25)) {
  1631  001BF6  BF07               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  1632  001BF8  EF07  F00E         	goto	u4581
  1633  001BFC  5107               	movf	(calcSteering@delta+1)& (0+255),w,b
  1634  001BFE  E109               	bnz	u4580
  1635  001C00  0E1A               	movlw	26
  1636  001C02  5D06               	subwf	calcSteering@delta& (0+255),w,b
  1637  001C04  A0D8               	btfss	status,0,c
  1638  001C06  EF07  F00E         	goto	u4581
  1639  001C0A  EF09  F00E         	goto	u4580
  1640  001C0E                     u4581:
  1641  001C0E  EF0F  F00E         	goto	l5869
  1642  001C12                     u4580:
  1643  001C12                     
  1644                           ; BSR set to: 1
  1645                           ;main.c: 246:                 delta = (25);
  1646  001C12  0E00               	movlw	0
  1647  001C14  6F07               	movwf	(calcSteering@delta+1)& (0+255),b
  1648  001C16  0E19               	movlw	25
  1649  001C18  6F06               	movwf	calcSteering@delta& (0+255),b
  1650                           
  1651                           ;main.c: 247:             } else if (delta < -(25)) {
  1652  001C1A  EFAC  F00E         	goto	l5901
  1653  001C1E                     l5869:
  1654                           
  1655                           ; BSR set to: 1
  1656  001C1E  AF07               	btfss	(calcSteering@delta+1)& (0+255),7,b
  1657  001C20  EF1B  F00E         	goto	u4591
  1658  001C24  0EE7               	movlw	231
  1659  001C26  5D06               	subwf	calcSteering@delta& (0+255),w,b
  1660  001C28  0EFF               	movlw	255
  1661  001C2A  5907               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  1662  001C2C  B0D8               	btfsc	status,0,c
  1663  001C2E  EF1B  F00E         	goto	u4591
  1664  001C32  EF1D  F00E         	goto	u4590
  1665  001C36                     u4591:
  1666  001C36  EF44  F00E         	goto	l1324
  1667  001C3A                     u4590:
  1668  001C3A                     
  1669                           ; BSR set to: 1
  1670                           ;main.c: 248:                 delta = -(25);
  1671  001C3A  0EFF               	movlw	255
  1672  001C3C  6F07               	movwf	(calcSteering@delta+1)& (0+255),b
  1673  001C3E  0EE7               	movlw	231
  1674  001C40  6F06               	movwf	calcSteering@delta& (0+255),b
  1675  001C42  EFAC  F00E         	goto	l5901
  1676  001C46                     l5875:
  1677                           
  1678                           ; BSR set to: 1
  1679  001C46  504C               	movf	_driveMode^0,w,c
  1680  001C48  6F02               	movwf	??_calcSteering& (0+255),b
  1681  001C4A  6B03               	clrf	(??_calcSteering+1)& (0+255),b
  1682                           
  1683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1684                           ; Switch size 1, requested type "simple"
  1685                           ; Number of cases is 1, Range of values is 0 to 0
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte            4     3 (average)
  1689                           ;	Chosen strategy is simple_byte
  1690  001C4C  5103               	movf	(??_calcSteering+1)& (0+255),w,b
  1691  001C4E  0A00               	xorlw	0	; case 0
  1692  001C50  B4D8               	btfsc	status,2,c
  1693  001C52  EF2D  F00E         	goto	l6521
  1694  001C56  EFAC  F00E         	goto	l5901
  1695  001C5A                     l6521:
  1696                           
  1697                           ; BSR set to: 1
  1698                           ; Switch size 1, requested type "simple"
  1699                           ; Number of cases is 5, Range of values is 0 to 6
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte           16     9 (average)
  1703                           ;	Chosen strategy is simple_byte
  1704  001C5A  5102               	movf	??_calcSteering& (0+255),w,b
  1705  001C5C  0A00               	xorlw	0	; case 0
  1706  001C5E  B4D8               	btfsc	status,2,c
  1707  001C60  EFFB  F00D         	goto	l1319
  1708  001C64  0A01               	xorlw	1	; case 1
  1709  001C66  B4D8               	btfsc	status,2,c
  1710  001C68  EFFB  F00D         	goto	l5865
  1711  001C6C  0A03               	xorlw	3	; case 2
  1712  001C6E  B4D8               	btfsc	status,2,c
  1713  001C70  EFFB  F00D         	goto	l5865
  1714  001C74  0A07               	xorlw	7	; case 5
  1715  001C76  B4D8               	btfsc	status,2,c
  1716  001C78  EFFB  F00D         	goto	l5865
  1717  001C7C  0A03               	xorlw	3	; case 6
  1718  001C7E  B4D8               	btfsc	status,2,c
  1719  001C80  EFFB  F00D         	goto	l5865
  1720  001C84  EFAC  F00E         	goto	l5901
  1721  001C88                     l1324:
  1722                           
  1723                           ; BSR set to: 1
  1724                           ;main.c: 255:     switch (driveMode) {
  1725  001C88  EFAC  F00E         	goto	l5901
  1726  001C8C                     l5877:
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;main.c: 257:             setSteering(delta, Ratio);
  1730  001C8C  C106  F01C         	movff	calcSteering@delta,setSteering@steering
  1731  001C90  C107  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1732  001C94  0E02               	movlw	2
  1733  001C96  6E1E               	movwf	setSteering@steeringMode^0,c
  1734  001C98  ECBB  F010         	call	_setSteering	;wreg free
  1735                           
  1736                           ;main.c: 258:             break;
  1737  001C9C  EFD5  F00E         	goto	l1339
  1738  001CA0                     l5879:
  1739                           
  1740                           ; BSR set to: 1
  1741                           ;main.c: 260:             setSteering(delta, Front);
  1742  001CA0  C106  F01C         	movff	calcSteering@delta,setSteering@steering
  1743  001CA4  C107  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1744  001CA8  0E03               	movlw	3
  1745  001CAA  6E1E               	movwf	setSteering@steeringMode^0,c
  1746  001CAC  ECBB  F010         	call	_setSteering	;wreg free
  1747                           
  1748                           ;main.c: 261:             break;
  1749  001CB0  EFD5  F00E         	goto	l1339
  1750  001CB4                     l5881:
  1751                           
  1752                           ; BSR set to: 1
  1753                           ;main.c: 263:             setSteering(delta / (2), Front);
  1754  001CB4  C106  F014         	movff	calcSteering@delta,___awdiv@dividend
  1755  001CB8  C107  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  1756  001CBC  0E00               	movlw	0
  1757  001CBE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1758  001CC0  0E02               	movlw	2
  1759  001CC2  6E16               	movwf	___awdiv@divisor^0,c
  1760  001CC4  ECE3  F016         	call	___awdiv	;wreg free
  1761  001CC8  C014  F104         	movff	?___awdiv,_calcSteering$4002
  1762  001CCC  C015  F105         	movff	?___awdiv+1,_calcSteering$4002+1
  1763                           
  1764                           ;main.c: 263:             setSteering(delta / (2), Front);
  1765  001CD0  C104  F01C         	movff	_calcSteering$4002,setSteering@steering
  1766  001CD4  C105  F01D         	movff	_calcSteering$4002+1,setSteering@steering+1
  1767  001CD8  0E03               	movlw	3
  1768  001CDA  6E1E               	movwf	setSteering@steeringMode^0,c
  1769  001CDC  ECBB  F010         	call	_setSteering	;wreg free
  1770                           
  1771                           ;main.c: 265:             break;
  1772  001CE0  EFD5  F00E         	goto	l1339
  1773  001CE4                     l5883:
  1774                           
  1775                           ; BSR set to: 1
  1776                           ;main.c: 267:             setSteering(-(60), Inverted);
  1777  001CE4  0EFF               	movlw	255
  1778  001CE6  6E1D               	movwf	(setSteering@steering+1)^0,c
  1779  001CE8  0EC4               	movlw	196
  1780  001CEA  6E1C               	movwf	setSteering@steering^0,c
  1781  001CEC  0E00               	movlw	0
  1782  001CEE  6E1E               	movwf	setSteering@steeringMode^0,c
  1783  001CF0  ECBB  F010         	call	_setSteering	;wreg free
  1784                           
  1785                           ;main.c: 268:             break;
  1786  001CF4  EFD5  F00E         	goto	l1339
  1787  001CF8                     l5885:
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;main.c: 270:             setSteering((60), Inverted);
  1791  001CF8  0E00               	movlw	0
  1792  001CFA  6E1D               	movwf	(setSteering@steering+1)^0,c
  1793  001CFC  0E3C               	movlw	60
  1794  001CFE  6E1C               	movwf	setSteering@steering^0,c
  1795  001D00  0E00               	movlw	0
  1796  001D02  6E1E               	movwf	setSteering@steeringMode^0,c
  1797  001D04  ECBB  F010         	call	_setSteering	;wreg free
  1798                           
  1799                           ;main.c: 271:             break;
  1800  001D08  EFD5  F00E         	goto	l1339
  1801  001D0C                     l5887:
  1802                           
  1803                           ; BSR set to: 1
  1804                           ;main.c: 273:             if (curveMode == InCurve) {
  1805  001D0C  0E02               	movlw	2
  1806  001D0E  183F               	xorwf	_curveMode^0,w,c
  1807  001D10  A4D8               	btfss	status,2,c
  1808  001D12  EF8D  F00E         	goto	u4601
  1809  001D16  EF8F  F00E         	goto	u4600
  1810  001D1A                     u4601:
  1811  001D1A  EF46  F00E         	goto	l5877
  1812  001D1E                     u4600:
  1813  001D1E                     
  1814                           ; BSR set to: 1
  1815                           ;main.c: 274:                 setSteering((60), Ratio);
  1816  001D1E  0E00               	movlw	0
  1817  001D20  6E1D               	movwf	(setSteering@steering+1)^0,c
  1818  001D22  0E3C               	movlw	60
  1819  001D24  6E1C               	movwf	setSteering@steering^0,c
  1820  001D26  0E02               	movlw	2
  1821  001D28  6E1E               	movwf	setSteering@steeringMode^0,c
  1822  001D2A  ECBB  F010         	call	_setSteering	;wreg free
  1823                           
  1824                           ;main.c: 275:             } else {
  1825  001D2E  EFD5  F00E         	goto	l1339
  1826  001D32                     l5893:
  1827                           
  1828                           ; BSR set to: 1
  1829                           ;main.c: 280:             if (curveMode == InCurve) {
  1830  001D32  0E02               	movlw	2
  1831  001D34  183F               	xorwf	_curveMode^0,w,c
  1832  001D36  A4D8               	btfss	status,2,c
  1833  001D38  EFA0  F00E         	goto	u4611
  1834  001D3C  EFA2  F00E         	goto	u4610
  1835  001D40                     u4611:
  1836  001D40  EF46  F00E         	goto	l5877
  1837  001D44                     u4610:
  1838  001D44                     
  1839                           ; BSR set to: 1
  1840                           ;main.c: 281:                 setSteering(-(60), Ratio);
  1841  001D44  0EFF               	movlw	255
  1842  001D46  6E1D               	movwf	(setSteering@steering+1)^0,c
  1843  001D48  0EC4               	movlw	196
  1844  001D4A  6E1C               	movwf	setSteering@steering^0,c
  1845  001D4C  0E02               	movlw	2
  1846  001D4E  6E1E               	movwf	setSteering@steeringMode^0,c
  1847  001D50  ECBB  F010         	call	_setSteering	;wreg free
  1848                           
  1849                           ;main.c: 282:             } else {
  1850  001D54  EFD5  F00E         	goto	l1339
  1851  001D58                     l5901:
  1852                           
  1853                           ; BSR set to: 1
  1854  001D58  504C               	movf	_driveMode^0,w,c
  1855  001D5A  6F02               	movwf	??_calcSteering& (0+255),b
  1856  001D5C  6B03               	clrf	(??_calcSteering+1)& (0+255),b
  1857                           
  1858                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1859                           ; Switch size 1, requested type "simple"
  1860                           ; Number of cases is 1, Range of values is 0 to 0
  1861                           ; switch strategies available:
  1862                           ; Name         Instructions Cycles
  1863                           ; simple_byte            4     3 (average)
  1864                           ;	Chosen strategy is simple_byte
  1865  001D5E  5103               	movf	(??_calcSteering+1)& (0+255),w,b
  1866  001D60  0A00               	xorlw	0	; case 0
  1867  001D62  B4D8               	btfsc	status,2,c
  1868  001D64  EFB6  F00E         	goto	l6523
  1869  001D68  EFD5  F00E         	goto	l1339
  1870  001D6C                     l6523:
  1871                           
  1872                           ; BSR set to: 1
  1873                           ; Switch size 1, requested type "simple"
  1874                           ; Number of cases is 7, Range of values is 0 to 6
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte           22    12 (average)
  1878                           ;	Chosen strategy is simple_byte
  1879  001D6C  5102               	movf	??_calcSteering& (0+255),w,b
  1880  001D6E  0A00               	xorlw	0	; case 0
  1881  001D70  B4D8               	btfsc	status,2,c
  1882  001D72  EF5A  F00E         	goto	l5881
  1883  001D76  0A01               	xorlw	1	; case 1
  1884  001D78  B4D8               	btfsc	status,2,c
  1885  001D7A  EF50  F00E         	goto	l5879
  1886  001D7E  0A03               	xorlw	3	; case 2
  1887  001D80  B4D8               	btfsc	status,2,c
  1888  001D82  EF46  F00E         	goto	l5877
  1889  001D86  0A01               	xorlw	1	; case 3
  1890  001D88  B4D8               	btfsc	status,2,c
  1891  001D8A  EF72  F00E         	goto	l5883
  1892  001D8E  0A07               	xorlw	7	; case 4
  1893  001D90  B4D8               	btfsc	status,2,c
  1894  001D92  EF7C  F00E         	goto	l5885
  1895  001D96  0A01               	xorlw	1	; case 5
  1896  001D98  B4D8               	btfsc	status,2,c
  1897  001D9A  EF86  F00E         	goto	l5887
  1898  001D9E  0A03               	xorlw	3	; case 6
  1899  001DA0  B4D8               	btfsc	status,2,c
  1900  001DA2  EF99  F00E         	goto	l5893
  1901  001DA6  EFD5  F00E         	goto	l1339
  1902  001DAA                     l1339:
  1903  001DAA  0012               	return		;funcret
  1904  001DAC                     __end_of_calcSteering:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _printf *****************
  1908 ;; Defined at:
  1909 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  fmt             2   44[COMRAM] PTR const unsigned char 
  1912 ;;		 -> STR_1(12), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  ap              2   46[COMRAM] PTR void [1]
  1915 ;;		 -> ?_printf(2), 
  1916 ;;  ret             2    0        int 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2   44[COMRAM] int 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;Total ram usage:        4 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 13
  1933 ;; This function calls:
  1934 ;;		_vfprintf
  1935 ;; This function is called by:
  1936 ;;		_loop
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text4
  1941  00394C                     __ptext4:
  1942                           	callstack 0
  1943  00394C                     _printf:
  1944                           	callstack 16
  1945  00394C  0E2F               	movlw	low (?_printf+2)
  1946  00394E  6E2F               	movwf	printf@ap^0,c
  1947  003950  0E00               	movlw	high (?_printf+2)
  1948  003952  6E30               	movwf	(printf@ap+1)^0,c
  1949  003954  0E00               	movlw	0
  1950  003956  6E25               	movwf	vfprintf@fp^0,c
  1951  003958  0E00               	movlw	0
  1952  00395A  6E26               	movwf	(vfprintf@fp+1)^0,c
  1953  00395C  C02D  F027         	movff	printf@fmt,vfprintf@fmt
  1954  003960  C02E  F028         	movff	printf@fmt+1,vfprintf@fmt+1
  1955  003964  0E2F               	movlw	low printf@ap
  1956  003966  6E29               	movwf	vfprintf@ap^0,c
  1957  003968  0E00               	movlw	high printf@ap
  1958  00396A  6E2A               	movwf	(vfprintf@ap+1)^0,c
  1959  00396C  ECD5  F018         	call	_vfprintf	;wreg free
  1960  003970  0012               	return		;funcret
  1961  003972                     __end_of_printf:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _vfprintf *****************
  1965 ;; Defined at:
  1966 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  1969 ;;		 -> NULL(0), 
  1970 ;;  fmt             2   38[COMRAM] PTR const unsigned char 
  1971 ;;		 -> STR_1(12), 
  1972 ;;  ap              2   40[COMRAM] PTR PTR void 
  1973 ;;		 -> printf@ap(2), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  cfmt            2   42[COMRAM] PTR unsigned char 
  1976 ;;		 -> STR_1(12), 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  2   36[COMRAM] int 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1986 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;Total ram usage:        8 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 12
  1993 ;; This function calls:
  1994 ;;		_vfpfcnvrt
  1995 ;; This function is called by:
  1996 ;;		_printf
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text5
  2001  0031AA                     __ptext5:
  2002                           	callstack 0
  2003  0031AA                     _vfprintf:
  2004                           	callstack 16
  2005  0031AA                     
  2006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2007  0031AA  C027  F02B         	movff	vfprintf@fmt,vfprintf@cfmt
  2008  0031AE  C028  F02C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2009  0031B2                     
  2010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2011  0031B2  0E00               	movlw	0
  2012  0031B4  0100               	movlb	0	; () banked
  2013  0031B6  6FA1               	movwf	(_nout+1)& (0+255),b
  2014  0031B8  0E00               	movlw	0
  2015  0031BA  6FA0               	movwf	_nout& (0+255),b
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2018  0031BC  EFF3  F018         	goto	l4743
  2019  0031C0                     l4741:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2023  0031C0  C025  F01F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2024  0031C4  C026  F020         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2025  0031C8  0E2B               	movlw	low vfprintf@cfmt
  2026  0031CA  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2027  0031CC  0E00               	movlw	high vfprintf@cfmt
  2028  0031CE  6E22               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2029  0031D0  C029  F023         	movff	vfprintf@ap,vfpfcnvrt@ap
  2030  0031D4  C02A  F024         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2031  0031D8  ECFA  F013         	call	_vfpfcnvrt	;wreg free
  2032  0031DC  501F               	movf	?_vfpfcnvrt^0,w,c
  2033  0031DE  0100               	movlb	0	; () banked
  2034  0031E0  27A0               	addwf	_nout& (0+255),f,b
  2035  0031E2  5020               	movf	(?_vfpfcnvrt+1)^0,w,c
  2036  0031E4  23A1               	addwfc	(_nout+1)& (0+255),f,b
  2037  0031E6                     l4743:
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2041  0031E6  0060  F0AF  FFF6   	movff	vfprintf@cfmt,tblptrl
  2042  0031EC  0060  F0B3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2043  0031F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2044  0031F2  6AF8               	clrf	tblptru,c
  2045  0031F4                     	endif
  2046  0031F4                     	if	0	;tblptru may be non-zero
  2047  0031F4                     	endif
  2048  0031F4  0008               	tblrd		*
  2049  0031F6  50F5               	movf	tablat,w,c
  2050  0031F8  0900               	iorlw	0
  2051  0031FA  A4D8               	btfss	status,2,c
  2052  0031FC  EF02  F019         	goto	u3231
  2053  003200  EF04  F019         	goto	u3230
  2054  003204                     u3231:
  2055  003204  EFE0  F018         	goto	l4741
  2056  003208                     u3230:
  2057  003208                     
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2060  003208  C0A0  F025         	movff	_nout,?_vfprintf
  2061  00320C  C0A1  F026         	movff	_nout+1,?_vfprintf+1
  2062  003210                     
  2063                           ; BSR set to: 0
  2064  003210  0012               	return		;funcret
  2065  003212                     __end_of_vfprintf:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _vfpfcnvrt *****************
  2069 ;; Defined at:
  2070 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2073 ;;		 -> NULL(0), 
  2074 ;;  fmt             2   32[COMRAM] PTR PTR unsigned char 
  2075 ;;		 -> vfprintf@cfmt(2), 
  2076 ;;  ap              2   34[COMRAM] PTR PTR void 
  2077 ;;		 -> printf@ap(2), 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  llu             8    0        unsigned long long 
  2080 ;;  ll              8    0        long long 
  2081 ;;  f               4    0        long long 
  2082 ;;  vp              3    0        PTR void 
  2083 ;;  ct              3    0        unsigned char [3]
  2084 ;;  cp              3    0        PTR unsigned char 
  2085 ;;  i               2    0        int 
  2086 ;;  done            2    0        int 
  2087 ;;  c               1    0        unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  2   30[COMRAM] int 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 11
  2104 ;; This function calls:
  2105 ;;		_fputc
  2106 ;; This function is called by:
  2107 ;;		_vfprintf
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text6
  2112  0027F4                     __ptext6:
  2113                           	callstack 0
  2114  0027F4                     _vfpfcnvrt:
  2115                           	callstack 16
  2116  0027F4                     
  2117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2118  0027F4  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2119  0027FA  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2120  002800  006F FF7B FFF6     	movff	postinc2,tblptrl
  2121  002806  006F FF77 FFF7     	movff	postdec2,tblptrh
  2122  00280C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2123  00280C  6AF8               	clrf	tblptru,c
  2124  00280E                     	endif
  2125  00280E                     	if	0	;tblptru may be non-zero
  2126  00280E                     	endif
  2127  00280E  0008               	tblrd		*
  2128  002810  50F5               	movf	tablat,w,c
  2129  002812  0A25               	xorlw	37
  2130  002814  A4D8               	btfss	status,2,c
  2131  002816  EF0F  F014         	goto	u2651
  2132  00281A  EF11  F014         	goto	u2650
  2133  00281E                     u2651:
  2134  00281E  EF64  F014         	goto	l4373
  2135  002822                     u2650:
  2136  002822                     
  2137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2138  002822  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2139  002828  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2140  00282E  2ADE               	incf	postinc2,f,c
  2141  002830  0E00               	movlw	0
  2142  002832  22DD               	addwfc	postdec2,f,c
  2143  002834                     
  2144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2145  002834  0E00               	movlw	0
  2146  002836  0100               	movlb	0	; () banked
  2147  002838  6FA3               	movwf	(_width+1)& (0+255),b
  2148  00283A  0E00               	movlw	0
  2149  00283C  6FA2               	movwf	_width& (0+255),b
  2150  00283E  C0A2  F0A6         	movff	_width,_flags
  2151  002842  C0A3  F0A7         	movff	_width+1,_flags+1
  2152  002846                     
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2155  002846  69A4               	setf	_prec& (0+255),b
  2156  002848  69A5               	setf	(_prec+1)& (0+255),b
  2157  00284A                     
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2160  00284A  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2161  002850  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2162  002856  006F FF7B FFF6     	movff	postinc2,tblptrl
  2163  00285C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2164  002862                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2165  002862  6AF8               	clrf	tblptru,c
  2166  002864                     	endif
  2167  002864                     	if	0	;tblptru may be non-zero
  2168  002864                     	endif
  2169  002864  0008               	tblrd		*
  2170  002866  50F5               	movf	tablat,w,c
  2171  002868  0A25               	xorlw	37
  2172  00286A  A4D8               	btfss	status,2,c
  2173  00286C  EF3A  F014         	goto	u2661
  2174  002870  EF3C  F014         	goto	u2660
  2175  002874                     u2661:
  2176  002874  EF55  F014         	goto	l4367
  2177  002878                     u2660:
  2178  002878                     
  2179                           ; BSR set to: 0
  2180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2181  002878  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2182  00287E  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2183  002884  2ADE               	incf	postinc2,f,c
  2184  002886  0E00               	movlw	0
  2185  002888  22DD               	addwfc	postdec2,f,c
  2186  00288A                     
  2187                           ; BSR set to: 0
  2188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2189  00288A  0E00               	movlw	0
  2190  00288C  6E17               	movwf	(fputc@c+1)^0,c
  2191  00288E  0E25               	movlw	37
  2192  002890  6E16               	movwf	fputc@c^0,c
  2193  002892  C01F  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2194  002896  C020  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2195  00289A  ECF8  F017         	call	_fputc	;wreg free
  2196  00289E                     l4363:
  2197                           
  2198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2199  00289E  0E00               	movlw	0
  2200  0028A0  6E20               	movwf	(?_vfpfcnvrt+1)^0,c
  2201  0028A2  0E01               	movlw	1
  2202  0028A4  6E1F               	movwf	?_vfpfcnvrt^0,c
  2203  0028A6  EF86  F014         	goto	l2109
  2204  0028AA                     l4367:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2208  0028AA  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2209  0028B0  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  0028B6  2ADE               	incf	postinc2,f,c
  2211  0028B8  0E00               	movlw	0
  2212  0028BA  22DD               	addwfc	postdec2,f,c
  2213  0028BC                     
  2214                           ; BSR set to: 0
  2215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2216  0028BC  0E00               	movlw	0
  2217  0028BE  6E20               	movwf	(?_vfpfcnvrt+1)^0,c
  2218  0028C0  0E00               	movlw	0
  2219  0028C2  6E1F               	movwf	?_vfpfcnvrt^0,c
  2220  0028C4  EF86  F014         	goto	l2109
  2221  0028C8                     l4373:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2224  0028C8  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2225  0028CE  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2226  0028D4  006F FF7B FFF6     	movff	postinc2,tblptrl
  2227  0028DA  006F FF77 FFF7     	movff	postdec2,tblptrh
  2228  0028E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2229  0028E0  6AF8               	clrf	tblptru,c
  2230  0028E2                     	endif
  2231  0028E2                     	if	0	;tblptru may be non-zero
  2232  0028E2                     	endif
  2233  0028E2  0008               	tblrd		*
  2234  0028E4  50F5               	movf	tablat,w,c
  2235  0028E6  6E16               	movwf	fputc@c^0,c
  2236  0028E8  6A17               	clrf	(fputc@c+1)^0,c
  2237  0028EA  C01F  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2238  0028EE  C020  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2239  0028F2  ECF8  F017         	call	_fputc	;wreg free
  2240  0028F6                     
  2241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2242  0028F6  0060  F087  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2243  0028FC  0060  F08B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2244  002902  2ADE               	incf	postinc2,f,c
  2245  002904  0E00               	movlw	0
  2246  002906  22DD               	addwfc	postdec2,f,c
  2247  002908  EF4F  F014         	goto	l4363
  2248  00290C                     l2109:
  2249  00290C  0012               	return		;funcret
  2250  00290E                     __end_of_vfpfcnvrt:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _fputc *****************
  2254 ;; Defined at:
  2255 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  c               2   21[COMRAM] int 
  2258 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2259 ;;		 -> NULL(0), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  2   21[COMRAM] int 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        9 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 10
  2278 ;; This function calls:
  2279 ;;		_putch
  2280 ;; This function is called by:
  2281 ;;		_vfpfcnvrt
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text7
  2286  002FF0                     __ptext7:
  2287                           	callstack 0
  2288  002FF0                     _fputc:
  2289                           	callstack 16
  2290  002FF0  5018               	movf	fputc@fp^0,w,c
  2291  002FF2  1019               	iorwf	(fputc@fp+1)^0,w,c
  2292  002FF4  B4D8               	btfsc	status,2,c
  2293  002FF6  EFFF  F017         	goto	u2121
  2294  002FFA  EF01  F018         	goto	u2120
  2295  002FFE                     u2121:
  2296  002FFE  EF0A  F018         	goto	l4019
  2297  003002                     u2120:
  2298  003002  5018               	movf	fputc@fp^0,w,c
  2299  003004  1019               	iorwf	(fputc@fp+1)^0,w,c
  2300  003006  A4D8               	btfss	status,2,c
  2301  003008  EF08  F018         	goto	u2131
  2302  00300C  EF0A  F018         	goto	u2130
  2303  003010                     u2131:
  2304  003010  EF0F  F018         	goto	l4021
  2305  003014                     u2130:
  2306  003014                     l4019:
  2307  003014  5016               	movf	fputc@c^0,w,c
  2308  003016  EC54  F01D         	call	_putch
  2309  00301A  EF42  F018         	goto	l2127
  2310  00301E                     l4021:
  2311  00301E  EE20 F004          	lfsr	2,4
  2312  003022  5018               	movf	fputc@fp^0,w,c
  2313  003024  26D9               	addwf	fsr2l,f,c
  2314  003026  5019               	movf	(fputc@fp+1)^0,w,c
  2315  003028  22DA               	addwfc	fsr2h,f,c
  2316  00302A  50DE               	movf	postinc2,w,c
  2317  00302C  10DE               	iorwf	postinc2,w,c
  2318  00302E  B4D8               	btfsc	status,2,c
  2319  003030  EF1C  F018         	goto	u2141
  2320  003034  EF1E  F018         	goto	u2140
  2321  003038                     u2141:
  2322  003038  EF39  F018         	goto	l4025
  2323  00303C                     u2140:
  2324  00303C  EE20 F004          	lfsr	2,4
  2325  003040  5018               	movf	fputc@fp^0,w,c
  2326  003042  26D9               	addwf	fsr2l,f,c
  2327  003044  5019               	movf	(fputc@fp+1)^0,w,c
  2328  003046  22DA               	addwfc	fsr2h,f,c
  2329  003048  EE10 F002          	lfsr	1,2
  2330  00304C  5018               	movf	fputc@fp^0,w,c
  2331  00304E  26E1               	addwf	fsr1l,f,c
  2332  003050  5019               	movf	(fputc@fp+1)^0,w,c
  2333  003052  22E2               	addwfc	fsr1h,f,c
  2334  003054  50DE               	movf	postinc2,w,c
  2335  003056  5CE6               	subwf	postinc1,w,c
  2336  003058  50E6               	movf	postinc1,w,c
  2337  00305A  0A80               	xorlw	128
  2338  00305C  6E1E               	movwf	(??_fputc+4)^0,c
  2339  00305E  50DE               	movf	postinc2,w,c
  2340  003060  0A80               	xorlw	128
  2341  003062  581E               	subwfb	(??_fputc+4)^0,w,c
  2342  003064  B0D8               	btfsc	status,0,c
  2343  003066  EF37  F018         	goto	u2151
  2344  00306A  EF39  F018         	goto	u2150
  2345  00306E                     u2151:
  2346  00306E  EF42  F018         	goto	l2127
  2347  003072                     u2150:
  2348  003072                     l4025:
  2349  003072  EE20 F002          	lfsr	2,2
  2350  003076  5018               	movf	fputc@fp^0,w,c
  2351  003078  26D9               	addwf	fsr2l,f,c
  2352  00307A  5019               	movf	(fputc@fp+1)^0,w,c
  2353  00307C  22DA               	addwfc	fsr2h,f,c
  2354  00307E  2ADE               	incf	postinc2,f,c
  2355  003080  0E00               	movlw	0
  2356  003082  22DD               	addwfc	postdec2,f,c
  2357  003084                     l2127:
  2358  003084  0012               	return		;funcret
  2359  003086                     __end_of_fputc:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _putch *****************
  2363 ;; Defined at:
  2364 ;;		line 230 in file "mcc_generated_files/uart1.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  txData          1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  txData          1   20[COMRAM] unsigned char 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;Total ram usage:        1 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 9
  2385 ;; This function calls:
  2386 ;;		_UART1_Write
  2387 ;; This function is called by:
  2388 ;;		_fputc
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           	psect	text8
  2393  003AA8                     __ptext8:
  2394                           	callstack 0
  2395  003AA8                     _putch:
  2396                           	callstack 16
  2397                           
  2398                           ;incstack = 0
  2399                           ;putch@txData stored from wreg
  2400  003AA8  6E15               	movwf	putch@txData^0,c
  2401  003AAA                     
  2402                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  2403  003AAA  5015               	movf	putch@txData^0,w,c
  2404  003AAC  EC09  F019         	call	_UART1_Write
  2405  003AB0  0012               	return		;funcret
  2406  003AB2                     __end_of_putch:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _UART1_Write *****************
  2410 ;; Defined at:
  2411 ;;		line 202 in file "mcc_generated_files/uart1.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  txData          1    wreg     unsigned char 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  txData          1   19[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      void 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 8
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_putch
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text9
  2440  003212                     __ptext9:
  2441                           	callstack 0
  2442  003212                     _UART1_Write:
  2443                           	callstack 16
  2444                           
  2445                           ;incstack = 0
  2446                           ;UART1_Write@txData stored from wreg
  2447  003212  6E14               	movwf	UART1_Write@txData^0,c
  2448  003214                     l3949:
  2449                           
  2450                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  2451  003214  0100               	movlb	0	; () banked
  2452  003216  51FE               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
  2453  003218  B4D8               	btfsc	status,2,c
  2454  00321A  EF11  F019         	goto	u2011
  2455  00321E  EF13  F019         	goto	u2010
  2456  003222                     u2011:
  2457  003222  EF0A  F019         	goto	l3949
  2458  003226                     u2010:
  2459  003226                     
  2460                           ; BSR set to: 0
  2461                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  2462  003226  0139               	movlb	57	; () banked
  2463  003228  B993               	btfsc	147,4,b	;volatile
  2464  00322A  EF19  F019         	goto	u2021
  2465  00322E  EF1B  F019         	goto	u2020
  2466  003232                     u2021:
  2467  003232  EF20  F019         	goto	l309
  2468  003236                     u2020:
  2469  003236                     
  2470                           ; BSR set to: 57
  2471                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  2472  003236  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  2473                           
  2474                           ;mcc_generated_files/uart1.c: 211:     }
  2475  00323C  EF37  F019         	goto	l3963
  2476  003240                     l309:
  2477                           
  2478                           ; BSR set to: 57
  2479                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  2480  003240  9993               	bcf	147,4,b	;volatile
  2481  003242                     
  2482                           ; BSR set to: 57
  2483                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  2484  003242  0E90               	movlw	low _uart1TxBuffer
  2485  003244  2445               	addwf	_uart1TxHead^0,w,c	;volatile
  2486  003246  6ED9               	movwf	fsr2l,c
  2487  003248  6ADA               	clrf	fsr2h,c
  2488  00324A  0E00               	movlw	high _uart1TxBuffer
  2489  00324C  22DA               	addwfc	fsr2h,f,c
  2490  00324E  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  2491  003254                     
  2492                           ; BSR set to: 57
  2493  003254  2A45               	incf	_uart1TxHead^0,f,c	;volatile
  2494  003256                     
  2495                           ; BSR set to: 57
  2496                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  2497  003256  0E07               	movlw	7
  2498  003258  6445               	cpfsgt	_uart1TxHead^0,c	;volatile
  2499  00325A  EF31  F019         	goto	u2031
  2500  00325E  EF33  F019         	goto	u2030
  2501  003262                     u2031:
  2502  003262  EF35  F019         	goto	l3961
  2503  003266                     u2030:
  2504  003266                     
  2505                           ; BSR set to: 57
  2506                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  2507  003266  0E00               	movlw	0
  2508  003268  6E45               	movwf	_uart1TxHead^0,c	;volatile
  2509  00326A                     l3961:
  2510                           
  2511                           ; BSR set to: 57
  2512                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  2513  00326A  0100               	movlb	0	; () banked
  2514  00326C  07FE               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  2515  00326E                     l3963:
  2516                           
  2517                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  2518  00326E  0139               	movlb	57	; () banked
  2519  003270  8993               	bsf	147,4,b	;volatile
  2520  003272                     
  2521                           ; BSR set to: 57
  2522  003272  0012               	return		;funcret
  2523  003274                     __end_of_UART1_Write:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _getReverse *****************
  2527 ;; Defined at:
  2528 ;;		line 200 in file "main.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 8
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_loop
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text10
  2557  002B1E                     __ptext10:
  2558                           	callstack 0
  2559  002B1E                     _getReverse:
  2560                           	callstack 21
  2561  002B1E                     
  2562                           ;main.c: 201:     if (distFront < (15)) {
  2563  002B1E  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2564  002B20  E107               	bnz	u3461
  2565  002B22  0E0F               	movlw	15
  2566  002B24  5C4A               	subwf	_distFront^0,w,c	;volatile
  2567  002B26  B0D8               	btfsc	status,0,c
  2568  002B28  EF98  F015         	goto	u3461
  2569  002B2C  EF9A  F015         	goto	u3460
  2570  002B30                     u3461:
  2571  002B30  EF9F  F015         	goto	l4985
  2572  002B34                     u3460:
  2573  002B34                     
  2574                           ;main.c: 202:         ++reverseCount;
  2575  002B34  0100               	movlb	0	; () banked
  2576  002B36  4BBC               	infsnz	_reverseCount& (0+255),f,b
  2577  002B38  2BBD               	incf	(_reverseCount+1)& (0+255),f,b
  2578                           
  2579                           ;main.c: 203:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2580  002B3A  EFB6  F015         	goto	l4991
  2581  002B3E                     l4985:
  2582  002B3E  0E03               	movlw	3
  2583  002B40  184C               	xorwf	_driveMode^0,w,c
  2584  002B42  B4D8               	btfsc	status,2,c
  2585  002B44  EFA6  F015         	goto	u3471
  2586  002B48  EFA8  F015         	goto	u3470
  2587  002B4C                     u3471:
  2588  002B4C  EFB6  F015         	goto	l4991
  2589  002B50                     u3470:
  2590  002B50  0E04               	movlw	4
  2591  002B52  184C               	xorwf	_driveMode^0,w,c
  2592  002B54  B4D8               	btfsc	status,2,c
  2593  002B56  EFAF  F015         	goto	u3481
  2594  002B5A  EFB1  F015         	goto	u3480
  2595  002B5E                     u3481:
  2596  002B5E  EFB6  F015         	goto	l4991
  2597  002B62                     u3480:
  2598  002B62                     
  2599                           ;main.c: 204:         reverseCount = 0;
  2600  002B62  0E00               	movlw	0
  2601  002B64  0100               	movlb	0	; () banked
  2602  002B66  6FBD               	movwf	(_reverseCount+1)& (0+255),b
  2603  002B68  0E00               	movlw	0
  2604  002B6A  6FBC               	movwf	_reverseCount& (0+255),b
  2605  002B6C                     l4991:
  2606                           
  2607                           ;main.c: 207:     if (reverseCount > (50)) {
  2608  002B6C  0100               	movlb	0	; () banked
  2609  002B6E  51BD               	movf	(_reverseCount+1)& (0+255),w,b
  2610  002B70  E109               	bnz	u3490
  2611  002B72  0E33               	movlw	51
  2612  002B74  5DBC               	subwf	_reverseCount& (0+255),w,b
  2613  002B76  A0D8               	btfss	status,0,c
  2614  002B78  EFC0  F015         	goto	u3491
  2615  002B7C  EFC2  F015         	goto	u3490
  2616  002B80                     u3491:
  2617  002B80  EF0C  F016         	goto	l1312
  2618  002B84                     u3490:
  2619  002B84                     
  2620                           ; BSR set to: 0
  2621                           ;main.c: 208:         ++reverseTime;
  2622  002B84  4BAA               	infsnz	_reverseTime& (0+255),f,b
  2623  002B86  2BAB               	incf	(_reverseTime+1)& (0+255),f,b
  2624  002B88                     
  2625                           ; BSR set to: 0
  2626                           ;main.c: 210:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2627  002B88  0E03               	movlw	3
  2628  002B8A  184C               	xorwf	_driveMode^0,w,c
  2629  002B8C  B4D8               	btfsc	status,2,c
  2630  002B8E  EFCB  F015         	goto	u3501
  2631  002B92  EFCD  F015         	goto	u3500
  2632  002B96                     u3501:
  2633  002B96  EFE7  F015         	goto	l5005
  2634  002B9A                     u3500:
  2635  002B9A                     
  2636                           ; BSR set to: 0
  2637  002B9A  0E04               	movlw	4
  2638  002B9C  184C               	xorwf	_driveMode^0,w,c
  2639  002B9E  B4D8               	btfsc	status,2,c
  2640  002BA0  EFD4  F015         	goto	u3511
  2641  002BA4  EFD6  F015         	goto	u3510
  2642  002BA8                     u3511:
  2643  002BA8  EFE7  F015         	goto	l5005
  2644  002BAC                     u3510:
  2645  002BAC                     
  2646                           ; BSR set to: 0
  2647                           ;main.c: 211:             if (distLeft > distRight) {
  2648  002BAC  51C4               	movf	_distLeft& (0+255),w,b	;volatile
  2649  002BAE  5DC0               	subwf	_distRight& (0+255),w,b	;volatile
  2650  002BB0  51C5               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2651  002BB2  59C1               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2652  002BB4  B0D8               	btfsc	status,0,c
  2653  002BB6  EFDF  F015         	goto	u3521
  2654  002BBA  EFE1  F015         	goto	u3520
  2655  002BBE                     u3521:
  2656  002BBE  EFE5  F015         	goto	l5003
  2657  002BC2                     u3520:
  2658  002BC2                     
  2659                           ; BSR set to: 0
  2660                           ;main.c: 213:                 driveMode = ReverseRight;
  2661  002BC2  0E03               	movlw	3
  2662  002BC4  6E4C               	movwf	_driveMode^0,c
  2663                           
  2664                           ;main.c: 214:             } else {
  2665  002BC6  EFE7  F015         	goto	l5005
  2666  002BCA                     l5003:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;main.c: 216:                 driveMode = ReverseLeft;
  2670  002BCA  0E04               	movlw	4
  2671  002BCC  6E4C               	movwf	_driveMode^0,c
  2672  002BCE                     l5005:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 220:         if (distFront > (35) || reverseTime > (300)) {
  2676  002BCE  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2677  002BD0  E107               	bnz	u3531
  2678  002BD2  0E24               	movlw	36
  2679  002BD4  5C4A               	subwf	_distFront^0,w,c	;volatile
  2680  002BD6  B0D8               	btfsc	status,0,c
  2681  002BD8  EFF0  F015         	goto	u3531
  2682  002BDC  EFF2  F015         	goto	u3530
  2683  002BE0                     u3531:
  2684  002BE0  EF02  F016         	goto	l5009
  2685  002BE4                     u3530:
  2686  002BE4                     
  2687                           ; BSR set to: 0
  2688  002BE4  BFAB               	btfsc	(_reverseTime+1)& (0+255),7,b
  2689  002BE6  EFFE  F015         	goto	u3541
  2690  002BEA  0E2D               	movlw	45
  2691  002BEC  5DAA               	subwf	_reverseTime& (0+255),w,b
  2692  002BEE  0E01               	movlw	1
  2693  002BF0  59AB               	subwfb	(_reverseTime+1)& (0+255),w,b
  2694  002BF2  A0D8               	btfss	status,0,c
  2695  002BF4  EFFE  F015         	goto	u3541
  2696  002BF8  EF00  F016         	goto	u3540
  2697  002BFC                     u3541:
  2698  002BFC  EF0C  F016         	goto	l1312
  2699  002C00                     u3540:
  2700  002C00  EF02  F016         	goto	l5011
  2701  002C04                     l5009:
  2702  002C04                     l5011:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;main.c: 223:                 driveMode = Straight;
  2706  002C04  0E01               	movlw	1
  2707  002C06  6E4C               	movwf	_driveMode^0,c
  2708  002C08                     
  2709                           ; BSR set to: 0
  2710                           ;main.c: 228:             reverseCount = 0;
  2711  002C08  0E00               	movlw	0
  2712  002C0A  6FBD               	movwf	(_reverseCount+1)& (0+255),b
  2713  002C0C  0E00               	movlw	0
  2714  002C0E  6FBC               	movwf	_reverseCount& (0+255),b
  2715                           
  2716                           ;main.c: 229:             reverseTime = 0;
  2717  002C10  0E00               	movlw	0
  2718  002C12  6FAB               	movwf	(_reverseTime+1)& (0+255),b
  2719  002C14  0E00               	movlw	0
  2720  002C16  6FAA               	movwf	_reverseTime& (0+255),b
  2721  002C18                     l1312:
  2722                           
  2723                           ; BSR set to: 0
  2724  002C18  0012               	return		;funcret
  2725  002C1A                     __end_of_getReverse:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _getCurve *****************
  2729 ;; Defined at:
  2730 ;;		line 129 in file "main.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  deltaLeft       2   23[COMRAM] short 
  2735 ;;  deltaRight      2   21[COMRAM] short 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;Total ram usage:        6 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 8
  2752 ;; This function calls:
  2753 ;;		Nothing
  2754 ;; This function is called by:
  2755 ;;		_loop
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text11
  2760  001920                     __ptext11:
  2761                           	callstack 0
  2762  001920                     _getCurve:
  2763                           	callstack 21
  2764  001920                     
  2765                           ;main.c: 130:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2766  001920  503A               	movf	_oldDistLeft^0,w,c
  2767  001922  0100               	movlb	0	; () banked
  2768  001924  5DC4               	subwf	_distLeft& (0+255),w,b	;volatile
  2769  001926  6E18               	movwf	getCurve@deltaLeft^0,c
  2770  001928  503B               	movf	(_oldDistLeft+1)^0,w,c
  2771  00192A  59C5               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2772  00192C  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  2773                           
  2774                           ;main.c: 131:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2775  00192E  51BA               	movf	_oldDistRight& (0+255),w,b
  2776  001930  5DC0               	subwf	_distRight& (0+255),w,b	;volatile
  2777  001932  6E16               	movwf	getCurve@deltaRight^0,c
  2778  001934  51BB               	movf	(_oldDistRight+1)& (0+255),w,b
  2779  001936  59C1               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2780  001938  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  2781                           
  2782                           ;main.c: 133:     switch (curveMode) {
  2783  00193A  EF90  F00D         	goto	l4971
  2784  00193E                     l4915:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;main.c: 135:             if (deltaLeft > (32) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2788  00193E  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2789  001940  EFAB  F00C         	goto	u3291
  2790  001944  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2791  001946  E109               	bnz	u3290
  2792  001948  0E21               	movlw	33
  2793  00194A  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2794  00194C  A0D8               	btfss	status,0,c
  2795  00194E  EFAB  F00C         	goto	u3291
  2796  001952  EFAD  F00C         	goto	u3290
  2797  001956                     u3291:
  2798  001956  EFCE  F00C         	goto	l4923
  2799  00195A                     u3290:
  2800  00195A                     
  2801                           ; BSR set to: 0
  2802  00195A  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2803  00195C  EFBB  F00C         	goto	u3300
  2804  001960  0E2C               	movlw	44
  2805  001962  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2806  001964  0E01               	movlw	1
  2807  001966  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2808  001968  B0D8               	btfsc	status,0,c
  2809  00196A  EFB9  F00C         	goto	u3301
  2810  00196E  EFBB  F00C         	goto	u3300
  2811  001972                     u3301:
  2812  001972  EFCE  F00C         	goto	l4923
  2813  001976                     u3300:
  2814  001976                     
  2815                           ; BSR set to: 0
  2816  001976  503B               	movf	(_oldDistLeft+1)^0,w,c
  2817  001978  E107               	bnz	u3311
  2818  00197A  0E7D               	movlw	125
  2819  00197C  5C3A               	subwf	_oldDistLeft^0,w,c
  2820  00197E  B0D8               	btfsc	status,0,c
  2821  001980  EFC4  F00C         	goto	u3311
  2822  001984  EFC6  F00C         	goto	u3310
  2823  001988                     u3311:
  2824  001988  EFCE  F00C         	goto	l4923
  2825  00198C                     u3310:
  2826  00198C                     
  2827                           ; BSR set to: 0
  2828                           ;main.c: 136:                 delay = 0;
  2829  00198C  0E00               	movlw	0
  2830  00198E  6E3E               	movwf	_delay^0,c
  2831                           
  2832                           ;main.c: 137:                 curveMode = BeforeCurve;
  2833  001990  0E01               	movlw	1
  2834  001992  6E3F               	movwf	_curveMode^0,c
  2835                           
  2836                           ;main.c: 138:                 driveMode = CurveLeft;
  2837  001994  0E05               	movlw	5
  2838  001996  6E4C               	movwf	_driveMode^0,c
  2839                           
  2840                           ;main.c: 141:             } else if (deltaRight > (32) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2841  001998  EFAD  F00D         	goto	l1277
  2842  00199C                     l4923:
  2843                           
  2844                           ; BSR set to: 0
  2845  00199C  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2846  00199E  EFDA  F00C         	goto	u3321
  2847  0019A2  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  2848  0019A4  E109               	bnz	u3320
  2849  0019A6  0E21               	movlw	33
  2850  0019A8  5C16               	subwf	getCurve@deltaRight^0,w,c
  2851  0019AA  A0D8               	btfss	status,0,c
  2852  0019AC  EFDA  F00C         	goto	u3321
  2853  0019B0  EFDC  F00C         	goto	u3320
  2854  0019B4                     u3321:
  2855  0019B4  EFAD  F00D         	goto	l1277
  2856  0019B8                     u3320:
  2857  0019B8                     
  2858                           ; BSR set to: 0
  2859  0019B8  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2860  0019BA  EFEA  F00C         	goto	u3330
  2861  0019BE  0E2C               	movlw	44
  2862  0019C0  5C16               	subwf	getCurve@deltaRight^0,w,c
  2863  0019C2  0E01               	movlw	1
  2864  0019C4  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2865  0019C6  B0D8               	btfsc	status,0,c
  2866  0019C8  EFE8  F00C         	goto	u3331
  2867  0019CC  EFEA  F00C         	goto	u3330
  2868  0019D0                     u3331:
  2869  0019D0  EFAD  F00D         	goto	l1277
  2870  0019D4                     u3330:
  2871  0019D4                     
  2872                           ; BSR set to: 0
  2873  0019D4  51BB               	movf	(_oldDistRight+1)& (0+255),w,b
  2874  0019D6  E107               	bnz	u3341
  2875  0019D8  0E7D               	movlw	125
  2876  0019DA  5DBA               	subwf	_oldDistRight& (0+255),w,b
  2877  0019DC  B0D8               	btfsc	status,0,c
  2878  0019DE  EFF3  F00C         	goto	u3341
  2879  0019E2  EFF5  F00C         	goto	u3340
  2880  0019E6                     u3341:
  2881  0019E6  EFAD  F00D         	goto	l1277
  2882  0019EA                     u3340:
  2883  0019EA                     
  2884                           ; BSR set to: 0
  2885                           ;main.c: 142:                 delay = 0;
  2886  0019EA  0E00               	movlw	0
  2887  0019EC  6E3E               	movwf	_delay^0,c
  2888                           
  2889                           ;main.c: 143:                 curveMode = BeforeCurve;
  2890  0019EE  0E01               	movlw	1
  2891  0019F0  6E3F               	movwf	_curveMode^0,c
  2892                           
  2893                           ;main.c: 144:                 driveMode = CurveRight;
  2894  0019F2  0E06               	movlw	6
  2895  0019F4  6E4C               	movwf	_driveMode^0,c
  2896  0019F6  EFAD  F00D         	goto	l1277
  2897  0019FA                     l4931:
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;main.c: 151:             if (delay >= (20)) {
  2901  0019FA  0E13               	movlw	19
  2902  0019FC  643E               	cpfsgt	_delay^0,c
  2903  0019FE  EF03  F00D         	goto	u3351
  2904  001A02  EF05  F00D         	goto	u3350
  2905  001A06                     u3351:
  2906  001A06  EF0B  F00D         	goto	l4935
  2907  001A0A                     u3350:
  2908  001A0A                     
  2909                           ; BSR set to: 0
  2910                           ;main.c: 152:                 delay = 0;
  2911  001A0A  0E00               	movlw	0
  2912  001A0C  6E3E               	movwf	_delay^0,c
  2913                           
  2914                           ;main.c: 153:                 curveMode = InCurve;
  2915  001A0E  0E02               	movlw	2
  2916  001A10  6E3F               	movwf	_curveMode^0,c
  2917                           
  2918                           ;main.c: 155:             } else {
  2919  001A12  EFAD  F00D         	goto	l1277
  2920  001A16                     l4935:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;main.c: 156:                 ++delay;
  2924  001A16  2A3E               	incf	_delay^0,f,c
  2925  001A18  EFAD  F00D         	goto	l1277
  2926  001A1C                     l4937:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;main.c: 160:             if (delay >= (25)) {
  2930  001A1C  0E18               	movlw	24
  2931  001A1E  643E               	cpfsgt	_delay^0,c
  2932  001A20  EF14  F00D         	goto	u3361
  2933  001A24  EF16  F00D         	goto	u3360
  2934  001A28                     u3361:
  2935  001A28  EF0B  F00D         	goto	l4935
  2936  001A2C                     u3360:
  2937  001A2C                     
  2938                           ; BSR set to: 0
  2939                           ;main.c: 161:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (175)) {
  2940  001A2C  0E05               	movlw	5
  2941  001A2E  184C               	xorwf	_driveMode^0,w,c
  2942  001A30  A4D8               	btfss	status,2,c
  2943  001A32  EF1D  F00D         	goto	u3371
  2944  001A36  EF1F  F00D         	goto	u3370
  2945  001A3A                     u3371:
  2946  001A3A  EF2A  F00D         	goto	l4943
  2947  001A3E                     u3370:
  2948  001A3E                     
  2949                           ; BSR set to: 0
  2950  001A3E  51C5               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2951  001A40  E109               	bnz	u3380
  2952  001A42  0E2D               	movlw	45
  2953  001A44  5DC4               	subwf	_distLeft& (0+255),w,b	;volatile
  2954  001A46  A0D8               	btfss	status,0,c
  2955  001A48  EF28  F00D         	goto	u3381
  2956  001A4C  EF2A  F00D         	goto	u3380
  2957  001A50                     u3381:
  2958  001A50  EF49  F00D         	goto	l4949
  2959  001A54                     u3380:
  2960  001A54                     l4943:
  2961                           
  2962                           ; BSR set to: 0
  2963  001A54  0E06               	movlw	6
  2964  001A56  184C               	xorwf	_driveMode^0,w,c
  2965  001A58  A4D8               	btfss	status,2,c
  2966  001A5A  EF31  F00D         	goto	u3391
  2967  001A5E  EF33  F00D         	goto	u3390
  2968  001A62                     u3391:
  2969  001A62  EF3E  F00D         	goto	l4947
  2970  001A66                     u3390:
  2971  001A66                     
  2972                           ; BSR set to: 0
  2973  001A66  51C1               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2974  001A68  E109               	bnz	u3400
  2975  001A6A  0E2D               	movlw	45
  2976  001A6C  5DC0               	subwf	_distRight& (0+255),w,b	;volatile
  2977  001A6E  A0D8               	btfss	status,0,c
  2978  001A70  EF3C  F00D         	goto	u3401
  2979  001A74  EF3E  F00D         	goto	u3400
  2980  001A78                     u3401:
  2981  001A78  EF49  F00D         	goto	l4949
  2982  001A7C                     u3400:
  2983  001A7C                     l4947:
  2984                           
  2985                           ; BSR set to: 0
  2986  001A7C  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2987  001A7E  E109               	bnz	u3410
  2988  001A80  0EB0               	movlw	176
  2989  001A82  5C4A               	subwf	_distFront^0,w,c	;volatile
  2990  001A84  A0D8               	btfss	status,0,c
  2991  001A86  EF47  F00D         	goto	u3411
  2992  001A8A  EF49  F00D         	goto	u3410
  2993  001A8E                     u3411:
  2994  001A8E  EF63  F00D         	goto	l4955
  2995  001A92                     u3410:
  2996  001A92                     l4949:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;main.c: 163:                     if (delay >= 70) {
  3000  001A92  0E45               	movlw	69
  3001  001A94  643E               	cpfsgt	_delay^0,c
  3002  001A96  EF4F  F00D         	goto	u3421
  3003  001A9A  EF51  F00D         	goto	u3420
  3004  001A9E                     u3421:
  3005  001A9E  EF57  F00D         	goto	l4953
  3006  001AA2                     u3420:
  3007  001AA2                     
  3008                           ; BSR set to: 0
  3009                           ;main.c: 165:                         middleOffSet = -15;
  3010  001AA2  0EFF               	movlw	255
  3011  001AA4  6FB7               	movwf	(_middleOffSet+1)& (0+255),b
  3012  001AA6  0EF1               	movlw	241
  3013  001AA8  6FB6               	movwf	_middleOffSet& (0+255),b
  3014                           
  3015                           ;main.c: 166:                     } else {
  3016  001AAA  EF5B  F00D         	goto	l1291
  3017  001AAE                     l4953:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;main.c: 168:                         middleOffSet = 15;
  3021  001AAE  0E00               	movlw	0
  3022  001AB0  6FB7               	movwf	(_middleOffSet+1)& (0+255),b
  3023  001AB2  0E0F               	movlw	15
  3024  001AB4  6FB6               	movwf	_middleOffSet& (0+255),b
  3025  001AB6                     l1291:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;main.c: 171:                     delay = 0;
  3029  001AB6  0E00               	movlw	0
  3030  001AB8  6E3E               	movwf	_delay^0,c
  3031                           
  3032                           ;main.c: 172:                     curveMode = AfterCurve;
  3033  001ABA  0E03               	movlw	3
  3034  001ABC  6E3F               	movwf	_curveMode^0,c
  3035                           
  3036                           ;main.c: 173:                     driveMode = Straight;
  3037  001ABE  0E01               	movlw	1
  3038  001AC0  6E4C               	movwf	_driveMode^0,c
  3039                           
  3040                           ;main.c: 176:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  3041  001AC2  EF0B  F00D         	goto	l4935
  3042  001AC6                     l4955:
  3043                           
  3044                           ; BSR set to: 0
  3045  001AC6  0E06               	movlw	6
  3046  001AC8  184C               	xorwf	_driveMode^0,w,c
  3047  001ACA  A4D8               	btfss	status,2,c
  3048  001ACC  EF6A  F00D         	goto	u3431
  3049  001AD0  EF6C  F00D         	goto	u3430
  3050  001AD4                     u3431:
  3051  001AD4  EF0B  F00D         	goto	l4935
  3052  001AD8                     u3430:
  3053  001AD8                     
  3054                           ; BSR set to: 0
  3055  001AD8  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  3056  001ADA  EF78  F00D         	goto	u3441
  3057  001ADE  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  3058  001AE0  E109               	bnz	u3440
  3059  001AE2  0E1F               	movlw	31
  3060  001AE4  5C18               	subwf	getCurve@deltaLeft^0,w,c
  3061  001AE6  A0D8               	btfss	status,0,c
  3062  001AE8  EF78  F00D         	goto	u3441
  3063  001AEC  EF7A  F00D         	goto	u3440
  3064  001AF0                     u3441:
  3065  001AF0  EF0B  F00D         	goto	l4935
  3066  001AF4                     u3440:
  3067  001AF4                     
  3068                           ; BSR set to: 0
  3069                           ;main.c: 178:                     delay = 0;
  3070  001AF4  0E00               	movlw	0
  3071  001AF6  6E3E               	movwf	_delay^0,c
  3072                           
  3073                           ;main.c: 179:                     curveMode = BeforeCurve;
  3074  001AF8  0E01               	movlw	1
  3075  001AFA  6E3F               	movwf	_curveMode^0,c
  3076                           
  3077                           ;main.c: 180:                     driveMode = CurveLeft;
  3078  001AFC  0E05               	movlw	5
  3079  001AFE  6E4C               	movwf	_driveMode^0,c
  3080  001B00  EF0B  F00D         	goto	l4935
  3081  001B04                     l4963:
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;main.c: 187:             if (delay >= (1)) {
  3085  001B04  503E               	movf	_delay^0,w,c
  3086  001B06  B4D8               	btfsc	status,2,c
  3087  001B08  EF88  F00D         	goto	u3451
  3088  001B0C  EF8A  F00D         	goto	u3450
  3089  001B10                     u3451:
  3090  001B10  EF0B  F00D         	goto	l4935
  3091  001B14                     u3450:
  3092  001B14                     
  3093                           ; BSR set to: 0
  3094                           ;main.c: 188:                 delay = 0;
  3095  001B14  0E00               	movlw	0
  3096  001B16  6E3E               	movwf	_delay^0,c
  3097                           
  3098                           ;main.c: 189:                 curveMode = OutCurve;
  3099  001B18  0E00               	movlw	0
  3100  001B1A  6E3F               	movwf	_curveMode^0,c
  3101                           
  3102                           ;main.c: 191:             } else {
  3103  001B1C  EFAD  F00D         	goto	l1277
  3104  001B20                     l4971:
  3105                           
  3106                           ; BSR set to: 0
  3107  001B20  503F               	movf	_curveMode^0,w,c
  3108  001B22  6E14               	movwf	??_getCurve^0,c
  3109  001B24  6A15               	clrf	(??_getCurve+1)^0,c
  3110                           
  3111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3112                           ; Switch size 1, requested type "simple"
  3113                           ; Number of cases is 1, Range of values is 0 to 0
  3114                           ; switch strategies available:
  3115                           ; Name         Instructions Cycles
  3116                           ; simple_byte            4     3 (average)
  3117                           ;	Chosen strategy is simple_byte
  3118  001B26  5015               	movf	(??_getCurve+1)^0,w,c
  3119  001B28  0A00               	xorlw	0	; case 0
  3120  001B2A  B4D8               	btfsc	status,2,c
  3121  001B2C  EF9A  F00D         	goto	l6525
  3122  001B30  EFAD  F00D         	goto	l1277
  3123  001B34                     l6525:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ; Switch size 1, requested type "simple"
  3127                           ; Number of cases is 4, Range of values is 0 to 3
  3128                           ; switch strategies available:
  3129                           ; Name         Instructions Cycles
  3130                           ; simple_byte           13     7 (average)
  3131                           ;	Chosen strategy is simple_byte
  3132  001B34  5014               	movf	??_getCurve^0,w,c
  3133  001B36  0A00               	xorlw	0	; case 0
  3134  001B38  B4D8               	btfsc	status,2,c
  3135  001B3A  EF9F  F00C         	goto	l4915
  3136  001B3E  0A01               	xorlw	1	; case 1
  3137  001B40  B4D8               	btfsc	status,2,c
  3138  001B42  EFFD  F00C         	goto	l4931
  3139  001B46  0A03               	xorlw	3	; case 2
  3140  001B48  B4D8               	btfsc	status,2,c
  3141  001B4A  EF0E  F00D         	goto	l4937
  3142  001B4E  0A01               	xorlw	1	; case 3
  3143  001B50  B4D8               	btfsc	status,2,c
  3144  001B52  EF82  F00D         	goto	l4963
  3145  001B56  EFAD  F00D         	goto	l1277
  3146  001B5A                     l1277:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;main.c: 196:     oldDistLeft = distLeft;
  3150  001B5A  C0C4  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  3151  001B5E  C0C5  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3152                           
  3153                           ;main.c: 197:     oldDistRight = distRight;
  3154  001B62  C0C0  F0BA         	movff	_distRight,_oldDistRight	;volatile
  3155  001B66  C0C1  F0BB         	movff	_distRight+1,_oldDistRight+1	;volatile
  3156  001B6A                     
  3157                           ; BSR set to: 0
  3158  001B6A  0012               	return		;funcret
  3159  001B6C                     __end_of_getCurve:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _checkBatt *****************
  3163 ;; Defined at:
  3164 ;;		line 84 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      _Bool 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 10
  3185 ;; This function calls:
  3186 ;;		___flge
  3187 ;;		___xxtofl
  3188 ;;		_getBatteryVoltage
  3189 ;;		_setSteering
  3190 ;; This function is called by:
  3191 ;;		_loop
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text12
  3196  00311A                     __ptext12:
  3197                           	callstack 0
  3198  00311A                     _checkBatt:
  3199                           	callstack 19
  3200  00311A                     
  3201                           ;main.c: 85:     ++battCheckCount;
  3202  00311A  0100               	movlb	0	; () banked
  3203  00311C  4BB8               	infsnz	_battCheckCount& (0+255),f,b
  3204  00311E  2BB9               	incf	(_battCheckCount+1)& (0+255),f,b
  3205  003120                     
  3206                           ; BSR set to: 0
  3207                           ;main.c: 86:     if (battCheckCount > (500)) {
  3208  003120  0EF5               	movlw	245
  3209  003122  5DB8               	subwf	_battCheckCount& (0+255),w,b
  3210  003124  0E01               	movlw	1
  3211  003126  59B9               	subwfb	(_battCheckCount+1)& (0+255),w,b
  3212  003128  A0D8               	btfss	status,0,c
  3213  00312A  EF99  F018         	goto	u5111
  3214  00312E  EF9B  F018         	goto	u5110
  3215  003132                     u5111:
  3216  003132  EFD3  F018         	goto	l6207
  3217  003136                     u5110:
  3218  003136                     
  3219                           ; BSR set to: 0
  3220                           ;main.c: 87:         battCheckCount = 0;
  3221  003136  0E00               	movlw	0
  3222  003138  6FB9               	movwf	(_battCheckCount+1)& (0+255),b
  3223  00313A  0E00               	movlw	0
  3224  00313C  6FB8               	movwf	_battCheckCount& (0+255),b
  3225  00313E                     
  3226                           ; BSR set to: 0
  3227                           ;main.c: 88:         getBatteryVoltage();
  3228  00313E  EC45  F01D         	call	_getBatteryVoltage	;wreg free
  3229  003142                     
  3230                           ;main.c: 90:         if (BatteryVolt < (6.8) * 409.6f) {
  3231  003142  C0A8  F01C         	movff	_BatteryVolt,___xxtofl@val
  3232  003146  C0A9  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  3233  00314A  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3234  00314C  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3235  00314E  0E00               	movlw	0
  3236  003150  ECE1  F00F         	call	___xxtofl
  3237  003154  C01C  F02A         	movff	?___xxtofl,___flge@ff1
  3238  003158  C01D  F02B         	movff	?___xxtofl+1,___flge@ff1+1
  3239  00315C  C01E  F02C         	movff	?___xxtofl+2,___flge@ff1+2
  3240  003160  C01F  F02D         	movff	?___xxtofl+3,___flge@ff1+3
  3241  003164  0E7B               	movlw	123
  3242  003166  6E2E               	movwf	___flge@ff2^0,c
  3243  003168  0E14               	movlw	20
  3244  00316A  6E2F               	movwf	(___flge@ff2+1)^0,c
  3245  00316C  0E2E               	movlw	46
  3246  00316E  6E30               	movwf	(___flge@ff2+2)^0,c
  3247  003170  0E45               	movlw	69
  3248  003172  6E31               	movwf	(___flge@ff2+3)^0,c
  3249  003174  EC0D  F015         	call	___flge	;wreg free
  3250  003178  B0D8               	btfsc	status,0,c
  3251  00317A  EFC1  F018         	goto	u5121
  3252  00317E  EFC3  F018         	goto	u5120
  3253  003182                     u5121:
  3254  003182  EFD3  F018         	goto	l6207
  3255  003186                     u5120:
  3256  003186                     
  3257                           ;main.c: 91:             setSpeed = 0;
  3258  003186  0E00               	movlw	0
  3259  003188  0100               	movlb	0	; () banked
  3260  00318A  6FB3               	movwf	(_setSpeed+1)& (0+255),b
  3261  00318C  0E00               	movlw	0
  3262  00318E  6FB2               	movwf	_setSpeed& (0+255),b
  3263  003190                     
  3264                           ; BSR set to: 0
  3265                           ;main.c: 92:             setSteering(0, Front);
  3266  003190  0E00               	movlw	0
  3267  003192  6E1D               	movwf	(setSteering@steering+1)^0,c
  3268  003194  0E00               	movlw	0
  3269  003196  6E1C               	movwf	setSteering@steering^0,c
  3270  003198  0E03               	movlw	3
  3271  00319A  6E1E               	movwf	setSteering@steeringMode^0,c
  3272  00319C  ECBB  F010         	call	_setSteering	;wreg free
  3273  0031A0                     
  3274                           ;main.c: 93:             return 1;
  3275  0031A0  0E01               	movlw	1
  3276  0031A2  EFD4  F018         	goto	l1257
  3277  0031A6                     l6207:
  3278                           
  3279                           ;main.c: 96:     return 0;
  3280  0031A6  0E00               	movlw	0
  3281  0031A8                     l1257:
  3282  0031A8  0012               	return		;funcret
  3283  0031AA                     __end_of_checkBatt:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _setSteering *****************
  3287 ;; Defined at:
  3288 ;;		line 397 in file "main.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  steering        2   27[COMRAM] short 
  3291 ;;  steeringMode    1   29[COMRAM] enum E17304
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  steeringB       2   34[COMRAM] short 
  3294 ;;  steeringF       2   32[COMRAM] short 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;Total ram usage:        9 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 9
  3311 ;; This function calls:
  3312 ;;		_PWM5_LoadDutyValue
  3313 ;;		_PWM6_LoadDutyValue
  3314 ;;		___awdiv
  3315 ;; This function is called by:
  3316 ;;		_loop
  3317 ;;		_checkBatt
  3318 ;;		_startAccell
  3319 ;;		_calcSteering
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text13
  3324  002176                     __ptext13:
  3325                           	callstack 0
  3326  002176                     _setSteering:
  3327                           	callstack 19
  3328  002176  0E00               	movlw	0
  3329  002178  6E24               	movwf	(setSteering@steeringB+1)^0,c
  3330  00217A  0E00               	movlw	0
  3331  00217C  6E23               	movwf	setSteering@steeringB^0,c
  3332                           
  3333                           ;main.c: 399:     switch (steeringMode) {
  3334  00217E  EF0F  F011         	goto	l5551
  3335  002182                     l1382:
  3336                           
  3337                           ;main.c: 401:             steeringF = (+steering);
  3338  002182  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  3339  002186  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  3340                           
  3341                           ;main.c: 402:             steeringB = -steering;
  3342  00218A  C01C  F01F         	movff	setSteering@steering,??_setSteering
  3343  00218E  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  3344  002192  1E1F               	comf	??_setSteering^0,f,c
  3345  002194  1E20               	comf	(??_setSteering+1)^0,f,c
  3346  002196  4A1F               	infsnz	??_setSteering^0,f,c
  3347  002198  2A20               	incf	(??_setSteering+1)^0,f,c
  3348  00219A  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  3349  00219E  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  3350                           
  3351                           ;main.c: 403:             break;
  3352  0021A2  EF30  F011         	goto	l5553
  3353  0021A6                     l1384:
  3354                           
  3355                           ;main.c: 405:             steeringF = (+steering);
  3356  0021A6  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  3357  0021AA  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  3358                           
  3359                           ;main.c: 406:             steeringB = (+steering);
  3360  0021AE  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  3361  0021B2  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  3362                           
  3363                           ;main.c: 407:             break;
  3364  0021B6  EF30  F011         	goto	l5553
  3365  0021BA                     l1385:
  3366                           
  3367                           ;main.c: 409:             steeringF = (+steering);
  3368  0021BA  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  3369  0021BE  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  3370  0021C2                     
  3371                           ;main.c: 410:             steeringB = (-steering / (2));
  3372  0021C2  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  3373  0021C6  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  3374  0021CA  0EFF               	movlw	255
  3375  0021CC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  3376  0021CE  0EFE               	movlw	254
  3377  0021D0  6E16               	movwf	___awdiv@divisor^0,c
  3378  0021D2  ECE3  F016         	call	___awdiv	;wreg free
  3379  0021D6  C014  F023         	movff	?___awdiv,setSteering@steeringB
  3380  0021DA  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  3381                           
  3382                           ;main.c: 411:             break;
  3383  0021DE  EF30  F011         	goto	l5553
  3384  0021E2                     l1386:
  3385                           
  3386                           ;main.c: 413:             steeringF = (+steering);
  3387  0021E2  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  3388  0021E6  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  3389  0021EA                     
  3390                           ;main.c: 414:             steeringB = 0;
  3391  0021EA  0E00               	movlw	0
  3392  0021EC  6E24               	movwf	(setSteering@steeringB+1)^0,c
  3393  0021EE  0E00               	movlw	0
  3394  0021F0  6E23               	movwf	setSteering@steeringB^0,c
  3395                           
  3396                           ;main.c: 415:             break;
  3397  0021F2  EF30  F011         	goto	l5553
  3398  0021F6                     l5543:
  3399                           
  3400                           ;main.c: 417:             steeringF = 0;
  3401  0021F6  0E00               	movlw	0
  3402  0021F8  6E22               	movwf	(setSteering@steeringF+1)^0,c
  3403  0021FA  0E00               	movlw	0
  3404  0021FC  6E21               	movwf	setSteering@steeringF^0,c
  3405  0021FE                     
  3406                           ;main.c: 418:             steeringB = (+steering);
  3407  0021FE  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  3408  002202  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  3409                           
  3410                           ;main.c: 419:             break;
  3411  002206  EF30  F011         	goto	l5553
  3412  00220A                     l5547:
  3413                           
  3414                           ;main.c: 421:             steeringF = 0;
  3415  00220A  0E00               	movlw	0
  3416  00220C  6E22               	movwf	(setSteering@steeringF+1)^0,c
  3417  00220E  0E00               	movlw	0
  3418  002210  6E21               	movwf	setSteering@steeringF^0,c
  3419                           
  3420                           ;main.c: 422:             steeringB = 0;
  3421  002212  0E00               	movlw	0
  3422  002214  6E24               	movwf	(setSteering@steeringB+1)^0,c
  3423  002216  0E00               	movlw	0
  3424  002218  6E23               	movwf	setSteering@steeringB^0,c
  3425                           
  3426                           ;main.c: 423:             break;
  3427  00221A  EF30  F011         	goto	l5553
  3428  00221E                     l5551:
  3429  00221E  501E               	movf	setSteering@steeringMode^0,w,c
  3430  002220  6E1F               	movwf	??_setSteering^0,c
  3431  002222  6A20               	clrf	(??_setSteering+1)^0,c
  3432                           
  3433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3434                           ; Switch size 1, requested type "simple"
  3435                           ; Number of cases is 1, Range of values is 0 to 0
  3436                           ; switch strategies available:
  3437                           ; Name         Instructions Cycles
  3438                           ; simple_byte            4     3 (average)
  3439                           ;	Chosen strategy is simple_byte
  3440  002224  5020               	movf	(??_setSteering+1)^0,w,c
  3441  002226  0A00               	xorlw	0	; case 0
  3442  002228  B4D8               	btfsc	status,2,c
  3443  00222A  EF19  F011         	goto	l6527
  3444  00222E  EF05  F011         	goto	l5547
  3445  002232                     l6527:
  3446                           
  3447                           ; Switch size 1, requested type "simple"
  3448                           ; Number of cases is 5, Range of values is 0 to 4
  3449                           ; switch strategies available:
  3450                           ; Name         Instructions Cycles
  3451                           ; simple_byte           16     9 (average)
  3452                           ;	Chosen strategy is simple_byte
  3453  002232  501F               	movf	??_setSteering^0,w,c
  3454  002234  0A00               	xorlw	0	; case 0
  3455  002236  B4D8               	btfsc	status,2,c
  3456  002238  EFC1  F010         	goto	l1382
  3457  00223C  0A01               	xorlw	1	; case 1
  3458  00223E  B4D8               	btfsc	status,2,c
  3459  002240  EFD3  F010         	goto	l1384
  3460  002244  0A03               	xorlw	3	; case 2
  3461  002246  B4D8               	btfsc	status,2,c
  3462  002248  EFDD  F010         	goto	l1385
  3463  00224C  0A01               	xorlw	1	; case 3
  3464  00224E  B4D8               	btfsc	status,2,c
  3465  002250  EFF1  F010         	goto	l1386
  3466  002254  0A07               	xorlw	7	; case 4
  3467  002256  B4D8               	btfsc	status,2,c
  3468  002258  EFFB  F010         	goto	l5543
  3469  00225C  EF05  F011         	goto	l5547
  3470  002260                     l5553:
  3471                           
  3472                           ;main.c: 426:     if (steeringF > ((65))) {
  3473  002260  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  3474  002262  EF3C  F011         	goto	u4081
  3475  002266  5022               	movf	(setSteering@steeringF+1)^0,w,c
  3476  002268  E109               	bnz	u4080
  3477  00226A  0E42               	movlw	66
  3478  00226C  5C21               	subwf	setSteering@steeringF^0,w,c
  3479  00226E  A0D8               	btfss	status,0,c
  3480  002270  EF3C  F011         	goto	u4081
  3481  002274  EF3E  F011         	goto	u4080
  3482  002278                     u4081:
  3483  002278  EF44  F011         	goto	l5557
  3484  00227C                     u4080:
  3485  00227C                     
  3486                           ;main.c: 427:         steeringF = ((65));
  3487  00227C  0E00               	movlw	0
  3488  00227E  6E22               	movwf	(setSteering@steeringF+1)^0,c
  3489  002280  0E41               	movlw	65
  3490  002282  6E21               	movwf	setSteering@steeringF^0,c
  3491                           
  3492                           ;main.c: 428:     } else if (steeringF < (-(65))) {
  3493  002284  EF56  F011         	goto	l5561
  3494  002288                     l5557:
  3495  002288  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  3496  00228A  EF50  F011         	goto	u4091
  3497  00228E  0EBF               	movlw	191
  3498  002290  5C21               	subwf	setSteering@steeringF^0,w,c
  3499  002292  0EFF               	movlw	255
  3500  002294  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  3501  002296  B0D8               	btfsc	status,0,c
  3502  002298  EF50  F011         	goto	u4091
  3503  00229C  EF52  F011         	goto	u4090
  3504  0022A0                     u4091:
  3505  0022A0  EF56  F011         	goto	l5561
  3506  0022A4                     u4090:
  3507  0022A4                     
  3508                           ;main.c: 429:         steeringF = (-(65));
  3509  0022A4  0EFF               	movlw	255
  3510  0022A6  6E22               	movwf	(setSteering@steeringF+1)^0,c
  3511  0022A8  0EBF               	movlw	191
  3512  0022AA  6E21               	movwf	setSteering@steeringF^0,c
  3513  0022AC                     l5561:
  3514                           
  3515                           ;main.c: 432:     if (steeringB > ((40))) {
  3516  0022AC  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  3517  0022AE  EF62  F011         	goto	u4101
  3518  0022B2  5024               	movf	(setSteering@steeringB+1)^0,w,c
  3519  0022B4  E109               	bnz	u4100
  3520  0022B6  0E29               	movlw	41
  3521  0022B8  5C23               	subwf	setSteering@steeringB^0,w,c
  3522  0022BA  A0D8               	btfss	status,0,c
  3523  0022BC  EF62  F011         	goto	u4101
  3524  0022C0  EF64  F011         	goto	u4100
  3525  0022C4                     u4101:
  3526  0022C4  EF6A  F011         	goto	l5565
  3527  0022C8                     u4100:
  3528  0022C8                     
  3529                           ;main.c: 433:         steeringB = ((40));
  3530  0022C8  0E00               	movlw	0
  3531  0022CA  6E24               	movwf	(setSteering@steeringB+1)^0,c
  3532  0022CC  0E28               	movlw	40
  3533  0022CE  6E23               	movwf	setSteering@steeringB^0,c
  3534                           
  3535                           ;main.c: 434:     } else if (steeringB < (-(40))) {
  3536  0022D0  EF7C  F011         	goto	l5569
  3537  0022D4                     l5565:
  3538  0022D4  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  3539  0022D6  EF76  F011         	goto	u4111
  3540  0022DA  0ED8               	movlw	216
  3541  0022DC  5C23               	subwf	setSteering@steeringB^0,w,c
  3542  0022DE  0EFF               	movlw	255
  3543  0022E0  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  3544  0022E2  B0D8               	btfsc	status,0,c
  3545  0022E4  EF76  F011         	goto	u4111
  3546  0022E8  EF78  F011         	goto	u4110
  3547  0022EC                     u4111:
  3548  0022EC  EF7C  F011         	goto	l5569
  3549  0022F0                     u4110:
  3550  0022F0                     
  3551                           ;main.c: 435:         steeringB = (-(40));
  3552  0022F0  0EFF               	movlw	255
  3553  0022F2  6E24               	movwf	(setSteering@steeringB+1)^0,c
  3554  0022F4  0ED8               	movlw	216
  3555  0022F6  6E23               	movwf	setSteering@steeringB^0,c
  3556  0022F8                     l5569:
  3557                           
  3558                           ;main.c: 439:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  3559  0022F8  0E60               	movlw	96
  3560  0022FA  2421               	addwf	setSteering@steeringF^0,w,c
  3561  0022FC  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  3562  0022FE  0E01               	movlw	1
  3563  002300  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  3564  002302  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  3565  002304  ECDE  F01A         	call	_PWM6_LoadDutyValue	;wreg free
  3566  002308                     
  3567                           ;main.c: 440:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  3568  002308  0E65               	movlw	101
  3569  00230A  2423               	addwf	setSteering@steeringB^0,w,c
  3570  00230C  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  3571  00230E  0E01               	movlw	1
  3572  002310  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  3573  002312  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  3574  002314  ECF8  F01A         	call	_PWM5_LoadDutyValue	;wreg free
  3575  002318  0012               	return		;funcret
  3576  00231A                     __end_of_setSteering:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _PWM6_LoadDutyValue *****************
  3580 ;; Defined at:
  3581 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;  dutyValue       2   19[COMRAM] unsigned short 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;		None
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;Total ram usage:        4 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 8
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_setSteering
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text14
  3610  0035BC                     __ptext14:
  3611                           	callstack 0
  3612  0035BC                     _PWM6_LoadDutyValue:
  3613                           	callstack 19
  3614  0035BC                     
  3615                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3616  0035BC  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  3617  0035C0  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  3618  0035C4  90D8               	bcf	status,0,c
  3619  0035C6  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  3620  0035C8  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  3621  0035CA  90D8               	bcf	status,0,c
  3622  0035CC  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  3623  0035CE  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  3624  0035D0  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  3625  0035D2  6E69               	movwf	105,c	;volatile
  3626                           
  3627                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  3628  0035D4  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  3629  0035D8  0E03               	movlw	3
  3630  0035DA  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  3631  0035DC  0E06               	movlw	6
  3632  0035DE  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  3633  0035E0                     u3995:
  3634  0035E0  90D8               	bcf	status,0,c
  3635  0035E2  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  3636  0035E4  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  3637  0035E6  EFF0  F01A         	goto	u3995
  3638  0035EA  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  3639  0035EC  6E68               	movwf	104,c	;volatile
  3640  0035EE  0012               	return		;funcret
  3641  0035F0                     __end_of_PWM6_LoadDutyValue:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _PWM5_LoadDutyValue *****************
  3645 ;; Defined at:
  3646 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  dutyValue       2   19[COMRAM] unsigned short 
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        4 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 8
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_setSteering
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text15
  3675  0035F0                     __ptext15:
  3676                           	callstack 0
  3677  0035F0                     _PWM5_LoadDutyValue:
  3678                           	callstack 19
  3679  0035F0                     
  3680                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3681  0035F0  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  3682  0035F4  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  3683  0035F8  90D8               	bcf	status,0,c
  3684  0035FA  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  3685  0035FC  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  3686  0035FE  90D8               	bcf	status,0,c
  3687  003600  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  3688  003602  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  3689  003604  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  3690  003606  6E6D               	movwf	109,c	;volatile
  3691                           
  3692                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  3693  003608  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  3694  00360C  0E03               	movlw	3
  3695  00360E  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  3696  003610  0E06               	movlw	6
  3697  003612  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  3698  003614                     u3985:
  3699  003614  90D8               	bcf	status,0,c
  3700  003616  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  3701  003618  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  3702  00361A  EF0A  F01B         	goto	u3985
  3703  00361E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  3704  003620  6E6C               	movwf	108,c	;volatile
  3705  003622  0012               	return		;funcret
  3706  003624                     __end_of_PWM5_LoadDutyValue:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _getBatteryVoltage *****************
  3710 ;; Defined at:
  3711 ;;		line 79 in file "main.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 9
  3732 ;; This function calls:
  3733 ;;		_ADCC_GetSingleConversion
  3734 ;; This function is called by:
  3735 ;;		_loop
  3736 ;;		_checkBatt
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text16
  3741  003A8A                     __ptext16:
  3742                           	callstack 0
  3743  003A8A                     _getBatteryVoltage:
  3744                           	callstack 20
  3745  003A8A                     
  3746                           ;main.c: 80:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3747  003A8A  0E22               	movlw	34
  3748  003A8C  EC7A  F01B         	call	_ADCC_GetSingleConversion
  3749  003A90  C014  F0A8         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3750  003A94  C015  F0A9         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3751  003A98  0012               	return		;funcret
  3752  003A9A                     __end_of_getBatteryVoltage:
  3753                           	callstack 0
  3754                           
  3755 ;; *************** function _ADCC_GetSingleConversion *****************
  3756 ;; Defined at:
  3757 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  channel         1    wreg     enum E16058
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  channel         1   23[COMRAM] enum E16058
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2   19[COMRAM] unsigned short 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;Total ram usage:        5 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; Hardware stack levels required when called: 8
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_getBatteryVoltage
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text17
  3786  0036F4                     __ptext17:
  3787                           	callstack 0
  3788  0036F4                     _ADCC_GetSingleConversion:
  3789                           	callstack 20
  3790                           
  3791                           ;incstack = 0
  3792                           ;ADCC_GetSingleConversion@channel stored from wreg
  3793  0036F4  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  3794  0036F6                     
  3795                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3796  0036F6  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3797  0036FC                     
  3798                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3799  0036FC  013E               	movlb	62	; () banked
  3800  0036FE  8FF8               	bsf	248,7,b	;volatile
  3801  003700                     
  3802                           ; BSR set to: 62
  3803                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3804  003700  9DF8               	bcf	248,6,b	;volatile
  3805  003702                     
  3806                           ; BSR set to: 62
  3807                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3808  003702  81F8               	bsf	248,0,b	;volatile
  3809  003704                     l1054:
  3810                           
  3811                           ; BSR set to: 62
  3812                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3813  003704  B1F8               	btfsc	248,0,b	;volatile
  3814  003706  EF87  F01B         	goto	u2181
  3815  00370A  EF89  F01B         	goto	u2180
  3816  00370E                     u2181:
  3817  00370E  EF82  F01B         	goto	l1054
  3818  003712                     u2180:
  3819  003712                     
  3820                           ; BSR set to: 62
  3821                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3822  003712  51F0               	movf	240,w,b	;volatile
  3823  003714  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  3824  003716  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  3825  003718  51EF               	movf	239,w,b	;volatile
  3826  00371A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  3827  00371C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  3828  00371E  0E00               	movlw	0
  3829  003720  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  3830  003722  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3831  003724                     
  3832                           ; BSR set to: 62
  3833  003724  0012               	return		;funcret
  3834  003726                     __end_of_ADCC_GetSingleConversion:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function ___flge *****************
  3838 ;; Defined at:
  3839 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  ff1             4   41[COMRAM] unsigned short 
  3842 ;;  ff2             4   45[COMRAM] unsigned short 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;		None               void
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3854 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;Total ram usage:       12 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 8
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_loop
  3865 ;;		_checkBatt
  3866 ;;		_startAccell
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text18
  3871  002A1A                     __ptext18:
  3872                           	callstack 0
  3873  002A1A                     ___flge:
  3874                           	callstack 20
  3875  002A1A  0E00               	movlw	0
  3876  002A1C  142A               	andwf	___flge@ff1^0,w,c
  3877  002A1E  6E32               	movwf	??___flge^0,c
  3878  002A20  0E00               	movlw	0
  3879  002A22  142B               	andwf	(___flge@ff1+1)^0,w,c
  3880  002A24  6E33               	movwf	(??___flge+1)^0,c
  3881  002A26  0E80               	movlw	128
  3882  002A28  142C               	andwf	(___flge@ff1+2)^0,w,c
  3883  002A2A  6E34               	movwf	(??___flge+2)^0,c
  3884  002A2C  0E7F               	movlw	127
  3885  002A2E  142D               	andwf	(___flge@ff1+3)^0,w,c
  3886  002A30  6E35               	movwf	(??___flge+3)^0,c
  3887  002A32  5032               	movf	??___flge^0,w,c
  3888  002A34  1033               	iorwf	(??___flge+1)^0,w,c
  3889  002A36  1034               	iorwf	(??___flge+2)^0,w,c
  3890  002A38  1035               	iorwf	(??___flge+3)^0,w,c
  3891  002A3A  A4D8               	btfss	status,2,c
  3892  002A3C  EF22  F015         	goto	u5031
  3893  002A40  EF24  F015         	goto	u5030
  3894  002A44                     u5031:
  3895  002A44  EF2C  F015         	goto	l6139
  3896  002A48                     u5030:
  3897  002A48  0E00               	movlw	0
  3898  002A4A  6E2A               	movwf	___flge@ff1^0,c
  3899  002A4C  0E00               	movlw	0
  3900  002A4E  6E2B               	movwf	(___flge@ff1+1)^0,c
  3901  002A50  0E00               	movlw	0
  3902  002A52  6E2C               	movwf	(___flge@ff1+2)^0,c
  3903  002A54  0E00               	movlw	0
  3904  002A56  6E2D               	movwf	(___flge@ff1+3)^0,c
  3905  002A58                     l6139:
  3906  002A58  0E00               	movlw	0
  3907  002A5A  142E               	andwf	___flge@ff2^0,w,c
  3908  002A5C  6E32               	movwf	??___flge^0,c
  3909  002A5E  0E00               	movlw	0
  3910  002A60  142F               	andwf	(___flge@ff2+1)^0,w,c
  3911  002A62  6E33               	movwf	(??___flge+1)^0,c
  3912  002A64  0E80               	movlw	128
  3913  002A66  1430               	andwf	(___flge@ff2+2)^0,w,c
  3914  002A68  6E34               	movwf	(??___flge+2)^0,c
  3915  002A6A  0E7F               	movlw	127
  3916  002A6C  1431               	andwf	(___flge@ff2+3)^0,w,c
  3917  002A6E  6E35               	movwf	(??___flge+3)^0,c
  3918  002A70  5032               	movf	??___flge^0,w,c
  3919  002A72  1033               	iorwf	(??___flge+1)^0,w,c
  3920  002A74  1034               	iorwf	(??___flge+2)^0,w,c
  3921  002A76  1035               	iorwf	(??___flge+3)^0,w,c
  3922  002A78  A4D8               	btfss	status,2,c
  3923  002A7A  EF41  F015         	goto	u5041
  3924  002A7E  EF43  F015         	goto	u5040
  3925  002A82                     u5041:
  3926  002A82  EF4B  F015         	goto	l6143
  3927  002A86                     u5040:
  3928  002A86  0E00               	movlw	0
  3929  002A88  6E2E               	movwf	___flge@ff2^0,c
  3930  002A8A  0E00               	movlw	0
  3931  002A8C  6E2F               	movwf	(___flge@ff2+1)^0,c
  3932  002A8E  0E00               	movlw	0
  3933  002A90  6E30               	movwf	(___flge@ff2+2)^0,c
  3934  002A92  0E00               	movlw	0
  3935  002A94  6E31               	movwf	(___flge@ff2+3)^0,c
  3936  002A96                     l6143:
  3937  002A96  AE2D               	btfss	(___flge@ff1+3)^0,7,c
  3938  002A98  EF50  F015         	goto	u5051
  3939  002A9C  EF52  F015         	goto	u5050
  3940  002AA0                     u5051:
  3941  002AA0  EF5B  F015         	goto	l6147
  3942  002AA4                     u5050:
  3943  002AA4  6C2A               	negf	___flge@ff1^0,c
  3944  002AA6  1E2B               	comf	(___flge@ff1+1)^0,f,c
  3945  002AA8  B0D8               	btfsc	status,0,c
  3946  002AAA  2A2B               	incf	(___flge@ff1+1)^0,f,c
  3947  002AAC  1E2C               	comf	(___flge@ff1+2)^0,f,c
  3948  002AAE  B0D8               	btfsc	status,0,c
  3949  002AB0  2A2C               	incf	(___flge@ff1+2)^0,f,c
  3950  002AB2  0E80               	movlw	128
  3951  002AB4  562D               	subfwb	(___flge@ff1+3)^0,f,c
  3952  002AB6                     l6147:
  3953  002AB6  AE31               	btfss	(___flge@ff2+3)^0,7,c
  3954  002AB8  EF60  F015         	goto	u5061
  3955  002ABC  EF62  F015         	goto	u5060
  3956  002AC0                     u5061:
  3957  002AC0  EF6B  F015         	goto	l1663
  3958  002AC4                     u5060:
  3959  002AC4  6C2E               	negf	___flge@ff2^0,c
  3960  002AC6  1E2F               	comf	(___flge@ff2+1)^0,f,c
  3961  002AC8  B0D8               	btfsc	status,0,c
  3962  002ACA  2A2F               	incf	(___flge@ff2+1)^0,f,c
  3963  002ACC  1E30               	comf	(___flge@ff2+2)^0,f,c
  3964  002ACE  B0D8               	btfsc	status,0,c
  3965  002AD0  2A30               	incf	(___flge@ff2+2)^0,f,c
  3966  002AD2  0E80               	movlw	128
  3967  002AD4  5631               	subfwb	(___flge@ff2+3)^0,f,c
  3968  002AD6                     l1663:
  3969  002AD6  0E00               	movlw	0
  3970  002AD8  1A2A               	xorwf	___flge@ff1^0,f,c
  3971  002ADA  0E00               	movlw	0
  3972  002ADC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
  3973  002ADE  0E00               	movlw	0
  3974  002AE0  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
  3975  002AE2  0E80               	movlw	128
  3976  002AE4  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
  3977  002AE6  0E00               	movlw	0
  3978  002AE8  1A2E               	xorwf	___flge@ff2^0,f,c
  3979  002AEA  0E00               	movlw	0
  3980  002AEC  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
  3981  002AEE  0E00               	movlw	0
  3982  002AF0  1A30               	xorwf	(___flge@ff2+2)^0,f,c
  3983  002AF2  0E80               	movlw	128
  3984  002AF4  1A31               	xorwf	(___flge@ff2+3)^0,f,c
  3985  002AF6  502E               	movf	___flge@ff2^0,w,c
  3986  002AF8  5C2A               	subwf	___flge@ff1^0,w,c
  3987  002AFA  502F               	movf	(___flge@ff2+1)^0,w,c
  3988  002AFC  582B               	subwfb	(___flge@ff1+1)^0,w,c
  3989  002AFE  5030               	movf	(___flge@ff2+2)^0,w,c
  3990  002B00  582C               	subwfb	(___flge@ff1+2)^0,w,c
  3991  002B02  5031               	movf	(___flge@ff2+3)^0,w,c
  3992  002B04  582D               	subwfb	(___flge@ff1+3)^0,w,c
  3993  002B06  B0D8               	btfsc	status,0,c
  3994  002B08  EF88  F015         	goto	u5071
  3995  002B0C  EF8A  F015         	goto	u5070
  3996  002B10                     u5071:
  3997  002B10  EF8D  F015         	goto	l6153
  3998  002B14                     u5070:
  3999  002B14  90D8               	bcf	status,0,c
  4000  002B16  EF8E  F015         	goto	l1668
  4001  002B1A                     l6153:
  4002  002B1A  80D8               	bsf	status,0,c
  4003  002B1C                     l1668:
  4004  002B1C  0012               	return		;funcret
  4005  002B1E                     __end_of___flge:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _calcSpeed *****************
  4009 ;; Defined at:
  4010 ;;		line 289 in file "main.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  speed           2    6[BANK1 ] short 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;Total ram usage:        6 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 9
  4031 ;; This function calls:
  4032 ;;		___fladd
  4033 ;;		___flmul
  4034 ;;		___fltol
  4035 ;;		___xxtofl
  4036 ;; This function is called by:
  4037 ;;		_loop
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text19
  4042  001DAC                     __ptext19:
  4043                           	callstack 0
  4044  001DAC                     _calcSpeed:
  4045                           	callstack 20
  4046  001DAC                     
  4047                           ;main.c: 290:     int16_t speed = 0;
  4048  001DAC  0E00               	movlw	0
  4049  001DAE  0101               	movlb	1	; () banked
  4050  001DB0  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4051  001DB2  0E00               	movlw	0
  4052  001DB4  6F06               	movwf	calcSpeed@speed& (0+255),b
  4053                           
  4054                           ;main.c: 292:     switch (driveMode) {
  4055  001DB6  EF92  F00F         	goto	l6249
  4056  001DBA                     l6213:
  4057                           
  4058                           ; BSR set to: 1
  4059                           ;main.c: 294:             if (distFront > (30)) {
  4060  001DBA  504B               	movf	(_distFront+1)^0,w,c	;volatile
  4061  001DBC  E109               	bnz	u5130
  4062  001DBE  0E1F               	movlw	31
  4063  001DC0  5C4A               	subwf	_distFront^0,w,c	;volatile
  4064  001DC2  A0D8               	btfss	status,0,c
  4065  001DC4  EFE6  F00E         	goto	u5131
  4066  001DC8  EFE8  F00E         	goto	u5130
  4067  001DCC                     u5131:
  4068  001DCC  EFEA  F00E         	goto	l6217
  4069  001DD0                     u5130:
  4070  001DD0                     
  4071                           ; BSR set to: 1
  4072                           ;main.c: 295:                 driveMode = Straight;
  4073  001DD0  0E01               	movlw	1
  4074  001DD2  6E4C               	movwf	_driveMode^0,c
  4075  001DD4                     l6217:
  4076                           
  4077                           ; BSR set to: 1
  4078                           ;main.c: 297:             if (setSpeed > (100)) {
  4079  001DD4  0100               	movlb	0	; () banked
  4080  001DD6  BFB3               	btfsc	(_setSpeed+1)& (0+255),7,b
  4081  001DD8  EFF7  F00E         	goto	u5141
  4082  001DDC  51B3               	movf	(_setSpeed+1)& (0+255),w,b
  4083  001DDE  E109               	bnz	u5140
  4084  001DE0  0E65               	movlw	101
  4085  001DE2  5DB2               	subwf	_setSpeed& (0+255),w,b
  4086  001DE4  A0D8               	btfss	status,0,c
  4087  001DE6  EFF7  F00E         	goto	u5141
  4088  001DEA  EFF9  F00E         	goto	u5140
  4089  001DEE                     u5141:
  4090  001DEE  EF16  F00F         	goto	l6227
  4091  001DF2                     u5140:
  4092  001DF2                     
  4093                           ; BSR set to: 0
  4094                           ;main.c: 298:                     speed = setSpeed;
  4095  001DF2  C0B2  F106         	movff	_setSpeed,calcSpeed@speed
  4096  001DF6  C0B3  F107         	movff	_setSpeed+1,calcSpeed@speed+1
  4097  001DFA                     
  4098                           ; BSR set to: 0
  4099                           ;main.c: 299:                 if (distFront < (15)) {
  4100  001DFA  504B               	movf	(_distFront+1)^0,w,c	;volatile
  4101  001DFC  E107               	bnz	u5151
  4102  001DFE  0E0F               	movlw	15
  4103  001E00  5C4A               	subwf	_distFront^0,w,c	;volatile
  4104  001E02  B0D8               	btfsc	status,0,c
  4105  001E04  EF06  F00F         	goto	u5151
  4106  001E08  EF08  F00F         	goto	u5150
  4107  001E0C                     u5151:
  4108  001E0C  EF0F  F00F         	goto	l6225
  4109  001E10                     u5150:
  4110  001E10                     
  4111                           ; BSR set to: 0
  4112                           ;main.c: 300:                     speed -= 4;
  4113  001E10  0101               	movlb	1	; () banked
  4114  001E12  0EFC               	movlw	252
  4115  001E14  2706               	addwf	calcSpeed@speed& (0+255),f,b
  4116  001E16  0EFF               	movlw	255
  4117  001E18  2307               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  4118                           
  4119                           ;main.c: 301:                 } else {
  4120  001E1A  EFB7  F00F         	goto	l6251
  4121  001E1E                     l6225:
  4122                           
  4123                           ; BSR set to: 0
  4124                           ;main.c: 302:                     speed -= 2;
  4125  001E1E  0101               	movlb	1	; () banked
  4126  001E20  0EFE               	movlw	254
  4127  001E22  2706               	addwf	calcSpeed@speed& (0+255),f,b
  4128  001E24  0EFF               	movlw	255
  4129  001E26  2307               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  4130  001E28  EFB7  F00F         	goto	l6251
  4131  001E2C                     l6227:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;main.c: 305:                 speed = (100);
  4135  001E2C  0E00               	movlw	0
  4136  001E2E  0101               	movlb	1	; () banked
  4137  001E30  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4138  001E32  0E64               	movlw	100
  4139  001E34  6F06               	movwf	calcSpeed@speed& (0+255),b
  4140  001E36  EFB7  F00F         	goto	l6251
  4141  001E3A                     l6229:
  4142                           
  4143                           ; BSR set to: 1
  4144                           ;main.c: 309:             if (distFront < (30)) {
  4145  001E3A  504B               	movf	(_distFront+1)^0,w,c	;volatile
  4146  001E3C  E107               	bnz	u5161
  4147  001E3E  0E1E               	movlw	30
  4148  001E40  5C4A               	subwf	_distFront^0,w,c	;volatile
  4149  001E42  B0D8               	btfsc	status,0,c
  4150  001E44  EF26  F00F         	goto	u5161
  4151  001E48  EF28  F00F         	goto	u5160
  4152  001E4C                     u5161:
  4153  001E4C  EF2A  F00F         	goto	l6233
  4154  001E50                     u5160:
  4155  001E50                     
  4156                           ; BSR set to: 1
  4157                           ;main.c: 310:                 driveMode = Brake;
  4158  001E50  0E02               	movlw	2
  4159  001E52  6E4C               	movwf	_driveMode^0,c
  4160  001E54                     l6233:
  4161                           
  4162                           ; BSR set to: 1
  4163                           ;main.c: 313:             if (distFront >= (150)) {
  4164  001E54  504B               	movf	(_distFront+1)^0,w,c	;volatile
  4165  001E56  E109               	bnz	u5170
  4166  001E58  0E96               	movlw	150
  4167  001E5A  5C4A               	subwf	_distFront^0,w,c	;volatile
  4168  001E5C  A0D8               	btfss	status,0,c
  4169  001E5E  EF33  F00F         	goto	u5171
  4170  001E62  EF35  F00F         	goto	u5170
  4171  001E66                     u5171:
  4172  001E66  EF80  F00F         	goto	l6237
  4173  001E6A                     u5170:
  4174  001E6A                     
  4175                           ; BSR set to: 1
  4176                           ;main.c: 314:                 speed = (int16_t) ((0.5) * (distFront - (150)) + (275));
  4177  001E6A  0E00               	movlw	0
  4178  001E6C  0100               	movlb	0	; () banked
  4179  001E6E  6FD8               	movwf	___fladd@a& (0+255),b
  4180  001E70  0E80               	movlw	128
  4181  001E72  6FD9               	movwf	(___fladd@a+1)& (0+255),b
  4182  001E74  0E89               	movlw	137
  4183  001E76  6FDA               	movwf	(___fladd@a+2)& (0+255),b
  4184  001E78  0E43               	movlw	67
  4185  001E7A  6FDB               	movwf	(___fladd@a+3)& (0+255),b
  4186  001E7C  0E00               	movlw	0
  4187  001E7E  6E2E               	movwf	___flmul@a^0,c
  4188  001E80  0E00               	movlw	0
  4189  001E82  6E2F               	movwf	(___flmul@a+1)^0,c
  4190  001E84  0E00               	movlw	0
  4191  001E86  6E30               	movwf	(___flmul@a+2)^0,c
  4192  001E88  0E3F               	movlw	63
  4193  001E8A  6E31               	movwf	(___flmul@a+3)^0,c
  4194  001E8C  0E6A               	movlw	106
  4195  001E8E  0101               	movlb	1	; () banked
  4196  001E90  6F02               	movwf	??_calcSpeed& (0+255),b
  4197  001E92  0EFF               	movlw	255
  4198  001E94  6F03               	movwf	(??_calcSpeed+1)& (0+255),b
  4199  001E96  C04A  F104         	movff	_distFront,??_calcSpeed+2	;volatile
  4200  001E9A  C04B  F105         	movff	_distFront+1,??_calcSpeed+3	;volatile
  4201  001E9E  5102               	movf	??_calcSpeed& (0+255),w,b
  4202  001EA0  2704               	addwf	(??_calcSpeed+2)& (0+255),f,b
  4203  001EA2  5103               	movf	(??_calcSpeed+1)& (0+255),w,b
  4204  001EA4  2305               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  4205  001EA6  C104  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  4206  001EAA  C105  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  4207  001EAE  6A1E               	clrf	(___xxtofl@val+2)^0,c
  4208  001EB0  6A1F               	clrf	(___xxtofl@val+3)^0,c
  4209  001EB2  0E00               	movlw	0
  4210  001EB4  ECE1  F00F         	call	___xxtofl
  4211  001EB8  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4212  001EBC  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4213  001EC0  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4214  001EC4  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4215  001EC8  EC68  F00A         	call	___flmul	;wreg free
  4216  001ECC  C02A  F0D4         	movff	?___flmul,___fladd@b
  4217  001ED0  C02B  F0D5         	movff	?___flmul+1,___fladd@b+1
  4218  001ED4  C02C  F0D6         	movff	?___flmul+2,___fladd@b+2
  4219  001ED8  C02D  F0D7         	movff	?___flmul+3,___fladd@b+3
  4220  001EDC  EC07  F008         	call	___fladd	;wreg free
  4221  001EE0  C0D4  F0E0         	movff	?___fladd,___fltol@f1
  4222  001EE4  C0D5  F0E1         	movff	?___fladd+1,___fltol@f1+1
  4223  001EE8  C0D6  F0E2         	movff	?___fladd+2,___fltol@f1+2
  4224  001EEC  C0D7  F0E3         	movff	?___fladd+3,___fltol@f1+3
  4225  001EF0  EC6B  F013         	call	___fltol	;wreg free
  4226  001EF4  C0E0  F106         	movff	?___fltol,calcSpeed@speed
  4227  001EF8  C0E1  F107         	movff	?___fltol+1,calcSpeed@speed+1
  4228                           
  4229                           ;main.c: 315:             } else {
  4230  001EFC  EFB7  F00F         	goto	l6251
  4231  001F00                     l6237:
  4232                           
  4233                           ; BSR set to: 1
  4234                           ;main.c: 316:                 speed = (275);
  4235  001F00  0E01               	movlw	1
  4236  001F02  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4237  001F04  0E13               	movlw	19
  4238  001F06  6F06               	movwf	calcSpeed@speed& (0+255),b
  4239  001F08  EFB7  F00F         	goto	l6251
  4240  001F0C                     l6239:
  4241                           
  4242                           ; BSR set to: 1
  4243                           ;main.c: 321:             speed = (-125);
  4244  001F0C  0EFF               	movlw	255
  4245  001F0E  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4246  001F10  0E83               	movlw	131
  4247  001F12  6F06               	movwf	calcSpeed@speed& (0+255),b
  4248                           
  4249                           ;main.c: 322:             break;
  4250  001F14  EFB7  F00F         	goto	l6251
  4251  001F18                     l6243:
  4252                           
  4253                           ; BSR set to: 1
  4254                           ;main.c: 327:             speed = (200);
  4255  001F18  0E00               	movlw	0
  4256  001F1A  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4257  001F1C  0EC8               	movlw	200
  4258  001F1E  6F06               	movwf	calcSpeed@speed& (0+255),b
  4259                           
  4260                           ;main.c: 328:             break;
  4261  001F20  EFB7  F00F         	goto	l6251
  4262  001F24                     l6249:
  4263                           
  4264                           ; BSR set to: 1
  4265  001F24  504C               	movf	_driveMode^0,w,c
  4266  001F26  6F02               	movwf	??_calcSpeed& (0+255),b
  4267  001F28  6B03               	clrf	(??_calcSpeed+1)& (0+255),b
  4268                           
  4269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4270                           ; Switch size 1, requested type "simple"
  4271                           ; Number of cases is 1, Range of values is 0 to 0
  4272                           ; switch strategies available:
  4273                           ; Name         Instructions Cycles
  4274                           ; simple_byte            4     3 (average)
  4275                           ;	Chosen strategy is simple_byte
  4276  001F2A  5103               	movf	(??_calcSpeed+1)& (0+255),w,b
  4277  001F2C  0A00               	xorlw	0	; case 0
  4278  001F2E  B4D8               	btfsc	status,2,c
  4279  001F30  EF9C  F00F         	goto	l6529
  4280  001F34  EFB7  F00F         	goto	l6251
  4281  001F38                     l6529:
  4282                           
  4283                           ; BSR set to: 1
  4284                           ; Switch size 1, requested type "simple"
  4285                           ; Number of cases is 6, Range of values is 1 to 6
  4286                           ; switch strategies available:
  4287                           ; Name         Instructions Cycles
  4288                           ; simple_byte           19    10 (average)
  4289                           ;	Chosen strategy is simple_byte
  4290  001F38  5102               	movf	??_calcSpeed& (0+255),w,b
  4291  001F3A  0A01               	xorlw	1	; case 1
  4292  001F3C  B4D8               	btfsc	status,2,c
  4293  001F3E  EF1D  F00F         	goto	l6229
  4294  001F42  0A03               	xorlw	3	; case 2
  4295  001F44  B4D8               	btfsc	status,2,c
  4296  001F46  EFDD  F00E         	goto	l6213
  4297  001F4A  0A01               	xorlw	1	; case 3
  4298  001F4C  B4D8               	btfsc	status,2,c
  4299  001F4E  EF86  F00F         	goto	l6239
  4300  001F52  0A07               	xorlw	7	; case 4
  4301  001F54  B4D8               	btfsc	status,2,c
  4302  001F56  EF86  F00F         	goto	l6239
  4303  001F5A  0A01               	xorlw	1	; case 5
  4304  001F5C  B4D8               	btfsc	status,2,c
  4305  001F5E  EF8C  F00F         	goto	l6243
  4306  001F62  0A03               	xorlw	3	; case 6
  4307  001F64  B4D8               	btfsc	status,2,c
  4308  001F66  EF8C  F00F         	goto	l6243
  4309  001F6A  EFB7  F00F         	goto	l6251
  4310  001F6E                     l6251:
  4311                           
  4312                           ;main.c: 334:     if (speed > (400)) {
  4313  001F6E  0101               	movlb	1	; () banked
  4314  001F70  BF07               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  4315  001F72  EFC4  F00F         	goto	u5181
  4316  001F76  0E91               	movlw	145
  4317  001F78  5D06               	subwf	calcSpeed@speed& (0+255),w,b
  4318  001F7A  0E01               	movlw	1
  4319  001F7C  5907               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  4320  001F7E  A0D8               	btfss	status,0,c
  4321  001F80  EFC4  F00F         	goto	u5181
  4322  001F84  EFC6  F00F         	goto	u5180
  4323  001F88                     u5181:
  4324  001F88  EFCA  F00F         	goto	l6255
  4325  001F8C                     u5180:
  4326  001F8C                     
  4327                           ; BSR set to: 1
  4328                           ;main.c: 335:         speed = (400);
  4329  001F8C  0E01               	movlw	1
  4330  001F8E  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4331  001F90  0E90               	movlw	144
  4332  001F92  6F06               	movwf	calcSpeed@speed& (0+255),b
  4333  001F94                     l6255:
  4334                           
  4335                           ; BSR set to: 1
  4336                           ;main.c: 337:     if (speed < (-250)) {
  4337  001F94  AF07               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  4338  001F96  EFD6  F00F         	goto	u5191
  4339  001F9A  0E06               	movlw	6
  4340  001F9C  5D06               	subwf	calcSpeed@speed& (0+255),w,b
  4341  001F9E  0EFF               	movlw	255
  4342  001FA0  5907               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  4343  001FA2  B0D8               	btfsc	status,0,c
  4344  001FA4  EFD6  F00F         	goto	u5191
  4345  001FA8  EFD8  F00F         	goto	u5190
  4346  001FAC                     u5191:
  4347  001FAC  EFDC  F00F         	goto	l6259
  4348  001FB0                     u5190:
  4349  001FB0                     
  4350                           ; BSR set to: 1
  4351                           ;main.c: 338:         speed = (-250);
  4352  001FB0  0EFF               	movlw	255
  4353  001FB2  6F07               	movwf	(calcSpeed@speed+1)& (0+255),b
  4354  001FB4  0E06               	movlw	6
  4355  001FB6  6F06               	movwf	calcSpeed@speed& (0+255),b
  4356  001FB8                     l6259:
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;main.c: 340:     setSpeed = speed;
  4360  001FB8  C106  F0B2         	movff	calcSpeed@speed,_setSpeed
  4361  001FBC  C107  F0B3         	movff	calcSpeed@speed+1,_setSpeed+1
  4362  001FC0                     
  4363                           ; BSR set to: 1
  4364  001FC0  0012               	return		;funcret
  4365  001FC2                     __end_of_calcSpeed:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function ___fladd *****************
  4369 ;; Defined at:
  4370 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  b               4   13[BANK0 ] void 
  4373 ;;  a               4   17[BANK0 ] void 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  grs             1   24[BANK0 ] unsigned char 
  4376 ;;  bexp            1   23[BANK0 ] unsigned char 
  4377 ;;  aexp            1   22[BANK0 ] unsigned char 
  4378 ;;  signs           1   21[BANK0 ] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  4   13[BANK0 ] unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:       16 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 8
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_calcSpeed
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text20
  4403  00100E                     __ptext20:
  4404                           	callstack 0
  4405  00100E                     ___fladd:
  4406                           	callstack 20
  4407  00100E  0100               	movlb	0	; () banked
  4408  001010  51D7               	movf	(___fladd@b+3)& (0+255),w,b
  4409  001012  0B80               	andlw	128
  4410  001014  6FDC               	movwf	___fladd@signs& (0+255),b
  4411  001016  51D7               	movf	(___fladd@b+3)& (0+255),w,b
  4412  001018  25D7               	addwf	(___fladd@b+3)& (0+255),w,b
  4413  00101A  6FDE               	movwf	___fladd@bexp& (0+255),b
  4414  00101C                     
  4415                           ; BSR set to: 0
  4416  00101C  AFD6               	btfss	(___fladd@b+2)& (0+255),7,b
  4417  00101E  EF13  F008         	goto	u4641
  4418  001022  EF15  F008         	goto	u4640
  4419  001026                     u4641:
  4420  001026  EF16  F008         	goto	l5939
  4421  00102A                     u4640:
  4422  00102A                     
  4423                           ; BSR set to: 0
  4424  00102A  81DE               	bsf	___fladd@bexp& (0+255),0,b
  4425  00102C                     l5939:
  4426                           
  4427                           ; BSR set to: 0
  4428  00102C  51DE               	movf	___fladd@bexp& (0+255),w,b
  4429  00102E  B4D8               	btfsc	status,2,c
  4430  001030  EF1C  F008         	goto	u4651
  4431  001034  EF1E  F008         	goto	u4650
  4432  001038                     u4651:
  4433  001038  EF33  F008         	goto	l5949
  4434  00103C                     u4650:
  4435  00103C                     
  4436                           ; BSR set to: 0
  4437  00103C  29DE               	incf	___fladd@bexp& (0+255),w,b
  4438  00103E  A4D8               	btfss	status,2,c
  4439  001040  EF24  F008         	goto	u4661
  4440  001044  EF26  F008         	goto	u4660
  4441  001048                     u4661:
  4442  001048  EF2E  F008         	goto	l5945
  4443  00104C                     u4660:
  4444  00104C                     
  4445                           ; BSR set to: 0
  4446  00104C  0E00               	movlw	0
  4447  00104E  6FD4               	movwf	___fladd@b& (0+255),b
  4448  001050  0E00               	movlw	0
  4449  001052  6FD5               	movwf	(___fladd@b+1)& (0+255),b
  4450  001054  0E00               	movlw	0
  4451  001056  6FD6               	movwf	(___fladd@b+2)& (0+255),b
  4452  001058  0E00               	movlw	0
  4453  00105A  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  4454  00105C                     l5945:
  4455                           
  4456                           ; BSR set to: 0
  4457  00105C  8FD6               	bsf	(___fladd@b+2)& (0+255),7,b
  4458  00105E                     
  4459                           ; BSR set to: 0
  4460  00105E  0E00               	movlw	0
  4461  001060  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  4462  001062  EF3B  F008         	goto	l5951
  4463  001066                     l5949:
  4464                           
  4465                           ; BSR set to: 0
  4466  001066  0E00               	movlw	0
  4467  001068  6FD4               	movwf	___fladd@b& (0+255),b
  4468  00106A  0E00               	movlw	0
  4469  00106C  6FD5               	movwf	(___fladd@b+1)& (0+255),b
  4470  00106E  0E00               	movlw	0
  4471  001070  6FD6               	movwf	(___fladd@b+2)& (0+255),b
  4472  001072  0E00               	movlw	0
  4473  001074  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  4474  001076                     l5951:
  4475                           
  4476                           ; BSR set to: 0
  4477  001076  51DB               	movf	(___fladd@a+3)& (0+255),w,b
  4478  001078  0B80               	andlw	128
  4479  00107A  6FDD               	movwf	___fladd@aexp& (0+255),b
  4480  00107C                     
  4481                           ; BSR set to: 0
  4482  00107C  51DC               	movf	___fladd@signs& (0+255),w,b
  4483  00107E  19DD               	xorwf	___fladd@aexp& (0+255),w,b
  4484  001080  B4D8               	btfsc	status,2,c
  4485  001082  EF45  F008         	goto	u4671
  4486  001086  EF47  F008         	goto	u4670
  4487  00108A                     u4671:
  4488  00108A  EF48  F008         	goto	l5957
  4489  00108E                     u4670:
  4490  00108E                     
  4491                           ; BSR set to: 0
  4492  00108E  8DDC               	bsf	___fladd@signs& (0+255),6,b
  4493  001090                     l5957:
  4494                           
  4495                           ; BSR set to: 0
  4496  001090  51DB               	movf	(___fladd@a+3)& (0+255),w,b
  4497  001092  25DB               	addwf	(___fladd@a+3)& (0+255),w,b
  4498  001094  6FDD               	movwf	___fladd@aexp& (0+255),b
  4499  001096                     
  4500                           ; BSR set to: 0
  4501  001096  AFDA               	btfss	(___fladd@a+2)& (0+255),7,b
  4502  001098  EF50  F008         	goto	u4681
  4503  00109C  EF52  F008         	goto	u4680
  4504  0010A0                     u4681:
  4505  0010A0  EF53  F008         	goto	l5963
  4506  0010A4                     u4680:
  4507  0010A4                     
  4508                           ; BSR set to: 0
  4509  0010A4  81DD               	bsf	___fladd@aexp& (0+255),0,b
  4510  0010A6                     l5963:
  4511                           
  4512                           ; BSR set to: 0
  4513  0010A6  51DD               	movf	___fladd@aexp& (0+255),w,b
  4514  0010A8  B4D8               	btfsc	status,2,c
  4515  0010AA  EF59  F008         	goto	u4691
  4516  0010AE  EF5B  F008         	goto	u4690
  4517  0010B2                     u4691:
  4518  0010B2  EF70  F008         	goto	l5973
  4519  0010B6                     u4690:
  4520  0010B6                     
  4521                           ; BSR set to: 0
  4522  0010B6  29DD               	incf	___fladd@aexp& (0+255),w,b
  4523  0010B8  A4D8               	btfss	status,2,c
  4524  0010BA  EF61  F008         	goto	u4701
  4525  0010BE  EF63  F008         	goto	u4700
  4526  0010C2                     u4701:
  4527  0010C2  EF6B  F008         	goto	l5969
  4528  0010C6                     u4700:
  4529  0010C6                     
  4530                           ; BSR set to: 0
  4531  0010C6  0E00               	movlw	0
  4532  0010C8  6FD8               	movwf	___fladd@a& (0+255),b
  4533  0010CA  0E00               	movlw	0
  4534  0010CC  6FD9               	movwf	(___fladd@a+1)& (0+255),b
  4535  0010CE  0E00               	movlw	0
  4536  0010D0  6FDA               	movwf	(___fladd@a+2)& (0+255),b
  4537  0010D2  0E00               	movlw	0
  4538  0010D4  6FDB               	movwf	(___fladd@a+3)& (0+255),b
  4539  0010D6                     l5969:
  4540                           
  4541                           ; BSR set to: 0
  4542  0010D6  8FDA               	bsf	(___fladd@a+2)& (0+255),7,b
  4543  0010D8                     
  4544                           ; BSR set to: 0
  4545  0010D8  0E00               	movlw	0
  4546  0010DA  6FDB               	movwf	(___fladd@a+3)& (0+255),b
  4547  0010DC  EF78  F008         	goto	l5975
  4548  0010E0                     l5973:
  4549                           
  4550                           ; BSR set to: 0
  4551  0010E0  0E00               	movlw	0
  4552  0010E2  6FD8               	movwf	___fladd@a& (0+255),b
  4553  0010E4  0E00               	movlw	0
  4554  0010E6  6FD9               	movwf	(___fladd@a+1)& (0+255),b
  4555  0010E8  0E00               	movlw	0
  4556  0010EA  6FDA               	movwf	(___fladd@a+2)& (0+255),b
  4557  0010EC  0E00               	movlw	0
  4558  0010EE  6FDB               	movwf	(___fladd@a+3)& (0+255),b
  4559  0010F0                     l5975:
  4560                           
  4561                           ; BSR set to: 0
  4562  0010F0  51DE               	movf	___fladd@bexp& (0+255),w,b
  4563  0010F2  5DDD               	subwf	___fladd@aexp& (0+255),w,b
  4564  0010F4  B0D8               	btfsc	status,0,c
  4565  0010F6  EF7F  F008         	goto	u4711
  4566  0010FA  EF81  F008         	goto	u4710
  4567  0010FE                     u4711:
  4568  0010FE  EFA8  F008         	goto	l6011
  4569  001102                     u4710:
  4570  001102                     
  4571                           ; BSR set to: 0
  4572  001102  ADDC               	btfss	___fladd@signs& (0+255),6,b
  4573  001104  EF86  F008         	goto	u4721
  4574  001108  EF88  F008         	goto	u4720
  4575  00110C                     u4721:
  4576  00110C  EF8A  F008         	goto	l5981
  4577  001110                     u4720:
  4578  001110                     
  4579                           ; BSR set to: 0
  4580  001110  0E80               	movlw	128
  4581  001112  1BDC               	xorwf	___fladd@signs& (0+255),f,b
  4582  001114                     l5981:
  4583                           
  4584                           ; BSR set to: 0
  4585  001114  C0DE  F0DF         	movff	___fladd@bexp,___fladd@grs
  4586  001118                     
  4587                           ; BSR set to: 0
  4588  001118  C0DD  F0DE         	movff	___fladd@aexp,___fladd@bexp
  4589  00111C                     
  4590                           ; BSR set to: 0
  4591  00111C  C0DF  F0DD         	movff	___fladd@grs,___fladd@aexp
  4592  001120                     
  4593                           ; BSR set to: 0
  4594  001120  C0D4  F0DF         	movff	___fladd@b,___fladd@grs
  4595  001124                     
  4596                           ; BSR set to: 0
  4597  001124  C0D8  F0D4         	movff	___fladd@a,___fladd@b
  4598  001128                     
  4599                           ; BSR set to: 0
  4600  001128  C0DF  F0D8         	movff	___fladd@grs,___fladd@a
  4601  00112C                     
  4602                           ; BSR set to: 0
  4603  00112C  C0D5  F0DF         	movff	___fladd@b+1,___fladd@grs
  4604  001130                     
  4605                           ; BSR set to: 0
  4606  001130  C0D9  F0D5         	movff	___fladd@a+1,___fladd@b+1
  4607  001134                     
  4608                           ; BSR set to: 0
  4609  001134  C0DF  F0D9         	movff	___fladd@grs,___fladd@a+1
  4610  001138                     
  4611                           ; BSR set to: 0
  4612  001138  C0D6  F0DF         	movff	___fladd@b+2,___fladd@grs
  4613  00113C                     
  4614                           ; BSR set to: 0
  4615  00113C  C0DA  F0D6         	movff	___fladd@a+2,___fladd@b+2
  4616  001140                     
  4617                           ; BSR set to: 0
  4618  001140  C0DF  F0DA         	movff	___fladd@grs,___fladd@a+2
  4619  001144                     
  4620                           ; BSR set to: 0
  4621  001144  C0D7  F0DF         	movff	___fladd@b+3,___fladd@grs
  4622  001148                     
  4623                           ; BSR set to: 0
  4624  001148  C0DB  F0D7         	movff	___fladd@a+3,___fladd@b+3
  4625  00114C                     
  4626                           ; BSR set to: 0
  4627  00114C  C0DF  F0DB         	movff	___fladd@grs,___fladd@a+3
  4628  001150                     l6011:
  4629                           
  4630                           ; BSR set to: 0
  4631  001150  0E00               	movlw	0
  4632  001152  6FDF               	movwf	___fladd@grs& (0+255),b
  4633  001154                     
  4634                           ; BSR set to: 0
  4635  001154  51DE               	movf	___fladd@bexp& (0+255),w,b
  4636  001156  C0DD  F036         	movff	___fladd@aexp,??___fladd
  4637  00115A  6A37               	clrf	(??___fladd+1)^0,c
  4638  00115C  5E36               	subwf	??___fladd^0,f,c
  4639  00115E  0E00               	movlw	0
  4640  001160  5A37               	subwfb	(??___fladd+1)^0,f,c
  4641  001162  BE37               	btfsc	(??___fladd+1)^0,7,c
  4642  001164  EFBD  F008         	goto	u4731
  4643  001168  5037               	movf	(??___fladd+1)^0,w,c
  4644  00116A  E109               	bnz	u4730
  4645  00116C  0E1A               	movlw	26
  4646  00116E  5C36               	subwf	??___fladd^0,w,c
  4647  001170  A0D8               	btfss	status,0,c
  4648  001172  EFBD  F008         	goto	u4731
  4649  001176  EFBF  F008         	goto	u4730
  4650  00117A                     u4731:
  4651  00117A  EFF6  F008         	goto	l1927
  4652  00117E                     u4730:
  4653  00117E                     
  4654                           ; BSR set to: 0
  4655  00117E  51D4               	movf	___fladd@b& (0+255),w,b
  4656  001180  11D5               	iorwf	(___fladd@b+1)& (0+255),w,b
  4657  001182  11D6               	iorwf	(___fladd@b+2)& (0+255),w,b
  4658  001184  11D7               	iorwf	(___fladd@b+3)& (0+255),w,b
  4659  001186  A4D8               	btfss	status,2,c
  4660  001188  EFC8  F008         	goto	u4741
  4661  00118C  EFCB  F008         	goto	u4740
  4662  001190                     u4741:
  4663  001190  0E01               	movlw	1
  4664  001192  EFCC  F008         	goto	u4750
  4665  001196                     u4740:
  4666  001196  0E00               	movlw	0
  4667  001198                     u4750:
  4668  001198  6FDF               	movwf	___fladd@grs& (0+255),b
  4669  00119A                     
  4670                           ; BSR set to: 0
  4671  00119A  0E00               	movlw	0
  4672  00119C  6FD4               	movwf	___fladd@b& (0+255),b
  4673  00119E  0E00               	movlw	0
  4674  0011A0  6FD5               	movwf	(___fladd@b+1)& (0+255),b
  4675  0011A2  0E00               	movlw	0
  4676  0011A4  6FD6               	movwf	(___fladd@b+2)& (0+255),b
  4677  0011A6  0E00               	movlw	0
  4678  0011A8  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  4679  0011AA                     
  4680                           ; BSR set to: 0
  4681  0011AA  C0DD  F0DE         	movff	___fladd@aexp,___fladd@bexp
  4682  0011AE  EFFF  F008         	goto	l1926
  4683  0011B2                     l1928:
  4684                           
  4685                           ; BSR set to: 0
  4686  0011B2  A1DF               	btfss	___fladd@grs& (0+255),0,b
  4687  0011B4  EFDE  F008         	goto	u4761
  4688  0011B8  EFE0  F008         	goto	u4760
  4689  0011BC                     u4761:
  4690  0011BC  EFE6  F008         	goto	l6023
  4691  0011C0                     u4760:
  4692  0011C0                     
  4693                           ; BSR set to: 0
  4694  0011C0  90D8               	bcf	status,0,c
  4695  0011C2  31DF               	rrcf	___fladd@grs& (0+255),w,b
  4696  0011C4  0901               	iorlw	1
  4697  0011C6  6FDF               	movwf	___fladd@grs& (0+255),b
  4698  0011C8  EFE8  F008         	goto	l6025
  4699  0011CC                     l6023:
  4700                           
  4701                           ; BSR set to: 0
  4702  0011CC  90D8               	bcf	status,0,c
  4703  0011CE  33DF               	rrcf	___fladd@grs& (0+255),f,b
  4704  0011D0                     l6025:
  4705                           
  4706                           ; BSR set to: 0
  4707  0011D0  A1D4               	btfss	___fladd@b& (0+255),0,b
  4708  0011D2  EFED  F008         	goto	u4771
  4709  0011D6  EFEF  F008         	goto	u4770
  4710  0011DA                     u4771:
  4711  0011DA  EFF0  F008         	goto	l6029
  4712  0011DE                     u4770:
  4713  0011DE                     
  4714                           ; BSR set to: 0
  4715  0011DE  8FDF               	bsf	___fladd@grs& (0+255),7,b
  4716  0011E0                     l6029:
  4717                           
  4718                           ; BSR set to: 0
  4719  0011E0  35D7               	rlcf	(___fladd@b+3)& (0+255),w,b
  4720  0011E2  33D7               	rrcf	(___fladd@b+3)& (0+255),f,b
  4721  0011E4  33D6               	rrcf	(___fladd@b+2)& (0+255),f,b
  4722  0011E6  33D5               	rrcf	(___fladd@b+1)& (0+255),f,b
  4723  0011E8  33D4               	rrcf	___fladd@b& (0+255),f,b
  4724  0011EA                     
  4725                           ; BSR set to: 0
  4726  0011EA  2BDE               	incf	___fladd@bexp& (0+255),f,b
  4727  0011EC                     l1927:
  4728                           
  4729                           ; BSR set to: 0
  4730  0011EC  51DD               	movf	___fladd@aexp& (0+255),w,b
  4731  0011EE  5DDE               	subwf	___fladd@bexp& (0+255),w,b
  4732  0011F0  A0D8               	btfss	status,0,c
  4733  0011F2  EFFD  F008         	goto	u4781
  4734  0011F6  EFFF  F008         	goto	u4780
  4735  0011FA                     u4781:
  4736  0011FA  EFD9  F008         	goto	l1928
  4737  0011FE                     u4780:
  4738  0011FE                     l1926:
  4739                           
  4740                           ; BSR set to: 0
  4741  0011FE  BDDC               	btfsc	___fladd@signs& (0+255),6,b
  4742  001200  EF04  F009         	goto	u4791
  4743  001204  EF06  F009         	goto	u4790
  4744  001208                     u4791:
  4745  001208  EF46  F009         	goto	l6057
  4746  00120C                     u4790:
  4747  00120C                     
  4748                           ; BSR set to: 0
  4749  00120C  51DE               	movf	___fladd@bexp& (0+255),w,b
  4750  00120E  A4D8               	btfss	status,2,c
  4751  001210  EF0C  F009         	goto	u4801
  4752  001214  EF0E  F009         	goto	u4800
  4753  001218                     u4801:
  4754  001218  EF18  F009         	goto	l6039
  4755  00121C                     u4800:
  4756  00121C                     
  4757                           ; BSR set to: 0
  4758  00121C  0E00               	movlw	0
  4759  00121E  6FD4               	movwf	?___fladd& (0+255),b
  4760  001220  0E00               	movlw	0
  4761  001222  6FD5               	movwf	(?___fladd+1)& (0+255),b
  4762  001224  0E00               	movlw	0
  4763  001226  6FD6               	movwf	(?___fladd+2)& (0+255),b
  4764  001228  0E00               	movlw	0
  4765  00122A  6FD7               	movwf	(?___fladd+3)& (0+255),b
  4766  00122C  EF67  F00A         	goto	l1935
  4767  001230                     l6039:
  4768                           
  4769                           ; BSR set to: 0
  4770  001230  51D8               	movf	___fladd@a& (0+255),w,b
  4771  001232  27D4               	addwf	___fladd@b& (0+255),f,b
  4772  001234  51D9               	movf	(___fladd@a+1)& (0+255),w,b
  4773  001236  23D5               	addwfc	(___fladd@b+1)& (0+255),f,b
  4774  001238  51DA               	movf	(___fladd@a+2)& (0+255),w,b
  4775  00123A  23D6               	addwfc	(___fladd@b+2)& (0+255),f,b
  4776  00123C  51DB               	movf	(___fladd@a+3)& (0+255),w,b
  4777  00123E  23D7               	addwfc	(___fladd@b+3)& (0+255),f,b
  4778  001240                     
  4779                           ; BSR set to: 0
  4780  001240  A1D7               	btfss	(___fladd@b+3)& (0+255),0,b
  4781  001242  EF25  F009         	goto	u4811
  4782  001246  EF27  F009         	goto	u4810
  4783  00124A                     u4811:
  4784  00124A  EFD3  F009         	goto	l6093
  4785  00124E                     u4810:
  4786  00124E                     
  4787                           ; BSR set to: 0
  4788  00124E  A1DF               	btfss	___fladd@grs& (0+255),0,b
  4789  001250  EF2C  F009         	goto	u4821
  4790  001254  EF2E  F009         	goto	u4820
  4791  001258                     u4821:
  4792  001258  EF34  F009         	goto	l6047
  4793  00125C                     u4820:
  4794  00125C                     
  4795                           ; BSR set to: 0
  4796  00125C  90D8               	bcf	status,0,c
  4797  00125E  31DF               	rrcf	___fladd@grs& (0+255),w,b
  4798  001260  0901               	iorlw	1
  4799  001262  6FDF               	movwf	___fladd@grs& (0+255),b
  4800  001264  EF36  F009         	goto	l6049
  4801  001268                     l6047:
  4802                           
  4803                           ; BSR set to: 0
  4804  001268  90D8               	bcf	status,0,c
  4805  00126A  33DF               	rrcf	___fladd@grs& (0+255),f,b
  4806  00126C                     l6049:
  4807                           
  4808                           ; BSR set to: 0
  4809  00126C  A1D4               	btfss	___fladd@b& (0+255),0,b
  4810  00126E  EF3B  F009         	goto	u4831
  4811  001272  EF3D  F009         	goto	u4830
  4812  001276                     u4831:
  4813  001276  EF3E  F009         	goto	l6053
  4814  00127A                     u4830:
  4815  00127A                     
  4816                           ; BSR set to: 0
  4817  00127A  8FDF               	bsf	___fladd@grs& (0+255),7,b
  4818  00127C                     l6053:
  4819                           
  4820                           ; BSR set to: 0
  4821  00127C  35D7               	rlcf	(___fladd@b+3)& (0+255),w,b
  4822  00127E  33D7               	rrcf	(___fladd@b+3)& (0+255),f,b
  4823  001280  33D6               	rrcf	(___fladd@b+2)& (0+255),f,b
  4824  001282  33D5               	rrcf	(___fladd@b+1)& (0+255),f,b
  4825  001284  33D4               	rrcf	___fladd@b& (0+255),f,b
  4826  001286                     
  4827                           ; BSR set to: 0
  4828  001286  2BDE               	incf	___fladd@bexp& (0+255),f,b
  4829  001288  EFD3  F009         	goto	l6093
  4830  00128C                     l6057:
  4831                           
  4832                           ; BSR set to: 0
  4833  00128C  51D8               	movf	___fladd@a& (0+255),w,b
  4834  00128E  5DD4               	subwf	___fladd@b& (0+255),w,b
  4835  001290  51D9               	movf	(___fladd@a+1)& (0+255),w,b
  4836  001292  59D5               	subwfb	(___fladd@b+1)& (0+255),w,b
  4837  001294  51DA               	movf	(___fladd@a+2)& (0+255),w,b
  4838  001296  59D6               	subwfb	(___fladd@b+2)& (0+255),w,b
  4839  001298  51D7               	movf	(___fladd@b+3)& (0+255),w,b
  4840  00129A  0A80               	xorlw	128
  4841  00129C  6E36               	movwf	??___fladd^0,c
  4842  00129E  51DB               	movf	(___fladd@a+3)& (0+255),w,b
  4843  0012A0  0A80               	xorlw	128
  4844  0012A2  5836               	subwfb	??___fladd^0,w,c
  4845  0012A4  B0D8               	btfsc	status,0,c
  4846  0012A6  EF57  F009         	goto	u4841
  4847  0012AA  EF59  F009         	goto	u4840
  4848  0012AE                     u4841:
  4849  0012AE  EF84  F009         	goto	l6067
  4850  0012B2                     u4840:
  4851  0012B2                     
  4852                           ; BSR set to: 0
  4853  0012B2  51D4               	movf	___fladd@b& (0+255),w,b
  4854  0012B4  5DD8               	subwf	___fladd@a& (0+255),w,b
  4855  0012B6  6E36               	movwf	??___fladd^0,c
  4856  0012B8  51D5               	movf	(___fladd@b+1)& (0+255),w,b
  4857  0012BA  59D9               	subwfb	(___fladd@a+1)& (0+255),w,b
  4858  0012BC  6E37               	movwf	(??___fladd+1)^0,c
  4859  0012BE  51D6               	movf	(___fladd@b+2)& (0+255),w,b
  4860  0012C0  59DA               	subwfb	(___fladd@a+2)& (0+255),w,b
  4861  0012C2  6E38               	movwf	(??___fladd+2)^0,c
  4862  0012C4  51D7               	movf	(___fladd@b+3)& (0+255),w,b
  4863  0012C6  59DB               	subwfb	(___fladd@a+3)& (0+255),w,b
  4864  0012C8  6E39               	movwf	(??___fladd+3)^0,c
  4865  0012CA  0EFF               	movlw	255
  4866  0012CC  2436               	addwf	??___fladd^0,w,c
  4867  0012CE  6FD4               	movwf	___fladd@b& (0+255),b
  4868  0012D0  0EFF               	movlw	255
  4869  0012D2  2037               	addwfc	(??___fladd+1)^0,w,c
  4870  0012D4  6FD5               	movwf	(___fladd@b+1)& (0+255),b
  4871  0012D6  0EFF               	movlw	255
  4872  0012D8  2038               	addwfc	(??___fladd+2)^0,w,c
  4873  0012DA  6FD6               	movwf	(___fladd@b+2)& (0+255),b
  4874  0012DC  0EFF               	movlw	255
  4875  0012DE  2039               	addwfc	(??___fladd+3)^0,w,c
  4876  0012E0  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  4877  0012E2  0E80               	movlw	128
  4878  0012E4  1BDC               	xorwf	___fladd@signs& (0+255),f,b
  4879  0012E6                     
  4880                           ; BSR set to: 0
  4881  0012E6  6DDF               	negf	___fladd@grs& (0+255),b
  4882  0012E8                     
  4883                           ; BSR set to: 0
  4884  0012E8  51DF               	movf	___fladd@grs& (0+255),w,b
  4885  0012EA  A4D8               	btfss	status,2,c
  4886  0012EC  EF7A  F009         	goto	u4851
  4887  0012F0  EF7C  F009         	goto	u4850
  4888  0012F4                     u4851:
  4889  0012F4  EF8C  F009         	goto	l1943
  4890  0012F8                     u4850:
  4891  0012F8                     
  4892                           ; BSR set to: 0
  4893  0012F8  0E01               	movlw	1
  4894  0012FA  27D4               	addwf	___fladd@b& (0+255),f,b
  4895  0012FC  0E00               	movlw	0
  4896  0012FE  23D5               	addwfc	(___fladd@b+1)& (0+255),f,b
  4897  001300  23D6               	addwfc	(___fladd@b+2)& (0+255),f,b
  4898  001302  23D7               	addwfc	(___fladd@b+3)& (0+255),f,b
  4899  001304  EF8C  F009         	goto	l1943
  4900  001308                     l6067:
  4901                           
  4902                           ; BSR set to: 0
  4903  001308  51D8               	movf	___fladd@a& (0+255),w,b
  4904  00130A  5FD4               	subwf	___fladd@b& (0+255),f,b
  4905  00130C  51D9               	movf	(___fladd@a+1)& (0+255),w,b
  4906  00130E  5BD5               	subwfb	(___fladd@b+1)& (0+255),f,b
  4907  001310  51DA               	movf	(___fladd@a+2)& (0+255),w,b
  4908  001312  5BD6               	subwfb	(___fladd@b+2)& (0+255),f,b
  4909  001314  51DB               	movf	(___fladd@a+3)& (0+255),w,b
  4910  001316  5BD7               	subwfb	(___fladd@b+3)& (0+255),f,b
  4911  001318                     l1943:
  4912                           
  4913                           ; BSR set to: 0
  4914  001318  51D4               	movf	___fladd@b& (0+255),w,b
  4915  00131A  11D5               	iorwf	(___fladd@b+1)& (0+255),w,b
  4916  00131C  11D6               	iorwf	(___fladd@b+2)& (0+255),w,b
  4917  00131E  11D7               	iorwf	(___fladd@b+3)& (0+255),w,b
  4918  001320  A4D8               	btfss	status,2,c
  4919  001322  EF95  F009         	goto	u4861
  4920  001326  EF97  F009         	goto	u4860
  4921  00132A                     u4861:
  4922  00132A  EFCC  F009         	goto	l6091
  4923  00132E                     u4860:
  4924  00132E                     
  4925                           ; BSR set to: 0
  4926  00132E  51DF               	movf	___fladd@grs& (0+255),w,b
  4927  001330  A4D8               	btfss	status,2,c
  4928  001332  EF9D  F009         	goto	u4871
  4929  001336  EF9F  F009         	goto	u4870
  4930  00133A                     u4871:
  4931  00133A  EFCC  F009         	goto	l6091
  4932  00133E                     u4870:
  4933  00133E                     
  4934                           ; BSR set to: 0
  4935  00133E  0E00               	movlw	0
  4936  001340  6FD4               	movwf	?___fladd& (0+255),b
  4937  001342  0E00               	movlw	0
  4938  001344  6FD5               	movwf	(?___fladd+1)& (0+255),b
  4939  001346  0E00               	movlw	0
  4940  001348  6FD6               	movwf	(?___fladd+2)& (0+255),b
  4941  00134A  0E00               	movlw	0
  4942  00134C  6FD7               	movwf	(?___fladd+3)& (0+255),b
  4943  00134E  EF67  F00A         	goto	l1935
  4944  001352                     l6075:
  4945                           
  4946                           ; BSR set to: 0
  4947  001352  90D8               	bcf	status,0,c
  4948  001354  37D4               	rlcf	___fladd@b& (0+255),f,b
  4949  001356  37D5               	rlcf	(___fladd@b+1)& (0+255),f,b
  4950  001358  37D6               	rlcf	(___fladd@b+2)& (0+255),f,b
  4951  00135A  37D7               	rlcf	(___fladd@b+3)& (0+255),f,b
  4952  00135C                     
  4953                           ; BSR set to: 0
  4954  00135C  AFDF               	btfss	___fladd@grs& (0+255),7,b
  4955  00135E  EFB3  F009         	goto	u4881
  4956  001362  EFB5  F009         	goto	u4880
  4957  001366                     u4881:
  4958  001366  EFB6  F009         	goto	l6081
  4959  00136A                     u4880:
  4960  00136A                     
  4961                           ; BSR set to: 0
  4962  00136A  81D4               	bsf	___fladd@b& (0+255),0,b
  4963  00136C                     l6081:
  4964                           
  4965                           ; BSR set to: 0
  4966  00136C  A1DF               	btfss	___fladd@grs& (0+255),0,b
  4967  00136E  EFBB  F009         	goto	u4891
  4968  001372  EFBD  F009         	goto	u4890
  4969  001376                     u4891:
  4970  001376  EFC1  F009         	goto	l6085
  4971  00137A                     u4890:
  4972  00137A                     
  4973                           ; BSR set to: 0
  4974  00137A  80D8               	bsf	status,0,c
  4975  00137C  37DF               	rlcf	___fladd@grs& (0+255),f,b
  4976  00137E  EFC3  F009         	goto	l6087
  4977  001382                     l6085:
  4978                           
  4979                           ; BSR set to: 0
  4980  001382  90D8               	bcf	status,0,c
  4981  001384  37DF               	rlcf	___fladd@grs& (0+255),f,b
  4982  001386                     l6087:
  4983                           
  4984                           ; BSR set to: 0
  4985  001386  51DE               	movf	___fladd@bexp& (0+255),w,b
  4986  001388  B4D8               	btfsc	status,2,c
  4987  00138A  EFC9  F009         	goto	u4901
  4988  00138E  EFCB  F009         	goto	u4900
  4989  001392                     u4901:
  4990  001392  EFCC  F009         	goto	l6091
  4991  001396                     u4900:
  4992  001396                     
  4993                           ; BSR set to: 0
  4994  001396  07DE               	decf	___fladd@bexp& (0+255),f,b
  4995  001398                     l6091:
  4996                           
  4997                           ; BSR set to: 0
  4998  001398  AFD6               	btfss	(___fladd@b+2)& (0+255),7,b
  4999  00139A  EFD1  F009         	goto	u4911
  5000  00139E  EFD3  F009         	goto	u4910
  5001  0013A2                     u4911:
  5002  0013A2  EFA9  F009         	goto	l6075
  5003  0013A6                     u4910:
  5004  0013A6                     l6093:
  5005                           
  5006                           ; BSR set to: 0
  5007  0013A6  0E00               	movlw	0
  5008  0013A8  6FDD               	movwf	___fladd@aexp& (0+255),b
  5009  0013AA                     
  5010                           ; BSR set to: 0
  5011  0013AA  AFDF               	btfss	___fladd@grs& (0+255),7,b
  5012  0013AC  EFDA  F009         	goto	u4921
  5013  0013B0  EFDC  F009         	goto	u4920
  5014  0013B4                     u4921:
  5015  0013B4  EFF4  F009         	goto	l1952
  5016  0013B8                     u4920:
  5017  0013B8                     
  5018                           ; BSR set to: 0
  5019  0013B8  C0DF  F036         	movff	___fladd@grs,??___fladd
  5020  0013BC  0E7F               	movlw	127
  5021  0013BE  1636               	andwf	??___fladd^0,f,c
  5022  0013C0  B4D8               	btfsc	status,2,c
  5023  0013C2  EFE5  F009         	goto	u4931
  5024  0013C6  EFE7  F009         	goto	u4930
  5025  0013CA                     u4931:
  5026  0013CA  EFEB  F009         	goto	l1953
  5027  0013CE                     u4930:
  5028  0013CE                     l6099:
  5029                           
  5030                           ; BSR set to: 0
  5031  0013CE  0E01               	movlw	1
  5032  0013D0  6FDD               	movwf	___fladd@aexp& (0+255),b
  5033  0013D2  EFF4  F009         	goto	l1952
  5034  0013D6                     l1953:
  5035                           
  5036                           ; BSR set to: 0
  5037  0013D6  A1D4               	btfss	___fladd@b& (0+255),0,b
  5038  0013D8  EFF0  F009         	goto	u4941
  5039  0013DC  EFF2  F009         	goto	u4940
  5040  0013E0                     u4941:
  5041  0013E0  EFF4  F009         	goto	l1952
  5042  0013E4                     u4940:
  5043  0013E4  EFE7  F009         	goto	l6099
  5044  0013E8                     l1952:
  5045                           
  5046                           ; BSR set to: 0
  5047  0013E8  51DD               	movf	___fladd@aexp& (0+255),w,b
  5048  0013EA  B4D8               	btfsc	status,2,c
  5049  0013EC  EFFA  F009         	goto	u4951
  5050  0013F0  EFFC  F009         	goto	u4950
  5051  0013F4                     u4951:
  5052  0013F4  EF27  F00A         	goto	l6111
  5053  0013F8                     u4950:
  5054  0013F8                     
  5055                           ; BSR set to: 0
  5056  0013F8  0E01               	movlw	1
  5057  0013FA  27D4               	addwf	___fladd@b& (0+255),f,b
  5058  0013FC  0E00               	movlw	0
  5059  0013FE  23D5               	addwfc	(___fladd@b+1)& (0+255),f,b
  5060  001400  23D6               	addwfc	(___fladd@b+2)& (0+255),f,b
  5061  001402  23D7               	addwfc	(___fladd@b+3)& (0+255),f,b
  5062  001404                     
  5063                           ; BSR set to: 0
  5064  001404  A1D7               	btfss	(___fladd@b+3)& (0+255),0,b
  5065  001406  EF07  F00A         	goto	u4961
  5066  00140A  EF09  F00A         	goto	u4960
  5067  00140E                     u4961:
  5068  00140E  EF27  F00A         	goto	l6111
  5069  001412                     u4960:
  5070  001412                     
  5071                           ; BSR set to: 0
  5072  001412  C0D4  F036         	movff	___fladd@b,??___fladd
  5073  001416  C0D5  F037         	movff	___fladd@b+1,??___fladd+1
  5074  00141A  C0D6  F038         	movff	___fladd@b+2,??___fladd+2
  5075  00141E  C0D7  F039         	movff	___fladd@b+3,??___fladd+3
  5076  001422  3439               	rlcf	(??___fladd+3)^0,w,c
  5077  001424  3239               	rrcf	(??___fladd+3)^0,f,c
  5078  001426  3238               	rrcf	(??___fladd+2)^0,f,c
  5079  001428  3237               	rrcf	(??___fladd+1)^0,f,c
  5080  00142A  3236               	rrcf	??___fladd^0,f,c
  5081  00142C  C036  F0D4         	movff	??___fladd,___fladd@b
  5082  001430  C037  F0D5         	movff	??___fladd+1,___fladd@b+1
  5083  001434  C038  F0D6         	movff	??___fladd+2,___fladd@b+2
  5084  001438  C039  F0D7         	movff	??___fladd+3,___fladd@b+3
  5085  00143C  29DE               	incf	___fladd@bexp& (0+255),w,b
  5086  00143E  B4D8               	btfsc	status,2,c
  5087  001440  EF24  F00A         	goto	u4971
  5088  001444  EF26  F00A         	goto	u4970
  5089  001448                     u4971:
  5090  001448  EF27  F00A         	goto	l6111
  5091  00144C                     u4970:
  5092  00144C                     
  5093                           ; BSR set to: 0
  5094  00144C  2BDE               	incf	___fladd@bexp& (0+255),f,b
  5095  00144E                     l6111:
  5096                           
  5097                           ; BSR set to: 0
  5098  00144E  29DE               	incf	___fladd@bexp& (0+255),w,b
  5099  001450  B4D8               	btfsc	status,2,c
  5100  001452  EF2D  F00A         	goto	u4981
  5101  001456  EF2F  F00A         	goto	u4980
  5102  00145A                     u4981:
  5103  00145A  EF37  F00A         	goto	l6115
  5104  00145E                     u4980:
  5105  00145E                     
  5106                           ; BSR set to: 0
  5107  00145E  51DE               	movf	___fladd@bexp& (0+255),w,b
  5108  001460  A4D8               	btfss	status,2,c
  5109  001462  EF35  F00A         	goto	u4991
  5110  001466  EF37  F00A         	goto	u4990
  5111  00146A                     u4991:
  5112  00146A  EF49  F00A         	goto	l6119
  5113  00146E                     u4990:
  5114  00146E                     l6115:
  5115                           
  5116                           ; BSR set to: 0
  5117  00146E  0E00               	movlw	0
  5118  001470  6FD4               	movwf	___fladd@b& (0+255),b
  5119  001472  0E00               	movlw	0
  5120  001474  6FD5               	movwf	(___fladd@b+1)& (0+255),b
  5121  001476  0E00               	movlw	0
  5122  001478  6FD6               	movwf	(___fladd@b+2)& (0+255),b
  5123  00147A  0E00               	movlw	0
  5124  00147C  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  5125  00147E  51DE               	movf	___fladd@bexp& (0+255),w,b
  5126  001480  A4D8               	btfss	status,2,c
  5127  001482  EF45  F00A         	goto	u5001
  5128  001486  EF47  F00A         	goto	u5000
  5129  00148A                     u5001:
  5130  00148A  EF49  F00A         	goto	l6119
  5131  00148E                     u5000:
  5132  00148E                     
  5133                           ; BSR set to: 0
  5134  00148E  0E00               	movlw	0
  5135  001490  6FDC               	movwf	___fladd@signs& (0+255),b
  5136  001492                     l6119:
  5137                           
  5138                           ; BSR set to: 0
  5139  001492  A1DE               	btfss	___fladd@bexp& (0+255),0,b
  5140  001494  EF4E  F00A         	goto	u5011
  5141  001498  EF50  F00A         	goto	u5010
  5142  00149C                     u5011:
  5143  00149C  EF53  F00A         	goto	l6123
  5144  0014A0                     u5010:
  5145  0014A0                     
  5146                           ; BSR set to: 0
  5147  0014A0  8FD6               	bsf	(___fladd@b+2)& (0+255),7,b
  5148  0014A2  EF54  F00A         	goto	l6125
  5149  0014A6                     l6123:
  5150                           
  5151                           ; BSR set to: 0
  5152  0014A6  9FD6               	bcf	(___fladd@b+2)& (0+255),7,b
  5153  0014A8                     l6125:
  5154                           
  5155                           ; BSR set to: 0
  5156  0014A8  90D8               	bcf	status,0,c
  5157  0014AA  31DE               	rrcf	___fladd@bexp& (0+255),w,b
  5158  0014AC  6FD7               	movwf	(___fladd@b+3)& (0+255),b
  5159  0014AE                     
  5160                           ; BSR set to: 0
  5161  0014AE  AFDC               	btfss	___fladd@signs& (0+255),7,b
  5162  0014B0  EF5C  F00A         	goto	u5021
  5163  0014B4  EF5E  F00A         	goto	u5020
  5164  0014B8                     u5021:
  5165  0014B8  EF5F  F00A         	goto	l6131
  5166  0014BC                     u5020:
  5167  0014BC                     
  5168                           ; BSR set to: 0
  5169  0014BC  8FD7               	bsf	(___fladd@b+3)& (0+255),7,b
  5170  0014BE                     l6131:
  5171                           
  5172                           ; BSR set to: 0
  5173  0014BE  C0D4  F0D4         	movff	___fladd@b,?___fladd
  5174  0014C2  C0D5  F0D5         	movff	___fladd@b+1,?___fladd+1
  5175  0014C6  C0D6  F0D6         	movff	___fladd@b+2,?___fladd+2
  5176  0014CA  C0D7  F0D7         	movff	___fladd@b+3,?___fladd+3
  5177  0014CE                     l1935:
  5178                           
  5179                           ; BSR set to: 0
  5180  0014CE  0012               	return		;funcret
  5181  0014D0                     __end_of___fladd:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function _calcMotorPow *****************
  5185 ;; Defined at:
  5186 ;;		line 343 in file "main.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;		None
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  oldSpeedDelt    2    6[BANK1 ] short 
  5191 ;;  setSpeedDelt    2    4[BANK1 ] short 
  5192 ;;  addMPow         1    8[BANK1 ] char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5203 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5204 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;Total ram usage:        7 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 10
  5209 ;; This function calls:
  5210 ;;		___awdiv
  5211 ;;		___flmul
  5212 ;;		___fltol
  5213 ;;		___xxtofl
  5214 ;;		_actSpeed
  5215 ;;		_setMotor
  5216 ;; This function is called by:
  5217 ;;		_loop
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text21
  5222  00231A                     __ptext21:
  5223                           	callstack 0
  5224  00231A                     _calcMotorPow:
  5225                           	callstack 19
  5226  00231A                     
  5227                           ;main.c: 344:     currentSpeed = actSpeed();
  5228  00231A  EC43  F018         	call	_actSpeed	;wreg free
  5229  00231E  C022  F0B0         	movff	?_actSpeed,_currentSpeed
  5230  002322  C023  F0B1         	movff	?_actSpeed+1,_currentSpeed+1
  5231  002326                     
  5232                           ;main.c: 346:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  5233  002326  0100               	movlb	0	; () banked
  5234  002328  51B0               	movf	_currentSpeed& (0+255),w,b
  5235  00232A  5DB2               	subwf	_setSpeed& (0+255),w,b
  5236  00232C  0101               	movlb	1	; () banked
  5237  00232E  6F04               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  5238  002330  0100               	movlb	0	; () banked
  5239  002332  51B1               	movf	(_currentSpeed+1)& (0+255),w,b
  5240  002334  59B3               	subwfb	(_setSpeed+1)& (0+255),w,b
  5241  002336  0101               	movlb	1	; () banked
  5242  002338  6F05               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  5243  00233A                     
  5244                           ; BSR set to: 1
  5245                           ;main.c: 347:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  5246  00233A  0100               	movlb	0	; () banked
  5247  00233C  51AE               	movf	_oldSpeed& (0+255),w,b
  5248  00233E  5DB0               	subwf	_currentSpeed& (0+255),w,b
  5249  002340  0101               	movlb	1	; () banked
  5250  002342  6F06               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  5251  002344  0100               	movlb	0	; () banked
  5252  002346  51AF               	movf	(_oldSpeed+1)& (0+255),w,b
  5253  002348  59B1               	subwfb	(_currentSpeed+1)& (0+255),w,b
  5254  00234A  0101               	movlb	1	; () banked
  5255  00234C  6F07               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  5256  00234E                     
  5257                           ; BSR set to: 1
  5258                           ;main.c: 353:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  5259  00234E  0E0A               	movlw	10
  5260  002350  6E2E               	movwf	___flmul@a^0,c
  5261  002352  0ED7               	movlw	215
  5262  002354  6E2F               	movwf	(___flmul@a+1)^0,c
  5263  002356  0EA3               	movlw	163
  5264  002358  6E30               	movwf	(___flmul@a+2)^0,c
  5265  00235A  0E3C               	movlw	60
  5266  00235C  6E31               	movwf	(___flmul@a+3)^0,c
  5267  00235E  0E00               	movlw	0
  5268  002360  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5269  002362  0E02               	movlw	2
  5270  002364  6E16               	movwf	___awdiv@divisor^0,c
  5271  002366  C106  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  5272  00236A  C107  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  5273  00236E  ECE3  F016         	call	___awdiv	;wreg free
  5274  002372  C104  F102         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  5275  002376  C105  F103         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  5276  00237A  5014               	movf	?___awdiv^0,w,c
  5277  00237C  0101               	movlb	1	; () banked
  5278  00237E  5F02               	subwf	??_calcMotorPow& (0+255),f,b
  5279  002380  5015               	movf	(?___awdiv+1)^0,w,c
  5280  002382  5B03               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  5281  002384  C102  F01C         	movff	??_calcMotorPow,___xxtofl@val
  5282  002388  C103  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  5283  00238C  0E00               	movlw	0
  5284  00238E  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  5285  002390  0EFF               	movlw	-1
  5286  002392  6E1E               	movwf	(___xxtofl@val+2)^0,c
  5287  002394  6E1F               	movwf	(___xxtofl@val+3)^0,c
  5288  002396  0E01               	movlw	1
  5289  002398  ECE1  F00F         	call	___xxtofl
  5290  00239C  C01C  F02A         	movff	?___xxtofl,___flmul@b
  5291  0023A0  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  5292  0023A4  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  5293  0023A8  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  5294  0023AC  EC68  F00A         	call	___flmul	;wreg free
  5295  0023B0  C02A  F0E0         	movff	?___flmul,___fltol@f1
  5296  0023B4  C02B  F0E1         	movff	?___flmul+1,___fltol@f1+1
  5297  0023B8  C02C  F0E2         	movff	?___flmul+2,___fltol@f1+2
  5298  0023BC  C02D  F0E3         	movff	?___flmul+3,___fltol@f1+3
  5299  0023C0  EC6B  F013         	call	___fltol	;wreg free
  5300  0023C4  0100               	movlb	0	; () banked
  5301  0023C6  51E0               	movf	?___fltol& (0+255),w,b
  5302  0023C8  0101               	movlb	1	; () banked
  5303  0023CA  6F08               	movwf	calcMotorPow@addMPow& (0+255),b
  5304  0023CC                     
  5305                           ; BSR set to: 1
  5306                           ;main.c: 355:     if (addMPow > (5)) {
  5307  0023CC  5108               	movf	calcMotorPow@addMPow& (0+255),w,b
  5308  0023CE  0A80               	xorlw	128
  5309  0023D0  0F7A               	addlw	-134
  5310  0023D2  A0D8               	btfss	status,0,c
  5311  0023D4  EFEE  F011         	goto	u5201
  5312  0023D8  EFF0  F011         	goto	u5200
  5313  0023DC                     u5201:
  5314  0023DC  EFF4  F011         	goto	l6281
  5315  0023E0                     u5200:
  5316  0023E0                     
  5317                           ; BSR set to: 1
  5318                           ;main.c: 356:         addMPow = (5);
  5319  0023E0  0E05               	movlw	5
  5320  0023E2  6F08               	movwf	calcMotorPow@addMPow& (0+255),b
  5321                           
  5322                           ;main.c: 357:     } else if (addMPow < -(5)) {
  5323  0023E4  EF00  F012         	goto	l6285
  5324  0023E8                     l6281:
  5325                           
  5326                           ; BSR set to: 1
  5327  0023E8  5108               	movf	calcMotorPow@addMPow& (0+255),w,b
  5328  0023EA  0A80               	xorlw	128
  5329  0023EC  0F85               	addlw	133
  5330  0023EE  B0D8               	btfsc	status,0,c
  5331  0023F0  EFFC  F011         	goto	u5211
  5332  0023F4  EFFE  F011         	goto	u5210
  5333  0023F8                     u5211:
  5334  0023F8  EF00  F012         	goto	l6285
  5335  0023FC                     u5210:
  5336  0023FC                     
  5337                           ; BSR set to: 1
  5338                           ;main.c: 358:         addMPow = -(5);
  5339  0023FC  0EFB               	movlw	251
  5340  0023FE  6F08               	movwf	calcMotorPow@addMPow& (0+255),b
  5341  002400                     l6285:
  5342                           
  5343                           ; BSR set to: 1
  5344                           ;main.c: 361:     actMotorPow += addMPow;
  5345  002400  5108               	movf	calcMotorPow@addMPow& (0+255),w,b
  5346  002402  0100               	movlb	0	; () banked
  5347  002404  27AC               	addwf	_actMotorPow& (0+255),f,b
  5348  002406  0E00               	movlw	0
  5349  002408  0101               	movlb	1	; () banked
  5350  00240A  BF08               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  5351  00240C  0EFF               	movlw	255
  5352  00240E  0100               	movlb	0	; () banked
  5353  002410  23AD               	addwfc	(_actMotorPow+1)& (0+255),f,b
  5354  002412                     
  5355                           ; BSR set to: 0
  5356                           ;main.c: 363:     if (actMotorPow > (700)) {
  5357  002412  BFAD               	btfsc	(_actMotorPow+1)& (0+255),7,b
  5358  002414  EF15  F012         	goto	u5221
  5359  002418  0EBD               	movlw	189
  5360  00241A  5DAC               	subwf	_actMotorPow& (0+255),w,b
  5361  00241C  0E02               	movlw	2
  5362  00241E  59AD               	subwfb	(_actMotorPow+1)& (0+255),w,b
  5363  002420  A0D8               	btfss	status,0,c
  5364  002422  EF15  F012         	goto	u5221
  5365  002426  EF17  F012         	goto	u5220
  5366  00242A                     u5221:
  5367  00242A  EF1D  F012         	goto	l6291
  5368  00242E                     u5220:
  5369  00242E                     
  5370                           ; BSR set to: 0
  5371                           ;main.c: 364:         actMotorPow = (700);
  5372  00242E  0E02               	movlw	2
  5373  002430  6FAD               	movwf	(_actMotorPow+1)& (0+255),b
  5374  002432  0EBC               	movlw	188
  5375  002434  6FAC               	movwf	_actMotorPow& (0+255),b
  5376                           
  5377                           ;main.c: 365:     } else if (actMotorPow < (-400)) {
  5378  002436  EF2F  F012         	goto	l6295
  5379  00243A                     l6291:
  5380                           
  5381                           ; BSR set to: 0
  5382  00243A  AFAD               	btfss	(_actMotorPow+1)& (0+255),7,b
  5383  00243C  EF29  F012         	goto	u5231
  5384  002440  0E70               	movlw	112
  5385  002442  5DAC               	subwf	_actMotorPow& (0+255),w,b
  5386  002444  0EFE               	movlw	254
  5387  002446  59AD               	subwfb	(_actMotorPow+1)& (0+255),w,b
  5388  002448  B0D8               	btfsc	status,0,c
  5389  00244A  EF29  F012         	goto	u5231
  5390  00244E  EF2B  F012         	goto	u5230
  5391  002452                     u5231:
  5392  002452  EF2F  F012         	goto	l6295
  5393  002456                     u5230:
  5394  002456                     
  5395                           ; BSR set to: 0
  5396                           ;main.c: 366:         actMotorPow = (-400);
  5397  002456  0EFE               	movlw	254
  5398  002458  6FAD               	movwf	(_actMotorPow+1)& (0+255),b
  5399  00245A  0E70               	movlw	112
  5400  00245C  6FAC               	movwf	_actMotorPow& (0+255),b
  5401  00245E                     l6295:
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;main.c: 369:     setMotor(actMotorPow);
  5405  00245E  C0AC  F018         	movff	_actMotorPow,setMotor@motorPower
  5406  002462  C0AD  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  5407  002466  EC0D  F016         	call	_setMotor	;wreg free
  5408  00246A                     
  5409                           ;main.c: 371:     oldSpeed = currentSpeed;
  5410  00246A  C0B0  F0AE         	movff	_currentSpeed,_oldSpeed
  5411  00246E  C0B1  F0AF         	movff	_currentSpeed+1,_oldSpeed+1
  5412  002472  0012               	return		;funcret
  5413  002474                     __end_of_calcMotorPow:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _setMotor *****************
  5417 ;; Defined at:
  5418 ;;		line 374 in file "main.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  motorPower      2   23[COMRAM] short 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;		None
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  1    wreg      void 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;Total ram usage:        4 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; Hardware stack levels required when called: 9
  5439 ;; This function calls:
  5440 ;;		_PWM7_LoadDutyValue
  5441 ;;		_PWM8_LoadDutyValue
  5442 ;; This function is called by:
  5443 ;;		_loop
  5444 ;;		_startAccell
  5445 ;;		_calcMotorPow
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text22
  5450  002C1A                     __ptext22:
  5451                           	callstack 0
  5452  002C1A                     _setMotor:
  5453                           	callstack 19
  5454  002C1A                     
  5455                           ;main.c: 375:     if (motorPower >= (40)) {
  5456  002C1A  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  5457  002C1C  EF19  F016         	goto	u4541
  5458  002C20  5019               	movf	(setMotor@motorPower+1)^0,w,c
  5459  002C22  E109               	bnz	u4540
  5460  002C24  0E28               	movlw	40
  5461  002C26  5C18               	subwf	setMotor@motorPower^0,w,c
  5462  002C28  A0D8               	btfss	status,0,c
  5463  002C2A  EF19  F016         	goto	u4541
  5464  002C2E  EF1B  F016         	goto	u4540
  5465  002C32                     u4541:
  5466  002C32  EF3B  F016         	goto	l5851
  5467  002C36                     u4540:
  5468  002C36                     
  5469                           ;main.c: 376:         if (motorPower > (700)) {
  5470  002C36  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  5471  002C38  EF27  F016         	goto	u4551
  5472  002C3C  0EBD               	movlw	189
  5473  002C3E  5C18               	subwf	setMotor@motorPower^0,w,c
  5474  002C40  0E02               	movlw	2
  5475  002C42  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  5476  002C44  A0D8               	btfss	status,0,c
  5477  002C46  EF27  F016         	goto	u4551
  5478  002C4A  EF29  F016         	goto	u4550
  5479  002C4E                     u4551:
  5480  002C4E  EF2D  F016         	goto	l5847
  5481  002C52                     u4550:
  5482  002C52                     
  5483                           ;main.c: 377:             motorPower = (700);
  5484  002C52  0E02               	movlw	2
  5485  002C54  6E19               	movwf	(setMotor@motorPower+1)^0,c
  5486  002C56  0EBC               	movlw	188
  5487  002C58  6E18               	movwf	setMotor@motorPower^0,c
  5488  002C5A                     l5847:
  5489                           
  5490                           ;main.c: 379:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  5491  002C5A  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  5492  002C5E  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  5493  002C62  EC2C  F01B         	call	_PWM7_LoadDutyValue	;wreg free
  5494  002C66                     
  5495                           ;main.c: 380:         PWM8_LoadDutyValue(0);
  5496  002C66  0E00               	movlw	0
  5497  002C68  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5498  002C6A  0E00               	movlw	0
  5499  002C6C  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  5500  002C6E  EC12  F01B         	call	_PWM8_LoadDutyValue	;wreg free
  5501                           
  5502                           ;main.c: 381:     } else if (motorPower <= -(40)) {
  5503  002C72  EF7D  F016         	goto	l1378
  5504  002C76                     l5851:
  5505  002C76  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  5506  002C78  EF47  F016         	goto	u4561
  5507  002C7C  0ED9               	movlw	217
  5508  002C7E  5C18               	subwf	setMotor@motorPower^0,w,c
  5509  002C80  0EFF               	movlw	255
  5510  002C82  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  5511  002C84  B0D8               	btfsc	status,0,c
  5512  002C86  EF47  F016         	goto	u4561
  5513  002C8A  EF49  F016         	goto	u4560
  5514  002C8E                     u4561:
  5515  002C8E  EF71  F016         	goto	l5861
  5516  002C92                     u4560:
  5517  002C92                     
  5518                           ;main.c: 382:         if (motorPower < (-400)) {
  5519  002C92  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  5520  002C94  EF55  F016         	goto	u4571
  5521  002C98  0E70               	movlw	112
  5522  002C9A  5C18               	subwf	setMotor@motorPower^0,w,c
  5523  002C9C  0EFE               	movlw	254
  5524  002C9E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  5525  002CA0  B0D8               	btfsc	status,0,c
  5526  002CA2  EF55  F016         	goto	u4571
  5527  002CA6  EF57  F016         	goto	u4570
  5528  002CAA                     u4571:
  5529  002CAA  EF5B  F016         	goto	l5857
  5530  002CAE                     u4570:
  5531  002CAE                     
  5532                           ;main.c: 383:             motorPower = (-400);
  5533  002CAE  0EFE               	movlw	254
  5534  002CB0  6E19               	movwf	(setMotor@motorPower+1)^0,c
  5535  002CB2  0E70               	movlw	112
  5536  002CB4  6E18               	movwf	setMotor@motorPower^0,c
  5537  002CB6                     l5857:
  5538                           
  5539                           ;main.c: 385:         PWM7_LoadDutyValue(0);
  5540  002CB6  0E00               	movlw	0
  5541  002CB8  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  5542  002CBA  0E00               	movlw	0
  5543  002CBC  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  5544  002CBE  EC2C  F01B         	call	_PWM7_LoadDutyValue	;wreg free
  5545  002CC2                     
  5546                           ;main.c: 386:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  5547  002CC2  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  5548  002CC6  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  5549  002CCA  1E1A               	comf	??_setMotor^0,f,c
  5550  002CCC  1E1B               	comf	(??_setMotor+1)^0,f,c
  5551  002CCE  4A1A               	infsnz	??_setMotor^0,f,c
  5552  002CD0  2A1B               	incf	(??_setMotor+1)^0,f,c
  5553  002CD2  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  5554  002CD6  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  5555  002CDA  EC12  F01B         	call	_PWM8_LoadDutyValue	;wreg free
  5556                           
  5557                           ;main.c: 387:     } else {
  5558  002CDE  EF7D  F016         	goto	l1378
  5559  002CE2                     l5861:
  5560                           
  5561                           ;main.c: 389:         PWM7_LoadDutyValue(0);
  5562  002CE2  0E00               	movlw	0
  5563  002CE4  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  5564  002CE6  0E00               	movlw	0
  5565  002CE8  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  5566  002CEA  EC2C  F01B         	call	_PWM7_LoadDutyValue	;wreg free
  5567                           
  5568                           ;main.c: 390:         PWM8_LoadDutyValue(0);
  5569  002CEE  0E00               	movlw	0
  5570  002CF0  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  5571  002CF2  0E00               	movlw	0
  5572  002CF4  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  5573  002CF6  EC12  F01B         	call	_PWM8_LoadDutyValue	;wreg free
  5574  002CFA                     l1378:
  5575  002CFA  0012               	return		;funcret
  5576  002CFC                     __end_of_setMotor:
  5577                           	callstack 0
  5578                           
  5579 ;; *************** function _PWM8_LoadDutyValue *****************
  5580 ;; Defined at:
  5581 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  dutyValue       2   19[COMRAM] unsigned short 
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, status,2, status,0
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;Total ram usage:        4 bytes
  5600 ;; Hardware stack levels used: 1
  5601 ;; Hardware stack levels required when called: 8
  5602 ;; This function calls:
  5603 ;;		Nothing
  5604 ;; This function is called by:
  5605 ;;		_setMotor
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text23
  5610  003624                     __ptext23:
  5611                           	callstack 0
  5612  003624                     _PWM8_LoadDutyValue:
  5613                           	callstack 19
  5614  003624                     
  5615                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5616  003624  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  5617  003628  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  5618  00362C  90D8               	bcf	status,0,c
  5619  00362E  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  5620  003630  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  5621  003632  90D8               	bcf	status,0,c
  5622  003634  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  5623  003636  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  5624  003638  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  5625  00363A  6E61               	movwf	97,c	;volatile
  5626                           
  5627                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  5628  00363C  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  5629  003640  0E03               	movlw	3
  5630  003642  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  5631  003644  0E06               	movlw	6
  5632  003646  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  5633  003648                     u4075:
  5634  003648  90D8               	bcf	status,0,c
  5635  00364A  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  5636  00364C  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  5637  00364E  EF24  F01B         	goto	u4075
  5638  003652  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  5639  003654  6E60               	movwf	96,c	;volatile
  5640  003656  0012               	return		;funcret
  5641  003658                     __end_of_PWM8_LoadDutyValue:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _PWM7_LoadDutyValue *****************
  5645 ;; Defined at:
  5646 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  dutyValue       2   19[COMRAM] unsigned short 
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:        4 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 8
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_setMotor
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text24
  5675  003658                     __ptext24:
  5676                           	callstack 0
  5677  003658                     _PWM7_LoadDutyValue:
  5678                           	callstack 19
  5679  003658                     
  5680                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  5681  003658  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  5682  00365C  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  5683  003660  90D8               	bcf	status,0,c
  5684  003662  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  5685  003664  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  5686  003666  90D8               	bcf	status,0,c
  5687  003668  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  5688  00366A  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  5689  00366C  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  5690  00366E  6E65               	movwf	101,c	;volatile
  5691                           
  5692                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  5693  003670  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  5694  003674  0E03               	movlw	3
  5695  003676  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  5696  003678  0E06               	movlw	6
  5697  00367A  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  5698  00367C                     u4065:
  5699  00367C  90D8               	bcf	status,0,c
  5700  00367E  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  5701  003680  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  5702  003682  EF3E  F01B         	goto	u4065
  5703  003686  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  5704  003688  6E64               	movwf	100,c	;volatile
  5705  00368A  0012               	return		;funcret
  5706  00368C                     __end_of_PWM7_LoadDutyValue:
  5707                           	callstack 0
  5708                           
  5709 ;; *************** function _actSpeed *****************
  5710 ;; Defined at:
  5711 ;;		line 67 in file "main.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;		None
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  speed           2   35[COMRAM] short 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  2   33[COMRAM] short 
  5718 ;; Registers used:
  5719 ;;		wreg, status,2, status,0, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5728 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5729 ;;Total ram usage:        4 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 9
  5732 ;; This function calls:
  5733 ;;		___aldiv
  5734 ;; This function is called by:
  5735 ;;		_calcMotorPow
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text25
  5740  003086                     __ptext25:
  5741                           	callstack 0
  5742  003086                     _actSpeed:
  5743                           	callstack 19
  5744  003086                     
  5745                           ;main.c: 68:     int16_t speed = 0;
  5746  003086  0E00               	movlw	0
  5747  003088  6E25               	movwf	(actSpeed@speed+1)^0,c
  5748  00308A  0E00               	movlw	0
  5749  00308C  6E24               	movwf	actSpeed@speed^0,c
  5750  00308E                     
  5751                           ;main.c: 69:     if (smtPeriod) {
  5752  00308E  5046               	movf	_smtPeriod^0,w,c	;volatile
  5753  003090  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  5754  003092  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  5755  003094  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  5756  003096  B4D8               	btfsc	status,2,c
  5757  003098  EF50  F018         	goto	u4621
  5758  00309C  EF52  F018         	goto	u4620
  5759  0030A0                     u4621:
  5760  0030A0  EF88  F018         	goto	l5929
  5761  0030A4                     u4620:
  5762  0030A4                     
  5763                           ;main.c: 70:         if (CLC3CONbits.LC3OUT) {
  5764  0030A4  013C               	movlb	60	; () banked
  5765  0030A6  AB60               	btfss	96,5,b	;volatile
  5766  0030A8  EF58  F018         	goto	u4631
  5767  0030AC  EF5A  F018         	goto	u4630
  5768  0030B0                     u4631:
  5769  0030B0  EF72  F018         	goto	l5927
  5770  0030B4                     u4630:
  5771  0030B4                     
  5772                           ; BSR set to: 60
  5773                           ;main.c: 71:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  5774  0030B4  0E20               	movlw	32
  5775  0030B6  6E14               	movwf	___aldiv@dividend^0,c
  5776  0030B8  0EA1               	movlw	161
  5777  0030BA  6E15               	movwf	(___aldiv@dividend+1)^0,c
  5778  0030BC  0E07               	movlw	7
  5779  0030BE  6E16               	movwf	(___aldiv@dividend+2)^0,c
  5780  0030C0  0E00               	movlw	0
  5781  0030C2  6E17               	movwf	(___aldiv@dividend+3)^0,c
  5782  0030C4  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  5783  0030C8  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  5784  0030CC  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  5785  0030D0  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  5786  0030D4  EC87  F014         	call	___aldiv	;wreg free
  5787  0030D8  C014  F024         	movff	?___aldiv,actSpeed@speed
  5788  0030DC  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  5789                           
  5790                           ;main.c: 72:         } else {
  5791  0030E0  EF88  F018         	goto	l5929
  5792  0030E4                     l5927:
  5793                           
  5794                           ; BSR set to: 60
  5795                           ;main.c: 73:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  5796  0030E4  0EE0               	movlw	224
  5797  0030E6  6E14               	movwf	___aldiv@dividend^0,c
  5798  0030E8  0E5E               	movlw	94
  5799  0030EA  6E15               	movwf	(___aldiv@dividend+1)^0,c
  5800  0030EC  0EF8               	movlw	248
  5801  0030EE  6E16               	movwf	(___aldiv@dividend+2)^0,c
  5802  0030F0  0EFF               	movlw	255
  5803  0030F2  6E17               	movwf	(___aldiv@dividend+3)^0,c
  5804  0030F4  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  5805  0030F8  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  5806  0030FC  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  5807  003100  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  5808  003104  EC87  F014         	call	___aldiv	;wreg free
  5809  003108  C014  F024         	movff	?___aldiv,actSpeed@speed
  5810  00310C  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  5811  003110                     l5929:
  5812                           
  5813                           ;main.c: 76:     return speed;
  5814  003110  C024  F022         	movff	actSpeed@speed,?_actSpeed
  5815  003114  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  5816  003118  0012               	return		;funcret
  5817  00311A                     __end_of_actSpeed:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function ___aldiv *****************
  5821 ;; Defined at:
  5822 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  dividend        4   19[COMRAM] long 
  5825 ;;  divisor         4   23[COMRAM] long 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  quotient        4   29[COMRAM] long 
  5828 ;;  sign            1   28[COMRAM] unsigned char 
  5829 ;;  counter         1   27[COMRAM] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  4   19[COMRAM] long 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:       14 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 8
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_actSpeed
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text26
  5854  00290E                     __ptext26:
  5855                           	callstack 0
  5856  00290E                     ___aldiv:
  5857                           	callstack 19
  5858  00290E  0E00               	movlw	0
  5859  002910  6E1D               	movwf	___aldiv@sign^0,c
  5860  002912  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  5861  002914  EF90  F014         	goto	u4120
  5862  002918  EF8E  F014         	goto	u4121
  5863  00291C                     u4121:
  5864  00291C  EF9A  F014         	goto	l5585
  5865  002920                     u4120:
  5866  002920  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  5867  002922  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  5868  002924  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  5869  002926  6C18               	negf	___aldiv@divisor^0,c
  5870  002928  0E00               	movlw	0
  5871  00292A  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  5872  00292C  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  5873  00292E  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  5874  002930  0E01               	movlw	1
  5875  002932  6E1D               	movwf	___aldiv@sign^0,c
  5876  002934                     l5585:
  5877  002934  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  5878  002936  EFA1  F014         	goto	u4130
  5879  00293A  EF9F  F014         	goto	u4131
  5880  00293E                     u4131:
  5881  00293E  EFAB  F014         	goto	l5591
  5882  002942                     u4130:
  5883  002942  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  5884  002944  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  5885  002946  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  5886  002948  6C14               	negf	___aldiv@dividend^0,c
  5887  00294A  0E00               	movlw	0
  5888  00294C  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  5889  00294E  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  5890  002950  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  5891  002952  0E01               	movlw	1
  5892  002954  1A1D               	xorwf	___aldiv@sign^0,f,c
  5893  002956                     l5591:
  5894  002956  0E00               	movlw	0
  5895  002958  6E1E               	movwf	___aldiv@quotient^0,c
  5896  00295A  0E00               	movlw	0
  5897  00295C  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  5898  00295E  0E00               	movlw	0
  5899  002960  6E20               	movwf	(___aldiv@quotient+2)^0,c
  5900  002962  0E00               	movlw	0
  5901  002964  6E21               	movwf	(___aldiv@quotient+3)^0,c
  5902  002966  5018               	movf	___aldiv@divisor^0,w,c
  5903  002968  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  5904  00296A  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  5905  00296C  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  5906  00296E  B4D8               	btfsc	status,2,c
  5907  002970  EFBC  F014         	goto	u4141
  5908  002974  EFBE  F014         	goto	u4140
  5909  002978                     u4141:
  5910  002978  EFF4  F014         	goto	l5613
  5911  00297C                     u4140:
  5912  00297C  0E01               	movlw	1
  5913  00297E  6E1C               	movwf	___aldiv@counter^0,c
  5914  002980  EFC8  F014         	goto	l5599
  5915  002984                     l5597:
  5916  002984  90D8               	bcf	status,0,c
  5917  002986  3618               	rlcf	___aldiv@divisor^0,f,c
  5918  002988  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  5919  00298A  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  5920  00298C  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  5921  00298E  2A1C               	incf	___aldiv@counter^0,f,c
  5922  002990                     l5599:
  5923  002990  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  5924  002992  EFCD  F014         	goto	u4151
  5925  002996  EFCF  F014         	goto	u4150
  5926  00299A                     u4151:
  5927  00299A  EFC2  F014         	goto	l5597
  5928  00299E                     u4150:
  5929  00299E                     l5601:
  5930  00299E  90D8               	bcf	status,0,c
  5931  0029A0  361E               	rlcf	___aldiv@quotient^0,f,c
  5932  0029A2  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  5933  0029A4  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  5934  0029A6  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  5935  0029A8  5018               	movf	___aldiv@divisor^0,w,c
  5936  0029AA  5C14               	subwf	___aldiv@dividend^0,w,c
  5937  0029AC  5019               	movf	(___aldiv@divisor+1)^0,w,c
  5938  0029AE  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  5939  0029B0  501A               	movf	(___aldiv@divisor+2)^0,w,c
  5940  0029B2  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  5941  0029B4  501B               	movf	(___aldiv@divisor+3)^0,w,c
  5942  0029B6  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  5943  0029B8  A0D8               	btfss	status,0,c
  5944  0029BA  EFE1  F014         	goto	u4161
  5945  0029BE  EFE3  F014         	goto	u4160
  5946  0029C2                     u4161:
  5947  0029C2  EFEC  F014         	goto	l5609
  5948  0029C6                     u4160:
  5949  0029C6  5018               	movf	___aldiv@divisor^0,w,c
  5950  0029C8  5E14               	subwf	___aldiv@dividend^0,f,c
  5951  0029CA  5019               	movf	(___aldiv@divisor+1)^0,w,c
  5952  0029CC  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  5953  0029CE  501A               	movf	(___aldiv@divisor+2)^0,w,c
  5954  0029D0  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  5955  0029D2  501B               	movf	(___aldiv@divisor+3)^0,w,c
  5956  0029D4  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  5957  0029D6  801E               	bsf	___aldiv@quotient^0,0,c
  5958  0029D8                     l5609:
  5959  0029D8  90D8               	bcf	status,0,c
  5960  0029DA  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  5961  0029DC  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  5962  0029DE  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  5963  0029E0  3218               	rrcf	___aldiv@divisor^0,f,c
  5964  0029E2  2E1C               	decfsz	___aldiv@counter^0,f,c
  5965  0029E4  EFCF  F014         	goto	l5601
  5966  0029E8                     l5613:
  5967  0029E8  501D               	movf	___aldiv@sign^0,w,c
  5968  0029EA  B4D8               	btfsc	status,2,c
  5969  0029EC  EFFA  F014         	goto	u4171
  5970  0029F0  EFFC  F014         	goto	u4170
  5971  0029F4                     u4171:
  5972  0029F4  EF04  F015         	goto	l5617
  5973  0029F8                     u4170:
  5974  0029F8  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  5975  0029FA  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  5976  0029FC  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  5977  0029FE  6C1E               	negf	___aldiv@quotient^0,c
  5978  002A00  0E00               	movlw	0
  5979  002A02  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  5980  002A04  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  5981  002A06  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  5982  002A08                     l5617:
  5983  002A08  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  5984  002A0C  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  5985  002A10  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  5986  002A14  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  5987  002A18  0012               	return		;funcret
  5988  002A1A                     __end_of___aldiv:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function ___xxtofl *****************
  5992 ;; Defined at:
  5993 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  sign            1    wreg     unsigned char 
  5996 ;;  val             4   27[COMRAM] long 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  sign            1   35[COMRAM] unsigned char 
  5999 ;;  arg             4   37[COMRAM] unsigned long 
  6000 ;;  exp             1   36[COMRAM] unsigned char 
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  4   27[COMRAM] unsigned char 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;Total ram usage:       14 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; Hardware stack levels required when called: 8
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_loop
  6021 ;;		_checkBatt
  6022 ;;		_startAccell
  6023 ;;		_calcSteering
  6024 ;;		_calcSpeed
  6025 ;;		_calcMotorPow
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text27
  6030  001FC2                     __ptext27:
  6031                           	callstack 0
  6032  001FC2                     ___xxtofl:
  6033                           	callstack 19
  6034                           
  6035                           ;incstack = 0
  6036                           ;___xxtofl@sign stored from wreg
  6037  001FC2  6E24               	movwf	___xxtofl@sign^0,c
  6038  001FC4  5024               	movf	___xxtofl@sign^0,w,c
  6039  001FC6  B4D8               	btfsc	status,2,c
  6040  001FC8  EFE8  F00F         	goto	u4441
  6041  001FCC  EFEA  F00F         	goto	u4440
  6042  001FD0                     u4441:
  6043  001FD0  EF0C  F010         	goto	l2053
  6044  001FD4                     u4440:
  6045  001FD4  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  6046  001FD6  EFF1  F00F         	goto	u4450
  6047  001FDA  EFEF  F00F         	goto	u4451
  6048  001FDE                     u4451:
  6049  001FDE  EF0C  F010         	goto	l2053
  6050  001FE2                     u4450:
  6051  001FE2  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  6052  001FE6  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  6053  001FEA  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  6054  001FEE  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  6055  001FF2  1E20               	comf	??___xxtofl^0,f,c
  6056  001FF4  1E21               	comf	(??___xxtofl+1)^0,f,c
  6057  001FF6  1E22               	comf	(??___xxtofl+2)^0,f,c
  6058  001FF8  1E23               	comf	(??___xxtofl+3)^0,f,c
  6059  001FFA  2A20               	incf	??___xxtofl^0,f,c
  6060  001FFC  0E00               	movlw	0
  6061  001FFE  2221               	addwfc	(??___xxtofl+1)^0,f,c
  6062  002000  2222               	addwfc	(??___xxtofl+2)^0,f,c
  6063  002002  2223               	addwfc	(??___xxtofl+3)^0,f,c
  6064  002004  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  6065  002008  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  6066  00200C  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  6067  002010  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  6068  002014  EF14  F010         	goto	l5801
  6069  002018                     l2053:
  6070  002018  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  6071  00201C  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6072  002020  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6073  002024  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6074  002028                     l5801:
  6075  002028  501C               	movf	___xxtofl@val^0,w,c
  6076  00202A  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  6077  00202C  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  6078  00202E  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  6079  002030  A4D8               	btfss	status,2,c
  6080  002032  EF1D  F010         	goto	u4461
  6081  002036  EF1F  F010         	goto	u4460
  6082  00203A                     u4461:
  6083  00203A  EF29  F010         	goto	l5807
  6084  00203E                     u4460:
  6085  00203E  0E00               	movlw	0
  6086  002040  6E1C               	movwf	?___xxtofl^0,c
  6087  002042  0E00               	movlw	0
  6088  002044  6E1D               	movwf	(?___xxtofl+1)^0,c
  6089  002046  0E00               	movlw	0
  6090  002048  6E1E               	movwf	(?___xxtofl+2)^0,c
  6091  00204A  0E00               	movlw	0
  6092  00204C  6E1F               	movwf	(?___xxtofl+3)^0,c
  6093  00204E  EFBA  F010         	goto	l2056
  6094  002052                     l5807:
  6095  002052  0E96               	movlw	150
  6096  002054  6E25               	movwf	___xxtofl@exp^0,c
  6097  002056  EF33  F010         	goto	l5811
  6098  00205A                     l5809:
  6099  00205A  2A25               	incf	___xxtofl@exp^0,f,c
  6100  00205C  90D8               	bcf	status,0,c
  6101  00205E  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  6102  002060  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  6103  002062  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  6104  002064  3226               	rrcf	___xxtofl@arg^0,f,c
  6105  002066                     l5811:
  6106  002066  0E00               	movlw	0
  6107  002068  1426               	andwf	___xxtofl@arg^0,w,c
  6108  00206A  6E20               	movwf	??___xxtofl^0,c
  6109  00206C  0E00               	movlw	0
  6110  00206E  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  6111  002070  6E21               	movwf	(??___xxtofl+1)^0,c
  6112  002072  0E00               	movlw	0
  6113  002074  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  6114  002076  6E22               	movwf	(??___xxtofl+2)^0,c
  6115  002078  0EFE               	movlw	254
  6116  00207A  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  6117  00207C  6E23               	movwf	(??___xxtofl+3)^0,c
  6118  00207E  5020               	movf	??___xxtofl^0,w,c
  6119  002080  1021               	iorwf	(??___xxtofl+1)^0,w,c
  6120  002082  1022               	iorwf	(??___xxtofl+2)^0,w,c
  6121  002084  1023               	iorwf	(??___xxtofl+3)^0,w,c
  6122  002086  A4D8               	btfss	status,2,c
  6123  002088  EF48  F010         	goto	u4471
  6124  00208C  EF4A  F010         	goto	u4470
  6125  002090                     u4471:
  6126  002090  EF2D  F010         	goto	l5809
  6127  002094                     u4470:
  6128  002094  EF58  F010         	goto	l2060
  6129  002098                     l5813:
  6130  002098  2A25               	incf	___xxtofl@exp^0,f,c
  6131  00209A  0E01               	movlw	1
  6132  00209C  2626               	addwf	___xxtofl@arg^0,f,c
  6133  00209E  0E00               	movlw	0
  6134  0020A0  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  6135  0020A2  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  6136  0020A4  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  6137  0020A6  90D8               	bcf	status,0,c
  6138  0020A8  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  6139  0020AA  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  6140  0020AC  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  6141  0020AE  3226               	rrcf	___xxtofl@arg^0,f,c
  6142  0020B0                     l2060:
  6143  0020B0  0E00               	movlw	0
  6144  0020B2  1426               	andwf	___xxtofl@arg^0,w,c
  6145  0020B4  6E20               	movwf	??___xxtofl^0,c
  6146  0020B6  0E00               	movlw	0
  6147  0020B8  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  6148  0020BA  6E21               	movwf	(??___xxtofl+1)^0,c
  6149  0020BC  0E00               	movlw	0
  6150  0020BE  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  6151  0020C0  6E22               	movwf	(??___xxtofl+2)^0,c
  6152  0020C2  0EFF               	movlw	255
  6153  0020C4  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  6154  0020C6  6E23               	movwf	(??___xxtofl+3)^0,c
  6155  0020C8  5020               	movf	??___xxtofl^0,w,c
  6156  0020CA  1021               	iorwf	(??___xxtofl+1)^0,w,c
  6157  0020CC  1022               	iorwf	(??___xxtofl+2)^0,w,c
  6158  0020CE  1023               	iorwf	(??___xxtofl+3)^0,w,c
  6159  0020D0  A4D8               	btfss	status,2,c
  6160  0020D2  EF6D  F010         	goto	u4481
  6161  0020D6  EF6F  F010         	goto	u4480
  6162  0020DA                     u4481:
  6163  0020DA  EF4C  F010         	goto	l5813
  6164  0020DE                     u4480:
  6165  0020DE  EF77  F010         	goto	l5821
  6166  0020E2                     l5819:
  6167  0020E2  0625               	decf	___xxtofl@exp^0,f,c
  6168  0020E4  90D8               	bcf	status,0,c
  6169  0020E6  3626               	rlcf	___xxtofl@arg^0,f,c
  6170  0020E8  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  6171  0020EA  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  6172  0020EC  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  6173  0020EE                     l5821:
  6174  0020EE  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  6175  0020F0  EF7C  F010         	goto	u4491
  6176  0020F4  EF7E  F010         	goto	u4490
  6177  0020F8                     u4491:
  6178  0020F8  EF86  F010         	goto	l2067
  6179  0020FC                     u4490:
  6180  0020FC  0E02               	movlw	2
  6181  0020FE  6025               	cpfslt	___xxtofl@exp^0,c
  6182  002100  EF84  F010         	goto	u4501
  6183  002104  EF86  F010         	goto	u4500
  6184  002108                     u4501:
  6185  002108  EF71  F010         	goto	l5819
  6186  00210C                     u4500:
  6187  00210C                     l2067:
  6188  00210C  B025               	btfsc	___xxtofl@exp^0,0,c
  6189  00210E  EF8B  F010         	goto	u4511
  6190  002112  EF8D  F010         	goto	u4510
  6191  002116                     u4511:
  6192  002116  EF8E  F010         	goto	l5827
  6193  00211A                     u4510:
  6194  00211A  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  6195  00211C                     l5827:
  6196  00211C  90D8               	bcf	status,0,c
  6197  00211E  3225               	rrcf	___xxtofl@exp^0,f,c
  6198  002120  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  6199  002124  6A21               	clrf	(??___xxtofl+1)^0,c
  6200  002126  6A22               	clrf	(??___xxtofl+2)^0,c
  6201  002128  6A23               	clrf	(??___xxtofl+3)^0,c
  6202  00212A  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  6203  00212E  6A22               	clrf	(??___xxtofl+2)^0,c
  6204  002130  6A21               	clrf	(??___xxtofl+1)^0,c
  6205  002132  6A20               	clrf	??___xxtofl^0,c
  6206  002134  5020               	movf	??___xxtofl^0,w,c
  6207  002136  1226               	iorwf	___xxtofl@arg^0,f,c
  6208  002138  5021               	movf	(??___xxtofl+1)^0,w,c
  6209  00213A  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  6210  00213C  5022               	movf	(??___xxtofl+2)^0,w,c
  6211  00213E  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  6212  002140  5023               	movf	(??___xxtofl+3)^0,w,c
  6213  002142  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  6214  002144  5024               	movf	___xxtofl@sign^0,w,c
  6215  002146  B4D8               	btfsc	status,2,c
  6216  002148  EFA8  F010         	goto	u4521
  6217  00214C  EFAA  F010         	goto	u4520
  6218  002150                     u4521:
  6219  002150  EFB2  F010         	goto	l5837
  6220  002154                     u4520:
  6221  002154  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  6222  002156  EFB1  F010         	goto	u4530
  6223  00215A  EFAF  F010         	goto	u4531
  6224  00215E                     u4531:
  6225  00215E  EFB2  F010         	goto	l5837
  6226  002162                     u4530:
  6227  002162  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  6228  002164                     l5837:
  6229  002164  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  6230  002168  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  6231  00216C  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  6232  002170  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  6233  002174                     l2056:
  6234  002174  0012               	return		;funcret
  6235  002176                     __end_of___xxtofl:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function ___fltol *****************
  6239 ;; Defined at:
  6240 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  f1              4   25[BANK0 ] unsigned char 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  exp1            1    1[BANK1 ] unsigned char 
  6245 ;;  sign1           1    0[BANK1 ] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  4   25[BANK0 ] long 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Totals:         0       8       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;Total ram usage:       10 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 8
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_startAccell
  6266 ;;		_calcSteering
  6267 ;;		_calcSpeed
  6268 ;;		_calcMotorPow
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text28
  6273  0026D6                     __ptext28:
  6274                           	callstack 0
  6275  0026D6                     ___fltol:
  6276                           	callstack 19
  6277  0026D6  0100               	movlb	0	; () banked
  6278  0026D8  35E2               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6279  0026DA  35E3               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6280  0026DC  0101               	movlb	1	; () banked
  6281  0026DE  6F01               	movwf	___fltol@exp1& (0+255),b
  6282  0026E0  5101               	movf	___fltol@exp1& (0+255),w,b
  6283  0026E2  A4D8               	btfss	status,2,c
  6284  0026E4  EF76  F013         	goto	u4371
  6285  0026E8  EF78  F013         	goto	u4370
  6286  0026EC                     u4371:
  6287  0026EC  EF83  F013         	goto	l5757
  6288  0026F0                     u4370:
  6289  0026F0                     l5753:
  6290                           
  6291                           ; BSR set to: 1
  6292  0026F0  0E00               	movlw	0
  6293  0026F2  0100               	movlb	0	; () banked
  6294  0026F4  6FE0               	movwf	?___fltol& (0+255),b
  6295  0026F6  0E00               	movlw	0
  6296  0026F8  6FE1               	movwf	(?___fltol+1)& (0+255),b
  6297  0026FA  0E00               	movlw	0
  6298  0026FC  6FE2               	movwf	(?___fltol+2)& (0+255),b
  6299  0026FE  0E00               	movlw	0
  6300  002700  6FE3               	movwf	(?___fltol+3)& (0+255),b
  6301  002702  EFF9  F013         	goto	l1695
  6302  002706                     l5757:
  6303                           
  6304                           ; BSR set to: 1
  6305  002706  C0E0  F0E4         	movff	___fltol@f1,??___fltol
  6306  00270A  C0E1  F0E5         	movff	___fltol@f1+1,??___fltol+1
  6307  00270E  C0E2  F0E6         	movff	___fltol@f1+2,??___fltol+2
  6308  002712  C0E3  F0E7         	movff	___fltol@f1+3,??___fltol+3
  6309  002716  0E20               	movlw	32
  6310  002718  EF94  F013         	goto	u4380
  6311  00271C                     u4385:
  6312  00271C  0100               	movlb	0	; () banked
  6313  00271E  90D8               	bcf	status,0,c
  6314  002720  33E7               	rrcf	(??___fltol+3)& (0+255),f,b
  6315  002722  33E6               	rrcf	(??___fltol+2)& (0+255),f,b
  6316  002724  33E5               	rrcf	(??___fltol+1)& (0+255),f,b
  6317  002726  33E4               	rrcf	??___fltol& (0+255),f,b
  6318  002728                     u4380:
  6319  002728  2EE8               	decfsz	wreg,f,c
  6320  00272A  EF8E  F013         	goto	u4385
  6321  00272E  51E4               	movf	??___fltol& (0+255),w,b
  6322  002730  0101               	movlb	1	; () banked
  6323  002732  6F00               	movwf	___fltol@sign1& (0+255),b
  6324  002734                     
  6325                           ; BSR set to: 1
  6326  002734  0100               	movlb	0	; () banked
  6327  002736  8FE2               	bsf	(___fltol@f1+2)& (0+255),7,b
  6328  002738                     
  6329                           ; BSR set to: 0
  6330  002738  0EFF               	movlw	255
  6331  00273A  17E0               	andwf	___fltol@f1& (0+255),f,b
  6332  00273C  0EFF               	movlw	255
  6333  00273E  17E1               	andwf	(___fltol@f1+1)& (0+255),f,b
  6334  002740  0EFF               	movlw	255
  6335  002742  17E2               	andwf	(___fltol@f1+2)& (0+255),f,b
  6336  002744  0E00               	movlw	0
  6337  002746  17E3               	andwf	(___fltol@f1+3)& (0+255),f,b
  6338  002748                     
  6339                           ; BSR set to: 0
  6340  002748  0E96               	movlw	150
  6341  00274A  0101               	movlb	1	; () banked
  6342  00274C  5F01               	subwf	___fltol@exp1& (0+255),f,b
  6343  00274E                     
  6344                           ; BSR set to: 1
  6345  00274E  BF01               	btfsc	___fltol@exp1& (0+255),7,b
  6346  002750  EFAE  F013         	goto	u4390
  6347  002754  EFAC  F013         	goto	u4391
  6348  002758                     u4391:
  6349  002758  EFC6  F013         	goto	l5777
  6350  00275C                     u4390:
  6351  00275C                     
  6352                           ; BSR set to: 1
  6353  00275C  5101               	movf	___fltol@exp1& (0+255),w,b
  6354  00275E  0A80               	xorlw	128
  6355  002760  0F97               	addlw	151
  6356  002762  B0D8               	btfsc	status,0,c
  6357  002764  EFB6  F013         	goto	u4401
  6358  002768  EFB8  F013         	goto	u4400
  6359  00276C                     u4401:
  6360  00276C  EFBA  F013         	goto	l5773
  6361  002770                     u4400:
  6362  002770  EF78  F013         	goto	l5753
  6363  002774                     l5773:
  6364                           
  6365                           ; BSR set to: 1
  6366  002774  0100               	movlb	0	; () banked
  6367  002776  90D8               	bcf	status,0,c
  6368  002778  33E3               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6369  00277A  33E2               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6370  00277C  33E1               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6371  00277E  33E0               	rrcf	___fltol@f1& (0+255),f,b
  6372  002780                     
  6373                           ; BSR set to: 0
  6374  002780  0101               	movlb	1	; () banked
  6375  002782  3F01               	incfsz	___fltol@exp1& (0+255),f,b
  6376  002784  EFBA  F013         	goto	l5773
  6377  002788  EFE0  F013         	goto	l5787
  6378  00278C                     l5777:
  6379                           
  6380                           ; BSR set to: 1
  6381  00278C  0E1F               	movlw	31
  6382  00278E  6501               	cpfsgt	___fltol@exp1& (0+255),b
  6383  002790  EFCC  F013         	goto	u4411
  6384  002794  EFCE  F013         	goto	u4410
  6385  002798                     u4411:
  6386  002798  EFD8  F013         	goto	l5785
  6387  00279C                     u4410:
  6388  00279C  EF78  F013         	goto	l5753
  6389  0027A0                     l5783:
  6390                           
  6391                           ; BSR set to: 1
  6392  0027A0  0100               	movlb	0	; () banked
  6393  0027A2  90D8               	bcf	status,0,c
  6394  0027A4  37E0               	rlcf	___fltol@f1& (0+255),f,b
  6395  0027A6  37E1               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6396  0027A8  37E2               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6397  0027AA  37E3               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6398  0027AC  0101               	movlb	1	; () banked
  6399  0027AE  0701               	decf	___fltol@exp1& (0+255),f,b
  6400  0027B0                     l5785:
  6401                           
  6402                           ; BSR set to: 1
  6403  0027B0  5101               	movf	___fltol@exp1& (0+255),w,b
  6404  0027B2  A4D8               	btfss	status,2,c
  6405  0027B4  EFDE  F013         	goto	u4421
  6406  0027B8  EFE0  F013         	goto	u4420
  6407  0027BC                     u4421:
  6408  0027BC  EFD0  F013         	goto	l5783
  6409  0027C0                     u4420:
  6410  0027C0                     l5787:
  6411                           
  6412                           ; BSR set to: 1
  6413  0027C0  5100               	movf	___fltol@sign1& (0+255),w,b
  6414  0027C2  B4D8               	btfsc	status,2,c
  6415  0027C4  EFE6  F013         	goto	u4431
  6416  0027C8  EFE8  F013         	goto	u4430
  6417  0027CC                     u4431:
  6418  0027CC  EFF1  F013         	goto	l5791
  6419  0027D0                     u4430:
  6420  0027D0                     
  6421                           ; BSR set to: 1
  6422  0027D0  0100               	movlb	0	; () banked
  6423  0027D2  1FE3               	comf	(___fltol@f1+3)& (0+255),f,b
  6424  0027D4  1FE2               	comf	(___fltol@f1+2)& (0+255),f,b
  6425  0027D6  1FE1               	comf	(___fltol@f1+1)& (0+255),f,b
  6426  0027D8  6DE0               	negf	___fltol@f1& (0+255),b
  6427  0027DA  0E00               	movlw	0
  6428  0027DC  23E1               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6429  0027DE  23E2               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6430  0027E0  23E3               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6431  0027E2                     l5791:
  6432  0027E2  C0E0  F0E0         	movff	___fltol@f1,?___fltol
  6433  0027E6  C0E1  F0E1         	movff	___fltol@f1+1,?___fltol+1
  6434  0027EA  C0E2  F0E2         	movff	___fltol@f1+2,?___fltol+2
  6435  0027EE  C0E3  F0E3         	movff	___fltol@f1+3,?___fltol+3
  6436  0027F2                     l1695:
  6437  0027F2  0012               	return		;funcret
  6438  0027F4                     __end_of___fltol:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function ___flmul *****************
  6442 ;; Defined at:
  6443 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  b               4   41[COMRAM] long 
  6446 ;;  a               4   45[COMRAM] long 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  prod            4    7[BANK0 ] struct .
  6449 ;;  grs             4    2[BANK0 ] unsigned long 
  6450 ;;  temp            2   11[BANK0 ] struct .
  6451 ;;  bexp            1    6[BANK0 ] unsigned char 
  6452 ;;  aexp            1    1[BANK0 ] unsigned char 
  6453 ;;  sign            1    0[BANK0 ] unsigned char 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  4   41[COMRAM] unsigned char 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, prodl, prodh
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6463 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;Total ram usage:       25 bytes
  6468 ;; Hardware stack levels used: 1
  6469 ;; Hardware stack levels required when called: 8
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_startAccell
  6474 ;;		_calcSteering
  6475 ;;		_calcSpeed
  6476 ;;		_calcMotorPow
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text29
  6481  0014D0                     __ptext29:
  6482                           	callstack 0
  6483  0014D0                     ___flmul:
  6484                           	callstack 19
  6485  0014D0  502D               	movf	(___flmul@b+3)^0,w,c
  6486  0014D2  0B80               	andlw	128
  6487  0014D4  0100               	movlb	0	; () banked
  6488  0014D6  6FC7               	movwf	___flmul@sign& (0+255),b
  6489  0014D8  502D               	movf	(___flmul@b+3)^0,w,c
  6490  0014DA  242D               	addwf	(___flmul@b+3)^0,w,c
  6491  0014DC  6FCD               	movwf	___flmul@bexp& (0+255),b
  6492  0014DE                     
  6493                           ; BSR set to: 0
  6494  0014DE  AE2C               	btfss	(___flmul@b+2)^0,7,c
  6495  0014E0  EF74  F00A         	goto	u4181
  6496  0014E4  EF76  F00A         	goto	u4180
  6497  0014E8                     u4181:
  6498  0014E8  EF77  F00A         	goto	l5627
  6499  0014EC                     u4180:
  6500  0014EC                     
  6501                           ; BSR set to: 0
  6502  0014EC  81CD               	bsf	___flmul@bexp& (0+255),0,b
  6503  0014EE                     l5627:
  6504                           
  6505                           ; BSR set to: 0
  6506  0014EE  51CD               	movf	___flmul@bexp& (0+255),w,b
  6507  0014F0  B4D8               	btfsc	status,2,c
  6508  0014F2  EF7D  F00A         	goto	u4191
  6509  0014F6  EF7F  F00A         	goto	u4190
  6510  0014FA                     u4191:
  6511  0014FA  EF92  F00A         	goto	l5635
  6512  0014FE                     u4190:
  6513  0014FE                     
  6514                           ; BSR set to: 0
  6515  0014FE  29CD               	incf	___flmul@bexp& (0+255),w,b
  6516  001500  A4D8               	btfss	status,2,c
  6517  001502  EF85  F00A         	goto	u4201
  6518  001506  EF87  F00A         	goto	u4200
  6519  00150A                     u4201:
  6520  00150A  EF8F  F00A         	goto	l5633
  6521  00150E                     u4200:
  6522  00150E                     
  6523                           ; BSR set to: 0
  6524  00150E  0E00               	movlw	0
  6525  001510  6E2A               	movwf	___flmul@b^0,c
  6526  001512  0E00               	movlw	0
  6527  001514  6E2B               	movwf	(___flmul@b+1)^0,c
  6528  001516  0E00               	movlw	0
  6529  001518  6E2C               	movwf	(___flmul@b+2)^0,c
  6530  00151A  0E00               	movlw	0
  6531  00151C  6E2D               	movwf	(___flmul@b+3)^0,c
  6532  00151E                     l5633:
  6533                           
  6534                           ; BSR set to: 0
  6535  00151E  8E2C               	bsf	(___flmul@b+2)^0,7,c
  6536  001520  EF9A  F00A         	goto	l5637
  6537  001524                     l5635:
  6538                           
  6539                           ; BSR set to: 0
  6540  001524  0E00               	movlw	0
  6541  001526  6E2A               	movwf	___flmul@b^0,c
  6542  001528  0E00               	movlw	0
  6543  00152A  6E2B               	movwf	(___flmul@b+1)^0,c
  6544  00152C  0E00               	movlw	0
  6545  00152E  6E2C               	movwf	(___flmul@b+2)^0,c
  6546  001530  0E00               	movlw	0
  6547  001532  6E2D               	movwf	(___flmul@b+3)^0,c
  6548  001534                     l5637:
  6549                           
  6550                           ; BSR set to: 0
  6551  001534  5031               	movf	(___flmul@a+3)^0,w,c
  6552  001536  0B80               	andlw	128
  6553  001538  1BC7               	xorwf	___flmul@sign& (0+255),f,b
  6554  00153A                     
  6555                           ; BSR set to: 0
  6556  00153A  5031               	movf	(___flmul@a+3)^0,w,c
  6557  00153C  2431               	addwf	(___flmul@a+3)^0,w,c
  6558  00153E  6FC8               	movwf	___flmul@aexp& (0+255),b
  6559  001540                     
  6560                           ; BSR set to: 0
  6561  001540  AE30               	btfss	(___flmul@a+2)^0,7,c
  6562  001542  EFA5  F00A         	goto	u4211
  6563  001546  EFA7  F00A         	goto	u4210
  6564  00154A                     u4211:
  6565  00154A  EFA8  F00A         	goto	l5645
  6566  00154E                     u4210:
  6567  00154E                     
  6568                           ; BSR set to: 0
  6569  00154E  81C8               	bsf	___flmul@aexp& (0+255),0,b
  6570  001550                     l5645:
  6571                           
  6572                           ; BSR set to: 0
  6573  001550  51C8               	movf	___flmul@aexp& (0+255),w,b
  6574  001552  B4D8               	btfsc	status,2,c
  6575  001554  EFAE  F00A         	goto	u4221
  6576  001558  EFB0  F00A         	goto	u4220
  6577  00155C                     u4221:
  6578  00155C  EFC3  F00A         	goto	l5653
  6579  001560                     u4220:
  6580  001560                     
  6581                           ; BSR set to: 0
  6582  001560  29C8               	incf	___flmul@aexp& (0+255),w,b
  6583  001562  A4D8               	btfss	status,2,c
  6584  001564  EFB6  F00A         	goto	u4231
  6585  001568  EFB8  F00A         	goto	u4230
  6586  00156C                     u4231:
  6587  00156C  EFC0  F00A         	goto	l5651
  6588  001570                     u4230:
  6589  001570                     
  6590                           ; BSR set to: 0
  6591  001570  0E00               	movlw	0
  6592  001572  6E2E               	movwf	___flmul@a^0,c
  6593  001574  0E00               	movlw	0
  6594  001576  6E2F               	movwf	(___flmul@a+1)^0,c
  6595  001578  0E00               	movlw	0
  6596  00157A  6E30               	movwf	(___flmul@a+2)^0,c
  6597  00157C  0E00               	movlw	0
  6598  00157E  6E31               	movwf	(___flmul@a+3)^0,c
  6599  001580                     l5651:
  6600                           
  6601                           ; BSR set to: 0
  6602  001580  8E30               	bsf	(___flmul@a+2)^0,7,c
  6603  001582  EFCB  F00A         	goto	l2012
  6604  001586                     l5653:
  6605                           
  6606                           ; BSR set to: 0
  6607  001586  0E00               	movlw	0
  6608  001588  6E2E               	movwf	___flmul@a^0,c
  6609  00158A  0E00               	movlw	0
  6610  00158C  6E2F               	movwf	(___flmul@a+1)^0,c
  6611  00158E  0E00               	movlw	0
  6612  001590  6E30               	movwf	(___flmul@a+2)^0,c
  6613  001592  0E00               	movlw	0
  6614  001594  6E31               	movwf	(___flmul@a+3)^0,c
  6615  001596                     l2012:
  6616                           
  6617                           ; BSR set to: 0
  6618  001596  51C8               	movf	___flmul@aexp& (0+255),w,b
  6619  001598  B4D8               	btfsc	status,2,c
  6620  00159A  EFD1  F00A         	goto	u4241
  6621  00159E  EFD3  F00A         	goto	u4240
  6622  0015A2                     u4241:
  6623  0015A2  EFDB  F00A         	goto	l5657
  6624  0015A6                     u4240:
  6625  0015A6                     
  6626                           ; BSR set to: 0
  6627  0015A6  51CD               	movf	___flmul@bexp& (0+255),w,b
  6628  0015A8  A4D8               	btfss	status,2,c
  6629  0015AA  EFD9  F00A         	goto	u4251
  6630  0015AE  EFDB  F00A         	goto	u4250
  6631  0015B2                     u4251:
  6632  0015B2  EFE5  F00A         	goto	l5661
  6633  0015B6                     u4250:
  6634  0015B6                     l5657:
  6635                           
  6636                           ; BSR set to: 0
  6637  0015B6  0E00               	movlw	0
  6638  0015B8  6E2A               	movwf	?___flmul^0,c
  6639  0015BA  0E00               	movlw	0
  6640  0015BC  6E2B               	movwf	(?___flmul+1)^0,c
  6641  0015BE  0E00               	movlw	0
  6642  0015C0  6E2C               	movwf	(?___flmul+2)^0,c
  6643  0015C2  0E00               	movlw	0
  6644  0015C4  6E2D               	movwf	(?___flmul+3)^0,c
  6645  0015C6  EF8F  F00C         	goto	l2016
  6646  0015CA                     l5661:
  6647                           
  6648                           ; BSR set to: 0
  6649  0015CA  5030               	movf	(___flmul@a+2)^0,w,c
  6650  0015CC  022A               	mulwf	___flmul@b^0,c
  6651  0015CE  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6652  0015D4  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6653  0015DA                     
  6654                           ; BSR set to: 0
  6655  0015DA  51D2               	movf	___flmul@temp& (0+255),w,b
  6656  0015DC  6FC9               	movwf	___flmul@grs& (0+255),b
  6657  0015DE  6BCA               	clrf	(___flmul@grs+1)& (0+255),b
  6658  0015E0  6BCB               	clrf	(___flmul@grs+2)& (0+255),b
  6659  0015E2  6BCC               	clrf	(___flmul@grs+3)& (0+255),b
  6660  0015E4                     
  6661                           ; BSR set to: 0
  6662  0015E4  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6663  0015E6  6FCE               	movwf	___flmul@prod& (0+255),b
  6664  0015E8  6BCF               	clrf	(___flmul@prod+1)& (0+255),b
  6665  0015EA  6BD0               	clrf	(___flmul@prod+2)& (0+255),b
  6666  0015EC  6BD1               	clrf	(___flmul@prod+3)& (0+255),b
  6667  0015EE  502F               	movf	(___flmul@a+1)^0,w,c
  6668  0015F0  022B               	mulwf	(___flmul@b+1)^0,c
  6669  0015F2  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6670  0015F8  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6671  0015FE                     
  6672                           ; BSR set to: 0
  6673  0015FE  51D2               	movf	___flmul@temp& (0+255),w,b
  6674  001600  27C9               	addwf	___flmul@grs& (0+255),f,b
  6675  001602  0E00               	movlw	0
  6676  001604  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6677  001606  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6678  001608  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6679  00160A                     
  6680                           ; BSR set to: 0
  6681  00160A  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6682  00160C  27CE               	addwf	___flmul@prod& (0+255),f,b
  6683  00160E  0E00               	movlw	0
  6684  001610  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6685  001612  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6686  001614  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6687  001616  502E               	movf	___flmul@a^0,w,c
  6688  001618  022C               	mulwf	(___flmul@b+2)^0,c
  6689  00161A  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6690  001620  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6691  001626                     
  6692                           ; BSR set to: 0
  6693  001626  51D2               	movf	___flmul@temp& (0+255),w,b
  6694  001628  27C9               	addwf	___flmul@grs& (0+255),f,b
  6695  00162A  0E00               	movlw	0
  6696  00162C  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6697  00162E  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6698  001630  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6699  001632                     
  6700                           ; BSR set to: 0
  6701  001632  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6702  001634  27CE               	addwf	___flmul@prod& (0+255),f,b
  6703  001636  0E00               	movlw	0
  6704  001638  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6705  00163A  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6706  00163C  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6707  00163E                     
  6708                           ; BSR set to: 0
  6709  00163E  C0CB  F0CC         	movff	___flmul@grs+2,___flmul@grs+3
  6710  001642  C0CA  F0CB         	movff	___flmul@grs+1,___flmul@grs+2
  6711  001646  C0C9  F0CA         	movff	___flmul@grs,___flmul@grs+1
  6712  00164A  6BC9               	clrf	___flmul@grs& (0+255),b
  6713  00164C                     
  6714                           ; BSR set to: 0
  6715  00164C  502E               	movf	___flmul@a^0,w,c
  6716  00164E  022B               	mulwf	(___flmul@b+1)^0,c
  6717  001650  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6718  001656  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6719  00165C                     
  6720                           ; BSR set to: 0
  6721  00165C  51D2               	movf	___flmul@temp& (0+255),w,b
  6722  00165E  27C9               	addwf	___flmul@grs& (0+255),f,b
  6723  001660  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6724  001662  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6725  001664  0E00               	movlw	0
  6726  001666  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6727  001668  0E00               	movlw	0
  6728  00166A  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6729  00166C                     
  6730                           ; BSR set to: 0
  6731  00166C  502F               	movf	(___flmul@a+1)^0,w,c
  6732  00166E  022A               	mulwf	___flmul@b^0,c
  6733  001670  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6734  001676  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6735  00167C                     
  6736                           ; BSR set to: 0
  6737  00167C  51D2               	movf	___flmul@temp& (0+255),w,b
  6738  00167E  27C9               	addwf	___flmul@grs& (0+255),f,b
  6739  001680  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6740  001682  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6741  001684  0E00               	movlw	0
  6742  001686  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6743  001688  0E00               	movlw	0
  6744  00168A  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6745  00168C                     
  6746                           ; BSR set to: 0
  6747  00168C  C0CB  F0CC         	movff	___flmul@grs+2,___flmul@grs+3
  6748  001690  C0CA  F0CB         	movff	___flmul@grs+1,___flmul@grs+2
  6749  001694  C0C9  F0CA         	movff	___flmul@grs,___flmul@grs+1
  6750  001698  6BC9               	clrf	___flmul@grs& (0+255),b
  6751  00169A  502E               	movf	___flmul@a^0,w,c
  6752  00169C  022A               	mulwf	___flmul@b^0,c
  6753  00169E  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6754  0016A4  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6755  0016AA                     
  6756                           ; BSR set to: 0
  6757  0016AA  51D2               	movf	___flmul@temp& (0+255),w,b
  6758  0016AC  27C9               	addwf	___flmul@grs& (0+255),f,b
  6759  0016AE  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6760  0016B0  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6761  0016B2  0E00               	movlw	0
  6762  0016B4  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6763  0016B6  0E00               	movlw	0
  6764  0016B8  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6765  0016BA                     
  6766                           ; BSR set to: 0
  6767  0016BA  5030               	movf	(___flmul@a+2)^0,w,c
  6768  0016BC  022B               	mulwf	(___flmul@b+1)^0,c
  6769  0016BE  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6770  0016C4  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6771  0016CA  51D2               	movf	___flmul@temp& (0+255),w,b
  6772  0016CC  27CE               	addwf	___flmul@prod& (0+255),f,b
  6773  0016CE  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6774  0016D0  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6775  0016D2  0E00               	movlw	0
  6776  0016D4  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6777  0016D6  0E00               	movlw	0
  6778  0016D8  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6779  0016DA                     
  6780                           ; BSR set to: 0
  6781  0016DA  502F               	movf	(___flmul@a+1)^0,w,c
  6782  0016DC  022C               	mulwf	(___flmul@b+2)^0,c
  6783  0016DE  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6784  0016E4  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6785  0016EA                     
  6786                           ; BSR set to: 0
  6787  0016EA  51D2               	movf	___flmul@temp& (0+255),w,b
  6788  0016EC  27CE               	addwf	___flmul@prod& (0+255),f,b
  6789  0016EE  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6790  0016F0  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6791  0016F2  0E00               	movlw	0
  6792  0016F4  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6793  0016F6  0E00               	movlw	0
  6794  0016F8  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6795  0016FA  5030               	movf	(___flmul@a+2)^0,w,c
  6796  0016FC  022C               	mulwf	(___flmul@b+2)^0,c
  6797  0016FE  006F FFCC  F0D2    	movff	prodl,___flmul@temp
  6798  001704  006F FFD0  F0D3    	movff	prodh,___flmul@temp+1
  6799  00170A                     
  6800                           ; BSR set to: 0
  6801  00170A  51D2               	movf	___flmul@temp& (0+255),w,b
  6802  00170C  6E32               	movwf	??___flmul^0,c
  6803  00170E  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  6804  001710  6E33               	movwf	(??___flmul+1)^0,c
  6805  001712  6A34               	clrf	(??___flmul+2)^0,c
  6806  001714  6A35               	clrf	(??___flmul+3)^0,c
  6807  001716  C034  F035         	movff	??___flmul+2,??___flmul+3
  6808  00171A  C033  F034         	movff	??___flmul+1,??___flmul+2
  6809  00171E  C032  F033         	movff	??___flmul,??___flmul+1
  6810  001722  6A32               	clrf	??___flmul^0,c
  6811  001724  5032               	movf	??___flmul^0,w,c
  6812  001726  27CE               	addwf	___flmul@prod& (0+255),f,b
  6813  001728  5033               	movf	(??___flmul+1)^0,w,c
  6814  00172A  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6815  00172C  5034               	movf	(??___flmul+2)^0,w,c
  6816  00172E  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6817  001730  5035               	movf	(??___flmul+3)^0,w,c
  6818  001732  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6819  001734                     
  6820                           ; BSR set to: 0
  6821  001734  C0C9  F032         	movff	___flmul@grs,??___flmul
  6822  001738  C0CA  F033         	movff	___flmul@grs+1,??___flmul+1
  6823  00173C  C0CB  F034         	movff	___flmul@grs+2,??___flmul+2
  6824  001740  C0CC  F035         	movff	___flmul@grs+3,??___flmul+3
  6825  001744  0E19               	movlw	25
  6826  001746  EFAA  F00B         	goto	u4260
  6827  00174A                     u4265:
  6828  00174A  90D8               	bcf	status,0,c
  6829  00174C  3235               	rrcf	(??___flmul+3)^0,f,c
  6830  00174E  3234               	rrcf	(??___flmul+2)^0,f,c
  6831  001750  3233               	rrcf	(??___flmul+1)^0,f,c
  6832  001752  3232               	rrcf	??___flmul^0,f,c
  6833  001754                     u4260:
  6834  001754  2EE8               	decfsz	wreg,f,c
  6835  001756  EFA5  F00B         	goto	u4265
  6836  00175A  5032               	movf	??___flmul^0,w,c
  6837  00175C  27CE               	addwf	___flmul@prod& (0+255),f,b
  6838  00175E  5033               	movf	(??___flmul+1)^0,w,c
  6839  001760  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6840  001762  5034               	movf	(??___flmul+2)^0,w,c
  6841  001764  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6842  001766  5035               	movf	(??___flmul+3)^0,w,c
  6843  001768  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6844  00176A                     
  6845                           ; BSR set to: 0
  6846  00176A  C0CB  F0CC         	movff	___flmul@grs+2,___flmul@grs+3
  6847  00176E  C0CA  F0CB         	movff	___flmul@grs+1,___flmul@grs+2
  6848  001772  C0C9  F0CA         	movff	___flmul@grs,___flmul@grs+1
  6849  001776  6BC9               	clrf	___flmul@grs& (0+255),b
  6850  001778                     
  6851                           ; BSR set to: 0
  6852  001778  51C8               	movf	___flmul@aexp& (0+255),w,b
  6853  00177A  C0CD  F032         	movff	___flmul@bexp,??___flmul
  6854  00177E  6A33               	clrf	(??___flmul+1)^0,c
  6855  001780  2632               	addwf	??___flmul^0,f,c
  6856  001782  0E00               	movlw	0
  6857  001784  2233               	addwfc	(??___flmul+1)^0,f,c
  6858  001786  0E82               	movlw	130
  6859  001788  2432               	addwf	??___flmul^0,w,c
  6860  00178A  6FD2               	movwf	___flmul@temp& (0+255),b
  6861  00178C  0EFF               	movlw	255
  6862  00178E  2033               	addwfc	(??___flmul+1)^0,w,c
  6863  001790  6FD3               	movwf	(___flmul@temp+1)& (0+255),b
  6864  001792  EFE0  F00B         	goto	l5709
  6865  001796                     l5703:
  6866                           
  6867                           ; BSR set to: 0
  6868  001796  90D8               	bcf	status,0,c
  6869  001798  37CE               	rlcf	___flmul@prod& (0+255),f,b
  6870  00179A  37CF               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6871  00179C  37D0               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6872  00179E  37D1               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6873  0017A0                     
  6874                           ; BSR set to: 0
  6875  0017A0  AFCC               	btfss	(___flmul@grs+3)& (0+255),7,b
  6876  0017A2  EFD5  F00B         	goto	u4271
  6877  0017A6  EFD7  F00B         	goto	u4270
  6878  0017AA                     u4271:
  6879  0017AA  EFD8  F00B         	goto	l2019
  6880  0017AE                     u4270:
  6881  0017AE                     
  6882                           ; BSR set to: 0
  6883  0017AE  81CE               	bsf	___flmul@prod& (0+255),0,b
  6884  0017B0                     l2019:
  6885                           
  6886                           ; BSR set to: 0
  6887  0017B0  90D8               	bcf	status,0,c
  6888  0017B2  37C9               	rlcf	___flmul@grs& (0+255),f,b
  6889  0017B4  37CA               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6890  0017B6  37CB               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6891  0017B8  37CC               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6892  0017BA  07D2               	decf	___flmul@temp& (0+255),f,b
  6893  0017BC  A0D8               	btfss	status,0,c
  6894  0017BE  07D3               	decf	(___flmul@temp+1)& (0+255),f,b
  6895  0017C0                     l5709:
  6896                           
  6897                           ; BSR set to: 0
  6898  0017C0  AFD0               	btfss	(___flmul@prod+2)& (0+255),7,b
  6899  0017C2  EFE5  F00B         	goto	u4281
  6900  0017C6  EFE7  F00B         	goto	u4280
  6901  0017CA                     u4281:
  6902  0017CA  EFCB  F00B         	goto	l5703
  6903  0017CE                     u4280:
  6904  0017CE                     
  6905                           ; BSR set to: 0
  6906  0017CE  0E00               	movlw	0
  6907  0017D0  6FC8               	movwf	___flmul@aexp& (0+255),b
  6908  0017D2                     
  6909                           ; BSR set to: 0
  6910  0017D2  AFCC               	btfss	(___flmul@grs+3)& (0+255),7,b
  6911  0017D4  EFEE  F00B         	goto	u4291
  6912  0017D8  EFF0  F00B         	goto	u4290
  6913  0017DC                     u4291:
  6914  0017DC  EF14  F00C         	goto	l2021
  6915  0017E0                     u4290:
  6916  0017E0                     
  6917                           ; BSR set to: 0
  6918  0017E0  0EFF               	movlw	255
  6919  0017E2  15C9               	andwf	___flmul@grs& (0+255),w,b
  6920  0017E4  6E32               	movwf	??___flmul^0,c
  6921  0017E6  0EFF               	movlw	255
  6922  0017E8  15CA               	andwf	(___flmul@grs+1)& (0+255),w,b
  6923  0017EA  6E33               	movwf	(??___flmul+1)^0,c
  6924  0017EC  0EFF               	movlw	255
  6925  0017EE  15CB               	andwf	(___flmul@grs+2)& (0+255),w,b
  6926  0017F0  6E34               	movwf	(??___flmul+2)^0,c
  6927  0017F2  0E7F               	movlw	127
  6928  0017F4  15CC               	andwf	(___flmul@grs+3)& (0+255),w,b
  6929  0017F6  6E35               	movwf	(??___flmul+3)^0,c
  6930  0017F8  5032               	movf	??___flmul^0,w,c
  6931  0017FA  1033               	iorwf	(??___flmul+1)^0,w,c
  6932  0017FC  1034               	iorwf	(??___flmul+2)^0,w,c
  6933  0017FE  1035               	iorwf	(??___flmul+3)^0,w,c
  6934  001800  B4D8               	btfsc	status,2,c
  6935  001802  EF05  F00C         	goto	u4301
  6936  001806  EF07  F00C         	goto	u4300
  6937  00180A                     u4301:
  6938  00180A  EF0B  F00C         	goto	l2022
  6939  00180E                     u4300:
  6940  00180E                     l5717:
  6941                           
  6942                           ; BSR set to: 0
  6943  00180E  0E01               	movlw	1
  6944  001810  6FC8               	movwf	___flmul@aexp& (0+255),b
  6945  001812  EF14  F00C         	goto	l2021
  6946  001816                     l2022:
  6947                           
  6948                           ; BSR set to: 0
  6949  001816  A1CE               	btfss	___flmul@prod& (0+255),0,b
  6950  001818  EF10  F00C         	goto	u4311
  6951  00181C  EF12  F00C         	goto	u4310
  6952  001820                     u4311:
  6953  001820  EF14  F00C         	goto	l2021
  6954  001824                     u4310:
  6955  001824  EF07  F00C         	goto	l5717
  6956  001828                     l2021:
  6957                           
  6958                           ; BSR set to: 0
  6959  001828  51C8               	movf	___flmul@aexp& (0+255),w,b
  6960  00182A  B4D8               	btfsc	status,2,c
  6961  00182C  EF1A  F00C         	goto	u4321
  6962  001830  EF1C  F00C         	goto	u4320
  6963  001834                     u4321:
  6964  001834  EF40  F00C         	goto	l5729
  6965  001838                     u4320:
  6966  001838                     
  6967                           ; BSR set to: 0
  6968  001838  0E01               	movlw	1
  6969  00183A  27CE               	addwf	___flmul@prod& (0+255),f,b
  6970  00183C  0E00               	movlw	0
  6971  00183E  23CF               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6972  001840  23D0               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6973  001842  23D1               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6974  001844                     
  6975                           ; BSR set to: 0
  6976  001844  A1D1               	btfss	(___flmul@prod+3)& (0+255),0,b
  6977  001846  EF27  F00C         	goto	u4331
  6978  00184A  EF29  F00C         	goto	u4330
  6979  00184E                     u4331:
  6980  00184E  EF40  F00C         	goto	l5729
  6981  001852                     u4330:
  6982  001852                     
  6983                           ; BSR set to: 0
  6984  001852  C0CE  F032         	movff	___flmul@prod,??___flmul
  6985  001856  C0CF  F033         	movff	___flmul@prod+1,??___flmul+1
  6986  00185A  C0D0  F034         	movff	___flmul@prod+2,??___flmul+2
  6987  00185E  C0D1  F035         	movff	___flmul@prod+3,??___flmul+3
  6988  001862  3435               	rlcf	(??___flmul+3)^0,w,c
  6989  001864  3235               	rrcf	(??___flmul+3)^0,f,c
  6990  001866  3234               	rrcf	(??___flmul+2)^0,f,c
  6991  001868  3233               	rrcf	(??___flmul+1)^0,f,c
  6992  00186A  3232               	rrcf	??___flmul^0,f,c
  6993  00186C  C032  F0CE         	movff	??___flmul,___flmul@prod
  6994  001870  C033  F0CF         	movff	??___flmul+1,___flmul@prod+1
  6995  001874  C034  F0D0         	movff	??___flmul+2,___flmul@prod+2
  6996  001878  C035  F0D1         	movff	??___flmul+3,___flmul@prod+3
  6997  00187C                     
  6998                           ; BSR set to: 0
  6999  00187C  4BD2               	infsnz	___flmul@temp& (0+255),f,b
  7000  00187E  2BD3               	incf	(___flmul@temp+1)& (0+255),f,b
  7001  001880                     l5729:
  7002                           
  7003                           ; BSR set to: 0
  7004  001880  BFD3               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7005  001882  EF4B  F00C         	goto	u4341
  7006  001886  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  7007  001888  E108               	bnz	u4340
  7008  00188A  29D2               	incf	___flmul@temp& (0+255),w,b
  7009  00188C  A0D8               	btfss	status,0,c
  7010  00188E  EF4B  F00C         	goto	u4341
  7011  001892  EF4D  F00C         	goto	u4340
  7012  001896                     u4341:
  7013  001896  EF57  F00C         	goto	l5733
  7014  00189A                     u4340:
  7015  00189A                     
  7016                           ; BSR set to: 0
  7017  00189A  0E00               	movlw	0
  7018  00189C  6FCE               	movwf	___flmul@prod& (0+255),b
  7019  00189E  0E00               	movlw	0
  7020  0018A0  6FCF               	movwf	(___flmul@prod+1)& (0+255),b
  7021  0018A2  0E80               	movlw	128
  7022  0018A4  6FD0               	movwf	(___flmul@prod+2)& (0+255),b
  7023  0018A6  0E7F               	movlw	127
  7024  0018A8  6FD1               	movwf	(___flmul@prod+3)& (0+255),b
  7025  0018AA  EF85  F00C         	goto	l5745
  7026  0018AE                     l5733:
  7027                           
  7028                           ; BSR set to: 0
  7029  0018AE  BFD3               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7030  0018B0  EF64  F00C         	goto	u4350
  7031  0018B4  51D3               	movf	(___flmul@temp+1)& (0+255),w,b
  7032  0018B6  E106               	bnz	u4351
  7033  0018B8  05D2               	decf	___flmul@temp& (0+255),w,b
  7034  0018BA  B0D8               	btfsc	status,0,c
  7035  0018BC  EF62  F00C         	goto	u4351
  7036  0018C0  EF64  F00C         	goto	u4350
  7037  0018C4                     u4351:
  7038  0018C4  EF70  F00C         	goto	l2029
  7039  0018C8                     u4350:
  7040  0018C8                     
  7041                           ; BSR set to: 0
  7042  0018C8  0E00               	movlw	0
  7043  0018CA  6FCE               	movwf	___flmul@prod& (0+255),b
  7044  0018CC  0E00               	movlw	0
  7045  0018CE  6FCF               	movwf	(___flmul@prod+1)& (0+255),b
  7046  0018D0  0E00               	movlw	0
  7047  0018D2  6FD0               	movwf	(___flmul@prod+2)& (0+255),b
  7048  0018D4  0E00               	movlw	0
  7049  0018D6  6FD1               	movwf	(___flmul@prod+3)& (0+255),b
  7050  0018D8  0E00               	movlw	0
  7051  0018DA  6FC7               	movwf	___flmul@sign& (0+255),b
  7052  0018DC  EF85  F00C         	goto	l5745
  7053  0018E0                     l2029:
  7054                           
  7055                           ; BSR set to: 0
  7056  0018E0  C0D2  F0CD         	movff	___flmul@temp,___flmul@bexp
  7057  0018E4                     
  7058                           ; BSR set to: 0
  7059  0018E4  0EFF               	movlw	255
  7060  0018E6  17CE               	andwf	___flmul@prod& (0+255),f,b
  7061  0018E8  0EFF               	movlw	255
  7062  0018EA  17CF               	andwf	(___flmul@prod+1)& (0+255),f,b
  7063  0018EC  0E7F               	movlw	127
  7064  0018EE  17D0               	andwf	(___flmul@prod+2)& (0+255),f,b
  7065  0018F0  0E00               	movlw	0
  7066  0018F2  17D1               	andwf	(___flmul@prod+3)& (0+255),f,b
  7067  0018F4                     
  7068                           ; BSR set to: 0
  7069  0018F4  A1CD               	btfss	___flmul@bexp& (0+255),0,b
  7070  0018F6  EF7F  F00C         	goto	u4361
  7071  0018FA  EF81  F00C         	goto	u4360
  7072  0018FE                     u4361:
  7073  0018FE  EF82  F00C         	goto	l5743
  7074  001902                     u4360:
  7075  001902                     
  7076                           ; BSR set to: 0
  7077  001902  8FD0               	bsf	(___flmul@prod+2)& (0+255),7,b
  7078  001904                     l5743:
  7079                           
  7080                           ; BSR set to: 0
  7081  001904  90D8               	bcf	status,0,c
  7082  001906  31CD               	rrcf	___flmul@bexp& (0+255),w,b
  7083  001908  6FD1               	movwf	(___flmul@prod+3)& (0+255),b
  7084  00190A                     l5745:
  7085                           
  7086                           ; BSR set to: 0
  7087  00190A  51C7               	movf	___flmul@sign& (0+255),w,b
  7088  00190C  13D1               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7089  00190E                     
  7090                           ; BSR set to: 0
  7091  00190E  C0CE  F02A         	movff	___flmul@prod,?___flmul
  7092  001912  C0CF  F02B         	movff	___flmul@prod+1,?___flmul+1
  7093  001916  C0D0  F02C         	movff	___flmul@prod+2,?___flmul+2
  7094  00191A  C0D1  F02D         	movff	___flmul@prod+3,?___flmul+3
  7095  00191E                     l2016:
  7096                           
  7097                           ; BSR set to: 0
  7098  00191E  0012               	return		;funcret
  7099  001920                     __end_of___flmul:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function ___awdiv *****************
  7103 ;; Defined at:
  7104 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  dividend        2   19[COMRAM] int 
  7107 ;;  divisor         2   21[COMRAM] int 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  quotient        2   25[COMRAM] int 
  7110 ;;  sign            1   24[COMRAM] unsigned char 
  7111 ;;  counter         1   23[COMRAM] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  2   19[COMRAM] int 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;Total ram usage:        8 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 8
  7128 ;; This function calls:
  7129 ;;		Nothing
  7130 ;; This function is called by:
  7131 ;;		_calcSteering
  7132 ;;		_calcMotorPow
  7133 ;;		_setSteering
  7134 ;; This function uses a non-reentrant model
  7135 ;;
  7136                           
  7137                           	psect	text30
  7138  002DC6                     __ptext30:
  7139                           	callstack 0
  7140  002DC6                     ___awdiv:
  7141                           	callstack 19
  7142  002DC6  0E00               	movlw	0
  7143  002DC8  6E19               	movwf	___awdiv@sign^0,c
  7144  002DCA  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  7145  002DCC  EFEC  F016         	goto	u4000
  7146  002DD0  EFEA  F016         	goto	u4001
  7147  002DD4                     u4001:
  7148  002DD4  EFF2  F016         	goto	l5497
  7149  002DD8                     u4000:
  7150  002DD8  6C16               	negf	___awdiv@divisor^0,c
  7151  002DDA  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  7152  002DDC  B0D8               	btfsc	status,0,c
  7153  002DDE  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  7154  002DE0  0E01               	movlw	1
  7155  002DE2  6E19               	movwf	___awdiv@sign^0,c
  7156  002DE4                     l5497:
  7157  002DE4  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  7158  002DE6  EFF9  F016         	goto	u4010
  7159  002DEA  EFF7  F016         	goto	u4011
  7160  002DEE                     u4011:
  7161  002DEE  EFFF  F016         	goto	l5503
  7162  002DF2                     u4010:
  7163  002DF2  6C14               	negf	___awdiv@dividend^0,c
  7164  002DF4  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  7165  002DF6  B0D8               	btfsc	status,0,c
  7166  002DF8  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  7167  002DFA  0E01               	movlw	1
  7168  002DFC  1A19               	xorwf	___awdiv@sign^0,f,c
  7169  002DFE                     l5503:
  7170  002DFE  0E00               	movlw	0
  7171  002E00  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  7172  002E02  0E00               	movlw	0
  7173  002E04  6E1A               	movwf	___awdiv@quotient^0,c
  7174  002E06  5016               	movf	___awdiv@divisor^0,w,c
  7175  002E08  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  7176  002E0A  B4D8               	btfsc	status,2,c
  7177  002E0C  EF0A  F017         	goto	u4021
  7178  002E10  EF0C  F017         	goto	u4020
  7179  002E14                     u4021:
  7180  002E14  EF34  F017         	goto	l5525
  7181  002E18                     u4020:
  7182  002E18  0E01               	movlw	1
  7183  002E1A  6E18               	movwf	___awdiv@counter^0,c
  7184  002E1C  EF14  F017         	goto	l5511
  7185  002E20                     l5509:
  7186  002E20  90D8               	bcf	status,0,c
  7187  002E22  3616               	rlcf	___awdiv@divisor^0,f,c
  7188  002E24  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  7189  002E26  2A18               	incf	___awdiv@counter^0,f,c
  7190  002E28                     l5511:
  7191  002E28  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  7192  002E2A  EF19  F017         	goto	u4031
  7193  002E2E  EF1B  F017         	goto	u4030
  7194  002E32                     u4031:
  7195  002E32  EF10  F017         	goto	l5509
  7196  002E36                     u4030:
  7197  002E36                     l5513:
  7198  002E36  90D8               	bcf	status,0,c
  7199  002E38  361A               	rlcf	___awdiv@quotient^0,f,c
  7200  002E3A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  7201  002E3C  5016               	movf	___awdiv@divisor^0,w,c
  7202  002E3E  5C14               	subwf	___awdiv@dividend^0,w,c
  7203  002E40  5017               	movf	(___awdiv@divisor+1)^0,w,c
  7204  002E42  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  7205  002E44  A0D8               	btfss	status,0,c
  7206  002E46  EF27  F017         	goto	u4041
  7207  002E4A  EF29  F017         	goto	u4040
  7208  002E4E                     u4041:
  7209  002E4E  EF2E  F017         	goto	l5521
  7210  002E52                     u4040:
  7211  002E52  5016               	movf	___awdiv@divisor^0,w,c
  7212  002E54  5E14               	subwf	___awdiv@dividend^0,f,c
  7213  002E56  5017               	movf	(___awdiv@divisor+1)^0,w,c
  7214  002E58  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  7215  002E5A  801A               	bsf	___awdiv@quotient^0,0,c
  7216  002E5C                     l5521:
  7217  002E5C  90D8               	bcf	status,0,c
  7218  002E5E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  7219  002E60  3216               	rrcf	___awdiv@divisor^0,f,c
  7220  002E62  2E18               	decfsz	___awdiv@counter^0,f,c
  7221  002E64  EF1B  F017         	goto	l5513
  7222  002E68                     l5525:
  7223  002E68  5019               	movf	___awdiv@sign^0,w,c
  7224  002E6A  B4D8               	btfsc	status,2,c
  7225  002E6C  EF3A  F017         	goto	u4051
  7226  002E70  EF3C  F017         	goto	u4050
  7227  002E74                     u4051:
  7228  002E74  EF40  F017         	goto	l5529
  7229  002E78                     u4050:
  7230  002E78  6C1A               	negf	___awdiv@quotient^0,c
  7231  002E7A  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  7232  002E7C  B0D8               	btfsc	status,0,c
  7233  002E7E  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  7234  002E80                     l5529:
  7235  002E80  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  7236  002E84  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  7237  002E88  0012               	return		;funcret
  7238  002E8A                     __end_of___awdiv:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function _SYSTEM_Initialize *****************
  7242 ;; Defined at:
  7243 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;		None
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;		None
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;Total ram usage:        0 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; Hardware stack levels required when called: 10
  7264 ;; This function calls:
  7265 ;;		_ADCC_Initialize
  7266 ;;		_CCP3_Initialize
  7267 ;;		_CCP4_Initialize
  7268 ;;		_CLC3_Initialize
  7269 ;;		_INTERRUPT_Initialize
  7270 ;;		_OSCILLATOR_Initialize
  7271 ;;		_PIN_MANAGER_Initialize
  7272 ;;		_PMD_Initialize
  7273 ;;		_PWM5_Initialize
  7274 ;;		_PWM6_Initialize
  7275 ;;		_PWM7_Initialize
  7276 ;;		_PWM8_Initialize
  7277 ;;		_SMT1_Initialize
  7278 ;;		_TMR2_Initialize
  7279 ;;		_TMR3_Initialize
  7280 ;;		_TMR4_Initialize
  7281 ;;		_TMR5_Initialize
  7282 ;;		_UART1_Initialize
  7283 ;; This function is called by:
  7284 ;;		_main
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text31
  7289  003370                     __ptext31:
  7290                           	callstack 0
  7291  003370                     _SYSTEM_Initialize:
  7292                           	callstack 20
  7293  003370                     
  7294                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  7295  003370  EC92  F019         	call	_INTERRUPT_Initialize	;wreg free
  7296                           
  7297                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  7298  003374  ECB9  F01C         	call	_PMD_Initialize	;wreg free
  7299                           
  7300                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7301  003378  EC7E  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  7302                           
  7303                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7304  00337C  EC39  F01D         	call	_OSCILLATOR_Initialize	;wreg free
  7305  003380                     
  7306                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  7307  003380  EC0C  F01C         	call	_CCP3_Initialize	;wreg free
  7308  003384                     
  7309                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  7310  003384  EC3A  F019         	call	_ADCC_Initialize	;wreg free
  7311                           
  7312                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  7313  003388  EC3A  F01C         	call	_TMR4_Initialize	;wreg free
  7314  00338C                     
  7315                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  7316  00338C  ECAD  F01B         	call	_SMT1_Initialize	;wreg free
  7317  003390                     
  7318                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  7319  003390  EC09  F01D         	call	_PWM8_Initialize	;wreg free
  7320  003394                     
  7321                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  7322  003394  ECED  F01C         	call	_TMR2_Initialize	;wreg free
  7323  003398                     
  7324                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  7325  003398  EC21  F01D         	call	_PWM6_Initialize	;wreg free
  7326                           
  7327                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  7328  00339C  ECF5  F01B         	call	_CCP4_Initialize	;wreg free
  7329  0033A0                     
  7330                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  7331  0033A0  EC50  F01C         	call	_CLC3_Initialize	;wreg free
  7332  0033A4                     
  7333                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  7334  0033A4  ECA5  F01A         	call	_TMR3_Initialize	;wreg free
  7335                           
  7336                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  7337  0033A8  EC2D  F01D         	call	_PWM5_Initialize	;wreg free
  7338  0033AC                     
  7339                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  7340  0033AC  ECDD  F019         	call	_TMR5_Initialize	;wreg free
  7341  0033B0                     
  7342                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  7343  0033B0  EC15  F01D         	call	_PWM7_Initialize	;wreg free
  7344                           
  7345                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  7346  0033B4  ECA5  F017         	call	_UART1_Initialize	;wreg free
  7347  0033B8  0012               	return		;funcret
  7348  0033BA                     __end_of_SYSTEM_Initialize:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function _UART1_Initialize *****************
  7352 ;; Defined at:
  7353 ;;		line 87 in file "mcc_generated_files/uart1.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;Total ram usage:        0 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 9
  7374 ;; This function calls:
  7375 ;;		_UART1_SetErrorHandler
  7376 ;;		_UART1_SetFramingErrorHandler
  7377 ;;		_UART1_SetOverrunErrorHandler
  7378 ;;		_UART1_SetRxInterruptHandler
  7379 ;;		_UART1_SetTxInterruptHandler
  7380 ;; This function is called by:
  7381 ;;		_SYSTEM_Initialize
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text32
  7386  002F4A                     __ptext32:
  7387                           	callstack 0
  7388  002F4A                     _UART1_Initialize:
  7389                           	callstack 20
  7390  002F4A                     
  7391                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  7392  002F4A  0139               	movlb	57	; () banked
  7393  002F4C  9793               	bcf	147,3,b	;volatile
  7394  002F4E                     
  7395                           ; BSR set to: 57
  7396                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  7397  002F4E  0E8A               	movlw	low _UART1_Receive_ISR
  7398  002F50  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  7399  002F52  0E2E               	movlw	high _UART1_Receive_ISR
  7400  002F54  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  7401  002F56  EC5E  F01D         	call	_UART1_SetRxInterruptHandler	;wreg free
  7402  002F5A                     
  7403                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  7404  002F5A  0139               	movlb	57	; () banked
  7405  002F5C  9993               	bcf	147,4,b	;volatile
  7406                           
  7407                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  7408  002F5E  0E4E               	movlw	low _UART1_Transmit_ISR
  7409  002F60  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  7410  002F62  0E34               	movlw	high _UART1_Transmit_ISR
  7411  002F64  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  7412  002F66  EC59  F01D         	call	_UART1_SetTxInterruptHandler	;wreg free
  7413  002F6A                     
  7414                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  7415  002F6A  0E00               	movlw	0
  7416  002F6C  013D               	movlb	61	; () banked
  7417  002F6E  6FEC               	movwf	236,b	;volatile
  7418  002F70                     
  7419                           ; BSR set to: 61
  7420                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  7421  002F70  0E00               	movlw	0
  7422  002F72  6FED               	movwf	237,b	;volatile
  7423  002F74                     
  7424                           ; BSR set to: 61
  7425                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  7426  002F74  0E00               	movlw	0
  7427  002F76  6FEE               	movwf	238,b	;volatile
  7428  002F78                     
  7429                           ; BSR set to: 61
  7430                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  7431  002F78  0E00               	movlw	0
  7432  002F7A  6FEF               	movwf	239,b	;volatile
  7433  002F7C                     
  7434                           ; BSR set to: 61
  7435                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  7436  002F7C  0E00               	movlw	0
  7437  002F7E  6FF0               	movwf	240,b	;volatile
  7438  002F80                     
  7439                           ; BSR set to: 61
  7440                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  7441  002F80  0E00               	movlw	0
  7442  002F82  6FF1               	movwf	241,b	;volatile
  7443  002F84                     
  7444                           ; BSR set to: 61
  7445                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  7446  002F84  0EB0               	movlw	176
  7447  002F86  6FF2               	movwf	242,b	;volatile
  7448  002F88                     
  7449                           ; BSR set to: 61
  7450                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  7451  002F88  0E80               	movlw	128
  7452  002F8A  6FF3               	movwf	243,b	;volatile
  7453  002F8C                     
  7454                           ; BSR set to: 61
  7455                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  7456  002F8C  0E00               	movlw	0
  7457  002F8E  6FF4               	movwf	244,b	;volatile
  7458  002F90                     
  7459                           ; BSR set to: 61
  7460                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  7461  002F90  0E8A               	movlw	138
  7462  002F92  6FF5               	movwf	245,b	;volatile
  7463  002F94                     
  7464                           ; BSR set to: 61
  7465                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  7466  002F94  0E00               	movlw	0
  7467  002F96  6FF6               	movwf	246,b	;volatile
  7468  002F98                     
  7469                           ; BSR set to: 61
  7470                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  7471  002F98  0E00               	movlw	0
  7472  002F9A  6FF7               	movwf	247,b	;volatile
  7473  002F9C                     
  7474                           ; BSR set to: 61
  7475                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  7476  002F9C  0E00               	movlw	0
  7477  002F9E  6FF8               	movwf	248,b	;volatile
  7478  002FA0                     
  7479                           ; BSR set to: 61
  7480                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  7481  002FA0  0E00               	movlw	0
  7482  002FA2  6FF9               	movwf	249,b	;volatile
  7483  002FA4                     
  7484                           ; BSR set to: 61
  7485                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  7486  002FA4  0E00               	movlw	0
  7487  002FA6  6FFA               	movwf	250,b	;volatile
  7488  002FA8                     
  7489                           ; BSR set to: 61
  7490                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  7491  002FA8  0E1A               	movlw	low _UART1_DefaultFramingErrorHandler
  7492  002FAA  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  7493  002FAC  0E3B               	movlw	high _UART1_DefaultFramingErrorHandler
  7494  002FAE  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7495  002FB0  EC68  F01D         	call	_UART1_SetFramingErrorHandler	;wreg free
  7496  002FB4                     
  7497                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  7498  002FB4  0E18               	movlw	low _UART1_DefaultOverrunErrorHandler
  7499  002FB6  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  7500  002FB8  0E3B               	movlw	high _UART1_DefaultOverrunErrorHandler
  7501  002FBA  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7502  002FBC  EC63  F01D         	call	_UART1_SetOverrunErrorHandler	;wreg free
  7503  002FC0                     
  7504                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  7505  002FC0  0E0C               	movlw	low _UART1_DefaultErrorHandler
  7506  002FC2  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  7507  002FC4  0E3B               	movlw	high _UART1_DefaultErrorHandler
  7508  002FC6  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  7509  002FC8  EC6D  F01D         	call	_UART1_SetErrorHandler	;wreg free
  7510                           
  7511                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  7512  002FCC  0E00               	movlw	0
  7513  002FCE  6E40               	movwf	_uart1RxLastError^0,c	;volatile
  7514                           
  7515                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  7516  002FD0  0E00               	movlw	0
  7517  002FD2  6E45               	movwf	_uart1TxHead^0,c	;volatile
  7518                           
  7519                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  7520  002FD4  0E00               	movlw	0
  7521  002FD6  6E44               	movwf	_uart1TxTail^0,c	;volatile
  7522                           
  7523                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  7524  002FD8  0E08               	movlw	8
  7525  002FDA  0100               	movlb	0	; () banked
  7526  002FDC  6FFE               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  7527                           
  7528                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  7529  002FDE  0E00               	movlw	0
  7530  002FE0  6E43               	movwf	_uart1RxHead^0,c	;volatile
  7531                           
  7532                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  7533  002FE2  0E00               	movlw	0
  7534  002FE4  6E42               	movwf	_uart1RxTail^0,c	;volatile
  7535                           
  7536                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  7537  002FE6  0E00               	movlw	0
  7538  002FE8  6E41               	movwf	_uart1RxCount^0,c	;volatile
  7539  002FEA                     
  7540                           ; BSR set to: 0
  7541                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  7542  002FEA  0139               	movlb	57	; () banked
  7543  002FEC  8793               	bsf	147,3,b	;volatile
  7544  002FEE                     
  7545                           ; BSR set to: 57
  7546  002FEE  0012               	return		;funcret
  7547  002FF0                     __end_of_UART1_Initialize:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _UART1_SetTxInterruptHandler *****************
  7551 ;; Defined at:
  7552 ;;		line 333 in file "mcc_generated_files/uart1.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7555 ;;		 -> UART1_Transmit_ISR(1), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;Total ram usage:        2 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 8
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_UART1_Initialize
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text33
  7582  003AB2                     __ptext33:
  7583                           	callstack 0
  7584  003AB2                     _UART1_SetTxInterruptHandler:
  7585                           	callstack 20
  7586  003AB2                     
  7587                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  7588  003AB2  C014  F0FA         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  7589  003AB6  C015  F0FB         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  7590  003ABA  0012               	return		;funcret
  7591  003ABC                     __end_of_UART1_SetTxInterruptHandler:
  7592                           	callstack 0
  7593                           
  7594 ;; *************** function _UART1_SetRxInterruptHandler *****************
  7595 ;; Defined at:
  7596 ;;		line 329 in file "mcc_generated_files/uart1.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7599 ;;		 -> UART1_Receive_ISR(1), 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;		None
  7602 ;; Return value:  Size  Location     Type
  7603 ;;                  1    wreg      void 
  7604 ;; Registers used:
  7605 ;;		wreg, status,2, status,0
  7606 ;; Tracked objects:
  7607 ;;		On entry : 0/0
  7608 ;;		On exit  : 0/0
  7609 ;;		Unchanged: 0/0
  7610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;Total ram usage:        2 bytes
  7616 ;; Hardware stack levels used: 1
  7617 ;; Hardware stack levels required when called: 8
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_UART1_Initialize
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text34
  7626  003ABC                     __ptext34:
  7627                           	callstack 0
  7628  003ABC                     _UART1_SetRxInterruptHandler:
  7629                           	callstack 20
  7630  003ABC                     
  7631                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  7632  003ABC  C014  F0FC         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  7633  003AC0  C015  F0FD         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  7634  003AC4  0012               	return		;funcret
  7635  003AC6                     __end_of_UART1_SetRxInterruptHandler:
  7636                           	callstack 0
  7637                           
  7638 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  7639 ;; Defined at:
  7640 ;;		line 319 in file "mcc_generated_files/uart1.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  7643 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		wreg, status,2, status,0
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;Total ram usage:        2 bytes
  7660 ;; Hardware stack levels used: 1
  7661 ;; Hardware stack levels required when called: 8
  7662 ;; This function calls:
  7663 ;;		Nothing
  7664 ;; This function is called by:
  7665 ;;		_UART1_Initialize
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text35
  7670  003AC6                     __ptext35:
  7671                           	callstack 0
  7672  003AC6                     _UART1_SetOverrunErrorHandler:
  7673                           	callstack 20
  7674  003AC6                     
  7675                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  7676  003AC6  C014  F0F6         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  7677  003ACA  C015  F0F7         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  7678  003ACE  0012               	return		;funcret
  7679  003AD0                     __end_of_UART1_SetOverrunErrorHandler:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _UART1_SetFramingErrorHandler *****************
  7683 ;; Defined at:
  7684 ;;		line 315 in file "mcc_generated_files/uart1.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  7687 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;		None
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, status,2, status,0
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7699 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;Total ram usage:        2 bytes
  7704 ;; Hardware stack levels used: 1
  7705 ;; Hardware stack levels required when called: 8
  7706 ;; This function calls:
  7707 ;;		Nothing
  7708 ;; This function is called by:
  7709 ;;		_UART1_Initialize
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           
  7713                           	psect	text36
  7714  003AD0                     __ptext36:
  7715                           	callstack 0
  7716  003AD0                     _UART1_SetFramingErrorHandler:
  7717                           	callstack 20
  7718  003AD0                     
  7719                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  7720  003AD0  C014  F0F8         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  7721  003AD4  C015  F0F9         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  7722  003AD8  0012               	return		;funcret
  7723  003ADA                     __end_of_UART1_SetFramingErrorHandler:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _UART1_SetErrorHandler *****************
  7727 ;; Defined at:
  7728 ;;		line 323 in file "mcc_generated_files/uart1.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  7731 ;;		 -> UART1_DefaultErrorHandler(1), 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;Total ram usage:        2 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 8
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_UART1_Initialize
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text37
  7758  003ADA                     __ptext37:
  7759                           	callstack 0
  7760  003ADA                     _UART1_SetErrorHandler:
  7761                           	callstack 20
  7762  003ADA                     
  7763                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  7764  003ADA  C014  F0F4         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  7765  003ADE  C015  F0F5         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  7766  003AE2  0012               	return		;funcret
  7767  003AE4                     __end_of_UART1_SetErrorHandler:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function _TMR5_Initialize *****************
  7771 ;; Defined at:
  7772 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;		None
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0, cstack
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;Total ram usage:        2 bytes
  7791 ;; Hardware stack levels used: 1
  7792 ;; Hardware stack levels required when called: 9
  7793 ;; This function calls:
  7794 ;;		_TMR5_SetGateInterruptHandler
  7795 ;; This function is called by:
  7796 ;;		_SYSTEM_Initialize
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text38
  7801  0033BA                     __ptext38:
  7802                           	callstack 0
  7803  0033BA                     _TMR5_Initialize:
  7804                           	callstack 20
  7805  0033BA                     
  7806                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  7807  0033BA  0EC0               	movlw	192
  7808  0033BC  6E9B               	movwf	155,c	;volatile
  7809                           
  7810                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  7811  0033BE  0E00               	movlw	0
  7812  0033C0  6E9C               	movwf	156,c	;volatile
  7813                           
  7814                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  7815  0033C2  0E05               	movlw	5
  7816  0033C4  6E9D               	movwf	157,c	;volatile
  7817                           
  7818                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  7819  0033C6  0E00               	movlw	0
  7820  0033C8  6E99               	movwf	153,c	;volatile
  7821                           
  7822                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  7823  0033CA  0E00               	movlw	0
  7824  0033CC  6E98               	movwf	152,c	;volatile
  7825  0033CE                     
  7826                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  7827  0033CE  0139               	movlb	57	; () banked
  7828  0033D0  9DA8               	bcf	168,6,b	;volatile
  7829  0033D2                     
  7830                           ; BSR set to: 57
  7831                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  7832  0033D2  5098               	movf	152,w,c	;volatile
  7833  0033D4  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  7834  0033DA  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  7835  0033DC  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  7836  0033E0  6A16               	clrf	??_TMR5_Initialize^0,c
  7837  0033E2  1016               	iorwf	??_TMR5_Initialize^0,w,c
  7838  0033E4  0100               	movlb	0	; () banked
  7839  0033E6  6FEE               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  7840  0033E8  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  7841  0033EA  6FEF               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  7842  0033EC                     
  7843                           ; BSR set to: 0
  7844                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  7845  0033EC  0139               	movlb	57	; () banked
  7846  0033EE  9FA8               	bcf	168,7,b	;volatile
  7847  0033F0                     
  7848                           ; BSR set to: 57
  7849                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  7850  0033F0  8F98               	bsf	152,7,b	;volatile
  7851  0033F2                     
  7852                           ; BSR set to: 57
  7853                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  7854  0033F2  0EF6               	movlw	low _TMR5_DefaultGateInterruptHandler
  7855  0033F4  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  7856  0033F6  0E39               	movlw	high _TMR5_DefaultGateInterruptHandler
  7857  0033F8  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  7858  0033FA  EC72  F01D         	call	_TMR5_SetGateInterruptHandler	;wreg free
  7859  0033FE                     
  7860                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  7861  0033FE  0E03               	movlw	3
  7862  003400  6E9A               	movwf	154,c	;volatile
  7863  003402  0012               	return		;funcret
  7864  003404                     __end_of_TMR5_Initialize:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  7868 ;; Defined at:
  7869 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7872 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;Total ram usage:        2 bytes
  7889 ;; Hardware stack levels used: 1
  7890 ;; Hardware stack levels required when called: 8
  7891 ;; This function calls:
  7892 ;;		Nothing
  7893 ;; This function is called by:
  7894 ;;		_TMR5_Initialize
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text39
  7899  003AE4                     __ptext39:
  7900                           	callstack 0
  7901  003AE4                     _TMR5_SetGateInterruptHandler:
  7902                           	callstack 20
  7903  003AE4                     
  7904                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  7905  003AE4  C014  F0EC         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  7906  003AE8  C015  F0ED         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  7907  003AEC  0012               	return		;funcret
  7908  003AEE                     __end_of_TMR5_SetGateInterruptHandler:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _TMR4_Initialize *****************
  7912 ;; Defined at:
  7913 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2, status,0, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; Hardware stack levels required when called: 9
  7934 ;; This function calls:
  7935 ;;		_TMR4_SetInterruptHandler
  7936 ;; This function is called by:
  7937 ;;		_SYSTEM_Initialize
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text40
  7942  003874                     __ptext40:
  7943                           	callstack 0
  7944  003874                     _TMR4_Initialize:
  7945                           	callstack 20
  7946  003874                     
  7947                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  7948  003874  0E01               	movlw	1
  7949  003876  6EA2               	movwf	162,c	;volatile
  7950                           
  7951                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  7952  003878  0E00               	movlw	0
  7953  00387A  6EA1               	movwf	161,c	;volatile
  7954                           
  7955                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  7956  00387C  0E00               	movlw	0
  7957  00387E  6EA3               	movwf	163,c	;volatile
  7958                           
  7959                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  7960  003880  0EF9               	movlw	249
  7961  003882  6E9F               	movwf	159,c	;volatile
  7962                           
  7963                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  7964  003884  0E00               	movlw	0
  7965  003886  6E9E               	movwf	158,c	;volatile
  7966  003888                     
  7967                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  7968  003888  0139               	movlb	57	; () banked
  7969  00388A  91A7               	bcf	167,0,b	;volatile
  7970  00388C                     
  7971                           ; BSR set to: 57
  7972                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  7973  00388C  8197               	bsf	151,0,b	;volatile
  7974  00388E                     
  7975                           ; BSR set to: 57
  7976                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7977  00388E  0E1C               	movlw	low _TMR4_DefaultInterruptHandler
  7978  003890  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  7979  003892  0E3B               	movlw	high _TMR4_DefaultInterruptHandler
  7980  003894  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  7981  003896  EC77  F01D         	call	_TMR4_SetInterruptHandler	;wreg free
  7982  00389A                     
  7983                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  7984  00389A  0EE0               	movlw	224
  7985  00389C  6EA0               	movwf	160,c	;volatile
  7986  00389E  0012               	return		;funcret
  7987  0038A0                     __end_of_TMR4_Initialize:
  7988                           	callstack 0
  7989                           
  7990 ;; *************** function _TMR4_SetInterruptHandler *****************
  7991 ;; Defined at:
  7992 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7995 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;Total ram usage:        2 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 8
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_TMR4_Initialize
  8018 ;;		_main
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text41
  8023  003AEE                     __ptext41:
  8024                           	callstack 0
  8025  003AEE                     _TMR4_SetInterruptHandler:
  8026                           	callstack 22
  8027  003AEE                     
  8028                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  8029  003AEE  C014  F0E8         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  8030  003AF2  C015  F0E9         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  8031  003AF6  0012               	return		;funcret
  8032  003AF8                     __end_of_TMR4_SetInterruptHandler:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function _TMR3_Initialize *****************
  8036 ;; Defined at:
  8037 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2, status,0
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;Total ram usage:        2 bytes
  8056 ;; Hardware stack levels used: 1
  8057 ;; Hardware stack levels required when called: 8
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_SYSTEM_Initialize
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text42
  8066  00354A                     __ptext42:
  8067                           	callstack 0
  8068  00354A                     _TMR3_Initialize:
  8069                           	callstack 21
  8070  00354A                     
  8071                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  8072  00354A  0E00               	movlw	0
  8073  00354C  6EA7               	movwf	167,c	;volatile
  8074                           
  8075                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  8076  00354E  0E00               	movlw	0
  8077  003550  6EA8               	movwf	168,c	;volatile
  8078                           
  8079                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  8080  003552  0E05               	movlw	5
  8081  003554  6EA9               	movwf	169,c	;volatile
  8082                           
  8083                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  8084  003556  0E00               	movlw	0
  8085  003558  6EA5               	movwf	165,c	;volatile
  8086                           
  8087                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  8088  00355A  0E00               	movlw	0
  8089  00355C  6EA4               	movwf	164,c	;volatile
  8090  00355E                     
  8091                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  8092  00355E  0139               	movlb	57	; () banked
  8093  003560  9DA6               	bcf	166,6,b	;volatile
  8094  003562                     
  8095                           ; BSR set to: 57
  8096                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  8097  003562  50A4               	movf	164,w,c	;volatile
  8098  003564  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  8099  00356A  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  8100  00356C  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  8101  003570  6A14               	clrf	??_TMR3_Initialize^0,c
  8102  003572  1014               	iorwf	??_TMR3_Initialize^0,w,c
  8103  003574  0100               	movlb	0	; () banked
  8104  003576  6FEA               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  8105  003578  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  8106  00357A  6FEB               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  8107  00357C                     
  8108                           ; BSR set to: 0
  8109                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  8110  00357C  0E01               	movlw	1
  8111  00357E  6EA6               	movwf	166,c	;volatile
  8112  003580                     
  8113                           ; BSR set to: 0
  8114  003580  0012               	return		;funcret
  8115  003582                     __end_of_TMR3_Initialize:
  8116                           	callstack 0
  8117                           
  8118 ;; *************** function _TMR2_Initialize *****************
  8119 ;; Defined at:
  8120 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;		None
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1    wreg      void 
  8127 ;; Registers used:
  8128 ;;		wreg, status,2
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;Total ram usage:        0 bytes
  8139 ;; Hardware stack levels used: 1
  8140 ;; Hardware stack levels required when called: 8
  8141 ;; This function calls:
  8142 ;;		Nothing
  8143 ;; This function is called by:
  8144 ;;		_SYSTEM_Initialize
  8145 ;; This function uses a non-reentrant model
  8146 ;;
  8147                           
  8148                           	psect	text43
  8149  0039DA                     __ptext43:
  8150                           	callstack 0
  8151  0039DA                     _TMR2_Initialize:
  8152                           	callstack 21
  8153  0039DA                     
  8154                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  8155  0039DA  0E05               	movlw	5
  8156  0039DC  6EAE               	movwf	174,c	;volatile
  8157                           
  8158                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  8159  0039DE  0E00               	movlw	0
  8160  0039E0  6EAD               	movwf	173,c	;volatile
  8161                           
  8162                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  8163  0039E2  0E00               	movlw	0
  8164  0039E4  6EAF               	movwf	175,c	;volatile
  8165  0039E6                     
  8166                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  8167  0039E6  68AB               	setf	171,c	;volatile
  8168                           
  8169                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  8170  0039E8  0E00               	movlw	0
  8171  0039EA  6EAA               	movwf	170,c	;volatile
  8172  0039EC                     
  8173                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  8174  0039EC  0139               	movlb	57	; () banked
  8175  0039EE  95A4               	bcf	164,2,b	;volatile
  8176                           
  8177                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  8178  0039F0  0EB0               	movlw	176
  8179  0039F2  6EAC               	movwf	172,c	;volatile
  8180  0039F4                     
  8181                           ; BSR set to: 57
  8182  0039F4  0012               	return		;funcret
  8183  0039F6                     __end_of_TMR2_Initialize:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _SMT1_Initialize *****************
  8187 ;; Defined at:
  8188 ;;		line 60 in file "mcc_generated_files/smt1.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;Total ram usage:        0 bytes
  8207 ;; Hardware stack levels used: 1
  8208 ;; Hardware stack levels required when called: 8
  8209 ;; This function calls:
  8210 ;;		Nothing
  8211 ;; This function is called by:
  8212 ;;		_SYSTEM_Initialize
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text44
  8217  00375A                     __ptext44:
  8218                           	callstack 0
  8219  00375A                     _SMT1_Initialize:
  8220                           	callstack 21
  8221  00375A                     
  8222                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  8223  00375A  0E80               	movlw	128
  8224  00375C  013F               	movlb	63	; () banked
  8225  00375E  6F1E               	movwf	30,b	;volatile
  8226                           
  8227                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  8228  003760  0E42               	movlw	66
  8229  003762  6F1F               	movwf	31,b	;volatile
  8230                           
  8231                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  8232  003764  0E00               	movlw	0
  8233  003766  6F20               	movwf	32,b	;volatile
  8234                           
  8235                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  8236  003768  0E04               	movlw	4
  8237  00376A  6F21               	movwf	33,b	;volatile
  8238                           
  8239                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  8240  00376C  0E00               	movlw	0
  8241  00376E  6F23               	movwf	35,b	;volatile
  8242                           
  8243                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  8244  003770  0E00               	movlw	0
  8245  003772  6F22               	movwf	34,b	;volatile
  8246                           
  8247                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  8248  003774  0E01               	movlw	1
  8249  003776  6F1D               	movwf	29,b	;volatile
  8250  003778                     
  8251                           ; BSR set to: 63
  8252                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  8253  003778  691C               	setf	28,b	;volatile
  8254  00377A                     
  8255                           ; BSR set to: 63
  8256                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  8257  00377A  691B               	setf	27,b	;volatile
  8258  00377C                     
  8259                           ; BSR set to: 63
  8260                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  8261  00377C  0139               	movlb	57	; () banked
  8262  00377E  8B91               	bsf	145,5,b	;volatile
  8263  003780                     
  8264                           ; BSR set to: 57
  8265                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  8266  003780  8F91               	bsf	145,7,b	;volatile
  8267  003782                     
  8268                           ; BSR set to: 57
  8269                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  8270  003782  8D91               	bsf	145,6,b	;volatile
  8271  003784                     
  8272                           ; BSR set to: 57
  8273                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  8274  003784  013F               	movlb	63	; () banked
  8275  003786  8F1F               	bsf	31,7,b	;volatile
  8276  003788                     
  8277                           ; BSR set to: 63
  8278  003788  0012               	return		;funcret
  8279  00378A                     __end_of_SMT1_Initialize:
  8280                           	callstack 0
  8281                           
  8282 ;; *************** function _PWM8_Initialize *****************
  8283 ;; Defined at:
  8284 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 8
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_SYSTEM_Initialize
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text45
  8313  003A12                     __ptext45:
  8314                           	callstack 0
  8315  003A12                     _PWM8_Initialize:
  8316                           	callstack 21
  8317  003A12                     
  8318                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  8319  003A12  0E80               	movlw	128
  8320  003A14  6E62               	movwf	98,c	;volatile
  8321                           
  8322                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  8323  003A16  0E00               	movlw	0
  8324  003A18  6E61               	movwf	97,c	;volatile
  8325                           
  8326                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  8327  003A1A  0E00               	movlw	0
  8328  003A1C  6E60               	movwf	96,c	;volatile
  8329                           
  8330                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  8331  003A1E  013F               	movlb	63	; () banked
  8332  003A20  515F               	movf	95,w,b	;volatile
  8333  003A22  0B3F               	andlw	-193
  8334  003A24  0980               	iorlw	128
  8335  003A26  6F5F               	movwf	95,b	;volatile
  8336  003A28                     
  8337                           ; BSR set to: 63
  8338  003A28  0012               	return		;funcret
  8339  003A2A                     __end_of_PWM8_Initialize:
  8340                           	callstack 0
  8341                           
  8342 ;; *************** function _PWM7_Initialize *****************
  8343 ;; Defined at:
  8344 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;		None
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;Total ram usage:        0 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; Hardware stack levels required when called: 8
  8365 ;; This function calls:
  8366 ;;		Nothing
  8367 ;; This function is called by:
  8368 ;;		_SYSTEM_Initialize
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text46
  8373  003A2A                     __ptext46:
  8374                           	callstack 0
  8375  003A2A                     _PWM7_Initialize:
  8376                           	callstack 21
  8377  003A2A                     
  8378                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  8379  003A2A  0E80               	movlw	128
  8380  003A2C  6E66               	movwf	102,c	;volatile
  8381                           
  8382                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  8383  003A2E  0E00               	movlw	0
  8384  003A30  6E65               	movwf	101,c	;volatile
  8385                           
  8386                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  8387  003A32  0E00               	movlw	0
  8388  003A34  6E64               	movwf	100,c	;volatile
  8389                           
  8390                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  8391  003A36  013F               	movlb	63	; () banked
  8392  003A38  515F               	movf	95,w,b	;volatile
  8393  003A3A  0BCF               	andlw	-49
  8394  003A3C  0920               	iorlw	32
  8395  003A3E  6F5F               	movwf	95,b	;volatile
  8396  003A40                     
  8397                           ; BSR set to: 63
  8398  003A40  0012               	return		;funcret
  8399  003A42                     __end_of_PWM7_Initialize:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _PWM6_Initialize *****************
  8403 ;; Defined at:
  8404 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; Hardware stack levels required when called: 8
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_SYSTEM_Initialize
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text47
  8433  003A42                     __ptext47:
  8434                           	callstack 0
  8435  003A42                     _PWM6_Initialize:
  8436                           	callstack 21
  8437  003A42                     
  8438                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  8439  003A42  0E80               	movlw	128
  8440  003A44  6E6A               	movwf	106,c	;volatile
  8441                           
  8442                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  8443  003A46  0E59               	movlw	89
  8444  003A48  6E69               	movwf	105,c	;volatile
  8445                           
  8446                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  8447  003A4A  0E40               	movlw	64
  8448  003A4C  6E68               	movwf	104,c	;volatile
  8449                           
  8450                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  8451  003A4E  013F               	movlb	63	; () banked
  8452  003A50  515F               	movf	95,w,b	;volatile
  8453  003A52  0BF3               	andlw	-13
  8454  003A54  0904               	iorlw	4
  8455  003A56  6F5F               	movwf	95,b	;volatile
  8456  003A58                     
  8457                           ; BSR set to: 63
  8458  003A58  0012               	return		;funcret
  8459  003A5A                     __end_of_PWM6_Initialize:
  8460                           	callstack 0
  8461                           
  8462 ;; *************** function _PWM5_Initialize *****************
  8463 ;; Defined at:
  8464 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  8465 ;; Parameters:    Size  Location     Type
  8466 ;;		None
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;		None
  8469 ;; Return value:  Size  Location     Type
  8470 ;;                  1    wreg      void 
  8471 ;; Registers used:
  8472 ;;		wreg, status,2
  8473 ;; Tracked objects:
  8474 ;;		On entry : 0/0
  8475 ;;		On exit  : 0/0
  8476 ;;		Unchanged: 0/0
  8477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8482 ;;Total ram usage:        0 bytes
  8483 ;; Hardware stack levels used: 1
  8484 ;; Hardware stack levels required when called: 8
  8485 ;; This function calls:
  8486 ;;		Nothing
  8487 ;; This function is called by:
  8488 ;;		_SYSTEM_Initialize
  8489 ;; This function uses a non-reentrant model
  8490 ;;
  8491                           
  8492                           	psect	text48
  8493  003A5A                     __ptext48:
  8494                           	callstack 0
  8495  003A5A                     _PWM5_Initialize:
  8496                           	callstack 21
  8497  003A5A                     
  8498                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  8499  003A5A  0E80               	movlw	128
  8500  003A5C  6E6E               	movwf	110,c	;volatile
  8501                           
  8502                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  8503  003A5E  0E59               	movlw	89
  8504  003A60  6E6D               	movwf	109,c	;volatile
  8505                           
  8506                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  8507  003A62  0E40               	movlw	64
  8508  003A64  6E6C               	movwf	108,c	;volatile
  8509                           
  8510                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  8511  003A66  013F               	movlb	63	; () banked
  8512  003A68  515F               	movf	95,w,b	;volatile
  8513  003A6A  0BFC               	andlw	-4
  8514  003A6C  0901               	iorlw	1
  8515  003A6E  6F5F               	movwf	95,b	;volatile
  8516  003A70                     
  8517                           ; BSR set to: 63
  8518  003A70  0012               	return		;funcret
  8519  003A72                     __end_of_PWM5_Initialize:
  8520                           	callstack 0
  8521                           
  8522 ;; *************** function _PMD_Initialize *****************
  8523 ;; Defined at:
  8524 ;;		line 86 in file "mcc_generated_files/mcc.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;		None
  8527 ;; Auto vars:     Size  Location     Type
  8528 ;;		None
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      void 
  8531 ;; Registers used:
  8532 ;;		wreg, status,2
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;Total ram usage:        0 bytes
  8543 ;; Hardware stack levels used: 1
  8544 ;; Hardware stack levels required when called: 8
  8545 ;; This function calls:
  8546 ;;		Nothing
  8547 ;; This function is called by:
  8548 ;;		_SYSTEM_Initialize
  8549 ;; This function uses a non-reentrant model
  8550 ;;
  8551                           
  8552                           	psect	text49
  8553  003972                     __ptext49:
  8554                           	callstack 0
  8555  003972                     _PMD_Initialize:
  8556                           	callstack 21
  8557  003972                     
  8558                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  8559  003972  0E00               	movlw	0
  8560  003974  0139               	movlb	57	; () banked
  8561  003976  6FC0               	movwf	192,b	;volatile
  8562                           
  8563                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  8564  003978  0E00               	movlw	0
  8565  00397A  6FC1               	movwf	193,b	;volatile
  8566                           
  8567                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  8568  00397C  0E00               	movlw	0
  8569  00397E  6FC2               	movwf	194,b	;volatile
  8570                           
  8571                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  8572  003980  0E00               	movlw	0
  8573  003982  6FC3               	movwf	195,b	;volatile
  8574                           
  8575                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  8576  003984  0E00               	movlw	0
  8577  003986  6FC4               	movwf	196,b	;volatile
  8578                           
  8579                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  8580  003988  0E00               	movlw	0
  8581  00398A  6FC5               	movwf	197,b	;volatile
  8582                           
  8583                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  8584  00398C  0E00               	movlw	0
  8585  00398E  6FC6               	movwf	198,b	;volatile
  8586                           
  8587                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  8588  003990  0E00               	movlw	0
  8589  003992  6FC7               	movwf	199,b	;volatile
  8590  003994                     
  8591                           ; BSR set to: 57
  8592  003994  0012               	return		;funcret
  8593  003996                     __end_of_PMD_Initialize:
  8594                           	callstack 0
  8595                           
  8596 ;; *************** function _PIN_MANAGER_Initialize *****************
  8597 ;; Defined at:
  8598 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used: 1
  8618 ;; Hardware stack levels required when called: 8
  8619 ;; This function calls:
  8620 ;;		Nothing
  8621 ;; This function is called by:
  8622 ;;		_SYSTEM_Initialize
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text50
  8627  002CFC                     __ptext50:
  8628                           	callstack 0
  8629  002CFC                     _PIN_MANAGER_Initialize:
  8630                           	callstack 21
  8631  002CFC                     
  8632                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8633  002CFC  0E00               	movlw	0
  8634  002CFE  6EBE               	movwf	190,c	;volatile
  8635                           
  8636                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8637  002D00  0E00               	movlw	0
  8638  002D02  6EBD               	movwf	189,c	;volatile
  8639                           
  8640                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  8641  002D04  0E24               	movlw	36
  8642  002D06  6EBA               	movwf	186,c	;volatile
  8643                           
  8644                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8645  002D08  0E00               	movlw	0
  8646  002D0A  6EBB               	movwf	187,c	;volatile
  8647                           
  8648                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8649  002D0C  0E00               	movlw	0
  8650  002D0E  6EBC               	movwf	188,c	;volatile
  8651                           
  8652                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8653  002D10  0E07               	movlw	7
  8654  002D12  6EC6               	movwf	198,c	;volatile
  8655                           
  8656                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  8657  002D14  0EC0               	movlw	192
  8658  002D16  6EC2               	movwf	194,c	;volatile
  8659                           
  8660                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  8661  002D18  0EF7               	movlw	247
  8662  002D1A  6EC3               	movwf	195,c	;volatile
  8663  002D1C                     
  8664                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8665  002D1C  68C4               	setf	196,c	;volatile
  8666  002D1E                     
  8667                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8668  002D1E  68C5               	setf	197,c	;volatile
  8669                           
  8670                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  8671  002D20  0E1F               	movlw	31
  8672  002D22  013A               	movlb	58	; () banked
  8673  002D24  6F70               	movwf	112,b	;volatile
  8674  002D26                     
  8675                           ; BSR set to: 58
  8676                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  8677  002D26  6960               	setf	96,b	;volatile
  8678                           
  8679                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  8680  002D28  0EC0               	movlw	192
  8681  002D2A  6F50               	movwf	80,b	;volatile
  8682                           
  8683                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  8684  002D2C  0E07               	movlw	7
  8685  002D2E  6F80               	movwf	128,b	;volatile
  8686                           
  8687                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  8688  002D30  0E7F               	movlw	127
  8689  002D32  6F40               	movwf	64,b	;volatile
  8690                           
  8691                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  8692  002D34  0E00               	movlw	0
  8693  002D36  6F71               	movwf	113,b	;volatile
  8694                           
  8695                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  8696  002D38  0E00               	movlw	0
  8697  002D3A  6F81               	movwf	129,b	;volatile
  8698                           
  8699                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  8700  002D3C  0E00               	movlw	0
  8701  002D3E  6F51               	movwf	81,b	;volatile
  8702                           
  8703                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  8704  002D40  0E00               	movlw	0
  8705  002D42  6F41               	movwf	65,b	;volatile
  8706                           
  8707                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  8708  002D44  0E00               	movlw	0
  8709  002D46  6F61               	movwf	97,b	;volatile
  8710                           
  8711                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  8712  002D48  0E00               	movlw	0
  8713  002D4A  6F5A               	movwf	90,b	;volatile
  8714                           
  8715                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  8716  002D4C  0E00               	movlw	0
  8717  002D4E  6F5B               	movwf	91,b	;volatile
  8718                           
  8719                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  8720  002D50  0E00               	movlw	0
  8721  002D52  6F6A               	movwf	106,b	;volatile
  8722                           
  8723                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  8724  002D54  0E00               	movlw	0
  8725  002D56  6F6B               	movwf	107,b	;volatile
  8726                           
  8727                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  8728  002D58  0E00               	movlw	0
  8729  002D5A  6F7A               	movwf	122,b	;volatile
  8730                           
  8731                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  8732  002D5C  0E00               	movlw	0
  8733  002D5E  6F7B               	movwf	123,b	;volatile
  8734                           
  8735                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  8736  002D60  0E00               	movlw	0
  8737  002D62  6F82               	movwf	130,b	;volatile
  8738                           
  8739                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  8740  002D64  0E00               	movlw	0
  8741  002D66  6F42               	movwf	66,b	;volatile
  8742                           
  8743                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  8744  002D68  0E00               	movlw	0
  8745  002D6A  6F52               	movwf	82,b	;volatile
  8746                           
  8747                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  8748  002D6C  0E00               	movlw	0
  8749  002D6E  6F62               	movwf	98,b	;volatile
  8750                           
  8751                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  8752  002D70  0E00               	movlw	0
  8753  002D72  6F72               	movwf	114,b	;volatile
  8754  002D74                     
  8755                           ; BSR set to: 58
  8756                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  8757  002D74  6943               	setf	67,b	;volatile
  8758  002D76                     
  8759                           ; BSR set to: 58
  8760                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  8761  002D76  6953               	setf	83,b	;volatile
  8762  002D78                     
  8763                           ; BSR set to: 58
  8764                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  8765  002D78  6963               	setf	99,b	;volatile
  8766  002D7A                     
  8767                           ; BSR set to: 58
  8768                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  8769  002D7A  6973               	setf	115,b	;volatile
  8770                           
  8771                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  8772  002D7C  0E07               	movlw	7
  8773  002D7E  6F83               	movwf	131,b	;volatile
  8774  002D80                     
  8775                           ; BSR set to: 58
  8776                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  8777  002D80  6944               	setf	68,b	;volatile
  8778  002D82                     
  8779                           ; BSR set to: 58
  8780                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  8781  002D82  6954               	setf	84,b	;volatile
  8782  002D84                     
  8783                           ; BSR set to: 58
  8784                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  8785  002D84  6964               	setf	100,b	;volatile
  8786  002D86                     
  8787                           ; BSR set to: 58
  8788                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  8789  002D86  6974               	setf	116,b	;volatile
  8790                           
  8791                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  8792  002D88  0E0F               	movlw	15
  8793  002D8A  6F84               	movwf	132,b	;volatile
  8794                           
  8795                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  8796  002D8C  0E1F               	movlw	31
  8797  002D8E  6FCF               	movwf	207,b	;volatile
  8798                           
  8799                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  8800  002D90  0E09               	movlw	9
  8801  002D92  6FDC               	movwf	220,b	;volatile
  8802                           
  8803                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  8804  002D94  0E0E               	movlw	14
  8805  002D96  6F01               	movwf	1,b	;volatile
  8806                           
  8807                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  8808  002D98  0E0A               	movlw	10
  8809  002D9A  6FE5               	movwf	229,b	;volatile
  8810                           
  8811                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  8812  002D9C  0E0D               	movlw	13
  8813  002D9E  6F00               	movwf	0,b	;volatile
  8814                           
  8815                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  8816  002DA0  0E1D               	movlw	29
  8817  002DA2  6FC9               	movwf	201,b	;volatile
  8818                           
  8819                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  8820  002DA4  0E10               	movlw	16
  8821  002DA6  6F04               	movwf	4,b	;volatile
  8822                           
  8823                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  8824  002DA8  0E07               	movlw	7
  8825  002DAA  6FD9               	movwf	217,b	;volatile
  8826                           
  8827                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  8828  002DAC  0E09               	movlw	9
  8829  002DAE  6FD1               	movwf	209,b	;volatile
  8830                           
  8831                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  8832  002DB0  0E0F               	movlw	15
  8833  002DB2  6F03               	movwf	3,b	;volatile
  8834                           
  8835                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  8836  002DB4  0E13               	movlw	19
  8837  002DB6  6F0B               	movwf	11,b	;volatile
  8838                           
  8839                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  8840  002DB8  0E08               	movlw	8
  8841  002DBA  6FDB               	movwf	219,b	;volatile
  8842                           
  8843                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  8844  002DBC  0E08               	movlw	8
  8845  002DBE  6FD2               	movwf	210,b	;volatile
  8846                           
  8847                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  8848  002DC0  0E1E               	movlw	30
  8849  002DC2  6FD0               	movwf	208,b	;volatile
  8850  002DC4                     
  8851                           ; BSR set to: 58
  8852  002DC4  0012               	return		;funcret
  8853  002DC6                     __end_of_PIN_MANAGER_Initialize:
  8854                           	callstack 0
  8855                           
  8856 ;; *************** function _OSCILLATOR_Initialize *****************
  8857 ;; Defined at:
  8858 ;;		line 72 in file "mcc_generated_files/mcc.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 8
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_SYSTEM_Initialize
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text51
  8887  003A72                     __ptext51:
  8888                           	callstack 0
  8889  003A72                     _OSCILLATOR_Initialize:
  8890                           	callstack 21
  8891  003A72                     
  8892                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  8893  003A72  0E60               	movlw	96
  8894  003A74  0139               	movlb	57	; () banked
  8895  003A76  6FD9               	movwf	217,b	;volatile
  8896                           
  8897                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  8898  003A78  0E00               	movlw	0
  8899  003A7A  6FDB               	movwf	219,b	;volatile
  8900                           
  8901                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  8902  003A7C  0E00               	movlw	0
  8903  003A7E  6FDD               	movwf	221,b	;volatile
  8904                           
  8905                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  8906  003A80  0E08               	movlw	8
  8907  003A82  6FDF               	movwf	223,b	;volatile
  8908                           
  8909                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  8910  003A84  0E00               	movlw	0
  8911  003A86  6FDE               	movwf	222,b	;volatile
  8912  003A88                     
  8913                           ; BSR set to: 57
  8914  003A88  0012               	return		;funcret
  8915  003A8A                     __end_of_OSCILLATOR_Initialize:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _INTERRUPT_Initialize *****************
  8919 ;; Defined at:
  8920 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  state           1   19[COMRAM] _Bool 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		wreg, status,2
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8935 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8938 ;;Total ram usage:        1 bytes
  8939 ;; Hardware stack levels used: 1
  8940 ;; Hardware stack levels required when called: 8
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_SYSTEM_Initialize
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text52
  8949  003324                     __ptext52:
  8950                           	callstack 0
  8951  003324                     _INTERRUPT_Initialize:
  8952                           	callstack 21
  8953  003324                     
  8954                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  8955  003324  8AD2               	bsf	210,5,c	;volatile
  8956  003326                     
  8957                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  8958  003326  0E00               	movlw	0
  8959  003328  BED2               	btfsc	16338,7,c	;volatile
  8960  00332A  0E01               	movlw	1
  8961  00332C  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  8962  00332E                     
  8963                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  8964  00332E  9ED2               	bcf	16338,7,c	;volatile
  8965                           
  8966                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  8967  003330  0E55               	movlw	85
  8968  003332  6ED4               	movwf	212,c	;volatile
  8969                           
  8970                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  8971  003334  0EAA               	movlw	170
  8972  003336  6ED4               	movwf	212,c	;volatile
  8973  003338                     
  8974                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  8975  003338  90D4               	bcf	212,0,c	;volatile
  8976                           
  8977                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  8978  00333A  0E00               	movlw	0
  8979  00333C  6ED7               	movwf	215,c	;volatile
  8980                           
  8981                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  8982  00333E  0E00               	movlw	0
  8983  003340  6ED6               	movwf	214,c	;volatile
  8984                           
  8985                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  8986  003342  0E08               	movlw	8
  8987  003344  6ED5               	movwf	213,c	;volatile
  8988                           
  8989                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  8990  003346  0E55               	movlw	85
  8991  003348  6ED4               	movwf	212,c	;volatile
  8992                           
  8993                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  8994  00334A  0EAA               	movlw	170
  8995  00334C  6ED4               	movwf	212,c	;volatile
  8996  00334E                     
  8997                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  8998  00334E  80D4               	bsf	212,0,c	;volatile
  8999  003350                     
  9000                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  9001  003350  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  9002  003352  D002               	bra	u1245
  9003  003354  9ED2               	bcf	16338,7,c	;volatile
  9004  003356  D001               	bra	u1246
  9005  003358                     u1245:
  9006  003358  8ED2               	bsf	16338,7,c	;volatile
  9007  00335A                     u1246:
  9008  00335A                     
  9009                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  9010  00335A  0139               	movlb	57	; () banked
  9011  00335C  9983               	bcf	131,4,b	;volatile
  9012  00335E                     
  9013                           ; BSR set to: 57
  9014                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  9015  00335E  9783               	bcf	131,3,b	;volatile
  9016  003360                     
  9017                           ; BSR set to: 57
  9018                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  9019  003360  8F81               	bsf	129,7,b	;volatile
  9020  003362                     
  9021                           ; BSR set to: 57
  9022                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  9023  003362  8B81               	bsf	129,5,b	;volatile
  9024  003364                     
  9025                           ; BSR set to: 57
  9026                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  9027  003364  8D81               	bsf	129,6,b	;volatile
  9028  003366                     
  9029                           ; BSR set to: 57
  9030                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  9031  003366  818A               	bsf	138,0,b	;volatile
  9032  003368                     
  9033                           ; BSR set to: 57
  9034                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  9035  003368  8F88               	bsf	136,7,b	;volatile
  9036  00336A                     
  9037                           ; BSR set to: 57
  9038                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  9039  00336A  9187               	bcf	135,0,b	;volatile
  9040  00336C                     
  9041                           ; BSR set to: 57
  9042                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  9043  00336C  8389               	bsf	137,1,b	;volatile
  9044  00336E                     
  9045                           ; BSR set to: 57
  9046  00336E  0012               	return		;funcret
  9047  003370                     __end_of_INTERRUPT_Initialize:
  9048                           	callstack 0
  9049                           
  9050 ;; *************** function _CLC3_Initialize *****************
  9051 ;; Defined at:
  9052 ;;		line 58 in file "mcc_generated_files/clc3.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used: 1
  9072 ;; Hardware stack levels required when called: 8
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_SYSTEM_Initialize
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text53
  9081  0038A0                     __ptext53:
  9082                           	callstack 0
  9083  0038A0                     _CLC3_Initialize:
  9084                           	callstack 21
  9085  0038A0                     
  9086                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  9087  0038A0  0E00               	movlw	0
  9088  0038A2  013C               	movlb	60	; () banked
  9089  0038A4  6F61               	movwf	97,b	;volatile
  9090                           
  9091                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  9092  0038A6  0E03               	movlw	3
  9093  0038A8  6F62               	movwf	98,b	;volatile
  9094                           
  9095                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  9096  0038AA  0E02               	movlw	2
  9097  0038AC  6F63               	movwf	99,b	;volatile
  9098                           
  9099                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  9100  0038AE  0E00               	movlw	0
  9101  0038B0  6F64               	movwf	100,b	;volatile
  9102                           
  9103                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  9104  0038B2  0E00               	movlw	0
  9105  0038B4  6F65               	movwf	101,b	;volatile
  9106                           
  9107                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  9108  0038B6  0E02               	movlw	2
  9109  0038B8  6F66               	movwf	102,b	;volatile
  9110                           
  9111                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  9112  0038BA  0E08               	movlw	8
  9113  0038BC  6F67               	movwf	103,b	;volatile
  9114                           
  9115                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  9116  0038BE  0E00               	movlw	0
  9117  0038C0  6F68               	movwf	104,b	;volatile
  9118                           
  9119                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  9120  0038C2  0E00               	movlw	0
  9121  0038C4  6F69               	movwf	105,b	;volatile
  9122                           
  9123                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  9124  0038C6  0E85               	movlw	133
  9125  0038C8  6F60               	movwf	96,b	;volatile
  9126  0038CA                     
  9127                           ; BSR set to: 60
  9128  0038CA  0012               	return		;funcret
  9129  0038CC                     __end_of_CLC3_Initialize:
  9130                           	callstack 0
  9131                           
  9132 ;; *************** function _CCP4_Initialize *****************
  9133 ;; Defined at:
  9134 ;;		line 78 in file "mcc_generated_files/ccp4.c"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2, status,0, cstack
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used: 1
  9154 ;; Hardware stack levels required when called: 9
  9155 ;; This function calls:
  9156 ;;		_CCP4_SetCallBack
  9157 ;; This function is called by:
  9158 ;;		_SYSTEM_Initialize
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text54
  9163  0037EA                     __ptext54:
  9164                           	callstack 0
  9165  0037EA                     _CCP4_Initialize:
  9166                           	callstack 20
  9167  0037EA                     
  9168                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
  9169  0037EA  0E83               	movlw	131
  9170  0037EC  6E72               	movwf	114,c	;volatile
  9171                           
  9172                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
  9173  0037EE  0E00               	movlw	0
  9174  0037F0  6E73               	movwf	115,c	;volatile
  9175                           
  9176                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
  9177  0037F2  0E00               	movlw	0
  9178  0037F4  6E71               	movwf	113,c	;volatile
  9179                           
  9180                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
  9181  0037F6  0E00               	movlw	0
  9182  0037F8  6E70               	movwf	112,c	;volatile
  9183  0037FA                     
  9184                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  9185  0037FA  0EBA               	movlw	low _CCP4_DefaultCallBack
  9186  0037FC  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  9187  0037FE  0E37               	movlw	high _CCP4_DefaultCallBack
  9188  003800  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  9189  003802  EC7C  F01D         	call	_CCP4_SetCallBack	;wreg free
  9190  003806                     
  9191                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
  9192  003806  013F               	movlb	63	; () banked
  9193  003808  515E               	movf	94,w,b	;volatile
  9194  00380A  0B3F               	andlw	-193
  9195  00380C  0980               	iorlw	128
  9196  00380E  6F5E               	movwf	94,b	;volatile
  9197  003810                     
  9198                           ; BSR set to: 63
  9199                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
  9200  003810  0139               	movlb	57	; () banked
  9201  003812  91AA               	bcf	170,0,b	;volatile
  9202  003814                     
  9203                           ; BSR set to: 57
  9204                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
  9205  003814  819A               	bsf	154,0,b	;volatile
  9206  003816                     
  9207                           ; BSR set to: 57
  9208  003816  0012               	return		;funcret
  9209  003818                     __end_of_CCP4_Initialize:
  9210                           	callstack 0
  9211                           
  9212 ;; *************** function _CCP4_SetCallBack *****************
  9213 ;; Defined at:
  9214 ;;		line 75 in file "mcc_generated_files/ccp4.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  9217 ;;		 -> CCP4_DefaultCallBack(1), 
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9233 ;;Total ram usage:        2 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 8
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_CCP4_Initialize
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           
  9243                           	psect	text55
  9244  003AF8                     __ptext55:
  9245                           	callstack 0
  9246  003AF8                     _CCP4_SetCallBack:
  9247                           	callstack 20
  9248  003AF8                     
  9249                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
  9250  003AF8  C014  F0F0         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  9251  003AFC  C015  F0F1         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  9252  003B00  0012               	return		;funcret
  9253  003B02                     __end_of_CCP4_SetCallBack:
  9254                           	callstack 0
  9255                           
  9256 ;; *************** function _CCP3_Initialize *****************
  9257 ;; Defined at:
  9258 ;;		line 75 in file "mcc_generated_files/ccp3.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;		None
  9261 ;; Auto vars:     Size  Location     Type
  9262 ;;		None
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      void 
  9265 ;; Registers used:
  9266 ;;		wreg, status,2, status,0, cstack
  9267 ;; Tracked objects:
  9268 ;;		On entry : 0/0
  9269 ;;		On exit  : 0/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;Total ram usage:        0 bytes
  9277 ;; Hardware stack levels used: 1
  9278 ;; Hardware stack levels required when called: 9
  9279 ;; This function calls:
  9280 ;;		_CCP3_SetCallBack
  9281 ;; This function is called by:
  9282 ;;		_SYSTEM_Initialize
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           	psect	text56
  9287  003818                     __ptext56:
  9288                           	callstack 0
  9289  003818                     _CCP3_Initialize:
  9290                           	callstack 20
  9291  003818                     
  9292                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
  9293  003818  0E83               	movlw	131
  9294  00381A  6E76               	movwf	118,c	;volatile
  9295                           
  9296                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
  9297  00381C  0E00               	movlw	0
  9298  00381E  6E77               	movwf	119,c	;volatile
  9299                           
  9300                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
  9301  003820  0E00               	movlw	0
  9302  003822  6E75               	movwf	117,c	;volatile
  9303                           
  9304                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
  9305  003824  0E00               	movlw	0
  9306  003826  6E74               	movwf	116,c	;volatile
  9307  003828                     
  9308                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  9309  003828  0E8A               	movlw	low _CCP3_DefaultCallBack
  9310  00382A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
  9311  00382C  0E37               	movlw	high _CCP3_DefaultCallBack
  9312  00382E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
  9313  003830  EC81  F01D         	call	_CCP3_SetCallBack	;wreg free
  9314  003834                     
  9315                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
  9316  003834  013F               	movlb	63	; () banked
  9317  003836  515E               	movf	94,w,b	;volatile
  9318  003838  0BCF               	andlw	-49
  9319  00383A  0920               	iorlw	32
  9320  00383C  6F5E               	movwf	94,b	;volatile
  9321  00383E                     
  9322                           ; BSR set to: 63
  9323                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
  9324  00383E  0139               	movlb	57	; () banked
  9325  003840  93A9               	bcf	169,1,b	;volatile
  9326  003842                     
  9327                           ; BSR set to: 57
  9328                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
  9329  003842  8399               	bsf	153,1,b	;volatile
  9330  003844                     
  9331                           ; BSR set to: 57
  9332  003844  0012               	return		;funcret
  9333  003846                     __end_of_CCP3_Initialize:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function _CCP3_SetCallBack *****************
  9337 ;; Defined at:
  9338 ;;		line 119 in file "mcc_generated_files/ccp3.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  9341 ;;		 -> CCP3_DefaultCallBack(1), 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;		None
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  1    wreg      void 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;Total ram usage:        2 bytes
  9358 ;; Hardware stack levels used: 1
  9359 ;; Hardware stack levels required when called: 8
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_CCP3_Initialize
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text57
  9368  003B02                     __ptext57:
  9369                           	callstack 0
  9370  003B02                     _CCP3_SetCallBack:
  9371                           	callstack 20
  9372  003B02                     
  9373                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
  9374  003B02  C014  F0F2         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
  9375  003B06  C015  F0F3         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
  9376  003B0A  0012               	return		;funcret
  9377  003B0C                     __end_of_CCP3_SetCallBack:
  9378                           	callstack 0
  9379                           
  9380 ;; *************** function _ADCC_Initialize *****************
  9381 ;; Defined at:
  9382 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;		None
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;		None
  9387 ;; Return value:  Size  Location     Type
  9388 ;;                  1    wreg      void 
  9389 ;; Registers used:
  9390 ;;		wreg, status,2
  9391 ;; Tracked objects:
  9392 ;;		On entry : 0/0
  9393 ;;		On exit  : 0/0
  9394 ;;		Unchanged: 0/0
  9395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9400 ;;Total ram usage:        0 bytes
  9401 ;; Hardware stack levels used: 1
  9402 ;; Hardware stack levels required when called: 8
  9403 ;; This function calls:
  9404 ;;		Nothing
  9405 ;; This function is called by:
  9406 ;;		_SYSTEM_Initialize
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text58
  9411  003274                     __ptext58:
  9412                           	callstack 0
  9413  003274                     _ADCC_Initialize:
  9414                           	callstack 21
  9415  003274                     
  9416                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  9417  003274  0E00               	movlw	0
  9418  003276  013E               	movlb	62	; () banked
  9419  003278  6FDE               	movwf	222,b	;volatile
  9420                           
  9421                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  9422  00327A  0E00               	movlw	0
  9423  00327C  6FDF               	movwf	223,b	;volatile
  9424                           
  9425                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  9426  00327E  0E00               	movlw	0
  9427  003280  6FE0               	movwf	224,b	;volatile
  9428                           
  9429                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  9430  003282  0E00               	movlw	0
  9431  003284  6FE1               	movwf	225,b	;volatile
  9432                           
  9433                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  9434  003286  0E00               	movlw	0
  9435  003288  6FE4               	movwf	228,b	;volatile
  9436                           
  9437                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  9438  00328A  0E00               	movlw	0
  9439  00328C  6FE5               	movwf	229,b	;volatile
  9440                           
  9441                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  9442  00328E  0E00               	movlw	0
  9443  003290  6FEA               	movwf	234,b	;volatile
  9444                           
  9445                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  9446  003292  0E00               	movlw	0
  9447  003294  6FEC               	movwf	236,b	;volatile
  9448                           
  9449                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  9450  003296  0E00               	movlw	0
  9451  003298  6FF1               	movwf	241,b	;volatile
  9452                           
  9453                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
  9454  00329A  0E58               	movlw	88
  9455  00329C  6FF3               	movwf	243,b	;volatile
  9456                           
  9457                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
  9458  00329E  0E02               	movlw	2
  9459  0032A0  6FF4               	movwf	244,b	;volatile
  9460                           
  9461                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  9462  0032A2  0E00               	movlw	0
  9463  0032A4  6FF5               	movwf	245,b	;volatile
  9464                           
  9465                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  9466  0032A6  0E00               	movlw	0
  9467  0032A8  6FF6               	movwf	246,b	;volatile
  9468                           
  9469                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  9470  0032AA  0E00               	movlw	0
  9471  0032AC  6FF7               	movwf	247,b	;volatile
  9472                           
  9473                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  9474  0032AE  0E00               	movlw	0
  9475  0032B0  6FF9               	movwf	249,b	;volatile
  9476                           
  9477                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  9478  0032B2  0E00               	movlw	0
  9479  0032B4  6FFA               	movwf	250,b	;volatile
  9480                           
  9481                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  9482  0032B6  0E00               	movlw	0
  9483  0032B8  6FFB               	movwf	251,b	;volatile
  9484                           
  9485                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  9486  0032BA  0E00               	movlw	0
  9487  0032BC  6FFC               	movwf	252,b	;volatile
  9488                           
  9489                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  9490  0032BE  0E00               	movlw	0
  9491  0032C0  6FFD               	movwf	253,b	;volatile
  9492                           
  9493                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  9494  0032C2  0E00               	movlw	0
  9495  0032C4  6FFE               	movwf	254,b	;volatile
  9496                           
  9497                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  9498  0032C6  0E1F               	movlw	31
  9499  0032C8  6FFF               	movwf	255,b	;volatile
  9500                           
  9501                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  9502  0032CA  0E84               	movlw	132
  9503  0032CC  6FF8               	movwf	248,b	;volatile
  9504  0032CE                     
  9505                           ; BSR set to: 62
  9506  0032CE  0012               	return		;funcret
  9507  0032D0                     __end_of_ADCC_Initialize:
  9508                           	callstack 0
  9509                           
  9510 ;; *************** function _UART1_tx_vect_isr *****************
  9511 ;; Defined at:
  9512 ;;		line 235 in file "mcc_generated_files/uart1.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;Total ram usage:        1 bytes
  9531 ;; Hardware stack levels used: 1
  9532 ;; Hardware stack levels required when called: 5
  9533 ;; This function calls:
  9534 ;;		Absolute function
  9535 ;;		_UART1_Transmit_ISR
  9536 ;; This function is called by:
  9537 ;;		Interrupt level 1
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text59
  9542  0034D4                     __ptext59:
  9543                           	callstack 0
  9544  0034D4                     _UART1_tx_vect_isr:
  9545                           	callstack 18
  9546                           
  9547                           ; BSR set to: 62
  9548                           ;incstack = 0
  9549  0034D4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
  9550  0034DA                     
  9551                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
  9552  0034DA  0100               	movlb	0	; () banked
  9553  0034DC  51FA               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  9554  0034DE  11FB               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  9555  0034E0  B4D8               	btfsc	status,2,c
  9556  0034E2  EF75  F01A         	goto	i1u387_21
  9557  0034E6  EF77  F01A         	goto	i1u387_20
  9558  0034EA                     i1u387_21:
  9559  0034EA  EF83  F01A         	goto	i1l324
  9560  0034EE                     i1u387_20:
  9561  0034EE                     
  9562                           ; BSR set to: 0
  9563                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
  9564  0034EE  D802               	call	i1u388_28
  9565  0034F0  EF83  F01A         	goto	i1u388_29
  9566  0034F4                     i1u388_28:
  9567  0034F4  0005               	push	
  9568  0034F6  6EFA               	movwf	pclath,c
  9569  0034F8  51FA               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  9570  0034FA  6EFD               	movwf	tosl,c
  9571  0034FC  51FB               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  9572  0034FE  6EFE               	movwf	tosh,c
  9573  003500  6AFF               	clrf	tosu,c
  9574  003502  50FA               	movf	pclath,w,c
  9575  003504  0012               	return		;indir
  9576  003506                     i1u388_29:
  9577  003506                     i1l324:
  9578  003506  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
  9579  00350C  0011               	retfie		f
  9580  00350E                     __end_of_UART1_tx_vect_isr:
  9581                           	callstack 0
  9582                           
  9583 ;; *************** function _UART1_Transmit_ISR *****************
  9584 ;; Defined at:
  9585 ;;		line 253 in file "mcc_generated_files/uart1.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used: 1
  9605 ;; Hardware stack levels required when called: 4
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_UART1_Initialize
  9610 ;;		_UART1_tx_vect_isr
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text60
  9615  00344E                     __ptext60:
  9616                           	callstack 0
  9617  00344E                     _UART1_Transmit_ISR:
  9618                           	callstack 18
  9619  00344E                     
  9620                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  9621  00344E  0E08               	movlw	8
  9622  003450  0100               	movlb	0	; () banked
  9623  003452  61FE               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
  9624  003454  EF2E  F01A         	goto	i1u368_21
  9625  003458  EF30  F01A         	goto	i1u368_20
  9626  00345C                     i1u368_21:
  9627  00345C  EF48  F01A         	goto	i1l333
  9628  003460                     i1u368_20:
  9629  003460                     
  9630                           ; BSR set to: 0
  9631                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  9632  003460  0E90               	movlw	low _uart1TxBuffer
  9633  003462  2444               	addwf	_uart1TxTail^0,w,c	;volatile
  9634  003464  6ED9               	movwf	fsr2l,c
  9635  003466  6ADA               	clrf	fsr2h,c
  9636  003468  0E00               	movlw	high _uart1TxBuffer
  9637  00346A  22DA               	addwfc	fsr2h,f,c
  9638  00346C  50DF               	movf	indf2,w,c
  9639  00346E  013D               	movlb	61	; () banked
  9640  003470  6FEA               	movwf	234,b	;volatile
  9641  003472                     
  9642                           ; BSR set to: 61
  9643  003472  2A44               	incf	_uart1TxTail^0,f,c	;volatile
  9644  003474                     
  9645                           ; BSR set to: 61
  9646                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  9647  003474  0E07               	movlw	7
  9648  003476  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
  9649  003478  EF40  F01A         	goto	i1u369_21
  9650  00347C  EF42  F01A         	goto	i1u369_20
  9651  003480                     i1u369_21:
  9652  003480  EF44  F01A         	goto	i1l5159
  9653  003484                     i1u369_20:
  9654  003484                     
  9655                           ; BSR set to: 61
  9656                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
  9657  003484  0E00               	movlw	0
  9658  003486  6E44               	movwf	_uart1TxTail^0,c	;volatile
  9659  003488                     i1l5159:
  9660                           
  9661                           ; BSR set to: 61
  9662                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
  9663  003488  0100               	movlb	0	; () banked
  9664  00348A  2BFE               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  9665                           
  9666                           ;mcc_generated_files/uart1.c: 264:     }
  9667  00348C  EF4A  F01A         	goto	i1l336
  9668  003490                     i1l333:
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
  9672  003490  0139               	movlb	57	; () banked
  9673  003492  9993               	bcf	147,4,b	;volatile
  9674  003494                     i1l336:
  9675  003494  0012               	return		;funcret
  9676  003496                     __end_of_UART1_Transmit_ISR:
  9677                           	callstack 0
  9678                           
  9679 ;; *************** function _UART1_rx_vect_isr *****************
  9680 ;; Defined at:
  9681 ;;		line 243 in file "mcc_generated_files/uart1.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;		None
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;		None
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      void 
  9688 ;; Registers used:
  9689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;Total ram usage:        1 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 7
  9702 ;; This function calls:
  9703 ;;		Absolute function
  9704 ;;		_UART1_Receive_ISR
  9705 ;; This function is called by:
  9706 ;;		Interrupt level 1
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text61
  9711  003510                     __ptext61:
  9712                           	callstack 0
  9713  003510                     _UART1_rx_vect_isr:
  9714                           	callstack 16
  9715                           
  9716                           ;incstack = 0
  9717  003510  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
  9718  003516                     
  9719                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
  9720  003516  0100               	movlb	0	; () banked
  9721  003518  51FC               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  9722  00351A  11FD               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  9723  00351C  B4D8               	btfsc	status,2,c
  9724  00351E  EF93  F01A         	goto	i1u389_21
  9725  003522  EF95  F01A         	goto	i1u389_20
  9726  003526                     i1u389_21:
  9727  003526  EFA1  F01A         	goto	i1l330
  9728  00352A                     i1u389_20:
  9729  00352A                     
  9730                           ; BSR set to: 0
  9731                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
  9732  00352A  D802               	call	i1u390_28
  9733  00352C  EFA1  F01A         	goto	i1u390_29
  9734  003530                     i1u390_28:
  9735  003530  0005               	push	
  9736  003532  6EFA               	movwf	pclath,c
  9737  003534  51FC               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  9738  003536  6EFD               	movwf	tosl,c
  9739  003538  51FD               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  9740  00353A  6EFE               	movwf	tosh,c
  9741  00353C  6AFF               	clrf	tosu,c
  9742  00353E  50FA               	movf	pclath,w,c
  9743  003540  0012               	return		;indir
  9744  003542                     i1u390_29:
  9745  003542                     i1l330:
  9746  003542  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
  9747  003548  0011               	retfie		f
  9748  00354A                     __end_of_UART1_rx_vect_isr:
  9749                           	callstack 0
  9750                           
  9751 ;; *************** function _UART1_Receive_ISR *****************
  9752 ;; Defined at:
  9753 ;;		line 273 in file "mcc_generated_files/uart1.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;		None
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;                  1    wreg      void 
  9760 ;; Registers used:
  9761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 0/0
  9764 ;;		On exit  : 0/0
  9765 ;;		Unchanged: 0/0
  9766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;Total ram usage:        0 bytes
  9772 ;; Hardware stack levels used: 1
  9773 ;; Hardware stack levels required when called: 6
  9774 ;; This function calls:
  9775 ;;		Absolute function
  9776 ;;		_UART1_DefaultErrorHandler
  9777 ;;		_UART1_DefaultFramingErrorHandler
  9778 ;;		_UART1_DefaultOverrunErrorHandler
  9779 ;;		_UART1_RxDataHandler
  9780 ;; This function is called by:
  9781 ;;		_UART1_Initialize
  9782 ;;		_UART1_rx_vect_isr
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           	psect	text62
  9787  002E8A                     __ptext62:
  9788                           	callstack 0
  9789  002E8A                     _UART1_Receive_ISR:
  9790                           	callstack 16
  9791  002E8A                     
  9792                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  9793  002E8A  0E80               	movlw	low _uart1RxStatusBuffer
  9794  002E8C  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9795  002E8E  6ED9               	movwf	fsr2l,c
  9796  002E90  6ADA               	clrf	fsr2h,c
  9797  002E92  0E00               	movlw	high _uart1RxStatusBuffer
  9798  002E94  22DA               	addwfc	fsr2h,f,c
  9799  002E96  0E00               	movlw	0
  9800  002E98  6EDF               	movwf	indf2,c
  9801  002E9A                     
  9802                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
  9803  002E9A  013D               	movlb	61	; () banked
  9804  002E9C  A7F9               	btfss	249,3,b	;volatile
  9805  002E9E  EF53  F017         	goto	i1u370_21
  9806  002EA2  EF55  F017         	goto	i1u370_20
  9807  002EA6                     i1u370_21:
  9808  002EA6  EF69  F017         	goto	i1l5169
  9809  002EAA                     i1u370_20:
  9810  002EAA                     
  9811                           ; BSR set to: 61
  9812                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  9813  002EAA  0E80               	movlw	low _uart1RxStatusBuffer
  9814  002EAC  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9815  002EAE  6ED9               	movwf	fsr2l,c
  9816  002EB0  6ADA               	clrf	fsr2h,c
  9817  002EB2  0E00               	movlw	high _uart1RxStatusBuffer
  9818  002EB4  22DA               	addwfc	fsr2h,f,c
  9819  002EB6  0100               	movlb	0	; () banked
  9820  002EB8  82DF               	bsf	indf2,1,c
  9821  002EBA                     
  9822                           ; BSR set to: 0
  9823                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
  9824  002EBA  D802               	call	i1u371_28
  9825  002EBC  EF69  F017         	goto	i1u371_29
  9826  002EC0                     i1u371_28:
  9827  002EC0  0005               	push	
  9828  002EC2  6EFA               	movwf	pclath,c
  9829  002EC4  51F8               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  9830  002EC6  6EFD               	movwf	tosl,c
  9831  002EC8  51F9               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  9832  002ECA  6EFE               	movwf	tosh,c
  9833  002ECC  6AFF               	clrf	tosu,c
  9834  002ECE  50FA               	movf	pclath,w,c
  9835  002ED0  0012               	return		;indir
  9836  002ED2                     i1u371_29:
  9837  002ED2                     i1l5169:
  9838                           
  9839                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
  9840  002ED2  013D               	movlb	61	; () banked
  9841  002ED4  A3F9               	btfss	249,1,b	;volatile
  9842  002ED6  EF6F  F017         	goto	i1u372_21
  9843  002EDA  EF71  F017         	goto	i1u372_20
  9844  002EDE                     i1u372_21:
  9845  002EDE  EF85  F017         	goto	i1l5175
  9846  002EE2                     i1u372_20:
  9847  002EE2                     
  9848                           ; BSR set to: 61
  9849                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  9850  002EE2  0E80               	movlw	low _uart1RxStatusBuffer
  9851  002EE4  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9852  002EE6  6ED9               	movwf	fsr2l,c
  9853  002EE8  6ADA               	clrf	fsr2h,c
  9854  002EEA  0E00               	movlw	high _uart1RxStatusBuffer
  9855  002EEC  22DA               	addwfc	fsr2h,f,c
  9856  002EEE  0100               	movlb	0	; () banked
  9857  002EF0  84DF               	bsf	indf2,2,c
  9858  002EF2                     
  9859                           ; BSR set to: 0
  9860                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
  9861  002EF2  D802               	call	i1u373_28
  9862  002EF4  EF85  F017         	goto	i1u373_29
  9863  002EF8                     i1u373_28:
  9864  002EF8  0005               	push	
  9865  002EFA  6EFA               	movwf	pclath,c
  9866  002EFC  51F6               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  9867  002EFE  6EFD               	movwf	tosl,c
  9868  002F00  51F7               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  9869  002F02  6EFE               	movwf	tosh,c
  9870  002F04  6AFF               	clrf	tosu,c
  9871  002F06  50FA               	movf	pclath,w,c
  9872  002F08  0012               	return		;indir
  9873  002F0A                     i1u373_29:
  9874  002F0A                     i1l5175:
  9875                           
  9876                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
  9877  002F0A  0E80               	movlw	low _uart1RxStatusBuffer
  9878  002F0C  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9879  002F0E  6ED9               	movwf	fsr2l,c
  9880  002F10  6ADA               	clrf	fsr2h,c
  9881  002F12  0E00               	movlw	high _uart1RxStatusBuffer
  9882  002F14  22DA               	addwfc	fsr2h,f,c
  9883  002F16  50DF               	movf	indf2,w,c
  9884  002F18  B4D8               	btfsc	status,2,c
  9885  002F1A  EF91  F017         	goto	i1u374_21
  9886  002F1E  EF93  F017         	goto	i1u374_20
  9887  002F22                     i1u374_21:
  9888  002F22  EFA2  F017         	goto	i1l5179
  9889  002F26                     i1u374_20:
  9890  002F26                     
  9891                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
  9892  002F26  D802               	call	i1u375_28
  9893  002F28  EFA0  F017         	goto	i1u375_29
  9894  002F2C                     i1u375_28:
  9895  002F2C  0005               	push	
  9896  002F2E  6EFA               	movwf	pclath,c
  9897  002F30  0100               	movlb	0	; () banked
  9898  002F32  51F4               	movf	_UART1_ErrorHandler& (0+255),w,b
  9899  002F34  6EFD               	movwf	tosl,c
  9900  002F36  51F5               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  9901  002F38  6EFE               	movwf	tosh,c
  9902  002F3A  6AFF               	clrf	tosu,c
  9903  002F3C  50FA               	movf	pclath,w,c
  9904  002F3E  0012               	return		;indir
  9905  002F40                     i1u375_29:
  9906                           
  9907                           ;mcc_generated_files/uart1.c: 290:     } else {
  9908  002F40  EFA4  F017         	goto	i1l343
  9909  002F44                     i1l5179:
  9910                           
  9911                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
  9912  002F44  EC66  F01C         	call	_UART1_RxDataHandler	;wreg free
  9913  002F48                     i1l343:
  9914  002F48  0012               	return		;funcret
  9915  002F4A                     __end_of_UART1_Receive_ISR:
  9916                           	callstack 0
  9917                           
  9918 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  9919 ;; Defined at:
  9920 ;;		line 309 in file "mcc_generated_files/uart1.c"
  9921 ;; Parameters:    Size  Location     Type
  9922 ;;		None
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;		None
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      void 
  9927 ;; Registers used:
  9928 ;;		None
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;Total ram usage:        0 bytes
  9939 ;; Hardware stack levels used: 1
  9940 ;; Hardware stack levels required when called: 4
  9941 ;; This function calls:
  9942 ;;		Nothing
  9943 ;; This function is called by:
  9944 ;;		_UART1_Initialize
  9945 ;;		_UART1_Receive_ISR
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           	psect	text63
  9950  003B18                     __ptext63:
  9951                           	callstack 0
  9952  003B18                     _UART1_DefaultOverrunErrorHandler:
  9953                           	callstack 17
  9954  003B18  0012               	return		;funcret
  9955  003B1A                     __end_of_UART1_DefaultOverrunErrorHandler:
  9956                           	callstack 0
  9957                           
  9958 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  9959 ;; Defined at:
  9960 ;;		line 307 in file "mcc_generated_files/uart1.c"
  9961 ;; Parameters:    Size  Location     Type
  9962 ;;		None
  9963 ;; Auto vars:     Size  Location     Type
  9964 ;;		None
  9965 ;; Return value:  Size  Location     Type
  9966 ;;                  1    wreg      void 
  9967 ;; Registers used:
  9968 ;;		None
  9969 ;; Tracked objects:
  9970 ;;		On entry : 0/0
  9971 ;;		On exit  : 0/0
  9972 ;;		Unchanged: 0/0
  9973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9978 ;;Total ram usage:        0 bytes
  9979 ;; Hardware stack levels used: 1
  9980 ;; Hardware stack levels required when called: 4
  9981 ;; This function calls:
  9982 ;;		Nothing
  9983 ;; This function is called by:
  9984 ;;		_UART1_Initialize
  9985 ;;		_UART1_Receive_ISR
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text64
  9990  003B1A                     __ptext64:
  9991                           	callstack 0
  9992  003B1A                     _UART1_DefaultFramingErrorHandler:
  9993                           	callstack 17
  9994  003B1A  0012               	return		;funcret
  9995  003B1C                     __end_of_UART1_DefaultFramingErrorHandler:
  9996                           	callstack 0
  9997                           
  9998 ;; *************** function _UART1_DefaultErrorHandler *****************
  9999 ;; Defined at:
 10000 ;;		line 311 in file "mcc_generated_files/uart1.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;		None
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10018 ;;Total ram usage:        0 bytes
 10019 ;; Hardware stack levels used: 1
 10020 ;; Hardware stack levels required when called: 5
 10021 ;; This function calls:
 10022 ;;		_UART1_RxDataHandler
 10023 ;; This function is called by:
 10024 ;;		_UART1_Initialize
 10025 ;;		_UART1_Receive_ISR
 10026 ;; This function uses a non-reentrant model
 10027 ;;
 10028                           
 10029                           	psect	text65
 10030  003B0C                     __ptext65:
 10031                           	callstack 0
 10032  003B0C                     _UART1_DefaultErrorHandler:
 10033                           	callstack 16
 10034  003B0C                     
 10035                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 10036  003B0C  EC66  F01C         	call	_UART1_RxDataHandler	;wreg free
 10037  003B10  0012               	return		;funcret
 10038  003B12                     __end_of_UART1_DefaultErrorHandler:
 10039                           	callstack 0
 10040                           
 10041 ;; *************** function _UART1_RxDataHandler *****************
 10042 ;; Defined at:
 10043 ;;		line 297 in file "mcc_generated_files/uart1.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;		None
 10046 ;; Auto vars:     Size  Location     Type
 10047 ;;		None
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  1    wreg      void 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10052 ;; Tracked objects:
 10053 ;;		On entry : 0/0
 10054 ;;		On exit  : 0/0
 10055 ;;		Unchanged: 0/0
 10056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;Total ram usage:        0 bytes
 10062 ;; Hardware stack levels used: 1
 10063 ;; Hardware stack levels required when called: 4
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		_UART1_Receive_ISR
 10068 ;;		_UART1_DefaultErrorHandler
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text66
 10073  0038CC                     __ptext66:
 10074                           	callstack 0
 10075  0038CC                     _UART1_RxDataHandler:
 10076                           	callstack 17
 10077  0038CC                     
 10078                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 10079  0038CC  0E88               	movlw	low _uart1RxBuffer
 10080  0038CE  2443               	addwf	_uart1RxHead^0,w,c	;volatile
 10081  0038D0  6ED9               	movwf	fsr2l,c
 10082  0038D2  6ADA               	clrf	fsr2h,c
 10083  0038D4  0E00               	movlw	high _uart1RxBuffer
 10084  0038D6  22DA               	addwfc	fsr2h,f,c
 10085  0038D8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 10086  0038DE  2A43               	incf	_uart1RxHead^0,f,c	;volatile
 10087  0038E0                     
 10088                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 10089  0038E0  0E07               	movlw	7
 10090  0038E2  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
 10091  0038E4  EF76  F01C         	goto	i1u267_21
 10092  0038E8  EF78  F01C         	goto	i1u267_20
 10093  0038EC                     i1u267_21:
 10094  0038EC  EF7A  F01C         	goto	i1l4399
 10095  0038F0                     i1u267_20:
 10096  0038F0                     
 10097                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 10098  0038F0  0E00               	movlw	0
 10099  0038F2  6E43               	movwf	_uart1RxHead^0,c	;volatile
 10100  0038F4                     i1l4399:
 10101                           
 10102                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 10103  0038F4  2A41               	incf	_uart1RxCount^0,f,c	;volatile
 10104  0038F6  0012               	return		;funcret
 10105  0038F8                     __end_of_UART1_RxDataHandler:
 10106                           	callstack 0
 10107                           
 10108 ;; *************** function _TMR4_ISR *****************
 10109 ;; Defined at:
 10110 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      void 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10128 ;;Total ram usage:        1 bytes
 10129 ;; Hardware stack levels used: 1
 10130 ;; Hardware stack levels required when called: 6
 10131 ;; This function calls:
 10132 ;;		_TMR4_CallBack
 10133 ;; This function is called by:
 10134 ;;		Interrupt level 1
 10135 ;; This function uses a non-reentrant model
 10136 ;;
 10137                           
 10138                           	psect	text67
 10139  003584                     __ptext67:
 10140                           	callstack 0
 10141  003584                     _TMR4_ISR:
 10142                           	callstack 17
 10143                           
 10144                           ;incstack = 0
 10145  003584  006F FF60  F013    	movff	status,??_TMR4_ISR
 10146  00358A                     
 10147                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 10148  00358A  0139               	movlb	57	; () banked
 10149  00358C  91A7               	bcf	167,0,b	;volatile
 10150  00358E                     
 10151                           ; BSR set to: 57
 10152                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 10153  00358E  4A3C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 10154  003590  2A3D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 10155  003592  503D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 10156  003594  E109               	bnz	i1u395_20
 10157  003596  0E0A               	movlw	10
 10158  003598  5C3C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 10159  00359A  A0D8               	btfss	status,0,c
 10160  00359C  EFD2  F01A         	goto	i1u395_21
 10161  0035A0  EFD4  F01A         	goto	i1u395_20
 10162  0035A4                     i1u395_21:
 10163  0035A4  EFDA  F01A         	goto	i1l688
 10164  0035A8                     i1u395_20:
 10165  0035A8                     
 10166                           ; BSR set to: 57
 10167                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 10168  0035A8  EC23  F01C         	call	_TMR4_CallBack	;wreg free
 10169  0035AC                     
 10170                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 10171  0035AC  0E00               	movlw	0
 10172  0035AE  6E3D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 10173  0035B0  0E00               	movlw	0
 10174  0035B2  6E3C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 10175  0035B4                     i1l688:
 10176  0035B4  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 10177  0035BA  0011               	retfie		f
 10178  0035BC                     __end_of_TMR4_ISR:
 10179                           	callstack 0
 10180                           
 10181 ;; *************** function _TMR4_CallBack *****************
 10182 ;; Defined at:
 10183 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;		None
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;		None
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  1    wreg      void 
 10190 ;; Registers used:
 10191 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;Total ram usage:        0 bytes
 10202 ;; Hardware stack levels used: 1
 10203 ;; Hardware stack levels required when called: 5
 10204 ;; This function calls:
 10205 ;;		Absolute function
 10206 ;;		_TMR4_10msISR
 10207 ;;		_TMR4_DefaultInterruptHandler
 10208 ;; This function is called by:
 10209 ;;		_TMR4_ISR
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text68
 10214  003846                     __ptext68:
 10215                           	callstack 0
 10216  003846                     _TMR4_CallBack:
 10217                           	callstack 17
 10218  003846                     
 10219                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 10220  003846  0100               	movlb	0	; () banked
 10221  003848  51E8               	movf	_TMR4_InterruptHandler& (0+255),w,b
 10222  00384A  11E9               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 10223  00384C  B4D8               	btfsc	status,2,c
 10224  00384E  EF2B  F01C         	goto	i1u379_21
 10225  003852  EF2D  F01C         	goto	i1u379_20
 10226  003856                     i1u379_21:
 10227  003856  EF39  F01C         	goto	i1l692
 10228  00385A                     i1u379_20:
 10229  00385A                     
 10230                           ; BSR set to: 0
 10231                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 10232  00385A  D802               	call	i1u380_28
 10233  00385C  EF39  F01C         	goto	i1u380_29
 10234  003860                     i1u380_28:
 10235  003860  0005               	push	
 10236  003862  6EFA               	movwf	pclath,c
 10237  003864  51E8               	movf	_TMR4_InterruptHandler& (0+255),w,b
 10238  003866  6EFD               	movwf	tosl,c
 10239  003868  51E9               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 10240  00386A  6EFE               	movwf	tosh,c
 10241  00386C  6AFF               	clrf	tosu,c
 10242  00386E  50FA               	movf	pclath,w,c
 10243  003870  0012               	return		;indir
 10244  003872                     i1u380_29:
 10245  003872                     i1l692:
 10246  003872  0012               	return		;funcret
 10247  003874                     __end_of_TMR4_CallBack:
 10248                           	callstack 0
 10249                           
 10250 ;; *************** function _TMR4_10msISR *****************
 10251 ;; Defined at:
 10252 ;;		line 63 in file "main.c"
 10253 ;; Parameters:    Size  Location     Type
 10254 ;;		None
 10255 ;; Auto vars:     Size  Location     Type
 10256 ;;		None
 10257 ;; Return value:  Size  Location     Type
 10258 ;;                  1    wreg      void 
 10259 ;; Registers used:
 10260 ;;		status,2, status,0
 10261 ;; Tracked objects:
 10262 ;;		On entry : 0/0
 10263 ;;		On exit  : 0/0
 10264 ;;		Unchanged: 0/0
 10265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10270 ;;Total ram usage:        0 bytes
 10271 ;; Hardware stack levels used: 1
 10272 ;; Hardware stack levels required when called: 4
 10273 ;; This function calls:
 10274 ;;		Nothing
 10275 ;; This function is called by:
 10276 ;;		_main
 10277 ;;		_TMR4_CallBack
 10278 ;; This function uses a non-reentrant model
 10279 ;;
 10280                           
 10281                           	psect	text69
 10282  003B12                     __ptext69:
 10283                           	callstack 0
 10284  003B12                     _TMR4_10msISR:
 10285                           	callstack 17
 10286  003B12                     
 10287                           ;main.c: 64:     ++cycle10ms;
 10288  003B12  0100               	movlb	0	; () banked
 10289  003B14  2BC6               	incf	_cycle10ms& (0+255),f,b	;volatile
 10290  003B16                     
 10291                           ; BSR set to: 0
 10292  003B16  0012               	return		;funcret
 10293  003B18                     __end_of_TMR4_10msISR:
 10294                           	callstack 0
 10295                           
 10296 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 10297 ;; Defined at:
 10298 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;		None
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;		None
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  1    wreg      void 
 10305 ;; Registers used:
 10306 ;;		None
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10316 ;;Total ram usage:        0 bytes
 10317 ;; Hardware stack levels used: 1
 10318 ;; Hardware stack levels required when called: 4
 10319 ;; This function calls:
 10320 ;;		Nothing
 10321 ;; This function is called by:
 10322 ;;		_TMR4_Initialize
 10323 ;;		_TMR4_CallBack
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           	psect	text70
 10328  003B1C                     __ptext70:
 10329                           	callstack 0
 10330  003B1C                     _TMR4_DefaultInterruptHandler:
 10331                           	callstack 17
 10332  003B1C  0012               	return		;funcret
 10333  003B1E                     __end_of_TMR4_DefaultInterruptHandler:
 10334                           	callstack 0
 10335                           
 10336 ;; *************** function _Default_ISR *****************
 10337 ;; Defined at:
 10338 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;		None
 10341 ;; Auto vars:     Size  Location     Type
 10342 ;;		None
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  1    wreg      void 
 10345 ;; Registers used:
 10346 ;;		None
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;Total ram usage:        0 bytes
 10357 ;; Hardware stack levels used: 1
 10358 ;; This function calls:
 10359 ;;		Nothing
 10360 ;; This function is called by:
 10361 ;;		Interrupt level 2
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           	psect	text71
 10366  003B20                     __ptext71:
 10367                           	callstack 0
 10368  003B20                     _Default_ISR:
 10369                           	callstack 19
 10370  003B20  0011               	retfie		f
 10371  003B22                     __end_of_Default_ISR:
 10372                           	callstack 0
 10373                           
 10374 ;; *************** function _CCP3_CaptureISR *****************
 10375 ;; Defined at:
 10376 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;		None
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 10381 ;; Return value:  Size  Location     Type
 10382 ;;                  1    wreg      void 
 10383 ;; Registers used:
 10384 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10385 ;; Tracked objects:
 10386 ;;		On entry : 0/0
 10387 ;;		On exit  : 0/0
 10388 ;;		Unchanged: 0/0
 10389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;Total ram usage:        2 bytes
 10395 ;; Hardware stack levels used: 1
 10396 ;; Hardware stack levels required when called: 1
 10397 ;; This function calls:
 10398 ;;		Absolute function
 10399 ;;		_CCP3_DefaultCallBack
 10400 ;; This function is called by:
 10401 ;;		Interrupt level 2
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text72
 10406  00368C                     __ptext72:
 10407                           	callstack 0
 10408  00368C                     _CCP3_CaptureISR:
 10409                           	callstack 18
 10410  00368C                     
 10411                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 10412  00368C  0139               	movlb	57	; () banked
 10413  00368E  93A9               	bcf	169,1,b	;volatile
 10414                           
 10415                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 10416  003690  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 10417                           
 10418                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 10419  003696  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 10420  00369C                     
 10421                           ; BSR set to: 57
 10422                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 10423  00369C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 10424  0036A0  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 10425  0036A4  D802               	call	i2u391_48
 10426  0036A6  EF5F  F01B         	goto	i2u391_49
 10427  0036AA                     i2u391_48:
 10428  0036AA  0005               	push	
 10429  0036AC  6EFA               	movwf	pclath,c
 10430  0036AE  0100               	movlb	0	; () banked
 10431  0036B0  51F2               	movf	_CCP3_CallBack& (0+255),w,b
 10432  0036B2  6EFD               	movwf	tosl,c
 10433  0036B4  51F3               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 10434  0036B6  6EFE               	movwf	tosh,c
 10435  0036B8  6AFF               	clrf	tosu,c
 10436  0036BA  50FA               	movf	pclath,w,c
 10437  0036BC  0012               	return		;indir
 10438  0036BE                     i2u391_49:
 10439  0036BE  0011               	retfie		f
 10440  0036C0                     __end_of_CCP3_CaptureISR:
 10441                           	callstack 0
 10442                           
 10443 ;; *************** function _CCP3_DefaultCallBack *****************
 10444 ;; Defined at:
 10445 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;  capturedValu    2    0[COMRAM] unsigned short 
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;		None
 10450 ;; Return value:  Size  Location     Type
 10451 ;;                  1    wreg      void 
 10452 ;; Registers used:
 10453 ;;		wreg, status,2, status,0
 10454 ;; Tracked objects:
 10455 ;;		On entry : 0/0
 10456 ;;		On exit  : 0/0
 10457 ;;		Unchanged: 0/0
 10458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;Total ram usage:        2 bytes
 10464 ;; Hardware stack levels used: 1
 10465 ;; This function calls:
 10466 ;;		Nothing
 10467 ;; This function is called by:
 10468 ;;		_CCP3_Initialize
 10469 ;;		_CCP3_CaptureISR
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           	psect	text73
 10474  00378A                     __ptext73:
 10475                           	callstack 0
 10476  00378A                     _CCP3_DefaultCallBack:
 10477                           	callstack 18
 10478  00378A                     
 10479                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 10480  00378A  AECD               	btfss	205,7,c	;volatile
 10481  00378C  EFCA  F01B         	goto	i2u376_41
 10482  003790  EFCC  F01B         	goto	i2u376_40
 10483  003794                     i2u376_41:
 10484  003794  EFD2  F01B         	goto	i2l5185
 10485  003798                     i2u376_40:
 10486  003798                     
 10487                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 10488  003798  C001  F0C2         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 10489  00379C  C002  F0C3         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 10490                           
 10491                           ;mcc_generated_files/ccp3.c: 69:     } else {
 10492  0037A0  EFDC  F01B         	goto	i2l438
 10493  0037A4                     i2l5185:
 10494                           
 10495                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 10496  0037A4  0100               	movlb	0	; () banked
 10497  0037A6  51C2               	movf	_distLeftM& (0+255),w,b
 10498  0037A8  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 10499  0037AA  6FC4               	movwf	_distLeft& (0+255),b	;volatile
 10500  0037AC  51C3               	movf	(_distLeftM+1)& (0+255),w,b
 10501  0037AE  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 10502  0037B0  6FC5               	movwf	(_distLeft+1)& (0+255),b	;volatile
 10503  0037B2                     
 10504                           ; BSR set to: 0
 10505                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 10506  0037B2  90D8               	bcf	status,0,c
 10507  0037B4  33C5               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 10508  0037B6  33C4               	rrcf	_distLeft& (0+255),f,b	;volatile
 10509  0037B8                     i2l438:
 10510  0037B8  0012               	return		;funcret
 10511  0037BA                     __end_of_CCP3_DefaultCallBack:
 10512                           	callstack 0
 10513                           
 10514 ;; *************** function _CCP4_CaptureISR *****************
 10515 ;; Defined at:
 10516 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 10517 ;; Parameters:    Size  Location     Type
 10518 ;;		None
 10519 ;; Auto vars:     Size  Location     Type
 10520 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 10521 ;; Return value:  Size  Location     Type
 10522 ;;                  1    wreg      void 
 10523 ;; Registers used:
 10524 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10525 ;; Tracked objects:
 10526 ;;		On entry : 0/0
 10527 ;;		On exit  : 0/0
 10528 ;;		Unchanged: 0/0
 10529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10534 ;;Total ram usage:        2 bytes
 10535 ;; Hardware stack levels used: 1
 10536 ;; Hardware stack levels required when called: 1
 10537 ;; This function calls:
 10538 ;;		Absolute function
 10539 ;;		_CCP4_DefaultCallBack
 10540 ;; This function is called by:
 10541 ;;		Interrupt level 2
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text74
 10546  0036C0                     __ptext74:
 10547                           	callstack 0
 10548  0036C0                     _CCP4_CaptureISR:
 10549                           	callstack 18
 10550  0036C0                     
 10551                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 10552  0036C0  0139               	movlb	57	; () banked
 10553  0036C2  91AA               	bcf	170,0,b	;volatile
 10554                           
 10555                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 10556  0036C4  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 10557                           
 10558                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 10559  0036CA  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 10560  0036D0                     
 10561                           ; BSR set to: 57
 10562                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 10563  0036D0  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 10564  0036D4  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 10565  0036D8  D802               	call	i2u392_48
 10566  0036DA  EF79  F01B         	goto	i2u392_49
 10567  0036DE                     i2u392_48:
 10568  0036DE  0005               	push	
 10569  0036E0  6EFA               	movwf	pclath,c
 10570  0036E2  0100               	movlb	0	; () banked
 10571  0036E4  51F0               	movf	_CCP4_CallBack& (0+255),w,b
 10572  0036E6  6EFD               	movwf	tosl,c
 10573  0036E8  51F1               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 10574  0036EA  6EFE               	movwf	tosh,c
 10575  0036EC  6AFF               	clrf	tosu,c
 10576  0036EE  50FA               	movf	pclath,w,c
 10577  0036F0  0012               	return		;indir
 10578  0036F2                     i2u392_49:
 10579  0036F2  0011               	retfie		f
 10580  0036F4                     __end_of_CCP4_CaptureISR:
 10581                           	callstack 0
 10582                           
 10583 ;; *************** function _CCP4_DefaultCallBack *****************
 10584 ;; Defined at:
 10585 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  capturedValu    2    4[COMRAM] unsigned short 
 10588 ;; Auto vars:     Size  Location     Type
 10589 ;;		None
 10590 ;; Return value:  Size  Location     Type
 10591 ;;                  1    wreg      void 
 10592 ;; Registers used:
 10593 ;;		wreg, status,2, status,0
 10594 ;; Tracked objects:
 10595 ;;		On entry : 0/0
 10596 ;;		On exit  : 0/0
 10597 ;;		Unchanged: 0/0
 10598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10603 ;;Total ram usage:        2 bytes
 10604 ;; Hardware stack levels used: 1
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_CCP4_Initialize
 10609 ;;		_CCP4_CaptureISR
 10610 ;; This function uses a non-reentrant model
 10611 ;;
 10612                           
 10613                           	psect	text75
 10614  0037BA                     __ptext75:
 10615                           	callstack 0
 10616  0037BA                     _CCP4_DefaultCallBack:
 10617                           	callstack 18
 10618  0037BA                     
 10619                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 10620  0037BA  ACCD               	btfss	205,6,c	;volatile
 10621  0037BC  EFE2  F01B         	goto	i2u377_41
 10622  0037C0  EFE4  F01B         	goto	i2u377_40
 10623  0037C4                     i2u377_41:
 10624  0037C4  EFEA  F01B         	goto	i2l5193
 10625  0037C8                     i2u377_40:
 10626  0037C8                     
 10627                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 10628  0037C8  C005  F0BE         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 10629  0037CC  C006  F0BF         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 10630                           
 10631                           ;mcc_generated_files/ccp4.c: 70:     } else {
 10632  0037D0  EFF4  F01B         	goto	i2l476
 10633  0037D4                     i2l5193:
 10634                           
 10635                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 10636  0037D4  0100               	movlb	0	; () banked
 10637  0037D6  51BE               	movf	_distRightM& (0+255),w,b
 10638  0037D8  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 10639  0037DA  6FC0               	movwf	_distRight& (0+255),b	;volatile
 10640  0037DC  51BF               	movf	(_distRightM+1)& (0+255),w,b
 10641  0037DE  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 10642  0037E0  6FC1               	movwf	(_distRight+1)& (0+255),b	;volatile
 10643  0037E2                     
 10644                           ; BSR set to: 0
 10645                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 10646  0037E2  90D8               	bcf	status,0,c
 10647  0037E4  33C1               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 10648  0037E6  33C0               	rrcf	_distRight& (0+255),f,b	;volatile
 10649  0037E8                     i2l476:
 10650  0037E8  0012               	return		;funcret
 10651  0037EA                     __end_of_CCP4_DefaultCallBack:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _TMR5_GATE_ISR *****************
 10655 ;; Defined at:
 10656 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;		None
 10659 ;; Auto vars:     Size  Location     Type
 10660 ;;		None
 10661 ;; Return value:  Size  Location     Type
 10662 ;;                  1    wreg      void 
 10663 ;; Registers used:
 10664 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 10665 ;; Tracked objects:
 10666 ;;		On entry : 0/0
 10667 ;;		On exit  : 0/0
 10668 ;;		Unchanged: 0/0
 10669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;Total ram usage:        0 bytes
 10675 ;; Hardware stack levels used: 1
 10676 ;; Hardware stack levels required when called: 3
 10677 ;; This function calls:
 10678 ;;		Absolute function
 10679 ;;		_TMR5_DefaultGateInterruptHandler
 10680 ;; This function is called by:
 10681 ;;		Interrupt level 2
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text76
 10686  003728                     __ptext76:
 10687                           	callstack 0
 10688  003728                     _TMR5_GATE_ISR:
 10689                           	callstack 16
 10690  003728                     
 10691                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 10692  003728  0139               	movlb	57	; () banked
 10693  00372A  9FA8               	bcf	168,7,b	;volatile
 10694  00372C                     
 10695                           ; BSR set to: 57
 10696                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 10697  00372C  0100               	movlb	0	; () banked
 10698  00372E  51EC               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 10699  003730  11ED               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 10700  003732  B4D8               	btfsc	status,2,c
 10701  003734  EF9E  F01B         	goto	i2u393_41
 10702  003738  EFA0  F01B         	goto	i2u393_40
 10703  00373C                     i2u393_41:
 10704  00373C  EFAC  F01B         	goto	i2l552
 10705  003740                     i2u393_40:
 10706  003740                     
 10707                           ; BSR set to: 0
 10708                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 10709  003740  D802               	call	i2u394_48
 10710  003742  EFAC  F01B         	goto	i2u394_49
 10711  003746                     i2u394_48:
 10712  003746  0005               	push	
 10713  003748  6EFA               	movwf	pclath,c
 10714  00374A  51EC               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 10715  00374C  6EFD               	movwf	tosl,c
 10716  00374E  51ED               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 10717  003750  6EFE               	movwf	tosh,c
 10718  003752  6AFF               	clrf	tosu,c
 10719  003754  50FA               	movf	pclath,w,c
 10720  003756  0012               	return		;indir
 10721  003758                     i2u394_49:
 10722  003758                     i2l552:
 10723  003758  0011               	retfie		f
 10724  00375A                     __end_of_TMR5_GATE_ISR:
 10725                           	callstack 0
 10726                           
 10727 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 10728 ;; Defined at:
 10729 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 10730 ;; Parameters:    Size  Location     Type
 10731 ;;		None
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;		None
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  1    wreg      void 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0, cstack
 10738 ;; Tracked objects:
 10739 ;;		On entry : 0/0
 10740 ;;		On exit  : 0/0
 10741 ;;		Unchanged: 0/0
 10742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;Total ram usage:        0 bytes
 10748 ;; Hardware stack levels used: 1
 10749 ;; Hardware stack levels required when called: 2
 10750 ;; This function calls:
 10751 ;;		_TMR5_ReadTimer
 10752 ;;		_TMR5_Reload
 10753 ;; This function is called by:
 10754 ;;		_TMR5_Initialize
 10755 ;;		_TMR5_GATE_ISR
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text77
 10760  0039F6                     __ptext77:
 10761                           	callstack 0
 10762  0039F6                     _TMR5_DefaultGateInterruptHandler:
 10763                           	callstack 16
 10764  0039F6                     
 10765                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 10766  0039F6  ECCB  F01C         	call	_TMR5_ReadTimer	;wreg free
 10767  0039FA  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 10768  0039FE  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 10769  003A02                     
 10770                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 10771  003A02  90D8               	bcf	status,0,c
 10772  003A04  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
 10773  003A06  324A               	rrcf	_distFront^0,f,c	;volatile
 10774  003A08                     
 10775                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 10776  003A08  EC4D  F01D         	call	_TMR5_Reload	;wreg free
 10777  003A0C                     
 10778                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 10779  003A0C  0139               	movlb	57	; () banked
 10780  003A0E  9FA8               	bcf	168,7,b	;volatile
 10781  003A10                     
 10782                           ; BSR set to: 57
 10783  003A10  0012               	return		;funcret
 10784  003A12                     __end_of_TMR5_DefaultGateInterruptHandler:
 10785                           	callstack 0
 10786                           
 10787 ;; *************** function _TMR5_Reload *****************
 10788 ;; Defined at:
 10789 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;		None
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;		None
 10794 ;; Return value:  Size  Location     Type
 10795 ;;                  1    wreg      void 
 10796 ;; Registers used:
 10797 ;;		wreg, status,2, cstack
 10798 ;; Tracked objects:
 10799 ;;		On entry : 0/0
 10800 ;;		On exit  : 0/0
 10801 ;;		Unchanged: 0/0
 10802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10807 ;;Total ram usage:        0 bytes
 10808 ;; Hardware stack levels used: 1
 10809 ;; Hardware stack levels required when called: 1
 10810 ;; This function calls:
 10811 ;;		_TMR5_WriteTimer
 10812 ;; This function is called by:
 10813 ;;		_TMR5_DefaultGateInterruptHandler
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text78
 10818  003A9A                     __ptext78:
 10819                           	callstack 0
 10820  003A9A                     _TMR5_Reload:
 10821                           	callstack 16
 10822  003A9A                     
 10823                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 10824  003A9A  C0EE  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 10825  003A9E  C0EF  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 10826  003AA2  EC7C  F01C         	call	_TMR5_WriteTimer	;wreg free
 10827  003AA6  0012               	return		;funcret
 10828  003AA8                     __end_of_TMR5_Reload:
 10829                           	callstack 0
 10830                           
 10831 ;; *************** function _TMR5_WriteTimer *****************
 10832 ;; Defined at:
 10833 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  timerVal        2    8[COMRAM] unsigned short 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10851 ;;Total ram usage:        2 bytes
 10852 ;; Hardware stack levels used: 1
 10853 ;; This function calls:
 10854 ;;		Nothing
 10855 ;; This function is called by:
 10856 ;;		_TMR5_Reload
 10857 ;; This function uses a non-reentrant model
 10858 ;;
 10859                           
 10860                           	psect	text79
 10861  0038F8                     __ptext79:
 10862                           	callstack 0
 10863  0038F8                     _TMR5_WriteTimer:
 10864                           	callstack 16
 10865  0038F8                     
 10866                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 10867  0038F8  A49A               	btfss	154,2,c	;volatile
 10868  0038FA  EF81  F01C         	goto	i2u268_41
 10869  0038FE  EF83  F01C         	goto	i2u268_40
 10870  003902                     i2u268_41:
 10871  003902  EF8C  F01C         	goto	i2l4417
 10872  003906                     i2u268_40:
 10873  003906                     
 10874                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 10875  003906  909A               	bcf	154,0,c	;volatile
 10876  003908                     
 10877                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 10878  003908  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 10879  00390A  6E99               	movwf	153,c	;volatile
 10880  00390C                     
 10881                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 10882  00390C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 10883  003912                     
 10884                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 10885  003912  809A               	bsf	154,0,c	;volatile
 10886                           
 10887                           ;mcc_generated_files/tmr5.c: 146:     }
 10888  003914  EF91  F01C         	goto	i2l534
 10889  003918                     i2l4417:
 10890                           
 10891                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 10892  003918  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 10893  00391A  6E99               	movwf	153,c	;volatile
 10894  00391C                     
 10895                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 10896  00391C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 10897  003922                     i2l534:
 10898  003922  0012               	return		;funcret
 10899  003924                     __end_of_TMR5_WriteTimer:
 10900                           	callstack 0
 10901                           
 10902 ;; *************** function _TMR5_ReadTimer *****************
 10903 ;; Defined at:
 10904 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;		None
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;  readVal         2   12[COMRAM] unsigned short 
 10909 ;;  readValLow      1   15[COMRAM] unsigned char 
 10910 ;;  readValHigh     1   14[COMRAM] unsigned char 
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  2    8[COMRAM] unsigned short 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;Total ram usage:        8 bytes
 10925 ;; Hardware stack levels used: 1
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_TMR5_DefaultGateInterruptHandler
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           	psect	text80
 10934  003996                     __ptext80:
 10935                           	callstack 0
 10936  003996                     _TMR5_ReadTimer:
 10937                           	callstack 17
 10938  003996                     
 10939                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 10940  003996  829A               	bsf	154,1,c	;volatile
 10941                           
 10942                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 10943  003998  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 10944                           
 10945                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 10946  00399E  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 10947  0039A4                     
 10948                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 10949  0039A4  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 10950  0039A6  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 10951  0039A8  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 10952  0039AA  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 10953  0039AC  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 10954  0039B0                     
 10955                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 10956  0039B0  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 10957  0039B4  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 10958  0039B8  0012               	return		;funcret
 10959  0039BA                     __end_of_TMR5_ReadTimer:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 10963 ;; Defined at:
 10964 ;;		line 192 in file "mcc_generated_files/smt1.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;		None
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;Total ram usage:        0 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; This function calls:
 10985 ;;		Nothing
 10986 ;; This function is called by:
 10987 ;;		Interrupt level 2
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text81
 10992  003404                     __ptext81:
 10993                           	callstack 0
 10994  003404                     _SMT1_PR_ACQ_ISR:
 10995                           	callstack 19
 10996  003404                     
 10997                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 10998  003404  0139               	movlb	57	; () banked
 10999  003406  9DA1               	bcf	161,6,b	;volatile
 11000  003408                     
 11001                           ; BSR set to: 57
 11002                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 11003  003408  013F               	movlb	63	; () banked
 11004  00340A  5115               	movf	21,w,b	;volatile
 11005  00340C  6E46               	movwf	_smtPeriod^0,c	;volatile
 11006  00340E  5116               	movf	22,w,b	;volatile
 11007  003410  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 11008  003412  5117               	movf	23,w,b	;volatile
 11009  003414  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 11010  003416  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
 11011  003418                     
 11012                           ; BSR set to: 63
 11013                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 11014  003418  013C               	movlb	60	; () banked
 11015  00341A  AB60               	btfss	96,5,b	;volatile
 11016  00341C  EF12  F01A         	goto	i2u396_41
 11017  003420  EF14  F01A         	goto	i2u396_40
 11018  003424                     i2u396_41:
 11019  003424  EF1D  F01A         	goto	i2l5311
 11020  003428                     i2u396_40:
 11021  003428                     
 11022                           ; BSR set to: 60
 11023  003428  0E01               	movlw	1
 11024  00342A  0100               	movlb	0	; () banked
 11025  00342C  2798               	addwf	_smtWay& (0+255),f,b	;volatile
 11026  00342E  0E00               	movlw	0
 11027  003430  2399               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11028  003432  239A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11029  003434  239B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11030  003436  EF26  F01A         	goto	i2l856
 11031  00343A                     i2l5311:
 11032                           
 11033                           ; BSR set to: 60
 11034  00343A  0EFF               	movlw	255
 11035  00343C  0100               	movlb	0	; () banked
 11036  00343E  2798               	addwf	_smtWay& (0+255),f,b	;volatile
 11037  003440  0EFF               	movlw	255
 11038  003442  2399               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11039  003444  0EFF               	movlw	255
 11040  003446  239A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11041  003448  0EFF               	movlw	255
 11042  00344A  239B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11043  00344C                     i2l856:
 11044                           
 11045                           ; BSR set to: 0
 11046  00344C  0011               	retfie		f
 11047  00344E                     __end_of_SMT1_PR_ACQ_ISR:
 11048                           	callstack 0
 11049                           
 11050 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 11051 ;; Defined at:
 11052 ;;		line 203 in file "mcc_generated_files/smt1.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;		None
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      void 
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;Total ram usage:        0 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		Interrupt level 2
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text82
 11080  0032D0                     __ptext82:
 11081                           	callstack 0
 11082  0032D0                     _SMT1_PW_ACQ_ISR:
 11083                           	callstack 19
 11084  0032D0                     
 11085                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 11086  0032D0  0139               	movlb	57	; () banked
 11087  0032D2  9FA1               	bcf	161,7,b	;volatile
 11088  0032D4                     
 11089                           ; BSR set to: 57
 11090                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 11091  0032D4  013F               	movlb	63	; () banked
 11092  0032D6  5118               	movf	24,w,b	;volatile
 11093  0032D8  0100               	movlb	0	; () banked
 11094  0032DA  6F9C               	movwf	_smtDuty& (0+255),b	;volatile
 11095  0032DC  013F               	movlb	63	; () banked
 11096  0032DE  5119               	movf	25,w,b	;volatile
 11097  0032E0  0100               	movlb	0	; () banked
 11098  0032E2  6F9D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 11099  0032E4  013F               	movlb	63	; () banked
 11100  0032E6  511A               	movf	26,w,b	;volatile
 11101  0032E8  0100               	movlb	0	; () banked
 11102  0032EA  6F9E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 11103  0032EC  6B9F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 11104  0032EE                     
 11105                           ; BSR set to: 0
 11106                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 11107  0032EE  013C               	movlb	60	; () banked
 11108  0032F0  AB60               	btfss	96,5,b	;volatile
 11109  0032F2  EF7D  F019         	goto	i2u397_41
 11110  0032F6  EF7F  F019         	goto	i2u397_40
 11111  0032FA                     i2u397_41:
 11112  0032FA  EF88  F019         	goto	i2l5321
 11113  0032FE                     i2u397_40:
 11114  0032FE                     
 11115                           ; BSR set to: 60
 11116  0032FE  0E01               	movlw	1
 11117  003300  0100               	movlb	0	; () banked
 11118  003302  2798               	addwf	_smtWay& (0+255),f,b	;volatile
 11119  003304  0E00               	movlw	0
 11120  003306  2399               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11121  003308  239A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11122  00330A  239B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11123  00330C  EF91  F019         	goto	i2l863
 11124  003310                     i2l5321:
 11125                           
 11126                           ; BSR set to: 60
 11127  003310  0EFF               	movlw	255
 11128  003312  0100               	movlb	0	; () banked
 11129  003314  2798               	addwf	_smtWay& (0+255),f,b	;volatile
 11130  003316  0EFF               	movlw	255
 11131  003318  2399               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 11132  00331A  0EFF               	movlw	255
 11133  00331C  239A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 11134  00331E  0EFF               	movlw	255
 11135  003320  239B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 11136  003322                     i2l863:
 11137                           
 11138                           ; BSR set to: 0
 11139  003322  0011               	retfie		f
 11140  003324                     __end_of_SMT1_PW_ACQ_ISR:
 11141                           	callstack 0
 11142                           
 11143 ;; *************** function _SMT1_Overflow_ISR *****************
 11144 ;; Defined at:
 11145 ;;		line 213 in file "mcc_generated_files/smt1.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;		None
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;		None
 11150 ;; Return value:  Size  Location     Type
 11151 ;;                  1    wreg      void 
 11152 ;; Registers used:
 11153 ;;		wreg, status,2
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11163 ;;Total ram usage:        0 bytes
 11164 ;; Hardware stack levels used: 1
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		Interrupt level 2
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172                           	psect	text83
 11173  003924                     __ptext83:
 11174                           	callstack 0
 11175  003924                     _SMT1_Overflow_ISR:
 11176                           	callstack 19
 11177  003924                     
 11178                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 11179  003924  0139               	movlb	57	; () banked
 11180  003926  9BA1               	bcf	161,5,b	;volatile
 11181  003928                     
 11182                           ; BSR set to: 57
 11183                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 11184  003928  0E00               	movlw	0
 11185  00392A  6E46               	movwf	_smtPeriod^0,c	;volatile
 11186  00392C  0E00               	movlw	0
 11187  00392E  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 11188  003930  0E00               	movlw	0
 11189  003932  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 11190  003934  0E00               	movlw	0
 11191  003936  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 11192                           
 11193                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 11194  003938  0E00               	movlw	0
 11195  00393A  0100               	movlb	0	; () banked
 11196  00393C  6F9C               	movwf	_smtDuty& (0+255),b	;volatile
 11197  00393E  0E00               	movlw	0
 11198  003940  6F9D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 11199  003942  0E00               	movlw	0
 11200  003944  6F9E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 11201  003946  0E00               	movlw	0
 11202  003948  6F9F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 11203  00394A                     
 11204                           ; BSR set to: 0
 11205  00394A  0011               	retfie		f
 11206  00394C                     __end_of_SMT1_Overflow_ISR:
 11207                           	callstack 0
 11208                           
 11209                           ;
 11210                           ; Interrupt Vector Table @ 0x8
 11211                           ;
 11212                           
 11213                           	psect	ivt0x8
 11214  000008                     __pivt0x8:
 11215                           	callstack 0
 11216  000008                     ivt0x8_base:
 11217                           	callstack 0
 11218                           
 11219                           ; Vector 0 : SWINT
 11220  000008  0EC8               	dw	_Default_ISR shr (0+2)
 11221                           
 11222                           ; Vector 1 : HLVD
 11223  00000A  0EC8               	dw	_Default_ISR shr (0+2)
 11224                           
 11225                           ; Vector 2 : OSF
 11226  00000C  0EC8               	dw	_Default_ISR shr (0+2)
 11227                           
 11228                           ; Vector 3 : CSW
 11229  00000E  0EC8               	dw	_Default_ISR shr (0+2)
 11230                           
 11231                           ; Vector 4 : NVM
 11232  000010  0EC8               	dw	_Default_ISR shr (0+2)
 11233                           
 11234                           ; Vector 5 : SCAN
 11235  000012  0EC8               	dw	_Default_ISR shr (0+2)
 11236                           
 11237                           ; Vector 6 : CRC
 11238  000014  0EC8               	dw	_Default_ISR shr (0+2)
 11239                           
 11240                           ; Vector 7 : IOC
 11241  000016  0EC8               	dw	_Default_ISR shr (0+2)
 11242                           
 11243                           ; Vector 8 : INT0
 11244  000018  0EC8               	dw	_Default_ISR shr (0+2)
 11245                           
 11246                           ; Vector 9 : ZCD
 11247  00001A  0EC8               	dw	_Default_ISR shr (0+2)
 11248                           
 11249                           ; Vector 10 : AD
 11250  00001C  0EC8               	dw	_Default_ISR shr (0+2)
 11251                           
 11252                           ; Vector 11 : ADT
 11253  00001E  0EC8               	dw	_Default_ISR shr (0+2)
 11254                           
 11255                           ; Vector 12 : CMP1
 11256  000020  0EC8               	dw	_Default_ISR shr (0+2)
 11257                           
 11258                           ; Vector 13 : SMT1
 11259  000022  0E49               	dw	_SMT1_Overflow_ISR shr (0+2)
 11260                           
 11261                           ; Vector 14 : SMT1PRA
 11262  000024  0D01               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 11263                           
 11264                           ; Vector 15 : SMT1PRW
 11265  000026  0CB4               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 11266                           
 11267                           ; Vector 16 : DMA1SCNT
 11268  000028  0EC8               	dw	_Default_ISR shr (0+2)
 11269                           
 11270                           ; Vector 17 : DMA1DCNT
 11271  00002A  0EC8               	dw	_Default_ISR shr (0+2)
 11272                           
 11273                           ; Vector 18 : DMA1OR
 11274  00002C  0EC8               	dw	_Default_ISR shr (0+2)
 11275                           
 11276                           ; Vector 19 : DMA1A
 11277  00002E  0EC8               	dw	_Default_ISR shr (0+2)
 11278                           
 11279                           ; Vector 20 : SPI1RX
 11280  000030  0EC8               	dw	_Default_ISR shr (0+2)
 11281                           
 11282                           ; Vector 21 : SPI1TX
 11283  000032  0EC8               	dw	_Default_ISR shr (0+2)
 11284                           
 11285                           ; Vector 22 : SPI1
 11286  000034  0EC8               	dw	_Default_ISR shr (0+2)
 11287                           
 11288                           ; Vector 23 : I2C1RX
 11289  000036  0EC8               	dw	_Default_ISR shr (0+2)
 11290                           
 11291                           ; Vector 24 : I2C1TX
 11292  000038  0EC8               	dw	_Default_ISR shr (0+2)
 11293                           
 11294                           ; Vector 25 : I2C1
 11295  00003A  0EC8               	dw	_Default_ISR shr (0+2)
 11296                           
 11297                           ; Vector 26 : I2C1E
 11298  00003C  0EC8               	dw	_Default_ISR shr (0+2)
 11299                           
 11300                           ; Vector 27 : U1RX
 11301  00003E  0D44               	dw	_UART1_rx_vect_isr shr (0+2)
 11302                           
 11303                           ; Vector 28 : U1TX
 11304  000040  0D35               	dw	_UART1_tx_vect_isr shr (0+2)
 11305                           
 11306                           ; Vector 29 : U1E
 11307  000042  0EC8               	dw	_Default_ISR shr (0+2)
 11308                           
 11309                           ; Vector 30 : U1
 11310  000044  0EC8               	dw	_Default_ISR shr (0+2)
 11311                           
 11312                           ; Vector 31 : TMR0
 11313  000046  0EC8               	dw	_Default_ISR shr (0+2)
 11314                           
 11315                           ; Vector 32 : TMR1
 11316  000048  0EC8               	dw	_Default_ISR shr (0+2)
 11317                           
 11318                           ; Vector 33 : TMR1G
 11319  00004A  0EC8               	dw	_Default_ISR shr (0+2)
 11320                           
 11321                           ; Vector 34 : TMR2
 11322  00004C  0EC8               	dw	_Default_ISR shr (0+2)
 11323                           
 11324                           ; Vector 35 : CCP1
 11325  00004E  0EC8               	dw	_Default_ISR shr (0+2)
 11326                           
 11327                           ; Vector 36 : Undefined
 11328  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 11329                           
 11330                           ; Vector 37 : NCO1
 11331  000052  0EC8               	dw	_Default_ISR shr (0+2)
 11332                           
 11333                           ; Vector 38 : CWG1
 11334  000054  0EC8               	dw	_Default_ISR shr (0+2)
 11335                           
 11336                           ; Vector 39 : CLC1
 11337  000056  0EC8               	dw	_Default_ISR shr (0+2)
 11338                           
 11339                           ; Vector 40 : INT1
 11340  000058  0EC8               	dw	_Default_ISR shr (0+2)
 11341                           
 11342                           ; Vector 41 : CMP2
 11343  00005A  0EC8               	dw	_Default_ISR shr (0+2)
 11344                           
 11345                           ; Vector 42 : DMA2SCNT
 11346  00005C  0EC8               	dw	_Default_ISR shr (0+2)
 11347                           
 11348                           ; Vector 43 : DMA2DCNT
 11349  00005E  0EC8               	dw	_Default_ISR shr (0+2)
 11350                           
 11351                           ; Vector 44 : DMA2OR
 11352  000060  0EC8               	dw	_Default_ISR shr (0+2)
 11353                           
 11354                           ; Vector 45 : DMA2A
 11355  000062  0EC8               	dw	_Default_ISR shr (0+2)
 11356                           
 11357                           ; Vector 46 : I2C2RX
 11358  000064  0EC8               	dw	_Default_ISR shr (0+2)
 11359                           
 11360                           ; Vector 47 : I2C2TX
 11361  000066  0EC8               	dw	_Default_ISR shr (0+2)
 11362                           
 11363                           ; Vector 48 : I2C2
 11364  000068  0EC8               	dw	_Default_ISR shr (0+2)
 11365                           
 11366                           ; Vector 49 : I2C2E
 11367  00006A  0EC8               	dw	_Default_ISR shr (0+2)
 11368                           
 11369                           ; Vector 50 : U2RX
 11370  00006C  0EC8               	dw	_Default_ISR shr (0+2)
 11371                           
 11372                           ; Vector 51 : U2TX
 11373  00006E  0EC8               	dw	_Default_ISR shr (0+2)
 11374                           
 11375                           ; Vector 52 : U2E
 11376  000070  0EC8               	dw	_Default_ISR shr (0+2)
 11377                           
 11378                           ; Vector 53 : U2
 11379  000072  0EC8               	dw	_Default_ISR shr (0+2)
 11380                           
 11381                           ; Vector 54 : TMR3
 11382  000074  0EC8               	dw	_Default_ISR shr (0+2)
 11383                           
 11384                           ; Vector 55 : TMR3G
 11385  000076  0EC8               	dw	_Default_ISR shr (0+2)
 11386                           
 11387                           ; Vector 56 : TMR4
 11388  000078  0D61               	dw	_TMR4_ISR shr (0+2)
 11389                           
 11390                           ; Vector 57 : CCP2
 11391  00007A  0EC8               	dw	_Default_ISR shr (0+2)
 11392                           
 11393                           ; Vector 58 : Undefined
 11394  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 11395                           
 11396                           ; Vector 59 : CWG2
 11397  00007E  0EC8               	dw	_Default_ISR shr (0+2)
 11398                           
 11399                           ; Vector 60 : CLC2
 11400  000080  0EC8               	dw	_Default_ISR shr (0+2)
 11401                           
 11402                           ; Vector 61 : INT2
 11403  000082  0EC8               	dw	_Default_ISR shr (0+2)
 11404                           
 11405                           ; Vector 62 : Undefined
 11406  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 11407                           
 11408                           ; Vector 63 : Undefined
 11409  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 11410                           
 11411                           ; Vector 64 : Undefined
 11412  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 11413                           
 11414                           ; Vector 65 : Undefined
 11415  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 11416                           
 11417                           ; Vector 66 : Undefined
 11418  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 11419                           
 11420                           ; Vector 67 : Undefined
 11421  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 11422                           
 11423                           ; Vector 68 : Undefined
 11424  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 11425                           
 11426                           ; Vector 69 : Undefined
 11427  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 11428                           
 11429                           ; Vector 70 : TMR5
 11430  000094  0EC8               	dw	_Default_ISR shr (0+2)
 11431                           
 11432                           ; Vector 71 : TMR5G
 11433  000096  0DCA               	dw	_TMR5_GATE_ISR shr (0+2)
 11434                           
 11435                           ; Vector 72 : TMR6
 11436  000098  0EC8               	dw	_Default_ISR shr (0+2)
 11437                           
 11438                           ; Vector 73 : CCP3
 11439  00009A  0DA3               	dw	_CCP3_CaptureISR shr (0+2)
 11440                           
 11441                           ; Vector 74 : CWG3
 11442  00009C  0EC8               	dw	_Default_ISR shr (0+2)
 11443                           
 11444                           ; Vector 75 : CLC3
 11445  00009E  0EC8               	dw	_Default_ISR shr (0+2)
 11446                           
 11447                           ; Vector 76 : Undefined
 11448  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 11449                           
 11450                           ; Vector 77 : Undefined
 11451  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 11452                           
 11453                           ; Vector 78 : Undefined
 11454  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 11455                           
 11456                           ; Vector 79 : Undefined
 11457  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 11458                           
 11459                           ; Vector 80 : CCP4
 11460  0000A8  0DB0               	dw	_CCP4_CaptureISR shr (0+2)
 11461                           
 11462                           ; Vector 81 : CLC4
 11463  0000AA  0EC8               	dw	_Default_ISR shr (0+2)
 11464  0000AC                     ivt0x8_undefint:
 11465                           	callstack 0
 11466  0000AC  00FF               	reset	
 11467                           
 11468                           	psect	text84
 11469  000000                     __ptext84:
 11470                           	callstack 0
 11471  000000                     
 11472                           	psect	rparam
 11473  0000                     
 11474                           	psect	idloc
 11475                           
 11476                           ;Config register IDLOC0 @ 0x200000
 11477                           ;	unspecified, using default values
 11478  200000                     	org	2097152
 11479  200000  0FFF               	dw	4095
 11480                           
 11481                           ;Config register IDLOC1 @ 0x200002
 11482                           ;	unspecified, using default values
 11483  200002                     	org	2097154
 11484  200002  0FFF               	dw	4095
 11485                           
 11486                           ;Config register IDLOC2 @ 0x200004
 11487                           ;	unspecified, using default values
 11488  200004                     	org	2097156
 11489  200004  0FFF               	dw	4095
 11490                           
 11491                           ;Config register IDLOC3 @ 0x200006
 11492                           ;	unspecified, using default values
 11493  200006                     	org	2097158
 11494  200006  0FFF               	dw	4095
 11495                           
 11496                           ;Config register IDLOC4 @ 0x200008
 11497                           ;	unspecified, using default values
 11498  200008                     	org	2097160
 11499  200008  0FFF               	dw	4095
 11500                           
 11501                           ;Config register IDLOC5 @ 0x20000A
 11502                           ;	unspecified, using default values
 11503  20000A                     	org	2097162
 11504  20000A  0FFF               	dw	4095
 11505                           
 11506                           ;Config register IDLOC6 @ 0x20000C
 11507                           ;	unspecified, using default values
 11508  20000C                     	org	2097164
 11509  20000C  0FFF               	dw	4095
 11510                           
 11511                           ;Config register IDLOC7 @ 0x20000E
 11512                           ;	unspecified, using default values
 11513  20000E                     	org	2097166
 11514  20000E  0FFF               	dw	4095
 11515                           
 11516                           	psect	config
 11517                           
 11518                           ;Config register CONFIG1L @ 0x300000
 11519                           ;	External Oscillator Selection
 11520                           ;	FEXTOSC = OFF, Oscillator not enabled
 11521                           ;	Reset Oscillator Selection
 11522                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 11523  300000                     	org	3145728
 11524  300000  8C                 	db	140
 11525                           
 11526                           ;Config register CONFIG1H @ 0x300001
 11527                           ;	Clock out Enable bit
 11528                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 11529                           ;	PRLOCKED One-Way Set Enable bit
 11530                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 11531                           ;	Clock Switch Enable bit
 11532                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11533                           ;	Fail-Safe Clock Monitor Enable bit
 11534                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 11535  300001                     	org	3145729
 11536  300001  FF                 	db	255
 11537                           
 11538                           ;Config register CONFIG2L @ 0x300002
 11539                           ;	MCLR Enable bit
 11540                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 11541                           ;	Power-up timer selection bits
 11542                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 11543                           ;	Multi-vector enable bit
 11544                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 11545                           ;	IVTLOCK bit One-way set enable bit
 11546                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 11547                           ;	Low Power BOR Enable bit
 11548                           ;	LPBOREN = OFF, ULPBOR disabled
 11549                           ;	Brown-out Reset Enable bits
 11550                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 11551  300002                     	org	3145730
 11552  300002  FF                 	db	255
 11553                           
 11554                           ;Config register CONFIG2H @ 0x300003
 11555                           ;	Brown-out Reset Voltage Selection bits
 11556                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 11557                           ;	ZCD Disable bit
 11558                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 11559                           ;	PPSLOCK bit One-Way Set Enable bit
 11560                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 11561                           ;	Stack Full/Underflow Reset Enable bit
 11562                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11563                           ;	Debugger Enable bit
 11564                           ;	DEBUG = OFF, Background debugger disabled
 11565                           ;	Extended Instruction Set Enable bit
 11566                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 11567  300003                     	org	3145731
 11568  300003  FF                 	db	255
 11569                           
 11570                           ;Config register CONFIG3L @ 0x300004
 11571                           ;	WDT Period selection bits
 11572                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11573                           ;	WDT operating mode
 11574                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 11575  300004                     	org	3145732
 11576  300004  9F                 	db	159
 11577                           
 11578                           ;Config register CONFIG3H @ 0x300005
 11579                           ;	WDT Window Select bits
 11580                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11581                           ;	WDT input clock selector
 11582                           ;	WDTCCS = SC, Software Control
 11583  300005                     	org	3145733
 11584  300005  FF                 	db	255
 11585                           
 11586                           ;Config register CONFIG4L @ 0x300006
 11587                           ;	Boot Block Size selection bits
 11588                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 11589                           ;	Boot Block enable bit
 11590                           ;	BBEN = OFF, Boot block disabled
 11591                           ;	Storage Area Flash enable bit
 11592                           ;	SAFEN = OFF, SAF disabled
 11593                           ;	Application Block write protection bit
 11594                           ;	WRTAPP = OFF, Application Block not write protected
 11595  300006                     	org	3145734
 11596  300006  FF                 	db	255
 11597                           
 11598                           ;Config register CONFIG4H @ 0x300007
 11599                           ;	Configuration Register Write Protection bit
 11600                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 11601                           ;	Boot Block Write Protection bit
 11602                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 11603                           ;	Data EEPROM Write Protection bit
 11604                           ;	WRTD = OFF, Data EEPROM not write-protected
 11605                           ;	SAF Write protection bit
 11606                           ;	WRTSAF = OFF, SAF not Write Protected
 11607                           ;	Low Voltage Programming Enable bit
 11608                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 11609  300007                     	org	3145735
 11610  300007  FF                 	db	255
 11611                           
 11612                           ;Config register CONFIG5L @ 0x300008
 11613                           ;	PFM and Data EEPROM Code Protection bit
 11614                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 11615  300008                     	org	3145736
 11616  300008  FF                 	db	255
 11617                           
 11618                           ;Config register CONFIG5H @ 0x300009
 11619                           ;	unspecified, using default values
 11620  300009                     	org	3145737
 11621  300009  FF                 	db	255
 11622                           tosu	equ	0x3FFF
 11623                           tosh	equ	0x3FFE
 11624                           tosl	equ	0x3FFD
 11625                           stkptr	equ	0x3FFC
 11626                           pclatu	equ	0x3FFB
 11627                           pclath	equ	0x3FFA
 11628                           pcl	equ	0x3FF9
 11629                           tblptru	equ	0x3FF8
 11630                           tblptrh	equ	0x3FF7
 11631                           tblptrl	equ	0x3FF6
 11632                           tablat	equ	0x3FF5
 11633                           prodh	equ	0x3FF4
 11634                           prodl	equ	0x3FF3
 11635                           indf0	equ	0x3FEF
 11636                           postinc0	equ	0x3FEE
 11637                           postdec0	equ	0x3FED
 11638                           preinc0	equ	0x3FEC
 11639                           plusw0	equ	0x3FEB
 11640                           fsr0h	equ	0x3FEA
 11641                           fsr0l	equ	0x3FE9
 11642                           wreg	equ	0x3FE8
 11643                           indf1	equ	0x3FE7
 11644                           postinc1	equ	0x3FE6
 11645                           postdec1	equ	0x3FE5
 11646                           preinc1	equ	0x3FE4
 11647                           plusw1	equ	0x3FE3
 11648                           fsr1h	equ	0x3FE2
 11649                           fsr1l	equ	0x3FE1
 11650                           bsr	equ	0x3FE0
 11651                           indf2	equ	0x3FDF
 11652                           postinc2	equ	0x3FDE
 11653                           postdec2	equ	0x3FDD
 11654                           preinc2	equ	0x3FDC
 11655                           plusw2	equ	0x3FDB
 11656                           fsr2h	equ	0x3FDA
 11657                           fsr2l	equ	0x3FD9
 11658                           status	equ	0x3FD8

Data Sizes:
    Strings     12
    Constant    0
    Data        1
    BSS         121
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     33     159
    BANK1           256     12      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    S3427_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _checkBatt->___flge
    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___xxtofl
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _startAccell->___fltol
    _calcSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_startAccell
    _startAccell->_calcSteering
    _calcSteering->___fltol
    _calcSpeed->___fltol
    _calcMotorPow->___fltol

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   63783
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   62636
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   21194
                                              8 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0   10159
                                              2 BANK1      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2    1686
                                             44 COMRAM     4     2      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    1558
                                             36 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    34      6    1208
                                             30 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     782
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (7) _UART1_Write                                          1     1      0      44
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    5992
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    4148
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     806
                                             41 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    8300
                                              2 BANK1      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    7985
                                              2 BANK1      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     697
                                             25 BANK0      8     4      4
                                              0 BANK1      2     2      0
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3053
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     985
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _UART1_tx_vect_isr                                    1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (9) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _UART1_rx_vect_isr                                    1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (9) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _TMR4_ISR                                             1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (13) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (14) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
     _getReverse
     _printf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
               _UART1_Write
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C       C       7        4.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7      32        0.0%
DATA                 0      0      F7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 17:32:17 2024

                             _CCP4_Initialize 37EA                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 2474                                            l72 3A88  
                                          l75 3994                                            l69 33B8  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 3272  
                                         l404 336E                                           l308 3226  
                                         l309 3240                                           l318 3AB0  
                                         l520 3402                                           l441 3844  
                                         l362 3ACE                                           l371 3ABA  
                                         l188 2DC4                                           l284 2FEE  
                                         l365 3AE2                                           l359 3AD8  
                                         l368 3AC4                                           l712 368A  
                                         l449 3B0A                                           l482 3816  
                                         l723 3A28                                           l555 3AEC  
                                         l644 389E                                           l740 3622  
                                         l709 3A40                                           l581 3580  
                                         l726 3656                                           l479 3B00  
                                         l751 3A58                                           l737 3A70  
                                         l754 35EE                                           l923 39F4  
                                         l695 3AF6                                           l795 3788  
                                         l893 38CA                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 39DA  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 3AF8  
                                ___flmul@aexp 00C8                                  ___flmul@bexp 00CD  
                          _UART1_Transmit_ISR 344E                                  ___flmul@sign 00C7  
                                ___flmul@temp 00D2                                  ___flmul@prod 00CE  
                     __end_of_CCP4_CaptureISR 36F4                                  ___fltol@exp1 0101  
                                        l1042 32CE                                          l2012 1596  
                                        l2021 1828                                          l2022 1816  
                                        l1054 3704                                          l1311 2C08  
                                        l2016 191E                                          l1312 2C18  
                                        l1240 26D4                                          l1224 25C2  
                                        l1057 3724                                          l2114 3208  
                                        l2019 17B0                                          l2115 3210  
                                        l2060 20B0                                          l1252 3A98  
                                        l1324 1C88                                          l3005 3274  
                                        l3021 377A                                          l2029 18E0  
                                        l2053 2018                                          l2109 290C  
                                        l3031 3A12                                          l3023 377C  
                                        l2127 3084                                          l1319 1BF6  
                                        l2056 2174                                          l1360 1FC0  
                                        l3025 3780                                          l3017 375A  
                                        l3033 39DA                                          l1249 3118  
                                        l1257 31A8                                          l3051 38A0  
                                        l3027 3782                                          l3019 3778  
                                        l3035 39E6                                          l2067 210C  
                                        l1291 1AB6                                          l1339 1DAA  
                             _timer3ReloadVal 00EA                                          l2076 3970  
                                        l3061 3A5A                                          l3029 3784  
                                        l3037 39EC                                          l1277 1B5A  
                                        l4021 301E                                          l1269 25A4  
                                        l1382 2182                                          l3039 3A42  
                                        l4023 303C                                          l4015 2FF0  
                                        l1384 21A6                                          l1369 2472  
                                        l4041 3712                                          l4033 36F6  
                                        l1385 21BA                                          l1297 1B6A  
                                        l5001 2BC2                                          l4025 3072  
                                        l4017 3002                                          l1378 2CFA  
                                        l1386 21E2                                          l4035 36FC  
                                        l1395 2318                                          l5011 2C04  
                                        l5003 2BCA                                          l4019 3014  
                                        l3077 3A2A                                          l1629 2E88  
                                        l1477 2A18                                          l4037 3700  
                                        l5005 2BCE                                          l5111 338C  
                                        l1663 2AD6                                          l4039 3702  
                                        l5007 2BE4                                          l4401 3B02  
                                        l5121 33A4                                          l5113 3390  
                                        l5105 3370                                          l6001 113C  
                                        l5009 2C04                                          l4403 3AF8  
                                        l5123 33AC                                          l5115 3394  
                                        l5107 3380                                          l6003 1140  
                                        l6011 1150                                          l1668 2B1C  
                                        l4421 3AEE                                          l4405 3AE4  
                                        l5125 33B0                                          l5117 3398  
                                        l5109 3384                                          l6021 11C0  
                                        l6013 1154                                          l6005 1144  
                                        l1926 11FE                                          l5119 33A0  
                                        l1695 27F2                                          l6103 13F8  
                                        l6111 144E                                          l1943 1318  
                                        l1935 14CE                                          l6031 11EA  
                                        l6023 11CC                                          l6015 117E  
                                        l1927 11EC                                          l6007 1148  
                                        l4351 2822                                          l1952 13E8  
                                        l1928 11B2                                          l6121 14A0  
                                        l6113 145E                                          l6105 1404  
                                        l1953 13D6                                          l6041 1240  
                                        l6033 120C                                          l6025 11D0  
                                        l6017 119A                                          l6009 114C  
                                        l6201 3190                                          l4361 288A  
                                        l4353 2834                                          l6131 14BE  
                                        l6123 14A6                                          l6115 146E  
                                        l6107 1412                                          l6051 127A  
                                        l6043 124E                                          l6035 121C  
                                        l6027 11DE                                          l6019 11AA  
                                        l6211 1DAC                                          l6203 31A0  
                                        l4363 289E                                          l4355 2846  
                                        l2941 332E                                          l4381 3ABC  
                                        l5501 2DFA                                          l6125 14A8  
                                        l6117 148E                                          l6109 144C  
                                        l6061 12E6                                          l6053 127C  
                                        l6045 125C                                          l6029 11E0  
                                        l6221 1DFA                                          l6213 1DBA  
                                        l6141 2A86                                          l4445 3A8A  
                                        l4357 284A                                          l4373 28C8  
                                        l4349 27F4                                          l6301 25D0  
                                        l2951 335E                                          l2943 3338  
                                        l4383 3AB2                                          l5511 2E28  
                                        l5503 2DFE                                          l6127 14AE  
                                        l6119 1492                                          l6071 133E  
                                        l6063 12E8                                          l6055 1286  
                                        l6047 1268                                          l6039 1230  
                                        l6231 1E50                                          l6223 1E10  
                                        l6215 1DD0                                          l6151 2B14  
                                        l6143 2A96                                          l6135 2A1A  
                                        l6207 31A6                                          l4375 28F6  
                                        l4359 2878                                          l4367 28AA  
                                        l6311 2632                                          l6303 25E2  
                                        l2961 3368                                          l2953 3360  
                                        l2945 334E                                          l2937 3324  
                                        l4385 3AD0                                          l4801 2F5A  
                                        l5521 2E5C                                          l5513 2E36  
                                        l5505 2E06                                          l5601 299E  
                                        l6129 14BC                                          l6081 136C  
                                        l6065 12F8                                          l6049 126C  
                                        l6057 128C                                          l6233 1E54  
                                        l6225 1E1E                                          l6217 1DD4  
                                        l6153 2B1A                                          l6145 2AA4  
                                        l6137 2A48                                          l4369 28BC  
                                        l6161 2488                                          l6321 2650  
                                        l6313 2636                                          l6305 25E6  
                                        l2963 336A                                          l2955 3362  
                                        l2947 3350                                          l2939 3326  
                                        l2971 2D1C                                          l4387 3AC6  
                                        l4811 2F7C                                          l4803 2F6A  
                                        l5523 2E62                                          l5515 2E3C  
                                        l5507 2E18                                          l5611 29E2  
                                        l5603 29A8                                          l6083 137A  
                                        l6075 1352                                          l6091 1398  
                                        l6059 12B2                                          l6067 1308  
                                        l6243 1F18                                          l6235 1E6A  
                                        l6251 1F6E                                          l6219 1DF2  
                                        l6227 1E2C                                          l6147 2AB6  
                                        l6139 2A58                                          l6171 2524  
                                        l6163 24BE                                          l6331 2698  
                                        l6323 2662                                          l6315 263A  
                                        l6307 25EA                                          l2965 336C  
                                        l2957 3364                                          l2949 335A  
                                        l2981 2D78                                          l2973 2D1E  
                                        l4389 3ADA                                          l4821 2F90  
                                        l4813 2F80                                          l4805 2F70  
                                        l5517 2E52                                          l5509 2E20  
                                        l5525 2E68                                          l5701 1778  
                                        l5621 14D0                                          l5605 29C6  
                                        l5613 29E8                                          l5533 3658  
                                        l6085 1382                                          l6077 135C  
                                        l6069 132E                                          l6093 13A6  
                                        l6253 1F8C                                          l6237 1F00  
                                        l6229 1E3A                                          l6149 2AC4  
                                        l5541 21EA                                          l4741 31C0  
                                        l6181 2586                                          l6165 24F2  
                                        l6173 2534                                          l6157 2474  
                                        l6341 26CC                                          l6333 26AC  
                                        l6325 2666                                          l6317 2642  
                                        l6309 262E                                          l4751 383E  
                                        l2959 3366                                          l2991 2D86  
                                        l2983 2D7A                                          l2975 2D26  
                                        l2967 3972                                          l4831 2FA4  
                                        l4823 2F94                                          l4815 2F84  
                                        l4807 2F74                                          l5527 2E78  
                                        l5519 2E5A                                          l5711 17CE  
                                        l5703 1796                                          l5631 150E  
                                        l5623 14DE                                          l5615 29F8  
                                        l5607 29D6                                          l5535 3624  
                                        l6271 233A                                          l6095 13AA  
                                        l6087 1386                                          l6079 136A  
                                        l6255 1F94                                          l6239 1F0C  
                                        l5543 21F6                                          l5551 221E  
                                        l6191 3120                                          l3951 3236  
                                        l4743 31E6                                          l6183 258A  
                                        l6175 2566                                          l6167 250E  
                                        l6159 2484                                          l6335 26BC  
                                        l6327 2674                                          l6319 264A  
                                        l6343 39BA                                          l4753 3842  
                                        l4745 3818                                          l2993 3A72  
                                        l2985 2D80                                          l2977 2D74  
                                        l2969 2CFC                                          l4761 388E  
                                        l4833 2FA8                                          l4825 2F98  
                                        l4817 2F88                                          l4809 2F78  
                                        l5529 2E80                                          l5721 1838  
                                        l5713 17D2                                          l5705 17A0  
                                        l5641 1540                                          l5633 151E  
                                        l5625 14EC                                          l5801 2028  
                                        l5617 2A08                                          l5609 29D8  
                                        l6281 23E8                                          l6273 234E  
                                        l6097 13B8                                          l6089 1396  
                                        l6257 1FB0                                          l6249 1F24  
                                        l5561 22AC                                          l5545 21FE  
                                        l5553 2260                                          l5537 2176  
                                        l6193 3136                                          l4921 198C  
                                        l4913 1920                                          l3961 326A  
                                        l3953 3242                                          l4737 31AA  
                                        l6521 1C5A                                          l6185 259C  
                                        l6177 2570                                          l6169 251E  
                                        l6337 26C4                                          l6329 2684  
                                        l6345 39BE                                          l4747 3828  
                                        l4771 3810                                          l2987 2D82  
                                        l2979 2D76                                          l4763 389A  
                                        l4755 3874                                          l4835 2FB4  
                                        l4827 2F9C                                          l4819 2F8C  
                                        l5491 2DCA                                          l5731 189A  
                                        l5723 1844                                          l5715 17E0  
                                        l5707 17AE                                          l5651 1580  
                                        l5643 154E                                          l5635 1524  
                                        l5627 14EE                                          l5811 2066  
                                        l5803 203E                                          l6291 243A  
                                        l6283 23FC                                          l6275 234E  
                                        l6267 231A                                          l6099 13CE  
                                        l6259 1FB8                                          l5571 2308  
                                        l5563 22C8                                          l5555 227C  
                                        l5547 220A                                          l5539 21C2  
                                        l6195 313E                                          l4931 19FA  
                                        l4923 199C                                          l4915 193E  
                                        l3955 3254                                          l3963 326E  
                                        l3947 3214                                          l4739 31B2  
                                        l4907 394C                                          l6523 1D6C  
                                        l6187 25A0                                          l6179 257C  
                                        l6339 26C8                                          l6347 39C0  
                                        l4749 3834                                          l4773 3814  
                                        l4765 37EA                                          l2989 2D84  
                                        l4781 357C                                          l4757 3888  
                                        l4837 2FC0                                          l4829 2FA0  
                                        l5493 2DD8                                          l5741 1902  
                                        l5733 18AE                                          l5725 1852  
                                        l5717 180E                                          l5709 17C0  
                                        l5661 15CA                                          l5653 1586  
                                        l5645 1550                                          l5637 1534  
                                        l5629 14FE                                          l5821 20EE  
                                        l5813 2098                                          l5581 2920  
                                        l6293 2456                                          l6285 2400  
                                        l6277 23CC                                          l6269 2326  
                                        l5485 35F0                                          l5565 22D4  
                                        l5557 2288                                          l6197 3142  
                                        l6189 311A                                          l6525 1B34  
                                        l4941 1A3E                                          l4933 1A0A  
                                        l4925 19B8                                          l4917 195A  
                                        l3957 3256                                          l3949 3214  
                                        l3965 3AAA                                          l4909 3954  
                                        l5901 1D58                                          l6349 39CE  
                                        l4767 37FA                                          l4775 354A  
                                        l4759 388C                                          l4791 33F0  
                                        l4783 33BA                                          l4839 2FEA  
                                        l5495 2DE0                                          l5743 1904  
                                        l5735 18C8                                          l5727 187C  
                                        l5671 1626                                          l5663 15DA  
                                        l5655 15A6                                          l5647 1560  
                                        l5639 153A                                          l5751 26D6  
                                        l5831 2144                                          l5823 20FC  
                                        l5815 209A                                          l5807 2052  
                                        l5591 2956                                          l5583 2930  
                                        l6295 245E                                          l6287 2412  
                                        l6279 23E0                                          l5487 35BC  
                                        l5567 22F0                                          l5559 22A4  
                                        l6527 2232                                          l6199 3186  
                                        l4951 1AA2                                          l4943 1A54  
                                        l4935 1A16                                          l4927 19D4  
                                        l4919 1976                                          l3959 3266  
                                        l4769 3806                                          l4777 355E  
                                        l4793 33F2                                          l4785 33CE  
                                        l5497 2DE4                                          l5489 2DC6  
                                        l5737 18E4                                          l5745 190A  
                                        l5729 1880                                          l5681 166C  
                                        l5673 1632                                          l5665 15E4  
                                        l5657 15B6                                          l5649 1570  
                                        l5761 2738                                          l5753 26F0  
                                        l5833 2154                                          l5825 211A  
                                        l5817 20A6                                          l5809 205A  
                                        l5593 2966                                          l5585 2934  
                                        l5577 290E                                          l5921 308E  
                                        l5841 2C1A                                          l6297 246A  
                                        l6289 242E                                          l6529 1F38  
                                        l5569 22F8                                          l4953 1AAE  
                                        l4945 1A66                                          l4937 1A1C  
                                        l4929 19EA                                          l4779 3562  
                                        l4795 33FE                                          l4787 33D2  
                                        l5499 2DF2                                          l5747 190E  
                                        l5739 18F4                                          l5691 16DA  
                                        l5683 167C                                          l5675 163E  
                                        l5667 15FE                                          l5763 2748  
                                        l5835 2162                                          l5827 211C  
                                        l5819 20E2                                          l5595 297C  
                                        l5587 2942                                          l5579 2912  
                                        l5923 30A4                                          l5843 2C36  
                                        l5851 2C76                                          l4963 1B04  
                                        l4955 1AC6                                          l4947 1A7C  
                                        l4939 1A2C                                          l4971 1B20  
                                        l6299 25A6                                          l4789 33EC  
                                        l4797 2F4A                                          l5693 16EA  
                                        l5685 168C                                          l5677 164C  
                                        l5669 160A                                          l5773 2774  
                                        l5765 274E                                          l5757 2706  
                                        l5837 2164                                          l5829 2120  
                                        l5597 2984                                          l5589 2952  
                                        l5925 30B4                                          l5853 2C92  
                                        l5861 2CE2                                          l5845 2C52  
                                        l5941 103C                                          l5933 100E  
                                        l4965 1B14                                          l4957 1AD8  
                                        l4949 1A92                                          l4981 2B1E  
                                        l4799 2F4E                                          l5695 170A  
                                        l5687 16AA                                          l5679 165C  
                                        l5791 27E2                                          l5783 27A0  
                                        l5775 2780                                          l5767 275C  
                                        l5759 2734                                          l5599 2990  
                                        l5927 30E4                                          l5919 3086  
                                        l5855 2CAE                                          l5847 2C5A  
                                        l5951 1076                                          l5943 104C  
                                        l5935 101C                                          l4959 1AF4  
                                        l4991 2B6C                                          l4983 2B34  
                                        l5871 1C3A                                          l5863 1B6C  
                                        l5697 1734                                          l5689 16BA  
                                        l5785 27B0                                          l5777 278C  
                                        l5929 3110                                          l5857 2CB6  
                                        l5849 2C66                                          l5961 10A4  
                                        l5953 107C                                          l5945 105C  
                                        l5937 102A                                          l4993 2B84  
                                        l4985 2B3E                                          l5881 1CB4  
                                        l5865 1BF6                                          l5699 176A  
                                        l5787 27C0                                          l5795 1FC4  
                                        l5859 2CC2                                          l5971 10D8  
                                        l5963 10A6                                          l5955 108E  
                                        l5947 105E                                          l5939 102C  
                                        l4995 2B88                                          l4987 2B50  
                                        l5883 1CE4                                          l5867 1C12  
                                        l5875 1C46                                          l5789 27D0  
                                        l5797 1FD4                                          l5981 1114  
                                        l5965 10B6                                          l5973 10E0  
                                        l5957 1090                                          l5949 1066  
                                        l4997 2B9A                                          l4989 2B62  
                                        l5893 1D32                                          l5885 1CF8  
                                        l5877 1C8C                                          l5869 1C1E  
                                        l5799 1FE2                                          l5991 1128  
                                        l5983 1118                                          l5975 10F0  
                                        l5967 10C6                                          l5959 1096  
                                        l4999 2BAC                                          l5895 1D44  
                                        l5887 1D0C                                          l5879 1CA0  
                                        l5993 112C                                          l5985 111C  
                                        l5977 1102                                          l5969 10D6  
                                        l5889 1D1E                                          l5995 1130  
                                        l5987 1120                                          l5979 1110  
                                        l5997 1134                                          l5989 1124  
                                        l5999 1138                                          STR_1 1001  
                                        u2010 3226                                          u2011 3222  
                                        u2020 3236                                          u2021 3232  
                                        u2030 3266                                          u2031 3262  
                                        u2120 3002                                          u2121 2FFE  
                                        u2130 3014                                          u2131 3010  
                                        u2140 303C                                          u1245 3358  
                                        u2141 3038                                          _LATA 003FBA  
                                        u1246 335A                                          u2150 3072  
                                        _LATB 003FBB                                          u2151 306E  
                                        _LATC 003FBC                                          u4000 2DD8  
                                        _LATD 003FBD                                          u4001 2DD4  
                                        _LATE 003FBE                                          u4010 2DF2  
                                        u4011 2DEE                                          u4020 2E18  
                                        u2180 3712                                          u4100 22C8  
                                        u3300 1976                                          u4021 2E14  
                                        u2181 370E                                          u4101 22C4  
                                        u3301 1972                                          u4030 2E36  
                                        u4110 22F0                                          u3310 198C  
                                        u3230 3208                                          u4031 2E32  
                                        u4111 22EC                                          u3311 1988  
                                        u3231 3204                                          u4040 2E52  
                                        u4200 150E                                          u4120 2920  
                                        u5000 148E                                          u3400 1A7C  
                                        u3320 19B8                                          u4041 2E4E  
                                        u4201 150A                                          u4121 291C  
                                        u5001 148A                                          u3401 1A78  
                                        u3321 19B4                                          u4050 2E78  
                                        u4210 154E                                          u4130 2942  
                                        u5010 14A0                                          u3410 1A92  
                                        u3330 19D4                                          _T2PR 003FAB  
                                        u4051 2E74                                          u4211 154A  
                                        u4131 293E                                          u5011 149C  
                                        u3411 1A8E                                          u3331 19D0  
                                        u4300 180E                                          u4220 1560  
                                        u4140 297C                                          u5020 14BC  
                                        u3420 1AA2                                          u3340 19EA  
                                        u3500 2B9A                                          u5100 259C  
                                        u4301 180A                                          u4221 155C  
                                        u4141 2978                                          u5021 14B8  
                                        u3421 1A9E                                          u3341 19E6  
                                        u3501 2B96                                          u5101 2598  
                                        u4310 1824                                          u4230 1570  
                                        u4150 299E                                          u5030 2A48  
                                        u5110 3136                                          u3430 1AD8  
                                        u3350 1A0A                                          u3510 2BAC  
                                        u4311 1820                                          u4231 156C  
                                        u4151 299A                                          u5031 2A44  
                                        u5111 3132                                          u3431 1AD4  
                                        u3351 1A06                                          u3511 2BA8  
                                        u4320 1838                                          u4240 15A6  
                                        u4400 2770                                          u4160 29C6  
                                        u5200 23E0                                          u5040 2A86  
                                        u4080 227C                                          u5120 3186  
                                        u3440 1AF4                                          u3360 1A2C  
                                        u3520 2BC2                                          u4321 1834  
                                        u4241 15A2                                          u4401 276C  
                                        u4161 29C2                                          u4065 367C  
                                        u5201 23DC                                          u5041 2A82  
                                        u4081 2278                                          u5121 3182  
                                        u3441 1AF0                                          u3361 1A28  
                                        u3521 2BBE                                          u4330 1852  
                                        u4250 15B6                                          u4410 279C  
                                        u4170 29F8                                          u5210 23FC  
                                        u5130 1DD0                                          u5050 2AA4  
                                        u4090 22A4                                          u3450 1B14  
                                        u3370 1A3E                                          u3290 195A  
                                        u3530 2BE4                                          u2650 2822  
                                        _T4PR 003F9F                                          u4331 184E  
                                        u4251 15B2                                          u4411 2798  
                                        u4171 29F4                                          u4075 3648  
                                        u5211 23F8                                          u5131 1DCC  
                                        u5051 2AA0                                          u4091 22A0  
                                        u3451 1B10                                          u3371 1A3A  
                                        u3291 1956                                          u3531 2BE0  
                                        u2651 281E                                          u4340 189A  
                                        u4260 1754                                          u4180 14EC  
                                        u4420 27C0                                          u4500 210C  
                                        u5220 242E                                          u5140 1DF2  
                                        u5060 2AC4                                          u3380 1A54  
                                        u3540 2C00                                          u3460 2B34  
                                        u2660 2878                                          u4341 1896  
                                        u4181 14E8                                          u4421 27BC  
                                        u4501 2108                                          u5221 242A  
                                        u5141 1DEE                                          u5061 2AC0  
                                        u3381 1A50                                          u3541 2BFC  
                                        u3461 2B30                                          u2661 2874  
                                        u4350 18C8                                          u4270 17AE  
                                        u4190 14FE                                          u4430 27D0  
                                        u4510 211A                                          u5230 2456  
                                        u5150 1E10                                          u5070 2B14  
                                        u3390 1A66                                          u3470 2B50  
                                        u4351 18C4                                          u4271 17AA  
                                        u4191 14FA                                          u4431 27CC  
                                        u4511 2116                                          u5231 2452  
                                        u5151 1E0C                                          u5071 2B10  
                                        u3391 1A62                                          u3471 2B4C  
                                        u4360 1902                                          u4280 17CE  
                                        u4520 2154                                          u4440 1FD4  
                                        u5160 1E50                                          u3480 2B62  
                                        u4600 1D1E                                          u5080 2534  
                                        u5240 25D0                                          u4361 18FE  
                                        u4281 17CA                                          u4265 174A  
                                        u4521 2150                                          u4441 1FD0  
                                        u5161 1E4C                                          u3481 2B5E  
                                        u4601 1D1A                                          u5081 2530  
                                        u5241 25CC                                          u4290 17E0  
                                        u4370 26F0                                          u4530 2162  
                                        u4450 1FE2                                          u5170 1E6A  
                                        u3490 2B84                                          u4610 1D44  
                                        u5090 2566                                          u5250 25E2  
                                        u4291 17DC                                          u4371 26EC  
                                        u4531 215E                                          u4451 1FDE  
                                        u5171 1E66                                          u3491 2B80  
                                        u4611 1D40                                          u5091 2562  
                                        u5251 25DE                                          u4380 2728  
                                        u4460 203E                                          u4620 30A4  
                                        u4540 2C36                                          u4700 10C6  
                                        u5180 1F8C                                          u5260 262E  
                                        _PMD0 0039C0                                          u4461 203A  
                                        u4621 30A0                                          u4541 2C32  
                                        u4701 10C2                                          u5181 1F88  
                                        u5261 262A                                          _PMD1 0039C1  
                                        u4390 275C                                          u4470 2094  
                                        u4630 30B4                                          u4550 2C52  
                                        u4710 1102                                          u5190 1FB0  
                                        u5270 2662                                          _PMD2 0039C2  
                                        u4391 2758                                          u4471 2090  
                                        u4631 30B0                                          u4551 2C4E  
                                        u4711 10FE                                          u5191 1FAC  
                                        u5271 265E                                          _PMD3 0039C3  
                                        u4480 20DE                                          u4560 2C92  
                                        u4800 121C                                          u4720 1110  
                                        u4640 102A                                          u5280 2674  
                                        _PMD4 0039C4                                          u4385 271C  
                                        u4481 20DA                                          u4561 2C8E  
                                        u4801 1218                                          u4721 110C  
                                        u4641 1026                                          u5281 2670  
                                        _PMD5 0039C5                                          u4490 20FC  
                                        u4570 2CAE                                          u4810 124E  
                                        u4730 117E                                          u4650 103C  
                                        u5290 26AC                                          _PMD6 0039C6  
                                        u4491 20F8                                          u4571 2CAA  
                                        u4811 124A                                          u4731 117A  
                                        u4651 1038                                          u5291 26A8  
                                        _PMD7 0039C7                                          u4900 1396  
                                        u4820 125C                                          u4740 1196  
                                        u4660 104C                                          u4580 1C12  
                                        u4901 1392                                          u4821 1258  
                                        u4741 1190                                          u4661 1048  
                                        u4581 1C0E                                          u4910 13A6  
                                        u4830 127A                                          u4750 1198  
                                        u4670 108E                                          u4590 1C3A  
                                        u4911 13A2                                          u4831 1276  
                                        u4671 108A                                          u4591 1C36  
                                        u4920 13B8                                          u4840 12B2  
                                        u4760 11C0                                          u4680 10A4  
                                        u4921 13B4                                          u4841 12AE  
                                        u4761 11BC                                          u4681 10A0  
                                        u4930 13CE                                          u4850 12F8  
                                        u4770 11DE                                          u4690 10B6  
                                        u4931 13CA                                          u4851 12F4  
                                        u4771 11DA                                          u4691 10B2  
                                        u4940 13E4                                          u4860 132E  
                                        u4780 11FE                                          u4941 13E0  
                                        u4861 132A                                          u4781 11FA  
                                        u4950 13F8                                          u4870 133E  
                                        u4790 120C                                          u4951 13F4  
                                        u4871 133A                                          u4791 1208  
                                        u4960 1412                                          u4880 136A  
                                        u4961 140E                                          u4881 1366  
                                        u3985 3614                                          u4970 144C  
                                        u4890 137A                                          u4971 1448  
                                        u4891 1376                                          u3995 35E0  
                                        u4980 145E                                          u4981 145A  
                                        u4990 146E                                          u4991 146A  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        _dbuf 0060                                          _main 39BA  
                                        _loop 25A6                                          _prec 00A4  
                                        _nout 00A0                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf2 003FDF  
                                        fsr1l 003FE1                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00EE  
                             _TMR3_Initialize 354A                               _PWM5_Initialize 3A5A  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 3510  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3624  
                          ?_UART1_rx_vect_isr 0001                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 3A8A  
                               ___fltol@sign1 0100                               __end_of___aldiv 2A1A  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 3846                               __end_of___fladd 14D0  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 2E8A  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 1920  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___fltol 27F4  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 3542  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 3506                                         i1l333 3490  
                                       i1l350 3B1A                                         i1l343 2F48  
                                       i1l336 3494                                         i1l353 3B18  
                                       _U1TXB 003DEA                                         i1l347 38F6  
                                       i1l356 3B10                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 3B20  
                                       i1l692 3872                                         i2l534 3922  
                                       i2l438 37B8                                         i2l446 36BE  
                                       i2l552 3758                                         i1l688 35B4  
                                       i2l529 39B8                                         i2l537 3AA6  
                                       i1l698 3B1C                                         i2l476 37E8  
                                       i2l558 3A10                                         i2l487 36F2  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 3322  
                                       i2l856 344C                                         i2l868 394A  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 0021                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 3B20                               _TMR4_Initialize 3874  
                             _PWM6_Initialize 3A42                             _UART1_tx_vect_isr 34D4  
                            __end_of_TMR4_ISR 35BC                       setSteering@steeringMode 001E  
                                       _delay 003E                                         _flags 00A6  
                                       _fputc 2FF0                         __size_of_calcMotorPow 015A  
                          ?_UART1_tx_vect_isr 0001                                         _width 00A2  
                                       _putch 3AA8                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 00A8                         __size_of_calcSteering 0240  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 3AC6  
                 _UART1_SetRxInterruptHandler 3ABC                       __end_of_CCP4_Initialize 3818  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 3B1C  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 3B1A  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 354A  
                             _TMR5_Initialize 33BA                               _PWM7_Initialize 3A2A  
                             __initialization 3496                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 39DA  
                                __end_of_loop 26D6                   ??_UART1_DefaultErrorHandler 0012  
                     __end_of_TMR2_Initialize 39F6                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 231A  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 350E  
                             _PWM8_Initialize 3A12                              _UART1_Initialize 2F4A  
                                _calcSteering 1B6C                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 3624                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1243 3B16  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        i1l5103 3B12  
                     __end_of_PWM5_Initialize 3A72                       __end_of_TMR3_Initialize 3582  
                                      i1l5221 385A                                        i1l5301 35AC  
                                      i1l5151 3460                                        i1l5161 2E8A  
                                      i1l5153 3472                                        i1l5219 3846  
                                      i1l5171 2EE2                                        i1l5163 2E9A  
                                      i1l5155 3474                                        i1l5173 2EF2  
                                      i1l5165 2EAA                                        i1l5157 3484  
                                      i1l5149 344E                                        i1l4391 38CC  
                                      i1l5175 2F0A                                        i1l5167 2EBA  
                                      i1l5159 3488                                        i1l5271 34DA  
                                      i1l4393 38DE                                        i1l5177 2F26  
                                      i1l5169 2ED2                                        i1l5273 34EE  
                                      i1l4395 38E0                                        i1l5179 2F44  
                                      i1l5275 3516                                        i1l4397 38F0  
                                      i1l5277 352A                                        i1l5295 358A  
                                      i1l4399 38F4                                        i1l5297 358E  
                                      i1l4841 3B0C                                        i1l5299 35A8  
                                      i2l5201 3A08                                        i2l4411 3908  
                                      i2l5203 3A0C                                        i2l4413 390C  
                                      i2l5311 343A                                        i2l5303 3404  
                                      i2l4415 3912                                        i2l4407 38F8  
                                      i2l5321 3310                                        i2l5313 32D0  
                                      i2l5305 3408                                        i2l4409 3906  
                                      i2l4417 3918                                        i2l5323 3924  
                                      i2l5315 32D4                                        i2l5307 3418  
                                      i2l4419 391C                                        i2l5325 3928  
                                      i2l5317 32EE                                        i2l5309 3428  
                                      i2l5181 378A                                        i2l5319 32FE  
                                      i2l5191 37C8                                        i2l5183 3798  
                                      i2l5193 37D4                                        i2l5185 37A4  
                                      i2l5281 369C                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l5291 3740  
                                      i2l5195 37E2                                        i2l5283 36C0  
                                      i2l5187 37B2                                        _INLVLC 003A64  
                                      _INLVLD 003A74                                        i2l5197 39F6  
                                      i2l5189 37BA                                        i2l5285 36D0  
                                      _INLVLE 003A84                                        i2l5199 3A02  
                                      i2l5287 3728                                        i2l5279 368C  
                                      i2l5289 372C                                        i2l4843 3996  
                                      i2l4851 3A9A                                        i2l4845 39A4  
                                      i2l4847 39B0                                  ?_setSteering 001C  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 311A  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 3ADA  
                            __end_of___xxtofl 2176                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 1B6C                      __end_of_CCP3_SetCallBack 3B0C  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 002B                                        ___flge 2A1A  
                                   ??___aldiv 001C                                     ??___fladd 0036  
                                   ??___awdiv 0018                                     ??___flmul 0032  
                                   ??___fltol 00E4                                 _CCP3_CallBack 00F2  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 3A5A  
                     __end_of_TMR4_Initialize 38A0                                        clear_0 34B0  
                                      clear_1 34BC                              ___awdiv@quotient 001A  
                                      _motPow 00B4                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F0  
                                      _smtWay 0098                                        _printf 394C  
                            ?_CCP3_Initialize 0001                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 2CFC                               _ADCC_Initialize 3274  
        __end_of_TMR4_DefaultInterruptHandler 3B1E         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 3B1C                                        fputc@c 0016  
                              _PMD_Initialize 3972                                  __pdataCOMRAM 004C  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 375A  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 3212                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 3AD0         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 3AC6                     _UART1_DefaultErrorHandler 3B0C  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0018                                    ___flge@ff1 002A  
                                  ___flge@ff2 002E                       __end_of_PWM7_Initialize 3A42  
                     __end_of_TMR5_Initialize 3404                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 3370  
                                ___xxtofl@val 001C                                    __accesstop 0060  
                     __end_of__initialization 34CE                              ?_CCP4_Initialize 0001  
                         setSteering@steering 001C                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 00E0                               _TMR5_WriteTimer 38F8  
                          __size_of_calcSpeed 0216                     calcMotorPow@setSpeedDelta 0104  
                    __end_of_CCP4_SetCallBack 3B02                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 3874                            __size_of_checkBatt 0090  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 0108  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 3086  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 3AB2  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 3A2A  
                      __end_of_PMD_Initialize 3996                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 00F8  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                           _calcSteering$4002 0104                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 33BA                               _CLC3_Initialize 38A0  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 0060                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 00E8                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 002A                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 32D0                    __end_of_PWM6_LoadDutyValue 35F0  
        __end_of_TMR5_SetGateInterruptHandler 3AEE         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 3AE4                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0030  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 002D                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 2E8A                                    _getReverse 2B1E  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 0062  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 35F0  
                                  _distRightM 00BE                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 1FC2                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 011A                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 31AA  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 3924  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01A4                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 2FF0  
                                     ___aldiv 290E                               __size_of___flge 0104  
                                     ___fladd 100E                                       ___awdiv 2DC6  
                                     ___flmul 14D0                                       ___fltol 26D6  
                   __end_of_UART1_Receive_ISR 2F4A                                     ?_vfprintf 0025  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                                     __pcinit 3496                     _TMR5_GateInterruptHandler 00EC  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0048                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 39BA                                       __ptext1 25A6  
                                     __ptext2 2474                                       __ptext3 1B6C  
                                     __ptext4 394C                                       __ptext5 31AA  
                                     __ptext6 27F4                                       __ptext7 2FF0  
                                     __ptext8 3AA8                                       __ptext9 3212  
                             __size_of_printf 0026                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                     __end_of_CLC3_Initialize 38CC                         _OSCILLATOR_Initialize 3A72  
                                   _T2CONbits 003FAC                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 009C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0014                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 34CE  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 3ABC                   _UART1_SetTxInterruptHandler 3AB2  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 290E  
                           ?_CCP3_SetCallBack 0014                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 002B  
            __end_of_ADCC_GetSingleConversion 3726                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 38CC                          __size_of_startAccell 0132  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 00DF                            getCurve@deltaRight 0016  
                               ___xxtofl@sign 0024                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0009                          setSteering@steeringB 0023  
                        setSteering@steeringF 0021                       TMR5_WriteTimer@timerVal 0009  
                                 ___flmul@grs 00C9                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 3370                                __end_of___flge 2B1E  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 0023  
                                 vfpfcnvrt@fp 001F                                 __pidataCOMRAM 3B22  
                           __size_of_TMR4_ISR 0038                        ?_OSCILLATOR_Initialize 0001  
                              __end_of_printf 3972                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                _TMR5_ReadTimer 3996  
                         start_initialization 3496                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0088  
                                 _actMotorPow 00AC                                 _uart1TxBuffer 0090  
                         __size_of_getReverse 00FC                          __end_of_TMR4_10msISR 3B18  
                                _middleOffSet 00B6                                   vfprintf@fmt 0027  
                                    ??___flge 0032                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00BA  
                    __size_of_CCP4_Initialize 002E                    __end_of_PWM7_LoadDutyValue 368C  
                           ??_SMT1_Initialize 0014                                      ??_printf 002F  
                      __end_of_TMR5_ReadTimer 39BA                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 00D8                                     ___fladd@b 00D4  
                         calcMotorPow@addMPow 0108                      _ADCC_GetSingleConversion 36F4  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 003C  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                            _UART1_ErrorHandler 00F4  
                               __pcstackBANK0 00C7                                 __pcstackBANK1 0100  
                           __size_of_actSpeed 0094                            _PWM6_LoadDutyValue 35BC  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 00FC                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 37BA                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 1DAC                             __size_of_getCurve 024C  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 311A  
                                _currentSpeed 00B0                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK0 00E8                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 2CFC                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 3ADA         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 3AD0                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___fladd 00D4  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 3AF8  
                                    ?___awdiv 0014             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___fltol 00E0                            ??_UART1_Initialize 0016  
                                   _distLeftM 00C2                                     _distFront 004A  
                            _uart1RxLastError 0040                                 ??_UART1_Write 0014  
                                   _distRight 00C0                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00C6                             __size_of_vfprintf 0068  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 004C  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 3B1A  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 3B18  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3404                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 3728                                     _curveMode 003F  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 3324                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 32D0  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 37EA                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                                    i1u370_20 2EAA                                      i1u370_21 2EA6  
                                    i1u267_20 38F0                                      i1u267_21 38EC  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u372_20 2EE2  
                                    i1u371_28 2EC0                                      i1u372_21 2EDE  
                                    i1u371_29 2ED2                                      i1u380_28 3860  
                                    i1u380_29 3872                                      i1u374_20 2F26  
                                    i1u373_28 2EF8                                      i1u374_21 2F22  
                                    i1u373_29 2F0A                                      i1u390_28 3530  
                                    i1u390_29 3542                                      i1u375_28 2F2C  
                                    i1u368_20 3460                                      i1u375_29 2F40  
                                    i1u368_21 345C                                      i1u369_20 3484  
                                    i1u369_21 3480                                      i1u379_20 385A  
                                    i1u395_20 35A8                                      i1u387_20 34EE  
                                    i1u379_21 3856                                      i1u395_21 35A4  
                                    i1u387_21 34EA                                      i1u389_20 352A  
                                    i1u388_28 34F4                                      i1u389_21 3526  
                                    i1u388_29 3506                                      _PIR1bits 0039A1  
                                    i2u268_40 3906                                      i2u268_41 3902  
                                    _PIR4bits 0039A4                                      i2u376_40 3798  
                                    i2u391_48 36AA                                      i2u376_41 3794  
                                    i2u391_49 36BE                                      i2u393_40 3740  
                                    i2u377_40 37C8                                      i2u392_48 36DE  
                                    i2u393_41 373C                                      i2u377_41 37C4  
                                    i2u392_49 36F2                                      i2u394_48 3746  
                                    i2u394_49 3758                                      _PIR6bits 0039A6  
                                    i2u396_40 3428                                      i2u396_41 3424  
                                    i2u397_40 32FE                                      i2u397_41 32FA  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 3924                                      _TMR4_ISR 3584  
                  __end_of_UART1_Transmit_ISR 3496                                 _TMR4_CallBack 3846  
                                   _smtPeriod 0046                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 27F4                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 3A8A                                  ??_getReverse 0014  
                              ??_calcMotorPow 0102                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 0102  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 3274                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 00FE  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0041  
                          __end_of_getReverse 2C1A                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 394C  
                         __end_of_setSteering 231A                                    vfprintf@ap 0029  
                                    __Lrparam 0000                                    vfprintf@fp 0025  
                                 _oldDistLeft 003A                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0106  
                   __end_of_getBatteryVoltage 3A9A                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___fladd 04C2  
                            __size_of___awdiv 00C4                              __size_of___flmul 0450  
                            __size_of___fltol 011E                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 378A                       __end_of_SMT1_PR_ACQ_ISR 344E  
                                  ?_vfpfcnvrt 001F                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                      _TMR4_SetInterruptHandler 3AEE  
                                    _actSpeed 3086          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 3B12                                      ___xxtofl 1FC2  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 3AA8  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 3324                                      _getCurve 1920  
                                    __ptext10 2B1E                                      __ptext11 1920  
                                    __ptext20 100E                                      __ptext12 311A  
                                    __ptext21 231A                                      __ptext13 2176  
                                    __ptext30 2DC6                                      __ptext22 2C1A  
                                    __ptext14 35BC                                      __ptext31 3370  
                                    __ptext23 3624                                      __ptext15 35F0  
                                    __ptext40 3874                                      __ptext32 2F4A  
                                    __ptext24 3658                                      __ptext16 3A8A  
                                    __ptext41 3AEE                                      __ptext33 3AB2  
                                    __ptext25 3086                                      __ptext17 36F4  
                                    __ptext50 2CFC                                      __ptext42 354A  
                                    __ptext34 3ABC                                      __ptext26 290E  
                                    __ptext18 2A1A                                      __ptext51 3A72  
                                    __ptext43 39DA                                      __ptext35 3AC6  
                                    __ptext27 1FC2                                      __ptext19 1DAC  
                                    __ptext60 344E                                      __ptext52 3324  
                                    __ptext44 375A                                      __ptext36 3AD0  
                                    __ptext28 26D6                                      __ptext61 3510  
                                    __ptext53 38A0                                      __ptext45 3A12  
                                    __ptext37 3ADA                                      __ptext29 14D0  
                                    __ptext70 3B1C                                      __ptext62 2E8A  
                                    __ptext54 37EA                                      __ptext46 3A2A  
                                    __ptext38 33BA                                      __ptext71 3B20  
                                    __ptext63 3B18                                      __ptext55 3AF8  
                                    __ptext47 3A42                                      __ptext39 3AE4  
                                    __ptext80 3996                                      __ptext72 368C  
                                    __ptext64 3B1A                                      __ptext56 3818  
                                    __ptext48 3A5A                                      __ptext81 3404  
                                    __ptext73 378A                                      __ptext65 3B0C  
                                    __ptext57 3B02                                      __ptext49 3972  
                                    __ptext82 32D0                                      __ptext74 36C0  
                                    __ptext66 38CC                                      __ptext58 3274  
                                    __ptext83 3924                                      __ptext75 37BA  
                                    __ptext67 3584                                      __ptext59 34D4  
                                    __ptext84 0000                                      __ptext76 3728  
                                    __ptext68 3846                                      __ptext77 39F6  
                                    __ptext69 3B12                                      __ptext78 3A9A  
                                    __ptext79 38F8                                      _distLeft 00C4  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 0102  
               __end_of_UART1_SetErrorHandler 3AE4                                    _T3GCONbits 003FA7  
                                 ??_checkBatt 0036                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                                    _oldSpeed 00AE                                    _T5GCONbits 003F9B  
                               __size_of_loop 0130                               _SMT1_Initialize 375A  
                                 _IVTLOCKbits 003FD4                                      _setMotor 2C1A  
                                    _setSpeed 00B2                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00F6  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                                      _vfprintf 31AA  
                                   printf@fmt 002D                    __end_of_PWM8_LoadDutyValue 3658  
                             _CCP3_CaptureISR 368C                                   _UART1_Write 3212  
                       fp__UART1_Transmit_ISR 0000                             ??_TMR5_Initialize 0016  
                           ??_PWM7_Initialize 0014           fp__TMR5_DefaultGateInterruptHandler 0000  
    __end_of_TMR5_DefaultGateInterruptHandler 3A12     __size_of_TMR5_DefaultGateInterruptHandler 001C  
          ??_TMR5_DefaultGateInterruptHandler 0011             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 39F6                           __end_of_startAccell 25A6  
                              _battCheckCount 00B8                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 00BC  
                             ??_TMR5_GATE_ISR 0011                   __end_of_UART1_RxDataHandler 38F8  
                                 _uart1RxHead 0043                          _CCP4_DefaultCallBack 37BA  
                                 _uart1TxHead 0045                                   _uart1RxTail 0042  
                                 _uart1TxTail 0044                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 3658                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 2176                               _CCP4_CaptureISR 36C0  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 2474  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 1DAC                           _uart1RxStatusBuffer 0080  
                                    printf@ap 002F                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 3B12                                   ??_vfpfcnvrt 0025  
                                 _reverseTime 00AA                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 3A9A                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                               actSpeed@speed 0024                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0106                              _CCP3_SetCallBack 3B02  
                   __size_of_UART1_Initialize 00A6                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 3818  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0106  
                    _UART1_TxInterruptHandler 00FA                                 ___fladd@signs 00DC  
                         __end_of_Default_ISR 3B22                       __end_of_SMT1_Initialize 378A  
              __end_of_PIN_MANAGER_Initialize 2DC6                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 00DD                                  ___fladd@bexp 00DE  
                ?_UART1_SetTxInterruptHandler 0014                       __end_of_CCP3_CaptureISR 36C0  
