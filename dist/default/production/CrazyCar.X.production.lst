

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 01 12:27:05 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=4,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=4,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=4,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=4,class=CODE,delta=1
    78                           	psect	text63,global,reloc=4,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=4,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=4,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=4,class=CODE,delta=1
    88                           	psect	text73,global,reloc=4,class=CODE,delta=1
    89                           	psect	text74,global,reloc=4,class=CODE,delta=1
    90                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	text75,global,reloc=4,class=CODE,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96  0000                     
    97                           ; Version 2.20
    98                           ; Generated 05/05/2020 GMT
    99                           ; 
   100                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F46K42 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataCOMRAM
   133  00273A                     __pidataCOMRAM:
   134                           	callstack 0
   135                           
   136                           ;initializer for _driveMode
   137  00273A  01                 	db	1
   138                           
   139                           	psect	idataBANK0
   140  002730                     __pidataBANK0:
   141                           	callstack 0
   142                           
   143                           ;initializer for _middleOffSet
   144  002730  FFF1               	dw	65521
   145                           
   146                           	psect	nvBANK0
   147  0000C7                     __pnvBANK0:
   148                           	callstack 0
   149  0000C7                     _TMR4_InterruptHandler:
   150                           	callstack 0
   151  0000C7                     	ds	2
   152  0000C9                     _timer3ReloadVal:
   153                           	callstack 0
   154  0000C9                     	ds	2
   155  0000CB                     _TMR5_GateInterruptHandler:
   156                           	callstack 0
   157  0000CB                     	ds	2
   158  0000CD                     _timer5ReloadVal:
   159                           	callstack 0
   160  0000CD                     	ds	2
   161  0000CF                     _CCP4_CallBack:
   162                           	callstack 0
   163  0000CF                     	ds	2
   164  0000D1                     _CCP3_CallBack:
   165                           	callstack 0
   166  0000D1                     	ds	2
   167  0000D3                     _UART1_ErrorHandler:
   168                           	callstack 0
   169  0000D3                     	ds	2
   170  0000D5                     _UART1_OverrunErrorHandler:
   171                           	callstack 0
   172  0000D5                     	ds	2
   173  0000D7                     _UART1_FramingErrorHandler:
   174                           	callstack 0
   175  0000D7                     	ds	2
   176  0000D9                     _UART1_TxInterruptHandler:
   177                           	callstack 0
   178  0000D9                     	ds	2
   179  0000DB                     _UART1_RxInterruptHandler:
   180                           	callstack 0
   181  0000DB                     	ds	2
   182  0000DD                     _uart1TxBufferRemaining:
   183                           	callstack 0
   184  0000DD                     	ds	1
   185  0000                     _PIR4bits	set	14756
   186  0000                     _PIR1bits	set	14753
   187  0000                     _PIE1bits	set	14737
   188  0000                     _PIE7bits	set	14743
   189  0000                     _PIR7bits	set	14759
   190  0000                     _PIR6bits	set	14758
   191  0000                     _PIE8bits	set	14744
   192  0000                     _PIR8bits	set	14760
   193  0000                     _PIE10bits	set	14746
   194  0000                     _PIR10bits	set	14762
   195  0000                     _PIE9bits	set	14745
   196  0000                     _PIR9bits	set	14761
   197  0000                     _IPR9bits	set	14729
   198  0000                     _IPR7bits	set	14727
   199  0000                     _IPR8bits	set	14728
   200  0000                     _IPR10bits	set	14730
   201  0000                     _IPR1bits	set	14721
   202  0000                     _IPR3bits	set	14723
   203  0000                     _PIE3bits	set	14739
   204  0000                     _PMD7	set	14791
   205  0000                     _PMD6	set	14790
   206  0000                     _PMD5	set	14789
   207  0000                     _PMD4	set	14788
   208  0000                     _PMD3	set	14787
   209  0000                     _PMD2	set	14786
   210  0000                     _PMD1	set	14785
   211  0000                     _PMD0	set	14784
   212  0000                     _OSCTUNE	set	14814
   213  0000                     _OSCFRQ	set	14815
   214  0000                     _OSCEN	set	14813
   215  0000                     _OSCCON3	set	14811
   216  0000                     _OSCCON1	set	14809
   217  0000                     _CCP4PPS	set	15056
   218  0000                     _SMT1SIGPPS	set	15058
   219  0000                     _CLCIN2PPS	set	15067
   220  0000                     _RB3PPS	set	14859
   221  0000                     _RA3PPS	set	14851
   222  0000                     _SMT1WINPPS	set	15057
   223  0000                     _CLCIN0PPS	set	15065
   224  0000                     _RA4PPS	set	14852
   225  0000                     _T5GPPS	set	15049
   226  0000                     _RA0PPS	set	14848
   227  0000                     _U1RXPPS	set	15077
   228  0000                     _RA1PPS	set	14849
   229  0000                     _CLCIN3PPS	set	15068
   230  0000                     _CCP3PPS	set	15055
   231  0000                     _INLVLE	set	14980
   232  0000                     _INLVLD	set	14964
   233  0000                     _INLVLC	set	14948
   234  0000                     _INLVLB	set	14932
   235  0000                     _INLVLA	set	14916
   236  0000                     _SLRCONE	set	14979
   237  0000                     _SLRCOND	set	14963
   238  0000                     _SLRCONC	set	14947
   239  0000                     _SLRCONB	set	14931
   240  0000                     _SLRCONA	set	14915
   241  0000                     _ODCOND	set	14962
   242  0000                     _ODCONC	set	14946
   243  0000                     _ODCONB	set	14930
   244  0000                     _ODCONA	set	14914
   245  0000                     _ODCONE	set	14978
   246  0000                     _RD1I2C	set	14971
   247  0000                     _RD0I2C	set	14970
   248  0000                     _RC4I2C	set	14955
   249  0000                     _RC3I2C	set	14954
   250  0000                     _RB2I2C	set	14939
   251  0000                     _RB1I2C	set	14938
   252  0000                     _WPUC	set	14945
   253  0000                     _WPUA	set	14913
   254  0000                     _WPUB	set	14929
   255  0000                     _WPUE	set	14977
   256  0000                     _WPUD	set	14961
   257  0000                     _ANSELA	set	14912
   258  0000                     _ANSELE	set	14976
   259  0000                     _ANSELB	set	14928
   260  0000                     _ANSELC	set	14944
   261  0000                     _ANSELD	set	14960
   262  0000                     _CLC3CON	set	15456
   263  0000                     _CLC3GLS3	set	15465
   264  0000                     _CLC3GLS2	set	15464
   265  0000                     _CLC3GLS1	set	15463
   266  0000                     _CLC3GLS0	set	15462
   267  0000                     _CLC3SEL3	set	15461
   268  0000                     _CLC3SEL2	set	15460
   269  0000                     _CLC3SEL1	set	15459
   270  0000                     _CLC3SEL0	set	15458
   271  0000                     _CLC3POL	set	15457
   272  0000                     _CLC3CONbits	set	15456
   273  0000                     _U1RXB	set	15848
   274  0000                     _U1TXB	set	15850
   275  0000                     _U1ERRIRbits	set	15865
   276  0000                     _U1ERRIE	set	15866
   277  0000                     _U1ERRIR	set	15865
   278  0000                     _U1UIR	set	15864
   279  0000                     _U1FIFO	set	15863
   280  0000                     _U1BRGH	set	15862
   281  0000                     _U1BRGL	set	15861
   282  0000                     _U1CON2	set	15860
   283  0000                     _U1CON1	set	15859
   284  0000                     _U1CON0	set	15858
   285  0000                     _U1P3H	set	15857
   286  0000                     _U1P3L	set	15856
   287  0000                     _U1P2H	set	15855
   288  0000                     _U1P2L	set	15854
   289  0000                     _U1P1H	set	15853
   290  0000                     _U1P1L	set	15852
   291  0000                     _ADCON1bits	set	16121
   292  0000                     _ADERRL	set	16098
   293  0000                     _ADERRH	set	16099
   294  0000                     _ADPREVL	set	16109
   295  0000                     _ADPREVH	set	16110
   296  0000                     _ADFLTRL	set	16102
   297  0000                     _ADFLTRH	set	16103
   298  0000                     _ADSTATbits	set	16124
   299  0000                     _ADACCL	set	16104
   300  0000                     _ADACCH	set	16105
   301  0000                     _ADCON2bits	set	16122
   302  0000                     _ADCNT	set	16107
   303  0000                     _ADCON3bits	set	16123
   304  0000                     _ADRESL	set	16111
   305  0000                     _ADRESH	set	16112
   306  0000                     _ADCON0bits	set	16120
   307  0000                     _ADCON0	set	16120
   308  0000                     _ADCLK	set	16127
   309  0000                     _ADACT	set	16126
   310  0000                     _ADREF	set	16125
   311  0000                     _ADSTAT	set	16124
   312  0000                     _ADCON3	set	16123
   313  0000                     _ADCON2	set	16122
   314  0000                     _ADCON1	set	16121
   315  0000                     _ADPREH	set	16119
   316  0000                     _ADPREL	set	16118
   317  0000                     _ADCAP	set	16117
   318  0000                     _ADACQH	set	16116
   319  0000                     _ADACQL	set	16115
   320  0000                     _ADPCH	set	16113
   321  0000                     _ADRPT	set	16108
   322  0000                     _ADACCU	set	16106
   323  0000                     _ADSTPTH	set	16101
   324  0000                     _ADSTPTL	set	16100
   325  0000                     _ADUTHH	set	16097
   326  0000                     _ADUTHL	set	16096
   327  0000                     _ADLTHH	set	16095
   328  0000                     _ADLTHL	set	16094
   329  0000                     _SMT1TMR	set	16146
   330  0000                     _SMT1CPR	set	16149
   331  0000                     _SMT1CPW	set	16152
   332  0000                     _SMT1PR	set	16155
   333  0000                     _SMT1STATbits	set	16160
   334  0000                     _SMT1CON0bits	set	16158
   335  0000                     _SMT1CON1bits	set	16159
   336  0000                     _SMT1PRL	set	16155
   337  0000                     _SMT1PRH	set	16156
   338  0000                     _SMT1PRU	set	16157
   339  0000                     _SMT1SIG	set	16162
   340  0000                     _SMT1WIN	set	16163
   341  0000                     _SMT1CLK	set	16161
   342  0000                     _SMT1STAT	set	16160
   343  0000                     _SMT1CON1	set	16159
   344  0000                     _SMT1CON0	set	16158
   345  0000                     _CCPTMRS1bits	set	16223
   346  0000                     _CCPTMRS0bits	set	16222
   347  0000                     _PORTBbits	set	16331
   348  0000                     _PR2	set	16299
   349  0000                     _TMR2	set	16298
   350  0000                     _T2CONbits	set	16300
   351  0000                     _T2RSTbits	set	16303
   352  0000                     _T2HLTbits	set	16301
   353  0000                     _T2CON	set	16300
   354  0000                     _T2TMR	set	16298
   355  0000                     _T2PR	set	16299
   356  0000                     _T2RST	set	16303
   357  0000                     _T2HLT	set	16301
   358  0000                     _T2CLKCON	set	16302
   359  0000                     _PWM6DCL	set	16232
   360  0000                     _PWM6DCH	set	16233
   361  0000                     _PWM6CON	set	16234
   362  0000                     _PWM5DCL	set	16236
   363  0000                     _PWM5DCH	set	16237
   364  0000                     _PWM5CON	set	16238
   365  0000                     _PWM8DCL	set	16224
   366  0000                     _PWM8DCH	set	16225
   367  0000                     _PWM8CON	set	16226
   368  0000                     _PWM7DCL	set	16228
   369  0000                     _PWM7DCH	set	16229
   370  0000                     _PWM7CON	set	16230
   371  0000                     _PR4	set	16287
   372  0000                     _TMR4	set	16286
   373  0000                     _T4CONbits	set	16288
   374  0000                     _T4RSTbits	set	16291
   375  0000                     _T4HLTbits	set	16289
   376  0000                     _T4CON	set	16288
   377  0000                     _T4TMR	set	16286
   378  0000                     _T4PR	set	16287
   379  0000                     _T4RST	set	16291
   380  0000                     _T4HLT	set	16289
   381  0000                     _T4CLKCON	set	16290
   382  0000                     _T3GCONbits	set	16295
   383  0000                     _T3CONbits	set	16294
   384  0000                     _T3CON	set	16294
   385  0000                     _TMR3L	set	16292
   386  0000                     _TMR3H	set	16293
   387  0000                     _T3CLK	set	16297
   388  0000                     _T3GATE	set	16296
   389  0000                     _T3GCON	set	16295
   390  0000                     _T5GCONbits	set	16283
   391  0000                     _T5CONbits	set	16282
   392  0000                     _T5CON	set	16282
   393  0000                     _TMR5L	set	16280
   394  0000                     _TMR5H	set	16281
   395  0000                     _T5CLK	set	16285
   396  0000                     _T5GATE	set	16284
   397  0000                     _T5GCON	set	16283
   398  0000                     _CCPR4L	set	16240
   399  0000                     _CCPR4H	set	16241
   400  0000                     _CCP4CAP	set	16243
   401  0000                     _CCP4CON	set	16242
   402  0000                     _CCPR3L	set	16244
   403  0000                     _CCPR3H	set	16245
   404  0000                     _CCP3CAP	set	16247
   405  0000                     _CCP3CON	set	16246
   406  0000                     _PORTDbits	set	16333
   407  0000                     _IVTBASEL	set	16341
   408  0000                     _IVTBASEH	set	16342
   409  0000                     _IVTBASEU	set	16343
   410  0000                     _IVTLOCKbits	set	16340
   411  0000                     _IVTLOCK	set	16340
   412  0000                     _INTCON0bits	set	16338
   413  0000                     _TRISD	set	16325
   414  0000                     _TRISC	set	16324
   415  0000                     _TRISB	set	16323
   416  0000                     _TRISA	set	16322
   417  0000                     _TRISE	set	16326
   418  0000                     _LATC	set	16316
   419  0000                     _LATB	set	16315
   420  0000                     _LATA	set	16314
   421  0000                     _LATD	set	16317
   422  0000                     _LATE	set	16318
   423  0000                     _GIE	set	130711
   424                           
   425                           ; #config settings
   426                           
   427                           	psect	cinit
   428  001ED2                     __pcinit:
   429                           	callstack 0
   430  001ED2                     start_initialization:
   431                           	callstack 0
   432  001ED2                     __initialization:
   433                           	callstack 0
   434                           
   435                           ; Initialize objects allocated to BANK0 (2 bytes)
   436                           ; load TBLPTR registers with __pidataBANK0
   437  001ED2  0E30               	movlw	low __pidataBANK0
   438  001ED4  6EF6               	movwf	tblptrl,c
   439  001ED6  0E27               	movlw	high __pidataBANK0
   440  001ED8  6EF7               	movwf	tblptrh,c
   441  001EDA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   442  001EDC  6EF8               	movwf	tblptru,c
   443  001EDE  0009               	tblrd		*+	;fetch initializer
   444  001EE0  006F FFD4  F0DE    	movff	tablat,__pdataBANK0
   445  001EE6  0009               	tblrd		*+	;fetch initializer
   446  001EE8  006F FFD4  F0DF    	movff	tablat,__pdataBANK0+1
   447                           
   448                           ; Initialize objects allocated to COMRAM (1 bytes)
   449                           ; load TBLPTR registers with __pidataCOMRAM
   450  001EEE  0E3A               	movlw	low __pidataCOMRAM
   451  001EF0  6EF6               	movwf	tblptrl,c
   452  001EF2  0E27               	movlw	high __pidataCOMRAM
   453  001EF4  6EF7               	movwf	tblptrh,c
   454  001EF6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   455  001EF8  6EF8               	movwf	tblptru,c
   456  001EFA  0009               	tblrd		*+	;fetch initializer
   457  001EFC  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   458                           
   459                           ; Clear objects allocated to BANK0 (61 bytes)
   460  001F02  EE00  F060         	lfsr	0,__pbssBANK0
   461  001F06  0E3D               	movlw	61
   462  001F08                     clear_0:
   463  001F08  6AEE               	clrf	postinc0,c
   464  001F0A  06E8               	decf	wreg,f,c
   465  001F0C  E1FD               	bnz	clear_0
   466                           
   467                           ; Clear objects allocated to COMRAM (18 bytes)
   468  001F0E  EE00  F03A         	lfsr	0,__pbssCOMRAM
   469  001F12  0E12               	movlw	18
   470  001F14                     clear_1:
   471  001F14  6AEE               	clrf	postinc0,c
   472  001F16  06E8               	decf	wreg,f,c
   473  001F18  E1FD               	bnz	clear_1
   474                           
   475                           ;
   476                           ; Setup IVTBASE
   477                           ;
   478  001F1A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   479  001F1C  6ED5               	movwf	213,c
   480  001F1E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   481  001F20  6ED6               	movwf	214,c
   482  001F22  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   483  001F24  6ED7               	movwf	215,c
   484  001F26                     end_of_initialization:
   485                           	callstack 0
   486  001F26                     __end_of__initialization:
   487                           	callstack 0
   488  001F26  0E00               	movlw	low (__Lmediumconst shr (0+16))
   489  001F28  6EF8               	movwf	tblptru,c
   490  001F2A  0100               	movlb	0
   491  001F2C  EFF6  F012         	goto	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMRAM
   494  00003A                     __pbssCOMRAM:
   495                           	callstack 0
   496  00003A                     _oldDistLeft:
   497                           	callstack 0
   498  00003A                     	ds	2
   499  00003C                     TMR4_ISR@CountCallBack:
   500                           	callstack 0
   501  00003C                     	ds	2
   502  00003E                     _delay:
   503                           	callstack 0
   504  00003E                     	ds	1
   505  00003F                     _curveMode:
   506                           	callstack 0
   507  00003F                     	ds	1
   508  000040                     _uart1RxLastError:
   509                           	callstack 0
   510  000040                     	ds	1
   511  000041                     _uart1RxCount:
   512                           	callstack 0
   513  000041                     	ds	1
   514  000042                     _uart1RxTail:
   515                           	callstack 0
   516  000042                     	ds	1
   517  000043                     _uart1RxHead:
   518                           	callstack 0
   519  000043                     	ds	1
   520  000044                     _uart1TxTail:
   521                           	callstack 0
   522  000044                     	ds	1
   523  000045                     _uart1TxHead:
   524                           	callstack 0
   525  000045                     	ds	1
   526  000046                     _smtPeriod:
   527                           	callstack 0
   528  000046                     	ds	4
   529  00004A                     _distFront:
   530                           	callstack 0
   531  00004A                     	ds	2
   532                           
   533                           	psect	dataCOMRAM
   534  00004C                     __pdataCOMRAM:
   535                           	callstack 0
   536  00004C                     _driveMode:
   537                           	callstack 0
   538  00004C                     	ds	1
   539                           
   540                           	psect	bssBANK0
   541  000060                     __pbssBANK0:
   542                           	callstack 0
   543  000060                     _uart1RxStatusBuffer:
   544                           	callstack 0
   545  000060                     	ds	8
   546  000068                     _uart1RxBuffer:
   547                           	callstack 0
   548  000068                     	ds	8
   549  000070                     _uart1TxBuffer:
   550                           	callstack 0
   551  000070                     	ds	8
   552  000078                     _smtWay:
   553                           	callstack 0
   554  000078                     	ds	4
   555  00007C                     _smtDuty:
   556                           	callstack 0
   557  00007C                     	ds	4
   558  000080                     _BatteryVolt:
   559                           	callstack 0
   560  000080                     	ds	2
   561  000082                     _reverseTime:
   562                           	callstack 0
   563  000082                     	ds	2
   564  000084                     _actMotorPow:
   565                           	callstack 0
   566  000084                     	ds	2
   567  000086                     _oldSpeed:
   568                           	callstack 0
   569  000086                     	ds	2
   570  000088                     _currentSpeed:
   571                           	callstack 0
   572  000088                     	ds	2
   573  00008A                     _setSpeed:
   574                           	callstack 0
   575  00008A                     	ds	2
   576  00008C                     _motPow:
   577                           	callstack 0
   578  00008C                     	ds	2
   579  00008E                     _battCheckCount:
   580                           	callstack 0
   581  00008E                     	ds	2
   582  000090                     _oldDistRight:
   583                           	callstack 0
   584  000090                     	ds	2
   585  000092                     _reverseCount:
   586                           	callstack 0
   587  000092                     	ds	2
   588  000094                     _distRightM:
   589                           	callstack 0
   590  000094                     	ds	2
   591  000096                     _distRight:
   592                           	callstack 0
   593  000096                     	ds	2
   594  000098                     _distLeftM:
   595                           	callstack 0
   596  000098                     	ds	2
   597  00009A                     _distLeft:
   598                           	callstack 0
   599  00009A                     	ds	2
   600  00009C                     _cycle10ms:
   601                           	callstack 0
   602  00009C                     	ds	1
   603                           
   604                           	psect	dataBANK0
   605  0000DE                     __pdataBANK0:
   606                           	callstack 0
   607  0000DE                     _middleOffSet:
   608                           	callstack 0
   609  0000DE                     	ds	2
   610                           
   611                           	psect	cstackBANK0
   612  00009D                     __pcstackBANK0:
   613                           	callstack 0
   614  00009D                     ___flmul@sign:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x0
   618  00009D                     	ds	1
   619  00009E                     ___flmul@aexp:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x1
   623  00009E                     	ds	1
   624  00009F                     ___flmul@grs:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x2
   628  00009F                     	ds	4
   629  0000A3                     ___flmul@bexp:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x6
   633  0000A3                     	ds	1
   634  0000A4                     ___flmul@prod:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x7
   638  0000A4                     	ds	4
   639  0000A8                     ___flmul@temp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0xB
   643  0000A8                     	ds	2
   644  0000AA                     ?___fladd:
   645                           	callstack 0
   646  0000AA                     ___fladd@b:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0xD
   650  0000AA                     	ds	4
   651  0000AE                     ___fladd@a:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x11
   655  0000AE                     	ds	4
   656  0000B2                     ___fladd@signs:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x15
   660  0000B2                     	ds	1
   661  0000B3                     ___fladd@aexp:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x16
   665  0000B3                     	ds	1
   666  0000B4                     ___fladd@bexp:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x17
   670  0000B4                     	ds	1
   671  0000B5                     ___fladd@grs:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x18
   675  0000B5                     	ds	1
   676  0000B6                     ?___fltol:
   677                           	callstack 0
   678  0000B6                     ___fltol@f1:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x19
   682  0000B6                     	ds	4
   683  0000BA                     ??___fltol:
   684                           
   685                           ; 1 bytes @ 0x1D
   686  0000BA                     	ds	4
   687  0000BE                     ___fltol@sign1:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x21
   691  0000BE                     	ds	1
   692  0000BF                     ___fltol@exp1:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x22
   696  0000BF                     	ds	1
   697  0000C0                     ??_calcSpeed:
   698  0000C0                     ??_calcMotorPow:
   699  0000C0                     startAccell@MPow:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x23
   703  0000C0                     	ds	2
   704  0000C2                     calcMotorPow@setSpeedDelta:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x25
   708  0000C2                     	ds	2
   709  0000C4                     calcSpeed@speed:
   710                           	callstack 0
   711  0000C4                     calcMotorPow@oldSpeedDelta:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x27
   715  0000C4                     	ds	2
   716  0000C6                     calcMotorPow@addMPow:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x29
   720  0000C6                     	ds	1
   721                           
   722                           	psect	cstackCOMRAM
   723  000001                     __pcstackCOMRAM:
   724                           	callstack 0
   725  000001                     CCP3_DefaultCallBack@capturedValue:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x0
   729  000001                     	ds	2
   730  000003                     CCP3_CaptureISR@module:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x2
   734  000003                     	ds	2
   735  000005                     CCP4_DefaultCallBack@capturedValue:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x4
   739  000005                     	ds	2
   740  000007                     CCP4_CaptureISR@module:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x6
   744  000007                     	ds	2
   745  000009                     ?_TMR5_ReadTimer:
   746                           	callstack 0
   747  000009                     TMR5_WriteTimer@timerVal:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x8
   751  000009                     	ds	2
   752  00000B                     ??_TMR5_ReadTimer:
   753  00000B                     
   754                           ; 1 bytes @ 0xA
   755  00000B                     	ds	2
   756  00000D                     TMR5_ReadTimer@readVal:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0xC
   760  00000D                     	ds	2
   761  00000F                     TMR5_ReadTimer@readValHigh:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0xE
   765  00000F                     	ds	1
   766  000010                     TMR5_ReadTimer@readValLow:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0xF
   770  000010                     	ds	1
   771  000011                     ??_UART1_tx_vect_isr:
   772  000011                     
   773                           ; 1 bytes @ 0x10
   774  000011                     	ds	1
   775  000012                     ??_UART1_rx_vect_isr:
   776                           
   777                           ; 1 bytes @ 0x11
   778  000012                     	ds	1
   779  000013                     ??_TMR4_ISR:
   780                           
   781                           ; 1 bytes @ 0x12
   782  000013                     	ds	1
   783  000014                     ??_TMR3_Initialize:
   784  000014                     ??_getCurve:
   785  000014                     ?___awdiv:
   786                           	callstack 0
   787  000014                     ?___aldiv:
   788                           	callstack 0
   789  000014                     INTERRUPT_Initialize@state:
   790                           	callstack 0
   791  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   792                           	callstack 0
   793  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   794                           	callstack 0
   795  000014                     UART1_SetErrorHandler@interruptHandler:
   796                           	callstack 0
   797  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
   798                           	callstack 0
   799  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
   800                           	callstack 0
   801  000014                     CCP3_SetCallBack@customCallBack:
   802                           	callstack 0
   803  000014                     CCP4_SetCallBack@customCallBack:
   804                           	callstack 0
   805  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
   806                           	callstack 0
   807  000014                     TMR4_SetInterruptHandler@InterruptHandler:
   808                           	callstack 0
   809  000014                     PWM7_LoadDutyValue@dutyValue:
   810                           	callstack 0
   811  000014                     PWM8_LoadDutyValue@dutyValue:
   812                           	callstack 0
   813  000014                     PWM5_LoadDutyValue@dutyValue:
   814                           	callstack 0
   815  000014                     PWM6_LoadDutyValue@dutyValue:
   816                           	callstack 0
   817  000014                     ___awdiv@dividend:
   818                           	callstack 0
   819  000014                     ___aldiv@dividend:
   820                           	callstack 0
   821  000014                     ___flge@ff1:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x13
   825  000014                     	ds	2
   826  000016                     ??_TMR5_Initialize:
   827  000016                     ??_PWM7_LoadDutyValue:
   828  000016                     ??_PWM8_LoadDutyValue:
   829  000016                     ??_PWM5_LoadDutyValue:
   830  000016                     ??_PWM6_LoadDutyValue:
   831  000016                     getCurve@deltaRight:
   832                           	callstack 0
   833  000016                     ___awdiv@divisor:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x15
   837  000016                     	ds	2
   838  000018                     ___awdiv@counter:
   839                           	callstack 0
   840  000018                     getCurve@deltaLeft:
   841                           	callstack 0
   842  000018                     setMotor@motorPower:
   843                           	callstack 0
   844  000018                     ___aldiv@divisor:
   845                           	callstack 0
   846  000018                     ___flge@ff2:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x17
   850  000018                     	ds	1
   851  000019                     ___awdiv@sign:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x18
   855  000019                     	ds	1
   856  00001A                     ??_setMotor:
   857  00001A                     ___awdiv@quotient:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x19
   861  00001A                     	ds	2
   862  00001C                     ??___flge:
   863  00001C                     ?___xxtofl:
   864                           	callstack 0
   865  00001C                     ___aldiv@counter:
   866                           	callstack 0
   867  00001C                     setSteering@steering:
   868                           	callstack 0
   869  00001C                     ___xxtofl@val:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0x1B
   873  00001C                     	ds	1
   874  00001D                     ___aldiv@sign:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x1C
   878  00001D                     	ds	1
   879  00001E                     setSteering@steeringMode:
   880                           	callstack 0
   881  00001E                     ___aldiv@quotient:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x1D
   885  00001E                     	ds	1
   886  00001F                     ??_setSteering:
   887                           
   888                           ; 1 bytes @ 0x1E
   889  00001F                     	ds	1
   890  000020                     ??___xxtofl:
   891                           
   892                           ; 1 bytes @ 0x1F
   893  000020                     	ds	1
   894  000021                     setSteering@steeringF:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x20
   898  000021                     	ds	1
   899  000022                     ?_actSpeed:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x21
   903  000022                     	ds	1
   904  000023                     setSteering@steeringB:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x22
   908  000023                     	ds	1
   909  000024                     ___xxtofl@sign:
   910                           	callstack 0
   911  000024                     actSpeed@speed:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x23
   915  000024                     	ds	1
   916  000025                     ??_calcSteering:
   917  000025                     ___xxtofl@exp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x24
   921  000025                     	ds	1
   922  000026                     ___xxtofl@arg:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x25
   926  000026                     	ds	1
   927  000027                     _calcSteering$3880:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x26
   931  000027                     	ds	2
   932  000029                     calcSteering@delta:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x28
   936  000029                     	ds	1
   937  00002A                     ?___flmul:
   938                           	callstack 0
   939  00002A                     ___flmul@b:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x29
   943  00002A                     	ds	4
   944  00002E                     ___flmul@a:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x2D
   948  00002E                     	ds	4
   949  000032                     ??___flmul:
   950                           
   951                           ; 1 bytes @ 0x31
   952  000032                     	ds	4
   953  000036                     ??___fladd:
   954                           
   955                           ; 1 bytes @ 0x35
   956  000036                     	ds	4
   957  00003A                     
   958                           ; 1 bytes @ 0x39
   959 ;;
   960 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   961 ;;
   962 ;; *************** function _main *****************
   963 ;; Defined at:
   964 ;;		line 8 in file "main.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels required when called: 13
   984 ;; This function calls:
   985 ;;		_SYSTEM_Initialize
   986 ;;		_TMR4_SetInterruptHandler
   987 ;;		_loop
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text0
   994  0025EC                     __ptext0:
   995                           	callstack 0
   996  0025EC                     _main:
   997                           	callstack 18
   998  0025EC                     
   999                           ;main.c: 9:     SYSTEM_Initialize();
  1000  0025EC  EC16  F010         	call	_SYSTEM_Initialize	;wreg free
  1001  0025F0                     
  1002                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1003  0025F0  8ED2               	bsf	210,7,c	;volatile
  1004  0025F2                     
  1005                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1006  0025F2  8CD2               	bsf	210,6,c	;volatile
  1007                           
  1008                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1009  0025F4  0E2A               	movlw	low _TMR4_10msISR
  1010  0025F6  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1011  0025F8  0E27               	movlw	high _TMR4_10msISR
  1012  0025FA  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1013  0025FC  EC83  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  1014  002600                     l5788:
  1015                           
  1016                           ;main.c: 15:         loop();
  1017  002600  EC75  F00E         	call	_loop	;wreg free
  1018  002604  EF00  F013         	goto	l5788
  1019  002608  EF57  F000         	goto	start
  1020  00260C                     __end_of_main:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _loop *****************
  1024 ;; Defined at:
  1025 ;;		line 19 in file "main.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 12
  1046 ;; This function calls:
  1047 ;;		_calcMotorPow
  1048 ;;		_calcSpeed
  1049 ;;		_calcSteering
  1050 ;;		_getCurve
  1051 ;;		_getReverse
  1052 ;;		_setMotor
  1053 ;;		_setSteering
  1054 ;;		_startAccell
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text1
  1061  001CEA                     __ptext1:
  1062                           	callstack 0
  1063  001CEA                     _loop:
  1064                           	callstack 18
  1065  001CEA                     
  1066                           ;main.c: 20:     setMotor(0);
  1067  001CEA  0E00               	movlw	0
  1068  001CEC  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1069  001CEE  0E00               	movlw	0
  1070  001CF0  6E18               	movwf	setMotor@motorPower^0,c
  1071  001CF2  ECDA  F00C         	call	_setMotor	;wreg free
  1072                           
  1073                           ;main.c: 21:     setSteering(0, Front);
  1074  001CF6  0E00               	movlw	0
  1075  001CF8  6E1D               	movwf	(setSteering@steering+1)^0,c
  1076  001CFA  0E00               	movlw	0
  1077  001CFC  6E1C               	movwf	setSteering@steering^0,c
  1078  001CFE  0E03               	movlw	3
  1079  001D00  6E1E               	movwf	setSteering@steeringMode^0,c
  1080  001D02  ECC3  F008         	call	_setSteering	;wreg free
  1081  001D06                     l1216:
  1082  001D06  B8CB               	btfsc	203,4,c	;volatile
  1083  001D08  EF88  F00E         	goto	u4541
  1084  001D0C  EF8A  F00E         	goto	u4540
  1085  001D10                     u4541:
  1086  001D10  EF83  F00E         	goto	l1216
  1087  001D14                     u4540:
  1088  001D14                     
  1089                           ;main.c: 31:     startAccell();
  1090  001D14  EC37  F00A         	call	_startAccell	;wreg free
  1091  001D18                     
  1092                           ;main.c: 32:     driveMode = Straight;
  1093  001D18  0E01               	movlw	1
  1094  001D1A  6E4C               	movwf	_driveMode^0,c
  1095  001D1C                     
  1096                           ;main.c: 33:     curveMode = OutCurve;
  1097  001D1C  0E00               	movlw	0
  1098  001D1E  6E3F               	movwf	_curveMode^0,c
  1099  001D20                     
  1100                           ;main.c: 34:     oldDistLeft = distLeft;
  1101  001D20  C09A  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  1102  001D24  C09B  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1103  001D28                     
  1104                           ;main.c: 35:     oldDistRight = distRight;
  1105  001D28  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  1106  001D2C  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  1107  001D30                     
  1108                           ;main.c: 36:     cycle10ms = 0;
  1109  001D30  0E00               	movlw	0
  1110  001D32  0100               	movlb	0	; () banked
  1111  001D34  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1112  001D36                     l5766:
  1113  001D36  0100               	movlb	0	; () banked
  1114  001D38  519C               	movf	_cycle10ms& (0+255),w,b	;volatile
  1115  001D3A  B4D8               	btfsc	status,2,c
  1116  001D3C  EFA2  F00E         	goto	u4551
  1117  001D40  EFA4  F00E         	goto	u4550
  1118  001D44                     u4551:
  1119  001D44  EF9B  F00E         	goto	l5766
  1120  001D48                     u4550:
  1121  001D48                     
  1122                           ; BSR set to: 0
  1123                           ;main.c: 39:         cycle10ms = 0;
  1124  001D48  0E00               	movlw	0
  1125  001D4A  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1126  001D4C                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1129  001D4C  BACB               	btfsc	203,5,c	;volatile
  1130  001D4E  EFAB  F00E         	goto	u4561
  1131  001D52  EFAD  F00E         	goto	u4560
  1132  001D56                     u4561:
  1133  001D56  EFBF  F00E         	goto	l5776
  1134  001D5A                     u4560:
  1135  001D5A                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 42:             setSpeed = 0;
  1138  001D5A  0E00               	movlw	0
  1139  001D5C  6F8B               	movwf	(_setSpeed+1)& (0+255),b
  1140  001D5E  0E00               	movlw	0
  1141  001D60  6F8A               	movwf	_setSpeed& (0+255),b
  1142                           
  1143                           ;main.c: 43:             actMotorPow = 0;
  1144  001D62  0E00               	movlw	0
  1145  001D64  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1146  001D66  0E00               	movlw	0
  1147  001D68  6F84               	movwf	_actMotorPow& (0+255),b
  1148  001D6A                     
  1149                           ; BSR set to: 0
  1150                           ;main.c: 44:             setSteering(0, Front);
  1151  001D6A  0E00               	movlw	0
  1152  001D6C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1153  001D6E  0E00               	movlw	0
  1154  001D70  6E1C               	movwf	setSteering@steering^0,c
  1155  001D72  0E03               	movlw	3
  1156  001D74  6E1E               	movwf	setSteering@steeringMode^0,c
  1157  001D76  ECC3  F008         	call	_setSteering	;wreg free
  1158                           
  1159                           ;main.c: 45:             break;
  1160  001D7A  EFCB  F00E         	goto	l1226
  1161  001D7E                     l5776:
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 53:         getCurve();
  1165  001D7E  ECE2  F004         	call	_getCurve	;wreg free
  1166                           
  1167                           ;main.c: 54:         getReverse();
  1168  001D82  EC5C  F00C         	call	_getReverse	;wreg free
  1169                           
  1170                           ;main.c: 56:         calcSteering();
  1171  001D86  ECFF  F006         	call	_calcSteering	;wreg free
  1172  001D8A                     
  1173                           ;main.c: 57:         calcSpeed();
  1174  001D8A  ECF6  F005         	call	_calcSpeed	;wreg free
  1175  001D8E                     
  1176                           ;main.c: 58:         calcMotorPow();
  1177  001D8E  EC95  F009         	call	_calcMotorPow	;wreg free
  1178  001D92  EF9B  F00E         	goto	l5766
  1179  001D96                     l1226:
  1180  001D96  0012               	return		;funcret
  1181  001D98                     __end_of_loop:
  1182                           	callstack 0
  1183                           
  1184 ;; *************** function _startAccell *****************
  1185 ;; Defined at:
  1186 ;;		line 98 in file "main.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  MPow            4   35[BANK0 ] float 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;Total ram usage:        4 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 11
  1207 ;; This function calls:
  1208 ;;		___flge
  1209 ;;		___flmul
  1210 ;;		___fltol
  1211 ;;		___xxtofl
  1212 ;;		_calcSteering
  1213 ;;		_setMotor
  1214 ;;		_setSteering
  1215 ;; This function is called by:
  1216 ;;		_loop
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text2
  1221  00146E                     __ptext2:
  1222                           	callstack 0
  1223  00146E                     _startAccell:
  1224                           	callstack 18
  1225  00146E                     
  1226                           ;main.c: 99:     setSteering(0, Front);
  1227  00146E  0E00               	movlw	0
  1228  001470  6E1D               	movwf	(setSteering@steering+1)^0,c
  1229  001472  0E00               	movlw	0
  1230  001474  6E1C               	movwf	setSteering@steering^0,c
  1231  001476  0E03               	movlw	3
  1232  001478  6E1E               	movwf	setSteering@steeringMode^0,c
  1233  00147A  ECC3  F008         	call	_setSteering	;wreg free
  1234  00147E                     
  1235                           ;main.c: 100:     driveMode = Accel;
  1236  00147E  0E00               	movlw	0
  1237  001480  6E4C               	movwf	_driveMode^0,c
  1238  001482                     
  1239                           ;main.c: 102:     actMotorPow = (40);
  1240  001482  0E00               	movlw	0
  1241  001484  0100               	movlb	0	; () banked
  1242  001486  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1243  001488  0E28               	movlw	40
  1244  00148A  6F84               	movwf	_actMotorPow& (0+255),b
  1245                           
  1246                           ;main.c: 103:     float MPow = actMotorPow;
  1247  00148C  C084  F01C         	movff	_actMotorPow,___xxtofl@val
  1248  001490  C085  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1249  001494  0E00               	movlw	0
  1250  001496  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1251  001498  0EFF               	movlw	-1
  1252  00149A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1253  00149C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1254  00149E  0E01               	movlw	1
  1255  0014A0  ECE9  F007         	call	___xxtofl
  1256  0014A4  C01C  F0C0         	movff	?___xxtofl,startAccell@MPow
  1257  0014A8  C01D  F0C1         	movff	?___xxtofl+1,startAccell@MPow+1
  1258  0014AC  C01E  F0C2         	movff	?___xxtofl+2,startAccell@MPow+2
  1259  0014B0  C01F  F0C3         	movff	?___xxtofl+3,startAccell@MPow+3
  1260                           
  1261                           ;main.c: 105:     while (MPow < (250)) {
  1262  0014B4  EF97  F00A         	goto	l5648
  1263  0014B8                     l5636:
  1264                           
  1265                           ;main.c: 106:         MPow *= (1.1);
  1266  0014B8  C0C0  F02A         	movff	startAccell@MPow,___flmul@b
  1267  0014BC  C0C1  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1268  0014C0  C0C2  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1269  0014C4  C0C3  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1270  0014C8  0ECD               	movlw	205
  1271  0014CA  6E2E               	movwf	___flmul@a^0,c
  1272  0014CC  0ECC               	movlw	204
  1273  0014CE  6E2F               	movwf	(___flmul@a+1)^0,c
  1274  0014D0  0E8C               	movlw	140
  1275  0014D2  6E30               	movwf	(___flmul@a+2)^0,c
  1276  0014D4  0E3F               	movlw	63
  1277  0014D6  6E31               	movwf	(___flmul@a+3)^0,c
  1278  0014D8  ECBA  F002         	call	___flmul	;wreg free
  1279  0014DC  C02A  F0C0         	movff	?___flmul,startAccell@MPow
  1280  0014E0  C02B  F0C1         	movff	?___flmul+1,startAccell@MPow+1
  1281  0014E4  C02C  F0C2         	movff	?___flmul+2,startAccell@MPow+2
  1282  0014E8  C02D  F0C3         	movff	?___flmul+3,startAccell@MPow+3
  1283  0014EC                     
  1284                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  1285  0014EC  C0C0  F0B6         	movff	startAccell@MPow,___fltol@f1
  1286  0014F0  C0C1  F0B7         	movff	startAccell@MPow+1,___fltol@f1+1
  1287  0014F4  C0C2  F0B8         	movff	startAccell@MPow+2,___fltol@f1+2
  1288  0014F8  C0C3  F0B9         	movff	startAccell@MPow+3,___fltol@f1+3
  1289  0014FC  EC56  F00B         	call	___fltol	;wreg free
  1290  001500  C0B6  F084         	movff	?___fltol,_actMotorPow
  1291  001504  C0B7  F085         	movff	?___fltol+1,_actMotorPow+1
  1292  001508                     
  1293                           ;main.c: 108:         setMotor(actMotorPow);
  1294  001508  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1295  00150C  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1296  001510  ECDA  F00C         	call	_setMotor	;wreg free
  1297  001514                     
  1298                           ;main.c: 110:         calcSteering();
  1299  001514  ECFF  F006         	call	_calcSteering	;wreg free
  1300  001518                     
  1301                           ;main.c: 112:         cycle10ms = 0;
  1302  001518  0E00               	movlw	0
  1303  00151A  0100               	movlb	0	; () banked
  1304  00151C  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1305  00151E                     l5646:
  1306                           
  1307                           ; BSR set to: 0
  1308  00151E  519C               	movf	_cycle10ms& (0+255),w,b	;volatile
  1309  001520  B4D8               	btfsc	status,2,c
  1310  001522  EF95  F00A         	goto	u4401
  1311  001526  EF97  F00A         	goto	u4400
  1312  00152A                     u4401:
  1313  00152A  EF8F  F00A         	goto	l5646
  1314  00152E                     u4400:
  1315  00152E                     l5648:
  1316                           
  1317                           ;main.c: 105:     while (MPow < (250)) {
  1318  00152E  C0C0  F014         	movff	startAccell@MPow,___flge@ff1
  1319  001532  C0C1  F015         	movff	startAccell@MPow+1,___flge@ff1+1
  1320  001536  C0C2  F016         	movff	startAccell@MPow+2,___flge@ff1+2
  1321  00153A  C0C3  F017         	movff	startAccell@MPow+3,___flge@ff1+3
  1322  00153E  0E00               	movlw	0
  1323  001540  6E18               	movwf	___flge@ff2^0,c
  1324  001542  0E00               	movlw	0
  1325  001544  6E19               	movwf	(___flge@ff2+1)^0,c
  1326  001546  0E7A               	movlw	122
  1327  001548  6E1A               	movwf	(___flge@ff2+2)^0,c
  1328  00154A  0E43               	movlw	67
  1329  00154C  6E1B               	movwf	(___flge@ff2+3)^0,c
  1330  00154E  ECDA  F00B         	call	___flge	;wreg free
  1331  001552  A0D8               	btfss	status,0,c
  1332  001554  EFAE  F00A         	goto	u4411
  1333  001558  EFB0  F00A         	goto	u4410
  1334  00155C                     u4411:
  1335  00155C  EF5C  F00A         	goto	l5636
  1336  001560                     u4410:
  1337  001560                     
  1338                           ;main.c: 116:     actMotorPow = (250);
  1339  001560  0E00               	movlw	0
  1340  001562  0100               	movlb	0	; () banked
  1341  001564  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1342  001566  0EFA               	movlw	250
  1343  001568  6F84               	movwf	_actMotorPow& (0+255),b
  1344  00156A                     
  1345                           ; BSR set to: 0
  1346                           ;main.c: 117:     setMotor(actMotorPow);
  1347  00156A  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1348  00156E  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1349  001572  ECDA  F00C         	call	_setMotor	;wreg free
  1350  001576                     
  1351                           ;main.c: 120:     cycle10ms = 0;
  1352  001576  0E00               	movlw	0
  1353  001578  0100               	movlb	0	; () banked
  1354  00157A  6F9C               	movwf	_cycle10ms& (0+255),b	;volatile
  1355                           
  1356                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  1357  00157C  EFC2  F00A         	goto	l5658
  1358  001580                     l5656:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;main.c: 122:         calcSteering();
  1362  001580  ECFF  F006         	call	_calcSteering	;wreg free
  1363  001584                     l5658:
  1364                           
  1365                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  1366  001584  0E1D               	movlw	29
  1367  001586  0100               	movlb	0	; () banked
  1368  001588  659C               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  1369  00158A  EFC9  F00A         	goto	u4421
  1370  00158E  EFCB  F00A         	goto	u4420
  1371  001592                     u4421:
  1372  001592  EFC0  F00A         	goto	l5656
  1373  001596                     u4420:
  1374  001596                     
  1375                           ; BSR set to: 0
  1376                           ;main.c: 124:     driveMode = Straight;
  1377  001596  0E01               	movlw	1
  1378  001598  6E4C               	movwf	_driveMode^0,c
  1379  00159A                     
  1380                           ; BSR set to: 0
  1381                           ;main.c: 125:     calcSteering();
  1382  00159A  ECFF  F006         	call	_calcSteering	;wreg free
  1383  00159E  0012               	return		;funcret
  1384  0015A0                     __end_of_startAccell:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _calcSteering *****************
  1388 ;; Defined at:
  1389 ;;		line 226 in file "main.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  delta           2   40[COMRAM] short 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:        6 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 10
  1410 ;; This function calls:
  1411 ;;		___awdiv
  1412 ;;		_setSteering
  1413 ;; This function is called by:
  1414 ;;		_loop
  1415 ;;		_startAccell
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           	psect	text3
  1420  000DFE                     __ptext3:
  1421                           	callstack 0
  1422  000DFE                     _calcSteering:
  1423                           	callstack 18
  1424  000DFE                     
  1425                           ;main.c: 227:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  1426  000DFE  0100               	movlb	0	; () banked
  1427  000E00  5196               	movf	_distRight& (0+255),w,b	;volatile
  1428  000E02  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  1429  000E04  6E25               	movwf	??_calcSteering^0,c
  1430  000E06  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1431  000E08  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1432  000E0A  6E26               	movwf	(??_calcSteering+1)^0,c
  1433  000E0C  0E15               	movlw	21
  1434  000E0E  2425               	addwf	??_calcSteering^0,w,c
  1435  000E10  6E29               	movwf	calcSteering@delta^0,c
  1436  000E12  0E00               	movlw	0
  1437  000E14  2026               	addwfc	(??_calcSteering+1)^0,w,c
  1438  000E16  6E2A               	movwf	(calcSteering@delta+1)^0,c
  1439                           
  1440                           ;main.c: 231:     switch (driveMode) {
  1441  000E18  EF36  F007         	goto	l5210
  1442  000E1C                     l1295:
  1443  000E1C                     l5200:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;main.c: 237:             if (delta > (25)) {
  1447  000E1C  BE2A               	btfsc	(calcSteering@delta+1)^0,7,c
  1448  000E1E  EF1A  F007         	goto	u3711
  1449  000E22  502A               	movf	(calcSteering@delta+1)^0,w,c
  1450  000E24  E109               	bnz	u3710
  1451  000E26  0E1A               	movlw	26
  1452  000E28  5C29               	subwf	calcSteering@delta^0,w,c
  1453  000E2A  A0D8               	btfss	status,0,c
  1454  000E2C  EF1A  F007         	goto	u3711
  1455  000E30  EF1C  F007         	goto	u3710
  1456  000E34                     u3711:
  1457  000E34  EF22  F007         	goto	l5204
  1458  000E38                     u3710:
  1459  000E38                     
  1460                           ; BSR set to: 0
  1461                           ;main.c: 238:                 delta = (25);
  1462  000E38  0E00               	movlw	0
  1463  000E3A  6E2A               	movwf	(calcSteering@delta+1)^0,c
  1464  000E3C  0E19               	movlw	25
  1465  000E3E  6E29               	movwf	calcSteering@delta^0,c
  1466                           
  1467                           ;main.c: 239:             } else if (delta < -(25)) {
  1468  000E40  EFBF  F007         	goto	l5236
  1469  000E44                     l5204:
  1470                           
  1471                           ; BSR set to: 0
  1472  000E44  AE2A               	btfss	(calcSteering@delta+1)^0,7,c
  1473  000E46  EF2E  F007         	goto	u3721
  1474  000E4A  0EE7               	movlw	231
  1475  000E4C  5C29               	subwf	calcSteering@delta^0,w,c
  1476  000E4E  0EFF               	movlw	255
  1477  000E50  582A               	subwfb	(calcSteering@delta+1)^0,w,c
  1478  000E52  B0D8               	btfsc	status,0,c
  1479  000E54  EF2E  F007         	goto	u3721
  1480  000E58  EF30  F007         	goto	u3720
  1481  000E5C                     u3721:
  1482  000E5C  EF57  F007         	goto	l1300
  1483  000E60                     u3720:
  1484  000E60                     
  1485                           ; BSR set to: 0
  1486                           ;main.c: 240:                 delta = -(25);
  1487  000E60  0EFF               	movlw	255
  1488  000E62  6E2A               	movwf	(calcSteering@delta+1)^0,c
  1489  000E64  0EE7               	movlw	231
  1490  000E66  6E29               	movwf	calcSteering@delta^0,c
  1491  000E68  EFBF  F007         	goto	l5236
  1492  000E6C                     l5210:
  1493                           
  1494                           ; BSR set to: 0
  1495  000E6C  504C               	movf	_driveMode^0,w,c
  1496  000E6E  6E25               	movwf	??_calcSteering^0,c
  1497  000E70  6A26               	clrf	(??_calcSteering+1)^0,c
  1498                           
  1499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1500                           ; Switch size 1, requested type "simple"
  1501                           ; Number of cases is 1, Range of values is 0 to 0
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte            4     3 (average)
  1505                           ;	Chosen strategy is simple_byte
  1506  000E72  5026               	movf	(??_calcSteering+1)^0,w,c
  1507  000E74  0A00               	xorlw	0	; case 0
  1508  000E76  B4D8               	btfsc	status,2,c
  1509  000E78  EF40  F007         	goto	l5960
  1510  000E7C  EFBF  F007         	goto	l5236
  1511  000E80                     l5960:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ; Switch size 1, requested type "simple"
  1515                           ; Number of cases is 5, Range of values is 0 to 6
  1516                           ; switch strategies available:
  1517                           ; Name         Instructions Cycles
  1518                           ; simple_byte           16     9 (average)
  1519                           ;	Chosen strategy is simple_byte
  1520  000E80  5025               	movf	??_calcSteering^0,w,c
  1521  000E82  0A00               	xorlw	0	; case 0
  1522  000E84  B4D8               	btfsc	status,2,c
  1523  000E86  EF0E  F007         	goto	l1295
  1524  000E8A  0A01               	xorlw	1	; case 1
  1525  000E8C  B4D8               	btfsc	status,2,c
  1526  000E8E  EF0E  F007         	goto	l5200
  1527  000E92  0A03               	xorlw	3	; case 2
  1528  000E94  B4D8               	btfsc	status,2,c
  1529  000E96  EF0E  F007         	goto	l5200
  1530  000E9A  0A07               	xorlw	7	; case 5
  1531  000E9C  B4D8               	btfsc	status,2,c
  1532  000E9E  EF0E  F007         	goto	l5200
  1533  000EA2  0A03               	xorlw	3	; case 6
  1534  000EA4  B4D8               	btfsc	status,2,c
  1535  000EA6  EF0E  F007         	goto	l5200
  1536  000EAA  EFBF  F007         	goto	l5236
  1537  000EAE                     l1300:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;main.c: 247:     switch (driveMode) {
  1541  000EAE  EFBF  F007         	goto	l5236
  1542  000EB2                     l5212:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main.c: 249:             setSteering(delta, Ratio);
  1546  000EB2  C029  F01C         	movff	calcSteering@delta,setSteering@steering
  1547  000EB6  C02A  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1548  000EBA  0E02               	movlw	2
  1549  000EBC  6E1E               	movwf	setSteering@steeringMode^0,c
  1550  000EBE  ECC3  F008         	call	_setSteering	;wreg free
  1551                           
  1552                           ;main.c: 250:             break;
  1553  000EC2  EFE8  F007         	goto	l1315
  1554  000EC6                     l5214:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;main.c: 252:             setSteering(delta, Front);
  1558  000EC6  C029  F01C         	movff	calcSteering@delta,setSteering@steering
  1559  000ECA  C02A  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1560  000ECE  0E03               	movlw	3
  1561  000ED0  6E1E               	movwf	setSteering@steeringMode^0,c
  1562  000ED2  ECC3  F008         	call	_setSteering	;wreg free
  1563                           
  1564                           ;main.c: 253:             break;
  1565  000ED6  EFE8  F007         	goto	l1315
  1566  000EDA                     l5216:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ;main.c: 255:             setSteering(delta / (2), Front);
  1570  000EDA  C029  F014         	movff	calcSteering@delta,___awdiv@dividend
  1571  000EDE  C02A  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  1572  000EE2  0E00               	movlw	0
  1573  000EE4  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1574  000EE6  0E02               	movlw	2
  1575  000EE8  6E16               	movwf	___awdiv@divisor^0,c
  1576  000EEA  EC13  F00E         	call	___awdiv	;wreg free
  1577  000EEE  C014  F027         	movff	?___awdiv,_calcSteering$3880
  1578  000EF2  C015  F028         	movff	?___awdiv+1,_calcSteering$3880+1
  1579                           
  1580                           ;main.c: 255:             setSteering(delta / (2), Front);
  1581  000EF6  C027  F01C         	movff	_calcSteering$3880,setSteering@steering
  1582  000EFA  C028  F01D         	movff	_calcSteering$3880+1,setSteering@steering+1
  1583  000EFE  0E03               	movlw	3
  1584  000F00  6E1E               	movwf	setSteering@steeringMode^0,c
  1585  000F02  ECC3  F008         	call	_setSteering	;wreg free
  1586                           
  1587                           ;main.c: 257:             break;
  1588  000F06  EFE8  F007         	goto	l1315
  1589  000F0A                     l5218:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;main.c: 259:             setSteering(-(65), Inverted);
  1593  000F0A  0EFF               	movlw	255
  1594  000F0C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1595  000F0E  0EBF               	movlw	191
  1596  000F10  6E1C               	movwf	setSteering@steering^0,c
  1597  000F12  0E00               	movlw	0
  1598  000F14  6E1E               	movwf	setSteering@steeringMode^0,c
  1599  000F16  ECC3  F008         	call	_setSteering	;wreg free
  1600                           
  1601                           ;main.c: 260:             break;
  1602  000F1A  EFE8  F007         	goto	l1315
  1603  000F1E                     l5220:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;main.c: 262:             setSteering((65), Inverted);
  1607  000F1E  0E00               	movlw	0
  1608  000F20  6E1D               	movwf	(setSteering@steering+1)^0,c
  1609  000F22  0E41               	movlw	65
  1610  000F24  6E1C               	movwf	setSteering@steering^0,c
  1611  000F26  0E00               	movlw	0
  1612  000F28  6E1E               	movwf	setSteering@steeringMode^0,c
  1613  000F2A  ECC3  F008         	call	_setSteering	;wreg free
  1614                           
  1615                           ;main.c: 263:             break;
  1616  000F2E  EFE8  F007         	goto	l1315
  1617  000F32                     l5222:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;main.c: 265:             if (curveMode == InCurve) {
  1621  000F32  0E02               	movlw	2
  1622  000F34  183F               	xorwf	_curveMode^0,w,c
  1623  000F36  A4D8               	btfss	status,2,c
  1624  000F38  EFA0  F007         	goto	u3731
  1625  000F3C  EFA2  F007         	goto	u3730
  1626  000F40                     u3731:
  1627  000F40  EF59  F007         	goto	l5212
  1628  000F44                     u3730:
  1629  000F44                     
  1630                           ; BSR set to: 0
  1631                           ;main.c: 266:                 setSteering((65), Ratio);
  1632  000F44  0E00               	movlw	0
  1633  000F46  6E1D               	movwf	(setSteering@steering+1)^0,c
  1634  000F48  0E41               	movlw	65
  1635  000F4A  6E1C               	movwf	setSteering@steering^0,c
  1636  000F4C  0E02               	movlw	2
  1637  000F4E  6E1E               	movwf	setSteering@steeringMode^0,c
  1638  000F50  ECC3  F008         	call	_setSteering	;wreg free
  1639                           
  1640                           ;main.c: 267:             } else {
  1641  000F54  EFE8  F007         	goto	l1315
  1642  000F58                     l5228:
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;main.c: 272:             if (curveMode == InCurve) {
  1646  000F58  0E02               	movlw	2
  1647  000F5A  183F               	xorwf	_curveMode^0,w,c
  1648  000F5C  A4D8               	btfss	status,2,c
  1649  000F5E  EFB3  F007         	goto	u3741
  1650  000F62  EFB5  F007         	goto	u3740
  1651  000F66                     u3741:
  1652  000F66  EF59  F007         	goto	l5212
  1653  000F6A                     u3740:
  1654  000F6A                     
  1655                           ; BSR set to: 0
  1656                           ;main.c: 273:                 setSteering(-(65), Ratio);
  1657  000F6A  0EFF               	movlw	255
  1658  000F6C  6E1D               	movwf	(setSteering@steering+1)^0,c
  1659  000F6E  0EBF               	movlw	191
  1660  000F70  6E1C               	movwf	setSteering@steering^0,c
  1661  000F72  0E02               	movlw	2
  1662  000F74  6E1E               	movwf	setSteering@steeringMode^0,c
  1663  000F76  ECC3  F008         	call	_setSteering	;wreg free
  1664                           
  1665                           ;main.c: 274:             } else {
  1666  000F7A  EFE8  F007         	goto	l1315
  1667  000F7E                     l5236:
  1668                           
  1669                           ; BSR set to: 0
  1670  000F7E  504C               	movf	_driveMode^0,w,c
  1671  000F80  6E25               	movwf	??_calcSteering^0,c
  1672  000F82  6A26               	clrf	(??_calcSteering+1)^0,c
  1673                           
  1674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1675                           ; Switch size 1, requested type "simple"
  1676                           ; Number of cases is 1, Range of values is 0 to 0
  1677                           ; switch strategies available:
  1678                           ; Name         Instructions Cycles
  1679                           ; simple_byte            4     3 (average)
  1680                           ;	Chosen strategy is simple_byte
  1681  000F84  5026               	movf	(??_calcSteering+1)^0,w,c
  1682  000F86  0A00               	xorlw	0	; case 0
  1683  000F88  B4D8               	btfsc	status,2,c
  1684  000F8A  EFC9  F007         	goto	l5962
  1685  000F8E  EFE8  F007         	goto	l1315
  1686  000F92                     l5962:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 7, Range of values is 0 to 6
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte           22    12 (average)
  1694                           ;	Chosen strategy is simple_byte
  1695  000F92  5025               	movf	??_calcSteering^0,w,c
  1696  000F94  0A00               	xorlw	0	; case 0
  1697  000F96  B4D8               	btfsc	status,2,c
  1698  000F98  EF6D  F007         	goto	l5216
  1699  000F9C  0A01               	xorlw	1	; case 1
  1700  000F9E  B4D8               	btfsc	status,2,c
  1701  000FA0  EF63  F007         	goto	l5214
  1702  000FA4  0A03               	xorlw	3	; case 2
  1703  000FA6  B4D8               	btfsc	status,2,c
  1704  000FA8  EF59  F007         	goto	l5212
  1705  000FAC  0A01               	xorlw	1	; case 3
  1706  000FAE  B4D8               	btfsc	status,2,c
  1707  000FB0  EF85  F007         	goto	l5218
  1708  000FB4  0A07               	xorlw	7	; case 4
  1709  000FB6  B4D8               	btfsc	status,2,c
  1710  000FB8  EF8F  F007         	goto	l5220
  1711  000FBC  0A01               	xorlw	1	; case 5
  1712  000FBE  B4D8               	btfsc	status,2,c
  1713  000FC0  EF99  F007         	goto	l5222
  1714  000FC4  0A03               	xorlw	3	; case 6
  1715  000FC6  B4D8               	btfsc	status,2,c
  1716  000FC8  EFAC  F007         	goto	l5228
  1717  000FCC  EFE8  F007         	goto	l1315
  1718  000FD0                     l1315:
  1719  000FD0  0012               	return		;funcret
  1720  000FD2                     __end_of_calcSteering:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _setSteering *****************
  1724 ;; Defined at:
  1725 ;;		line 390 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  steering        2   27[COMRAM] short 
  1728 ;;  steeringMode    1   29[COMRAM] enum E17304
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  steeringB       2   34[COMRAM] short 
  1731 ;;  steeringF       2   32[COMRAM] short 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2, status,0, cstack
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1741 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;Total ram usage:        9 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 9
  1748 ;; This function calls:
  1749 ;;		_PWM5_LoadDutyValue
  1750 ;;		_PWM6_LoadDutyValue
  1751 ;;		___awdiv
  1752 ;; This function is called by:
  1753 ;;		_loop
  1754 ;;		_startAccell
  1755 ;;		_calcSteering
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text4
  1760  001186                     __ptext4:
  1761                           	callstack 0
  1762  001186                     _setSteering:
  1763                           	callstack 19
  1764  001186  0E00               	movlw	0
  1765  001188  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1766  00118A  0E00               	movlw	0
  1767  00118C  6E23               	movwf	setSteering@steeringB^0,c
  1768                           
  1769                           ;main.c: 392:     switch (steeringMode) {
  1770  00118E  EF17  F009         	goto	l3814
  1771  001192                     l1359:
  1772                           
  1773                           ;main.c: 394:             steeringF = (+steering);
  1774  001192  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1775  001196  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1776                           
  1777                           ;main.c: 395:             steeringB = -steering;
  1778  00119A  C01C  F01F         	movff	setSteering@steering,??_setSteering
  1779  00119E  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  1780  0011A2  1E1F               	comf	??_setSteering^0,f,c
  1781  0011A4  1E20               	comf	(??_setSteering+1)^0,f,c
  1782  0011A6  4A1F               	infsnz	??_setSteering^0,f,c
  1783  0011A8  2A20               	incf	(??_setSteering+1)^0,f,c
  1784  0011AA  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  1785  0011AE  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  1786                           
  1787                           ;main.c: 396:             break;
  1788  0011B2  EF38  F009         	goto	l3816
  1789  0011B6                     l1361:
  1790                           
  1791                           ;main.c: 398:             steeringF = (+steering);
  1792  0011B6  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1793  0011BA  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1794                           
  1795                           ;main.c: 399:             steeringB = (+steering);
  1796  0011BE  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1797  0011C2  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1798                           
  1799                           ;main.c: 400:             break;
  1800  0011C6  EF38  F009         	goto	l3816
  1801  0011CA                     l1362:
  1802                           
  1803                           ;main.c: 402:             steeringF = (+steering);
  1804  0011CA  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1805  0011CE  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1806  0011D2                     
  1807                           ;main.c: 403:             steeringB = (-steering / (2));
  1808  0011D2  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  1809  0011D6  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  1810  0011DA  0EFF               	movlw	255
  1811  0011DC  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1812  0011DE  0EFE               	movlw	254
  1813  0011E0  6E16               	movwf	___awdiv@divisor^0,c
  1814  0011E2  EC13  F00E         	call	___awdiv	;wreg free
  1815  0011E6  C014  F023         	movff	?___awdiv,setSteering@steeringB
  1816  0011EA  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  1817                           
  1818                           ;main.c: 404:             break;
  1819  0011EE  EF38  F009         	goto	l3816
  1820  0011F2                     l1363:
  1821                           
  1822                           ;main.c: 406:             steeringF = (+steering);
  1823  0011F2  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1824  0011F6  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1825  0011FA                     
  1826                           ;main.c: 407:             steeringB = 0;
  1827  0011FA  0E00               	movlw	0
  1828  0011FC  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1829  0011FE  0E00               	movlw	0
  1830  001200  6E23               	movwf	setSteering@steeringB^0,c
  1831                           
  1832                           ;main.c: 408:             break;
  1833  001202  EF38  F009         	goto	l3816
  1834  001206                     l3806:
  1835                           
  1836                           ;main.c: 410:             steeringF = 0;
  1837  001206  0E00               	movlw	0
  1838  001208  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1839  00120A  0E00               	movlw	0
  1840  00120C  6E21               	movwf	setSteering@steeringF^0,c
  1841  00120E                     
  1842                           ;main.c: 411:             steeringB = (+steering);
  1843  00120E  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1844  001212  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1845                           
  1846                           ;main.c: 412:             break;
  1847  001216  EF38  F009         	goto	l3816
  1848  00121A                     l3810:
  1849                           
  1850                           ;main.c: 414:             steeringF = 0;
  1851  00121A  0E00               	movlw	0
  1852  00121C  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1853  00121E  0E00               	movlw	0
  1854  001220  6E21               	movwf	setSteering@steeringF^0,c
  1855                           
  1856                           ;main.c: 415:             steeringB = 0;
  1857  001222  0E00               	movlw	0
  1858  001224  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1859  001226  0E00               	movlw	0
  1860  001228  6E23               	movwf	setSteering@steeringB^0,c
  1861                           
  1862                           ;main.c: 416:             break;
  1863  00122A  EF38  F009         	goto	l3816
  1864  00122E                     l3814:
  1865  00122E  501E               	movf	setSteering@steeringMode^0,w,c
  1866  001230  6E1F               	movwf	??_setSteering^0,c
  1867  001232  6A20               	clrf	(??_setSteering+1)^0,c
  1868                           
  1869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1870                           ; Switch size 1, requested type "simple"
  1871                           ; Number of cases is 1, Range of values is 0 to 0
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte            4     3 (average)
  1875                           ;	Chosen strategy is simple_byte
  1876  001234  5020               	movf	(??_setSteering+1)^0,w,c
  1877  001236  0A00               	xorlw	0	; case 0
  1878  001238  B4D8               	btfsc	status,2,c
  1879  00123A  EF21  F009         	goto	l5964
  1880  00123E  EF0D  F009         	goto	l3810
  1881  001242                     l5964:
  1882                           
  1883                           ; Switch size 1, requested type "simple"
  1884                           ; Number of cases is 5, Range of values is 0 to 4
  1885                           ; switch strategies available:
  1886                           ; Name         Instructions Cycles
  1887                           ; simple_byte           16     9 (average)
  1888                           ;	Chosen strategy is simple_byte
  1889  001242  501F               	movf	??_setSteering^0,w,c
  1890  001244  0A00               	xorlw	0	; case 0
  1891  001246  B4D8               	btfsc	status,2,c
  1892  001248  EFC9  F008         	goto	l1359
  1893  00124C  0A01               	xorlw	1	; case 1
  1894  00124E  B4D8               	btfsc	status,2,c
  1895  001250  EFDB  F008         	goto	l1361
  1896  001254  0A03               	xorlw	3	; case 2
  1897  001256  B4D8               	btfsc	status,2,c
  1898  001258  EFE5  F008         	goto	l1362
  1899  00125C  0A01               	xorlw	1	; case 3
  1900  00125E  B4D8               	btfsc	status,2,c
  1901  001260  EFF9  F008         	goto	l1363
  1902  001264  0A07               	xorlw	7	; case 4
  1903  001266  B4D8               	btfsc	status,2,c
  1904  001268  EF03  F009         	goto	l3806
  1905  00126C  EF0D  F009         	goto	l3810
  1906  001270                     l3816:
  1907                           
  1908                           ;main.c: 419:     if (steeringF > ((65))) {
  1909  001270  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  1910  001272  EF44  F009         	goto	u1981
  1911  001276  5022               	movf	(setSteering@steeringF+1)^0,w,c
  1912  001278  E109               	bnz	u1980
  1913  00127A  0E42               	movlw	66
  1914  00127C  5C21               	subwf	setSteering@steeringF^0,w,c
  1915  00127E  A0D8               	btfss	status,0,c
  1916  001280  EF44  F009         	goto	u1981
  1917  001284  EF46  F009         	goto	u1980
  1918  001288                     u1981:
  1919  001288  EF4C  F009         	goto	l3820
  1920  00128C                     u1980:
  1921  00128C                     
  1922                           ;main.c: 420:         steeringF = ((65));
  1923  00128C  0E00               	movlw	0
  1924  00128E  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1925  001290  0E41               	movlw	65
  1926  001292  6E21               	movwf	setSteering@steeringF^0,c
  1927                           
  1928                           ;main.c: 421:     } else if (steeringF < (-(65))) {
  1929  001294  EF5E  F009         	goto	l3824
  1930  001298                     l3820:
  1931  001298  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  1932  00129A  EF58  F009         	goto	u1991
  1933  00129E  0EBF               	movlw	191
  1934  0012A0  5C21               	subwf	setSteering@steeringF^0,w,c
  1935  0012A2  0EFF               	movlw	255
  1936  0012A4  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  1937  0012A6  B0D8               	btfsc	status,0,c
  1938  0012A8  EF58  F009         	goto	u1991
  1939  0012AC  EF5A  F009         	goto	u1990
  1940  0012B0                     u1991:
  1941  0012B0  EF5E  F009         	goto	l3824
  1942  0012B4                     u1990:
  1943  0012B4                     
  1944                           ;main.c: 422:         steeringF = (-(65));
  1945  0012B4  0EFF               	movlw	255
  1946  0012B6  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1947  0012B8  0EBF               	movlw	191
  1948  0012BA  6E21               	movwf	setSteering@steeringF^0,c
  1949  0012BC                     l3824:
  1950                           
  1951                           ;main.c: 425:     if (steeringB > ((40))) {
  1952  0012BC  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  1953  0012BE  EF6A  F009         	goto	u2001
  1954  0012C2  5024               	movf	(setSteering@steeringB+1)^0,w,c
  1955  0012C4  E109               	bnz	u2000
  1956  0012C6  0E29               	movlw	41
  1957  0012C8  5C23               	subwf	setSteering@steeringB^0,w,c
  1958  0012CA  A0D8               	btfss	status,0,c
  1959  0012CC  EF6A  F009         	goto	u2001
  1960  0012D0  EF6C  F009         	goto	u2000
  1961  0012D4                     u2001:
  1962  0012D4  EF72  F009         	goto	l3828
  1963  0012D8                     u2000:
  1964  0012D8                     
  1965                           ;main.c: 426:         steeringB = ((40));
  1966  0012D8  0E00               	movlw	0
  1967  0012DA  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1968  0012DC  0E28               	movlw	40
  1969  0012DE  6E23               	movwf	setSteering@steeringB^0,c
  1970                           
  1971                           ;main.c: 427:     } else if (steeringB < (-(40))) {
  1972  0012E0  EF84  F009         	goto	l3832
  1973  0012E4                     l3828:
  1974  0012E4  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  1975  0012E6  EF7E  F009         	goto	u2011
  1976  0012EA  0ED8               	movlw	216
  1977  0012EC  5C23               	subwf	setSteering@steeringB^0,w,c
  1978  0012EE  0EFF               	movlw	255
  1979  0012F0  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  1980  0012F2  B0D8               	btfsc	status,0,c
  1981  0012F4  EF7E  F009         	goto	u2011
  1982  0012F8  EF80  F009         	goto	u2010
  1983  0012FC                     u2011:
  1984  0012FC  EF84  F009         	goto	l3832
  1985  001300                     u2010:
  1986  001300                     
  1987                           ;main.c: 428:         steeringB = (-(40));
  1988  001300  0EFF               	movlw	255
  1989  001302  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1990  001304  0ED8               	movlw	216
  1991  001306  6E23               	movwf	setSteering@steeringB^0,c
  1992  001308                     l3832:
  1993                           
  1994                           ;main.c: 432:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  1995  001308  0E60               	movlw	96
  1996  00130A  2421               	addwf	setSteering@steeringF^0,w,c
  1997  00130C  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  1998  00130E  0E01               	movlw	1
  1999  001310  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  2000  001312  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2001  001314  EC55  F011         	call	_PWM6_LoadDutyValue	;wreg free
  2002  001318                     
  2003                           ;main.c: 433:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  2004  001318  0E65               	movlw	101
  2005  00131A  2423               	addwf	setSteering@steeringB^0,w,c
  2006  00131C  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2007  00131E  0E01               	movlw	1
  2008  001320  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  2009  001322  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2010  001324  EC6F  F011         	call	_PWM5_LoadDutyValue	;wreg free
  2011  001328  0012               	return		;funcret
  2012  00132A                     __end_of_setSteering:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _PWM6_LoadDutyValue *****************
  2016 ;; Defined at:
  2017 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:        4 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 8
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_setSteering
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text5
  2046  0022AA                     __ptext5:
  2047                           	callstack 0
  2048  0022AA                     _PWM6_LoadDutyValue:
  2049                           	callstack 19
  2050  0022AA                     
  2051                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2052  0022AA  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2053  0022AE  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  2054  0022B2  90D8               	bcf	status,0,c
  2055  0022B4  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2056  0022B6  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2057  0022B8  90D8               	bcf	status,0,c
  2058  0022BA  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2059  0022BC  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2060  0022BE  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2061  0022C0  6E69               	movwf	105,c	;volatile
  2062                           
  2063                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  2064  0022C2  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2065  0022C6  0E03               	movlw	3
  2066  0022C8  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  2067  0022CA  0E06               	movlw	6
  2068  0022CC  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  2069  0022CE                     u1895:
  2070  0022CE  90D8               	bcf	status,0,c
  2071  0022D0  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  2072  0022D2  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  2073  0022D4  EF67  F011         	goto	u1895
  2074  0022D8  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2075  0022DA  6E68               	movwf	104,c	;volatile
  2076  0022DC  0012               	return		;funcret
  2077  0022DE                     __end_of_PWM6_LoadDutyValue:
  2078                           	callstack 0
  2079                           
  2080 ;; *************** function _PWM5_LoadDutyValue *****************
  2081 ;; Defined at:
  2082 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;Total ram usage:        4 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 8
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_setSteering
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text6
  2111  0022DE                     __ptext6:
  2112                           	callstack 0
  2113  0022DE                     _PWM5_LoadDutyValue:
  2114                           	callstack 19
  2115  0022DE                     
  2116                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2117  0022DE  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2118  0022E2  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  2119  0022E6  90D8               	bcf	status,0,c
  2120  0022E8  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2121  0022EA  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2122  0022EC  90D8               	bcf	status,0,c
  2123  0022EE  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2124  0022F0  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2125  0022F2  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2126  0022F4  6E6D               	movwf	109,c	;volatile
  2127                           
  2128                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  2129  0022F6  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2130  0022FA  0E03               	movlw	3
  2131  0022FC  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  2132  0022FE  0E06               	movlw	6
  2133  002300  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  2134  002302                     u1885:
  2135  002302  90D8               	bcf	status,0,c
  2136  002304  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  2137  002306  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  2138  002308  EF81  F011         	goto	u1885
  2139  00230C  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2140  00230E  6E6C               	movwf	108,c	;volatile
  2141  002310  0012               	return		;funcret
  2142  002312                     __end_of_PWM5_LoadDutyValue:
  2143                           	callstack 0
  2144                           
  2145 ;; *************** function ___flge *****************
  2146 ;; Defined at:
  2147 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  ff1             4   19[COMRAM] void 
  2150 ;;  ff2             4   23[COMRAM] void 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;		None
  2153 ;; Return value:  Size  Location     Type
  2154 ;;		None               void
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2162 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;Total ram usage:       12 bytes
  2167 ;; Hardware stack levels used: 1
  2168 ;; Hardware stack levels required when called: 8
  2169 ;; This function calls:
  2170 ;;		Nothing
  2171 ;; This function is called by:
  2172 ;;		_startAccell
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text7
  2177  0017B4                     __ptext7:
  2178                           	callstack 0
  2179  0017B4                     ___flge:
  2180                           	callstack 20
  2181  0017B4  0E00               	movlw	0
  2182  0017B6  1414               	andwf	___flge@ff1^0,w,c
  2183  0017B8  6E1C               	movwf	??___flge^0,c
  2184  0017BA  0E00               	movlw	0
  2185  0017BC  1415               	andwf	(___flge@ff1+1)^0,w,c
  2186  0017BE  6E1D               	movwf	(??___flge+1)^0,c
  2187  0017C0  0E80               	movlw	128
  2188  0017C2  1416               	andwf	(___flge@ff1+2)^0,w,c
  2189  0017C4  6E1E               	movwf	(??___flge+2)^0,c
  2190  0017C6  0E7F               	movlw	127
  2191  0017C8  1417               	andwf	(___flge@ff1+3)^0,w,c
  2192  0017CA  6E1F               	movwf	(??___flge+3)^0,c
  2193  0017CC  501C               	movf	??___flge^0,w,c
  2194  0017CE  101D               	iorwf	(??___flge+1)^0,w,c
  2195  0017D0  101E               	iorwf	(??___flge+2)^0,w,c
  2196  0017D2  101F               	iorwf	(??___flge+3)^0,w,c
  2197  0017D4  A4D8               	btfss	status,2,c
  2198  0017D6  EFEF  F00B         	goto	u2781
  2199  0017DA  EFF1  F00B         	goto	u2780
  2200  0017DE                     u2781:
  2201  0017DE  EFF9  F00B         	goto	l4354
  2202  0017E2                     u2780:
  2203  0017E2  0E00               	movlw	0
  2204  0017E4  6E14               	movwf	___flge@ff1^0,c
  2205  0017E6  0E00               	movlw	0
  2206  0017E8  6E15               	movwf	(___flge@ff1+1)^0,c
  2207  0017EA  0E00               	movlw	0
  2208  0017EC  6E16               	movwf	(___flge@ff1+2)^0,c
  2209  0017EE  0E00               	movlw	0
  2210  0017F0  6E17               	movwf	(___flge@ff1+3)^0,c
  2211  0017F2                     l4354:
  2212  0017F2  0E00               	movlw	0
  2213  0017F4  1418               	andwf	___flge@ff2^0,w,c
  2214  0017F6  6E1C               	movwf	??___flge^0,c
  2215  0017F8  0E00               	movlw	0
  2216  0017FA  1419               	andwf	(___flge@ff2+1)^0,w,c
  2217  0017FC  6E1D               	movwf	(??___flge+1)^0,c
  2218  0017FE  0E80               	movlw	128
  2219  001800  141A               	andwf	(___flge@ff2+2)^0,w,c
  2220  001802  6E1E               	movwf	(??___flge+2)^0,c
  2221  001804  0E7F               	movlw	127
  2222  001806  141B               	andwf	(___flge@ff2+3)^0,w,c
  2223  001808  6E1F               	movwf	(??___flge+3)^0,c
  2224  00180A  501C               	movf	??___flge^0,w,c
  2225  00180C  101D               	iorwf	(??___flge+1)^0,w,c
  2226  00180E  101E               	iorwf	(??___flge+2)^0,w,c
  2227  001810  101F               	iorwf	(??___flge+3)^0,w,c
  2228  001812  A4D8               	btfss	status,2,c
  2229  001814  EF0E  F00C         	goto	u2791
  2230  001818  EF10  F00C         	goto	u2790
  2231  00181C                     u2791:
  2232  00181C  EF18  F00C         	goto	l4358
  2233  001820                     u2790:
  2234  001820  0E00               	movlw	0
  2235  001822  6E18               	movwf	___flge@ff2^0,c
  2236  001824  0E00               	movlw	0
  2237  001826  6E19               	movwf	(___flge@ff2+1)^0,c
  2238  001828  0E00               	movlw	0
  2239  00182A  6E1A               	movwf	(___flge@ff2+2)^0,c
  2240  00182C  0E00               	movlw	0
  2241  00182E  6E1B               	movwf	(___flge@ff2+3)^0,c
  2242  001830                     l4358:
  2243  001830  AE17               	btfss	(___flge@ff1+3)^0,7,c
  2244  001832  EF1D  F00C         	goto	u2801
  2245  001836  EF1F  F00C         	goto	u2800
  2246  00183A                     u2801:
  2247  00183A  EF28  F00C         	goto	l4362
  2248  00183E                     u2800:
  2249  00183E  6C14               	negf	___flge@ff1^0,c
  2250  001840  1E15               	comf	(___flge@ff1+1)^0,f,c
  2251  001842  B0D8               	btfsc	status,0,c
  2252  001844  2A15               	incf	(___flge@ff1+1)^0,f,c
  2253  001846  1E16               	comf	(___flge@ff1+2)^0,f,c
  2254  001848  B0D8               	btfsc	status,0,c
  2255  00184A  2A16               	incf	(___flge@ff1+2)^0,f,c
  2256  00184C  0E80               	movlw	128
  2257  00184E  5617               	subfwb	(___flge@ff1+3)^0,f,c
  2258  001850                     l4362:
  2259  001850  AE1B               	btfss	(___flge@ff2+3)^0,7,c
  2260  001852  EF2D  F00C         	goto	u2811
  2261  001856  EF2F  F00C         	goto	u2810
  2262  00185A                     u2811:
  2263  00185A  EF38  F00C         	goto	l1640
  2264  00185E                     u2810:
  2265  00185E  6C18               	negf	___flge@ff2^0,c
  2266  001860  1E19               	comf	(___flge@ff2+1)^0,f,c
  2267  001862  B0D8               	btfsc	status,0,c
  2268  001864  2A19               	incf	(___flge@ff2+1)^0,f,c
  2269  001866  1E1A               	comf	(___flge@ff2+2)^0,f,c
  2270  001868  B0D8               	btfsc	status,0,c
  2271  00186A  2A1A               	incf	(___flge@ff2+2)^0,f,c
  2272  00186C  0E80               	movlw	128
  2273  00186E  561B               	subfwb	(___flge@ff2+3)^0,f,c
  2274  001870                     l1640:
  2275  001870  0E00               	movlw	0
  2276  001872  1A14               	xorwf	___flge@ff1^0,f,c
  2277  001874  0E00               	movlw	0
  2278  001876  1A15               	xorwf	(___flge@ff1+1)^0,f,c
  2279  001878  0E00               	movlw	0
  2280  00187A  1A16               	xorwf	(___flge@ff1+2)^0,f,c
  2281  00187C  0E80               	movlw	128
  2282  00187E  1A17               	xorwf	(___flge@ff1+3)^0,f,c
  2283  001880  0E00               	movlw	0
  2284  001882  1A18               	xorwf	___flge@ff2^0,f,c
  2285  001884  0E00               	movlw	0
  2286  001886  1A19               	xorwf	(___flge@ff2+1)^0,f,c
  2287  001888  0E00               	movlw	0
  2288  00188A  1A1A               	xorwf	(___flge@ff2+2)^0,f,c
  2289  00188C  0E80               	movlw	128
  2290  00188E  1A1B               	xorwf	(___flge@ff2+3)^0,f,c
  2291  001890  5018               	movf	___flge@ff2^0,w,c
  2292  001892  5C14               	subwf	___flge@ff1^0,w,c
  2293  001894  5019               	movf	(___flge@ff2+1)^0,w,c
  2294  001896  5815               	subwfb	(___flge@ff1+1)^0,w,c
  2295  001898  501A               	movf	(___flge@ff2+2)^0,w,c
  2296  00189A  5816               	subwfb	(___flge@ff1+2)^0,w,c
  2297  00189C  501B               	movf	(___flge@ff2+3)^0,w,c
  2298  00189E  5817               	subwfb	(___flge@ff1+3)^0,w,c
  2299  0018A0  B0D8               	btfsc	status,0,c
  2300  0018A2  EF55  F00C         	goto	u2821
  2301  0018A6  EF57  F00C         	goto	u2820
  2302  0018AA                     u2821:
  2303  0018AA  EF5A  F00C         	goto	l4368
  2304  0018AE                     u2820:
  2305  0018AE  90D8               	bcf	status,0,c
  2306  0018B0  EF5B  F00C         	goto	l1645
  2307  0018B4                     l4368:
  2308  0018B4  80D8               	bsf	status,0,c
  2309  0018B6                     l1645:
  2310  0018B6  0012               	return		;funcret
  2311  0018B8                     __end_of___flge:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _getReverse *****************
  2315 ;; Defined at:
  2316 ;;		line 192 in file "main.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 8
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_loop
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text8
  2345  0018B8                     __ptext8:
  2346                           	callstack 0
  2347  0018B8                     _getReverse:
  2348                           	callstack 21
  2349  0018B8                     
  2350                           ;main.c: 193:     if (distFront < (15)) {
  2351  0018B8  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2352  0018BA  E107               	bnz	u3191
  2353  0018BC  0E0F               	movlw	15
  2354  0018BE  5C4A               	subwf	_distFront^0,w,c	;volatile
  2355  0018C0  B0D8               	btfsc	status,0,c
  2356  0018C2  EF65  F00C         	goto	u3191
  2357  0018C6  EF67  F00C         	goto	u3190
  2358  0018CA                     u3191:
  2359  0018CA  EF6C  F00C         	goto	l4672
  2360  0018CE                     u3190:
  2361  0018CE                     
  2362                           ;main.c: 194:         ++reverseCount;
  2363  0018CE  0100               	movlb	0	; () banked
  2364  0018D0  4B92               	infsnz	_reverseCount& (0+255),f,b
  2365  0018D2  2B93               	incf	(_reverseCount+1)& (0+255),f,b
  2366                           
  2367                           ;main.c: 195:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2368  0018D4  EF83  F00C         	goto	l4678
  2369  0018D8                     l4672:
  2370  0018D8  0E03               	movlw	3
  2371  0018DA  184C               	xorwf	_driveMode^0,w,c
  2372  0018DC  B4D8               	btfsc	status,2,c
  2373  0018DE  EF73  F00C         	goto	u3201
  2374  0018E2  EF75  F00C         	goto	u3200
  2375  0018E6                     u3201:
  2376  0018E6  EF83  F00C         	goto	l4678
  2377  0018EA                     u3200:
  2378  0018EA  0E04               	movlw	4
  2379  0018EC  184C               	xorwf	_driveMode^0,w,c
  2380  0018EE  B4D8               	btfsc	status,2,c
  2381  0018F0  EF7C  F00C         	goto	u3211
  2382  0018F4  EF7E  F00C         	goto	u3210
  2383  0018F8                     u3211:
  2384  0018F8  EF83  F00C         	goto	l4678
  2385  0018FC                     u3210:
  2386  0018FC                     
  2387                           ;main.c: 196:         reverseCount = 0;
  2388  0018FC  0E00               	movlw	0
  2389  0018FE  0100               	movlb	0	; () banked
  2390  001900  6F93               	movwf	(_reverseCount+1)& (0+255),b
  2391  001902  0E00               	movlw	0
  2392  001904  6F92               	movwf	_reverseCount& (0+255),b
  2393  001906                     l4678:
  2394                           
  2395                           ;main.c: 199:     if (reverseCount > (50)) {
  2396  001906  0100               	movlb	0	; () banked
  2397  001908  5193               	movf	(_reverseCount+1)& (0+255),w,b
  2398  00190A  E109               	bnz	u3220
  2399  00190C  0E33               	movlw	51
  2400  00190E  5D92               	subwf	_reverseCount& (0+255),w,b
  2401  001910  A0D8               	btfss	status,0,c
  2402  001912  EF8D  F00C         	goto	u3221
  2403  001916  EF8F  F00C         	goto	u3220
  2404  00191A                     u3221:
  2405  00191A  EFD9  F00C         	goto	l1288
  2406  00191E                     u3220:
  2407  00191E                     
  2408                           ; BSR set to: 0
  2409                           ;main.c: 200:         ++reverseTime;
  2410  00191E  4B82               	infsnz	_reverseTime& (0+255),f,b
  2411  001920  2B83               	incf	(_reverseTime+1)& (0+255),f,b
  2412  001922                     
  2413                           ; BSR set to: 0
  2414                           ;main.c: 202:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2415  001922  0E03               	movlw	3
  2416  001924  184C               	xorwf	_driveMode^0,w,c
  2417  001926  B4D8               	btfsc	status,2,c
  2418  001928  EF98  F00C         	goto	u3231
  2419  00192C  EF9A  F00C         	goto	u3230
  2420  001930                     u3231:
  2421  001930  EFB4  F00C         	goto	l4692
  2422  001934                     u3230:
  2423  001934                     
  2424                           ; BSR set to: 0
  2425  001934  0E04               	movlw	4
  2426  001936  184C               	xorwf	_driveMode^0,w,c
  2427  001938  B4D8               	btfsc	status,2,c
  2428  00193A  EFA1  F00C         	goto	u3241
  2429  00193E  EFA3  F00C         	goto	u3240
  2430  001942                     u3241:
  2431  001942  EFB4  F00C         	goto	l4692
  2432  001946                     u3240:
  2433  001946                     
  2434                           ; BSR set to: 0
  2435                           ;main.c: 203:             if (distLeft > distRight) {
  2436  001946  519A               	movf	_distLeft& (0+255),w,b	;volatile
  2437  001948  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  2438  00194A  519B               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2439  00194C  5997               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2440  00194E  B0D8               	btfsc	status,0,c
  2441  001950  EFAC  F00C         	goto	u3251
  2442  001954  EFAE  F00C         	goto	u3250
  2443  001958                     u3251:
  2444  001958  EFB2  F00C         	goto	l4690
  2445  00195C                     u3250:
  2446  00195C                     
  2447                           ; BSR set to: 0
  2448                           ;main.c: 205:                 driveMode = ReverseRight;
  2449  00195C  0E03               	movlw	3
  2450  00195E  6E4C               	movwf	_driveMode^0,c
  2451                           
  2452                           ;main.c: 206:             } else {
  2453  001960  EFB4  F00C         	goto	l4692
  2454  001964                     l4690:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 208:                 driveMode = ReverseLeft;
  2458  001964  0E04               	movlw	4
  2459  001966  6E4C               	movwf	_driveMode^0,c
  2460  001968                     l4692:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;main.c: 212:         if (distFront > (35) || reverseTime > (300)) {
  2464  001968  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2465  00196A  E107               	bnz	u3261
  2466  00196C  0E24               	movlw	36
  2467  00196E  5C4A               	subwf	_distFront^0,w,c	;volatile
  2468  001970  B0D8               	btfsc	status,0,c
  2469  001972  EFBD  F00C         	goto	u3261
  2470  001976  EFBF  F00C         	goto	u3260
  2471  00197A                     u3261:
  2472  00197A  EFCF  F00C         	goto	l4696
  2473  00197E                     u3260:
  2474  00197E                     
  2475                           ; BSR set to: 0
  2476  00197E  BF83               	btfsc	(_reverseTime+1)& (0+255),7,b
  2477  001980  EFCB  F00C         	goto	u3271
  2478  001984  0E2D               	movlw	45
  2479  001986  5D82               	subwf	_reverseTime& (0+255),w,b
  2480  001988  0E01               	movlw	1
  2481  00198A  5983               	subwfb	(_reverseTime+1)& (0+255),w,b
  2482  00198C  A0D8               	btfss	status,0,c
  2483  00198E  EFCB  F00C         	goto	u3271
  2484  001992  EFCD  F00C         	goto	u3270
  2485  001996                     u3271:
  2486  001996  EFD9  F00C         	goto	l1288
  2487  00199A                     u3270:
  2488  00199A  EFCF  F00C         	goto	l4698
  2489  00199E                     l4696:
  2490  00199E                     l4698:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;main.c: 215:                 driveMode = Straight;
  2494  00199E  0E01               	movlw	1
  2495  0019A0  6E4C               	movwf	_driveMode^0,c
  2496  0019A2                     
  2497                           ; BSR set to: 0
  2498                           ;main.c: 220:             reverseCount = 0;
  2499  0019A2  0E00               	movlw	0
  2500  0019A4  6F93               	movwf	(_reverseCount+1)& (0+255),b
  2501  0019A6  0E00               	movlw	0
  2502  0019A8  6F92               	movwf	_reverseCount& (0+255),b
  2503                           
  2504                           ;main.c: 221:             reverseTime = 0;
  2505  0019AA  0E00               	movlw	0
  2506  0019AC  6F83               	movwf	(_reverseTime+1)& (0+255),b
  2507  0019AE  0E00               	movlw	0
  2508  0019B0  6F82               	movwf	_reverseTime& (0+255),b
  2509  0019B2                     l1288:
  2510                           
  2511                           ; BSR set to: 0
  2512  0019B2  0012               	return		;funcret
  2513  0019B4                     __end_of_getReverse:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _getCurve *****************
  2517 ;; Defined at:
  2518 ;;		line 128 in file "main.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  deltaLeft       2   23[COMRAM] short 
  2523 ;;  deltaRight      2   21[COMRAM] short 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        6 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 8
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_loop
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text9
  2548  0009C4                     __ptext9:
  2549                           	callstack 0
  2550  0009C4                     _getCurve:
  2551                           	callstack 21
  2552  0009C4                     
  2553                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2554  0009C4  503A               	movf	_oldDistLeft^0,w,c
  2555  0009C6  0100               	movlb	0	; () banked
  2556  0009C8  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  2557  0009CA  6E18               	movwf	getCurve@deltaLeft^0,c
  2558  0009CC  503B               	movf	(_oldDistLeft+1)^0,w,c
  2559  0009CE  599B               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2560  0009D0  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  2561                           
  2562                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2563  0009D2  5190               	movf	_oldDistRight& (0+255),w,b
  2564  0009D4  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  2565  0009D6  6E16               	movwf	getCurve@deltaRight^0,c
  2566  0009D8  5191               	movf	(_oldDistRight+1)& (0+255),w,b
  2567  0009DA  5997               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2568  0009DC  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  2569                           
  2570                           ;main.c: 132:     switch (curveMode) {
  2571  0009DE  EFD0  F005         	goto	l4658
  2572  0009E2                     l4606:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (15
      +                          0)) {
  2576  0009E2  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2577  0009E4  EFFD  F004         	goto	u3031
  2578  0009E8  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2579  0009EA  E109               	bnz	u3030
  2580  0009EC  0E1F               	movlw	31
  2581  0009EE  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2582  0009F0  A0D8               	btfss	status,0,c
  2583  0009F2  EFFD  F004         	goto	u3031
  2584  0009F6  EFFF  F004         	goto	u3030
  2585  0009FA                     u3031:
  2586  0009FA  EF20  F005         	goto	l4614
  2587  0009FE                     u3030:
  2588  0009FE                     
  2589                           ; BSR set to: 0
  2590  0009FE  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2591  000A00  EF0D  F005         	goto	u3040
  2592  000A04  0E2C               	movlw	44
  2593  000A06  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2594  000A08  0E01               	movlw	1
  2595  000A0A  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2596  000A0C  B0D8               	btfsc	status,0,c
  2597  000A0E  EF0B  F005         	goto	u3041
  2598  000A12  EF0D  F005         	goto	u3040
  2599  000A16                     u3041:
  2600  000A16  EF20  F005         	goto	l4614
  2601  000A1A                     u3040:
  2602  000A1A                     
  2603                           ; BSR set to: 0
  2604  000A1A  503B               	movf	(_oldDistLeft+1)^0,w,c
  2605  000A1C  E107               	bnz	u3051
  2606  000A1E  0E96               	movlw	150
  2607  000A20  5C3A               	subwf	_oldDistLeft^0,w,c
  2608  000A22  B0D8               	btfsc	status,0,c
  2609  000A24  EF16  F005         	goto	u3051
  2610  000A28  EF18  F005         	goto	u3050
  2611  000A2C                     u3051:
  2612  000A2C  EF20  F005         	goto	l4614
  2613  000A30                     u3050:
  2614  000A30                     
  2615                           ; BSR set to: 0
  2616                           ;main.c: 135:                 delay = 0;
  2617  000A30  0E00               	movlw	0
  2618  000A32  6E3E               	movwf	_delay^0,c
  2619                           
  2620                           ;main.c: 136:                 curveMode = BeforeCurve;
  2621  000A34  0E01               	movlw	1
  2622  000A36  6E3F               	movwf	_curveMode^0,c
  2623                           
  2624                           ;main.c: 137:                 driveMode = CurveLeft;
  2625  000A38  0E05               	movlw	5
  2626  000A3A  6E4C               	movwf	_driveMode^0,c
  2627                           
  2628                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (150)) {
  2629  000A3C  EFED  F005         	goto	l1255
  2630  000A40                     l4614:
  2631                           
  2632                           ; BSR set to: 0
  2633  000A40  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2634  000A42  EF2C  F005         	goto	u3061
  2635  000A46  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  2636  000A48  E109               	bnz	u3060
  2637  000A4A  0E1F               	movlw	31
  2638  000A4C  5C16               	subwf	getCurve@deltaRight^0,w,c
  2639  000A4E  A0D8               	btfss	status,0,c
  2640  000A50  EF2C  F005         	goto	u3061
  2641  000A54  EF2E  F005         	goto	u3060
  2642  000A58                     u3061:
  2643  000A58  EFED  F005         	goto	l1255
  2644  000A5C                     u3060:
  2645  000A5C                     
  2646                           ; BSR set to: 0
  2647  000A5C  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2648  000A5E  EF3C  F005         	goto	u3070
  2649  000A62  0E2C               	movlw	44
  2650  000A64  5C16               	subwf	getCurve@deltaRight^0,w,c
  2651  000A66  0E01               	movlw	1
  2652  000A68  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2653  000A6A  B0D8               	btfsc	status,0,c
  2654  000A6C  EF3A  F005         	goto	u3071
  2655  000A70  EF3C  F005         	goto	u3070
  2656  000A74                     u3071:
  2657  000A74  EFED  F005         	goto	l1255
  2658  000A78                     u3070:
  2659  000A78                     
  2660                           ; BSR set to: 0
  2661  000A78  5191               	movf	(_oldDistRight+1)& (0+255),w,b
  2662  000A7A  E107               	bnz	u3081
  2663  000A7C  0E96               	movlw	150
  2664  000A7E  5D90               	subwf	_oldDistRight& (0+255),w,b
  2665  000A80  B0D8               	btfsc	status,0,c
  2666  000A82  EF45  F005         	goto	u3081
  2667  000A86  EF47  F005         	goto	u3080
  2668  000A8A                     u3081:
  2669  000A8A  EFED  F005         	goto	l1255
  2670  000A8E                     u3080:
  2671  000A8E                     
  2672                           ; BSR set to: 0
  2673                           ;main.c: 141:                 delay = 0;
  2674  000A8E  0E00               	movlw	0
  2675  000A90  6E3E               	movwf	_delay^0,c
  2676                           
  2677                           ;main.c: 142:                 curveMode = BeforeCurve;
  2678  000A92  0E01               	movlw	1
  2679  000A94  6E3F               	movwf	_curveMode^0,c
  2680                           
  2681                           ;main.c: 143:                 driveMode = CurveRight;
  2682  000A96  0E06               	movlw	6
  2683  000A98  6E4C               	movwf	_driveMode^0,c
  2684  000A9A  EFED  F005         	goto	l1255
  2685  000A9E                     l4622:
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;main.c: 150:             if (delay >= (20)) {
  2689  000A9E  0E13               	movlw	19
  2690  000AA0  643E               	cpfsgt	_delay^0,c
  2691  000AA2  EF55  F005         	goto	u3091
  2692  000AA6  EF57  F005         	goto	u3090
  2693  000AAA                     u3091:
  2694  000AAA  EF5D  F005         	goto	l4626
  2695  000AAE                     u3090:
  2696  000AAE                     
  2697                           ; BSR set to: 0
  2698                           ;main.c: 151:                 delay = 0;
  2699  000AAE  0E00               	movlw	0
  2700  000AB0  6E3E               	movwf	_delay^0,c
  2701                           
  2702                           ;main.c: 152:                 curveMode = InCurve;
  2703  000AB2  0E02               	movlw	2
  2704  000AB4  6E3F               	movwf	_curveMode^0,c
  2705                           
  2706                           ;main.c: 154:             } else {
  2707  000AB6  EFED  F005         	goto	l1255
  2708  000ABA                     l4626:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;main.c: 155:                 ++delay;
  2712  000ABA  2A3E               	incf	_delay^0,f,c
  2713  000ABC  EFED  F005         	goto	l1255
  2714  000AC0                     l4628:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;main.c: 159:             if (delay >= (25)) {
  2718  000AC0  0E18               	movlw	24
  2719  000AC2  643E               	cpfsgt	_delay^0,c
  2720  000AC4  EF66  F005         	goto	u3101
  2721  000AC8  EF68  F005         	goto	u3100
  2722  000ACC                     u3101:
  2723  000ACC  EF5D  F005         	goto	l4626
  2724  000AD0                     u3100:
  2725  000AD0                     
  2726                           ; BSR set to: 0
  2727                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (175)) {
  2728  000AD0  0E05               	movlw	5
  2729  000AD2  184C               	xorwf	_driveMode^0,w,c
  2730  000AD4  A4D8               	btfss	status,2,c
  2731  000AD6  EF6F  F005         	goto	u3111
  2732  000ADA  EF71  F005         	goto	u3110
  2733  000ADE                     u3111:
  2734  000ADE  EF7C  F005         	goto	l4634
  2735  000AE2                     u3110:
  2736  000AE2                     
  2737                           ; BSR set to: 0
  2738  000AE2  519B               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2739  000AE4  E109               	bnz	u3120
  2740  000AE6  0E2D               	movlw	45
  2741  000AE8  5D9A               	subwf	_distLeft& (0+255),w,b	;volatile
  2742  000AEA  A0D8               	btfss	status,0,c
  2743  000AEC  EF7A  F005         	goto	u3121
  2744  000AF0  EF7C  F005         	goto	u3120
  2745  000AF4                     u3121:
  2746  000AF4  EF9B  F005         	goto	l4640
  2747  000AF8                     u3120:
  2748  000AF8                     l4634:
  2749                           
  2750                           ; BSR set to: 0
  2751  000AF8  0E06               	movlw	6
  2752  000AFA  184C               	xorwf	_driveMode^0,w,c
  2753  000AFC  A4D8               	btfss	status,2,c
  2754  000AFE  EF83  F005         	goto	u3131
  2755  000B02  EF85  F005         	goto	u3130
  2756  000B06                     u3131:
  2757  000B06  EF90  F005         	goto	l4638
  2758  000B0A                     u3130:
  2759  000B0A                     
  2760                           ; BSR set to: 0
  2761  000B0A  5197               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2762  000B0C  E109               	bnz	u3140
  2763  000B0E  0E2D               	movlw	45
  2764  000B10  5D96               	subwf	_distRight& (0+255),w,b	;volatile
  2765  000B12  A0D8               	btfss	status,0,c
  2766  000B14  EF8E  F005         	goto	u3141
  2767  000B18  EF90  F005         	goto	u3140
  2768  000B1C                     u3141:
  2769  000B1C  EF9B  F005         	goto	l4640
  2770  000B20                     u3140:
  2771  000B20                     l4638:
  2772                           
  2773                           ; BSR set to: 0
  2774  000B20  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2775  000B22  E109               	bnz	u3150
  2776  000B24  0EB0               	movlw	176
  2777  000B26  5C4A               	subwf	_distFront^0,w,c	;volatile
  2778  000B28  A0D8               	btfss	status,0,c
  2779  000B2A  EF99  F005         	goto	u3151
  2780  000B2E  EF9B  F005         	goto	u3150
  2781  000B32                     u3151:
  2782  000B32  EFA3  F005         	goto	l4642
  2783  000B36                     u3150:
  2784  000B36                     l4640:
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;main.c: 163:                     delay = 0;
  2788  000B36  0E00               	movlw	0
  2789  000B38  6E3E               	movwf	_delay^0,c
  2790                           
  2791                           ;main.c: 164:                     curveMode = AfterCurve;
  2792  000B3A  0E03               	movlw	3
  2793  000B3C  6E3F               	movwf	_curveMode^0,c
  2794                           
  2795                           ;main.c: 165:                     driveMode = Straight;
  2796  000B3E  0E01               	movlw	1
  2797  000B40  6E4C               	movwf	_driveMode^0,c
  2798                           
  2799                           ;main.c: 168:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2800  000B42  EF5D  F005         	goto	l4626
  2801  000B46                     l4642:
  2802                           
  2803                           ; BSR set to: 0
  2804  000B46  0E06               	movlw	6
  2805  000B48  184C               	xorwf	_driveMode^0,w,c
  2806  000B4A  A4D8               	btfss	status,2,c
  2807  000B4C  EFAA  F005         	goto	u3161
  2808  000B50  EFAC  F005         	goto	u3160
  2809  000B54                     u3161:
  2810  000B54  EF5D  F005         	goto	l4626
  2811  000B58                     u3160:
  2812  000B58                     
  2813                           ; BSR set to: 0
  2814  000B58  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2815  000B5A  EFB8  F005         	goto	u3171
  2816  000B5E  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2817  000B60  E109               	bnz	u3170
  2818  000B62  0E1F               	movlw	31
  2819  000B64  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2820  000B66  A0D8               	btfss	status,0,c
  2821  000B68  EFB8  F005         	goto	u3171
  2822  000B6C  EFBA  F005         	goto	u3170
  2823  000B70                     u3171:
  2824  000B70  EF5D  F005         	goto	l4626
  2825  000B74                     u3170:
  2826  000B74                     
  2827                           ; BSR set to: 0
  2828                           ;main.c: 170:                     delay = 0;
  2829  000B74  0E00               	movlw	0
  2830  000B76  6E3E               	movwf	_delay^0,c
  2831                           
  2832                           ;main.c: 171:                     curveMode = BeforeCurve;
  2833  000B78  0E01               	movlw	1
  2834  000B7A  6E3F               	movwf	_curveMode^0,c
  2835                           
  2836                           ;main.c: 172:                     driveMode = CurveLeft;
  2837  000B7C  0E05               	movlw	5
  2838  000B7E  6E4C               	movwf	_driveMode^0,c
  2839  000B80  EF5D  F005         	goto	l4626
  2840  000B84                     l4650:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;main.c: 179:             if (delay >= (1)) {
  2844  000B84  503E               	movf	_delay^0,w,c
  2845  000B86  B4D8               	btfsc	status,2,c
  2846  000B88  EFC8  F005         	goto	u3181
  2847  000B8C  EFCA  F005         	goto	u3180
  2848  000B90                     u3181:
  2849  000B90  EF5D  F005         	goto	l4626
  2850  000B94                     u3180:
  2851  000B94                     
  2852                           ; BSR set to: 0
  2853                           ;main.c: 180:                 delay = 0;
  2854  000B94  0E00               	movlw	0
  2855  000B96  6E3E               	movwf	_delay^0,c
  2856                           
  2857                           ;main.c: 181:                 curveMode = OutCurve;
  2858  000B98  0E00               	movlw	0
  2859  000B9A  6E3F               	movwf	_curveMode^0,c
  2860                           
  2861                           ;main.c: 183:             } else {
  2862  000B9C  EFED  F005         	goto	l1255
  2863  000BA0                     l4658:
  2864                           
  2865                           ; BSR set to: 0
  2866  000BA0  503F               	movf	_curveMode^0,w,c
  2867  000BA2  6E14               	movwf	??_getCurve^0,c
  2868  000BA4  6A15               	clrf	(??_getCurve+1)^0,c
  2869                           
  2870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2871                           ; Switch size 1, requested type "simple"
  2872                           ; Number of cases is 1, Range of values is 0 to 0
  2873                           ; switch strategies available:
  2874                           ; Name         Instructions Cycles
  2875                           ; simple_byte            4     3 (average)
  2876                           ;	Chosen strategy is simple_byte
  2877  000BA6  5015               	movf	(??_getCurve+1)^0,w,c
  2878  000BA8  0A00               	xorlw	0	; case 0
  2879  000BAA  B4D8               	btfsc	status,2,c
  2880  000BAC  EFDA  F005         	goto	l5966
  2881  000BB0  EFED  F005         	goto	l1255
  2882  000BB4                     l5966:
  2883                           
  2884                           ; BSR set to: 0
  2885                           ; Switch size 1, requested type "simple"
  2886                           ; Number of cases is 4, Range of values is 0 to 3
  2887                           ; switch strategies available:
  2888                           ; Name         Instructions Cycles
  2889                           ; simple_byte           13     7 (average)
  2890                           ;	Chosen strategy is simple_byte
  2891  000BB4  5014               	movf	??_getCurve^0,w,c
  2892  000BB6  0A00               	xorlw	0	; case 0
  2893  000BB8  B4D8               	btfsc	status,2,c
  2894  000BBA  EFF1  F004         	goto	l4606
  2895  000BBE  0A01               	xorlw	1	; case 1
  2896  000BC0  B4D8               	btfsc	status,2,c
  2897  000BC2  EF4F  F005         	goto	l4622
  2898  000BC6  0A03               	xorlw	3	; case 2
  2899  000BC8  B4D8               	btfsc	status,2,c
  2900  000BCA  EF60  F005         	goto	l4628
  2901  000BCE  0A01               	xorlw	1	; case 3
  2902  000BD0  B4D8               	btfsc	status,2,c
  2903  000BD2  EFC2  F005         	goto	l4650
  2904  000BD6  EFED  F005         	goto	l1255
  2905  000BDA                     l1255:
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;main.c: 188:     oldDistLeft = distLeft;
  2909  000BDA  C09A  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  2910  000BDE  C09B  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2911                           
  2912                           ;main.c: 189:     oldDistRight = distRight;
  2913  000BE2  C096  F090         	movff	_distRight,_oldDistRight	;volatile
  2914  000BE6  C097  F091         	movff	_distRight+1,_oldDistRight+1	;volatile
  2915  000BEA                     
  2916                           ; BSR set to: 0
  2917  000BEA  0012               	return		;funcret
  2918  000BEC                     __end_of_getCurve:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _calcSpeed *****************
  2922 ;; Defined at:
  2923 ;;		line 281 in file "main.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  speed           2   39[BANK0 ] short 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:        6 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 9
  2944 ;; This function calls:
  2945 ;;		___fladd
  2946 ;;		___flmul
  2947 ;;		___fltol
  2948 ;;		___xxtofl
  2949 ;; This function is called by:
  2950 ;;		_loop
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text10
  2955  000BEC                     __ptext10:
  2956                           	callstack 0
  2957  000BEC                     _calcSpeed:
  2958                           	callstack 20
  2959  000BEC                     
  2960                           ;main.c: 282:     int16_t speed = 0;
  2961  000BEC  0E00               	movlw	0
  2962  000BEE  0100               	movlb	0	; () banked
  2963  000BF0  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  2964  000BF2  0E00               	movlw	0
  2965  000BF4  6FC4               	movwf	calcSpeed@speed& (0+255),b
  2966                           
  2967                           ;main.c: 284:     switch (driveMode) {
  2968  000BF6  EFAC  F006         	goto	l5702
  2969  000BFA                     l5666:
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;main.c: 286:             if (distFront > (30)) {
  2973  000BFA  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2974  000BFC  E109               	bnz	u4430
  2975  000BFE  0E1F               	movlw	31
  2976  000C00  5C4A               	subwf	_distFront^0,w,c	;volatile
  2977  000C02  A0D8               	btfss	status,0,c
  2978  000C04  EF06  F006         	goto	u4431
  2979  000C08  EF08  F006         	goto	u4430
  2980  000C0C                     u4431:
  2981  000C0C  EF0A  F006         	goto	l5670
  2982  000C10                     u4430:
  2983  000C10                     
  2984                           ; BSR set to: 0
  2985                           ;main.c: 287:                 driveMode = Straight;
  2986  000C10  0E01               	movlw	1
  2987  000C12  6E4C               	movwf	_driveMode^0,c
  2988  000C14                     l5670:
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;main.c: 289:             if (setSpeed > (100)) {
  2992  000C14  BF8B               	btfsc	(_setSpeed+1)& (0+255),7,b
  2993  000C16  EF16  F006         	goto	u4441
  2994  000C1A  518B               	movf	(_setSpeed+1)& (0+255),w,b
  2995  000C1C  E109               	bnz	u4440
  2996  000C1E  0E65               	movlw	101
  2997  000C20  5D8A               	subwf	_setSpeed& (0+255),w,b
  2998  000C22  A0D8               	btfss	status,0,c
  2999  000C24  EF16  F006         	goto	u4441
  3000  000C28  EF18  F006         	goto	u4440
  3001  000C2C                     u4441:
  3002  000C2C  EF33  F006         	goto	l5680
  3003  000C30                     u4440:
  3004  000C30                     
  3005                           ; BSR set to: 0
  3006                           ;main.c: 290:                     speed = setSpeed;
  3007  000C30  C08A  F0C4         	movff	_setSpeed,calcSpeed@speed
  3008  000C34  C08B  F0C5         	movff	_setSpeed+1,calcSpeed@speed+1
  3009  000C38                     
  3010                           ; BSR set to: 0
  3011                           ;main.c: 291:                 if (distFront < (15)) {
  3012  000C38  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3013  000C3A  E107               	bnz	u4451
  3014  000C3C  0E0F               	movlw	15
  3015  000C3E  5C4A               	subwf	_distFront^0,w,c	;volatile
  3016  000C40  B0D8               	btfsc	status,0,c
  3017  000C42  EF25  F006         	goto	u4451
  3018  000C46  EF27  F006         	goto	u4450
  3019  000C4A                     u4451:
  3020  000C4A  EF2D  F006         	goto	l5678
  3021  000C4E                     u4450:
  3022  000C4E                     
  3023                           ; BSR set to: 0
  3024                           ;main.c: 292:                     speed -= 4;
  3025  000C4E  0EFC               	movlw	252
  3026  000C50  27C4               	addwf	calcSpeed@speed& (0+255),f,b
  3027  000C52  0EFF               	movlw	255
  3028  000C54  23C5               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3029                           
  3030                           ;main.c: 293:                 } else {
  3031  000C56  EFD5  F006         	goto	l5704
  3032  000C5A                     l5678:
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;main.c: 294:                     speed -= 2;
  3036  000C5A  0EFE               	movlw	254
  3037  000C5C  27C4               	addwf	calcSpeed@speed& (0+255),f,b
  3038  000C5E  0EFF               	movlw	255
  3039  000C60  23C5               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3040  000C62  EFD5  F006         	goto	l5704
  3041  000C66                     l5680:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;main.c: 297:                 speed = (100);
  3045  000C66  0E00               	movlw	0
  3046  000C68  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3047  000C6A  0E64               	movlw	100
  3048  000C6C  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3049  000C6E  EFD5  F006         	goto	l5704
  3050  000C72                     l5682:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;main.c: 302:             if (distFront < (30)) {
  3054  000C72  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3055  000C74  E107               	bnz	u4461
  3056  000C76  0E1E               	movlw	30
  3057  000C78  5C4A               	subwf	_distFront^0,w,c	;volatile
  3058  000C7A  B0D8               	btfsc	status,0,c
  3059  000C7C  EF42  F006         	goto	u4461
  3060  000C80  EF44  F006         	goto	u4460
  3061  000C84                     u4461:
  3062  000C84  EF46  F006         	goto	l5686
  3063  000C88                     u4460:
  3064  000C88                     
  3065                           ; BSR set to: 0
  3066                           ;main.c: 303:                 driveMode = Brake;
  3067  000C88  0E02               	movlw	2
  3068  000C8A  6E4C               	movwf	_driveMode^0,c
  3069  000C8C                     l5686:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;main.c: 306:             if (distFront >= (175)) {
  3073  000C8C  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3074  000C8E  E109               	bnz	u4470
  3075  000C90  0EAF               	movlw	175
  3076  000C92  5C4A               	subwf	_distFront^0,w,c	;volatile
  3077  000C94  A0D8               	btfss	status,0,c
  3078  000C96  EF4F  F006         	goto	u4471
  3079  000C9A  EF51  F006         	goto	u4470
  3080  000C9E                     u4471:
  3081  000C9E  EF9A  F006         	goto	l5690
  3082  000CA2                     u4470:
  3083  000CA2                     
  3084                           ; BSR set to: 0
  3085                           ;main.c: 307:                 speed = (int16_t) ((0.6) * (distFront - (175)) + (290));
  3086  000CA2  0E00               	movlw	0
  3087  000CA4  6FAE               	movwf	___fladd@a& (0+255),b
  3088  000CA6  0E00               	movlw	0
  3089  000CA8  6FAF               	movwf	(___fladd@a+1)& (0+255),b
  3090  000CAA  0E91               	movlw	145
  3091  000CAC  6FB0               	movwf	(___fladd@a+2)& (0+255),b
  3092  000CAE  0E43               	movlw	67
  3093  000CB0  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3094  000CB2  0E9A               	movlw	154
  3095  000CB4  6E2E               	movwf	___flmul@a^0,c
  3096  000CB6  0E99               	movlw	153
  3097  000CB8  6E2F               	movwf	(___flmul@a+1)^0,c
  3098  000CBA  0E19               	movlw	25
  3099  000CBC  6E30               	movwf	(___flmul@a+2)^0,c
  3100  000CBE  0E3F               	movlw	63
  3101  000CC0  6E31               	movwf	(___flmul@a+3)^0,c
  3102  000CC2  0E51               	movlw	81
  3103  000CC4  6FC0               	movwf	??_calcSpeed& (0+255),b
  3104  000CC6  0EFF               	movlw	255
  3105  000CC8  6FC1               	movwf	(??_calcSpeed+1)& (0+255),b
  3106  000CCA  C04A  F0C2         	movff	_distFront,??_calcSpeed+2	;volatile
  3107  000CCE  C04B  F0C3         	movff	_distFront+1,??_calcSpeed+3	;volatile
  3108  000CD2  51C0               	movf	??_calcSpeed& (0+255),w,b
  3109  000CD4  27C2               	addwf	(??_calcSpeed+2)& (0+255),f,b
  3110  000CD6  51C1               	movf	(??_calcSpeed+1)& (0+255),w,b
  3111  000CD8  23C3               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  3112  000CDA  C0C2  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  3113  000CDE  C0C3  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  3114  000CE2  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3115  000CE4  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3116  000CE6  0E00               	movlw	0
  3117  000CE8  ECE9  F007         	call	___xxtofl
  3118  000CEC  C01C  F02A         	movff	?___xxtofl,___flmul@b
  3119  000CF0  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  3120  000CF4  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  3121  000CF8  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  3122  000CFC  ECBA  F002         	call	___flmul	;wreg free
  3123  000D00  C02A  F0AA         	movff	?___flmul,___fladd@b
  3124  000D04  C02B  F0AB         	movff	?___flmul+1,___fladd@b+1
  3125  000D08  C02C  F0AC         	movff	?___flmul+2,___fladd@b+2
  3126  000D0C  C02D  F0AD         	movff	?___flmul+3,___fladd@b+3
  3127  000D10  EC59  F000         	call	___fladd	;wreg free
  3128  000D14  C0AA  F0B6         	movff	?___fladd,___fltol@f1
  3129  000D18  C0AB  F0B7         	movff	?___fladd+1,___fltol@f1+1
  3130  000D1C  C0AC  F0B8         	movff	?___fladd+2,___fltol@f1+2
  3131  000D20  C0AD  F0B9         	movff	?___fladd+3,___fltol@f1+3
  3132  000D24  EC56  F00B         	call	___fltol	;wreg free
  3133  000D28  C0B6  F0C4         	movff	?___fltol,calcSpeed@speed
  3134  000D2C  C0B7  F0C5         	movff	?___fltol+1,calcSpeed@speed+1
  3135                           
  3136                           ;main.c: 308:             } else {
  3137  000D30  EFD5  F006         	goto	l5704
  3138  000D34                     l5690:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;main.c: 309:                 speed = (290);
  3142  000D34  0E01               	movlw	1
  3143  000D36  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3144  000D38  0E22               	movlw	34
  3145  000D3A  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3146  000D3C  EFD5  F006         	goto	l5704
  3147  000D40                     l5692:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;main.c: 314:             speed = (-125);
  3151  000D40  0EFF               	movlw	255
  3152  000D42  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3153  000D44  0E83               	movlw	131
  3154  000D46  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3155                           
  3156                           ;main.c: 315:             break;
  3157  000D48  EFD5  F006         	goto	l5704
  3158  000D4C                     l5696:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;main.c: 320:             speed = (160);
  3162  000D4C  0E00               	movlw	0
  3163  000D4E  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3164  000D50  0EA0               	movlw	160
  3165  000D52  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3166                           
  3167                           ;main.c: 321:             break;
  3168  000D54  EFD5  F006         	goto	l5704
  3169  000D58                     l5702:
  3170                           
  3171                           ; BSR set to: 0
  3172  000D58  504C               	movf	_driveMode^0,w,c
  3173  000D5A  6FC0               	movwf	??_calcSpeed& (0+255),b
  3174  000D5C  6BC1               	clrf	(??_calcSpeed+1)& (0+255),b
  3175                           
  3176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3177                           ; Switch size 1, requested type "simple"
  3178                           ; Number of cases is 1, Range of values is 0 to 0
  3179                           ; switch strategies available:
  3180                           ; Name         Instructions Cycles
  3181                           ; simple_byte            4     3 (average)
  3182                           ;	Chosen strategy is simple_byte
  3183  000D5E  51C1               	movf	(??_calcSpeed+1)& (0+255),w,b
  3184  000D60  0A00               	xorlw	0	; case 0
  3185  000D62  B4D8               	btfsc	status,2,c
  3186  000D64  EFB6  F006         	goto	l5968
  3187  000D68  EFD5  F006         	goto	l5704
  3188  000D6C                     l5968:
  3189                           
  3190                           ; BSR set to: 0
  3191                           ; Switch size 1, requested type "simple"
  3192                           ; Number of cases is 7, Range of values is 0 to 6
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte           22    12 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197  000D6C  51C0               	movf	??_calcSpeed& (0+255),w,b
  3198  000D6E  0A00               	xorlw	0	; case 0
  3199  000D70  B4D8               	btfsc	status,2,c
  3200  000D72  EF39  F006         	goto	l5682
  3201  000D76  0A01               	xorlw	1	; case 1
  3202  000D78  B4D8               	btfsc	status,2,c
  3203  000D7A  EF39  F006         	goto	l5682
  3204  000D7E  0A03               	xorlw	3	; case 2
  3205  000D80  B4D8               	btfsc	status,2,c
  3206  000D82  EFFD  F005         	goto	l5666
  3207  000D86  0A01               	xorlw	1	; case 3
  3208  000D88  B4D8               	btfsc	status,2,c
  3209  000D8A  EFA0  F006         	goto	l5692
  3210  000D8E  0A07               	xorlw	7	; case 4
  3211  000D90  B4D8               	btfsc	status,2,c
  3212  000D92  EFA0  F006         	goto	l5692
  3213  000D96  0A01               	xorlw	1	; case 5
  3214  000D98  B4D8               	btfsc	status,2,c
  3215  000D9A  EFA6  F006         	goto	l5696
  3216  000D9E  0A03               	xorlw	3	; case 6
  3217  000DA0  B4D8               	btfsc	status,2,c
  3218  000DA2  EFA6  F006         	goto	l5696
  3219  000DA6  EFD5  F006         	goto	l5704
  3220  000DAA                     l5704:
  3221                           
  3222                           ;main.c: 327:     if (speed > (550)) {
  3223  000DAA  0100               	movlb	0	; () banked
  3224  000DAC  BFC5               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  3225  000DAE  EFE2  F006         	goto	u4481
  3226  000DB2  0E27               	movlw	39
  3227  000DB4  5DC4               	subwf	calcSpeed@speed& (0+255),w,b
  3228  000DB6  0E02               	movlw	2
  3229  000DB8  59C5               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3230  000DBA  A0D8               	btfss	status,0,c
  3231  000DBC  EFE2  F006         	goto	u4481
  3232  000DC0  EFE4  F006         	goto	u4480
  3233  000DC4                     u4481:
  3234  000DC4  EFE8  F006         	goto	l5708
  3235  000DC8                     u4480:
  3236  000DC8                     
  3237                           ; BSR set to: 0
  3238                           ;main.c: 328:         speed = (550);
  3239  000DC8  0E02               	movlw	2
  3240  000DCA  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3241  000DCC  0E26               	movlw	38
  3242  000DCE  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3243  000DD0                     l5708:
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;main.c: 330:     if (speed < (-250)) {
  3247  000DD0  AFC5               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  3248  000DD2  EFF4  F006         	goto	u4491
  3249  000DD6  0E06               	movlw	6
  3250  000DD8  5DC4               	subwf	calcSpeed@speed& (0+255),w,b
  3251  000DDA  0EFF               	movlw	255
  3252  000DDC  59C5               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3253  000DDE  B0D8               	btfsc	status,0,c
  3254  000DE0  EFF4  F006         	goto	u4491
  3255  000DE4  EFF6  F006         	goto	u4490
  3256  000DE8                     u4491:
  3257  000DE8  EFFA  F006         	goto	l5712
  3258  000DEC                     u4490:
  3259  000DEC                     
  3260                           ; BSR set to: 0
  3261                           ;main.c: 331:         speed = (-250);
  3262  000DEC  0EFF               	movlw	255
  3263  000DEE  6FC5               	movwf	(calcSpeed@speed+1)& (0+255),b
  3264  000DF0  0E06               	movlw	6
  3265  000DF2  6FC4               	movwf	calcSpeed@speed& (0+255),b
  3266  000DF4                     l5712:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;main.c: 333:     setSpeed = speed;
  3270  000DF4  C0C4  F08A         	movff	calcSpeed@speed,_setSpeed
  3271  000DF8  C0C5  F08B         	movff	calcSpeed@speed+1,_setSpeed+1
  3272  000DFC                     
  3273                           ; BSR set to: 0
  3274  000DFC  0012               	return		;funcret
  3275  000DFE                     __end_of_calcSpeed:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function ___fladd *****************
  3279 ;; Defined at:
  3280 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  b               4   13[BANK0 ] void 
  3283 ;;  a               4   17[BANK0 ] void 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  grs             1   24[BANK0 ] unsigned char 
  3286 ;;  bexp            1   23[BANK0 ] unsigned char 
  3287 ;;  aexp            1   22[BANK0 ] unsigned char 
  3288 ;;  signs           1   21[BANK0 ] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  4   13[BANK0 ] unsigned char 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3298 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;Total ram usage:       16 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 8
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_calcSpeed
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text11
  3313  0000B2                     __ptext11:
  3314                           	callstack 0
  3315  0000B2                     ___fladd:
  3316                           	callstack 20
  3317  0000B2  0100               	movlb	0	; () banked
  3318  0000B4  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3319  0000B6  0B80               	andlw	128
  3320  0000B8  6FB2               	movwf	___fladd@signs& (0+255),b
  3321  0000BA  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3322  0000BC  25AD               	addwf	(___fladd@b+3)& (0+255),w,b
  3323  0000BE  6FB4               	movwf	___fladd@bexp& (0+255),b
  3324  0000C0                     
  3325                           ; BSR set to: 0
  3326  0000C0  AFAC               	btfss	(___fladd@b+2)& (0+255),7,b
  3327  0000C2  EF65  F000         	goto	u3751
  3328  0000C6  EF67  F000         	goto	u3750
  3329  0000CA                     u3751:
  3330  0000CA  EF68  F000         	goto	l5260
  3331  0000CE                     u3750:
  3332  0000CE                     
  3333                           ; BSR set to: 0
  3334  0000CE  81B4               	bsf	___fladd@bexp& (0+255),0,b
  3335  0000D0                     l5260:
  3336                           
  3337                           ; BSR set to: 0
  3338  0000D0  51B4               	movf	___fladd@bexp& (0+255),w,b
  3339  0000D2  B4D8               	btfsc	status,2,c
  3340  0000D4  EF6E  F000         	goto	u3761
  3341  0000D8  EF70  F000         	goto	u3760
  3342  0000DC                     u3761:
  3343  0000DC  EF85  F000         	goto	l5270
  3344  0000E0                     u3760:
  3345  0000E0                     
  3346                           ; BSR set to: 0
  3347  0000E0  29B4               	incf	___fladd@bexp& (0+255),w,b
  3348  0000E2  A4D8               	btfss	status,2,c
  3349  0000E4  EF76  F000         	goto	u3771
  3350  0000E8  EF78  F000         	goto	u3770
  3351  0000EC                     u3771:
  3352  0000EC  EF80  F000         	goto	l5266
  3353  0000F0                     u3770:
  3354  0000F0                     
  3355                           ; BSR set to: 0
  3356  0000F0  0E00               	movlw	0
  3357  0000F2  6FAA               	movwf	___fladd@b& (0+255),b
  3358  0000F4  0E00               	movlw	0
  3359  0000F6  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3360  0000F8  0E00               	movlw	0
  3361  0000FA  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3362  0000FC  0E00               	movlw	0
  3363  0000FE  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3364  000100                     l5266:
  3365                           
  3366                           ; BSR set to: 0
  3367  000100  8FAC               	bsf	(___fladd@b+2)& (0+255),7,b
  3368  000102                     
  3369                           ; BSR set to: 0
  3370  000102  0E00               	movlw	0
  3371  000104  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3372  000106  EF8D  F000         	goto	l5272
  3373  00010A                     l5270:
  3374                           
  3375                           ; BSR set to: 0
  3376  00010A  0E00               	movlw	0
  3377  00010C  6FAA               	movwf	___fladd@b& (0+255),b
  3378  00010E  0E00               	movlw	0
  3379  000110  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3380  000112  0E00               	movlw	0
  3381  000114  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3382  000116  0E00               	movlw	0
  3383  000118  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3384  00011A                     l5272:
  3385                           
  3386                           ; BSR set to: 0
  3387  00011A  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3388  00011C  0B80               	andlw	128
  3389  00011E  6FB3               	movwf	___fladd@aexp& (0+255),b
  3390  000120                     
  3391                           ; BSR set to: 0
  3392  000120  51B2               	movf	___fladd@signs& (0+255),w,b
  3393  000122  19B3               	xorwf	___fladd@aexp& (0+255),w,b
  3394  000124  B4D8               	btfsc	status,2,c
  3395  000126  EF97  F000         	goto	u3781
  3396  00012A  EF99  F000         	goto	u3780
  3397  00012E                     u3781:
  3398  00012E  EF9A  F000         	goto	l5278
  3399  000132                     u3780:
  3400  000132                     
  3401                           ; BSR set to: 0
  3402  000132  8DB2               	bsf	___fladd@signs& (0+255),6,b
  3403  000134                     l5278:
  3404                           
  3405                           ; BSR set to: 0
  3406  000134  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3407  000136  25B1               	addwf	(___fladd@a+3)& (0+255),w,b
  3408  000138  6FB3               	movwf	___fladd@aexp& (0+255),b
  3409  00013A                     
  3410                           ; BSR set to: 0
  3411  00013A  AFB0               	btfss	(___fladd@a+2)& (0+255),7,b
  3412  00013C  EFA2  F000         	goto	u3791
  3413  000140  EFA4  F000         	goto	u3790
  3414  000144                     u3791:
  3415  000144  EFA5  F000         	goto	l5284
  3416  000148                     u3790:
  3417  000148                     
  3418                           ; BSR set to: 0
  3419  000148  81B3               	bsf	___fladd@aexp& (0+255),0,b
  3420  00014A                     l5284:
  3421                           
  3422                           ; BSR set to: 0
  3423  00014A  51B3               	movf	___fladd@aexp& (0+255),w,b
  3424  00014C  B4D8               	btfsc	status,2,c
  3425  00014E  EFAB  F000         	goto	u3801
  3426  000152  EFAD  F000         	goto	u3800
  3427  000156                     u3801:
  3428  000156  EFC2  F000         	goto	l5294
  3429  00015A                     u3800:
  3430  00015A                     
  3431                           ; BSR set to: 0
  3432  00015A  29B3               	incf	___fladd@aexp& (0+255),w,b
  3433  00015C  A4D8               	btfss	status,2,c
  3434  00015E  EFB3  F000         	goto	u3811
  3435  000162  EFB5  F000         	goto	u3810
  3436  000166                     u3811:
  3437  000166  EFBD  F000         	goto	l5290
  3438  00016A                     u3810:
  3439  00016A                     
  3440                           ; BSR set to: 0
  3441  00016A  0E00               	movlw	0
  3442  00016C  6FAE               	movwf	___fladd@a& (0+255),b
  3443  00016E  0E00               	movlw	0
  3444  000170  6FAF               	movwf	(___fladd@a+1)& (0+255),b
  3445  000172  0E00               	movlw	0
  3446  000174  6FB0               	movwf	(___fladd@a+2)& (0+255),b
  3447  000176  0E00               	movlw	0
  3448  000178  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3449  00017A                     l5290:
  3450                           
  3451                           ; BSR set to: 0
  3452  00017A  8FB0               	bsf	(___fladd@a+2)& (0+255),7,b
  3453  00017C                     
  3454                           ; BSR set to: 0
  3455  00017C  0E00               	movlw	0
  3456  00017E  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3457  000180  EFCA  F000         	goto	l5296
  3458  000184                     l5294:
  3459                           
  3460                           ; BSR set to: 0
  3461  000184  0E00               	movlw	0
  3462  000186  6FAE               	movwf	___fladd@a& (0+255),b
  3463  000188  0E00               	movlw	0
  3464  00018A  6FAF               	movwf	(___fladd@a+1)& (0+255),b
  3465  00018C  0E00               	movlw	0
  3466  00018E  6FB0               	movwf	(___fladd@a+2)& (0+255),b
  3467  000190  0E00               	movlw	0
  3468  000192  6FB1               	movwf	(___fladd@a+3)& (0+255),b
  3469  000194                     l5296:
  3470                           
  3471                           ; BSR set to: 0
  3472  000194  51B4               	movf	___fladd@bexp& (0+255),w,b
  3473  000196  5DB3               	subwf	___fladd@aexp& (0+255),w,b
  3474  000198  B0D8               	btfsc	status,0,c
  3475  00019A  EFD1  F000         	goto	u3821
  3476  00019E  EFD3  F000         	goto	u3820
  3477  0001A2                     u3821:
  3478  0001A2  EFFA  F000         	goto	l5332
  3479  0001A6                     u3820:
  3480  0001A6                     
  3481                           ; BSR set to: 0
  3482  0001A6  ADB2               	btfss	___fladd@signs& (0+255),6,b
  3483  0001A8  EFD8  F000         	goto	u3831
  3484  0001AC  EFDA  F000         	goto	u3830
  3485  0001B0                     u3831:
  3486  0001B0  EFDC  F000         	goto	l5302
  3487  0001B4                     u3830:
  3488  0001B4                     
  3489                           ; BSR set to: 0
  3490  0001B4  0E80               	movlw	128
  3491  0001B6  1BB2               	xorwf	___fladd@signs& (0+255),f,b
  3492  0001B8                     l5302:
  3493                           
  3494                           ; BSR set to: 0
  3495  0001B8  C0B4  F0B5         	movff	___fladd@bexp,___fladd@grs
  3496  0001BC                     
  3497                           ; BSR set to: 0
  3498  0001BC  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
  3499  0001C0                     
  3500                           ; BSR set to: 0
  3501  0001C0  C0B5  F0B3         	movff	___fladd@grs,___fladd@aexp
  3502  0001C4                     
  3503                           ; BSR set to: 0
  3504  0001C4  C0AA  F0B5         	movff	___fladd@b,___fladd@grs
  3505  0001C8                     
  3506                           ; BSR set to: 0
  3507  0001C8  C0AE  F0AA         	movff	___fladd@a,___fladd@b
  3508  0001CC                     
  3509                           ; BSR set to: 0
  3510  0001CC  C0B5  F0AE         	movff	___fladd@grs,___fladd@a
  3511  0001D0                     
  3512                           ; BSR set to: 0
  3513  0001D0  C0AB  F0B5         	movff	___fladd@b+1,___fladd@grs
  3514  0001D4                     
  3515                           ; BSR set to: 0
  3516  0001D4  C0AF  F0AB         	movff	___fladd@a+1,___fladd@b+1
  3517  0001D8                     
  3518                           ; BSR set to: 0
  3519  0001D8  C0B5  F0AF         	movff	___fladd@grs,___fladd@a+1
  3520  0001DC                     
  3521                           ; BSR set to: 0
  3522  0001DC  C0AC  F0B5         	movff	___fladd@b+2,___fladd@grs
  3523  0001E0                     
  3524                           ; BSR set to: 0
  3525  0001E0  C0B0  F0AC         	movff	___fladd@a+2,___fladd@b+2
  3526  0001E4                     
  3527                           ; BSR set to: 0
  3528  0001E4  C0B5  F0B0         	movff	___fladd@grs,___fladd@a+2
  3529  0001E8                     
  3530                           ; BSR set to: 0
  3531  0001E8  C0AD  F0B5         	movff	___fladd@b+3,___fladd@grs
  3532  0001EC                     
  3533                           ; BSR set to: 0
  3534  0001EC  C0B1  F0AD         	movff	___fladd@a+3,___fladd@b+3
  3535  0001F0                     
  3536                           ; BSR set to: 0
  3537  0001F0  C0B5  F0B1         	movff	___fladd@grs,___fladd@a+3
  3538  0001F4                     l5332:
  3539                           
  3540                           ; BSR set to: 0
  3541  0001F4  0E00               	movlw	0
  3542  0001F6  6FB5               	movwf	___fladd@grs& (0+255),b
  3543  0001F8                     
  3544                           ; BSR set to: 0
  3545  0001F8  51B4               	movf	___fladd@bexp& (0+255),w,b
  3546  0001FA  C0B3  F036         	movff	___fladd@aexp,??___fladd
  3547  0001FE  6A37               	clrf	(??___fladd+1)^0,c
  3548  000200  5E36               	subwf	??___fladd^0,f,c
  3549  000202  0E00               	movlw	0
  3550  000204  5A37               	subwfb	(??___fladd+1)^0,f,c
  3551  000206  BE37               	btfsc	(??___fladd+1)^0,7,c
  3552  000208  EF0F  F001         	goto	u3841
  3553  00020C  5037               	movf	(??___fladd+1)^0,w,c
  3554  00020E  E109               	bnz	u3840
  3555  000210  0E1A               	movlw	26
  3556  000212  5C36               	subwf	??___fladd^0,w,c
  3557  000214  A0D8               	btfss	status,0,c
  3558  000216  EF0F  F001         	goto	u3841
  3559  00021A  EF11  F001         	goto	u3840
  3560  00021E                     u3841:
  3561  00021E  EF48  F001         	goto	l1904
  3562  000222                     u3840:
  3563  000222                     
  3564                           ; BSR set to: 0
  3565  000222  51AA               	movf	___fladd@b& (0+255),w,b
  3566  000224  11AB               	iorwf	(___fladd@b+1)& (0+255),w,b
  3567  000226  11AC               	iorwf	(___fladd@b+2)& (0+255),w,b
  3568  000228  11AD               	iorwf	(___fladd@b+3)& (0+255),w,b
  3569  00022A  A4D8               	btfss	status,2,c
  3570  00022C  EF1A  F001         	goto	u3851
  3571  000230  EF1D  F001         	goto	u3850
  3572  000234                     u3851:
  3573  000234  0E01               	movlw	1
  3574  000236  EF1E  F001         	goto	u3860
  3575  00023A                     u3850:
  3576  00023A  0E00               	movlw	0
  3577  00023C                     u3860:
  3578  00023C  6FB5               	movwf	___fladd@grs& (0+255),b
  3579  00023E                     
  3580                           ; BSR set to: 0
  3581  00023E  0E00               	movlw	0
  3582  000240  6FAA               	movwf	___fladd@b& (0+255),b
  3583  000242  0E00               	movlw	0
  3584  000244  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3585  000246  0E00               	movlw	0
  3586  000248  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3587  00024A  0E00               	movlw	0
  3588  00024C  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3589  00024E                     
  3590                           ; BSR set to: 0
  3591  00024E  C0B3  F0B4         	movff	___fladd@aexp,___fladd@bexp
  3592  000252  EF51  F001         	goto	l1903
  3593  000256                     l1905:
  3594                           
  3595                           ; BSR set to: 0
  3596  000256  A1B5               	btfss	___fladd@grs& (0+255),0,b
  3597  000258  EF30  F001         	goto	u3871
  3598  00025C  EF32  F001         	goto	u3870
  3599  000260                     u3871:
  3600  000260  EF38  F001         	goto	l5344
  3601  000264                     u3870:
  3602  000264                     
  3603                           ; BSR set to: 0
  3604  000264  90D8               	bcf	status,0,c
  3605  000266  31B5               	rrcf	___fladd@grs& (0+255),w,b
  3606  000268  0901               	iorlw	1
  3607  00026A  6FB5               	movwf	___fladd@grs& (0+255),b
  3608  00026C  EF3A  F001         	goto	l5346
  3609  000270                     l5344:
  3610                           
  3611                           ; BSR set to: 0
  3612  000270  90D8               	bcf	status,0,c
  3613  000272  33B5               	rrcf	___fladd@grs& (0+255),f,b
  3614  000274                     l5346:
  3615                           
  3616                           ; BSR set to: 0
  3617  000274  A1AA               	btfss	___fladd@b& (0+255),0,b
  3618  000276  EF3F  F001         	goto	u3881
  3619  00027A  EF41  F001         	goto	u3880
  3620  00027E                     u3881:
  3621  00027E  EF42  F001         	goto	l5350
  3622  000282                     u3880:
  3623  000282                     
  3624                           ; BSR set to: 0
  3625  000282  8FB5               	bsf	___fladd@grs& (0+255),7,b
  3626  000284                     l5350:
  3627                           
  3628                           ; BSR set to: 0
  3629  000284  35AD               	rlcf	(___fladd@b+3)& (0+255),w,b
  3630  000286  33AD               	rrcf	(___fladd@b+3)& (0+255),f,b
  3631  000288  33AC               	rrcf	(___fladd@b+2)& (0+255),f,b
  3632  00028A  33AB               	rrcf	(___fladd@b+1)& (0+255),f,b
  3633  00028C  33AA               	rrcf	___fladd@b& (0+255),f,b
  3634  00028E                     
  3635                           ; BSR set to: 0
  3636  00028E  2BB4               	incf	___fladd@bexp& (0+255),f,b
  3637  000290                     l1904:
  3638                           
  3639                           ; BSR set to: 0
  3640  000290  51B3               	movf	___fladd@aexp& (0+255),w,b
  3641  000292  5DB4               	subwf	___fladd@bexp& (0+255),w,b
  3642  000294  A0D8               	btfss	status,0,c
  3643  000296  EF4F  F001         	goto	u3891
  3644  00029A  EF51  F001         	goto	u3890
  3645  00029E                     u3891:
  3646  00029E  EF2B  F001         	goto	l1905
  3647  0002A2                     u3890:
  3648  0002A2                     l1903:
  3649                           
  3650                           ; BSR set to: 0
  3651  0002A2  BDB2               	btfsc	___fladd@signs& (0+255),6,b
  3652  0002A4  EF56  F001         	goto	u3901
  3653  0002A8  EF58  F001         	goto	u3900
  3654  0002AC                     u3901:
  3655  0002AC  EF98  F001         	goto	l5378
  3656  0002B0                     u3900:
  3657  0002B0                     
  3658                           ; BSR set to: 0
  3659  0002B0  51B4               	movf	___fladd@bexp& (0+255),w,b
  3660  0002B2  A4D8               	btfss	status,2,c
  3661  0002B4  EF5E  F001         	goto	u3911
  3662  0002B8  EF60  F001         	goto	u3910
  3663  0002BC                     u3911:
  3664  0002BC  EF6A  F001         	goto	l5360
  3665  0002C0                     u3910:
  3666  0002C0                     
  3667                           ; BSR set to: 0
  3668  0002C0  0E00               	movlw	0
  3669  0002C2  6FAA               	movwf	?___fladd& (0+255),b
  3670  0002C4  0E00               	movlw	0
  3671  0002C6  6FAB               	movwf	(?___fladd+1)& (0+255),b
  3672  0002C8  0E00               	movlw	0
  3673  0002CA  6FAC               	movwf	(?___fladd+2)& (0+255),b
  3674  0002CC  0E00               	movlw	0
  3675  0002CE  6FAD               	movwf	(?___fladd+3)& (0+255),b
  3676  0002D0  EFB9  F002         	goto	l1912
  3677  0002D4                     l5360:
  3678                           
  3679                           ; BSR set to: 0
  3680  0002D4  51AE               	movf	___fladd@a& (0+255),w,b
  3681  0002D6  27AA               	addwf	___fladd@b& (0+255),f,b
  3682  0002D8  51AF               	movf	(___fladd@a+1)& (0+255),w,b
  3683  0002DA  23AB               	addwfc	(___fladd@b+1)& (0+255),f,b
  3684  0002DC  51B0               	movf	(___fladd@a+2)& (0+255),w,b
  3685  0002DE  23AC               	addwfc	(___fladd@b+2)& (0+255),f,b
  3686  0002E0  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3687  0002E2  23AD               	addwfc	(___fladd@b+3)& (0+255),f,b
  3688  0002E4                     
  3689                           ; BSR set to: 0
  3690  0002E4  A1AD               	btfss	(___fladd@b+3)& (0+255),0,b
  3691  0002E6  EF77  F001         	goto	u3921
  3692  0002EA  EF79  F001         	goto	u3920
  3693  0002EE                     u3921:
  3694  0002EE  EF25  F002         	goto	l5414
  3695  0002F2                     u3920:
  3696  0002F2                     
  3697                           ; BSR set to: 0
  3698  0002F2  A1B5               	btfss	___fladd@grs& (0+255),0,b
  3699  0002F4  EF7E  F001         	goto	u3931
  3700  0002F8  EF80  F001         	goto	u3930
  3701  0002FC                     u3931:
  3702  0002FC  EF86  F001         	goto	l5368
  3703  000300                     u3930:
  3704  000300                     
  3705                           ; BSR set to: 0
  3706  000300  90D8               	bcf	status,0,c
  3707  000302  31B5               	rrcf	___fladd@grs& (0+255),w,b
  3708  000304  0901               	iorlw	1
  3709  000306  6FB5               	movwf	___fladd@grs& (0+255),b
  3710  000308  EF88  F001         	goto	l5370
  3711  00030C                     l5368:
  3712                           
  3713                           ; BSR set to: 0
  3714  00030C  90D8               	bcf	status,0,c
  3715  00030E  33B5               	rrcf	___fladd@grs& (0+255),f,b
  3716  000310                     l5370:
  3717                           
  3718                           ; BSR set to: 0
  3719  000310  A1AA               	btfss	___fladd@b& (0+255),0,b
  3720  000312  EF8D  F001         	goto	u3941
  3721  000316  EF8F  F001         	goto	u3940
  3722  00031A                     u3941:
  3723  00031A  EF90  F001         	goto	l5374
  3724  00031E                     u3940:
  3725  00031E                     
  3726                           ; BSR set to: 0
  3727  00031E  8FB5               	bsf	___fladd@grs& (0+255),7,b
  3728  000320                     l5374:
  3729                           
  3730                           ; BSR set to: 0
  3731  000320  35AD               	rlcf	(___fladd@b+3)& (0+255),w,b
  3732  000322  33AD               	rrcf	(___fladd@b+3)& (0+255),f,b
  3733  000324  33AC               	rrcf	(___fladd@b+2)& (0+255),f,b
  3734  000326  33AB               	rrcf	(___fladd@b+1)& (0+255),f,b
  3735  000328  33AA               	rrcf	___fladd@b& (0+255),f,b
  3736  00032A                     
  3737                           ; BSR set to: 0
  3738  00032A  2BB4               	incf	___fladd@bexp& (0+255),f,b
  3739  00032C  EF25  F002         	goto	l5414
  3740  000330                     l5378:
  3741                           
  3742                           ; BSR set to: 0
  3743  000330  51AE               	movf	___fladd@a& (0+255),w,b
  3744  000332  5DAA               	subwf	___fladd@b& (0+255),w,b
  3745  000334  51AF               	movf	(___fladd@a+1)& (0+255),w,b
  3746  000336  59AB               	subwfb	(___fladd@b+1)& (0+255),w,b
  3747  000338  51B0               	movf	(___fladd@a+2)& (0+255),w,b
  3748  00033A  59AC               	subwfb	(___fladd@b+2)& (0+255),w,b
  3749  00033C  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3750  00033E  0A80               	xorlw	128
  3751  000340  6E36               	movwf	??___fladd^0,c
  3752  000342  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3753  000344  0A80               	xorlw	128
  3754  000346  5836               	subwfb	??___fladd^0,w,c
  3755  000348  B0D8               	btfsc	status,0,c
  3756  00034A  EFA9  F001         	goto	u3951
  3757  00034E  EFAB  F001         	goto	u3950
  3758  000352                     u3951:
  3759  000352  EFD6  F001         	goto	l5388
  3760  000356                     u3950:
  3761  000356                     
  3762                           ; BSR set to: 0
  3763  000356  51AA               	movf	___fladd@b& (0+255),w,b
  3764  000358  5DAE               	subwf	___fladd@a& (0+255),w,b
  3765  00035A  6E36               	movwf	??___fladd^0,c
  3766  00035C  51AB               	movf	(___fladd@b+1)& (0+255),w,b
  3767  00035E  59AF               	subwfb	(___fladd@a+1)& (0+255),w,b
  3768  000360  6E37               	movwf	(??___fladd+1)^0,c
  3769  000362  51AC               	movf	(___fladd@b+2)& (0+255),w,b
  3770  000364  59B0               	subwfb	(___fladd@a+2)& (0+255),w,b
  3771  000366  6E38               	movwf	(??___fladd+2)^0,c
  3772  000368  51AD               	movf	(___fladd@b+3)& (0+255),w,b
  3773  00036A  59B1               	subwfb	(___fladd@a+3)& (0+255),w,b
  3774  00036C  6E39               	movwf	(??___fladd+3)^0,c
  3775  00036E  0EFF               	movlw	255
  3776  000370  2436               	addwf	??___fladd^0,w,c
  3777  000372  6FAA               	movwf	___fladd@b& (0+255),b
  3778  000374  0EFF               	movlw	255
  3779  000376  2037               	addwfc	(??___fladd+1)^0,w,c
  3780  000378  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  3781  00037A  0EFF               	movlw	255
  3782  00037C  2038               	addwfc	(??___fladd+2)^0,w,c
  3783  00037E  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  3784  000380  0EFF               	movlw	255
  3785  000382  2039               	addwfc	(??___fladd+3)^0,w,c
  3786  000384  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  3787  000386  0E80               	movlw	128
  3788  000388  1BB2               	xorwf	___fladd@signs& (0+255),f,b
  3789  00038A                     
  3790                           ; BSR set to: 0
  3791  00038A  6DB5               	negf	___fladd@grs& (0+255),b
  3792  00038C                     
  3793                           ; BSR set to: 0
  3794  00038C  51B5               	movf	___fladd@grs& (0+255),w,b
  3795  00038E  A4D8               	btfss	status,2,c
  3796  000390  EFCC  F001         	goto	u3961
  3797  000394  EFCE  F001         	goto	u3960
  3798  000398                     u3961:
  3799  000398  EFDE  F001         	goto	l1920
  3800  00039C                     u3960:
  3801  00039C                     
  3802                           ; BSR set to: 0
  3803  00039C  0E01               	movlw	1
  3804  00039E  27AA               	addwf	___fladd@b& (0+255),f,b
  3805  0003A0  0E00               	movlw	0
  3806  0003A2  23AB               	addwfc	(___fladd@b+1)& (0+255),f,b
  3807  0003A4  23AC               	addwfc	(___fladd@b+2)& (0+255),f,b
  3808  0003A6  23AD               	addwfc	(___fladd@b+3)& (0+255),f,b
  3809  0003A8  EFDE  F001         	goto	l1920
  3810  0003AC                     l5388:
  3811                           
  3812                           ; BSR set to: 0
  3813  0003AC  51AE               	movf	___fladd@a& (0+255),w,b
  3814  0003AE  5FAA               	subwf	___fladd@b& (0+255),f,b
  3815  0003B0  51AF               	movf	(___fladd@a+1)& (0+255),w,b
  3816  0003B2  5BAB               	subwfb	(___fladd@b+1)& (0+255),f,b
  3817  0003B4  51B0               	movf	(___fladd@a+2)& (0+255),w,b
  3818  0003B6  5BAC               	subwfb	(___fladd@b+2)& (0+255),f,b
  3819  0003B8  51B1               	movf	(___fladd@a+3)& (0+255),w,b
  3820  0003BA  5BAD               	subwfb	(___fladd@b+3)& (0+255),f,b
  3821  0003BC                     l1920:
  3822                           
  3823                           ; BSR set to: 0
  3824  0003BC  51AA               	movf	___fladd@b& (0+255),w,b
  3825  0003BE  11AB               	iorwf	(___fladd@b+1)& (0+255),w,b
  3826  0003C0  11AC               	iorwf	(___fladd@b+2)& (0+255),w,b
  3827  0003C2  11AD               	iorwf	(___fladd@b+3)& (0+255),w,b
  3828  0003C4  A4D8               	btfss	status,2,c
  3829  0003C6  EFE7  F001         	goto	u3971
  3830  0003CA  EFE9  F001         	goto	u3970
  3831  0003CE                     u3971:
  3832  0003CE  EF1E  F002         	goto	l5412
  3833  0003D2                     u3970:
  3834  0003D2                     
  3835                           ; BSR set to: 0
  3836  0003D2  51B5               	movf	___fladd@grs& (0+255),w,b
  3837  0003D4  A4D8               	btfss	status,2,c
  3838  0003D6  EFEF  F001         	goto	u3981
  3839  0003DA  EFF1  F001         	goto	u3980
  3840  0003DE                     u3981:
  3841  0003DE  EF1E  F002         	goto	l5412
  3842  0003E2                     u3980:
  3843  0003E2                     
  3844                           ; BSR set to: 0
  3845  0003E2  0E00               	movlw	0
  3846  0003E4  6FAA               	movwf	?___fladd& (0+255),b
  3847  0003E6  0E00               	movlw	0
  3848  0003E8  6FAB               	movwf	(?___fladd+1)& (0+255),b
  3849  0003EA  0E00               	movlw	0
  3850  0003EC  6FAC               	movwf	(?___fladd+2)& (0+255),b
  3851  0003EE  0E00               	movlw	0
  3852  0003F0  6FAD               	movwf	(?___fladd+3)& (0+255),b
  3853  0003F2  EFB9  F002         	goto	l1912
  3854  0003F6                     l5396:
  3855                           
  3856                           ; BSR set to: 0
  3857  0003F6  90D8               	bcf	status,0,c
  3858  0003F8  37AA               	rlcf	___fladd@b& (0+255),f,b
  3859  0003FA  37AB               	rlcf	(___fladd@b+1)& (0+255),f,b
  3860  0003FC  37AC               	rlcf	(___fladd@b+2)& (0+255),f,b
  3861  0003FE  37AD               	rlcf	(___fladd@b+3)& (0+255),f,b
  3862  000400                     
  3863                           ; BSR set to: 0
  3864  000400  AFB5               	btfss	___fladd@grs& (0+255),7,b
  3865  000402  EF05  F002         	goto	u3991
  3866  000406  EF07  F002         	goto	u3990
  3867  00040A                     u3991:
  3868  00040A  EF08  F002         	goto	l5402
  3869  00040E                     u3990:
  3870  00040E                     
  3871                           ; BSR set to: 0
  3872  00040E  81AA               	bsf	___fladd@b& (0+255),0,b
  3873  000410                     l5402:
  3874                           
  3875                           ; BSR set to: 0
  3876  000410  A1B5               	btfss	___fladd@grs& (0+255),0,b
  3877  000412  EF0D  F002         	goto	u4001
  3878  000416  EF0F  F002         	goto	u4000
  3879  00041A                     u4001:
  3880  00041A  EF13  F002         	goto	l5406
  3881  00041E                     u4000:
  3882  00041E                     
  3883                           ; BSR set to: 0
  3884  00041E  80D8               	bsf	status,0,c
  3885  000420  37B5               	rlcf	___fladd@grs& (0+255),f,b
  3886  000422  EF15  F002         	goto	l5408
  3887  000426                     l5406:
  3888                           
  3889                           ; BSR set to: 0
  3890  000426  90D8               	bcf	status,0,c
  3891  000428  37B5               	rlcf	___fladd@grs& (0+255),f,b
  3892  00042A                     l5408:
  3893                           
  3894                           ; BSR set to: 0
  3895  00042A  51B4               	movf	___fladd@bexp& (0+255),w,b
  3896  00042C  B4D8               	btfsc	status,2,c
  3897  00042E  EF1B  F002         	goto	u4011
  3898  000432  EF1D  F002         	goto	u4010
  3899  000436                     u4011:
  3900  000436  EF1E  F002         	goto	l5412
  3901  00043A                     u4010:
  3902  00043A                     
  3903                           ; BSR set to: 0
  3904  00043A  07B4               	decf	___fladd@bexp& (0+255),f,b
  3905  00043C                     l5412:
  3906                           
  3907                           ; BSR set to: 0
  3908  00043C  AFAC               	btfss	(___fladd@b+2)& (0+255),7,b
  3909  00043E  EF23  F002         	goto	u4021
  3910  000442  EF25  F002         	goto	u4020
  3911  000446                     u4021:
  3912  000446  EFFB  F001         	goto	l5396
  3913  00044A                     u4020:
  3914  00044A                     l5414:
  3915                           
  3916                           ; BSR set to: 0
  3917  00044A  0E00               	movlw	0
  3918  00044C  6FB3               	movwf	___fladd@aexp& (0+255),b
  3919  00044E                     
  3920                           ; BSR set to: 0
  3921  00044E  AFB5               	btfss	___fladd@grs& (0+255),7,b
  3922  000450  EF2C  F002         	goto	u4031
  3923  000454  EF2E  F002         	goto	u4030
  3924  000458                     u4031:
  3925  000458  EF46  F002         	goto	l1929
  3926  00045C                     u4030:
  3927  00045C                     
  3928                           ; BSR set to: 0
  3929  00045C  C0B5  F036         	movff	___fladd@grs,??___fladd
  3930  000460  0E7F               	movlw	127
  3931  000462  1636               	andwf	??___fladd^0,f,c
  3932  000464  B4D8               	btfsc	status,2,c
  3933  000466  EF37  F002         	goto	u4041
  3934  00046A  EF39  F002         	goto	u4040
  3935  00046E                     u4041:
  3936  00046E  EF3D  F002         	goto	l1930
  3937  000472                     u4040:
  3938  000472                     l5420:
  3939                           
  3940                           ; BSR set to: 0
  3941  000472  0E01               	movlw	1
  3942  000474  6FB3               	movwf	___fladd@aexp& (0+255),b
  3943  000476  EF46  F002         	goto	l1929
  3944  00047A                     l1930:
  3945                           
  3946                           ; BSR set to: 0
  3947  00047A  A1AA               	btfss	___fladd@b& (0+255),0,b
  3948  00047C  EF42  F002         	goto	u4051
  3949  000480  EF44  F002         	goto	u4050
  3950  000484                     u4051:
  3951  000484  EF46  F002         	goto	l1929
  3952  000488                     u4050:
  3953  000488  EF39  F002         	goto	l5420
  3954  00048C                     l1929:
  3955                           
  3956                           ; BSR set to: 0
  3957  00048C  51B3               	movf	___fladd@aexp& (0+255),w,b
  3958  00048E  B4D8               	btfsc	status,2,c
  3959  000490  EF4C  F002         	goto	u4061
  3960  000494  EF4E  F002         	goto	u4060
  3961  000498                     u4061:
  3962  000498  EF79  F002         	goto	l5432
  3963  00049C                     u4060:
  3964  00049C                     
  3965                           ; BSR set to: 0
  3966  00049C  0E01               	movlw	1
  3967  00049E  27AA               	addwf	___fladd@b& (0+255),f,b
  3968  0004A0  0E00               	movlw	0
  3969  0004A2  23AB               	addwfc	(___fladd@b+1)& (0+255),f,b
  3970  0004A4  23AC               	addwfc	(___fladd@b+2)& (0+255),f,b
  3971  0004A6  23AD               	addwfc	(___fladd@b+3)& (0+255),f,b
  3972  0004A8                     
  3973                           ; BSR set to: 0
  3974  0004A8  A1AD               	btfss	(___fladd@b+3)& (0+255),0,b
  3975  0004AA  EF59  F002         	goto	u4071
  3976  0004AE  EF5B  F002         	goto	u4070
  3977  0004B2                     u4071:
  3978  0004B2  EF79  F002         	goto	l5432
  3979  0004B6                     u4070:
  3980  0004B6                     
  3981                           ; BSR set to: 0
  3982  0004B6  C0AA  F036         	movff	___fladd@b,??___fladd
  3983  0004BA  C0AB  F037         	movff	___fladd@b+1,??___fladd+1
  3984  0004BE  C0AC  F038         	movff	___fladd@b+2,??___fladd+2
  3985  0004C2  C0AD  F039         	movff	___fladd@b+3,??___fladd+3
  3986  0004C6  3439               	rlcf	(??___fladd+3)^0,w,c
  3987  0004C8  3239               	rrcf	(??___fladd+3)^0,f,c
  3988  0004CA  3238               	rrcf	(??___fladd+2)^0,f,c
  3989  0004CC  3237               	rrcf	(??___fladd+1)^0,f,c
  3990  0004CE  3236               	rrcf	??___fladd^0,f,c
  3991  0004D0  C036  F0AA         	movff	??___fladd,___fladd@b
  3992  0004D4  C037  F0AB         	movff	??___fladd+1,___fladd@b+1
  3993  0004D8  C038  F0AC         	movff	??___fladd+2,___fladd@b+2
  3994  0004DC  C039  F0AD         	movff	??___fladd+3,___fladd@b+3
  3995  0004E0  29B4               	incf	___fladd@bexp& (0+255),w,b
  3996  0004E2  B4D8               	btfsc	status,2,c
  3997  0004E4  EF76  F002         	goto	u4081
  3998  0004E8  EF78  F002         	goto	u4080
  3999  0004EC                     u4081:
  4000  0004EC  EF79  F002         	goto	l5432
  4001  0004F0                     u4080:
  4002  0004F0                     
  4003                           ; BSR set to: 0
  4004  0004F0  2BB4               	incf	___fladd@bexp& (0+255),f,b
  4005  0004F2                     l5432:
  4006                           
  4007                           ; BSR set to: 0
  4008  0004F2  29B4               	incf	___fladd@bexp& (0+255),w,b
  4009  0004F4  B4D8               	btfsc	status,2,c
  4010  0004F6  EF7F  F002         	goto	u4091
  4011  0004FA  EF81  F002         	goto	u4090
  4012  0004FE                     u4091:
  4013  0004FE  EF89  F002         	goto	l5436
  4014  000502                     u4090:
  4015  000502                     
  4016                           ; BSR set to: 0
  4017  000502  51B4               	movf	___fladd@bexp& (0+255),w,b
  4018  000504  A4D8               	btfss	status,2,c
  4019  000506  EF87  F002         	goto	u4101
  4020  00050A  EF89  F002         	goto	u4100
  4021  00050E                     u4101:
  4022  00050E  EF9B  F002         	goto	l5440
  4023  000512                     u4100:
  4024  000512                     l5436:
  4025                           
  4026                           ; BSR set to: 0
  4027  000512  0E00               	movlw	0
  4028  000514  6FAA               	movwf	___fladd@b& (0+255),b
  4029  000516  0E00               	movlw	0
  4030  000518  6FAB               	movwf	(___fladd@b+1)& (0+255),b
  4031  00051A  0E00               	movlw	0
  4032  00051C  6FAC               	movwf	(___fladd@b+2)& (0+255),b
  4033  00051E  0E00               	movlw	0
  4034  000520  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  4035  000522  51B4               	movf	___fladd@bexp& (0+255),w,b
  4036  000524  A4D8               	btfss	status,2,c
  4037  000526  EF97  F002         	goto	u4111
  4038  00052A  EF99  F002         	goto	u4110
  4039  00052E                     u4111:
  4040  00052E  EF9B  F002         	goto	l5440
  4041  000532                     u4110:
  4042  000532                     
  4043                           ; BSR set to: 0
  4044  000532  0E00               	movlw	0
  4045  000534  6FB2               	movwf	___fladd@signs& (0+255),b
  4046  000536                     l5440:
  4047                           
  4048                           ; BSR set to: 0
  4049  000536  A1B4               	btfss	___fladd@bexp& (0+255),0,b
  4050  000538  EFA0  F002         	goto	u4121
  4051  00053C  EFA2  F002         	goto	u4120
  4052  000540                     u4121:
  4053  000540  EFA5  F002         	goto	l5444
  4054  000544                     u4120:
  4055  000544                     
  4056                           ; BSR set to: 0
  4057  000544  8FAC               	bsf	(___fladd@b+2)& (0+255),7,b
  4058  000546  EFA6  F002         	goto	l5446
  4059  00054A                     l5444:
  4060                           
  4061                           ; BSR set to: 0
  4062  00054A  9FAC               	bcf	(___fladd@b+2)& (0+255),7,b
  4063  00054C                     l5446:
  4064                           
  4065                           ; BSR set to: 0
  4066  00054C  90D8               	bcf	status,0,c
  4067  00054E  31B4               	rrcf	___fladd@bexp& (0+255),w,b
  4068  000550  6FAD               	movwf	(___fladd@b+3)& (0+255),b
  4069  000552                     
  4070                           ; BSR set to: 0
  4071  000552  AFB2               	btfss	___fladd@signs& (0+255),7,b
  4072  000554  EFAE  F002         	goto	u4131
  4073  000558  EFB0  F002         	goto	u4130
  4074  00055C                     u4131:
  4075  00055C  EFB1  F002         	goto	l5452
  4076  000560                     u4130:
  4077  000560                     
  4078                           ; BSR set to: 0
  4079  000560  8FAD               	bsf	(___fladd@b+3)& (0+255),7,b
  4080  000562                     l5452:
  4081                           
  4082                           ; BSR set to: 0
  4083  000562  C0AA  F0AA         	movff	___fladd@b,?___fladd
  4084  000566  C0AB  F0AB         	movff	___fladd@b+1,?___fladd+1
  4085  00056A  C0AC  F0AC         	movff	___fladd@b+2,?___fladd+2
  4086  00056E  C0AD  F0AD         	movff	___fladd@b+3,?___fladd+3
  4087  000572                     l1912:
  4088                           
  4089                           ; BSR set to: 0
  4090  000572  0012               	return		;funcret
  4091  000574                     __end_of___fladd:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _calcMotorPow *****************
  4095 ;; Defined at:
  4096 ;;		line 336 in file "main.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  4101 ;;  setSpeedDelt    2   37[BANK0 ] short 
  4102 ;;  addMPow         1   41[BANK0 ] char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        7 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 10
  4119 ;; This function calls:
  4120 ;;		___awdiv
  4121 ;;		___flmul
  4122 ;;		___fltol
  4123 ;;		___xxtofl
  4124 ;;		_actSpeed
  4125 ;;		_setMotor
  4126 ;; This function is called by:
  4127 ;;		_loop
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text12
  4132  00132A                     __ptext12:
  4133                           	callstack 0
  4134  00132A                     _calcMotorPow:
  4135                           	callstack 19
  4136  00132A                     
  4137                           ;main.c: 337:     currentSpeed = actSpeed();
  4138  00132A  EC1F  F00F         	call	_actSpeed	;wreg free
  4139  00132E  C022  F088         	movff	?_actSpeed,_currentSpeed
  4140  001332  C023  F089         	movff	?_actSpeed+1,_currentSpeed+1
  4141  001336                     
  4142                           ;main.c: 339:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  4143  001336  0100               	movlb	0	; () banked
  4144  001338  5188               	movf	_currentSpeed& (0+255),w,b
  4145  00133A  5D8A               	subwf	_setSpeed& (0+255),w,b
  4146  00133C  6FC2               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  4147  00133E  5189               	movf	(_currentSpeed+1)& (0+255),w,b
  4148  001340  598B               	subwfb	(_setSpeed+1)& (0+255),w,b
  4149  001342  6FC3               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  4150  001344                     
  4151                           ; BSR set to: 0
  4152                           ;main.c: 340:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  4153  001344  5186               	movf	_oldSpeed& (0+255),w,b
  4154  001346  5D88               	subwf	_currentSpeed& (0+255),w,b
  4155  001348  6FC4               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  4156  00134A  5187               	movf	(_oldSpeed+1)& (0+255),w,b
  4157  00134C  5989               	subwfb	(_currentSpeed+1)& (0+255),w,b
  4158  00134E  6FC5               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  4159  001350                     
  4160                           ; BSR set to: 0
  4161                           ;main.c: 346:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  4162  001350  0E0A               	movlw	10
  4163  001352  6E2E               	movwf	___flmul@a^0,c
  4164  001354  0ED7               	movlw	215
  4165  001356  6E2F               	movwf	(___flmul@a+1)^0,c
  4166  001358  0EA3               	movlw	163
  4167  00135A  6E30               	movwf	(___flmul@a+2)^0,c
  4168  00135C  0E3C               	movlw	60
  4169  00135E  6E31               	movwf	(___flmul@a+3)^0,c
  4170  001360  0E00               	movlw	0
  4171  001362  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4172  001364  0E02               	movlw	2
  4173  001366  6E16               	movwf	___awdiv@divisor^0,c
  4174  001368  C0C4  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  4175  00136C  C0C5  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  4176  001370  EC13  F00E         	call	___awdiv	;wreg free
  4177  001374  C0C2  F0C0         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  4178  001378  C0C3  F0C1         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  4179  00137C  5014               	movf	?___awdiv^0,w,c
  4180  00137E  0100               	movlb	0	; () banked
  4181  001380  5FC0               	subwf	??_calcMotorPow& (0+255),f,b
  4182  001382  5015               	movf	(?___awdiv+1)^0,w,c
  4183  001384  5BC1               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  4184  001386  C0C0  F01C         	movff	??_calcMotorPow,___xxtofl@val
  4185  00138A  C0C1  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  4186  00138E  0E00               	movlw	0
  4187  001390  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  4188  001392  0EFF               	movlw	-1
  4189  001394  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4190  001396  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4191  001398  0E01               	movlw	1
  4192  00139A  ECE9  F007         	call	___xxtofl
  4193  00139E  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4194  0013A2  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4195  0013A6  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4196  0013AA  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4197  0013AE  ECBA  F002         	call	___flmul	;wreg free
  4198  0013B2  C02A  F0B6         	movff	?___flmul,___fltol@f1
  4199  0013B6  C02B  F0B7         	movff	?___flmul+1,___fltol@f1+1
  4200  0013BA  C02C  F0B8         	movff	?___flmul+2,___fltol@f1+2
  4201  0013BE  C02D  F0B9         	movff	?___flmul+3,___fltol@f1+3
  4202  0013C2  EC56  F00B         	call	___fltol	;wreg free
  4203  0013C6  0100               	movlb	0	; () banked
  4204  0013C8  51B6               	movf	?___fltol& (0+255),w,b
  4205  0013CA  6FC6               	movwf	calcMotorPow@addMPow& (0+255),b
  4206  0013CC                     
  4207                           ; BSR set to: 0
  4208                           ;main.c: 348:     if (addMPow > (5)) {
  4209  0013CC  51C6               	movf	calcMotorPow@addMPow& (0+255),w,b
  4210  0013CE  0A80               	xorlw	128
  4211  0013D0  0F7A               	addlw	-134
  4212  0013D2  A0D8               	btfss	status,0,c
  4213  0013D4  EFEE  F009         	goto	u4501
  4214  0013D8  EFF0  F009         	goto	u4500
  4215  0013DC                     u4501:
  4216  0013DC  EFF4  F009         	goto	l5734
  4217  0013E0                     u4500:
  4218  0013E0                     
  4219                           ; BSR set to: 0
  4220                           ;main.c: 349:         addMPow = (5);
  4221  0013E0  0E05               	movlw	5
  4222  0013E2  6FC6               	movwf	calcMotorPow@addMPow& (0+255),b
  4223                           
  4224                           ;main.c: 350:     } else if (addMPow < -(5)) {
  4225  0013E4  EF00  F00A         	goto	l5738
  4226  0013E8                     l5734:
  4227                           
  4228                           ; BSR set to: 0
  4229  0013E8  51C6               	movf	calcMotorPow@addMPow& (0+255),w,b
  4230  0013EA  0A80               	xorlw	128
  4231  0013EC  0F85               	addlw	133
  4232  0013EE  B0D8               	btfsc	status,0,c
  4233  0013F0  EFFC  F009         	goto	u4511
  4234  0013F4  EFFE  F009         	goto	u4510
  4235  0013F8                     u4511:
  4236  0013F8  EF00  F00A         	goto	l5738
  4237  0013FC                     u4510:
  4238  0013FC                     
  4239                           ; BSR set to: 0
  4240                           ;main.c: 351:         addMPow = -(5);
  4241  0013FC  0EFB               	movlw	251
  4242  0013FE  6FC6               	movwf	calcMotorPow@addMPow& (0+255),b
  4243  001400                     l5738:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;main.c: 354:     actMotorPow += addMPow;
  4247  001400  51C6               	movf	calcMotorPow@addMPow& (0+255),w,b
  4248  001402  2784               	addwf	_actMotorPow& (0+255),f,b
  4249  001404  0E00               	movlw	0
  4250  001406  BFC6               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  4251  001408  0EFF               	movlw	255
  4252  00140A  2385               	addwfc	(_actMotorPow+1)& (0+255),f,b
  4253  00140C                     
  4254                           ; BSR set to: 0
  4255                           ;main.c: 356:     if (actMotorPow > (800)) {
  4256  00140C  BF85               	btfsc	(_actMotorPow+1)& (0+255),7,b
  4257  00140E  EF12  F00A         	goto	u4521
  4258  001412  0E21               	movlw	33
  4259  001414  5D84               	subwf	_actMotorPow& (0+255),w,b
  4260  001416  0E03               	movlw	3
  4261  001418  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4262  00141A  A0D8               	btfss	status,0,c
  4263  00141C  EF12  F00A         	goto	u4521
  4264  001420  EF14  F00A         	goto	u4520
  4265  001424                     u4521:
  4266  001424  EF1A  F00A         	goto	l5744
  4267  001428                     u4520:
  4268  001428                     
  4269                           ; BSR set to: 0
  4270                           ;main.c: 357:         actMotorPow = (800);
  4271  001428  0E03               	movlw	3
  4272  00142A  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4273  00142C  0E20               	movlw	32
  4274  00142E  6F84               	movwf	_actMotorPow& (0+255),b
  4275                           
  4276                           ;main.c: 358:     } else if (actMotorPow < (-400)) {
  4277  001430  EF2C  F00A         	goto	l5748
  4278  001434                     l5744:
  4279                           
  4280                           ; BSR set to: 0
  4281  001434  AF85               	btfss	(_actMotorPow+1)& (0+255),7,b
  4282  001436  EF26  F00A         	goto	u4531
  4283  00143A  0E70               	movlw	112
  4284  00143C  5D84               	subwf	_actMotorPow& (0+255),w,b
  4285  00143E  0EFE               	movlw	254
  4286  001440  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4287  001442  B0D8               	btfsc	status,0,c
  4288  001444  EF26  F00A         	goto	u4531
  4289  001448  EF28  F00A         	goto	u4530
  4290  00144C                     u4531:
  4291  00144C  EF2C  F00A         	goto	l5748
  4292  001450                     u4530:
  4293  001450                     
  4294                           ; BSR set to: 0
  4295                           ;main.c: 359:         actMotorPow = (-400);
  4296  001450  0EFE               	movlw	254
  4297  001452  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4298  001454  0E70               	movlw	112
  4299  001456  6F84               	movwf	_actMotorPow& (0+255),b
  4300  001458                     l5748:
  4301                           
  4302                           ; BSR set to: 0
  4303                           ;main.c: 362:     setMotor(actMotorPow);
  4304  001458  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  4305  00145C  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  4306  001460  ECDA  F00C         	call	_setMotor	;wreg free
  4307  001464                     
  4308                           ;main.c: 364:     oldSpeed = currentSpeed;
  4309  001464  C088  F086         	movff	_currentSpeed,_oldSpeed
  4310  001468  C089  F087         	movff	_currentSpeed+1,_oldSpeed+1
  4311  00146C  0012               	return		;funcret
  4312  00146E                     __end_of_calcMotorPow:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _setMotor *****************
  4316 ;; Defined at:
  4317 ;;		line 367 in file "main.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  motorPower      2   23[COMRAM] short 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  1    wreg      void 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        4 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 9
  4338 ;; This function calls:
  4339 ;;		_PWM7_LoadDutyValue
  4340 ;;		_PWM8_LoadDutyValue
  4341 ;; This function is called by:
  4342 ;;		_loop
  4343 ;;		_startAccell
  4344 ;;		_calcMotorPow
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text13
  4349  0019B4                     __ptext13:
  4350                           	callstack 0
  4351  0019B4                     _setMotor:
  4352                           	callstack 19
  4353  0019B4                     
  4354                           ;main.c: 368:     if (motorPower >= (40)) {
  4355  0019B4  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4356  0019B6  EFE6  F00C         	goto	u2101
  4357  0019BA  5019               	movf	(setMotor@motorPower+1)^0,w,c
  4358  0019BC  E109               	bnz	u2100
  4359  0019BE  0E28               	movlw	40
  4360  0019C0  5C18               	subwf	setMotor@motorPower^0,w,c
  4361  0019C2  A0D8               	btfss	status,0,c
  4362  0019C4  EFE6  F00C         	goto	u2101
  4363  0019C8  EFE8  F00C         	goto	u2100
  4364  0019CC                     u2101:
  4365  0019CC  EF08  F00D         	goto	l3936
  4366  0019D0                     u2100:
  4367  0019D0                     
  4368                           ;main.c: 369:         if (motorPower > (800)) {
  4369  0019D0  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4370  0019D2  EFF4  F00C         	goto	u2111
  4371  0019D6  0E21               	movlw	33
  4372  0019D8  5C18               	subwf	setMotor@motorPower^0,w,c
  4373  0019DA  0E03               	movlw	3
  4374  0019DC  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4375  0019DE  A0D8               	btfss	status,0,c
  4376  0019E0  EFF4  F00C         	goto	u2111
  4377  0019E4  EFF6  F00C         	goto	u2110
  4378  0019E8                     u2111:
  4379  0019E8  EFFA  F00C         	goto	l3932
  4380  0019EC                     u2110:
  4381  0019EC                     
  4382                           ;main.c: 370:             motorPower = (800);
  4383  0019EC  0E03               	movlw	3
  4384  0019EE  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4385  0019F0  0E20               	movlw	32
  4386  0019F2  6E18               	movwf	setMotor@motorPower^0,c
  4387  0019F4                     l3932:
  4388                           
  4389                           ;main.c: 372:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  4390  0019F4  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  4391  0019F8  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  4392  0019FC  ECA3  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4393  001A00                     
  4394                           ;main.c: 373:         PWM8_LoadDutyValue(0);
  4395  001A00  0E00               	movlw	0
  4396  001A02  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4397  001A04  0E00               	movlw	0
  4398  001A06  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4399  001A08  EC89  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4400                           
  4401                           ;main.c: 374:     } else if (motorPower <= -(40)) {
  4402  001A0C  EF4A  F00D         	goto	l1355
  4403  001A10                     l3936:
  4404  001A10  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4405  001A12  EF14  F00D         	goto	u2121
  4406  001A16  0ED9               	movlw	217
  4407  001A18  5C18               	subwf	setMotor@motorPower^0,w,c
  4408  001A1A  0EFF               	movlw	255
  4409  001A1C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4410  001A1E  B0D8               	btfsc	status,0,c
  4411  001A20  EF14  F00D         	goto	u2121
  4412  001A24  EF16  F00D         	goto	u2120
  4413  001A28                     u2121:
  4414  001A28  EF3E  F00D         	goto	l3946
  4415  001A2C                     u2120:
  4416  001A2C                     
  4417                           ;main.c: 375:         if (motorPower < (-400)) {
  4418  001A2C  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4419  001A2E  EF22  F00D         	goto	u2131
  4420  001A32  0E70               	movlw	112
  4421  001A34  5C18               	subwf	setMotor@motorPower^0,w,c
  4422  001A36  0EFE               	movlw	254
  4423  001A38  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4424  001A3A  B0D8               	btfsc	status,0,c
  4425  001A3C  EF22  F00D         	goto	u2131
  4426  001A40  EF24  F00D         	goto	u2130
  4427  001A44                     u2131:
  4428  001A44  EF28  F00D         	goto	l3942
  4429  001A48                     u2130:
  4430  001A48                     
  4431                           ;main.c: 376:             motorPower = (-400);
  4432  001A48  0EFE               	movlw	254
  4433  001A4A  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4434  001A4C  0E70               	movlw	112
  4435  001A4E  6E18               	movwf	setMotor@motorPower^0,c
  4436  001A50                     l3942:
  4437                           
  4438                           ;main.c: 378:         PWM7_LoadDutyValue(0);
  4439  001A50  0E00               	movlw	0
  4440  001A52  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4441  001A54  0E00               	movlw	0
  4442  001A56  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4443  001A58  ECA3  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4444  001A5C                     
  4445                           ;main.c: 379:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  4446  001A5C  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  4447  001A60  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  4448  001A64  1E1A               	comf	??_setMotor^0,f,c
  4449  001A66  1E1B               	comf	(??_setMotor+1)^0,f,c
  4450  001A68  4A1A               	infsnz	??_setMotor^0,f,c
  4451  001A6A  2A1B               	incf	(??_setMotor+1)^0,f,c
  4452  001A6C  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  4453  001A70  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  4454  001A74  EC89  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4455                           
  4456                           ;main.c: 380:     } else {
  4457  001A78  EF4A  F00D         	goto	l1355
  4458  001A7C                     l3946:
  4459                           
  4460                           ;main.c: 382:         PWM7_LoadDutyValue(0);
  4461  001A7C  0E00               	movlw	0
  4462  001A7E  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4463  001A80  0E00               	movlw	0
  4464  001A82  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4465  001A84  ECA3  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4466                           
  4467                           ;main.c: 383:         PWM8_LoadDutyValue(0);
  4468  001A88  0E00               	movlw	0
  4469  001A8A  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4470  001A8C  0E00               	movlw	0
  4471  001A8E  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4472  001A90  EC89  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4473  001A94                     l1355:
  4474  001A94  0012               	return		;funcret
  4475  001A96                     __end_of_setMotor:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _PWM8_LoadDutyValue *****************
  4479 ;; Defined at:
  4480 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;Total ram usage:        4 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 8
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_setMotor
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text14
  4509  002312                     __ptext14:
  4510                           	callstack 0
  4511  002312                     _PWM8_LoadDutyValue:
  4512                           	callstack 19
  4513  002312                     
  4514                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4515  002312  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4516  002316  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  4517  00231A  90D8               	bcf	status,0,c
  4518  00231C  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4519  00231E  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4520  002320  90D8               	bcf	status,0,c
  4521  002322  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4522  002324  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4523  002326  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4524  002328  6E61               	movwf	97,c	;volatile
  4525                           
  4526                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  4527  00232A  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4528  00232E  0E03               	movlw	3
  4529  002330  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  4530  002332  0E06               	movlw	6
  4531  002334  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  4532  002336                     u1975:
  4533  002336  90D8               	bcf	status,0,c
  4534  002338  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  4535  00233A  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  4536  00233C  EF9B  F011         	goto	u1975
  4537  002340  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4538  002342  6E60               	movwf	96,c	;volatile
  4539  002344  0012               	return		;funcret
  4540  002346                     __end_of_PWM8_LoadDutyValue:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _PWM7_LoadDutyValue *****************
  4544 ;; Defined at:
  4545 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;Total ram usage:        4 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 8
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_setMotor
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text15
  4574  002346                     __ptext15:
  4575                           	callstack 0
  4576  002346                     _PWM7_LoadDutyValue:
  4577                           	callstack 19
  4578  002346                     
  4579                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4580  002346  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4581  00234A  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  4582  00234E  90D8               	bcf	status,0,c
  4583  002350  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4584  002352  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4585  002354  90D8               	bcf	status,0,c
  4586  002356  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4587  002358  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4588  00235A  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4589  00235C  6E65               	movwf	101,c	;volatile
  4590                           
  4591                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  4592  00235E  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4593  002362  0E03               	movlw	3
  4594  002364  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  4595  002366  0E06               	movlw	6
  4596  002368  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  4597  00236A                     u1965:
  4598  00236A  90D8               	bcf	status,0,c
  4599  00236C  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  4600  00236E  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  4601  002370  EFB5  F011         	goto	u1965
  4602  002374  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4603  002376  6E64               	movwf	100,c	;volatile
  4604  002378  0012               	return		;funcret
  4605  00237A                     __end_of_PWM7_LoadDutyValue:
  4606                           	callstack 0
  4607                           
  4608 ;; *************** function _actSpeed *****************
  4609 ;; Defined at:
  4610 ;;		line 66 in file "main.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  speed           2   35[COMRAM] short 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  2   33[COMRAM] short 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;Total ram usage:        4 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 9
  4631 ;; This function calls:
  4632 ;;		___aldiv
  4633 ;; This function is called by:
  4634 ;;		_calcMotorPow
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text16
  4639  001E3E                     __ptext16:
  4640                           	callstack 0
  4641  001E3E                     _actSpeed:
  4642                           	callstack 19
  4643  001E3E                     
  4644                           ;main.c: 67:     int16_t speed = 0;
  4645  001E3E  0E00               	movlw	0
  4646  001E40  6E25               	movwf	(actSpeed@speed+1)^0,c
  4647  001E42  0E00               	movlw	0
  4648  001E44  6E24               	movwf	actSpeed@speed^0,c
  4649  001E46                     
  4650                           ;main.c: 68:     if (smtPeriod) {
  4651  001E46  5046               	movf	_smtPeriod^0,w,c	;volatile
  4652  001E48  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  4653  001E4A  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  4654  001E4C  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  4655  001E4E  B4D8               	btfsc	status,2,c
  4656  001E50  EF2C  F00F         	goto	u2181
  4657  001E54  EF2E  F00F         	goto	u2180
  4658  001E58                     u2181:
  4659  001E58  EF64  F00F         	goto	l4014
  4660  001E5C                     u2180:
  4661  001E5C                     
  4662                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
  4663  001E5C  013C               	movlb	60	; () banked
  4664  001E5E  AB60               	btfss	96,5,b	;volatile
  4665  001E60  EF34  F00F         	goto	u2191
  4666  001E64  EF36  F00F         	goto	u2190
  4667  001E68                     u2191:
  4668  001E68  EF4E  F00F         	goto	l4012
  4669  001E6C                     u2190:
  4670  001E6C                     
  4671                           ; BSR set to: 60
  4672                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  4673  001E6C  0E20               	movlw	32
  4674  001E6E  6E14               	movwf	___aldiv@dividend^0,c
  4675  001E70  0EA1               	movlw	161
  4676  001E72  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4677  001E74  0E07               	movlw	7
  4678  001E76  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4679  001E78  0E00               	movlw	0
  4680  001E7A  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4681  001E7C  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4682  001E80  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4683  001E84  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4684  001E88  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4685  001E8C  ECD0  F00A         	call	___aldiv	;wreg free
  4686  001E90  C014  F024         	movff	?___aldiv,actSpeed@speed
  4687  001E94  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4688                           
  4689                           ;main.c: 71:         } else {
  4690  001E98  EF64  F00F         	goto	l4014
  4691  001E9C                     l4012:
  4692                           
  4693                           ; BSR set to: 60
  4694                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  4695  001E9C  0EE0               	movlw	224
  4696  001E9E  6E14               	movwf	___aldiv@dividend^0,c
  4697  001EA0  0E5E               	movlw	94
  4698  001EA2  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4699  001EA4  0EF8               	movlw	248
  4700  001EA6  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4701  001EA8  0EFF               	movlw	255
  4702  001EAA  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4703  001EAC  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4704  001EB0  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4705  001EB4  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4706  001EB8  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4707  001EBC  ECD0  F00A         	call	___aldiv	;wreg free
  4708  001EC0  C014  F024         	movff	?___aldiv,actSpeed@speed
  4709  001EC4  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4710  001EC8                     l4014:
  4711                           
  4712                           ;main.c: 75:     return speed;
  4713  001EC8  C024  F022         	movff	actSpeed@speed,?_actSpeed
  4714  001ECC  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  4715  001ED0  0012               	return		;funcret
  4716  001ED2                     __end_of_actSpeed:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function ___aldiv *****************
  4720 ;; Defined at:
  4721 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  dividend        4   19[COMRAM] long 
  4724 ;;  divisor         4   23[COMRAM] long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  quotient        4   29[COMRAM] long 
  4727 ;;  sign            1   28[COMRAM] unsigned char 
  4728 ;;  counter         1   27[COMRAM] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4   19[COMRAM] long 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4738 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4741 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4742 ;;Total ram usage:       14 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 8
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_actSpeed
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text17
  4753  0015A0                     __ptext17:
  4754                           	callstack 0
  4755  0015A0                     ___aldiv:
  4756                           	callstack 19
  4757  0015A0  0E00               	movlw	0
  4758  0015A2  6E1D               	movwf	___aldiv@sign^0,c
  4759  0015A4  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  4760  0015A6  EFD9  F00A         	goto	u2020
  4761  0015AA  EFD7  F00A         	goto	u2021
  4762  0015AE                     u2021:
  4763  0015AE  EFE3  F00A         	goto	l3848
  4764  0015B2                     u2020:
  4765  0015B2  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  4766  0015B4  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  4767  0015B6  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  4768  0015B8  6C18               	negf	___aldiv@divisor^0,c
  4769  0015BA  0E00               	movlw	0
  4770  0015BC  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  4771  0015BE  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  4772  0015C0  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  4773  0015C2  0E01               	movlw	1
  4774  0015C4  6E1D               	movwf	___aldiv@sign^0,c
  4775  0015C6                     l3848:
  4776  0015C6  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  4777  0015C8  EFEA  F00A         	goto	u2030
  4778  0015CC  EFE8  F00A         	goto	u2031
  4779  0015D0                     u2031:
  4780  0015D0  EFF4  F00A         	goto	l3854
  4781  0015D4                     u2030:
  4782  0015D4  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  4783  0015D6  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  4784  0015D8  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  4785  0015DA  6C14               	negf	___aldiv@dividend^0,c
  4786  0015DC  0E00               	movlw	0
  4787  0015DE  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  4788  0015E0  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  4789  0015E2  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  4790  0015E4  0E01               	movlw	1
  4791  0015E6  1A1D               	xorwf	___aldiv@sign^0,f,c
  4792  0015E8                     l3854:
  4793  0015E8  0E00               	movlw	0
  4794  0015EA  6E1E               	movwf	___aldiv@quotient^0,c
  4795  0015EC  0E00               	movlw	0
  4796  0015EE  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  4797  0015F0  0E00               	movlw	0
  4798  0015F2  6E20               	movwf	(___aldiv@quotient+2)^0,c
  4799  0015F4  0E00               	movlw	0
  4800  0015F6  6E21               	movwf	(___aldiv@quotient+3)^0,c
  4801  0015F8  5018               	movf	___aldiv@divisor^0,w,c
  4802  0015FA  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  4803  0015FC  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  4804  0015FE  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  4805  001600  B4D8               	btfsc	status,2,c
  4806  001602  EF05  F00B         	goto	u2041
  4807  001606  EF07  F00B         	goto	u2040
  4808  00160A                     u2041:
  4809  00160A  EF3D  F00B         	goto	l3876
  4810  00160E                     u2040:
  4811  00160E  0E01               	movlw	1
  4812  001610  6E1C               	movwf	___aldiv@counter^0,c
  4813  001612  EF11  F00B         	goto	l3862
  4814  001616                     l3860:
  4815  001616  90D8               	bcf	status,0,c
  4816  001618  3618               	rlcf	___aldiv@divisor^0,f,c
  4817  00161A  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  4818  00161C  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  4819  00161E  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  4820  001620  2A1C               	incf	___aldiv@counter^0,f,c
  4821  001622                     l3862:
  4822  001622  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  4823  001624  EF16  F00B         	goto	u2051
  4824  001628  EF18  F00B         	goto	u2050
  4825  00162C                     u2051:
  4826  00162C  EF0B  F00B         	goto	l3860
  4827  001630                     u2050:
  4828  001630                     l3864:
  4829  001630  90D8               	bcf	status,0,c
  4830  001632  361E               	rlcf	___aldiv@quotient^0,f,c
  4831  001634  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  4832  001636  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  4833  001638  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  4834  00163A  5018               	movf	___aldiv@divisor^0,w,c
  4835  00163C  5C14               	subwf	___aldiv@dividend^0,w,c
  4836  00163E  5019               	movf	(___aldiv@divisor+1)^0,w,c
  4837  001640  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  4838  001642  501A               	movf	(___aldiv@divisor+2)^0,w,c
  4839  001644  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  4840  001646  501B               	movf	(___aldiv@divisor+3)^0,w,c
  4841  001648  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  4842  00164A  A0D8               	btfss	status,0,c
  4843  00164C  EF2A  F00B         	goto	u2061
  4844  001650  EF2C  F00B         	goto	u2060
  4845  001654                     u2061:
  4846  001654  EF35  F00B         	goto	l3872
  4847  001658                     u2060:
  4848  001658  5018               	movf	___aldiv@divisor^0,w,c
  4849  00165A  5E14               	subwf	___aldiv@dividend^0,f,c
  4850  00165C  5019               	movf	(___aldiv@divisor+1)^0,w,c
  4851  00165E  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  4852  001660  501A               	movf	(___aldiv@divisor+2)^0,w,c
  4853  001662  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  4854  001664  501B               	movf	(___aldiv@divisor+3)^0,w,c
  4855  001666  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  4856  001668  801E               	bsf	___aldiv@quotient^0,0,c
  4857  00166A                     l3872:
  4858  00166A  90D8               	bcf	status,0,c
  4859  00166C  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  4860  00166E  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  4861  001670  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  4862  001672  3218               	rrcf	___aldiv@divisor^0,f,c
  4863  001674  2E1C               	decfsz	___aldiv@counter^0,f,c
  4864  001676  EF18  F00B         	goto	l3864
  4865  00167A                     l3876:
  4866  00167A  501D               	movf	___aldiv@sign^0,w,c
  4867  00167C  B4D8               	btfsc	status,2,c
  4868  00167E  EF43  F00B         	goto	u2071
  4869  001682  EF45  F00B         	goto	u2070
  4870  001686                     u2071:
  4871  001686  EF4D  F00B         	goto	l3880
  4872  00168A                     u2070:
  4873  00168A  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  4874  00168C  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  4875  00168E  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  4876  001690  6C1E               	negf	___aldiv@quotient^0,c
  4877  001692  0E00               	movlw	0
  4878  001694  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  4879  001696  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  4880  001698  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  4881  00169A                     l3880:
  4882  00169A  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  4883  00169E  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  4884  0016A2  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  4885  0016A6  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  4886  0016AA  0012               	return		;funcret
  4887  0016AC                     __end_of___aldiv:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function ___xxtofl *****************
  4891 ;; Defined at:
  4892 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  sign            1    wreg     unsigned char 
  4895 ;;  val             4   27[COMRAM] long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  sign            1   35[COMRAM] unsigned char 
  4898 ;;  arg             4   37[COMRAM] unsigned long 
  4899 ;;  exp             1   36[COMRAM] unsigned char 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  4   27[COMRAM] unsigned char 
  4902 ;; Registers used:
  4903 ;;		wreg, status,2, status,0
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;Total ram usage:       14 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 8
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_startAccell
  4920 ;;		_calcSteering
  4921 ;;		_calcSpeed
  4922 ;;		_calcMotorPow
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926                           	psect	text18
  4927  000FD2                     __ptext18:
  4928                           	callstack 0
  4929  000FD2                     ___xxtofl:
  4930                           	callstack 20
  4931                           
  4932                           ;incstack = 0
  4933                           ;___xxtofl@sign stored from wreg
  4934  000FD2  6E24               	movwf	___xxtofl@sign^0,c
  4935  000FD4  5024               	movf	___xxtofl@sign^0,w,c
  4936  000FD6  B4D8               	btfsc	status,2,c
  4937  000FD8  EFF0  F007         	goto	u2901
  4938  000FDC  EFF2  F007         	goto	u2900
  4939  000FE0                     u2901:
  4940  000FE0  EF14  F008         	goto	l2030
  4941  000FE4                     u2900:
  4942  000FE4  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  4943  000FE6  EFF9  F007         	goto	u2910
  4944  000FEA  EFF7  F007         	goto	u2911
  4945  000FEE                     u2911:
  4946  000FEE  EF14  F008         	goto	l2030
  4947  000FF2                     u2910:
  4948  000FF2  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  4949  000FF6  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  4950  000FFA  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  4951  000FFE  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  4952  001002  1E20               	comf	??___xxtofl^0,f,c
  4953  001004  1E21               	comf	(??___xxtofl+1)^0,f,c
  4954  001006  1E22               	comf	(??___xxtofl+2)^0,f,c
  4955  001008  1E23               	comf	(??___xxtofl+3)^0,f,c
  4956  00100A  2A20               	incf	??___xxtofl^0,f,c
  4957  00100C  0E00               	movlw	0
  4958  00100E  2221               	addwfc	(??___xxtofl+1)^0,f,c
  4959  001010  2222               	addwfc	(??___xxtofl+2)^0,f,c
  4960  001012  2223               	addwfc	(??___xxtofl+3)^0,f,c
  4961  001014  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  4962  001018  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  4963  00101C  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  4964  001020  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  4965  001024  EF1C  F008         	goto	l4422
  4966  001028                     l2030:
  4967  001028  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  4968  00102C  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4969  001030  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4970  001034  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4971  001038                     l4422:
  4972  001038  501C               	movf	___xxtofl@val^0,w,c
  4973  00103A  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  4974  00103C  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  4975  00103E  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  4976  001040  A4D8               	btfss	status,2,c
  4977  001042  EF25  F008         	goto	u2921
  4978  001046  EF27  F008         	goto	u2920
  4979  00104A                     u2921:
  4980  00104A  EF31  F008         	goto	l4428
  4981  00104E                     u2920:
  4982  00104E  0E00               	movlw	0
  4983  001050  6E1C               	movwf	?___xxtofl^0,c
  4984  001052  0E00               	movlw	0
  4985  001054  6E1D               	movwf	(?___xxtofl+1)^0,c
  4986  001056  0E00               	movlw	0
  4987  001058  6E1E               	movwf	(?___xxtofl+2)^0,c
  4988  00105A  0E00               	movlw	0
  4989  00105C  6E1F               	movwf	(?___xxtofl+3)^0,c
  4990  00105E  EFC2  F008         	goto	l2033
  4991  001062                     l4428:
  4992  001062  0E96               	movlw	150
  4993  001064  6E25               	movwf	___xxtofl@exp^0,c
  4994  001066  EF3B  F008         	goto	l4432
  4995  00106A                     l4430:
  4996  00106A  2A25               	incf	___xxtofl@exp^0,f,c
  4997  00106C  90D8               	bcf	status,0,c
  4998  00106E  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  4999  001070  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5000  001072  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5001  001074  3226               	rrcf	___xxtofl@arg^0,f,c
  5002  001076                     l4432:
  5003  001076  0E00               	movlw	0
  5004  001078  1426               	andwf	___xxtofl@arg^0,w,c
  5005  00107A  6E20               	movwf	??___xxtofl^0,c
  5006  00107C  0E00               	movlw	0
  5007  00107E  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5008  001080  6E21               	movwf	(??___xxtofl+1)^0,c
  5009  001082  0E00               	movlw	0
  5010  001084  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5011  001086  6E22               	movwf	(??___xxtofl+2)^0,c
  5012  001088  0EFE               	movlw	254
  5013  00108A  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5014  00108C  6E23               	movwf	(??___xxtofl+3)^0,c
  5015  00108E  5020               	movf	??___xxtofl^0,w,c
  5016  001090  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5017  001092  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5018  001094  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5019  001096  A4D8               	btfss	status,2,c
  5020  001098  EF50  F008         	goto	u2931
  5021  00109C  EF52  F008         	goto	u2930
  5022  0010A0                     u2931:
  5023  0010A0  EF35  F008         	goto	l4430
  5024  0010A4                     u2930:
  5025  0010A4  EF60  F008         	goto	l2037
  5026  0010A8                     l4434:
  5027  0010A8  2A25               	incf	___xxtofl@exp^0,f,c
  5028  0010AA  0E01               	movlw	1
  5029  0010AC  2626               	addwf	___xxtofl@arg^0,f,c
  5030  0010AE  0E00               	movlw	0
  5031  0010B0  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  5032  0010B2  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  5033  0010B4  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  5034  0010B6  90D8               	bcf	status,0,c
  5035  0010B8  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5036  0010BA  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5037  0010BC  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5038  0010BE  3226               	rrcf	___xxtofl@arg^0,f,c
  5039  0010C0                     l2037:
  5040  0010C0  0E00               	movlw	0
  5041  0010C2  1426               	andwf	___xxtofl@arg^0,w,c
  5042  0010C4  6E20               	movwf	??___xxtofl^0,c
  5043  0010C6  0E00               	movlw	0
  5044  0010C8  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5045  0010CA  6E21               	movwf	(??___xxtofl+1)^0,c
  5046  0010CC  0E00               	movlw	0
  5047  0010CE  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5048  0010D0  6E22               	movwf	(??___xxtofl+2)^0,c
  5049  0010D2  0EFF               	movlw	255
  5050  0010D4  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5051  0010D6  6E23               	movwf	(??___xxtofl+3)^0,c
  5052  0010D8  5020               	movf	??___xxtofl^0,w,c
  5053  0010DA  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5054  0010DC  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5055  0010DE  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5056  0010E0  A4D8               	btfss	status,2,c
  5057  0010E2  EF75  F008         	goto	u2941
  5058  0010E6  EF77  F008         	goto	u2940
  5059  0010EA                     u2941:
  5060  0010EA  EF54  F008         	goto	l4434
  5061  0010EE                     u2940:
  5062  0010EE  EF7F  F008         	goto	l4442
  5063  0010F2                     l4440:
  5064  0010F2  0625               	decf	___xxtofl@exp^0,f,c
  5065  0010F4  90D8               	bcf	status,0,c
  5066  0010F6  3626               	rlcf	___xxtofl@arg^0,f,c
  5067  0010F8  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  5068  0010FA  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  5069  0010FC  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  5070  0010FE                     l4442:
  5071  0010FE  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  5072  001100  EF84  F008         	goto	u2951
  5073  001104  EF86  F008         	goto	u2950
  5074  001108                     u2951:
  5075  001108  EF8E  F008         	goto	l2044
  5076  00110C                     u2950:
  5077  00110C  0E02               	movlw	2
  5078  00110E  6025               	cpfslt	___xxtofl@exp^0,c
  5079  001110  EF8C  F008         	goto	u2961
  5080  001114  EF8E  F008         	goto	u2960
  5081  001118                     u2961:
  5082  001118  EF79  F008         	goto	l4440
  5083  00111C                     u2960:
  5084  00111C                     l2044:
  5085  00111C  B025               	btfsc	___xxtofl@exp^0,0,c
  5086  00111E  EF93  F008         	goto	u2971
  5087  001122  EF95  F008         	goto	u2970
  5088  001126                     u2971:
  5089  001126  EF96  F008         	goto	l4448
  5090  00112A                     u2970:
  5091  00112A  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  5092  00112C                     l4448:
  5093  00112C  90D8               	bcf	status,0,c
  5094  00112E  3225               	rrcf	___xxtofl@exp^0,f,c
  5095  001130  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  5096  001134  6A21               	clrf	(??___xxtofl+1)^0,c
  5097  001136  6A22               	clrf	(??___xxtofl+2)^0,c
  5098  001138  6A23               	clrf	(??___xxtofl+3)^0,c
  5099  00113A  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  5100  00113E  6A22               	clrf	(??___xxtofl+2)^0,c
  5101  001140  6A21               	clrf	(??___xxtofl+1)^0,c
  5102  001142  6A20               	clrf	??___xxtofl^0,c
  5103  001144  5020               	movf	??___xxtofl^0,w,c
  5104  001146  1226               	iorwf	___xxtofl@arg^0,f,c
  5105  001148  5021               	movf	(??___xxtofl+1)^0,w,c
  5106  00114A  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  5107  00114C  5022               	movf	(??___xxtofl+2)^0,w,c
  5108  00114E  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  5109  001150  5023               	movf	(??___xxtofl+3)^0,w,c
  5110  001152  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  5111  001154  5024               	movf	___xxtofl@sign^0,w,c
  5112  001156  B4D8               	btfsc	status,2,c
  5113  001158  EFB0  F008         	goto	u2981
  5114  00115C  EFB2  F008         	goto	u2980
  5115  001160                     u2981:
  5116  001160  EFBA  F008         	goto	l4458
  5117  001164                     u2980:
  5118  001164  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5119  001166  EFB9  F008         	goto	u2990
  5120  00116A  EFB7  F008         	goto	u2991
  5121  00116E                     u2991:
  5122  00116E  EFBA  F008         	goto	l4458
  5123  001172                     u2990:
  5124  001172  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  5125  001174                     l4458:
  5126  001174  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  5127  001178  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5128  00117C  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5129  001180  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5130  001184                     l2033:
  5131  001184  0012               	return		;funcret
  5132  001186                     __end_of___xxtofl:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function ___fltol *****************
  5136 ;; Defined at:
  5137 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  f1              4   25[BANK0 ] unsigned char 
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;  exp1            1   34[BANK0 ] unsigned char 
  5142 ;;  sign1           1   33[BANK0 ] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  4   25[BANK0 ] long 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;Total ram usage:       10 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 8
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_startAccell
  5163 ;;		_calcSteering
  5164 ;;		_calcSpeed
  5165 ;;		_calcMotorPow
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	text19
  5170  0016AC                     __ptext19:
  5171                           	callstack 0
  5172  0016AC                     ___fltol:
  5173                           	callstack 20
  5174  0016AC  0100               	movlb	0	; () banked
  5175  0016AE  35B8               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5176  0016B0  35B9               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5177  0016B2  6FBF               	movwf	___fltol@exp1& (0+255),b
  5178  0016B4  51BF               	movf	___fltol@exp1& (0+255),w,b
  5179  0016B6  A4D8               	btfss	status,2,c
  5180  0016B8  EF60  F00B         	goto	u4331
  5181  0016BC  EF62  F00B         	goto	u4330
  5182  0016C0                     u4331:
  5183  0016C0  EF6C  F00B         	goto	l5592
  5184  0016C4                     u4330:
  5185  0016C4                     l5588:
  5186                           
  5187                           ; BSR set to: 0
  5188  0016C4  0E00               	movlw	0
  5189  0016C6  6FB6               	movwf	?___fltol& (0+255),b
  5190  0016C8  0E00               	movlw	0
  5191  0016CA  6FB7               	movwf	(?___fltol+1)& (0+255),b
  5192  0016CC  0E00               	movlw	0
  5193  0016CE  6FB8               	movwf	(?___fltol+2)& (0+255),b
  5194  0016D0  0E00               	movlw	0
  5195  0016D2  6FB9               	movwf	(?___fltol+3)& (0+255),b
  5196  0016D4  EFD9  F00B         	goto	l1672
  5197  0016D8                     l5592:
  5198                           
  5199                           ; BSR set to: 0
  5200  0016D8  C0B6  F0BA         	movff	___fltol@f1,??___fltol
  5201  0016DC  C0B7  F0BB         	movff	___fltol@f1+1,??___fltol+1
  5202  0016E0  C0B8  F0BC         	movff	___fltol@f1+2,??___fltol+2
  5203  0016E4  C0B9  F0BD         	movff	___fltol@f1+3,??___fltol+3
  5204  0016E8  0E20               	movlw	32
  5205  0016EA  EF7C  F00B         	goto	u4340
  5206  0016EE                     u4345:
  5207  0016EE  90D8               	bcf	status,0,c
  5208  0016F0  33BD               	rrcf	(??___fltol+3)& (0+255),f,b
  5209  0016F2  33BC               	rrcf	(??___fltol+2)& (0+255),f,b
  5210  0016F4  33BB               	rrcf	(??___fltol+1)& (0+255),f,b
  5211  0016F6  33BA               	rrcf	??___fltol& (0+255),f,b
  5212  0016F8                     u4340:
  5213  0016F8  2EE8               	decfsz	wreg,f,c
  5214  0016FA  EF77  F00B         	goto	u4345
  5215  0016FE  51BA               	movf	??___fltol& (0+255),w,b
  5216  001700  6FBE               	movwf	___fltol@sign1& (0+255),b
  5217  001702                     
  5218                           ; BSR set to: 0
  5219  001702  8FB8               	bsf	(___fltol@f1+2)& (0+255),7,b
  5220  001704                     
  5221                           ; BSR set to: 0
  5222  001704  0EFF               	movlw	255
  5223  001706  17B6               	andwf	___fltol@f1& (0+255),f,b
  5224  001708  0EFF               	movlw	255
  5225  00170A  17B7               	andwf	(___fltol@f1+1)& (0+255),f,b
  5226  00170C  0EFF               	movlw	255
  5227  00170E  17B8               	andwf	(___fltol@f1+2)& (0+255),f,b
  5228  001710  0E00               	movlw	0
  5229  001712  17B9               	andwf	(___fltol@f1+3)& (0+255),f,b
  5230  001714                     
  5231                           ; BSR set to: 0
  5232  001714  0E96               	movlw	150
  5233  001716  5FBF               	subwf	___fltol@exp1& (0+255),f,b
  5234  001718                     
  5235                           ; BSR set to: 0
  5236  001718  BFBF               	btfsc	___fltol@exp1& (0+255),7,b
  5237  00171A  EF93  F00B         	goto	u4350
  5238  00171E  EF91  F00B         	goto	u4351
  5239  001722                     u4351:
  5240  001722  EFA9  F00B         	goto	l5612
  5241  001726                     u4350:
  5242  001726                     
  5243                           ; BSR set to: 0
  5244  001726  51BF               	movf	___fltol@exp1& (0+255),w,b
  5245  001728  0A80               	xorlw	128
  5246  00172A  0F97               	addlw	151
  5247  00172C  B0D8               	btfsc	status,0,c
  5248  00172E  EF9B  F00B         	goto	u4361
  5249  001732  EF9D  F00B         	goto	u4360
  5250  001736                     u4361:
  5251  001736  EF9F  F00B         	goto	l5608
  5252  00173A                     u4360:
  5253  00173A  EF62  F00B         	goto	l5588
  5254  00173E                     l5608:
  5255                           
  5256                           ; BSR set to: 0
  5257  00173E  90D8               	bcf	status,0,c
  5258  001740  33B9               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5259  001742  33B8               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5260  001744  33B7               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5261  001746  33B6               	rrcf	___fltol@f1& (0+255),f,b
  5262  001748                     
  5263                           ; BSR set to: 0
  5264  001748  3FBF               	incfsz	___fltol@exp1& (0+255),f,b
  5265  00174A  EF9F  F00B         	goto	l5608
  5266  00174E  EFC1  F00B         	goto	l5622
  5267  001752                     l5612:
  5268                           
  5269                           ; BSR set to: 0
  5270  001752  0E1F               	movlw	31
  5271  001754  65BF               	cpfsgt	___fltol@exp1& (0+255),b
  5272  001756  EFAF  F00B         	goto	u4371
  5273  00175A  EFB1  F00B         	goto	u4370
  5274  00175E                     u4371:
  5275  00175E  EFB9  F00B         	goto	l5620
  5276  001762                     u4370:
  5277  001762  EF62  F00B         	goto	l5588
  5278  001766                     l5618:
  5279                           
  5280                           ; BSR set to: 0
  5281  001766  90D8               	bcf	status,0,c
  5282  001768  37B6               	rlcf	___fltol@f1& (0+255),f,b
  5283  00176A  37B7               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5284  00176C  37B8               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5285  00176E  37B9               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5286  001770  07BF               	decf	___fltol@exp1& (0+255),f,b
  5287  001772                     l5620:
  5288                           
  5289                           ; BSR set to: 0
  5290  001772  51BF               	movf	___fltol@exp1& (0+255),w,b
  5291  001774  A4D8               	btfss	status,2,c
  5292  001776  EFBF  F00B         	goto	u4381
  5293  00177A  EFC1  F00B         	goto	u4380
  5294  00177E                     u4381:
  5295  00177E  EFB3  F00B         	goto	l5618
  5296  001782                     u4380:
  5297  001782                     l5622:
  5298                           
  5299                           ; BSR set to: 0
  5300  001782  51BE               	movf	___fltol@sign1& (0+255),w,b
  5301  001784  B4D8               	btfsc	status,2,c
  5302  001786  EFC7  F00B         	goto	u4391
  5303  00178A  EFC9  F00B         	goto	u4390
  5304  00178E                     u4391:
  5305  00178E  EFD1  F00B         	goto	l5626
  5306  001792                     u4390:
  5307  001792                     
  5308                           ; BSR set to: 0
  5309  001792  1FB9               	comf	(___fltol@f1+3)& (0+255),f,b
  5310  001794  1FB8               	comf	(___fltol@f1+2)& (0+255),f,b
  5311  001796  1FB7               	comf	(___fltol@f1+1)& (0+255),f,b
  5312  001798  6DB6               	negf	___fltol@f1& (0+255),b
  5313  00179A  0E00               	movlw	0
  5314  00179C  23B7               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5315  00179E  23B8               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5316  0017A0  23B9               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5317  0017A2                     l5626:
  5318                           
  5319                           ; BSR set to: 0
  5320  0017A2  C0B6  F0B6         	movff	___fltol@f1,?___fltol
  5321  0017A6  C0B7  F0B7         	movff	___fltol@f1+1,?___fltol+1
  5322  0017AA  C0B8  F0B8         	movff	___fltol@f1+2,?___fltol+2
  5323  0017AE  C0B9  F0B9         	movff	___fltol@f1+3,?___fltol+3
  5324  0017B2                     l1672:
  5325                           
  5326                           ; BSR set to: 0
  5327  0017B2  0012               	return		;funcret
  5328  0017B4                     __end_of___fltol:
  5329                           	callstack 0
  5330                           
  5331 ;; *************** function ___flmul *****************
  5332 ;; Defined at:
  5333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  b               4   41[COMRAM] long 
  5336 ;;  a               4   45[COMRAM] long 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  prod            4    7[BANK0 ] struct .
  5339 ;;  grs             4    2[BANK0 ] unsigned long 
  5340 ;;  temp            2   11[BANK0 ] struct .
  5341 ;;  bexp            1    6[BANK0 ] unsigned char 
  5342 ;;  aexp            1    1[BANK0 ] unsigned char 
  5343 ;;  sign            1    0[BANK0 ] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  4   41[COMRAM] unsigned char 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, prodl, prodh
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;Total ram usage:       25 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 8
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_startAccell
  5364 ;;		_calcSteering
  5365 ;;		_calcSpeed
  5366 ;;		_calcMotorPow
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text20
  5371  000574                     __ptext20:
  5372                           	callstack 0
  5373  000574                     ___flmul:
  5374                           	callstack 20
  5375  000574  502D               	movf	(___flmul@b+3)^0,w,c
  5376  000576  0B80               	andlw	128
  5377  000578  0100               	movlb	0	; () banked
  5378  00057A  6F9D               	movwf	___flmul@sign& (0+255),b
  5379  00057C  502D               	movf	(___flmul@b+3)^0,w,c
  5380  00057E  242D               	addwf	(___flmul@b+3)^0,w,c
  5381  000580  6FA3               	movwf	___flmul@bexp& (0+255),b
  5382  000582                     
  5383                           ; BSR set to: 0
  5384  000582  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5385  000584  EFC6  F002         	goto	u4141
  5386  000588  EFC8  F002         	goto	u4140
  5387  00058C                     u4141:
  5388  00058C  EFC9  F002         	goto	l5462
  5389  000590                     u4140:
  5390  000590                     
  5391                           ; BSR set to: 0
  5392  000590  81A3               	bsf	___flmul@bexp& (0+255),0,b
  5393  000592                     l5462:
  5394                           
  5395                           ; BSR set to: 0
  5396  000592  51A3               	movf	___flmul@bexp& (0+255),w,b
  5397  000594  B4D8               	btfsc	status,2,c
  5398  000596  EFCF  F002         	goto	u4151
  5399  00059A  EFD1  F002         	goto	u4150
  5400  00059E                     u4151:
  5401  00059E  EFE4  F002         	goto	l5470
  5402  0005A2                     u4150:
  5403  0005A2                     
  5404                           ; BSR set to: 0
  5405  0005A2  29A3               	incf	___flmul@bexp& (0+255),w,b
  5406  0005A4  A4D8               	btfss	status,2,c
  5407  0005A6  EFD7  F002         	goto	u4161
  5408  0005AA  EFD9  F002         	goto	u4160
  5409  0005AE                     u4161:
  5410  0005AE  EFE1  F002         	goto	l5468
  5411  0005B2                     u4160:
  5412  0005B2                     
  5413                           ; BSR set to: 0
  5414  0005B2  0E00               	movlw	0
  5415  0005B4  6E2A               	movwf	___flmul@b^0,c
  5416  0005B6  0E00               	movlw	0
  5417  0005B8  6E2B               	movwf	(___flmul@b+1)^0,c
  5418  0005BA  0E00               	movlw	0
  5419  0005BC  6E2C               	movwf	(___flmul@b+2)^0,c
  5420  0005BE  0E00               	movlw	0
  5421  0005C0  6E2D               	movwf	(___flmul@b+3)^0,c
  5422  0005C2                     l5468:
  5423                           
  5424                           ; BSR set to: 0
  5425  0005C2  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5426  0005C4  EFEC  F002         	goto	l5472
  5427  0005C8                     l5470:
  5428                           
  5429                           ; BSR set to: 0
  5430  0005C8  0E00               	movlw	0
  5431  0005CA  6E2A               	movwf	___flmul@b^0,c
  5432  0005CC  0E00               	movlw	0
  5433  0005CE  6E2B               	movwf	(___flmul@b+1)^0,c
  5434  0005D0  0E00               	movlw	0
  5435  0005D2  6E2C               	movwf	(___flmul@b+2)^0,c
  5436  0005D4  0E00               	movlw	0
  5437  0005D6  6E2D               	movwf	(___flmul@b+3)^0,c
  5438  0005D8                     l5472:
  5439                           
  5440                           ; BSR set to: 0
  5441  0005D8  5031               	movf	(___flmul@a+3)^0,w,c
  5442  0005DA  0B80               	andlw	128
  5443  0005DC  1B9D               	xorwf	___flmul@sign& (0+255),f,b
  5444  0005DE                     
  5445                           ; BSR set to: 0
  5446  0005DE  5031               	movf	(___flmul@a+3)^0,w,c
  5447  0005E0  2431               	addwf	(___flmul@a+3)^0,w,c
  5448  0005E2  6F9E               	movwf	___flmul@aexp& (0+255),b
  5449  0005E4                     
  5450                           ; BSR set to: 0
  5451  0005E4  AE30               	btfss	(___flmul@a+2)^0,7,c
  5452  0005E6  EFF7  F002         	goto	u4171
  5453  0005EA  EFF9  F002         	goto	u4170
  5454  0005EE                     u4171:
  5455  0005EE  EFFA  F002         	goto	l5480
  5456  0005F2                     u4170:
  5457  0005F2                     
  5458                           ; BSR set to: 0
  5459  0005F2  819E               	bsf	___flmul@aexp& (0+255),0,b
  5460  0005F4                     l5480:
  5461                           
  5462                           ; BSR set to: 0
  5463  0005F4  519E               	movf	___flmul@aexp& (0+255),w,b
  5464  0005F6  B4D8               	btfsc	status,2,c
  5465  0005F8  EF00  F003         	goto	u4181
  5466  0005FC  EF02  F003         	goto	u4180
  5467  000600                     u4181:
  5468  000600  EF15  F003         	goto	l5488
  5469  000604                     u4180:
  5470  000604                     
  5471                           ; BSR set to: 0
  5472  000604  299E               	incf	___flmul@aexp& (0+255),w,b
  5473  000606  A4D8               	btfss	status,2,c
  5474  000608  EF08  F003         	goto	u4191
  5475  00060C  EF0A  F003         	goto	u4190
  5476  000610                     u4191:
  5477  000610  EF12  F003         	goto	l5486
  5478  000614                     u4190:
  5479  000614                     
  5480                           ; BSR set to: 0
  5481  000614  0E00               	movlw	0
  5482  000616  6E2E               	movwf	___flmul@a^0,c
  5483  000618  0E00               	movlw	0
  5484  00061A  6E2F               	movwf	(___flmul@a+1)^0,c
  5485  00061C  0E00               	movlw	0
  5486  00061E  6E30               	movwf	(___flmul@a+2)^0,c
  5487  000620  0E00               	movlw	0
  5488  000622  6E31               	movwf	(___flmul@a+3)^0,c
  5489  000624                     l5486:
  5490                           
  5491                           ; BSR set to: 0
  5492  000624  8E30               	bsf	(___flmul@a+2)^0,7,c
  5493  000626  EF1D  F003         	goto	l1989
  5494  00062A                     l5488:
  5495                           
  5496                           ; BSR set to: 0
  5497  00062A  0E00               	movlw	0
  5498  00062C  6E2E               	movwf	___flmul@a^0,c
  5499  00062E  0E00               	movlw	0
  5500  000630  6E2F               	movwf	(___flmul@a+1)^0,c
  5501  000632  0E00               	movlw	0
  5502  000634  6E30               	movwf	(___flmul@a+2)^0,c
  5503  000636  0E00               	movlw	0
  5504  000638  6E31               	movwf	(___flmul@a+3)^0,c
  5505  00063A                     l1989:
  5506                           
  5507                           ; BSR set to: 0
  5508  00063A  519E               	movf	___flmul@aexp& (0+255),w,b
  5509  00063C  B4D8               	btfsc	status,2,c
  5510  00063E  EF23  F003         	goto	u4201
  5511  000642  EF25  F003         	goto	u4200
  5512  000646                     u4201:
  5513  000646  EF2D  F003         	goto	l5492
  5514  00064A                     u4200:
  5515  00064A                     
  5516                           ; BSR set to: 0
  5517  00064A  51A3               	movf	___flmul@bexp& (0+255),w,b
  5518  00064C  A4D8               	btfss	status,2,c
  5519  00064E  EF2B  F003         	goto	u4211
  5520  000652  EF2D  F003         	goto	u4210
  5521  000656                     u4211:
  5522  000656  EF37  F003         	goto	l5496
  5523  00065A                     u4210:
  5524  00065A                     l5492:
  5525                           
  5526                           ; BSR set to: 0
  5527  00065A  0E00               	movlw	0
  5528  00065C  6E2A               	movwf	?___flmul^0,c
  5529  00065E  0E00               	movlw	0
  5530  000660  6E2B               	movwf	(?___flmul+1)^0,c
  5531  000662  0E00               	movlw	0
  5532  000664  6E2C               	movwf	(?___flmul+2)^0,c
  5533  000666  0E00               	movlw	0
  5534  000668  6E2D               	movwf	(?___flmul+3)^0,c
  5535  00066A  EFE1  F004         	goto	l1993
  5536  00066E                     l5496:
  5537                           
  5538                           ; BSR set to: 0
  5539  00066E  5030               	movf	(___flmul@a+2)^0,w,c
  5540  000670  022A               	mulwf	___flmul@b^0,c
  5541  000672  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5542  000678  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5543  00067E                     
  5544                           ; BSR set to: 0
  5545  00067E  51A8               	movf	___flmul@temp& (0+255),w,b
  5546  000680  6F9F               	movwf	___flmul@grs& (0+255),b
  5547  000682  6BA0               	clrf	(___flmul@grs+1)& (0+255),b
  5548  000684  6BA1               	clrf	(___flmul@grs+2)& (0+255),b
  5549  000686  6BA2               	clrf	(___flmul@grs+3)& (0+255),b
  5550  000688                     
  5551                           ; BSR set to: 0
  5552  000688  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5553  00068A  6FA4               	movwf	___flmul@prod& (0+255),b
  5554  00068C  6BA5               	clrf	(___flmul@prod+1)& (0+255),b
  5555  00068E  6BA6               	clrf	(___flmul@prod+2)& (0+255),b
  5556  000690  6BA7               	clrf	(___flmul@prod+3)& (0+255),b
  5557  000692  502F               	movf	(___flmul@a+1)^0,w,c
  5558  000694  022B               	mulwf	(___flmul@b+1)^0,c
  5559  000696  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5560  00069C  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5561  0006A2                     
  5562                           ; BSR set to: 0
  5563  0006A2  51A8               	movf	___flmul@temp& (0+255),w,b
  5564  0006A4  279F               	addwf	___flmul@grs& (0+255),f,b
  5565  0006A6  0E00               	movlw	0
  5566  0006A8  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5567  0006AA  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5568  0006AC  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5569  0006AE                     
  5570                           ; BSR set to: 0
  5571  0006AE  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5572  0006B0  27A4               	addwf	___flmul@prod& (0+255),f,b
  5573  0006B2  0E00               	movlw	0
  5574  0006B4  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5575  0006B6  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5576  0006B8  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5577  0006BA  502E               	movf	___flmul@a^0,w,c
  5578  0006BC  022C               	mulwf	(___flmul@b+2)^0,c
  5579  0006BE  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5580  0006C4  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5581  0006CA                     
  5582                           ; BSR set to: 0
  5583  0006CA  51A8               	movf	___flmul@temp& (0+255),w,b
  5584  0006CC  279F               	addwf	___flmul@grs& (0+255),f,b
  5585  0006CE  0E00               	movlw	0
  5586  0006D0  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5587  0006D2  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5588  0006D4  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5589  0006D6                     
  5590                           ; BSR set to: 0
  5591  0006D6  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5592  0006D8  27A4               	addwf	___flmul@prod& (0+255),f,b
  5593  0006DA  0E00               	movlw	0
  5594  0006DC  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5595  0006DE  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5596  0006E0  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5597  0006E2                     
  5598                           ; BSR set to: 0
  5599  0006E2  C0A1  F0A2         	movff	___flmul@grs+2,___flmul@grs+3
  5600  0006E6  C0A0  F0A1         	movff	___flmul@grs+1,___flmul@grs+2
  5601  0006EA  C09F  F0A0         	movff	___flmul@grs,___flmul@grs+1
  5602  0006EE  6B9F               	clrf	___flmul@grs& (0+255),b
  5603  0006F0                     
  5604                           ; BSR set to: 0
  5605  0006F0  502E               	movf	___flmul@a^0,w,c
  5606  0006F2  022B               	mulwf	(___flmul@b+1)^0,c
  5607  0006F4  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5608  0006FA  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5609  000700                     
  5610                           ; BSR set to: 0
  5611  000700  51A8               	movf	___flmul@temp& (0+255),w,b
  5612  000702  279F               	addwf	___flmul@grs& (0+255),f,b
  5613  000704  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5614  000706  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5615  000708  0E00               	movlw	0
  5616  00070A  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5617  00070C  0E00               	movlw	0
  5618  00070E  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5619  000710                     
  5620                           ; BSR set to: 0
  5621  000710  502F               	movf	(___flmul@a+1)^0,w,c
  5622  000712  022A               	mulwf	___flmul@b^0,c
  5623  000714  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5624  00071A  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5625  000720                     
  5626                           ; BSR set to: 0
  5627  000720  51A8               	movf	___flmul@temp& (0+255),w,b
  5628  000722  279F               	addwf	___flmul@grs& (0+255),f,b
  5629  000724  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5630  000726  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5631  000728  0E00               	movlw	0
  5632  00072A  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5633  00072C  0E00               	movlw	0
  5634  00072E  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5635  000730                     
  5636                           ; BSR set to: 0
  5637  000730  C0A1  F0A2         	movff	___flmul@grs+2,___flmul@grs+3
  5638  000734  C0A0  F0A1         	movff	___flmul@grs+1,___flmul@grs+2
  5639  000738  C09F  F0A0         	movff	___flmul@grs,___flmul@grs+1
  5640  00073C  6B9F               	clrf	___flmul@grs& (0+255),b
  5641  00073E  502E               	movf	___flmul@a^0,w,c
  5642  000740  022A               	mulwf	___flmul@b^0,c
  5643  000742  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5644  000748  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5645  00074E                     
  5646                           ; BSR set to: 0
  5647  00074E  51A8               	movf	___flmul@temp& (0+255),w,b
  5648  000750  279F               	addwf	___flmul@grs& (0+255),f,b
  5649  000752  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5650  000754  23A0               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5651  000756  0E00               	movlw	0
  5652  000758  23A1               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5653  00075A  0E00               	movlw	0
  5654  00075C  23A2               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5655  00075E                     
  5656                           ; BSR set to: 0
  5657  00075E  5030               	movf	(___flmul@a+2)^0,w,c
  5658  000760  022B               	mulwf	(___flmul@b+1)^0,c
  5659  000762  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5660  000768  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5661  00076E  51A8               	movf	___flmul@temp& (0+255),w,b
  5662  000770  27A4               	addwf	___flmul@prod& (0+255),f,b
  5663  000772  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5664  000774  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5665  000776  0E00               	movlw	0
  5666  000778  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5667  00077A  0E00               	movlw	0
  5668  00077C  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5669  00077E                     
  5670                           ; BSR set to: 0
  5671  00077E  502F               	movf	(___flmul@a+1)^0,w,c
  5672  000780  022C               	mulwf	(___flmul@b+2)^0,c
  5673  000782  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5674  000788  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5675  00078E                     
  5676                           ; BSR set to: 0
  5677  00078E  51A8               	movf	___flmul@temp& (0+255),w,b
  5678  000790  27A4               	addwf	___flmul@prod& (0+255),f,b
  5679  000792  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5680  000794  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5681  000796  0E00               	movlw	0
  5682  000798  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5683  00079A  0E00               	movlw	0
  5684  00079C  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5685  00079E  5030               	movf	(___flmul@a+2)^0,w,c
  5686  0007A0  022C               	mulwf	(___flmul@b+2)^0,c
  5687  0007A2  006F FFCC  F0A8    	movff	prodl,___flmul@temp
  5688  0007A8  006F FFD0  F0A9    	movff	prodh,___flmul@temp+1
  5689  0007AE                     
  5690                           ; BSR set to: 0
  5691  0007AE  51A8               	movf	___flmul@temp& (0+255),w,b
  5692  0007B0  6E32               	movwf	??___flmul^0,c
  5693  0007B2  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5694  0007B4  6E33               	movwf	(??___flmul+1)^0,c
  5695  0007B6  6A34               	clrf	(??___flmul+2)^0,c
  5696  0007B8  6A35               	clrf	(??___flmul+3)^0,c
  5697  0007BA  C034  F035         	movff	??___flmul+2,??___flmul+3
  5698  0007BE  C033  F034         	movff	??___flmul+1,??___flmul+2
  5699  0007C2  C032  F033         	movff	??___flmul,??___flmul+1
  5700  0007C6  6A32               	clrf	??___flmul^0,c
  5701  0007C8  5032               	movf	??___flmul^0,w,c
  5702  0007CA  27A4               	addwf	___flmul@prod& (0+255),f,b
  5703  0007CC  5033               	movf	(??___flmul+1)^0,w,c
  5704  0007CE  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5705  0007D0  5034               	movf	(??___flmul+2)^0,w,c
  5706  0007D2  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5707  0007D4  5035               	movf	(??___flmul+3)^0,w,c
  5708  0007D6  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5709  0007D8                     
  5710                           ; BSR set to: 0
  5711  0007D8  C09F  F032         	movff	___flmul@grs,??___flmul
  5712  0007DC  C0A0  F033         	movff	___flmul@grs+1,??___flmul+1
  5713  0007E0  C0A1  F034         	movff	___flmul@grs+2,??___flmul+2
  5714  0007E4  C0A2  F035         	movff	___flmul@grs+3,??___flmul+3
  5715  0007E8  0E19               	movlw	25
  5716  0007EA  EFFC  F003         	goto	u4220
  5717  0007EE                     u4225:
  5718  0007EE  90D8               	bcf	status,0,c
  5719  0007F0  3235               	rrcf	(??___flmul+3)^0,f,c
  5720  0007F2  3234               	rrcf	(??___flmul+2)^0,f,c
  5721  0007F4  3233               	rrcf	(??___flmul+1)^0,f,c
  5722  0007F6  3232               	rrcf	??___flmul^0,f,c
  5723  0007F8                     u4220:
  5724  0007F8  2EE8               	decfsz	wreg,f,c
  5725  0007FA  EFF7  F003         	goto	u4225
  5726  0007FE  5032               	movf	??___flmul^0,w,c
  5727  000800  27A4               	addwf	___flmul@prod& (0+255),f,b
  5728  000802  5033               	movf	(??___flmul+1)^0,w,c
  5729  000804  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5730  000806  5034               	movf	(??___flmul+2)^0,w,c
  5731  000808  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5732  00080A  5035               	movf	(??___flmul+3)^0,w,c
  5733  00080C  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5734  00080E                     
  5735                           ; BSR set to: 0
  5736  00080E  C0A1  F0A2         	movff	___flmul@grs+2,___flmul@grs+3
  5737  000812  C0A0  F0A1         	movff	___flmul@grs+1,___flmul@grs+2
  5738  000816  C09F  F0A0         	movff	___flmul@grs,___flmul@grs+1
  5739  00081A  6B9F               	clrf	___flmul@grs& (0+255),b
  5740  00081C                     
  5741                           ; BSR set to: 0
  5742  00081C  519E               	movf	___flmul@aexp& (0+255),w,b
  5743  00081E  C0A3  F032         	movff	___flmul@bexp,??___flmul
  5744  000822  6A33               	clrf	(??___flmul+1)^0,c
  5745  000824  2632               	addwf	??___flmul^0,f,c
  5746  000826  0E00               	movlw	0
  5747  000828  2233               	addwfc	(??___flmul+1)^0,f,c
  5748  00082A  0E82               	movlw	130
  5749  00082C  2432               	addwf	??___flmul^0,w,c
  5750  00082E  6FA8               	movwf	___flmul@temp& (0+255),b
  5751  000830  0EFF               	movlw	255
  5752  000832  2033               	addwfc	(??___flmul+1)^0,w,c
  5753  000834  6FA9               	movwf	(___flmul@temp+1)& (0+255),b
  5754  000836  EF32  F004         	goto	l5544
  5755  00083A                     l5538:
  5756                           
  5757                           ; BSR set to: 0
  5758  00083A  90D8               	bcf	status,0,c
  5759  00083C  37A4               	rlcf	___flmul@prod& (0+255),f,b
  5760  00083E  37A5               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5761  000840  37A6               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5762  000842  37A7               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5763  000844                     
  5764                           ; BSR set to: 0
  5765  000844  AFA2               	btfss	(___flmul@grs+3)& (0+255),7,b
  5766  000846  EF27  F004         	goto	u4231
  5767  00084A  EF29  F004         	goto	u4230
  5768  00084E                     u4231:
  5769  00084E  EF2A  F004         	goto	l1996
  5770  000852                     u4230:
  5771  000852                     
  5772                           ; BSR set to: 0
  5773  000852  81A4               	bsf	___flmul@prod& (0+255),0,b
  5774  000854                     l1996:
  5775                           
  5776                           ; BSR set to: 0
  5777  000854  90D8               	bcf	status,0,c
  5778  000856  379F               	rlcf	___flmul@grs& (0+255),f,b
  5779  000858  37A0               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5780  00085A  37A1               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5781  00085C  37A2               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5782  00085E  07A8               	decf	___flmul@temp& (0+255),f,b
  5783  000860  A0D8               	btfss	status,0,c
  5784  000862  07A9               	decf	(___flmul@temp+1)& (0+255),f,b
  5785  000864                     l5544:
  5786                           
  5787                           ; BSR set to: 0
  5788  000864  AFA6               	btfss	(___flmul@prod+2)& (0+255),7,b
  5789  000866  EF37  F004         	goto	u4241
  5790  00086A  EF39  F004         	goto	u4240
  5791  00086E                     u4241:
  5792  00086E  EF1D  F004         	goto	l5538
  5793  000872                     u4240:
  5794  000872                     
  5795                           ; BSR set to: 0
  5796  000872  0E00               	movlw	0
  5797  000874  6F9E               	movwf	___flmul@aexp& (0+255),b
  5798  000876                     
  5799                           ; BSR set to: 0
  5800  000876  AFA2               	btfss	(___flmul@grs+3)& (0+255),7,b
  5801  000878  EF40  F004         	goto	u4251
  5802  00087C  EF42  F004         	goto	u4250
  5803  000880                     u4251:
  5804  000880  EF66  F004         	goto	l1998
  5805  000884                     u4250:
  5806  000884                     
  5807                           ; BSR set to: 0
  5808  000884  0EFF               	movlw	255
  5809  000886  159F               	andwf	___flmul@grs& (0+255),w,b
  5810  000888  6E32               	movwf	??___flmul^0,c
  5811  00088A  0EFF               	movlw	255
  5812  00088C  15A0               	andwf	(___flmul@grs+1)& (0+255),w,b
  5813  00088E  6E33               	movwf	(??___flmul+1)^0,c
  5814  000890  0EFF               	movlw	255
  5815  000892  15A1               	andwf	(___flmul@grs+2)& (0+255),w,b
  5816  000894  6E34               	movwf	(??___flmul+2)^0,c
  5817  000896  0E7F               	movlw	127
  5818  000898  15A2               	andwf	(___flmul@grs+3)& (0+255),w,b
  5819  00089A  6E35               	movwf	(??___flmul+3)^0,c
  5820  00089C  5032               	movf	??___flmul^0,w,c
  5821  00089E  1033               	iorwf	(??___flmul+1)^0,w,c
  5822  0008A0  1034               	iorwf	(??___flmul+2)^0,w,c
  5823  0008A2  1035               	iorwf	(??___flmul+3)^0,w,c
  5824  0008A4  B4D8               	btfsc	status,2,c
  5825  0008A6  EF57  F004         	goto	u4261
  5826  0008AA  EF59  F004         	goto	u4260
  5827  0008AE                     u4261:
  5828  0008AE  EF5D  F004         	goto	l1999
  5829  0008B2                     u4260:
  5830  0008B2                     l5552:
  5831                           
  5832                           ; BSR set to: 0
  5833  0008B2  0E01               	movlw	1
  5834  0008B4  6F9E               	movwf	___flmul@aexp& (0+255),b
  5835  0008B6  EF66  F004         	goto	l1998
  5836  0008BA                     l1999:
  5837                           
  5838                           ; BSR set to: 0
  5839  0008BA  A1A4               	btfss	___flmul@prod& (0+255),0,b
  5840  0008BC  EF62  F004         	goto	u4271
  5841  0008C0  EF64  F004         	goto	u4270
  5842  0008C4                     u4271:
  5843  0008C4  EF66  F004         	goto	l1998
  5844  0008C8                     u4270:
  5845  0008C8  EF59  F004         	goto	l5552
  5846  0008CC                     l1998:
  5847                           
  5848                           ; BSR set to: 0
  5849  0008CC  519E               	movf	___flmul@aexp& (0+255),w,b
  5850  0008CE  B4D8               	btfsc	status,2,c
  5851  0008D0  EF6C  F004         	goto	u4281
  5852  0008D4  EF6E  F004         	goto	u4280
  5853  0008D8                     u4281:
  5854  0008D8  EF92  F004         	goto	l5564
  5855  0008DC                     u4280:
  5856  0008DC                     
  5857                           ; BSR set to: 0
  5858  0008DC  0E01               	movlw	1
  5859  0008DE  27A4               	addwf	___flmul@prod& (0+255),f,b
  5860  0008E0  0E00               	movlw	0
  5861  0008E2  23A5               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5862  0008E4  23A6               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5863  0008E6  23A7               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5864  0008E8                     
  5865                           ; BSR set to: 0
  5866  0008E8  A1A7               	btfss	(___flmul@prod+3)& (0+255),0,b
  5867  0008EA  EF79  F004         	goto	u4291
  5868  0008EE  EF7B  F004         	goto	u4290
  5869  0008F2                     u4291:
  5870  0008F2  EF92  F004         	goto	l5564
  5871  0008F6                     u4290:
  5872  0008F6                     
  5873                           ; BSR set to: 0
  5874  0008F6  C0A4  F032         	movff	___flmul@prod,??___flmul
  5875  0008FA  C0A5  F033         	movff	___flmul@prod+1,??___flmul+1
  5876  0008FE  C0A6  F034         	movff	___flmul@prod+2,??___flmul+2
  5877  000902  C0A7  F035         	movff	___flmul@prod+3,??___flmul+3
  5878  000906  3435               	rlcf	(??___flmul+3)^0,w,c
  5879  000908  3235               	rrcf	(??___flmul+3)^0,f,c
  5880  00090A  3234               	rrcf	(??___flmul+2)^0,f,c
  5881  00090C  3233               	rrcf	(??___flmul+1)^0,f,c
  5882  00090E  3232               	rrcf	??___flmul^0,f,c
  5883  000910  C032  F0A4         	movff	??___flmul,___flmul@prod
  5884  000914  C033  F0A5         	movff	??___flmul+1,___flmul@prod+1
  5885  000918  C034  F0A6         	movff	??___flmul+2,___flmul@prod+2
  5886  00091C  C035  F0A7         	movff	??___flmul+3,___flmul@prod+3
  5887  000920                     
  5888                           ; BSR set to: 0
  5889  000920  4BA8               	infsnz	___flmul@temp& (0+255),f,b
  5890  000922  2BA9               	incf	(___flmul@temp+1)& (0+255),f,b
  5891  000924                     l5564:
  5892                           
  5893                           ; BSR set to: 0
  5894  000924  BFA9               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5895  000926  EF9D  F004         	goto	u4301
  5896  00092A  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5897  00092C  E108               	bnz	u4300
  5898  00092E  29A8               	incf	___flmul@temp& (0+255),w,b
  5899  000930  A0D8               	btfss	status,0,c
  5900  000932  EF9D  F004         	goto	u4301
  5901  000936  EF9F  F004         	goto	u4300
  5902  00093A                     u4301:
  5903  00093A  EFA9  F004         	goto	l5568
  5904  00093E                     u4300:
  5905  00093E                     
  5906                           ; BSR set to: 0
  5907  00093E  0E00               	movlw	0
  5908  000940  6FA4               	movwf	___flmul@prod& (0+255),b
  5909  000942  0E00               	movlw	0
  5910  000944  6FA5               	movwf	(___flmul@prod+1)& (0+255),b
  5911  000946  0E80               	movlw	128
  5912  000948  6FA6               	movwf	(___flmul@prod+2)& (0+255),b
  5913  00094A  0E7F               	movlw	127
  5914  00094C  6FA7               	movwf	(___flmul@prod+3)& (0+255),b
  5915  00094E  EFD7  F004         	goto	l5580
  5916  000952                     l5568:
  5917                           
  5918                           ; BSR set to: 0
  5919  000952  BFA9               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5920  000954  EFB6  F004         	goto	u4310
  5921  000958  51A9               	movf	(___flmul@temp+1)& (0+255),w,b
  5922  00095A  E106               	bnz	u4311
  5923  00095C  05A8               	decf	___flmul@temp& (0+255),w,b
  5924  00095E  B0D8               	btfsc	status,0,c
  5925  000960  EFB4  F004         	goto	u4311
  5926  000964  EFB6  F004         	goto	u4310
  5927  000968                     u4311:
  5928  000968  EFC2  F004         	goto	l2006
  5929  00096C                     u4310:
  5930  00096C                     
  5931                           ; BSR set to: 0
  5932  00096C  0E00               	movlw	0
  5933  00096E  6FA4               	movwf	___flmul@prod& (0+255),b
  5934  000970  0E00               	movlw	0
  5935  000972  6FA5               	movwf	(___flmul@prod+1)& (0+255),b
  5936  000974  0E00               	movlw	0
  5937  000976  6FA6               	movwf	(___flmul@prod+2)& (0+255),b
  5938  000978  0E00               	movlw	0
  5939  00097A  6FA7               	movwf	(___flmul@prod+3)& (0+255),b
  5940  00097C  0E00               	movlw	0
  5941  00097E  6F9D               	movwf	___flmul@sign& (0+255),b
  5942  000980  EFD7  F004         	goto	l5580
  5943  000984                     l2006:
  5944                           
  5945                           ; BSR set to: 0
  5946  000984  C0A8  F0A3         	movff	___flmul@temp,___flmul@bexp
  5947  000988                     
  5948                           ; BSR set to: 0
  5949  000988  0EFF               	movlw	255
  5950  00098A  17A4               	andwf	___flmul@prod& (0+255),f,b
  5951  00098C  0EFF               	movlw	255
  5952  00098E  17A5               	andwf	(___flmul@prod+1)& (0+255),f,b
  5953  000990  0E7F               	movlw	127
  5954  000992  17A6               	andwf	(___flmul@prod+2)& (0+255),f,b
  5955  000994  0E00               	movlw	0
  5956  000996  17A7               	andwf	(___flmul@prod+3)& (0+255),f,b
  5957  000998                     
  5958                           ; BSR set to: 0
  5959  000998  A1A3               	btfss	___flmul@bexp& (0+255),0,b
  5960  00099A  EFD1  F004         	goto	u4321
  5961  00099E  EFD3  F004         	goto	u4320
  5962  0009A2                     u4321:
  5963  0009A2  EFD4  F004         	goto	l5578
  5964  0009A6                     u4320:
  5965  0009A6                     
  5966                           ; BSR set to: 0
  5967  0009A6  8FA6               	bsf	(___flmul@prod+2)& (0+255),7,b
  5968  0009A8                     l5578:
  5969                           
  5970                           ; BSR set to: 0
  5971  0009A8  90D8               	bcf	status,0,c
  5972  0009AA  31A3               	rrcf	___flmul@bexp& (0+255),w,b
  5973  0009AC  6FA7               	movwf	(___flmul@prod+3)& (0+255),b
  5974  0009AE                     l5580:
  5975                           
  5976                           ; BSR set to: 0
  5977  0009AE  519D               	movf	___flmul@sign& (0+255),w,b
  5978  0009B0  13A7               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5979  0009B2                     
  5980                           ; BSR set to: 0
  5981  0009B2  C0A4  F02A         	movff	___flmul@prod,?___flmul
  5982  0009B6  C0A5  F02B         	movff	___flmul@prod+1,?___flmul+1
  5983  0009BA  C0A6  F02C         	movff	___flmul@prod+2,?___flmul+2
  5984  0009BE  C0A7  F02D         	movff	___flmul@prod+3,?___flmul+3
  5985  0009C2                     l1993:
  5986                           
  5987                           ; BSR set to: 0
  5988  0009C2  0012               	return		;funcret
  5989  0009C4                     __end_of___flmul:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function ___awdiv *****************
  5993 ;; Defined at:
  5994 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  dividend        2   19[COMRAM] int 
  5997 ;;  divisor         2   21[COMRAM] int 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  quotient        2   25[COMRAM] int 
  6000 ;;  sign            1   24[COMRAM] unsigned char 
  6001 ;;  counter         1   23[COMRAM] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  2   19[COMRAM] int 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;Total ram usage:        8 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; Hardware stack levels required when called: 8
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_calcSteering
  6022 ;;		_calcMotorPow
  6023 ;;		_setSteering
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text21
  6028  001C26                     __ptext21:
  6029                           	callstack 0
  6030  001C26                     ___awdiv:
  6031                           	callstack 19
  6032  001C26  0E00               	movlw	0
  6033  001C28  6E19               	movwf	___awdiv@sign^0,c
  6034  001C2A  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  6035  001C2C  EF1C  F00E         	goto	u1900
  6036  001C30  EF1A  F00E         	goto	u1901
  6037  001C34                     u1901:
  6038  001C34  EF22  F00E         	goto	l3760
  6039  001C38                     u1900:
  6040  001C38  6C16               	negf	___awdiv@divisor^0,c
  6041  001C3A  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  6042  001C3C  B0D8               	btfsc	status,0,c
  6043  001C3E  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  6044  001C40  0E01               	movlw	1
  6045  001C42  6E19               	movwf	___awdiv@sign^0,c
  6046  001C44                     l3760:
  6047  001C44  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  6048  001C46  EF29  F00E         	goto	u1910
  6049  001C4A  EF27  F00E         	goto	u1911
  6050  001C4E                     u1911:
  6051  001C4E  EF2F  F00E         	goto	l3766
  6052  001C52                     u1910:
  6053  001C52  6C14               	negf	___awdiv@dividend^0,c
  6054  001C54  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  6055  001C56  B0D8               	btfsc	status,0,c
  6056  001C58  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  6057  001C5A  0E01               	movlw	1
  6058  001C5C  1A19               	xorwf	___awdiv@sign^0,f,c
  6059  001C5E                     l3766:
  6060  001C5E  0E00               	movlw	0
  6061  001C60  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  6062  001C62  0E00               	movlw	0
  6063  001C64  6E1A               	movwf	___awdiv@quotient^0,c
  6064  001C66  5016               	movf	___awdiv@divisor^0,w,c
  6065  001C68  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  6066  001C6A  B4D8               	btfsc	status,2,c
  6067  001C6C  EF3A  F00E         	goto	u1921
  6068  001C70  EF3C  F00E         	goto	u1920
  6069  001C74                     u1921:
  6070  001C74  EF64  F00E         	goto	l3788
  6071  001C78                     u1920:
  6072  001C78  0E01               	movlw	1
  6073  001C7A  6E18               	movwf	___awdiv@counter^0,c
  6074  001C7C  EF44  F00E         	goto	l3774
  6075  001C80                     l3772:
  6076  001C80  90D8               	bcf	status,0,c
  6077  001C82  3616               	rlcf	___awdiv@divisor^0,f,c
  6078  001C84  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  6079  001C86  2A18               	incf	___awdiv@counter^0,f,c
  6080  001C88                     l3774:
  6081  001C88  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  6082  001C8A  EF49  F00E         	goto	u1931
  6083  001C8E  EF4B  F00E         	goto	u1930
  6084  001C92                     u1931:
  6085  001C92  EF40  F00E         	goto	l3772
  6086  001C96                     u1930:
  6087  001C96                     l3776:
  6088  001C96  90D8               	bcf	status,0,c
  6089  001C98  361A               	rlcf	___awdiv@quotient^0,f,c
  6090  001C9A  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  6091  001C9C  5016               	movf	___awdiv@divisor^0,w,c
  6092  001C9E  5C14               	subwf	___awdiv@dividend^0,w,c
  6093  001CA0  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6094  001CA2  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  6095  001CA4  A0D8               	btfss	status,0,c
  6096  001CA6  EF57  F00E         	goto	u1941
  6097  001CAA  EF59  F00E         	goto	u1940
  6098  001CAE                     u1941:
  6099  001CAE  EF5E  F00E         	goto	l3784
  6100  001CB2                     u1940:
  6101  001CB2  5016               	movf	___awdiv@divisor^0,w,c
  6102  001CB4  5E14               	subwf	___awdiv@dividend^0,f,c
  6103  001CB6  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6104  001CB8  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  6105  001CBA  801A               	bsf	___awdiv@quotient^0,0,c
  6106  001CBC                     l3784:
  6107  001CBC  90D8               	bcf	status,0,c
  6108  001CBE  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  6109  001CC0  3216               	rrcf	___awdiv@divisor^0,f,c
  6110  001CC2  2E18               	decfsz	___awdiv@counter^0,f,c
  6111  001CC4  EF4B  F00E         	goto	l3776
  6112  001CC8                     l3788:
  6113  001CC8  5019               	movf	___awdiv@sign^0,w,c
  6114  001CCA  B4D8               	btfsc	status,2,c
  6115  001CCC  EF6A  F00E         	goto	u1951
  6116  001CD0  EF6C  F00E         	goto	u1950
  6117  001CD4                     u1951:
  6118  001CD4  EF70  F00E         	goto	l3792
  6119  001CD8                     u1950:
  6120  001CD8  6C1A               	negf	___awdiv@quotient^0,c
  6121  001CDA  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  6122  001CDC  B0D8               	btfsc	status,0,c
  6123  001CDE  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  6124  001CE0                     l3792:
  6125  001CE0  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  6126  001CE4  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  6127  001CE8  0012               	return		;funcret
  6128  001CEA                     __end_of___awdiv:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _SYSTEM_Initialize *****************
  6132 ;; Defined at:
  6133 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;		None
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;Total ram usage:        0 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; Hardware stack levels required when called: 10
  6154 ;; This function calls:
  6155 ;;		_ADCC_Initialize
  6156 ;;		_CCP3_Initialize
  6157 ;;		_CCP4_Initialize
  6158 ;;		_CLC3_Initialize
  6159 ;;		_INTERRUPT_Initialize
  6160 ;;		_OSCILLATOR_Initialize
  6161 ;;		_PIN_MANAGER_Initialize
  6162 ;;		_PMD_Initialize
  6163 ;;		_PWM5_Initialize
  6164 ;;		_PWM6_Initialize
  6165 ;;		_PWM7_Initialize
  6166 ;;		_PWM8_Initialize
  6167 ;;		_SMT1_Initialize
  6168 ;;		_TMR2_Initialize
  6169 ;;		_TMR3_Initialize
  6170 ;;		_TMR4_Initialize
  6171 ;;		_TMR5_Initialize
  6172 ;;		_UART1_Initialize
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text22
  6179  00202C                     __ptext22:
  6180                           	callstack 0
  6181  00202C                     _SYSTEM_Initialize:
  6182                           	callstack 20
  6183  00202C                     
  6184                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6185  00202C  ECF0  F00F         	call	_INTERRUPT_Initialize	;wreg free
  6186                           
  6187                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6188  002030  ECD2  F012         	call	_PMD_Initialize	;wreg free
  6189                           
  6190                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6191  002034  EC4B  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6192                           
  6193                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6194  002038  EC52  F013         	call	_OSCILLATOR_Initialize	;wreg free
  6195  00203C                     
  6196                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  6197  00203C  EC4F  F012         	call	_CCP3_Initialize	;wreg free
  6198  002040                     
  6199                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  6200  002040  EC98  F00F         	call	_ADCC_Initialize	;wreg free
  6201                           
  6202                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6203  002044  EC66  F012         	call	_TMR4_Initialize	;wreg free
  6204  002048                     
  6205                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  6206  002048  ECD8  F011         	call	_SMT1_Initialize	;wreg free
  6207  00204C                     
  6208                           ;mcc_generated_files/mcc.c: 60:     TMR2_Initialize();
  6209  00204C  EC06  F013         	call	_TMR2_Initialize	;wreg free
  6210  002050                     
  6211                           ;mcc_generated_files/mcc.c: 61:     PWM8_Initialize();
  6212  002050  EC22  F013         	call	_PWM8_Initialize	;wreg free
  6213  002054                     
  6214                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  6215  002054  EC3A  F013         	call	_PWM6_Initialize	;wreg free
  6216                           
  6217                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  6218  002058  EC38  F012         	call	_CCP4_Initialize	;wreg free
  6219  00205C                     
  6220                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  6221  00205C  EC7C  F012         	call	_CLC3_Initialize	;wreg free
  6222  002060                     
  6223                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  6224  002060  ECE6  F010         	call	_TMR3_Initialize	;wreg free
  6225                           
  6226                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  6227  002064  EC46  F013         	call	_PWM5_Initialize	;wreg free
  6228  002068                     
  6229                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  6230  002068  EC3B  F010         	call	_TMR5_Initialize	;wreg free
  6231  00206C                     
  6232                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  6233  00206C  EC2E  F013         	call	_PWM7_Initialize	;wreg free
  6234                           
  6235                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  6236  002070  ECCC  F00E         	call	_UART1_Initialize	;wreg free
  6237  002074  0012               	return		;funcret
  6238  002076                     __end_of_SYSTEM_Initialize:
  6239                           	callstack 0
  6240                           
  6241 ;; *************** function _UART1_Initialize *****************
  6242 ;; Defined at:
  6243 ;;		line 87 in file "mcc_generated_files/uart1.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		wreg, status,2, status,0, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;Total ram usage:        0 bytes
  6262 ;; Hardware stack levels used: 1
  6263 ;; Hardware stack levels required when called: 9
  6264 ;; This function calls:
  6265 ;;		_UART1_SetErrorHandler
  6266 ;;		_UART1_SetFramingErrorHandler
  6267 ;;		_UART1_SetOverrunErrorHandler
  6268 ;;		_UART1_SetRxInterruptHandler
  6269 ;;		_UART1_SetTxInterruptHandler
  6270 ;; This function is called by:
  6271 ;;		_SYSTEM_Initialize
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text23
  6276  001D98                     __ptext23:
  6277                           	callstack 0
  6278  001D98                     _UART1_Initialize:
  6279                           	callstack 20
  6280  001D98                     
  6281                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  6282  001D98  0139               	movlb	57	; () banked
  6283  001D9A  9793               	bcf	147,3,b	;volatile
  6284  001D9C                     
  6285                           ; BSR set to: 57
  6286                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  6287  001D9C  0E60               	movlw	low _UART1_Receive_ISR
  6288  001D9E  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  6289  001DA0  0E1B               	movlw	high _UART1_Receive_ISR
  6290  001DA2  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  6291  001DA4  EC6A  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
  6292  001DA8                     
  6293                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  6294  001DA8  0139               	movlb	57	; () banked
  6295  001DAA  9993               	bcf	147,4,b	;volatile
  6296                           
  6297                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  6298  001DAC  0E0A               	movlw	low _UART1_Transmit_ISR
  6299  001DAE  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  6300  001DB0  0E21               	movlw	high _UART1_Transmit_ISR
  6301  001DB2  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  6302  001DB4  EC65  F013         	call	_UART1_SetTxInterruptHandler	;wreg free
  6303  001DB8                     
  6304                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  6305  001DB8  0E00               	movlw	0
  6306  001DBA  013D               	movlb	61	; () banked
  6307  001DBC  6FEC               	movwf	236,b	;volatile
  6308  001DBE                     
  6309                           ; BSR set to: 61
  6310                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  6311  001DBE  0E00               	movlw	0
  6312  001DC0  6FED               	movwf	237,b	;volatile
  6313  001DC2                     
  6314                           ; BSR set to: 61
  6315                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  6316  001DC2  0E00               	movlw	0
  6317  001DC4  6FEE               	movwf	238,b	;volatile
  6318  001DC6                     
  6319                           ; BSR set to: 61
  6320                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  6321  001DC6  0E00               	movlw	0
  6322  001DC8  6FEF               	movwf	239,b	;volatile
  6323  001DCA                     
  6324                           ; BSR set to: 61
  6325                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  6326  001DCA  0E00               	movlw	0
  6327  001DCC  6FF0               	movwf	240,b	;volatile
  6328  001DCE                     
  6329                           ; BSR set to: 61
  6330                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  6331  001DCE  0E00               	movlw	0
  6332  001DD0  6FF1               	movwf	241,b	;volatile
  6333  001DD2                     
  6334                           ; BSR set to: 61
  6335                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  6336  001DD2  0EB0               	movlw	176
  6337  001DD4  6FF2               	movwf	242,b	;volatile
  6338  001DD6                     
  6339                           ; BSR set to: 61
  6340                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  6341  001DD6  0E80               	movlw	128
  6342  001DD8  6FF3               	movwf	243,b	;volatile
  6343  001DDA                     
  6344                           ; BSR set to: 61
  6345                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  6346  001DDA  0E00               	movlw	0
  6347  001DDC  6FF4               	movwf	244,b	;volatile
  6348  001DDE                     
  6349                           ; BSR set to: 61
  6350                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  6351  001DDE  0E8A               	movlw	138
  6352  001DE0  6FF5               	movwf	245,b	;volatile
  6353  001DE2                     
  6354                           ; BSR set to: 61
  6355                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  6356  001DE2  0E00               	movlw	0
  6357  001DE4  6FF6               	movwf	246,b	;volatile
  6358  001DE6                     
  6359                           ; BSR set to: 61
  6360                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  6361  001DE6  0E00               	movlw	0
  6362  001DE8  6FF7               	movwf	247,b	;volatile
  6363  001DEA                     
  6364                           ; BSR set to: 61
  6365                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  6366  001DEA  0E00               	movlw	0
  6367  001DEC  6FF8               	movwf	248,b	;volatile
  6368  001DEE                     
  6369                           ; BSR set to: 61
  6370                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  6371  001DEE  0E00               	movlw	0
  6372  001DF0  6FF9               	movwf	249,b	;volatile
  6373  001DF2                     
  6374                           ; BSR set to: 61
  6375                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  6376  001DF2  0E00               	movlw	0
  6377  001DF4  6FFA               	movwf	250,b	;volatile
  6378  001DF6                     
  6379                           ; BSR set to: 61
  6380                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  6381  001DF6  0E34               	movlw	low _UART1_DefaultFramingErrorHandler
  6382  001DF8  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  6383  001DFA  0E27               	movlw	high _UART1_DefaultFramingErrorHandler
  6384  001DFC  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6385  001DFE  EC74  F013         	call	_UART1_SetFramingErrorHandler	;wreg free
  6386  001E02                     
  6387                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  6388  001E02  0E32               	movlw	low _UART1_DefaultOverrunErrorHandler
  6389  001E04  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  6390  001E06  0E27               	movlw	high _UART1_DefaultOverrunErrorHandler
  6391  001E08  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6392  001E0A  EC6F  F013         	call	_UART1_SetOverrunErrorHandler	;wreg free
  6393  001E0E                     
  6394                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  6395  001E0E  0E24               	movlw	low _UART1_DefaultErrorHandler
  6396  001E10  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  6397  001E12  0E27               	movlw	high _UART1_DefaultErrorHandler
  6398  001E14  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  6399  001E16  EC79  F013         	call	_UART1_SetErrorHandler	;wreg free
  6400                           
  6401                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  6402  001E1A  0E00               	movlw	0
  6403  001E1C  6E40               	movwf	_uart1RxLastError^0,c	;volatile
  6404                           
  6405                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  6406  001E1E  0E00               	movlw	0
  6407  001E20  6E45               	movwf	_uart1TxHead^0,c	;volatile
  6408                           
  6409                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  6410  001E22  0E00               	movlw	0
  6411  001E24  6E44               	movwf	_uart1TxTail^0,c	;volatile
  6412                           
  6413                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  6414  001E26  0E08               	movlw	8
  6415  001E28  0100               	movlb	0	; () banked
  6416  001E2A  6FDD               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  6417                           
  6418                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  6419  001E2C  0E00               	movlw	0
  6420  001E2E  6E43               	movwf	_uart1RxHead^0,c	;volatile
  6421                           
  6422                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  6423  001E30  0E00               	movlw	0
  6424  001E32  6E42               	movwf	_uart1RxTail^0,c	;volatile
  6425                           
  6426                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  6427  001E34  0E00               	movlw	0
  6428  001E36  6E41               	movwf	_uart1RxCount^0,c	;volatile
  6429  001E38                     
  6430                           ; BSR set to: 0
  6431                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  6432  001E38  0139               	movlb	57	; () banked
  6433  001E3A  8793               	bsf	147,3,b	;volatile
  6434  001E3C                     
  6435                           ; BSR set to: 57
  6436  001E3C  0012               	return		;funcret
  6437  001E3E                     __end_of_UART1_Initialize:
  6438                           	callstack 0
  6439                           
  6440 ;; *************** function _UART1_SetTxInterruptHandler *****************
  6441 ;; Defined at:
  6442 ;;		line 333 in file "mcc_generated_files/uart1.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6445 ;;		 -> UART1_Transmit_ISR(1), 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;Total ram usage:        2 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 8
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_UART1_Initialize
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text24
  6472  0026CA                     __ptext24:
  6473                           	callstack 0
  6474  0026CA                     _UART1_SetTxInterruptHandler:
  6475                           	callstack 20
  6476  0026CA                     
  6477                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  6478  0026CA  C014  F0D9         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  6479  0026CE  C015  F0DA         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  6480  0026D2  0012               	return		;funcret
  6481  0026D4                     __end_of_UART1_SetTxInterruptHandler:
  6482                           	callstack 0
  6483                           
  6484 ;; *************** function _UART1_SetRxInterruptHandler *****************
  6485 ;; Defined at:
  6486 ;;		line 329 in file "mcc_generated_files/uart1.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6489 ;;		 -> UART1_Receive_ISR(1), 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;Total ram usage:        2 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 8
  6508 ;; This function calls:
  6509 ;;		Nothing
  6510 ;; This function is called by:
  6511 ;;		_UART1_Initialize
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text25
  6516  0026D4                     __ptext25:
  6517                           	callstack 0
  6518  0026D4                     _UART1_SetRxInterruptHandler:
  6519                           	callstack 20
  6520  0026D4                     
  6521                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  6522  0026D4  C014  F0DB         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  6523  0026D8  C015  F0DC         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  6524  0026DC  0012               	return		;funcret
  6525  0026DE                     __end_of_UART1_SetRxInterruptHandler:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  6529 ;; Defined at:
  6530 ;;		line 319 in file "mcc_generated_files/uart1.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6533 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  1    wreg      void 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;Total ram usage:        2 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 8
  6552 ;; This function calls:
  6553 ;;		Nothing
  6554 ;; This function is called by:
  6555 ;;		_UART1_Initialize
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text26
  6560  0026DE                     __ptext26:
  6561                           	callstack 0
  6562  0026DE                     _UART1_SetOverrunErrorHandler:
  6563                           	callstack 20
  6564  0026DE                     
  6565                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  6566  0026DE  C014  F0D5         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  6567  0026E2  C015  F0D6         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  6568  0026E6  0012               	return		;funcret
  6569  0026E8                     __end_of_UART1_SetOverrunErrorHandler:
  6570                           	callstack 0
  6571                           
  6572 ;; *************** function _UART1_SetFramingErrorHandler *****************
  6573 ;; Defined at:
  6574 ;;		line 315 in file "mcc_generated_files/uart1.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6577 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;		None
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  1    wreg      void 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;Total ram usage:        2 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 8
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_UART1_Initialize
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text27
  6604  0026E8                     __ptext27:
  6605                           	callstack 0
  6606  0026E8                     _UART1_SetFramingErrorHandler:
  6607                           	callstack 20
  6608  0026E8                     
  6609                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  6610  0026E8  C014  F0D7         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  6611  0026EC  C015  F0D8         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  6612  0026F0  0012               	return		;funcret
  6613  0026F2                     __end_of_UART1_SetFramingErrorHandler:
  6614                           	callstack 0
  6615                           
  6616 ;; *************** function _UART1_SetErrorHandler *****************
  6617 ;; Defined at:
  6618 ;;		line 323 in file "mcc_generated_files/uart1.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6621 ;;		 -> UART1_DefaultErrorHandler(1), 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;Total ram usage:        2 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 8
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_UART1_Initialize
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text28
  6648  0026F2                     __ptext28:
  6649                           	callstack 0
  6650  0026F2                     _UART1_SetErrorHandler:
  6651                           	callstack 20
  6652  0026F2                     
  6653                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  6654  0026F2  C014  F0D3         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  6655  0026F6  C015  F0D4         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  6656  0026FA  0012               	return		;funcret
  6657  0026FC                     __end_of_UART1_SetErrorHandler:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function _TMR5_Initialize *****************
  6661 ;; Defined at:
  6662 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;Total ram usage:        2 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 9
  6683 ;; This function calls:
  6684 ;;		_TMR5_SetGateInterruptHandler
  6685 ;; This function is called by:
  6686 ;;		_SYSTEM_Initialize
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text29
  6691  002076                     __ptext29:
  6692                           	callstack 0
  6693  002076                     _TMR5_Initialize:
  6694                           	callstack 20
  6695  002076                     
  6696                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  6697  002076  0EC0               	movlw	192
  6698  002078  6E9B               	movwf	155,c	;volatile
  6699                           
  6700                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  6701  00207A  0E00               	movlw	0
  6702  00207C  6E9C               	movwf	156,c	;volatile
  6703                           
  6704                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  6705  00207E  0E05               	movlw	5
  6706  002080  6E9D               	movwf	157,c	;volatile
  6707                           
  6708                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  6709  002082  0E00               	movlw	0
  6710  002084  6E99               	movwf	153,c	;volatile
  6711                           
  6712                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  6713  002086  0E00               	movlw	0
  6714  002088  6E98               	movwf	152,c	;volatile
  6715  00208A                     
  6716                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  6717  00208A  0139               	movlb	57	; () banked
  6718  00208C  9DA8               	bcf	168,6,b	;volatile
  6719  00208E                     
  6720                           ; BSR set to: 57
  6721                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  6722  00208E  5098               	movf	152,w,c	;volatile
  6723  002090  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  6724  002096  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  6725  002098  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  6726  00209C  6A16               	clrf	??_TMR5_Initialize^0,c
  6727  00209E  1016               	iorwf	??_TMR5_Initialize^0,w,c
  6728  0020A0  0100               	movlb	0	; () banked
  6729  0020A2  6FCD               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  6730  0020A4  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  6731  0020A6  6FCE               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  6732  0020A8                     
  6733                           ; BSR set to: 0
  6734                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  6735  0020A8  0139               	movlb	57	; () banked
  6736  0020AA  9FA8               	bcf	168,7,b	;volatile
  6737  0020AC                     
  6738                           ; BSR set to: 57
  6739                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  6740  0020AC  8F98               	bsf	152,7,b	;volatile
  6741  0020AE                     
  6742                           ; BSR set to: 57
  6743                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  6744  0020AE  0E28               	movlw	low _TMR5_DefaultGateInterruptHandler
  6745  0020B0  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  6746  0020B2  0E26               	movlw	high _TMR5_DefaultGateInterruptHandler
  6747  0020B4  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  6748  0020B6  EC7E  F013         	call	_TMR5_SetGateInterruptHandler	;wreg free
  6749  0020BA                     
  6750                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  6751  0020BA  0E03               	movlw	3
  6752  0020BC  6E9A               	movwf	154,c	;volatile
  6753  0020BE  0012               	return		;funcret
  6754  0020C0                     __end_of_TMR5_Initialize:
  6755                           	callstack 0
  6756                           
  6757 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  6758 ;; Defined at:
  6759 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6762 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;		None
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;Total ram usage:        2 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 8
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_TMR5_Initialize
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text30
  6789  0026FC                     __ptext30:
  6790                           	callstack 0
  6791  0026FC                     _TMR5_SetGateInterruptHandler:
  6792                           	callstack 20
  6793  0026FC                     
  6794                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  6795  0026FC  C014  F0CB         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  6796  002700  C015  F0CC         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  6797  002704  0012               	return		;funcret
  6798  002706                     __end_of_TMR5_SetGateInterruptHandler:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function _TMR4_Initialize *****************
  6802 ;; Defined at:
  6803 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  1    wreg      void 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 9
  6824 ;; This function calls:
  6825 ;;		_TMR4_SetInterruptHandler
  6826 ;; This function is called by:
  6827 ;;		_SYSTEM_Initialize
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text31
  6832  0024CC                     __ptext31:
  6833                           	callstack 0
  6834  0024CC                     _TMR4_Initialize:
  6835                           	callstack 20
  6836  0024CC                     
  6837                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  6838  0024CC  0E01               	movlw	1
  6839  0024CE  6EA2               	movwf	162,c	;volatile
  6840                           
  6841                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  6842  0024D0  0E00               	movlw	0
  6843  0024D2  6EA1               	movwf	161,c	;volatile
  6844                           
  6845                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  6846  0024D4  0E00               	movlw	0
  6847  0024D6  6EA3               	movwf	163,c	;volatile
  6848                           
  6849                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  6850  0024D8  0EF9               	movlw	249
  6851  0024DA  6E9F               	movwf	159,c	;volatile
  6852                           
  6853                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  6854  0024DC  0E00               	movlw	0
  6855  0024DE  6E9E               	movwf	158,c	;volatile
  6856  0024E0                     
  6857                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  6858  0024E0  0139               	movlb	57	; () banked
  6859  0024E2  91A7               	bcf	167,0,b	;volatile
  6860  0024E4                     
  6861                           ; BSR set to: 57
  6862                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  6863  0024E4  8197               	bsf	151,0,b	;volatile
  6864  0024E6                     
  6865                           ; BSR set to: 57
  6866                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  6867  0024E6  0E36               	movlw	low _TMR4_DefaultInterruptHandler
  6868  0024E8  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  6869  0024EA  0E27               	movlw	high _TMR4_DefaultInterruptHandler
  6870  0024EC  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  6871  0024EE  EC83  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  6872  0024F2                     
  6873                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  6874  0024F2  0EE0               	movlw	224
  6875  0024F4  6EA0               	movwf	160,c	;volatile
  6876  0024F6  0012               	return		;funcret
  6877  0024F8                     __end_of_TMR4_Initialize:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function _TMR4_SetInterruptHandler *****************
  6881 ;; Defined at:
  6882 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6885 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;                  1    wreg      void 
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;Total ram usage:        2 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; Hardware stack levels required when called: 8
  6904 ;; This function calls:
  6905 ;;		Nothing
  6906 ;; This function is called by:
  6907 ;;		_TMR4_Initialize
  6908 ;;		_main
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text32
  6913  002706                     __ptext32:
  6914                           	callstack 0
  6915  002706                     _TMR4_SetInterruptHandler:
  6916                           	callstack 22
  6917  002706                     
  6918                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  6919  002706  C014  F0C7         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  6920  00270A  C015  F0C8         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  6921  00270E  0012               	return		;funcret
  6922  002710                     __end_of_TMR4_SetInterruptHandler:
  6923                           	callstack 0
  6924                           
  6925 ;; *************** function _TMR3_Initialize *****************
  6926 ;; Defined at:
  6927 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  1    wreg      void 
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;Total ram usage:        2 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; Hardware stack levels required when called: 8
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_SYSTEM_Initialize
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text33
  6956  0021CC                     __ptext33:
  6957                           	callstack 0
  6958  0021CC                     _TMR3_Initialize:
  6959                           	callstack 21
  6960  0021CC                     
  6961                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  6962  0021CC  0E00               	movlw	0
  6963  0021CE  6EA7               	movwf	167,c	;volatile
  6964                           
  6965                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  6966  0021D0  0E00               	movlw	0
  6967  0021D2  6EA8               	movwf	168,c	;volatile
  6968                           
  6969                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  6970  0021D4  0E05               	movlw	5
  6971  0021D6  6EA9               	movwf	169,c	;volatile
  6972                           
  6973                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  6974  0021D8  0E00               	movlw	0
  6975  0021DA  6EA5               	movwf	165,c	;volatile
  6976                           
  6977                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  6978  0021DC  0E00               	movlw	0
  6979  0021DE  6EA4               	movwf	164,c	;volatile
  6980  0021E0                     
  6981                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  6982  0021E0  0139               	movlb	57	; () banked
  6983  0021E2  9DA6               	bcf	166,6,b	;volatile
  6984  0021E4                     
  6985                           ; BSR set to: 57
  6986                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  6987  0021E4  50A4               	movf	164,w,c	;volatile
  6988  0021E6  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  6989  0021EC  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  6990  0021EE  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  6991  0021F2  6A14               	clrf	??_TMR3_Initialize^0,c
  6992  0021F4  1014               	iorwf	??_TMR3_Initialize^0,w,c
  6993  0021F6  0100               	movlb	0	; () banked
  6994  0021F8  6FC9               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  6995  0021FA  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  6996  0021FC  6FCA               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  6997  0021FE                     
  6998                           ; BSR set to: 0
  6999                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  7000  0021FE  0E01               	movlw	1
  7001  002200  6EA6               	movwf	166,c	;volatile
  7002  002202                     
  7003                           ; BSR set to: 0
  7004  002202  0012               	return		;funcret
  7005  002204                     __end_of_TMR3_Initialize:
  7006                           	callstack 0
  7007                           
  7008 ;; *************** function _TMR2_Initialize *****************
  7009 ;; Defined at:
  7010 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;		None
  7015 ;; Return value:  Size  Location     Type
  7016 ;;                  1    wreg      void 
  7017 ;; Registers used:
  7018 ;;		wreg, status,2
  7019 ;; Tracked objects:
  7020 ;;		On entry : 0/0
  7021 ;;		On exit  : 0/0
  7022 ;;		Unchanged: 0/0
  7023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;Total ram usage:        0 bytes
  7029 ;; Hardware stack levels used: 1
  7030 ;; Hardware stack levels required when called: 8
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_SYSTEM_Initialize
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           	psect	text34
  7039  00260C                     __ptext34:
  7040                           	callstack 0
  7041  00260C                     _TMR2_Initialize:
  7042                           	callstack 21
  7043  00260C                     
  7044                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  7045  00260C  0E05               	movlw	5
  7046  00260E  6EAE               	movwf	174,c	;volatile
  7047                           
  7048                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7049  002610  0E00               	movlw	0
  7050  002612  6EAD               	movwf	173,c	;volatile
  7051                           
  7052                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7053  002614  0E00               	movlw	0
  7054  002616  6EAF               	movwf	175,c	;volatile
  7055  002618                     
  7056                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  7057  002618  68AB               	setf	171,c	;volatile
  7058                           
  7059                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7060  00261A  0E00               	movlw	0
  7061  00261C  6EAA               	movwf	170,c	;volatile
  7062  00261E                     
  7063                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7064  00261E  0139               	movlb	57	; () banked
  7065  002620  95A4               	bcf	164,2,b	;volatile
  7066                           
  7067                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  7068  002622  0EB0               	movlw	176
  7069  002624  6EAC               	movwf	172,c	;volatile
  7070  002626                     
  7071                           ; BSR set to: 57
  7072  002626  0012               	return		;funcret
  7073  002628                     __end_of_TMR2_Initialize:
  7074                           	callstack 0
  7075                           
  7076 ;; *************** function _SMT1_Initialize *****************
  7077 ;; Defined at:
  7078 ;;		line 60 in file "mcc_generated_files/smt1.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 8
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_SYSTEM_Initialize
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text35
  7107  0023B0                     __ptext35:
  7108                           	callstack 0
  7109  0023B0                     _SMT1_Initialize:
  7110                           	callstack 21
  7111  0023B0                     
  7112                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  7113  0023B0  0E80               	movlw	128
  7114  0023B2  013F               	movlb	63	; () banked
  7115  0023B4  6F1E               	movwf	30,b	;volatile
  7116                           
  7117                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  7118  0023B6  0E42               	movlw	66
  7119  0023B8  6F1F               	movwf	31,b	;volatile
  7120                           
  7121                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  7122  0023BA  0E00               	movlw	0
  7123  0023BC  6F20               	movwf	32,b	;volatile
  7124                           
  7125                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  7126  0023BE  0E04               	movlw	4
  7127  0023C0  6F21               	movwf	33,b	;volatile
  7128                           
  7129                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  7130  0023C2  0E00               	movlw	0
  7131  0023C4  6F23               	movwf	35,b	;volatile
  7132                           
  7133                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  7134  0023C6  0E00               	movlw	0
  7135  0023C8  6F22               	movwf	34,b	;volatile
  7136                           
  7137                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  7138  0023CA  0E01               	movlw	1
  7139  0023CC  6F1D               	movwf	29,b	;volatile
  7140  0023CE                     
  7141                           ; BSR set to: 63
  7142                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  7143  0023CE  691C               	setf	28,b	;volatile
  7144  0023D0                     
  7145                           ; BSR set to: 63
  7146                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  7147  0023D0  691B               	setf	27,b	;volatile
  7148  0023D2                     
  7149                           ; BSR set to: 63
  7150                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  7151  0023D2  0139               	movlb	57	; () banked
  7152  0023D4  8B91               	bsf	145,5,b	;volatile
  7153  0023D6                     
  7154                           ; BSR set to: 57
  7155                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  7156  0023D6  8F91               	bsf	145,7,b	;volatile
  7157  0023D8                     
  7158                           ; BSR set to: 57
  7159                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  7160  0023D8  8D91               	bsf	145,6,b	;volatile
  7161  0023DA                     
  7162                           ; BSR set to: 57
  7163                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  7164  0023DA  013F               	movlb	63	; () banked
  7165  0023DC  8F1F               	bsf	31,7,b	;volatile
  7166  0023DE                     
  7167                           ; BSR set to: 63
  7168  0023DE  0012               	return		;funcret
  7169  0023E0                     __end_of_SMT1_Initialize:
  7170                           	callstack 0
  7171                           
  7172 ;; *************** function _PWM8_Initialize *****************
  7173 ;; Defined at:
  7174 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  7175 ;; Parameters:    Size  Location     Type
  7176 ;;		None
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;		None
  7179 ;; Return value:  Size  Location     Type
  7180 ;;                  1    wreg      void 
  7181 ;; Registers used:
  7182 ;;		wreg, status,2
  7183 ;; Tracked objects:
  7184 ;;		On entry : 0/0
  7185 ;;		On exit  : 0/0
  7186 ;;		Unchanged: 0/0
  7187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7192 ;;Total ram usage:        0 bytes
  7193 ;; Hardware stack levels used: 1
  7194 ;; Hardware stack levels required when called: 8
  7195 ;; This function calls:
  7196 ;;		Nothing
  7197 ;; This function is called by:
  7198 ;;		_SYSTEM_Initialize
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text36
  7203  002644                     __ptext36:
  7204                           	callstack 0
  7205  002644                     _PWM8_Initialize:
  7206                           	callstack 21
  7207  002644                     
  7208                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  7209  002644  0E80               	movlw	128
  7210  002646  6E62               	movwf	98,c	;volatile
  7211                           
  7212                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  7213  002648  0E00               	movlw	0
  7214  00264A  6E61               	movwf	97,c	;volatile
  7215                           
  7216                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  7217  00264C  0E00               	movlw	0
  7218  00264E  6E60               	movwf	96,c	;volatile
  7219                           
  7220                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  7221  002650  013F               	movlb	63	; () banked
  7222  002652  515F               	movf	95,w,b	;volatile
  7223  002654  0B3F               	andlw	-193
  7224  002656  0980               	iorlw	128
  7225  002658  6F5F               	movwf	95,b	;volatile
  7226  00265A                     
  7227                           ; BSR set to: 63
  7228  00265A  0012               	return		;funcret
  7229  00265C                     __end_of_PWM8_Initialize:
  7230                           	callstack 0
  7231                           
  7232 ;; *************** function _PWM7_Initialize *****************
  7233 ;; Defined at:
  7234 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;		None
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;		None
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      void 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;Total ram usage:        0 bytes
  7253 ;; Hardware stack levels used: 1
  7254 ;; Hardware stack levels required when called: 8
  7255 ;; This function calls:
  7256 ;;		Nothing
  7257 ;; This function is called by:
  7258 ;;		_SYSTEM_Initialize
  7259 ;; This function uses a non-reentrant model
  7260 ;;
  7261                           
  7262                           	psect	text37
  7263  00265C                     __ptext37:
  7264                           	callstack 0
  7265  00265C                     _PWM7_Initialize:
  7266                           	callstack 21
  7267  00265C                     
  7268                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  7269  00265C  0E80               	movlw	128
  7270  00265E  6E66               	movwf	102,c	;volatile
  7271                           
  7272                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  7273  002660  0E00               	movlw	0
  7274  002662  6E65               	movwf	101,c	;volatile
  7275                           
  7276                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  7277  002664  0E00               	movlw	0
  7278  002666  6E64               	movwf	100,c	;volatile
  7279                           
  7280                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  7281  002668  013F               	movlb	63	; () banked
  7282  00266A  515F               	movf	95,w,b	;volatile
  7283  00266C  0BCF               	andlw	-49
  7284  00266E  0920               	iorlw	32
  7285  002670  6F5F               	movwf	95,b	;volatile
  7286  002672                     
  7287                           ; BSR set to: 63
  7288  002672  0012               	return		;funcret
  7289  002674                     __end_of_PWM7_Initialize:
  7290                           	callstack 0
  7291                           
  7292 ;; *************** function _PWM6_Initialize *****************
  7293 ;; Defined at:
  7294 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;Total ram usage:        0 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; Hardware stack levels required when called: 8
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_SYSTEM_Initialize
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text38
  7323  002674                     __ptext38:
  7324                           	callstack 0
  7325  002674                     _PWM6_Initialize:
  7326                           	callstack 21
  7327  002674                     
  7328                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  7329  002674  0E80               	movlw	128
  7330  002676  6E6A               	movwf	106,c	;volatile
  7331                           
  7332                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  7333  002678  0E59               	movlw	89
  7334  00267A  6E69               	movwf	105,c	;volatile
  7335                           
  7336                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  7337  00267C  0E40               	movlw	64
  7338  00267E  6E68               	movwf	104,c	;volatile
  7339                           
  7340                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  7341  002680  013F               	movlb	63	; () banked
  7342  002682  515F               	movf	95,w,b	;volatile
  7343  002684  0BF3               	andlw	-13
  7344  002686  0904               	iorlw	4
  7345  002688  6F5F               	movwf	95,b	;volatile
  7346  00268A                     
  7347                           ; BSR set to: 63
  7348  00268A  0012               	return		;funcret
  7349  00268C                     __end_of_PWM6_Initialize:
  7350                           	callstack 0
  7351                           
  7352 ;; *************** function _PWM5_Initialize *****************
  7353 ;; Defined at:
  7354 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;		None
  7357 ;; Auto vars:     Size  Location     Type
  7358 ;;		None
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  1    wreg      void 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7372 ;;Total ram usage:        0 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; Hardware stack levels required when called: 8
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_SYSTEM_Initialize
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text39
  7383  00268C                     __ptext39:
  7384                           	callstack 0
  7385  00268C                     _PWM5_Initialize:
  7386                           	callstack 21
  7387  00268C                     
  7388                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  7389  00268C  0E80               	movlw	128
  7390  00268E  6E6E               	movwf	110,c	;volatile
  7391                           
  7392                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  7393  002690  0E59               	movlw	89
  7394  002692  6E6D               	movwf	109,c	;volatile
  7395                           
  7396                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  7397  002694  0E40               	movlw	64
  7398  002696  6E6C               	movwf	108,c	;volatile
  7399                           
  7400                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  7401  002698  013F               	movlb	63	; () banked
  7402  00269A  515F               	movf	95,w,b	;volatile
  7403  00269C  0BFC               	andlw	-4
  7404  00269E  0901               	iorlw	1
  7405  0026A0  6F5F               	movwf	95,b	;volatile
  7406  0026A2                     
  7407                           ; BSR set to: 63
  7408  0026A2  0012               	return		;funcret
  7409  0026A4                     __end_of_PWM5_Initialize:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _PMD_Initialize *****************
  7413 ;; Defined at:
  7414 ;;		line 86 in file "mcc_generated_files/mcc.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, status,2
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used: 1
  7434 ;; Hardware stack levels required when called: 8
  7435 ;; This function calls:
  7436 ;;		Nothing
  7437 ;; This function is called by:
  7438 ;;		_SYSTEM_Initialize
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text40
  7443  0025A4                     __ptext40:
  7444                           	callstack 0
  7445  0025A4                     _PMD_Initialize:
  7446                           	callstack 21
  7447  0025A4                     
  7448                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  7449  0025A4  0E00               	movlw	0
  7450  0025A6  0139               	movlb	57	; () banked
  7451  0025A8  6FC0               	movwf	192,b	;volatile
  7452                           
  7453                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  7454  0025AA  0E00               	movlw	0
  7455  0025AC  6FC1               	movwf	193,b	;volatile
  7456                           
  7457                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  7458  0025AE  0E00               	movlw	0
  7459  0025B0  6FC2               	movwf	194,b	;volatile
  7460                           
  7461                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  7462  0025B2  0E00               	movlw	0
  7463  0025B4  6FC3               	movwf	195,b	;volatile
  7464                           
  7465                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  7466  0025B6  0E00               	movlw	0
  7467  0025B8  6FC4               	movwf	196,b	;volatile
  7468                           
  7469                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  7470  0025BA  0E00               	movlw	0
  7471  0025BC  6FC5               	movwf	197,b	;volatile
  7472                           
  7473                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  7474  0025BE  0E00               	movlw	0
  7475  0025C0  6FC6               	movwf	198,b	;volatile
  7476                           
  7477                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  7478  0025C2  0E00               	movlw	0
  7479  0025C4  6FC7               	movwf	199,b	;volatile
  7480  0025C6                     
  7481                           ; BSR set to: 57
  7482  0025C6  0012               	return		;funcret
  7483  0025C8                     __end_of_PMD_Initialize:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _PIN_MANAGER_Initialize *****************
  7487 ;; Defined at:
  7488 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;		None
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  1    wreg      void 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;Total ram usage:        0 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; Hardware stack levels required when called: 8
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_SYSTEM_Initialize
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text41
  7517  001A96                     __ptext41:
  7518                           	callstack 0
  7519  001A96                     _PIN_MANAGER_Initialize:
  7520                           	callstack 21
  7521  001A96                     
  7522                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7523  001A96  0E00               	movlw	0
  7524  001A98  6EBE               	movwf	190,c	;volatile
  7525                           
  7526                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7527  001A9A  0E00               	movlw	0
  7528  001A9C  6EBD               	movwf	189,c	;volatile
  7529                           
  7530                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  7531  001A9E  0E24               	movlw	36
  7532  001AA0  6EBA               	movwf	186,c	;volatile
  7533                           
  7534                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7535  001AA2  0E00               	movlw	0
  7536  001AA4  6EBB               	movwf	187,c	;volatile
  7537                           
  7538                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7539  001AA6  0E00               	movlw	0
  7540  001AA8  6EBC               	movwf	188,c	;volatile
  7541                           
  7542                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7543  001AAA  0E07               	movlw	7
  7544  001AAC  6EC6               	movwf	198,c	;volatile
  7545                           
  7546                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  7547  001AAE  0EC0               	movlw	192
  7548  001AB0  6EC2               	movwf	194,c	;volatile
  7549                           
  7550                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  7551  001AB2  0EF7               	movlw	247
  7552  001AB4  6EC3               	movwf	195,c	;volatile
  7553  001AB6                     
  7554                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7555  001AB6  68C4               	setf	196,c	;volatile
  7556  001AB8                     
  7557                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7558  001AB8  68C5               	setf	197,c	;volatile
  7559                           
  7560                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  7561  001ABA  0E1F               	movlw	31
  7562  001ABC  013A               	movlb	58	; () banked
  7563  001ABE  6F70               	movwf	112,b	;volatile
  7564  001AC0                     
  7565                           ; BSR set to: 58
  7566                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  7567  001AC0  6960               	setf	96,b	;volatile
  7568                           
  7569                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  7570  001AC2  0EC0               	movlw	192
  7571  001AC4  6F50               	movwf	80,b	;volatile
  7572                           
  7573                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7574  001AC6  0E07               	movlw	7
  7575  001AC8  6F80               	movwf	128,b	;volatile
  7576                           
  7577                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  7578  001ACA  0E7F               	movlw	127
  7579  001ACC  6F40               	movwf	64,b	;volatile
  7580                           
  7581                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7582  001ACE  0E00               	movlw	0
  7583  001AD0  6F71               	movwf	113,b	;volatile
  7584                           
  7585                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7586  001AD2  0E00               	movlw	0
  7587  001AD4  6F81               	movwf	129,b	;volatile
  7588                           
  7589                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7590  001AD6  0E00               	movlw	0
  7591  001AD8  6F51               	movwf	81,b	;volatile
  7592                           
  7593                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7594  001ADA  0E00               	movlw	0
  7595  001ADC  6F41               	movwf	65,b	;volatile
  7596                           
  7597                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7598  001ADE  0E00               	movlw	0
  7599  001AE0  6F61               	movwf	97,b	;volatile
  7600                           
  7601                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  7602  001AE2  0E00               	movlw	0
  7603  001AE4  6F5A               	movwf	90,b	;volatile
  7604                           
  7605                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  7606  001AE6  0E00               	movlw	0
  7607  001AE8  6F5B               	movwf	91,b	;volatile
  7608                           
  7609                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  7610  001AEA  0E00               	movlw	0
  7611  001AEC  6F6A               	movwf	106,b	;volatile
  7612                           
  7613                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  7614  001AEE  0E00               	movlw	0
  7615  001AF0  6F6B               	movwf	107,b	;volatile
  7616                           
  7617                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  7618  001AF2  0E00               	movlw	0
  7619  001AF4  6F7A               	movwf	122,b	;volatile
  7620                           
  7621                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  7622  001AF6  0E00               	movlw	0
  7623  001AF8  6F7B               	movwf	123,b	;volatile
  7624                           
  7625                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  7626  001AFA  0E00               	movlw	0
  7627  001AFC  6F82               	movwf	130,b	;volatile
  7628                           
  7629                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  7630  001AFE  0E00               	movlw	0
  7631  001B00  6F42               	movwf	66,b	;volatile
  7632                           
  7633                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  7634  001B02  0E00               	movlw	0
  7635  001B04  6F52               	movwf	82,b	;volatile
  7636                           
  7637                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  7638  001B06  0E00               	movlw	0
  7639  001B08  6F62               	movwf	98,b	;volatile
  7640                           
  7641                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  7642  001B0A  0E00               	movlw	0
  7643  001B0C  6F72               	movwf	114,b	;volatile
  7644  001B0E                     
  7645                           ; BSR set to: 58
  7646                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  7647  001B0E  6943               	setf	67,b	;volatile
  7648  001B10                     
  7649                           ; BSR set to: 58
  7650                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  7651  001B10  6953               	setf	83,b	;volatile
  7652  001B12                     
  7653                           ; BSR set to: 58
  7654                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  7655  001B12  6963               	setf	99,b	;volatile
  7656  001B14                     
  7657                           ; BSR set to: 58
  7658                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  7659  001B14  6973               	setf	115,b	;volatile
  7660                           
  7661                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  7662  001B16  0E07               	movlw	7
  7663  001B18  6F83               	movwf	131,b	;volatile
  7664  001B1A                     
  7665                           ; BSR set to: 58
  7666                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  7667  001B1A  6944               	setf	68,b	;volatile
  7668  001B1C                     
  7669                           ; BSR set to: 58
  7670                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  7671  001B1C  6954               	setf	84,b	;volatile
  7672  001B1E                     
  7673                           ; BSR set to: 58
  7674                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  7675  001B1E  6964               	setf	100,b	;volatile
  7676  001B20                     
  7677                           ; BSR set to: 58
  7678                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  7679  001B20  6974               	setf	116,b	;volatile
  7680                           
  7681                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  7682  001B22  0E0F               	movlw	15
  7683  001B24  6F84               	movwf	132,b	;volatile
  7684                           
  7685                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  7686  001B26  0E1F               	movlw	31
  7687  001B28  6FCF               	movwf	207,b	;volatile
  7688                           
  7689                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  7690  001B2A  0E09               	movlw	9
  7691  001B2C  6FDC               	movwf	220,b	;volatile
  7692                           
  7693                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  7694  001B2E  0E0E               	movlw	14
  7695  001B30  6F01               	movwf	1,b	;volatile
  7696                           
  7697                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  7698  001B32  0E0A               	movlw	10
  7699  001B34  6FE5               	movwf	229,b	;volatile
  7700                           
  7701                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  7702  001B36  0E0D               	movlw	13
  7703  001B38  6F00               	movwf	0,b	;volatile
  7704                           
  7705                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  7706  001B3A  0E1D               	movlw	29
  7707  001B3C  6FC9               	movwf	201,b	;volatile
  7708                           
  7709                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  7710  001B3E  0E10               	movlw	16
  7711  001B40  6F04               	movwf	4,b	;volatile
  7712                           
  7713                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  7714  001B42  0E07               	movlw	7
  7715  001B44  6FD9               	movwf	217,b	;volatile
  7716                           
  7717                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  7718  001B46  0E09               	movlw	9
  7719  001B48  6FD1               	movwf	209,b	;volatile
  7720                           
  7721                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  7722  001B4A  0E0F               	movlw	15
  7723  001B4C  6F03               	movwf	3,b	;volatile
  7724                           
  7725                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  7726  001B4E  0E13               	movlw	19
  7727  001B50  6F0B               	movwf	11,b	;volatile
  7728                           
  7729                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  7730  001B52  0E08               	movlw	8
  7731  001B54  6FDB               	movwf	219,b	;volatile
  7732                           
  7733                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  7734  001B56  0E08               	movlw	8
  7735  001B58  6FD2               	movwf	210,b	;volatile
  7736                           
  7737                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  7738  001B5A  0E1E               	movlw	30
  7739  001B5C  6FD0               	movwf	208,b	;volatile
  7740  001B5E                     
  7741                           ; BSR set to: 58
  7742  001B5E  0012               	return		;funcret
  7743  001B60                     __end_of_PIN_MANAGER_Initialize:
  7744                           	callstack 0
  7745                           
  7746 ;; *************** function _OSCILLATOR_Initialize *****************
  7747 ;; Defined at:
  7748 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;		None
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;Total ram usage:        0 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 8
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_SYSTEM_Initialize
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text42
  7777  0026A4                     __ptext42:
  7778                           	callstack 0
  7779  0026A4                     _OSCILLATOR_Initialize:
  7780                           	callstack 21
  7781  0026A4                     
  7782                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  7783  0026A4  0E60               	movlw	96
  7784  0026A6  0139               	movlb	57	; () banked
  7785  0026A8  6FD9               	movwf	217,b	;volatile
  7786                           
  7787                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  7788  0026AA  0E00               	movlw	0
  7789  0026AC  6FDB               	movwf	219,b	;volatile
  7790                           
  7791                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  7792  0026AE  0E00               	movlw	0
  7793  0026B0  6FDD               	movwf	221,b	;volatile
  7794                           
  7795                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  7796  0026B2  0E08               	movlw	8
  7797  0026B4  6FDF               	movwf	223,b	;volatile
  7798                           
  7799                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  7800  0026B6  0E00               	movlw	0
  7801  0026B8  6FDE               	movwf	222,b	;volatile
  7802  0026BA                     
  7803                           ; BSR set to: 57
  7804  0026BA  0012               	return		;funcret
  7805  0026BC                     __end_of_OSCILLATOR_Initialize:
  7806                           	callstack 0
  7807                           
  7808 ;; *************** function _INTERRUPT_Initialize *****************
  7809 ;; Defined at:
  7810 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;		None
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  state           1   19[COMRAM] _Bool 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  1    wreg      void 
  7817 ;; Registers used:
  7818 ;;		wreg, status,2
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;Total ram usage:        1 bytes
  7829 ;; Hardware stack levels used: 1
  7830 ;; Hardware stack levels required when called: 8
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_SYSTEM_Initialize
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text43
  7839  001FE0                     __ptext43:
  7840                           	callstack 0
  7841  001FE0                     _INTERRUPT_Initialize:
  7842                           	callstack 21
  7843  001FE0                     
  7844                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  7845  001FE0  8AD2               	bsf	210,5,c	;volatile
  7846  001FE2                     
  7847                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  7848  001FE2  0E00               	movlw	0
  7849  001FE4  BED2               	btfsc	16338,7,c	;volatile
  7850  001FE6  0E01               	movlw	1
  7851  001FE8  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  7852  001FEA                     
  7853                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  7854  001FEA  9ED2               	bcf	16338,7,c	;volatile
  7855                           
  7856                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  7857  001FEC  0E55               	movlw	85
  7858  001FEE  6ED4               	movwf	212,c	;volatile
  7859                           
  7860                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  7861  001FF0  0EAA               	movlw	170
  7862  001FF2  6ED4               	movwf	212,c	;volatile
  7863  001FF4                     
  7864                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  7865  001FF4  90D4               	bcf	212,0,c	;volatile
  7866                           
  7867                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  7868  001FF6  0E00               	movlw	0
  7869  001FF8  6ED7               	movwf	215,c	;volatile
  7870                           
  7871                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  7872  001FFA  0E00               	movlw	0
  7873  001FFC  6ED6               	movwf	214,c	;volatile
  7874                           
  7875                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  7876  001FFE  0E08               	movlw	8
  7877  002000  6ED5               	movwf	213,c	;volatile
  7878                           
  7879                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  7880  002002  0E55               	movlw	85
  7881  002004  6ED4               	movwf	212,c	;volatile
  7882                           
  7883                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  7884  002006  0EAA               	movlw	170
  7885  002008  6ED4               	movwf	212,c	;volatile
  7886  00200A                     
  7887                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  7888  00200A  80D4               	bsf	212,0,c	;volatile
  7889  00200C                     
  7890                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  7891  00200C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  7892  00200E  D002               	bra	u1135
  7893  002010  9ED2               	bcf	16338,7,c	;volatile
  7894  002012  D001               	bra	u1136
  7895  002014                     u1135:
  7896  002014  8ED2               	bsf	16338,7,c	;volatile
  7897  002016                     u1136:
  7898  002016                     
  7899                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  7900  002016  0139               	movlb	57	; () banked
  7901  002018  9983               	bcf	131,4,b	;volatile
  7902  00201A                     
  7903                           ; BSR set to: 57
  7904                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  7905  00201A  9783               	bcf	131,3,b	;volatile
  7906  00201C                     
  7907                           ; BSR set to: 57
  7908                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  7909  00201C  8F81               	bsf	129,7,b	;volatile
  7910  00201E                     
  7911                           ; BSR set to: 57
  7912                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  7913  00201E  8B81               	bsf	129,5,b	;volatile
  7914  002020                     
  7915                           ; BSR set to: 57
  7916                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  7917  002020  8D81               	bsf	129,6,b	;volatile
  7918  002022                     
  7919                           ; BSR set to: 57
  7920                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  7921  002022  818A               	bsf	138,0,b	;volatile
  7922  002024                     
  7923                           ; BSR set to: 57
  7924                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  7925  002024  8F88               	bsf	136,7,b	;volatile
  7926  002026                     
  7927                           ; BSR set to: 57
  7928                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  7929  002026  9187               	bcf	135,0,b	;volatile
  7930  002028                     
  7931                           ; BSR set to: 57
  7932                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  7933  002028  8389               	bsf	137,1,b	;volatile
  7934  00202A                     
  7935                           ; BSR set to: 57
  7936  00202A  0012               	return		;funcret
  7937  00202C                     __end_of_INTERRUPT_Initialize:
  7938                           	callstack 0
  7939                           
  7940 ;; *************** function _CLC3_Initialize *****************
  7941 ;; Defined at:
  7942 ;;		line 58 in file "mcc_generated_files/clc3.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;		None
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      void 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;Total ram usage:        0 bytes
  7961 ;; Hardware stack levels used: 1
  7962 ;; Hardware stack levels required when called: 8
  7963 ;; This function calls:
  7964 ;;		Nothing
  7965 ;; This function is called by:
  7966 ;;		_SYSTEM_Initialize
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text44
  7971  0024F8                     __ptext44:
  7972                           	callstack 0
  7973  0024F8                     _CLC3_Initialize:
  7974                           	callstack 21
  7975  0024F8                     
  7976                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  7977  0024F8  0E00               	movlw	0
  7978  0024FA  013C               	movlb	60	; () banked
  7979  0024FC  6F61               	movwf	97,b	;volatile
  7980                           
  7981                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  7982  0024FE  0E03               	movlw	3
  7983  002500  6F62               	movwf	98,b	;volatile
  7984                           
  7985                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  7986  002502  0E02               	movlw	2
  7987  002504  6F63               	movwf	99,b	;volatile
  7988                           
  7989                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  7990  002506  0E00               	movlw	0
  7991  002508  6F64               	movwf	100,b	;volatile
  7992                           
  7993                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  7994  00250A  0E00               	movlw	0
  7995  00250C  6F65               	movwf	101,b	;volatile
  7996                           
  7997                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  7998  00250E  0E02               	movlw	2
  7999  002510  6F66               	movwf	102,b	;volatile
  8000                           
  8001                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  8002  002512  0E08               	movlw	8
  8003  002514  6F67               	movwf	103,b	;volatile
  8004                           
  8005                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  8006  002516  0E00               	movlw	0
  8007  002518  6F68               	movwf	104,b	;volatile
  8008                           
  8009                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  8010  00251A  0E00               	movlw	0
  8011  00251C  6F69               	movwf	105,b	;volatile
  8012                           
  8013                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  8014  00251E  0E85               	movlw	133
  8015  002520  6F60               	movwf	96,b	;volatile
  8016  002522                     
  8017                           ; BSR set to: 60
  8018  002522  0012               	return		;funcret
  8019  002524                     __end_of_CLC3_Initialize:
  8020                           	callstack 0
  8021                           
  8022 ;; *************** function _CCP4_Initialize *****************
  8023 ;; Defined at:
  8024 ;;		line 78 in file "mcc_generated_files/ccp4.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2, status,0, cstack
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used: 1
  8044 ;; Hardware stack levels required when called: 9
  8045 ;; This function calls:
  8046 ;;		_CCP4_SetCallBack
  8047 ;; This function is called by:
  8048 ;;		_SYSTEM_Initialize
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text45
  8053  002470                     __ptext45:
  8054                           	callstack 0
  8055  002470                     _CCP4_Initialize:
  8056                           	callstack 20
  8057  002470                     
  8058                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
  8059  002470  0E83               	movlw	131
  8060  002472  6E72               	movwf	114,c	;volatile
  8061                           
  8062                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
  8063  002474  0E00               	movlw	0
  8064  002476  6E73               	movwf	115,c	;volatile
  8065                           
  8066                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
  8067  002478  0E00               	movlw	0
  8068  00247A  6E71               	movwf	113,c	;volatile
  8069                           
  8070                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
  8071  00247C  0E00               	movlw	0
  8072  00247E  6E70               	movwf	112,c	;volatile
  8073  002480                     
  8074                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  8075  002480  0E40               	movlw	low _CCP4_DefaultCallBack
  8076  002482  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  8077  002484  0E24               	movlw	high _CCP4_DefaultCallBack
  8078  002486  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  8079  002488  EC88  F013         	call	_CCP4_SetCallBack	;wreg free
  8080  00248C                     
  8081                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
  8082  00248C  013F               	movlb	63	; () banked
  8083  00248E  515E               	movf	94,w,b	;volatile
  8084  002490  0B3F               	andlw	-193
  8085  002492  0980               	iorlw	128
  8086  002494  6F5E               	movwf	94,b	;volatile
  8087  002496                     
  8088                           ; BSR set to: 63
  8089                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
  8090  002496  0139               	movlb	57	; () banked
  8091  002498  91AA               	bcf	170,0,b	;volatile
  8092  00249A                     
  8093                           ; BSR set to: 57
  8094                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
  8095  00249A  819A               	bsf	154,0,b	;volatile
  8096  00249C                     
  8097                           ; BSR set to: 57
  8098  00249C  0012               	return		;funcret
  8099  00249E                     __end_of_CCP4_Initialize:
  8100                           	callstack 0
  8101                           
  8102 ;; *************** function _CCP4_SetCallBack *****************
  8103 ;; Defined at:
  8104 ;;		line 75 in file "mcc_generated_files/ccp4.c"
  8105 ;; Parameters:    Size  Location     Type
  8106 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8107 ;;		 -> CCP4_DefaultCallBack(1), 
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;Total ram usage:        2 bytes
  8124 ;; Hardware stack levels used: 1
  8125 ;; Hardware stack levels required when called: 8
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		_CCP4_Initialize
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text46
  8134  002710                     __ptext46:
  8135                           	callstack 0
  8136  002710                     _CCP4_SetCallBack:
  8137                           	callstack 20
  8138  002710                     
  8139                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
  8140  002710  C014  F0CF         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  8141  002714  C015  F0D0         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  8142  002718  0012               	return		;funcret
  8143  00271A                     __end_of_CCP4_SetCallBack:
  8144                           	callstack 0
  8145                           
  8146 ;; *************** function _CCP3_Initialize *****************
  8147 ;; Defined at:
  8148 ;;		line 75 in file "mcc_generated_files/ccp3.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8166 ;;Total ram usage:        0 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; Hardware stack levels required when called: 9
  8169 ;; This function calls:
  8170 ;;		_CCP3_SetCallBack
  8171 ;; This function is called by:
  8172 ;;		_SYSTEM_Initialize
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           	psect	text47
  8177  00249E                     __ptext47:
  8178                           	callstack 0
  8179  00249E                     _CCP3_Initialize:
  8180                           	callstack 20
  8181  00249E                     
  8182                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
  8183  00249E  0E83               	movlw	131
  8184  0024A0  6E76               	movwf	118,c	;volatile
  8185                           
  8186                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
  8187  0024A2  0E00               	movlw	0
  8188  0024A4  6E77               	movwf	119,c	;volatile
  8189                           
  8190                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
  8191  0024A6  0E00               	movlw	0
  8192  0024A8  6E75               	movwf	117,c	;volatile
  8193                           
  8194                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
  8195  0024AA  0E00               	movlw	0
  8196  0024AC  6E74               	movwf	116,c	;volatile
  8197  0024AE                     
  8198                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8199  0024AE  0E10               	movlw	low _CCP3_DefaultCallBack
  8200  0024B0  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
  8201  0024B2  0E24               	movlw	high _CCP3_DefaultCallBack
  8202  0024B4  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
  8203  0024B6  EC8D  F013         	call	_CCP3_SetCallBack	;wreg free
  8204  0024BA                     
  8205                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
  8206  0024BA  013F               	movlb	63	; () banked
  8207  0024BC  515E               	movf	94,w,b	;volatile
  8208  0024BE  0BCF               	andlw	-49
  8209  0024C0  0920               	iorlw	32
  8210  0024C2  6F5E               	movwf	94,b	;volatile
  8211  0024C4                     
  8212                           ; BSR set to: 63
  8213                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
  8214  0024C4  0139               	movlb	57	; () banked
  8215  0024C6  93A9               	bcf	169,1,b	;volatile
  8216  0024C8                     
  8217                           ; BSR set to: 57
  8218                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
  8219  0024C8  8399               	bsf	153,1,b	;volatile
  8220  0024CA                     
  8221                           ; BSR set to: 57
  8222  0024CA  0012               	return		;funcret
  8223  0024CC                     __end_of_CCP3_Initialize:
  8224                           	callstack 0
  8225                           
  8226 ;; *************** function _CCP3_SetCallBack *****************
  8227 ;; Defined at:
  8228 ;;		line 119 in file "mcc_generated_files/ccp3.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8231 ;;		 -> CCP3_DefaultCallBack(1), 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8247 ;;Total ram usage:        2 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 8
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_CCP3_Initialize
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text48
  8258  00271A                     __ptext48:
  8259                           	callstack 0
  8260  00271A                     _CCP3_SetCallBack:
  8261                           	callstack 20
  8262  00271A                     
  8263                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
  8264  00271A  C014  F0D1         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
  8265  00271E  C015  F0D2         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
  8266  002722  0012               	return		;funcret
  8267  002724                     __end_of_CCP3_SetCallBack:
  8268                           	callstack 0
  8269                           
  8270 ;; *************** function _ADCC_Initialize *****************
  8271 ;; Defined at:
  8272 ;;		line 62 in file "mcc_generated_files/adcc.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;		None
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;Total ram usage:        0 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 8
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_SYSTEM_Initialize
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text49
  8301  001F30                     __ptext49:
  8302                           	callstack 0
  8303  001F30                     _ADCC_Initialize:
  8304                           	callstack 21
  8305  001F30                     
  8306                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8307  001F30  0E00               	movlw	0
  8308  001F32  013E               	movlb	62	; () banked
  8309  001F34  6FDE               	movwf	222,b	;volatile
  8310                           
  8311                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8312  001F36  0E00               	movlw	0
  8313  001F38  6FDF               	movwf	223,b	;volatile
  8314                           
  8315                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8316  001F3A  0E00               	movlw	0
  8317  001F3C  6FE0               	movwf	224,b	;volatile
  8318                           
  8319                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8320  001F3E  0E00               	movlw	0
  8321  001F40  6FE1               	movwf	225,b	;volatile
  8322                           
  8323                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8324  001F42  0E00               	movlw	0
  8325  001F44  6FE4               	movwf	228,b	;volatile
  8326                           
  8327                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8328  001F46  0E00               	movlw	0
  8329  001F48  6FE5               	movwf	229,b	;volatile
  8330                           
  8331                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  8332  001F4A  0E00               	movlw	0
  8333  001F4C  6FEA               	movwf	234,b	;volatile
  8334                           
  8335                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  8336  001F4E  0E00               	movlw	0
  8337  001F50  6FEC               	movwf	236,b	;volatile
  8338                           
  8339                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  8340  001F52  0E00               	movlw	0
  8341  001F54  6FF1               	movwf	241,b	;volatile
  8342                           
  8343                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
  8344  001F56  0E58               	movlw	88
  8345  001F58  6FF3               	movwf	243,b	;volatile
  8346                           
  8347                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
  8348  001F5A  0E02               	movlw	2
  8349  001F5C  6FF4               	movwf	244,b	;volatile
  8350                           
  8351                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  8352  001F5E  0E00               	movlw	0
  8353  001F60  6FF5               	movwf	245,b	;volatile
  8354                           
  8355                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  8356  001F62  0E00               	movlw	0
  8357  001F64  6FF6               	movwf	246,b	;volatile
  8358                           
  8359                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  8360  001F66  0E00               	movlw	0
  8361  001F68  6FF7               	movwf	247,b	;volatile
  8362                           
  8363                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  8364  001F6A  0E00               	movlw	0
  8365  001F6C  6FF9               	movwf	249,b	;volatile
  8366                           
  8367                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  8368  001F6E  0E00               	movlw	0
  8369  001F70  6FFA               	movwf	250,b	;volatile
  8370                           
  8371                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  8372  001F72  0E00               	movlw	0
  8373  001F74  6FFB               	movwf	251,b	;volatile
  8374                           
  8375                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  8376  001F76  0E00               	movlw	0
  8377  001F78  6FFC               	movwf	252,b	;volatile
  8378                           
  8379                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  8380  001F7A  0E00               	movlw	0
  8381  001F7C  6FFD               	movwf	253,b	;volatile
  8382                           
  8383                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  8384  001F7E  0E00               	movlw	0
  8385  001F80  6FFE               	movwf	254,b	;volatile
  8386                           
  8387                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  8388  001F82  0E1F               	movlw	31
  8389  001F84  6FFF               	movwf	255,b	;volatile
  8390                           
  8391                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  8392  001F86  0E84               	movlw	132
  8393  001F88  6FF8               	movwf	248,b	;volatile
  8394  001F8A                     
  8395                           ; BSR set to: 62
  8396  001F8A  0012               	return		;funcret
  8397  001F8C                     __end_of_ADCC_Initialize:
  8398                           	callstack 0
  8399                           
  8400 ;; *************** function _UART1_tx_vect_isr *****************
  8401 ;; Defined at:
  8402 ;;		line 235 in file "mcc_generated_files/uart1.c"
  8403 ;; Parameters:    Size  Location     Type
  8404 ;;		None
  8405 ;; Auto vars:     Size  Location     Type
  8406 ;;		None
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8420 ;;Total ram usage:        1 bytes
  8421 ;; Hardware stack levels used: 1
  8422 ;; Hardware stack levels required when called: 5
  8423 ;; This function calls:
  8424 ;;		Absolute function
  8425 ;;		_UART1_Transmit_ISR
  8426 ;; This function is called by:
  8427 ;;		Interrupt level 1
  8428 ;; This function uses a non-reentrant model
  8429 ;;
  8430                           
  8431                           	psect	text50
  8432  002154                     __ptext50:
  8433                           	callstack 0
  8434  002154                     _UART1_tx_vect_isr:
  8435                           	callstack 20
  8436                           
  8437                           ; BSR set to: 62
  8438                           ;incstack = 0
  8439  002154  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
  8440  00215A                     
  8441                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
  8442  00215A  0100               	movlb	0	; () banked
  8443  00215C  51D9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8444  00215E  11DA               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8445  002160  B4D8               	btfsc	status,2,c
  8446  002162  EFB5  F010         	goto	i1u360_21
  8447  002166  EFB7  F010         	goto	i1u360_20
  8448  00216A                     i1u360_21:
  8449  00216A  EFC4  F010         	goto	i1l324
  8450  00216E                     i1u360_20:
  8451  00216E                     
  8452                           ; BSR set to: 0
  8453                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
  8454  00216E  D802               	call	i1u361_28
  8455  002170  EFC4  F010         	goto	i1u361_29
  8456  002174                     i1u361_28:
  8457  002174  0005               	push	
  8458  002176  6EFA               	movwf	pclath,c
  8459  002178  51D9               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8460  00217A  6EFD               	movwf	tosl,c
  8461  00217C  51DA               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8462  00217E  6EFE               	movwf	tosh,c
  8463  002180  50F8               	movf	tblptru,w,c
  8464  002182  6EFF               	movwf	tosu,c
  8465  002184  50FA               	movf	pclath,w,c
  8466  002186  0012               	return		;indir
  8467  002188                     i1u361_29:
  8468  002188                     i1l324:
  8469  002188  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
  8470  00218E  0011               	retfie		f
  8471  002190                     __end_of_UART1_tx_vect_isr:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function _UART1_Transmit_ISR *****************
  8475 ;; Defined at:
  8476 ;;		line 253 in file "mcc_generated_files/uart1.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;		None
  8479 ;; Auto vars:     Size  Location     Type
  8480 ;;		None
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;Total ram usage:        0 bytes
  8495 ;; Hardware stack levels used: 1
  8496 ;; Hardware stack levels required when called: 4
  8497 ;; This function calls:
  8498 ;;		Nothing
  8499 ;; This function is called by:
  8500 ;;		_UART1_Initialize
  8501 ;;		_UART1_tx_vect_isr
  8502 ;; This function uses a non-reentrant model
  8503 ;;
  8504                           
  8505                           	psect	text51
  8506  00210A                     __ptext51:
  8507                           	callstack 0
  8508  00210A                     _UART1_Transmit_ISR:
  8509                           	callstack 20
  8510  00210A                     
  8511                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8512  00210A  0E08               	movlw	8
  8513  00210C  0100               	movlb	0	; () banked
  8514  00210E  61DD               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
  8515  002110  EF8C  F010         	goto	i1u344_21
  8516  002114  EF8E  F010         	goto	i1u344_20
  8517  002118                     i1u344_21:
  8518  002118  EFA6  F010         	goto	i1l333
  8519  00211C                     i1u344_20:
  8520  00211C                     
  8521                           ; BSR set to: 0
  8522                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8523  00211C  0E70               	movlw	low _uart1TxBuffer
  8524  00211E  2444               	addwf	_uart1TxTail^0,w,c	;volatile
  8525  002120  6ED9               	movwf	fsr2l,c
  8526  002122  6ADA               	clrf	fsr2h,c
  8527  002124  0E00               	movlw	high _uart1TxBuffer
  8528  002126  22DA               	addwfc	fsr2h,f,c
  8529  002128  50DF               	movf	indf2,w,c
  8530  00212A  013D               	movlb	61	; () banked
  8531  00212C  6FEA               	movwf	234,b	;volatile
  8532  00212E                     
  8533                           ; BSR set to: 61
  8534  00212E  2A44               	incf	_uart1TxTail^0,f,c	;volatile
  8535  002130                     
  8536                           ; BSR set to: 61
  8537                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8538  002130  0E07               	movlw	7
  8539  002132  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
  8540  002134  EF9E  F010         	goto	i1u345_21
  8541  002138  EFA0  F010         	goto	i1u345_20
  8542  00213C                     i1u345_21:
  8543  00213C  EFA2  F010         	goto	i1l4864
  8544  002140                     i1u345_20:
  8545  002140                     
  8546                           ; BSR set to: 61
  8547                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
  8548  002140  0E00               	movlw	0
  8549  002142  6E44               	movwf	_uart1TxTail^0,c	;volatile
  8550  002144                     i1l4864:
  8551                           
  8552                           ; BSR set to: 61
  8553                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
  8554  002144  0100               	movlb	0	; () banked
  8555  002146  2BDD               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8556                           
  8557                           ;mcc_generated_files/uart1.c: 264:     }
  8558  002148  EFA8  F010         	goto	i1l336
  8559  00214C                     i1l333:
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
  8563  00214C  0139               	movlb	57	; () banked
  8564  00214E  9993               	bcf	147,4,b	;volatile
  8565  002150                     i1l336:
  8566  002150  0012               	return		;funcret
  8567  002152                     __end_of_UART1_Transmit_ISR:
  8568                           	callstack 0
  8569                           
  8570 ;; *************** function _UART1_rx_vect_isr *****************
  8571 ;; Defined at:
  8572 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;		None
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;		None
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      void 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8590 ;;Total ram usage:        1 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; Hardware stack levels required when called: 7
  8593 ;; This function calls:
  8594 ;;		Absolute function
  8595 ;;		_UART1_Receive_ISR
  8596 ;; This function is called by:
  8597 ;;		Interrupt level 1
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text52
  8602  002190                     __ptext52:
  8603                           	callstack 0
  8604  002190                     _UART1_rx_vect_isr:
  8605                           	callstack 18
  8606                           
  8607                           ;incstack = 0
  8608  002190  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
  8609  002196                     
  8610                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
  8611  002196  0100               	movlb	0	; () banked
  8612  002198  51DB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8613  00219A  11DC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8614  00219C  B4D8               	btfsc	status,2,c
  8615  00219E  EFD3  F010         	goto	i1u362_21
  8616  0021A2  EFD5  F010         	goto	i1u362_20
  8617  0021A6                     i1u362_21:
  8618  0021A6  EFE2  F010         	goto	i1l330
  8619  0021AA                     i1u362_20:
  8620  0021AA                     
  8621                           ; BSR set to: 0
  8622                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
  8623  0021AA  D802               	call	i1u363_28
  8624  0021AC  EFE2  F010         	goto	i1u363_29
  8625  0021B0                     i1u363_28:
  8626  0021B0  0005               	push	
  8627  0021B2  6EFA               	movwf	pclath,c
  8628  0021B4  51DB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8629  0021B6  6EFD               	movwf	tosl,c
  8630  0021B8  51DC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8631  0021BA  6EFE               	movwf	tosh,c
  8632  0021BC  50F8               	movf	tblptru,w,c
  8633  0021BE  6EFF               	movwf	tosu,c
  8634  0021C0  50FA               	movf	pclath,w,c
  8635  0021C2  0012               	return		;indir
  8636  0021C4                     i1u363_29:
  8637  0021C4                     i1l330:
  8638  0021C4  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
  8639  0021CA  0011               	retfie		f
  8640  0021CC                     __end_of_UART1_rx_vect_isr:
  8641                           	callstack 0
  8642                           
  8643 ;; *************** function _UART1_Receive_ISR *****************
  8644 ;; Defined at:
  8645 ;;		line 273 in file "mcc_generated_files/uart1.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;		None
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;		None
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;Total ram usage:        0 bytes
  8664 ;; Hardware stack levels used: 1
  8665 ;; Hardware stack levels required when called: 6
  8666 ;; This function calls:
  8667 ;;		Absolute function
  8668 ;;		_UART1_DefaultErrorHandler
  8669 ;;		_UART1_DefaultFramingErrorHandler
  8670 ;;		_UART1_DefaultOverrunErrorHandler
  8671 ;;		_UART1_RxDataHandler
  8672 ;; This function is called by:
  8673 ;;		_UART1_Initialize
  8674 ;;		_UART1_rx_vect_isr
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text53
  8679  001B60                     __ptext53:
  8680                           	callstack 0
  8681  001B60                     _UART1_Receive_ISR:
  8682                           	callstack 18
  8683  001B60                     
  8684                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8685  001B60  0E60               	movlw	low _uart1RxStatusBuffer
  8686  001B62  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8687  001B64  6ED9               	movwf	fsr2l,c
  8688  001B66  6ADA               	clrf	fsr2h,c
  8689  001B68  0E00               	movlw	high _uart1RxStatusBuffer
  8690  001B6A  22DA               	addwfc	fsr2h,f,c
  8691  001B6C  0E00               	movlw	0
  8692  001B6E  6EDF               	movwf	indf2,c
  8693  001B70                     
  8694                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
  8695  001B70  013D               	movlb	61	; () banked
  8696  001B72  A7F9               	btfss	249,3,b	;volatile
  8697  001B74  EFBE  F00D         	goto	i1u346_21
  8698  001B78  EFC0  F00D         	goto	i1u346_20
  8699  001B7C                     i1u346_21:
  8700  001B7C  EFD5  F00D         	goto	i1l4874
  8701  001B80                     i1u346_20:
  8702  001B80                     
  8703                           ; BSR set to: 61
  8704                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8705  001B80  0E60               	movlw	low _uart1RxStatusBuffer
  8706  001B82  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8707  001B84  6ED9               	movwf	fsr2l,c
  8708  001B86  6ADA               	clrf	fsr2h,c
  8709  001B88  0E00               	movlw	high _uart1RxStatusBuffer
  8710  001B8A  22DA               	addwfc	fsr2h,f,c
  8711  001B8C  0100               	movlb	0	; () banked
  8712  001B8E  82DF               	bsf	indf2,1,c
  8713  001B90                     
  8714                           ; BSR set to: 0
  8715                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
  8716  001B90  D802               	call	i1u347_28
  8717  001B92  EFD5  F00D         	goto	i1u347_29
  8718  001B96                     i1u347_28:
  8719  001B96  0005               	push	
  8720  001B98  6EFA               	movwf	pclath,c
  8721  001B9A  51D7               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8722  001B9C  6EFD               	movwf	tosl,c
  8723  001B9E  51D8               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8724  001BA0  6EFE               	movwf	tosh,c
  8725  001BA2  50F8               	movf	tblptru,w,c
  8726  001BA4  6EFF               	movwf	tosu,c
  8727  001BA6  50FA               	movf	pclath,w,c
  8728  001BA8  0012               	return		;indir
  8729  001BAA                     i1u347_29:
  8730  001BAA                     i1l4874:
  8731                           
  8732                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
  8733  001BAA  013D               	movlb	61	; () banked
  8734  001BAC  A3F9               	btfss	249,1,b	;volatile
  8735  001BAE  EFDB  F00D         	goto	i1u348_21
  8736  001BB2  EFDD  F00D         	goto	i1u348_20
  8737  001BB6                     i1u348_21:
  8738  001BB6  EFF2  F00D         	goto	i1l4880
  8739  001BBA                     i1u348_20:
  8740  001BBA                     
  8741                           ; BSR set to: 61
  8742                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8743  001BBA  0E60               	movlw	low _uart1RxStatusBuffer
  8744  001BBC  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8745  001BBE  6ED9               	movwf	fsr2l,c
  8746  001BC0  6ADA               	clrf	fsr2h,c
  8747  001BC2  0E00               	movlw	high _uart1RxStatusBuffer
  8748  001BC4  22DA               	addwfc	fsr2h,f,c
  8749  001BC6  0100               	movlb	0	; () banked
  8750  001BC8  84DF               	bsf	indf2,2,c
  8751  001BCA                     
  8752                           ; BSR set to: 0
  8753                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
  8754  001BCA  D802               	call	i1u349_28
  8755  001BCC  EFF2  F00D         	goto	i1u349_29
  8756  001BD0                     i1u349_28:
  8757  001BD0  0005               	push	
  8758  001BD2  6EFA               	movwf	pclath,c
  8759  001BD4  51D5               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8760  001BD6  6EFD               	movwf	tosl,c
  8761  001BD8  51D6               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8762  001BDA  6EFE               	movwf	tosh,c
  8763  001BDC  50F8               	movf	tblptru,w,c
  8764  001BDE  6EFF               	movwf	tosu,c
  8765  001BE0  50FA               	movf	pclath,w,c
  8766  001BE2  0012               	return		;indir
  8767  001BE4                     i1u349_29:
  8768  001BE4                     i1l4880:
  8769                           
  8770                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8771  001BE4  0E60               	movlw	low _uart1RxStatusBuffer
  8772  001BE6  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8773  001BE8  6ED9               	movwf	fsr2l,c
  8774  001BEA  6ADA               	clrf	fsr2h,c
  8775  001BEC  0E00               	movlw	high _uart1RxStatusBuffer
  8776  001BEE  22DA               	addwfc	fsr2h,f,c
  8777  001BF0  50DF               	movf	indf2,w,c
  8778  001BF2  B4D8               	btfsc	status,2,c
  8779  001BF4  EFFE  F00D         	goto	i1u350_21
  8780  001BF8  EF00  F00E         	goto	i1u350_20
  8781  001BFC                     i1u350_21:
  8782  001BFC  EF10  F00E         	goto	i1l4884
  8783  001C00                     i1u350_20:
  8784  001C00                     
  8785                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
  8786  001C00  D802               	call	i1u351_28
  8787  001C02  EF0E  F00E         	goto	i1u351_29
  8788  001C06                     i1u351_28:
  8789  001C06  0005               	push	
  8790  001C08  0100               	movlb	0	; () banked
  8791  001C0A  6EFA               	movwf	pclath,c
  8792  001C0C  51D3               	movf	_UART1_ErrorHandler& (0+255),w,b
  8793  001C0E  6EFD               	movwf	tosl,c
  8794  001C10  51D4               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8795  001C12  6EFE               	movwf	tosh,c
  8796  001C14  50F8               	movf	tblptru,w,c
  8797  001C16  6EFF               	movwf	tosu,c
  8798  001C18  50FA               	movf	pclath,w,c
  8799  001C1A  0012               	return		;indir
  8800  001C1C                     i1u351_29:
  8801                           
  8802                           ;mcc_generated_files/uart1.c: 290:     } else {
  8803  001C1C  EF12  F00E         	goto	i1l343
  8804  001C20                     i1l4884:
  8805                           
  8806                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
  8807  001C20  EC92  F012         	call	_UART1_RxDataHandler	;wreg free
  8808  001C24                     i1l343:
  8809  001C24  0012               	return		;funcret
  8810  001C26                     __end_of_UART1_Receive_ISR:
  8811                           	callstack 0
  8812                           
  8813 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  8814 ;; Defined at:
  8815 ;;		line 309 in file "mcc_generated_files/uart1.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		None
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used: 1
  8835 ;; Hardware stack levels required when called: 4
  8836 ;; This function calls:
  8837 ;;		Nothing
  8838 ;; This function is called by:
  8839 ;;		_UART1_Initialize
  8840 ;;		_UART1_Receive_ISR
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           	psect	text54
  8845  002732                     __ptext54:
  8846                           	callstack 0
  8847  002732                     _UART1_DefaultOverrunErrorHandler:
  8848                           	callstack 19
  8849  002732  0012               	return		;funcret
  8850  002734                     __end_of_UART1_DefaultOverrunErrorHandler:
  8851                           	callstack 0
  8852                           
  8853 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  8854 ;; Defined at:
  8855 ;;		line 307 in file "mcc_generated_files/uart1.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;		None
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		None
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;Total ram usage:        0 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 4
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_UART1_Initialize
  8880 ;;		_UART1_Receive_ISR
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text55
  8885  002734                     __ptext55:
  8886                           	callstack 0
  8887  002734                     _UART1_DefaultFramingErrorHandler:
  8888                           	callstack 19
  8889  002734  0012               	return		;funcret
  8890  002736                     __end_of_UART1_DefaultFramingErrorHandler:
  8891                           	callstack 0
  8892                           
  8893 ;; *************** function _UART1_DefaultErrorHandler *****************
  8894 ;; Defined at:
  8895 ;;		line 311 in file "mcc_generated_files/uart1.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;		None
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;		None
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;Total ram usage:        0 bytes
  8914 ;; Hardware stack levels used: 1
  8915 ;; Hardware stack levels required when called: 5
  8916 ;; This function calls:
  8917 ;;		_UART1_RxDataHandler
  8918 ;; This function is called by:
  8919 ;;		_UART1_Initialize
  8920 ;;		_UART1_Receive_ISR
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text56
  8925  002724                     __ptext56:
  8926                           	callstack 0
  8927  002724                     _UART1_DefaultErrorHandler:
  8928                           	callstack 18
  8929  002724                     
  8930                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
  8931  002724  EC92  F012         	call	_UART1_RxDataHandler	;wreg free
  8932  002728  0012               	return		;funcret
  8933  00272A                     __end_of_UART1_DefaultErrorHandler:
  8934                           	callstack 0
  8935                           
  8936 ;; *************** function _UART1_RxDataHandler *****************
  8937 ;; Defined at:
  8938 ;;		line 297 in file "mcc_generated_files/uart1.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; Hardware stack levels required when called: 4
  8959 ;; This function calls:
  8960 ;;		Nothing
  8961 ;; This function is called by:
  8962 ;;		_UART1_Receive_ISR
  8963 ;;		_UART1_DefaultErrorHandler
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text57
  8968  002524                     __ptext57:
  8969                           	callstack 0
  8970  002524                     _UART1_RxDataHandler:
  8971                           	callstack 19
  8972  002524                     
  8973                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  8974  002524  0E68               	movlw	low _uart1RxBuffer
  8975  002526  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8976  002528  6ED9               	movwf	fsr2l,c
  8977  00252A  6ADA               	clrf	fsr2h,c
  8978  00252C  0E00               	movlw	high _uart1RxBuffer
  8979  00252E  22DA               	addwfc	fsr2h,f,c
  8980  002530  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  8981  002536  2A43               	incf	_uart1RxHead^0,f,c	;volatile
  8982  002538                     
  8983                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  8984  002538  0E07               	movlw	7
  8985  00253A  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
  8986  00253C  EFA2  F012         	goto	i1u208_21
  8987  002540  EFA4  F012         	goto	i1u208_20
  8988  002544                     i1u208_21:
  8989  002544  EFA6  F012         	goto	i1l3902
  8990  002548                     i1u208_20:
  8991  002548                     
  8992                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
  8993  002548  0E00               	movlw	0
  8994  00254A  6E43               	movwf	_uart1RxHead^0,c	;volatile
  8995  00254C                     i1l3902:
  8996                           
  8997                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
  8998  00254C  2A41               	incf	_uart1RxCount^0,f,c	;volatile
  8999  00254E  0012               	return		;funcret
  9000  002550                     __end_of_UART1_RxDataHandler:
  9001                           	callstack 0
  9002                           
  9003 ;; *************** function _TMR4_ISR *****************
  9004 ;; Defined at:
  9005 ;;		line 166 in file "mcc_generated_files/tmr4.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;		None
  9008 ;; Auto vars:     Size  Location     Type
  9009 ;;		None
  9010 ;; Return value:  Size  Location     Type
  9011 ;;                  1    wreg      void 
  9012 ;; Registers used:
  9013 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9014 ;; Tracked objects:
  9015 ;;		On entry : 0/0
  9016 ;;		On exit  : 0/0
  9017 ;;		Unchanged: 0/0
  9018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;Total ram usage:        1 bytes
  9024 ;; Hardware stack levels used: 1
  9025 ;; Hardware stack levels required when called: 6
  9026 ;; This function calls:
  9027 ;;		_TMR4_CallBack
  9028 ;; This function is called by:
  9029 ;;		Interrupt level 1
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text58
  9034  002204                     __ptext58:
  9035                           	callstack 0
  9036  002204                     _TMR4_ISR:
  9037                           	callstack 19
  9038                           
  9039                           ;incstack = 0
  9040  002204  006F FF60  F013    	movff	status,??_TMR4_ISR
  9041  00220A                     
  9042                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
  9043  00220A  0139               	movlb	57	; () banked
  9044  00220C  91A7               	bcf	167,0,b	;volatile
  9045  00220E                     
  9046                           ; BSR set to: 57
  9047                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
  9048  00220E  4A3C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
  9049  002210  2A3D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
  9050  002212  503D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
  9051  002214  E109               	bnz	i1u368_20
  9052  002216  0E0A               	movlw	10
  9053  002218  5C3C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
  9054  00221A  A0D8               	btfss	status,0,c
  9055  00221C  EF12  F011         	goto	i1u368_21
  9056  002220  EF14  F011         	goto	i1u368_20
  9057  002224                     i1u368_21:
  9058  002224  EF1A  F011         	goto	i1l688
  9059  002228                     i1u368_20:
  9060  002228                     
  9061                           ; BSR set to: 57
  9062                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
  9063  002228  ECF0  F011         	call	_TMR4_CallBack	;wreg free
  9064  00222C                     
  9065                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
  9066  00222C  0E00               	movlw	0
  9067  00222E  6E3D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
  9068  002230  0E00               	movlw	0
  9069  002232  6E3C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
  9070  002234                     i1l688:
  9071  002234  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
  9072  00223A  0011               	retfie		f
  9073  00223C                     __end_of_TMR4_ISR:
  9074                           	callstack 0
  9075                           
  9076 ;; *************** function _TMR4_CallBack *****************
  9077 ;; Defined at:
  9078 ;;		line 184 in file "mcc_generated_files/tmr4.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;		None
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;		None
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      void 
  9085 ;; Registers used:
  9086 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;Total ram usage:        0 bytes
  9097 ;; Hardware stack levels used: 1
  9098 ;; Hardware stack levels required when called: 5
  9099 ;; This function calls:
  9100 ;;		Absolute function
  9101 ;;		_TMR4_10msISR
  9102 ;;		_TMR4_DefaultInterruptHandler
  9103 ;; This function is called by:
  9104 ;;		_TMR4_ISR
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text59
  9109  0023E0                     __ptext59:
  9110                           	callstack 0
  9111  0023E0                     _TMR4_CallBack:
  9112                           	callstack 19
  9113  0023E0                     
  9114                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
  9115  0023E0  0100               	movlb	0	; () banked
  9116  0023E2  51C7               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9117  0023E4  11C8               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9118  0023E6  B4D8               	btfsc	status,2,c
  9119  0023E8  EFF8  F011         	goto	i1u355_21
  9120  0023EC  EFFA  F011         	goto	i1u355_20
  9121  0023F0                     i1u355_21:
  9122  0023F0  EF07  F012         	goto	i1l692
  9123  0023F4                     i1u355_20:
  9124  0023F4                     
  9125                           ; BSR set to: 0
  9126                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
  9127  0023F4  D802               	call	i1u356_28
  9128  0023F6  EF07  F012         	goto	i1u356_29
  9129  0023FA                     i1u356_28:
  9130  0023FA  0005               	push	
  9131  0023FC  6EFA               	movwf	pclath,c
  9132  0023FE  51C7               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9133  002400  6EFD               	movwf	tosl,c
  9134  002402  51C8               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9135  002404  6EFE               	movwf	tosh,c
  9136  002406  50F8               	movf	tblptru,w,c
  9137  002408  6EFF               	movwf	tosu,c
  9138  00240A  50FA               	movf	pclath,w,c
  9139  00240C  0012               	return		;indir
  9140  00240E                     i1u356_29:
  9141  00240E                     i1l692:
  9142  00240E  0012               	return		;funcret
  9143  002410                     __end_of_TMR4_CallBack:
  9144                           	callstack 0
  9145                           
  9146 ;; *************** function _TMR4_10msISR *****************
  9147 ;; Defined at:
  9148 ;;		line 62 in file "main.c"
  9149 ;; Parameters:    Size  Location     Type
  9150 ;;		None
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;		None
  9153 ;; Return value:  Size  Location     Type
  9154 ;;                  1    wreg      void 
  9155 ;; Registers used:
  9156 ;;		status,2, status,0
  9157 ;; Tracked objects:
  9158 ;;		On entry : 0/0
  9159 ;;		On exit  : 0/0
  9160 ;;		Unchanged: 0/0
  9161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9166 ;;Total ram usage:        0 bytes
  9167 ;; Hardware stack levels used: 1
  9168 ;; Hardware stack levels required when called: 4
  9169 ;; This function calls:
  9170 ;;		Nothing
  9171 ;; This function is called by:
  9172 ;;		_main
  9173 ;;		_TMR4_CallBack
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text60
  9178  00272A                     __ptext60:
  9179                           	callstack 0
  9180  00272A                     _TMR4_10msISR:
  9181                           	callstack 19
  9182  00272A                     
  9183                           ;main.c: 63:     ++cycle10ms;
  9184  00272A  0100               	movlb	0	; () banked
  9185  00272C  2B9C               	incf	_cycle10ms& (0+255),f,b	;volatile
  9186  00272E                     
  9187                           ; BSR set to: 0
  9188  00272E  0012               	return		;funcret
  9189  002730                     __end_of_TMR4_10msISR:
  9190                           	callstack 0
  9191                           
  9192 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9193 ;; Defined at:
  9194 ;;		line 198 in file "mcc_generated_files/tmr4.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		None
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used: 1
  9214 ;; Hardware stack levels required when called: 4
  9215 ;; This function calls:
  9216 ;;		Nothing
  9217 ;; This function is called by:
  9218 ;;		_TMR4_Initialize
  9219 ;;		_TMR4_CallBack
  9220 ;; This function uses a non-reentrant model
  9221 ;;
  9222                           
  9223                           	psect	text61
  9224  002736                     __ptext61:
  9225                           	callstack 0
  9226  002736                     _TMR4_DefaultInterruptHandler:
  9227                           	callstack 19
  9228  002736  0012               	return		;funcret
  9229  002738                     __end_of_TMR4_DefaultInterruptHandler:
  9230                           	callstack 0
  9231                           
  9232 ;; *************** function _Default_ISR *****************
  9233 ;; Defined at:
  9234 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;		None
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  1    wreg      void 
  9241 ;; Registers used:
  9242 ;;		None
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9252 ;;Total ram usage:        0 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; This function calls:
  9255 ;;		Nothing
  9256 ;; This function is called by:
  9257 ;;		Interrupt level 2
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text62
  9262  002738                     __ptext62:
  9263                           	callstack 0
  9264  002738                     _Default_ISR:
  9265                           	callstack 21
  9266  002738  0011               	retfie		f
  9267  00273A                     __end_of_Default_ISR:
  9268                           	callstack 0
  9269                           
  9270 ;; *************** function _CCP3_CaptureISR *****************
  9271 ;; Defined at:
  9272 ;;		line 104 in file "mcc_generated_files/ccp3.c"
  9273 ;; Parameters:    Size  Location     Type
  9274 ;;		None
  9275 ;; Auto vars:     Size  Location     Type
  9276 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
  9277 ;; Return value:  Size  Location     Type
  9278 ;;                  1    wreg      void 
  9279 ;; Registers used:
  9280 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9281 ;; Tracked objects:
  9282 ;;		On entry : 0/0
  9283 ;;		On exit  : 0/0
  9284 ;;		Unchanged: 0/0
  9285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;Total ram usage:        2 bytes
  9291 ;; Hardware stack levels used: 1
  9292 ;; Hardware stack levels required when called: 1
  9293 ;; This function calls:
  9294 ;;		Absolute function
  9295 ;;		_CCP3_DefaultCallBack
  9296 ;; This function is called by:
  9297 ;;		Interrupt level 2
  9298 ;; This function uses a non-reentrant model
  9299 ;;
  9300                           
  9301                           	psect	text63
  9302  00223C                     __ptext63:
  9303                           	callstack 0
  9304  00223C                     _CCP3_CaptureISR:
  9305                           	callstack 20
  9306  00223C                     
  9307                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
  9308  00223C  0139               	movlb	57	; () banked
  9309  00223E  93A9               	bcf	169,1,b	;volatile
  9310                           
  9311                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
  9312  002240  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
  9313                           
  9314                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
  9315  002246  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
  9316  00224C                     
  9317                           ; BSR set to: 57
  9318                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
  9319  00224C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
  9320  002250  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
  9321  002254  D802               	call	i2u364_48
  9322  002256  EF38  F011         	goto	i2u364_49
  9323  00225A                     i2u364_48:
  9324  00225A  0005               	push	
  9325  00225C  0100               	movlb	0	; () banked
  9326  00225E  6EFA               	movwf	pclath,c
  9327  002260  51D1               	movf	_CCP3_CallBack& (0+255),w,b
  9328  002262  6EFD               	movwf	tosl,c
  9329  002264  51D2               	movf	(_CCP3_CallBack+1)& (0+255),w,b
  9330  002266  6EFE               	movwf	tosh,c
  9331  002268  50F8               	movf	tblptru,w,c
  9332  00226A  6EFF               	movwf	tosu,c
  9333  00226C  50FA               	movf	pclath,w,c
  9334  00226E  0012               	return		;indir
  9335  002270                     i2u364_49:
  9336  002270  0011               	retfie		f
  9337  002272                     __end_of_CCP3_CaptureISR:
  9338                           	callstack 0
  9339                           
  9340 ;; *************** function _CCP3_DefaultCallBack *****************
  9341 ;; Defined at:
  9342 ;;		line 64 in file "mcc_generated_files/ccp3.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  capturedValu    2    0[COMRAM] unsigned short 
  9345 ;; Auto vars:     Size  Location     Type
  9346 ;;		None
  9347 ;; Return value:  Size  Location     Type
  9348 ;;                  1    wreg      void 
  9349 ;; Registers used:
  9350 ;;		wreg, status,2, status,0
  9351 ;; Tracked objects:
  9352 ;;		On entry : 0/0
  9353 ;;		On exit  : 0/0
  9354 ;;		Unchanged: 0/0
  9355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;Total ram usage:        2 bytes
  9361 ;; Hardware stack levels used: 1
  9362 ;; This function calls:
  9363 ;;		Nothing
  9364 ;; This function is called by:
  9365 ;;		_CCP3_Initialize
  9366 ;;		_CCP3_CaptureISR
  9367 ;; This function uses a non-reentrant model
  9368 ;;
  9369                           
  9370                           	psect	text64
  9371  002410                     __ptext64:
  9372                           	callstack 0
  9373  002410                     _CCP3_DefaultCallBack:
  9374                           	callstack 20
  9375  002410                     
  9376                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
  9377  002410  AECD               	btfss	205,7,c	;volatile
  9378  002412  EF0D  F012         	goto	i2u352_41
  9379  002416  EF0F  F012         	goto	i2u352_40
  9380  00241A                     i2u352_41:
  9381  00241A  EF15  F012         	goto	i2l4890
  9382  00241E                     i2u352_40:
  9383  00241E                     
  9384                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
  9385  00241E  C001  F098         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
  9386  002422  C002  F099         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
  9387                           
  9388                           ;mcc_generated_files/ccp3.c: 69:     } else {
  9389  002426  EF1F  F012         	goto	i2l438
  9390  00242A                     i2l4890:
  9391                           
  9392                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
  9393  00242A  0100               	movlb	0	; () banked
  9394  00242C  5198               	movf	_distLeftM& (0+255),w,b
  9395  00242E  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
  9396  002430  6F9A               	movwf	_distLeft& (0+255),b	;volatile
  9397  002432  5199               	movf	(_distLeftM+1)& (0+255),w,b
  9398  002434  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
  9399  002436  6F9B               	movwf	(_distLeft+1)& (0+255),b	;volatile
  9400  002438                     
  9401                           ; BSR set to: 0
  9402                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
  9403  002438  90D8               	bcf	status,0,c
  9404  00243A  339B               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
  9405  00243C  339A               	rrcf	_distLeft& (0+255),f,b	;volatile
  9406  00243E                     i2l438:
  9407  00243E  0012               	return		;funcret
  9408  002440                     __end_of_CCP3_DefaultCallBack:
  9409                           	callstack 0
  9410                           
  9411 ;; *************** function _CCP4_CaptureISR *****************
  9412 ;; Defined at:
  9413 ;;		line 107 in file "mcc_generated_files/ccp4.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;		None
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  1    wreg      void 
  9420 ;; Registers used:
  9421 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;Total ram usage:        2 bytes
  9432 ;; Hardware stack levels used: 1
  9433 ;; Hardware stack levels required when called: 1
  9434 ;; This function calls:
  9435 ;;		Absolute function
  9436 ;;		_CCP4_DefaultCallBack
  9437 ;; This function is called by:
  9438 ;;		Interrupt level 2
  9439 ;; This function uses a non-reentrant model
  9440 ;;
  9441                           
  9442                           	psect	text65
  9443  002274                     __ptext65:
  9444                           	callstack 0
  9445  002274                     _CCP4_CaptureISR:
  9446                           	callstack 20
  9447  002274                     
  9448                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
  9449  002274  0139               	movlb	57	; () banked
  9450  002276  91AA               	bcf	170,0,b	;volatile
  9451                           
  9452                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
  9453  002278  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
  9454                           
  9455                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
  9456  00227E  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
  9457  002284                     
  9458                           ; BSR set to: 57
  9459                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
  9460  002284  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
  9461  002288  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
  9462  00228C  D802               	call	i2u365_48
  9463  00228E  EF54  F011         	goto	i2u365_49
  9464  002292                     i2u365_48:
  9465  002292  0005               	push	
  9466  002294  0100               	movlb	0	; () banked
  9467  002296  6EFA               	movwf	pclath,c
  9468  002298  51CF               	movf	_CCP4_CallBack& (0+255),w,b
  9469  00229A  6EFD               	movwf	tosl,c
  9470  00229C  51D0               	movf	(_CCP4_CallBack+1)& (0+255),w,b
  9471  00229E  6EFE               	movwf	tosh,c
  9472  0022A0  50F8               	movf	tblptru,w,c
  9473  0022A2  6EFF               	movwf	tosu,c
  9474  0022A4  50FA               	movf	pclath,w,c
  9475  0022A6  0012               	return		;indir
  9476  0022A8                     i2u365_49:
  9477  0022A8  0011               	retfie		f
  9478  0022AA                     __end_of_CCP4_CaptureISR:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _CCP4_DefaultCallBack *****************
  9482 ;; Defined at:
  9483 ;;		line 64 in file "mcc_generated_files/ccp4.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  capturedValu    2    4[COMRAM] unsigned short 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, status,2, status,0
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;Total ram usage:        2 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; This function calls:
  9504 ;;		Nothing
  9505 ;; This function is called by:
  9506 ;;		_CCP4_Initialize
  9507 ;;		_CCP4_CaptureISR
  9508 ;; This function uses a non-reentrant model
  9509 ;;
  9510                           
  9511                           	psect	text66
  9512  002440                     __ptext66:
  9513                           	callstack 0
  9514  002440                     _CCP4_DefaultCallBack:
  9515                           	callstack 20
  9516  002440                     
  9517                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
  9518  002440  ACCD               	btfss	205,6,c	;volatile
  9519  002442  EF25  F012         	goto	i2u353_41
  9520  002446  EF27  F012         	goto	i2u353_40
  9521  00244A                     i2u353_41:
  9522  00244A  EF2D  F012         	goto	i2l4898
  9523  00244E                     i2u353_40:
  9524  00244E                     
  9525                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
  9526  00244E  C005  F094         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
  9527  002452  C006  F095         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
  9528                           
  9529                           ;mcc_generated_files/ccp4.c: 70:     } else {
  9530  002456  EF37  F012         	goto	i2l476
  9531  00245A                     i2l4898:
  9532                           
  9533                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
  9534  00245A  0100               	movlb	0	; () banked
  9535  00245C  5194               	movf	_distRightM& (0+255),w,b
  9536  00245E  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
  9537  002460  6F96               	movwf	_distRight& (0+255),b	;volatile
  9538  002462  5195               	movf	(_distRightM+1)& (0+255),w,b
  9539  002464  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
  9540  002466  6F97               	movwf	(_distRight+1)& (0+255),b	;volatile
  9541  002468                     
  9542                           ; BSR set to: 0
  9543                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
  9544  002468  90D8               	bcf	status,0,c
  9545  00246A  3397               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
  9546  00246C  3396               	rrcf	_distRight& (0+255),f,b	;volatile
  9547  00246E                     i2l476:
  9548  00246E  0012               	return		;funcret
  9549  002470                     __end_of_CCP4_DefaultCallBack:
  9550                           	callstack 0
  9551                           
  9552 ;; *************** function _TMR5_GATE_ISR *****************
  9553 ;; Defined at:
  9554 ;;		line 175 in file "mcc_generated_files/tmr5.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;		None
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;Total ram usage:        0 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; Hardware stack levels required when called: 3
  9575 ;; This function calls:
  9576 ;;		Absolute function
  9577 ;;		_TMR5_DefaultGateInterruptHandler
  9578 ;; This function is called by:
  9579 ;;		Interrupt level 2
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text67
  9584  00237C                     __ptext67:
  9585                           	callstack 0
  9586  00237C                     _TMR5_GATE_ISR:
  9587                           	callstack 18
  9588  00237C                     
  9589                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
  9590  00237C  0139               	movlb	57	; () banked
  9591  00237E  9FA8               	bcf	168,7,b	;volatile
  9592  002380                     
  9593                           ; BSR set to: 57
  9594                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
  9595  002380  0100               	movlb	0	; () banked
  9596  002382  51CB               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9597  002384  11CC               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9598  002386  B4D8               	btfsc	status,2,c
  9599  002388  EFC8  F011         	goto	i2u366_41
  9600  00238C  EFCA  F011         	goto	i2u366_40
  9601  002390                     i2u366_41:
  9602  002390  EFD7  F011         	goto	i2l552
  9603  002394                     i2u366_40:
  9604  002394                     
  9605                           ; BSR set to: 0
  9606                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
  9607  002394  D802               	call	i2u367_48
  9608  002396  EFD7  F011         	goto	i2u367_49
  9609  00239A                     i2u367_48:
  9610  00239A  0005               	push	
  9611  00239C  6EFA               	movwf	pclath,c
  9612  00239E  51CB               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9613  0023A0  6EFD               	movwf	tosl,c
  9614  0023A2  51CC               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9615  0023A4  6EFE               	movwf	tosh,c
  9616  0023A6  50F8               	movf	tblptru,w,c
  9617  0023A8  6EFF               	movwf	tosu,c
  9618  0023AA  50FA               	movf	pclath,w,c
  9619  0023AC  0012               	return		;indir
  9620  0023AE                     i2u367_49:
  9621  0023AE                     i2l552:
  9622  0023AE  0011               	retfie		f
  9623  0023B0                     __end_of_TMR5_GATE_ISR:
  9624                           	callstack 0
  9625                           
  9626 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
  9627 ;; Defined at:
  9628 ;;		line 190 in file "mcc_generated_files/tmr5.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;		None
  9631 ;; Auto vars:     Size  Location     Type
  9632 ;;		None
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, status,2, status,0, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;Total ram usage:        0 bytes
  9647 ;; Hardware stack levels used: 1
  9648 ;; Hardware stack levels required when called: 2
  9649 ;; This function calls:
  9650 ;;		_TMR5_ReadTimer
  9651 ;;		_TMR5_Reload
  9652 ;; This function is called by:
  9653 ;;		_TMR5_Initialize
  9654 ;;		_TMR5_GATE_ISR
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           	psect	text68
  9659  002628                     __ptext68:
  9660                           	callstack 0
  9661  002628                     _TMR5_DefaultGateInterruptHandler:
  9662                           	callstack 18
  9663  002628                     
  9664                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
  9665  002628  ECE4  F012         	call	_TMR5_ReadTimer	;wreg free
  9666  00262C  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
  9667  002630  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
  9668  002634                     
  9669                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
  9670  002634  90D8               	bcf	status,0,c
  9671  002636  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
  9672  002638  324A               	rrcf	_distFront^0,f,c	;volatile
  9673  00263A                     
  9674                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
  9675  00263A  EC5E  F013         	call	_TMR5_Reload	;wreg free
  9676  00263E                     
  9677                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
  9678  00263E  0139               	movlb	57	; () banked
  9679  002640  9FA8               	bcf	168,7,b	;volatile
  9680  002642                     
  9681                           ; BSR set to: 57
  9682  002642  0012               	return		;funcret
  9683  002644                     __end_of_TMR5_DefaultGateInterruptHandler:
  9684                           	callstack 0
  9685                           
  9686 ;; *************** function _TMR5_Reload *****************
  9687 ;; Defined at:
  9688 ;;		line 155 in file "mcc_generated_files/tmr5.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;		None
  9691 ;; Auto vars:     Size  Location     Type
  9692 ;;		None
  9693 ;; Return value:  Size  Location     Type
  9694 ;;                  1    wreg      void 
  9695 ;; Registers used:
  9696 ;;		wreg, status,2, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;Total ram usage:        0 bytes
  9707 ;; Hardware stack levels used: 1
  9708 ;; Hardware stack levels required when called: 1
  9709 ;; This function calls:
  9710 ;;		_TMR5_WriteTimer
  9711 ;; This function is called by:
  9712 ;;		_TMR5_DefaultGateInterruptHandler
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text69
  9717  0026BC                     __ptext69:
  9718                           	callstack 0
  9719  0026BC                     _TMR5_Reload:
  9720                           	callstack 18
  9721  0026BC                     
  9722                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
  9723  0026BC  C0CD  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9724  0026C0  C0CE  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9725  0026C4  ECA8  F012         	call	_TMR5_WriteTimer	;wreg free
  9726  0026C8  0012               	return		;funcret
  9727  0026CA                     __end_of_TMR5_Reload:
  9728                           	callstack 0
  9729                           
  9730 ;; *************** function _TMR5_WriteTimer *****************
  9731 ;; Defined at:
  9732 ;;		line 133 in file "mcc_generated_files/tmr5.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  timerVal        2    8[COMRAM] unsigned short 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9750 ;;Total ram usage:        2 bytes
  9751 ;; Hardware stack levels used: 1
  9752 ;; This function calls:
  9753 ;;		Nothing
  9754 ;; This function is called by:
  9755 ;;		_TMR5_Reload
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text70
  9760  002550                     __ptext70:
  9761                           	callstack 0
  9762  002550                     _TMR5_WriteTimer:
  9763                           	callstack 18
  9764  002550                     
  9765                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
  9766  002550  A49A               	btfss	154,2,c	;volatile
  9767  002552  EFAD  F012         	goto	i2u209_41
  9768  002556  EFAF  F012         	goto	i2u209_40
  9769  00255A                     i2u209_41:
  9770  00255A  EFB8  F012         	goto	i2l3920
  9771  00255E                     i2u209_40:
  9772  00255E                     
  9773                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
  9774  00255E  909A               	bcf	154,0,c	;volatile
  9775  002560                     
  9776                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
  9777  002560  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9778  002562  6E99               	movwf	153,c	;volatile
  9779  002564                     
  9780                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
  9781  002564  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9782  00256A                     
  9783                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
  9784  00256A  809A               	bsf	154,0,c	;volatile
  9785                           
  9786                           ;mcc_generated_files/tmr5.c: 146:     }
  9787  00256C  EFBD  F012         	goto	i2l534
  9788  002570                     i2l3920:
  9789                           
  9790                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
  9791  002570  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9792  002572  6E99               	movwf	153,c	;volatile
  9793  002574                     
  9794                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
  9795  002574  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9796  00257A                     i2l534:
  9797  00257A  0012               	return		;funcret
  9798  00257C                     __end_of_TMR5_WriteTimer:
  9799                           	callstack 0
  9800                           
  9801 ;; *************** function _TMR5_ReadTimer *****************
  9802 ;; Defined at:
  9803 ;;		line 117 in file "mcc_generated_files/tmr5.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;		None
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  readVal         2   12[COMRAM] unsigned short 
  9808 ;;  readValLow      1   15[COMRAM] unsigned char 
  9809 ;;  readValHigh     1   14[COMRAM] unsigned char 
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  2    8[COMRAM] unsigned short 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;Total ram usage:        8 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_TMR5_DefaultGateInterruptHandler
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text71
  9833  0025C8                     __ptext71:
  9834                           	callstack 0
  9835  0025C8                     _TMR5_ReadTimer:
  9836                           	callstack 19
  9837  0025C8                     
  9838                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
  9839  0025C8  829A               	bsf	154,1,c	;volatile
  9840                           
  9841                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
  9842  0025CA  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
  9843                           
  9844                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
  9845  0025D0  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
  9846  0025D6                     
  9847                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  9848  0025D6  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
  9849  0025D8  6E0B               	movwf	??_TMR5_ReadTimer^0,c
  9850  0025DA  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
  9851  0025DC  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
  9852  0025DE  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
  9853  0025E2                     
  9854                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
  9855  0025E2  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
  9856  0025E6  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
  9857  0025EA  0012               	return		;funcret
  9858  0025EC                     __end_of_TMR5_ReadTimer:
  9859                           	callstack 0
  9860                           
  9861 ;; *************** function _SMT1_PR_ACQ_ISR *****************
  9862 ;; Defined at:
  9863 ;;		line 192 in file "mcc_generated_files/smt1.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      void 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used: 1
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		Interrupt level 2
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text72
  9891  0020C0                     __ptext72:
  9892                           	callstack 0
  9893  0020C0                     _SMT1_PR_ACQ_ISR:
  9894                           	callstack 21
  9895  0020C0                     
  9896                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
  9897  0020C0  0139               	movlb	57	; () banked
  9898  0020C2  9DA1               	bcf	161,6,b	;volatile
  9899  0020C4                     
  9900                           ; BSR set to: 57
  9901                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
  9902  0020C4  013F               	movlb	63	; () banked
  9903  0020C6  5115               	movf	21,w,b	;volatile
  9904  0020C8  6E46               	movwf	_smtPeriod^0,c	;volatile
  9905  0020CA  5116               	movf	22,w,b	;volatile
  9906  0020CC  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
  9907  0020CE  5117               	movf	23,w,b	;volatile
  9908  0020D0  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
  9909  0020D2  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
  9910  0020D4                     
  9911                           ; BSR set to: 63
  9912                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
  9913  0020D4  013C               	movlb	60	; () banked
  9914  0020D6  AB60               	btfss	96,5,b	;volatile
  9915  0020D8  EF70  F010         	goto	i2u369_41
  9916  0020DC  EF72  F010         	goto	i2u369_40
  9917  0020E0                     i2u369_41:
  9918  0020E0  EF7B  F010         	goto	i2l5004
  9919  0020E4                     i2u369_40:
  9920  0020E4                     
  9921                           ; BSR set to: 60
  9922  0020E4  0E01               	movlw	1
  9923  0020E6  0100               	movlb	0	; () banked
  9924  0020E8  2778               	addwf	_smtWay& (0+255),f,b	;volatile
  9925  0020EA  0E00               	movlw	0
  9926  0020EC  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
  9927  0020EE  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
  9928  0020F0  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
  9929  0020F2  EF84  F010         	goto	i2l856
  9930  0020F6                     i2l5004:
  9931                           
  9932                           ; BSR set to: 60
  9933  0020F6  0EFF               	movlw	255
  9934  0020F8  0100               	movlb	0	; () banked
  9935  0020FA  2778               	addwf	_smtWay& (0+255),f,b	;volatile
  9936  0020FC  0EFF               	movlw	255
  9937  0020FE  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
  9938  002100  0EFF               	movlw	255
  9939  002102  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
  9940  002104  0EFF               	movlw	255
  9941  002106  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
  9942  002108                     i2l856:
  9943                           
  9944                           ; BSR set to: 0
  9945  002108  0011               	retfie		f
  9946  00210A                     __end_of_SMT1_PR_ACQ_ISR:
  9947                           	callstack 0
  9948                           
  9949 ;; *************** function _SMT1_PW_ACQ_ISR *****************
  9950 ;; Defined at:
  9951 ;;		line 203 in file "mcc_generated_files/smt1.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;		None
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;		None
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      void 
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, status,0
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9969 ;;Total ram usage:        0 bytes
  9970 ;; Hardware stack levels used: 1
  9971 ;; This function calls:
  9972 ;;		Nothing
  9973 ;; This function is called by:
  9974 ;;		Interrupt level 2
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text73
  9979  001F8C                     __ptext73:
  9980                           	callstack 0
  9981  001F8C                     _SMT1_PW_ACQ_ISR:
  9982                           	callstack 21
  9983  001F8C                     
  9984                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
  9985  001F8C  0139               	movlb	57	; () banked
  9986  001F8E  9FA1               	bcf	161,7,b	;volatile
  9987  001F90                     
  9988                           ; BSR set to: 57
  9989                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
  9990  001F90  013F               	movlb	63	; () banked
  9991  001F92  5118               	movf	24,w,b	;volatile
  9992  001F94  0100               	movlb	0	; () banked
  9993  001F96  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
  9994  001F98  013F               	movlb	63	; () banked
  9995  001F9A  5119               	movf	25,w,b	;volatile
  9996  001F9C  0100               	movlb	0	; () banked
  9997  001F9E  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
  9998  001FA0  013F               	movlb	63	; () banked
  9999  001FA2  511A               	movf	26,w,b	;volatile
 10000  001FA4  0100               	movlb	0	; () banked
 10001  001FA6  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10002  001FA8  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 10003  001FAA                     
 10004                           ; BSR set to: 0
 10005                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 10006  001FAA  013C               	movlb	60	; () banked
 10007  001FAC  AB60               	btfss	96,5,b	;volatile
 10008  001FAE  EFDB  F00F         	goto	i2u370_41
 10009  001FB2  EFDD  F00F         	goto	i2u370_40
 10010  001FB6                     i2u370_41:
 10011  001FB6  EFE6  F00F         	goto	i2l5014
 10012  001FBA                     i2u370_40:
 10013  001FBA                     
 10014                           ; BSR set to: 60
 10015  001FBA  0E01               	movlw	1
 10016  001FBC  0100               	movlb	0	; () banked
 10017  001FBE  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10018  001FC0  0E00               	movlw	0
 10019  001FC2  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10020  001FC4  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10021  001FC6  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10022  001FC8  EFEF  F00F         	goto	i2l863
 10023  001FCC                     i2l5014:
 10024                           
 10025                           ; BSR set to: 60
 10026  001FCC  0EFF               	movlw	255
 10027  001FCE  0100               	movlb	0	; () banked
 10028  001FD0  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10029  001FD2  0EFF               	movlw	255
 10030  001FD4  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10031  001FD6  0EFF               	movlw	255
 10032  001FD8  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10033  001FDA  0EFF               	movlw	255
 10034  001FDC  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10035  001FDE                     i2l863:
 10036                           
 10037                           ; BSR set to: 0
 10038  001FDE  0011               	retfie		f
 10039  001FE0                     __end_of_SMT1_PW_ACQ_ISR:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function _SMT1_Overflow_ISR *****************
 10043 ;; Defined at:
 10044 ;;		line 213 in file "mcc_generated_files/smt1.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;		None
 10049 ;; Return value:  Size  Location     Type
 10050 ;;                  1    wreg      void 
 10051 ;; Registers used:
 10052 ;;		wreg, status,2
 10053 ;; Tracked objects:
 10054 ;;		On entry : 0/0
 10055 ;;		On exit  : 0/0
 10056 ;;		Unchanged: 0/0
 10057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;Total ram usage:        0 bytes
 10063 ;; Hardware stack levels used: 1
 10064 ;; This function calls:
 10065 ;;		Nothing
 10066 ;; This function is called by:
 10067 ;;		Interrupt level 2
 10068 ;; This function uses a non-reentrant model
 10069 ;;
 10070                           
 10071                           	psect	text74
 10072  00257C                     __ptext74:
 10073                           	callstack 0
 10074  00257C                     _SMT1_Overflow_ISR:
 10075                           	callstack 21
 10076  00257C                     
 10077                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 10078  00257C  0139               	movlb	57	; () banked
 10079  00257E  9BA1               	bcf	161,5,b	;volatile
 10080  002580                     
 10081                           ; BSR set to: 57
 10082                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 10083  002580  0E00               	movlw	0
 10084  002582  6E46               	movwf	_smtPeriod^0,c	;volatile
 10085  002584  0E00               	movlw	0
 10086  002586  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10087  002588  0E00               	movlw	0
 10088  00258A  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10089  00258C  0E00               	movlw	0
 10090  00258E  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 10091                           
 10092                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 10093  002590  0E00               	movlw	0
 10094  002592  0100               	movlb	0	; () banked
 10095  002594  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10096  002596  0E00               	movlw	0
 10097  002598  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10098  00259A  0E00               	movlw	0
 10099  00259C  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10100  00259E  0E00               	movlw	0
 10101  0025A0  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 10102  0025A2                     
 10103                           ; BSR set to: 0
 10104  0025A2  0011               	retfie		f
 10105  0025A4                     __end_of_SMT1_Overflow_ISR:
 10106                           	callstack 0
 10107                           
 10108                           ;
 10109                           ; Interrupt Vector Table @ 0x8
 10110                           ;
 10111                           
 10112                           	psect	ivt0x8
 10113  000008                     __pivt0x8:
 10114                           	callstack 0
 10115  000008                     ivt0x8_base:
 10116                           	callstack 0
 10117                           
 10118                           ; Vector 0 : SWINT
 10119  000008  09CE               	dw	_Default_ISR shr (0+2)
 10120                           
 10121                           ; Vector 1 : HLVD
 10122  00000A  09CE               	dw	_Default_ISR shr (0+2)
 10123                           
 10124                           ; Vector 2 : OSF
 10125  00000C  09CE               	dw	_Default_ISR shr (0+2)
 10126                           
 10127                           ; Vector 3 : CSW
 10128  00000E  09CE               	dw	_Default_ISR shr (0+2)
 10129                           
 10130                           ; Vector 4 : NVM
 10131  000010  09CE               	dw	_Default_ISR shr (0+2)
 10132                           
 10133                           ; Vector 5 : SCAN
 10134  000012  09CE               	dw	_Default_ISR shr (0+2)
 10135                           
 10136                           ; Vector 6 : CRC
 10137  000014  09CE               	dw	_Default_ISR shr (0+2)
 10138                           
 10139                           ; Vector 7 : IOC
 10140  000016  09CE               	dw	_Default_ISR shr (0+2)
 10141                           
 10142                           ; Vector 8 : INT0
 10143  000018  09CE               	dw	_Default_ISR shr (0+2)
 10144                           
 10145                           ; Vector 9 : ZCD
 10146  00001A  09CE               	dw	_Default_ISR shr (0+2)
 10147                           
 10148                           ; Vector 10 : AD
 10149  00001C  09CE               	dw	_Default_ISR shr (0+2)
 10150                           
 10151                           ; Vector 11 : ADT
 10152  00001E  09CE               	dw	_Default_ISR shr (0+2)
 10153                           
 10154                           ; Vector 12 : CMP1
 10155  000020  09CE               	dw	_Default_ISR shr (0+2)
 10156                           
 10157                           ; Vector 13 : SMT1
 10158  000022  095F               	dw	_SMT1_Overflow_ISR shr (0+2)
 10159                           
 10160                           ; Vector 14 : SMT1PRA
 10161  000024  0830               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 10162                           
 10163                           ; Vector 15 : SMT1PRW
 10164  000026  07E3               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 10165                           
 10166                           ; Vector 16 : DMA1SCNT
 10167  000028  09CE               	dw	_Default_ISR shr (0+2)
 10168                           
 10169                           ; Vector 17 : DMA1DCNT
 10170  00002A  09CE               	dw	_Default_ISR shr (0+2)
 10171                           
 10172                           ; Vector 18 : DMA1OR
 10173  00002C  09CE               	dw	_Default_ISR shr (0+2)
 10174                           
 10175                           ; Vector 19 : DMA1A
 10176  00002E  09CE               	dw	_Default_ISR shr (0+2)
 10177                           
 10178                           ; Vector 20 : SPI1RX
 10179  000030  09CE               	dw	_Default_ISR shr (0+2)
 10180                           
 10181                           ; Vector 21 : SPI1TX
 10182  000032  09CE               	dw	_Default_ISR shr (0+2)
 10183                           
 10184                           ; Vector 22 : SPI1
 10185  000034  09CE               	dw	_Default_ISR shr (0+2)
 10186                           
 10187                           ; Vector 23 : I2C1RX
 10188  000036  09CE               	dw	_Default_ISR shr (0+2)
 10189                           
 10190                           ; Vector 24 : I2C1TX
 10191  000038  09CE               	dw	_Default_ISR shr (0+2)
 10192                           
 10193                           ; Vector 25 : I2C1
 10194  00003A  09CE               	dw	_Default_ISR shr (0+2)
 10195                           
 10196                           ; Vector 26 : I2C1E
 10197  00003C  09CE               	dw	_Default_ISR shr (0+2)
 10198                           
 10199                           ; Vector 27 : U1RX
 10200  00003E  0864               	dw	_UART1_rx_vect_isr shr (0+2)
 10201                           
 10202                           ; Vector 28 : U1TX
 10203  000040  0855               	dw	_UART1_tx_vect_isr shr (0+2)
 10204                           
 10205                           ; Vector 29 : U1E
 10206  000042  09CE               	dw	_Default_ISR shr (0+2)
 10207                           
 10208                           ; Vector 30 : U1
 10209  000044  09CE               	dw	_Default_ISR shr (0+2)
 10210                           
 10211                           ; Vector 31 : TMR0
 10212  000046  09CE               	dw	_Default_ISR shr (0+2)
 10213                           
 10214                           ; Vector 32 : TMR1
 10215  000048  09CE               	dw	_Default_ISR shr (0+2)
 10216                           
 10217                           ; Vector 33 : TMR1G
 10218  00004A  09CE               	dw	_Default_ISR shr (0+2)
 10219                           
 10220                           ; Vector 34 : TMR2
 10221  00004C  09CE               	dw	_Default_ISR shr (0+2)
 10222                           
 10223                           ; Vector 35 : CCP1
 10224  00004E  09CE               	dw	_Default_ISR shr (0+2)
 10225                           
 10226                           ; Vector 36 : Undefined
 10227  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10228                           
 10229                           ; Vector 37 : NCO1
 10230  000052  09CE               	dw	_Default_ISR shr (0+2)
 10231                           
 10232                           ; Vector 38 : CWG1
 10233  000054  09CE               	dw	_Default_ISR shr (0+2)
 10234                           
 10235                           ; Vector 39 : CLC1
 10236  000056  09CE               	dw	_Default_ISR shr (0+2)
 10237                           
 10238                           ; Vector 40 : INT1
 10239  000058  09CE               	dw	_Default_ISR shr (0+2)
 10240                           
 10241                           ; Vector 41 : CMP2
 10242  00005A  09CE               	dw	_Default_ISR shr (0+2)
 10243                           
 10244                           ; Vector 42 : DMA2SCNT
 10245  00005C  09CE               	dw	_Default_ISR shr (0+2)
 10246                           
 10247                           ; Vector 43 : DMA2DCNT
 10248  00005E  09CE               	dw	_Default_ISR shr (0+2)
 10249                           
 10250                           ; Vector 44 : DMA2OR
 10251  000060  09CE               	dw	_Default_ISR shr (0+2)
 10252                           
 10253                           ; Vector 45 : DMA2A
 10254  000062  09CE               	dw	_Default_ISR shr (0+2)
 10255                           
 10256                           ; Vector 46 : I2C2RX
 10257  000064  09CE               	dw	_Default_ISR shr (0+2)
 10258                           
 10259                           ; Vector 47 : I2C2TX
 10260  000066  09CE               	dw	_Default_ISR shr (0+2)
 10261                           
 10262                           ; Vector 48 : I2C2
 10263  000068  09CE               	dw	_Default_ISR shr (0+2)
 10264                           
 10265                           ; Vector 49 : I2C2E
 10266  00006A  09CE               	dw	_Default_ISR shr (0+2)
 10267                           
 10268                           ; Vector 50 : U2RX
 10269  00006C  09CE               	dw	_Default_ISR shr (0+2)
 10270                           
 10271                           ; Vector 51 : U2TX
 10272  00006E  09CE               	dw	_Default_ISR shr (0+2)
 10273                           
 10274                           ; Vector 52 : U2E
 10275  000070  09CE               	dw	_Default_ISR shr (0+2)
 10276                           
 10277                           ; Vector 53 : U2
 10278  000072  09CE               	dw	_Default_ISR shr (0+2)
 10279                           
 10280                           ; Vector 54 : TMR3
 10281  000074  09CE               	dw	_Default_ISR shr (0+2)
 10282                           
 10283                           ; Vector 55 : TMR3G
 10284  000076  09CE               	dw	_Default_ISR shr (0+2)
 10285                           
 10286                           ; Vector 56 : TMR4
 10287  000078  0881               	dw	_TMR4_ISR shr (0+2)
 10288                           
 10289                           ; Vector 57 : CCP2
 10290  00007A  09CE               	dw	_Default_ISR shr (0+2)
 10291                           
 10292                           ; Vector 58 : Undefined
 10293  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10294                           
 10295                           ; Vector 59 : CWG2
 10296  00007E  09CE               	dw	_Default_ISR shr (0+2)
 10297                           
 10298                           ; Vector 60 : CLC2
 10299  000080  09CE               	dw	_Default_ISR shr (0+2)
 10300                           
 10301                           ; Vector 61 : INT2
 10302  000082  09CE               	dw	_Default_ISR shr (0+2)
 10303                           
 10304                           ; Vector 62 : Undefined
 10305  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10306                           
 10307                           ; Vector 63 : Undefined
 10308  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10309                           
 10310                           ; Vector 64 : Undefined
 10311  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10312                           
 10313                           ; Vector 65 : Undefined
 10314  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10315                           
 10316                           ; Vector 66 : Undefined
 10317  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10318                           
 10319                           ; Vector 67 : Undefined
 10320  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10321                           
 10322                           ; Vector 68 : Undefined
 10323  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10324                           
 10325                           ; Vector 69 : Undefined
 10326  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10327                           
 10328                           ; Vector 70 : TMR5
 10329  000094  09CE               	dw	_Default_ISR shr (0+2)
 10330                           
 10331                           ; Vector 71 : TMR5G
 10332  000096  08DF               	dw	_TMR5_GATE_ISR shr (0+2)
 10333                           
 10334                           ; Vector 72 : TMR6
 10335  000098  09CE               	dw	_Default_ISR shr (0+2)
 10336                           
 10337                           ; Vector 73 : CCP3
 10338  00009A  088F               	dw	_CCP3_CaptureISR shr (0+2)
 10339                           
 10340                           ; Vector 74 : CWG3
 10341  00009C  09CE               	dw	_Default_ISR shr (0+2)
 10342                           
 10343                           ; Vector 75 : CLC3
 10344  00009E  09CE               	dw	_Default_ISR shr (0+2)
 10345                           
 10346                           ; Vector 76 : Undefined
 10347  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10348                           
 10349                           ; Vector 77 : Undefined
 10350  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10351                           
 10352                           ; Vector 78 : Undefined
 10353  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10354                           
 10355                           ; Vector 79 : Undefined
 10356  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10357                           
 10358                           ; Vector 80 : CCP4
 10359  0000A8  089D               	dw	_CCP4_CaptureISR shr (0+2)
 10360                           
 10361                           ; Vector 81 : CLC4
 10362  0000AA  09CE               	dw	_Default_ISR shr (0+2)
 10363  0000AC                     ivt0x8_undefint:
 10364                           	callstack 0
 10365  0000AC  00FF               	reset	
 10366  0000                     
 10367                           	psect	text75
 10368  000000                     __ptext75:
 10369                           	callstack 0
 10370  000000                     
 10371                           	psect	rparam
 10372  0000                     
 10373                           	psect	idloc
 10374                           
 10375                           ;Config register IDLOC0 @ 0x200000
 10376                           ;	unspecified, using default values
 10377  200000                     	org	2097152
 10378  200000  0FFF               	dw	4095
 10379                           
 10380                           ;Config register IDLOC1 @ 0x200002
 10381                           ;	unspecified, using default values
 10382  200002                     	org	2097154
 10383  200002  0FFF               	dw	4095
 10384                           
 10385                           ;Config register IDLOC2 @ 0x200004
 10386                           ;	unspecified, using default values
 10387  200004                     	org	2097156
 10388  200004  0FFF               	dw	4095
 10389                           
 10390                           ;Config register IDLOC3 @ 0x200006
 10391                           ;	unspecified, using default values
 10392  200006                     	org	2097158
 10393  200006  0FFF               	dw	4095
 10394                           
 10395                           ;Config register IDLOC4 @ 0x200008
 10396                           ;	unspecified, using default values
 10397  200008                     	org	2097160
 10398  200008  0FFF               	dw	4095
 10399                           
 10400                           ;Config register IDLOC5 @ 0x20000A
 10401                           ;	unspecified, using default values
 10402  20000A                     	org	2097162
 10403  20000A  0FFF               	dw	4095
 10404                           
 10405                           ;Config register IDLOC6 @ 0x20000C
 10406                           ;	unspecified, using default values
 10407  20000C                     	org	2097164
 10408  20000C  0FFF               	dw	4095
 10409                           
 10410                           ;Config register IDLOC7 @ 0x20000E
 10411                           ;	unspecified, using default values
 10412  20000E                     	org	2097166
 10413  20000E  0FFF               	dw	4095
 10414                           
 10415                           	psect	config
 10416                           
 10417                           ;Config register CONFIG1L @ 0x300000
 10418                           ;	External Oscillator Selection
 10419                           ;	FEXTOSC = OFF, Oscillator not enabled
 10420                           ;	Reset Oscillator Selection
 10421                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10422  300000                     	org	3145728
 10423  300000  8C                 	db	140
 10424                           
 10425                           ;Config register CONFIG1H @ 0x300001
 10426                           ;	Clock out Enable bit
 10427                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10428                           ;	PRLOCKED One-Way Set Enable bit
 10429                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10430                           ;	Clock Switch Enable bit
 10431                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10432                           ;	Fail-Safe Clock Monitor Enable bit
 10433                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10434  300001                     	org	3145729
 10435  300001  FF                 	db	255
 10436                           
 10437                           ;Config register CONFIG2L @ 0x300002
 10438                           ;	MCLR Enable bit
 10439                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10440                           ;	Power-up timer selection bits
 10441                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10442                           ;	Multi-vector enable bit
 10443                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 10444                           ;	IVTLOCK bit One-way set enable bit
 10445                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10446                           ;	Low Power BOR Enable bit
 10447                           ;	LPBOREN = OFF, ULPBOR disabled
 10448                           ;	Brown-out Reset Enable bits
 10449                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10450  300002                     	org	3145730
 10451  300002  FF                 	db	255
 10452                           
 10453                           ;Config register CONFIG2H @ 0x300003
 10454                           ;	Brown-out Reset Voltage Selection bits
 10455                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10456                           ;	ZCD Disable bit
 10457                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10458                           ;	PPSLOCK bit One-Way Set Enable bit
 10459                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10460                           ;	Stack Full/Underflow Reset Enable bit
 10461                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10462                           ;	Debugger Enable bit
 10463                           ;	DEBUG = OFF, Background debugger disabled
 10464                           ;	Extended Instruction Set Enable bit
 10465                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10466  300003                     	org	3145731
 10467  300003  FF                 	db	255
 10468                           
 10469                           ;Config register CONFIG3L @ 0x300004
 10470                           ;	WDT Period selection bits
 10471                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10472                           ;	WDT operating mode
 10473                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10474  300004                     	org	3145732
 10475  300004  9F                 	db	159
 10476                           
 10477                           ;Config register CONFIG3H @ 0x300005
 10478                           ;	WDT Window Select bits
 10479                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10480                           ;	WDT input clock selector
 10481                           ;	WDTCCS = SC, Software Control
 10482  300005                     	org	3145733
 10483  300005  FF                 	db	255
 10484                           
 10485                           ;Config register CONFIG4L @ 0x300006
 10486                           ;	Boot Block Size selection bits
 10487                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10488                           ;	Boot Block enable bit
 10489                           ;	BBEN = OFF, Boot block disabled
 10490                           ;	Storage Area Flash enable bit
 10491                           ;	SAFEN = OFF, SAF disabled
 10492                           ;	Application Block write protection bit
 10493                           ;	WRTAPP = OFF, Application Block not write protected
 10494  300006                     	org	3145734
 10495  300006  FF                 	db	255
 10496                           
 10497                           ;Config register CONFIG4H @ 0x300007
 10498                           ;	Configuration Register Write Protection bit
 10499                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10500                           ;	Boot Block Write Protection bit
 10501                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10502                           ;	Data EEPROM Write Protection bit
 10503                           ;	WRTD = OFF, Data EEPROM not write-protected
 10504                           ;	SAF Write protection bit
 10505                           ;	WRTSAF = OFF, SAF not Write Protected
 10506                           ;	Low Voltage Programming Enable bit
 10507                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10508  300007                     	org	3145735
 10509  300007  FF                 	db	255
 10510                           
 10511                           ;Config register CONFIG5L @ 0x300008
 10512                           ;	PFM and Data EEPROM Code Protection bit
 10513                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10514  300008                     	org	3145736
 10515  300008  FF                 	db	255
 10516                           
 10517                           ;Config register CONFIG5H @ 0x300009
 10518                           ;	unspecified, using default values
 10519  300009                     	org	3145737
 10520  300009  FF                 	db	255
 10521                           tosu	equ	0x3FFF
 10522                           tosh	equ	0x3FFE
 10523                           tosl	equ	0x3FFD
 10524                           stkptr	equ	0x3FFC
 10525                           pclatu	equ	0x3FFB
 10526                           pclath	equ	0x3FFA
 10527                           pcl	equ	0x3FF9
 10528                           tblptru	equ	0x3FF8
 10529                           tblptrh	equ	0x3FF7
 10530                           tblptrl	equ	0x3FF6
 10531                           tablat	equ	0x3FF5
 10532                           prodh	equ	0x3FF4
 10533                           prodl	equ	0x3FF3
 10534                           indf0	equ	0x3FEF
 10535                           postinc0	equ	0x3FEE
 10536                           postdec0	equ	0x3FED
 10537                           preinc0	equ	0x3FEC
 10538                           plusw0	equ	0x3FEB
 10539                           fsr0h	equ	0x3FEA
 10540                           fsr0l	equ	0x3FE9
 10541                           wreg	equ	0x3FE8
 10542                           indf1	equ	0x3FE7
 10543                           postinc1	equ	0x3FE6
 10544                           postdec1	equ	0x3FE5
 10545                           preinc1	equ	0x3FE4
 10546                           plusw1	equ	0x3FE3
 10547                           fsr1h	equ	0x3FE2
 10548                           fsr1l	equ	0x3FE1
 10549                           bsr	equ	0x3FE0
 10550                           indf2	equ	0x3FDF
 10551                           postinc2	equ	0x3FDE
 10552                           postdec2	equ	0x3FDD
 10553                           preinc2	equ	0x3FDC
 10554                           plusw2	equ	0x3FDB
 10555                           fsr2h	equ	0x3FDA
 10556                           fsr2l	equ	0x3FD9
 10557                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         79
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     42     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_calcMotorPow
    _startAccell->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37412
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   36265
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   13093
                                             35 BANK0      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0    4184
                                             36 COMRAM     6     6      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3168
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    7860
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6866
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     982
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     618
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     683
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3025
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     756
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_tx_vect_isr                                    1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_rx_vect_isr                                    1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_10msISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (12) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getCurve
     _getReverse
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2A      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CC      32        0.0%
DATA                 0      0      CC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 01 12:27:05 2024

                             _CCP4_Initialize 2470                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 146E                                            l72 26BA  
                                          l75 25C6                                            l69 2074  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l404 202A  
                                         l520 20BE                                           l441 24CA  
                                         l362 26E6                                           l371 26D2  
                                         l188 1B5E                                           l284 1E3C  
                                         l365 26FA                                           l359 26F0  
                                         l368 26DC                                           l712 2378  
                                         l449 2722                                           l482 249C  
                                         l723 265A                                           l555 2704  
                                         l644 24F6                                           l740 2310  
                                         l709 2672                                           l581 2202  
                                         l726 2344                                           l479 2718  
                                         l751 268A                                           l737 26A2  
                                         l754 22DC                                           l923 2626  
                                         l695 270E                                           l795 23DE  
                                         l893 2522                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 260C  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 2710  
                                ___flmul@aexp 009E                                  ___flmul@bexp 00A3  
                          _UART1_Transmit_ISR 210A                                  ___flmul@sign 009D  
                                ___flmul@temp 00A8                                  ___flmul@prod 00A4  
                     __end_of_CCP4_CaptureISR 22AA                                  ___fltol@exp1 00BF  
                                        l1042 1F8A                                          l1300 0EAE  
                                        l2006 0984                                          l2030 1028  
                                        l1216 1D06                                          l2033 1184  
                                        l1226 1D96                                          l1235 1ED0  
                                        l1315 0FD0                                          l2044 111C  
                                        l2037 10C0                                          l1255 0BDA  
                                        l1247 159E                                          l1337 0DFC  
                                        l1273 0BEA                                          l1361 11B6  
                                        l4010 1E6C                                          l1346 146C  
                                        l1362 11CA                                          l1355 1A94  
                                        l1363 11F2                               _timer3ReloadVal 00C9  
                                        l4012 1E9C                                          l4004 1E3E  
                                        l1372 1328                                          l1606 1CE8  
                                        l1454 16AA                                          l4014 1EC8  
                                        l4006 1E46                                          l1287 19A2  
                                        l1359 1192                                          l1295 0E1C  
                                        l4008 1E5C                                          l1288 19B2  
                                        l1640 1870                                          l1645 18B6  
                                        l1903 02A2                                          l2800 1B14  
                                        l1672 17B2                                          l1920 03BC  
                                        l1912 0572                                          l1904 0290  
                                        l5200 0E1C                                          l1905 0256  
                                        l2810 26A4                                          l2802 1B1A  
                                        l1930 047A                                          l5202 0E38  
                                        l5210 0E6C                                          l2804 1B1C  
                                        l4500 2076                                          l4420 0FF2  
                                        l5300 01B4                                          l5220 0F1E  
                                        l5212 0EB2                                          l5204 0E44  
                                        l2822 1F30                                          l2806 1B1E  
                                        l4510 20AE                                          l4502 208A  
                                        l4430 106A                                          l4422 1038  
                                        l5310 01C8                                          l5302 01B8  
                                        l4350 17B4                                          l5230 0F6A  
                                        l5222 0F32                                          l5214 0EC6  
                                        l5206 0E60                                          l2760 1FF4  
                                        l2808 1B20                                          l2840 23D2  
                                        l4512 20BA                                          l4504 208E  
                                        l4520 1DB8                                          l4440 10F2  
                                        l4432 1076                                          l4424 104E  
                                        l4416 0FD4                                          l5400 040E  
                                        l5320 01DC                                          l5312 01CC  
                                        l5304 01BC                                          l4360 183E  
                                        l4352 17E2                                          l3800 1186  
                                        l5224 0F44                                          l5216 0EDA  
                                        l1929 048C                                          l2770 201C  
                                        l2762 200A                                          l2754 1FE0  
                                        l2842 23D6                                          l2834 23B0  
                                        l2850 2618                                          l4506 20A8  
                                        l4530 1DCE                                          l4522 1DBE  
                                        l4514 1D98                                          l4450 1130  
                                        l4442 10FE                                          l4434 10A8  
                                        l4418 0FE4                                          l5410 043A  
                                        l5402 0410                                          l5330 01F0  
                                        l5322 01E0                                          l5314 01D0  
                                        l5306 01C0                                          l4610 0A1A  
                                        l4362 1850                                          l4354 17F2  
                                        l3810 121A                                          l3802 11D2  
                                        l5218 0F0A                                          l2780 2026  
                                        l2772 201E                                          l2764 200C  
                                        l2756 1FE2                                          l2844 23D8  
                                        l2836 23CE                                          l2852 261E  
                                        l4508 20AC                                          l4540 1DE2  
                                        l4532 1DD2                                          l4524 1DC2  
                                        l4516 1D9C                                          l5500 0688  
                                        l4452 1154                                          l4444 110C  
                                        l4436 10AA                                          l4428 1062  
                                        l5420 0472                                          l5404 041E  
                                        l5412 043C                                          l5340 024E  
                                        l5324 01E4                                          l5316 01D4  
                                        l5308 01C4                                          l5332 01F4  
                                        l5260 00D0                                          l4620 0A8E  
                                        l4612 0A30                                          l4604 09C4  
                                        l4364 185E                                          l4356 1820  
                                        l3820 1298                                          l3804 11FA  
                                        l5228 0F58                                          l5236 0F7E  
                                        l4470 24C8                                          l4462 249E  
                                        l2782 2028                                          l2774 2020  
                                        l2766 2016                                          l2758 1FEA  
                                        l2790 1AB8                                          l2854 2644  
                                        l2846 23DA                                          l2838 23D0  
                                        l4550 1DF6                                          l4542 1DE6  
                                        l4534 1DD6                                          l4526 1DC6  
                                        l4518 1DA8                                          l5510 06E2  
                                        l5502 06A2                                          l4454 1164  
                                        l4446 112A                                          l4438 10B6  
                                        l5430 04F0                                          l5406 0426  
                                        l5414 044A                                          l5350 0284  
                                        l5342 0264                                          l5334 01F8  
                                        l5326 01E8                                          l5318 01D8  
                                        l5262 00E0                                          l5270 010A  
                                        l5254 00B2                                          l4630 0AD0  
                                        l4622 0A9E                                          l4614 0A40  
                                        l4606 09E2                                          l4366 18AE  
                                        l4358 1830                                          l3750 22AA  
                                        l3830 1300                                          l3822 12B4  
                                        l3806 1206                                          l3814 122E  
                                        l3904 271A                                          l4464 24AE  
                                        l2776 2022                                          l2768 201A  
                                        l2792 1AC0                                          l2784 25A4  
                                        l2856 2674                                          l2848 260C  
                                        l4480 24F2                                          l4472 24CC  
                                        l4552 1E02                                          l4544 1DEA  
                                        l4536 1DDA                                          l4528 1DCA  
                                        l4800 204C                                          l3760 1C44  
                                        l3752 1C26                                          l5520 0730  
                                        l5512 06F0                                          l5504 06AE  
                                        l5600 1718                                          l4456 1172  
                                        l4448 112C                                          l3840 15A0  
                                        l5440 0536                                          l5424 049C  
                                        l5432 04F2                                          l5416 044E  
                                        l5408 042A                                          l5360 02D4  
                                        l5352 028E                                          l5344 0270  
                                        l5336 0222                                          l5328 01EC  
                                        l5280 013A                                          l5272 011A  
                                        l5264 00F0                                          l5256 00C0  
                                        l4640 0B36                                          l4632 0AE2  
                                        l4624 0AAE                                          l4616 0A5C  
                                        l4608 09FE                                          l4368 18B4  
                                        l3832 1308                                          l3824 12BC  
                                        l3808 120E                                          l3816 1270  
                                        l1993 09C2                                          l4466 24BA  
                                        l3906 2710                                          l4490 249A  
                                        l4482 2470                                          l2778 2024  
                                        l2794 1B0E                                          l2786 1A96  
                                        l4474 24E0                                          l4554 1E0E  
                                        l4546 1DEE                                          l4538 1DDE  
                                        l4810 2068                                          l4802 2050  
                                        l3770 1C78                                          l3762 1C52  
                                        l3754 1C2A                                          l5530 07AE  
                                        l5522 074E                                          l5514 0700  
                                        l5506 06CA                                          l5610 1748  
                                        l5602 1726                                          l4458 1174  
                                        l3850 15D4                                          l3842 15A4  
                                        l3930 19EC                                          l5450 0560  
                                        l5442 0544                                          l5434 0502  
                                        l5426 04A8                                          l5418 045C  
                                        l5370 0310                                          l5362 02E4  
                                        l5354 02B0                                          l5346 0274  
                                        l5338 023E                                          l5290 017A  
                                        l5282 0148                                          l5274 0120  
                                        l5266 0100                                          l5258 00CE  
                                        l4650 0B84                                          l4642 0B46  
                                        l4634 0AF8                                          l4626 0ABA  
                                        l4618 0A78                                          l3834 1318  
                                        l3826 12D8                                          l3818 128C  
                                        l4468 24C4                                          l4484 2480  
                                        l2868 24F8                                          l2796 1B10  
                                        l2788 1AB6                                          l4492 21CC  
                                        l3924 2706                                          l4476 24E4  
                                        l3908 26FC                                          l4556 1E38  
                                        l4548 1DF2                                          l4812 206C  
                                        l4804 2054                                          l3780 1CB2  
                                        l3772 1C80                                          l3764 1C5A  
                                        l3756 1C38                                          l1996 0854  
                                        l5540 0844                                          l5532 07D8  
                                        l5524 075E                                          l5516 0710  
                                        l5508 06D6                                          l5460 0590  
                                        l5620 1772                                          l5612 1752  
                                        l3860 1616                                          l3852 15E4  
                                        l3844 15B2                                          l3940 1A48  
                                        l3932 19F4                                          l5452 0562  
                                        l5444 054A                                          l5436 0512  
                                        l5428 04B6                                          l5380 0356  
                                        l5372 031E                                          l5364 02F2  
                                        l5356 02C0                                          l5348 0282  
                                        l5292 017C                                          l5284 014A  
                                        l5276 0132                                          l5268 0102  
                                        l4652 0B94                                          l4644 0B58  
                                        l4636 0B0A                                          l4628 0AC0  
                                        l3748 22DE                                          l3828 12E4  
                                        l1989 063A                                          l4486 248C  
                                        l2798 1B12                                          l2878 268C  
                                        l2894 265C                                          l4494 21E0  
                                        l4478 24E6                                          l4806 205C  
                                        l3790 1CD8                                          l3782 1CBA  
                                        l3774 1C88                                          l3766 1C5E  
                                        l3758 1C40                                          l5550 0884  
                                        l1998 08CC                                          l5542 0852  
                                        l5534 080E                                          l5526 077E  
                                        l5518 0720                                          l5470 05C8  
                                        l5462 0592                                          l5622 1782  
                                        l3870 1668                                          l3862 1622  
                                        l3854 15E8                                          l3846 15C2  
                                        l3942 1A50                                          l3934 1A00  
                                        l3926 19B4                                          l5446 054C  
                                        l5438 0532                                          l5390 03D2  
                                        l5382 038A                                          l5374 0320  
                                        l5366 0300                                          l5286 015A  
                                        l5294 0184                                          l5278 0134  
                                        l5710 0DEC                                          l5702 0D58  
                                        l4646 0B74                                          l4638 0B20  
                                        l4670 18CE                                          l5198 0DFE  
                                        l5630 146E                                          l1999 08BA  
                                        l4488 2496                                          l4496 21E4  
                                        l4808 2060                                          l3792 1CE0  
                                        l3784 1CBC                                          l3776 1C96  
                                        l3768 1C66                                          l5560 08F6  
                                        l5552 08B2                                          l5544 0864  
                                        l5536 081C                                          l5528 078E  
                                        l5480 05F4                                          l5472 05D8  
                                        l5464 05A2                                          l5456 0574  
                                        l5624 1792                                          l5608 173E  
                                        l3880 169A                                          l3872 166A  
                                        l3864 1630                                          l3856 15F8  
                                        l3848 15C6                                          l3944 1A5C  
                                        l3928 19D0                                          l3936 1A10  
                                        l5720 132A                                          l5448 0552  
                                        l5392 03E2                                          l5384 038C  
                                        l5376 032A                                          l5368 030C  
                                        l5296 0194                                          l5288 016A  
                                        l5712 0DF4                                          l5704 0DAA  
                                        l4680 191E                                          l4672 18D8  
                                        l5640 1508                                          l5632 147E  
                                        l4498 21FE                                          l3890 26DE  
                                        l3786 1CC2                                          l3778 1C9C  
                                        l5570 096C                                          l5562 0920  
                                        l5546 0872                                          l5538 083A  
                                        l5490 064A                                          l5482 0604  
                                        l5474 05DE                                          l5466 05B2  
                                        l5458 0582                                          l5626 17A2  
                                        l5618 1766                                          l3874 1674  
                                        l3866 163A                                          l3858 160E  
                                        l3938 1A2C                                          l3946 1A7C  
                                        l5730 13CC                                          l5722 1336  
                                        l5386 039C                                          l5378 0330  
                                        l5298 01A6                                          l5706 0DC8  
                                        l4658 0BA0                                          l4690 1964  
                                        l4682 1922                                          l4674 18EA  
                                        l5650 1560                                          l5642 1514  
                                        l5634 1482                                          l3892 26F2  
                                        l3884 26D4                                          l3788 1CC8  
                                        l5572 0988                                          l5580 09AE  
                                        l5556 08DC                                          l5564 0924  
                                        l5548 0876                                          l5492 065A  
                                        l5484 0614                                          l5476 05E4  
                                        l5468 05C2                                          l3868 1658  
                                        l3876 167A                                          l3796 2346  
                                        l5740 140C                                          l5732 13E0  
                                        l5724 1344                                          l5396 03F6  
                                        l5388 03AC                                          l5708 0DD0  
                                        l4684 1934                                          l4692 1968  
                                        l4676 18FC                                          l4668 18B8  
                                        l5660 1596                                          l5652 156A  
                                        l5644 1518                                          l5636 14B8  
                                        l3886 26CA                                          l5582 09B2  
                                        l5574 0998                                          l5566 093E  
                                        l5558 08E8                                          l5486 0624  
                                        l5478 05F2                                          l3878 168A  
                                        l3798 2312                                          l5750 1464  
                                        l5742 1428                                          l5734 13E8  
                                        l5726 1350                                          l5398 0400  
                                        l5670 0C14                                          l4694 197E  
                                        l4686 1946                                          l4678 1906  
                                        l5662 159A                                          l5654 1576  
                                        l5646 151E                                          l5638 14EC  
                                        l3888 26E8                                          l4792 202C  
                                        l5576 09A6                                          l5568 0952  
                                        l5496 066E                                          l5488 062A  
                                        l5592 16D8                                          l5744 1434  
                                        l5736 13FC                                          l5728 1350  
                                        l5672 0C30                                          l5680 0C66  
                                        l5664 0BEC                                          l4696 199E  
                                        l4688 195C                                          l5656 1580  
                                        l5648 152E                                          l5760 1D20  
                                        l5752 1CEA                                          l4794 203C  
                                        l5578 09A8                                          l5498 067E  
                                        l5594 1702                                          l5586 16AC  
                                        l5746 1450                                          l5738 1400  
                                        l5690 0D34                                          l5682 0C72  
                                        l5674 0C38                                          l5666 0BFA  
                                        l4698 199E                                          l5658 1584  
                                        l5770 1D4C                                          l5762 1D28  
                                        l5754 1D14                                          l4796 2040  
                                        l5596 1704                                          l5588 16C4  
                                        l5748 1458                                          l5692 0D40  
                                        l5684 0C88                                          l5676 0C4E  
                                        l5668 0C10                                          l5780 1D8E  
                                        l5772 1D5A                                          l5764 1D30  
                                        l5756 1D18                                          l4798 2048  
                                        l5598 1714                                          l5686 0C8C  
                                        l5678 0C5A                                          l5774 1D6A  
                                        l5766 1D36                                          l5758 1D1C  
                                        l5782 25EC                                          l5696 0D4C  
                                        l5688 0CA2                                          l5960 0E80  
                                        l5776 1D7E                                          l5768 1D48  
                                        l5784 25F0                                          l5962 0F92  
                                        l5778 1D8A                                          l5786 25F2  
                                        l5964 1242                                          l5788 2600  
                                        l5966 0BB4                                          l5968 0D6C  
                                        u2000 12D8                                          u2001 12D4  
                                        u2010 1300                                          u2011 12FC  
                                        u2020 15B2                                          u2100 19D0  
                                        u2021 15AE                                          u2101 19CC  
                                        u2030 15D4                                          u2110 19EC  
                                        u1135 2014                                          u2031 15D0  
                                        u2111 19E8                                          u1136 2016  
                                        u2040 160E                                          u2120 1A2C  
                                        u2041 160A                                          u2121 1A28  
                                        u2050 1630                                          u2130 1A48  
                                        u2051 162C                                          u2131 1A44  
                                        u2060 1658                                          u3100 0AD0  
                                        u2061 1654                                          u3101 0ACC  
                                        _LATA 003FBA                                          u2070 168A  
                                        u3110 0AE2                                          u3030 09FE  
                                        _LATB 003FBB                                          u2071 1686  
                                        u3111 0ADE                                          u3031 09FA  
                                        _LATC 003FBC                                          u4000 041E  
                                        u3120 0AF8                                          u3040 0A1A  
                                        u3200 18EA                                          _LATD 003FBD  
                                        u4001 041A                                          u3121 0AF4  
                                        u3041 0A16                                          u3201 18E6  
                                        _LATE 003FBE                                          u4010 043A  
                                        u3130 0B0A                                          u3050 0A30  
                                        u3210 18FC                                          u4011 0436  
                                        u3131 0B06                                          u3051 0A2C  
                                        u3211 18F8                                          u2180 1E5C  
                                        u4100 0512                                          u4020 044A  
                                        u3140 0B20                                          u3060 0A5C  
                                        u3220 191E                                          u2181 1E58  
                                        u4101 050E                                          u4021 0446  
                                        u3141 0B1C                                          u3061 0A58  
                                        u3221 191A                                          u2190 1E6C  
                                        u4110 0532                                          u4030 045C  
                                        u3150 0B36                                          u3070 0A78  
                                        u3230 1934                                          u2191 1E68  
                                        u4111 052E                                          u4031 0458  
                                        u3151 0B32                                          u3071 0A74  
                                        u3231 1930                                          u4200 064A  
                                        u4120 0544                                          u4040 0472  
                                        u3160 0B58                                          u3080 0A8E  
                                        u3240 1946                                          u4201 0646  
                                        u4121 0540                                          u4041 046E  
                                        u3161 0B54                                          u3081 0A8A  
                                        u3241 1942                                          u4210 065A  
                                        u4130 0560                                          u4050 0488  
                                        u3170 0B74                                          u3090 0AAE  
                                        u3250 195C                                          _T2PR 003FAB  
                                        u4211 0656                                          u4131 055C  
                                        u4051 0484                                          u3171 0B70  
                                        u3091 0AAA                                          u3251 1958  
                                        u1900 1C38                                          u4300 093E  
                                        u4220 07F8                                          u4140 0590  
                                        u4060 049C                                          u3180 0B94  
                                        u3260 197E                                          u1901 1C34  
                                        u4301 093A                                          u4141 058C  
                                        u4061 0498                                          u3181 0B90  
                                        u3261 197A                                          u1910 1C52  
                                        u4310 096C                                          u4230 0852  
                                        u4150 05A2                                          u4070 04B6  
                                        u3270 199A                                          u3190 18CE  
                                        u1911 1C4E                                          u4311 0968  
                                        u4231 084E                                          u4151 059E  
                                        u4071 04B2                                          u3271 1996  
                                        u3191 18CA                                          u1920 1C78  
                                        u4320 09A6                                          u4240 0872  
                                        u4160 05B2                                          u4080 04F0  
                                        u2800 183E                                          u4400 152E  
                                        u1921 1C74                                          u4321 09A2  
                                        u4241 086E                                          u4225 07EE  
                                        u4161 05AE                                          u4081 04EC  
                                        u2801 183A                                          u4401 152A  
                                        u1930 1C96                                          u4250 0884  
                                        u4170 05F2                                          u4330 16C4  
                                        u4090 0502                                          u2810 185E  
                                        u4410 1560                                          _T4PR 003F9F  
                                        u1931 1C92                                          u4251 0880  
                                        u4171 05EE                                          u4331 16C0  
                                        u4091 04FE                                          u2811 185A  
                                        u4411 155C                                          u1940 1CB2  
                                        u4260 08B2                                          u4180 0604  
                                        u4340 16F8                                          u2900 0FE4  
                                        u4500 13E0                                          u2820 18AE  
                                        u4420 1596                                          u1941 1CAE  
                                        u4261 08AE                                          u4181 0600  
                                        u2901 0FE0                                          u4501 13DC  
                                        u2821 18AA                                          u4421 1592  
                                        u1950 1CD8                                          u4270 08C8  
                                        u4190 0614                                          u4350 1726  
                                        u2910 0FF2                                          u4510 13FC  
                                        u4430 0C10                                          u3710 0E38  
                                        u1951 1CD4                                          u4271 08C4  
                                        u4191 0610                                          u4351 1722  
                                        u2911 0FEE                                          u4511 13F8  
                                        u4431 0C0C                                          u3711 0E34  
                                        u4280 08DC                                          u4360 173A  
                                        u2920 104E                                          u4520 1428  
                                        u3800 015A                                          u4440 0C30  
                                        u3720 0E60                                          u4281 08D8  
                                        u4361 1736                                          u4345 16EE  
                                        u2921 104A                                          u4521 1424  
                                        u3801 0156                                          u4441 0C2C  
                                        u3721 0E5C                                          u4290 08F6  
                                        u4370 1762                                          u2930 10A4  
                                        u4530 1450                                          u3810 016A  
                                        u4450 0C4E                                          u3730 0F44  
                                        u4291 08F2                                          u4371 175E  
                                        u2931 10A0                                          u4531 144C  
                                        u3811 0166                                          u4451 0C4A  
                                        u3731 0F40                                          u4380 1782  
                                        u2940 10EE                                          u3900 02B0  
                                        u3820 01A6                                          u4460 0C88  
                                        u2780 17E2                                          u1980 128C  
                                        u3740 0F6A                                          u4540 1D14  
                                        _PMD0 0039C0                                          u4381 177E  
                                        u2941 10EA                                          u1965 236A  
                                        u3901 02AC                                          u3821 01A2  
                                        u4461 0C84                                          u2781 17DE  
                                        u1885 2302                                          u1981 1288  
                                        u3741 0F66                                          u4541 1D10  
                                        _PMD1 0039C1                                          u4390 1792  
                                        u2950 110C                                          u3910 02C0  
                                        u3830 01B4                                          u3750 00CE  
                                        u4470 0CA2                                          u2790 1820  
                                        u1990 12B4                                          u4550 1D48  
                                        _PMD2 0039C2                                          u4391 178E  
                                        u2951 1108                                          u1975 2336  
                                        u3911 02BC                                          u3831 01B0  
                                        u3751 00CA                                          u4471 0C9E  
                                        u2791 181C                                          u1895 22CE  
                                        u1991 12B0                                          u4551 1D44  
                                        _PMD3 0039C3                                          u2960 111C  
                                        u3920 02F2                                          u3840 0222  
                                        u3760 00E0                                          u4480 0DC8  
                                        u4560 1D5A                                          _PMD4 0039C4  
                                        u2961 1118                                          u3921 02EE  
                                        u3841 021E                                          u3761 00DC  
                                        u4481 0DC4                                          u4561 1D56  
                                        _PMD5 0039C5                                          u2970 112A  
                                        u3930 0300                                          u3850 023A  
                                        u3770 00F0                                          u4490 0DEC  
                                        _PMD6 0039C6                                          u2971 1126  
                                        u3931 02FC                                          u3851 0234  
                                        u3771 00EC                                          u4491 0DE8  
                                        _PMD7 0039C7                                          u2980 1164  
                                        u3940 031E                                          u3860 023C  
                                        u3780 0132                                          u2981 1160  
                                        u3941 031A                                          u3781 012E  
                                        u2990 1172                                          u3950 0356  
                                        u3870 0264                                          u3790 0148  
                                        u2991 116E                                          u3951 0352  
                                        u3871 0260                                          u3791 0144  
                                        u3960 039C                                          u3880 0282  
                                        u3961 0398                                          u3881 027E  
                                        u3970 03D2                                          u3890 02A2  
                                        u3971 03CE                                          u3891 029E  
                                        u3980 03E2                                          u3981 03DE  
                                        u3990 040E                                          u3991 040A  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        _main 25EC                                          _loop 1CEA  
                                        indf2 003FDF                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00CD  
                             _TMR3_Initialize 21CC                               _PWM5_Initialize 268C  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 2190  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 2312  
                          ?_UART1_rx_vect_isr 0001                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 26BC  
                               ___fltol@sign1 00BE                               __end_of___aldiv 16AC  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 24CC                               __end_of___fladd 0574  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 1CEA  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 09C4  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___fltol 17B4  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 21C4  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 2188                                         i1l333 214C  
                                       i1l350 2734                                         i1l343 1C24  
                                       i1l336 2150                                         i1l353 2732  
                                       _U1TXB 003DEA                                         i1l347 254E  
                                       i1l356 2728                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 2738  
                                       i1l692 240E                                         i2l534 257A  
                                       i2l438 243E                                         i2l446 2270  
                                       i2l552 23AE                                         i1l688 2234  
                                       i2l529 25EA                                         i2l537 26C8  
                                       i1l698 2736                                         i2l476 246E  
                                       i2l558 2642                                         i2l487 22A8  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 1FDE  
                                       i2l856 2108                                         i2l868 25A2  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 2738  
                             _TMR4_Initialize 24CC                               _PWM6_Initialize 2674  
                           _UART1_tx_vect_isr 2154                              __end_of_TMR4_ISR 223C  
                     setSteering@steeringMode 001E                                         _delay 003E  
                       __size_of_calcMotorPow 0144                            ?_UART1_tx_vect_isr 0001  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 0080  
                       __size_of_calcSteering 01D4                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 26DE                   _UART1_SetRxInterruptHandler 26D4  
                     __end_of_CCP4_Initialize 249E           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 2736     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 2734                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 21CC                               _TMR5_Initialize 2076  
                             _PWM7_Initialize 265C                               __initialization 1ED2  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 260C                                  __end_of_loop 1D98  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 2628  
                                      ??_main 003A                                        ??_loop 003A  
                               __activetblptr 000002                                  _calcMotorPow 132A  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 2190  
                             _PWM8_Initialize 2644                              _UART1_Initialize 1D98  
                                _calcSteering 0DFE                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 2312  
                                      _ANSELA 003A40                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1229 272E  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 26A4  
                     __end_of_TMR3_Initialize 2204                                        i1l3900 2548  
                                      i1l3902 254C                                        i1l4558 2724  
                                      i2l5000 20D4                                        i2l5010 1FAA  
                                      i2l5002 20E4                                        i2l5012 1FBA  
                                      i2l5004 20F6                                        i1l4924 23E0  
                                      i1l4860 2130                                        i2l5014 1FCC  
                                      i2l5006 1F8C                                        i1l4790 272A  
                                      i1l4926 23F4                                        i1l3894 2524  
                                      i1l4870 1B80                                        i1l4862 2140  
                                      i1l4854 210A                                        i2l5016 257C  
                                      i2l5008 1F90                                        i1l3896 2536  
                                      i1l4880 1BE4                                        i1l4872 1B90  
                                      i1l4864 2144                                        i1l4856 211C  
                                      i2l5018 2580                                        i1l3898 2538  
                                      i1l4882 1C00                                        i1l4874 1BAA  
                                      i1l4866 1B60                                        i1l4970 21AA  
                                      i1l4858 212E                                        i1l4884 1C20  
                                      i1l4876 1BBA                                        i1l4868 1B70  
                                      i1l4964 215A                                        i1l4990 220E  
                                      i1l4878 1BCA                                        i1l4966 216E  
                                      i1l4992 2228                                        i1l4968 2196  
                                      i1l4994 222C                                        i1l4988 220A  
                                      i2l3910 2550                                        i2l4560 25C8  
                                      i2l3912 255E                                        i2l3920 2570  
                                      _INLVLA 003A44                                        i2l4562 25D6  
                                      i2l3922 2574                                        i2l3914 2560  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l4564 25E2                                        i2l3916 2564  
                                      i2l4900 2468                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l3918 256A  
                                      i2l4902 2628                                        i2l4568 26BC  
                                      i2l4904 2634                                        i2l4906 263A  
                                      i2l4908 263E                                        i2l4890 242A  
                                      i2l4980 237C                                        i2l4892 2438  
                                      i2l4972 223C                                        i2l4982 2380  
                                      i2l4894 2440                                        i2l4886 2410  
                                      i2l4974 224C                                        i2l4984 2394  
                                      i2l4896 244E                                        i2l4976 2274  
                                      i2l4888 241E                                        i2l4898 245A  
                                      i2l4978 2284                                        i2l4996 20C0  
                                      i2l4998 20C4                                  ?_setSteering 001C  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 1ED2  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 26F2  
                            __end_of___xxtofl 1186                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 0BEC                      __end_of_CCP3_SetCallBack 2724  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                      ___flge 17B4                                     ??___aldiv 001C  
                                   ??___fladd 0036                                     ??___awdiv 0018  
                                   ??___flmul 0032                                     ??___fltol 00BA  
                               _CCP3_CallBack 00D1                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 268C                       __end_of_TMR4_Initialize 24F8  
                                      clear_0 1F08                                        clear_1 1F14  
                            ___awdiv@quotient 001A                                        _motPow 008C  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                               _CCP4_CallBack 00CF                                        _smtWay 0078  
                            ?_CCP3_Initialize 0001                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 1A96                               _ADCC_Initialize 1F30  
        __end_of_TMR4_DefaultInterruptHandler 2738         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 2736                                _PMD_Initialize 25A4  
                                __pdataCOMRAM 004C                         __end_of_TMR5_GATE_ISR 23B0  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 26E8  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 26DE  
                   _UART1_DefaultErrorHandler 2724                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 0018  
                                  ___flge@ff1 0014                                    ___flge@ff2 0018  
                     __end_of_PWM7_Initialize 2674                       __end_of_TMR5_Initialize 20C0  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 202C                                  ___xxtofl@val 001C  
                                  __accesstop 0060                       __end_of__initialization 1F26  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003C                                    ___fltol@f1 00B6  
                             _TMR5_WriteTimer 2550                            __size_of_calcSpeed 0212  
                   calcMotorPow@setSpeedDelta 00C2                      __end_of_CCP4_SetCallBack 271A  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 2410  
                                __pidataBANK0 2730                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                             startAccell@MPow 00C0                                ivt0x8_undefint 00AC  
                             fp__TMR4_10msISR 0000                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 265C                        __end_of_PMD_Initialize 25C8  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003C                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 00D7               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                             _calcSteering$3880 0027  
                   __end_of_SYSTEM_Initialize 2076                               _CLC3_Initialize 24F8  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 0060  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 00C7  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 1F8C  
                  __end_of_PWM6_LoadDutyValue 22DE          __end_of_TMR5_SetGateInterruptHandler 2706  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 26FC  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 1B60                                    _getReverse 18B8  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 22DE                                    _distRightM 0094  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 0DFE  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 257C                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01A4  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 1E3E                                       ___aldiv 15A0  
                             __size_of___flge 0104                                       ___fladd 00B2  
                                     ___awdiv 1C26                                       ___flmul 0574  
                                     ___fltol 16AC                     __end_of_UART1_Receive_ISR 1C26  
                        ??_PWM5_LoadDutyValue 0016                                       __pcinit 1ED2  
                   _TMR5_GateInterruptHandler 00CB                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0048  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 25EC  
                                     __ptext1 1CEA                                       __ptext2 146E  
                                     __ptext3 0DFE                                       __ptext4 1186  
                                     __ptext5 22AA                                       __ptext6 22DE  
                                     __ptext7 17B4                                       __ptext8 18B8  
                                     __ptext9 09C4                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                     __end_of_CLC3_Initialize 2524                         _OSCILLATOR_Initialize 26A4  
                                   _T2CONbits 003FAC                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                     _IPR10bits 00398A  
                                     _smtDuty 007C                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0014                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                          end_of_initialization 1F26  
                                   _T2RSTbits 003FAF                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                           ??_SMT1_PR_ACQ_ISR 0011                                 __Lmediumconst 0000  
         __end_of_UART1_SetTxInterruptHandler 26D4                   _UART1_SetTxInterruptHandler 26CA  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             ?_CCP3_SetCallBack 0014  
                            ___aldiv@quotient 001E                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                           _UART1_RxDataHandler 2524  
                        __size_of_startAccell 0132                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0036                                   ___fladd@grs 00B5  
                          getCurve@deltaRight 0016                                 ___xxtofl@sign 0024  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 009F  
                    __size_of_CCP4_CaptureISR 0036             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 202C  
                              __end_of___flge 18B8                    __size_of_UART1_Receive_ISR 00C6  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                               __pidataCOMRAM 273A                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                _TMR5_ReadTimer 25C8  
                         start_initialization 1ED2                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0084  
                               _uart1TxBuffer 0070                           __size_of_getReverse 00FC  
                        __end_of_TMR4_10msISR 2730                                  _middleOffSet 00DE  
                                    ??___flge 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0034                                  _oldDistRight 0090  
                    __size_of_CCP4_Initialize 002E                                   __pdataBANK0 00DE  
                  __end_of_PWM7_LoadDutyValue 237A                             ??_SMT1_Initialize 0014  
                      __end_of_TMR5_ReadTimer 25EC                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 00AE                                     ___fladd@b 00AA  
                         calcMotorPow@addMPow 00C6                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 003C                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                          _UART1_ErrorHandler 00D3                                 __pcstackBANK0 009D  
                           __size_of_actSpeed 0094                            _PWM6_LoadDutyValue 22AA  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 00DB                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 2440                        __size_of_TMR4_CallBack 0030  
                                   _calcSpeed 0BEC                             __size_of_getCurve 0228  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                  _currentSpeed 0088  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK0 00C7  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 1A96  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 26F2  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 26E8  
                                    ?___aldiv 0014                                      ?___fladd 00AA  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 2710  
                                    ?___awdiv 0014             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0007                                      ?___flmul 002A  
                                    ?___fltol 00B6                            ??_UART1_Initialize 0016  
                                   _distLeftM 0098                                     _distFront 004A  
                            _uart1RxLastError 0040                                     _distRight 0096  
                        ??_PWM6_LoadDutyValue 0016                                     _cycle10ms 009C  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 004C           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 2734     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0012             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 2732                                      _CLC3SEL0 003C62  
                                    _CLC3SEL1 003C63                                      _CLC3SEL2 003C64  
                                    _CLC3SEL3 003C65                               _SMT1_PR_ACQ_ISR 20C0  
                               ?_calcSteering 0001                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 237C  
                                   _curveMode 003F                                      _T2CLKCON 003FAE  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                                  ?_calcSpeed 0001                          _INTERRUPT_Initialize 1FE0  
                               ??_setSteering 001F                               ___aldiv@divisor 0018  
                             _SMT1_PW_ACQ_ISR 1F8C                               ___aldiv@counter 001C  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 2470                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      i1u208_20 2548  
                                    i1u208_21 2544                                      _IVTBASEU 003FD7  
                                    i1u350_20 1C00                                      i1u350_21 1BFC  
                                    i1u351_28 1C06                                      i1u344_20 211C  
                                    i1u360_20 216E                                      i1u351_29 1C1C  
                                    i1u344_21 2118                                      i1u360_21 216A  
                                    i1u345_20 2140                                      i1u345_21 213C  
                                    i1u346_20 1B80                                      i1u362_20 21AA  
                                    i1u361_28 2174                                      i1u346_21 1B7C  
                                    i1u362_21 21A6                                      i1u361_29 2188  
                                    i1u355_20 23F4                                      i1u355_21 23F0  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u348_20 1BBA  
                                    i1u347_28 1B96                                      i1u363_28 21B0  
                                    i1u348_21 1BB6                                      i1u347_29 1BAA  
                                    i1u363_29 21C4                                      i1u356_28 23FA  
                                    i1u356_29 240E                                      i1u349_28 1BD0  
                                    i1u349_29 1BE4                                      i1u368_20 2228  
                                    i1u368_21 2224                                      i2u209_40 255E  
                                    i2u209_41 255A                                      i2u352_40 241E  
                                    i2u352_41 241A                                      i2u353_40 244E  
                                    i2u353_41 244A                                      _PIR1bits 0039A1  
                                    i2u370_40 1FBA                                      i2u370_41 1FB6  
                                    i2u364_48 225A                                      i2u364_49 2270  
                                    i2u366_40 2394                                      i2u365_48 2292  
                                    i2u366_41 2390                                      i2u365_49 22A8  
                                    _PIR4bits 0039A4                                      i2u367_48 239A  
                                    i2u367_49 23AE                                      i2u369_40 20E4  
                                    i2u369_41 20E0                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 257C                                      _TMR4_ISR 2204  
                  __end_of_UART1_Transmit_ISR 2152                                 _TMR4_CallBack 23E0  
                                   _smtPeriod 0046                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                          ?_SMT1_Overflow_ISR 0001                                  ??_getReverse 0014  
                              ??_calcMotorPow 00C0                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                             ??_CCP4_Initialize 0016  
                              ??_calcSteering 0025                           ??_SMT1_Overflow_ISR 0011  
                   TMR5_ReadTimer@readValHigh 000F                     __size_of_CCP3_SetCallBack 000A  
                              ?_TMR5_GATE_ISR 0001                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 0006                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 00DD                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0041                            __end_of_getReverse 19B4  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 25A4                           __end_of_setSteering 132A  
                                    __Lrparam 0000                                   _oldDistLeft 003A  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 00C4                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___fladd 04C2  
                            __size_of___awdiv 00C4                              __size_of___flmul 0450  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 2410                       __end_of_SMT1_PR_ACQ_ISR 210A  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                    _TMR4_SetInterruptHandler 2706                                      _actSpeed 1E3E  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 272A  
                                    ___xxtofl 0FD2                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 26CA                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 1FE0  
                                    _getCurve 09C4                                      __ptext10 0BEC  
                                    __ptext11 00B2                                      __ptext20 0574  
                                    __ptext12 132A                                      __ptext21 1C26  
                                    __ptext13 19B4                                      __ptext30 26FC  
                                    __ptext22 202C                                      __ptext14 2312  
                                    __ptext31 24CC                                      __ptext23 1D98  
                                    __ptext15 2346                                      __ptext40 25A4  
                                    __ptext32 2706                                      __ptext24 26CA  
                                    __ptext16 1E3E                                      __ptext41 1A96  
                                    __ptext33 21CC                                      __ptext25 26D4  
                                    __ptext17 15A0                                      __ptext50 2154  
                                    __ptext42 26A4                                      __ptext34 260C  
                                    __ptext26 26DE                                      __ptext18 0FD2  
                                    __ptext51 210A                                      __ptext43 1FE0  
                                    __ptext35 23B0                                      __ptext27 26E8  
                                    __ptext19 16AC                                      __ptext60 272A  
                                    __ptext52 2190                                      __ptext44 24F8  
                                    __ptext36 2644                                      __ptext28 26F2  
                                    __ptext61 2736                                      __ptext53 1B60  
                                    __ptext45 2470                                      __ptext37 265C  
                                    __ptext29 2076                                      __ptext70 2550  
                                    __ptext62 2738                                      __ptext54 2732  
                                    __ptext46 2710                                      __ptext38 2674  
                                    __ptext71 25C8                                      __ptext63 223C  
                                    __ptext55 2734                                      __ptext47 249E  
                                    __ptext39 268C                                      __ptext72 20C0  
                                    __ptext64 2410                                      __ptext56 2724  
                                    __ptext48 271A                                      __ptext73 1F8C  
                                    __ptext65 2274                                      __ptext57 2524  
                                    __ptext49 1F30                                      __ptext74 257C  
                                    __ptext66 2440                                      __ptext58 2204  
                                    __ptext75 0000                                      __ptext67 237C  
                                    __ptext59 23E0                                      __ptext68 2628  
                                    __ptext69 26BC                                      _distLeft 009A  
              __size_of_UART1_SetErrorHandler 000A                                   ??_calcSpeed 00C0  
               __end_of_UART1_SetErrorHandler 26FC                                    _T3GCONbits 003FA7  
                           ??_TMR4_Initialize 0016                             ??_PWM6_Initialize 0014  
                               __size_of_main 0020                                      _oldSpeed 0086  
                                  _T5GCONbits 003F9B                                 __size_of_loop 00AE  
                             _SMT1_Initialize 23B0                                   _IVTLOCKbits 003FD4  
                                    _setMotor 19B4                                      _setSpeed 008A  
                    __size_of_TMR5_WriteTimer 002C                     _UART1_OverrunErrorHandler 00D5  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                    __end_of_PWM8_LoadDutyValue 2346  
                             _CCP3_CaptureISR 223C                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 2644  
   __size_of_TMR5_DefaultGateInterruptHandler 001C            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 2628  
                         __end_of_startAccell 15A0                                _battCheckCount 008E  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0092                               ??_TMR5_GATE_ISR 0011  
                 __end_of_UART1_RxDataHandler 2550                                   _uart1RxHead 0043  
                        _CCP4_DefaultCallBack 2440                                   _uart1TxHead 0045  
                                 _uart1RxTail 0042                                   _uart1TxTail 0044  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 2346  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 1186  
                             _CCP4_CaptureISR 2274                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 146E                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 0FD2  
                         _uart1RxStatusBuffer 0060                              ??_TMR5_ReadTimer 000B  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 272A  
                                 _reverseTime 0082                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 26BC                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                               actSpeed@speed 0024                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 00C4                              _CCP3_SetCallBack 271A  
                   __size_of_UART1_Initialize 00A6                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 249E  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 0029  
                    _UART1_TxInterruptHandler 00D9                                 ___fladd@signs 00B2  
                         __end_of_Default_ISR 273A                       __end_of_SMT1_Initialize 23E0  
              __end_of_PIN_MANAGER_Initialize 1B60                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 00B3                                  ___fladd@bexp 00B4  
                ?_UART1_SetTxInterruptHandler 0014                       __end_of_CCP3_CaptureISR 2272  
