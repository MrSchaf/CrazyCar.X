

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jan 24 21:39:28 2024

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=4,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=4,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=4,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=4,class=CODE,delta=1
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=4,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=4,class=CODE,delta=1
   102                           	psect	text87,global,reloc=4,class=CODE,delta=1
   103                           	psect	text88,global,reloc=4,class=CODE,delta=1
   104                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   106                           	psect	text89,global,reloc=4,class=CODE,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109  0000                     
   110                           ; Version 2.20
   111                           ; Generated 05/05/2020 GMT
   112                           ; 
   113                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F46K42 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144  0000                     _ADERRL	set	16098
   145  0000                     _ADERRH	set	16099
   146  0000                     _ADPREVL	set	16109
   147  0000                     _ADPREVH	set	16110
   148  0000                     _ADFLTRL	set	16102
   149  0000                     _ADFLTRH	set	16103
   150  0000                     _ADACCL	set	16104
   151  0000                     _ADACCH	set	16105
   152  0000                     _ADCNT	set	16107
   153  0000                     _ADRESL	set	16111
   154  0000                     _ADRESH	set	16112
   155  0000                     _ADCON0	set	16120
   156  0000                     _ADCON1	set	16121
   157  0000                     _ADPREH	set	16119
   158  0000                     _ADPREL	set	16118
   159  0000                     _ADCAP	set	16117
   160  0000                     _ADACQH	set	16116
   161  0000                     _ADPCH	set	16113
   162  0000                     _ADRPT	set	16108
   163  0000                     _ADACCU	set	16106
   164  0000                     _ADSTPTH	set	16101
   165  0000                     _ADSTPTL	set	16100
   166  0000                     _ADUTHH	set	16097
   167  0000                     _ADUTHL	set	16096
   168  0000                     _ADLTHH	set	16095
   169  0000                     _T2CON	set	16300
   170  0000                     _T2TMR	set	16298
   171  0000                     _T2PR	set	16299
   172  0000                     _T2HLT	set	16301
   173  0000                     _T2CLKCON	set	16302
   174  0000                     _SMT1SIG	set	16162
   175  0000                     _SMT1WIN	set	16163
   176  0000                     _SMT1CLK	set	16161
   177  0000                     _SMT1STAT	set	16160
   178  0000                     _SMT1CON1	set	16159
   179  0000                     _PWM8DCL	set	16224
   180  0000                     _PWM8DCH	set	16225
   181  0000                     _PWM8CON	set	16226
   182  0000                     _CCPTMRS1bits	set	16223
   183  0000                     _PWM7DCL	set	16228
   184  0000                     _PWM7DCH	set	16229
   185  0000                     _PWM7CON	set	16230
   186  0000                     _T4CON	set	16288
   187  0000                     _PIR7bits	set	14759
   188  0000                     _T4TMR	set	16286
   189  0000                     _T4PR	set	16287
   190  0000                     _T4RST	set	16291
   191  0000                     _T4HLT	set	16289
   192  0000                     _T4CLKCON	set	16290
   193  0000                     _T3CON	set	16294
   194  0000                     _TMR3L	set	16292
   195  0000                     _TMR3H	set	16293
   196  0000                     _T3CLK	set	16297
   197  0000                     _T3GATE	set	16296
   198  0000                     _T3GCON	set	16295
   199  0000                     _T5CON	set	16282
   200  0000                     _T5CLK	set	16285
   201  0000                     _T5GATE	set	16284
   202  0000                     _CCPR4L	set	16240
   203  0000                     _CCPR4H	set	16241
   204  0000                     _CCP4CAP	set	16243
   205  0000                     _CCP4CON	set	16242
   206  0000                     _IPR9bits	set	14729
   207  0000                     _IVTBASEL	set	16341
   208  0000                     _IVTBASEH	set	16342
   209  0000                     _IVTBASEU	set	16343
   210  0000                     _CCP4PPS	set	15056
   211  0000                     _SMT1WINPPS	set	15057
   212  0000                     _CLCIN0PPS	set	15065
   213  0000                     _CLCIN3PPS	set	15068
   214  0000                     _TRISD	set	16325
   215  0000                     _TRISC	set	16324
   216  0000                     _TRISB	set	16323
   217  0000                     _LATC	set	16316
   218  0000                     _LATB	set	16315
   219  0000                     _OSCTUNE	set	14814
   220  0000                     _OSCFRQ	set	14815
   221                           
   222                           	psect	nvCOMRAM
   223  000038                     __pnvCOMRAM:
   224                           	callstack 0
   225  000038                     _TMR5_GateInterruptHandler:
   226                           	callstack 0
   227  000038                     	ds	2
   228  00003A                     _timer5ReloadVal:
   229                           	callstack 0
   230  00003A                     	ds	2
   231  00003C                     _UART1_TxInterruptHandler:
   232                           	callstack 0
   233  00003C                     	ds	2
   234  00003E                     _UART1_RxInterruptHandler:
   235                           	callstack 0
   236  00003E                     	ds	2
   237  000040                     _uart1TxBufferRemaining:
   238                           	callstack 0
   239  000040                     	ds	1
   240                           
   241                           	psect	nvBANK0
   242  0000F0                     __pnvBANK0:
   243                           	callstack 0
   244  0000F0                     _BatteryVolt:
   245                           	callstack 0
   246  0000F0                     	ds	2
   247  0000F2                     _TMR4_InterruptHandler:
   248                           	callstack 0
   249  0000F2                     	ds	2
   250  0000F4                     _timer3ReloadVal:
   251                           	callstack 0
   252  0000F4                     	ds	2
   253  0000F6                     _CCP4_CallBack:
   254                           	callstack 0
   255  0000F6                     	ds	2
   256  0000F8                     _CCP3_CallBack:
   257                           	callstack 0
   258  0000F8                     	ds	2
   259  0000FA                     _UART1_ErrorHandler:
   260                           	callstack 0
   261  0000FA                     	ds	2
   262  0000FC                     _UART1_OverrunErrorHandler:
   263                           	callstack 0
   264  0000FC                     	ds	2
   265  0000FE                     _UART1_FramingErrorHandler:
   266                           	callstack 0
   267  0000FE                     	ds	2
   268  0000                     _CLC3CON	set	15456
   269  0000                     _U1ERRIRbits	set	15865
   270  0000                     _ADCON1bits	set	16121
   271  0000                     _ADSTATbits	set	16124
   272  0000                     _ADCON2bits	set	16122
   273  0000                     _ADCON3bits	set	16123
   274  0000                     _ADCON0bits	set	16120
   275  0000                     _SMT1PR	set	16155
   276  0000                     _SMT1STATbits	set	16160
   277  0000                     _SMT1CON0bits	set	16158
   278  0000                     _SMT1CON1bits	set	16159
   279  0000                     _PR2	set	16299
   280  0000                     _TMR2	set	16298
   281  0000                     _T2CONbits	set	16300
   282  0000                     _T2RSTbits	set	16303
   283  0000                     _T2HLTbits	set	16301
   284  0000                     _PR4	set	16287
   285  0000                     _TMR4	set	16286
   286  0000                     _T4CONbits	set	16288
   287  0000                     _T4RSTbits	set	16291
   288  0000                     _T4HLTbits	set	16289
   289  0000                     _T3GCONbits	set	16295
   290  0000                     _T3CONbits	set	16294
   291  0000                     _T5GCONbits	set	16283
   292  0000                     _T5CONbits	set	16282
   293  0000                     _IVTLOCKbits	set	16340
   294  0000                     _GIE	set	130711
   295  0000                     _IPR1bits	set	14721
   296  0000                     _IPR3bits	set	14723
   297  0000                     _PIE3bits	set	14739
   298  0000                     _PMD0	set	14784
   299  0000                     _OSCCON1	set	14809
   300  0000                     _OSCCON3	set	14811
   301  0000                     _OSCEN	set	14813
   302  0000                     _RA0PPS	set	14848
   303  0000                     _RA1PPS	set	14849
   304  0000                     _ANSELA	set	14912
   305  0000                     _ANSELB	set	14928
   306  0000                     _ANSELC	set	14944
   307  0000                     _ANSELD	set	14960
   308  0000                     _LATA	set	16314
   309  0000                     _LATD	set	16317
   310  0000                     _LATE	set	16318
   311  0000                     _PMD7	set	14791
   312  0000                     _PMD6	set	14790
   313  0000                     _PMD5	set	14789
   314  0000                     _PMD4	set	14788
   315  0000                     _PMD3	set	14787
   316  0000                     _PMD2	set	14786
   317  0000                     _PMD1	set	14785
   318  0000                     _TRISA	set	16322
   319  0000                     _TRISE	set	16326
   320  0000                     _PORTDbits	set	16333
   321  0000                     _INTCON0bits	set	16338
   322  0000                     _INLVLD	set	14964
   323  0000                     _SLRCOND	set	14963
   324  0000                     _ODCOND	set	14962
   325  0000                     _RD0I2C	set	14970
   326  0000                     _WPUD	set	14961
   327  0000                     _ANSELE	set	14976
   328  0000                     _INLVLC	set	14948
   329  0000                     _SLRCONC	set	14947
   330  0000                     _ODCONC	set	14946
   331  0000                     _RC3I2C	set	14954
   332  0000                     _WPUC	set	14945
   333  0000                     _INLVLB	set	14932
   334  0000                     _SLRCONB	set	14931
   335  0000                     _ODCONB	set	14930
   336  0000                     _RB1I2C	set	14938
   337  0000                     _WPUB	set	14929
   338  0000                     _T5GPPS	set	15049
   339  0000                     _CCP3PPS	set	15055
   340  0000                     _INLVLE	set	14980
   341  0000                     _SLRCONE	set	14979
   342  0000                     _ODCONE	set	14978
   343  0000                     _WPUE	set	14977
   344  0000                     _INLVLA	set	14916
   345  0000                     _SLRCONA	set	14915
   346  0000                     _ODCONA	set	14914
   347  0000                     _WPUA	set	14913
   348  0000                     _RB2I2C	set	14939
   349  0000                     _RC4I2C	set	14955
   350  0000                     _RD1I2C	set	14971
   351  0000                     _U1RXPPS	set	15077
   352  0000                     _RA3PPS	set	14851
   353  0000                     _RA4PPS	set	14852
   354  0000                     _CLC3CONbits	set	15456
   355  0000                     _U1RXB	set	15848
   356  0000                     _U1TXB	set	15850
   357  0000                     _U1P1L	set	15852
   358  0000                     _RB3PPS	set	14859
   359  0000                     _CLCIN2PPS	set	15067
   360  0000                     _SMT1SIGPPS	set	15058
   361  0000                     _PIE7bits	set	14743
   362  0000                     _PIE8bits	set	14744
   363  0000                     _PIE9bits	set	14745
   364  0000                     _PIR9bits	set	14761
   365  0000                     _SMT1TMR	set	16146
   366  0000                     _SMT1CPR	set	16149
   367  0000                     _SMT1CPW	set	16152
   368  0000                     _ADLTHL	set	16094
   369  0000                     _SMT1PRL	set	16155
   370  0000                     _SMT1PRH	set	16156
   371  0000                     _SMT1PRU	set	16157
   372  0000                     _SMT1CON0	set	16158
   373  0000                     _CCPTMRS0bits	set	16222
   374  0000                     _CCPR3L	set	16244
   375  0000                     _CCPR3H	set	16245
   376  0000                     _CCP3CON	set	16246
   377  0000                     _U1ERRIE	set	15866
   378  0000                     _U1ERRIR	set	15865
   379  0000                     _U1UIR	set	15864
   380  0000                     _U1FIFO	set	15863
   381  0000                     _U1BRGH	set	15862
   382  0000                     _U1BRGL	set	15861
   383  0000                     _U1CON2	set	15860
   384  0000                     _U1CON1	set	15859
   385  0000                     _U1CON0	set	15858
   386  0000                     _U1P3H	set	15857
   387  0000                     _U1P3L	set	15856
   388  0000                     _U1P2H	set	15855
   389  0000                     _U1P2L	set	15854
   390  0000                     _U1P1H	set	15853
   391  0000                     _IVTLOCK	set	16340
   392  0000                     _IPR7bits	set	14727
   393  0000                     _IPR8bits	set	14728
   394  0000                     _IPR10bits	set	14730
   395  0000                     _PIE1bits	set	14737
   396  0000                     _TMR5L	set	16280
   397  0000                     _TMR5H	set	16281
   398  0000                     _T5GCON	set	16283
   399  0000                     _CCP3CAP	set	16247
   400  0000                     _PIR10bits	set	14762
   401  0000                     _PIR1bits	set	14753
   402  0000                     _PIR6bits	set	14758
   403  0000                     _PIR8bits	set	14760
   404  0000                     _PIE10bits	set	14746
   405  0000                     _PWM6DCL	set	16232
   406  0000                     _PWM6DCH	set	16233
   407  0000                     _PWM6CON	set	16234
   408  0000                     _PWM5DCL	set	16236
   409  0000                     _PWM5DCH	set	16237
   410  0000                     _PWM5CON	set	16238
   411  0000                     _PIR4bits	set	14756
   412  0000                     _CLC3GLS3	set	15465
   413  0000                     _CLC3GLS2	set	15464
   414  0000                     _CLC3GLS1	set	15463
   415  0000                     _CLC3GLS0	set	15462
   416  0000                     _CLC3SEL3	set	15461
   417  0000                     _CLC3SEL2	set	15460
   418  0000                     _CLC3SEL1	set	15459
   419  0000                     _CLC3SEL0	set	15458
   420  0000                     _CLC3POL	set	15457
   421  0000                     _T2RST	set	16303
   422  0000                     _ADACQL	set	16115
   423  0000                     _ADCLK	set	16127
   424  0000                     _ADACT	set	16126
   425  0000                     _ADREF	set	16125
   426  0000                     _ADSTAT	set	16124
   427  0000                     _ADCON3	set	16123
   428  0000                     _ADCON2	set	16122
   429                           
   430                           	psect	smallconst
   431  001000                     __psmallconst:
   432                           	callstack 0
   433  001000  00                 	db	0
   434  001001                     STR_2:
   435                           
   436                           ; BSR set to: 0
   437  001001  4F                 	db	79	;'O'
   438  001002  75                 	db	117	;'u'
   439  001003  74                 	db	116	;'t'
   440  001004  20                 	db	32
   441  001005  7C                 	db	124
   442  001006  20                 	db	32
   443  001007  64                 	db	100	;'d'
   444  001008  4C                 	db	76	;'L'
   445  001009  3D                 	db	61	;'='
   446  00100A  20                 	db	32
   447  00100B  25                 	db	37
   448  00100C  64                 	db	100	;'d'
   449  00100D  20                 	db	32
   450  00100E  7C                 	db	124
   451  00100F  20                 	db	32
   452  001010  64                 	db	100	;'d'
   453  001011  52                 	db	82	;'R'
   454  001012  3D                 	db	61	;'='
   455  001013  20                 	db	32
   456  001014  25                 	db	37
   457  001015  64                 	db	100	;'d'
   458  001016  00                 	db	0
   459  001017                     STR_5:
   460                           
   461                           ; BSR set to: 0
   462  001017  20                 	db	32
   463  001018  20                 	db	32
   464  001019  20                 	db	32
   465  00101A  43                 	db	67	;'C'
   466  00101B  75                 	db	117	;'u'
   467  00101C  72                 	db	114	;'r'
   468  00101D  76                 	db	118	;'v'
   469  00101E  65                 	db	101	;'e'
   470  00101F  52                 	db	82	;'R'
   471  001020  69                 	db	105	;'i'
   472  001021  67                 	db	103	;'g'
   473  001022  68                 	db	104	;'h'
   474  001023  74                 	db	116	;'t'
   475  001024  00                 	db	0
   476  001025                     STR_3:
   477                           
   478                           ; BSR set to: 0
   479  001025  20                 	db	32
   480  001026  20                 	db	32
   481  001027  20                 	db	32
   482  001028  43                 	db	67	;'C'
   483  001029  75                 	db	117	;'u'
   484  00102A  72                 	db	114	;'r'
   485  00102B  76                 	db	118	;'v'
   486  00102C  65                 	db	101	;'e'
   487  00102D  4C                 	db	76	;'L'
   488  00102E  65                 	db	101	;'e'
   489  00102F  66                 	db	102	;'f'
   490  001030  74                 	db	116	;'t'
   491  001031  00                 	db	0
   492  001032                     STR_9:
   493                           
   494                           ; BSR set to: 0
   495  001032  41                 	db	65	;'A'
   496  001033  66                 	db	102	;'f'
   497  001034  74                 	db	116	;'t'
   498  001035  65                 	db	101	;'e'
   499  001036  72                 	db	114	;'r'
   500  001037  43                 	db	67	;'C'
   501  001038  75                 	db	117	;'u'
   502  001039  72                 	db	114	;'r'
   503  00103A  76                 	db	118	;'v'
   504  00103B  65                 	db	101	;'e'
   505  00103C  0A                 	db	10
   506  00103D  00                 	db	0
   507  00103E                     STR_1:
   508                           
   509                           ; BSR set to: 0
   510  00103E  42                 	db	66	;'B'
   511  00103F  56                 	db	86	;'V'
   512  001040  6F                 	db	111	;'o'
   513  001041  6C                 	db	108	;'l'
   514  001042  74                 	db	116	;'t'
   515  001043  3A                 	db	58	;':'
   516  001044  20                 	db	32
   517  001045  25                 	db	37
   518  001046  64                 	db	100	;'d'
   519  001047  0A                 	db	10
   520  001048  00                 	db	0
   521  001049                     STR_7:
   522                           
   523                           ; BSR set to: 0
   524  001049  64                 	db	100	;'d'
   525  00104A  69                 	db	105	;'i'
   526  00104B  73                 	db	115	;'s'
   527  00104C  74                 	db	116	;'t'
   528  00104D  4C                 	db	76	;'L'
   529  00104E  3D                 	db	61	;'='
   530  00104F  20                 	db	32
   531  001050  25                 	db	37
   532  001051  64                 	db	100	;'d'
   533  001052  0A                 	db	10
   534  001053  00                 	db	0
   535  001054                     STR_8:
   536                           
   537                           ; BSR set to: 0
   538  001054  64                 	db	100	;'d'
   539  001055  69                 	db	105	;'i'
   540  001056  73                 	db	115	;'s'
   541  001057  74                 	db	116	;'t'
   542  001058  52                 	db	82	;'R'
   543  001059  3D                 	db	61	;'='
   544  00105A  20                 	db	32
   545  00105B  25                 	db	37
   546  00105C  64                 	db	100	;'d'
   547  00105D  0A                 	db	10
   548  00105E  00                 	db	0
   549  00105F                     STR_10:
   550                           
   551                           ; BSR set to: 0
   552  00105F  4F                 	db	79	;'O'
   553  001060  75                 	db	117	;'u'
   554  001061  74                 	db	116	;'t'
   555  001062  43                 	db	67	;'C'
   556  001063  75                 	db	117	;'u'
   557  001064  72                 	db	114	;'r'
   558  001065  76                 	db	118	;'v'
   559  001066  65                 	db	101	;'e'
   560  001067  0A                 	db	10
   561  001068  00                 	db	0
   562  001069                     STR_6:
   563                           
   564                           ; BSR set to: 0
   565  001069  49                 	db	73	;'I'
   566  00106A  6E                 	db	110	;'n'
   567  00106B  43                 	db	67	;'C'
   568  00106C  75                 	db	117	;'u'
   569  00106D  72                 	db	114	;'r'
   570  00106E  76                 	db	118	;'v'
   571  00106F  65                 	db	101	;'e'
   572  001070  0A                 	db	10
   573  001071  00                 	db	0
   574  001072  00                 	db	0	; dummy byte at the end
   575  0000                     
   576                           ; #config settings
   577                           
   578                           	psect	cinit
   579  003C22                     __pcinit:
   580                           	callstack 0
   581  003C22                     start_initialization:
   582                           	callstack 0
   583  003C22                     __initialization:
   584                           	callstack 0
   585                           
   586                           ; Clear objects allocated to BANK1 (32 bytes)
   587  003C22  EE00  F100         	lfsr	0,__pbssBANK1
   588  003C26  0E20               	movlw	32
   589  003C28                     clear_0:
   590  003C28  6AEE               	clrf	postinc0,c
   591  003C2A  06E8               	decf	wreg,f,c
   592  003C2C  E1FD               	bnz	clear_0
   593                           
   594                           ; Clear objects allocated to BANK0 (60 bytes)
   595  003C2E  EE00  F0B4         	lfsr	0,__pbssBANK0
   596  003C32  0E3C               	movlw	60
   597  003C34                     clear_1:
   598  003C34  6AEE               	clrf	postinc0,c
   599  003C36  06E8               	decf	wreg,f,c
   600  003C38  E1FD               	bnz	clear_1
   601                           
   602                           ; Clear objects allocated to COMRAM (21 bytes)
   603  003C3A  EE00  F023         	lfsr	0,__pbssCOMRAM
   604  003C3E  0E15               	movlw	21
   605  003C40                     clear_2:
   606  003C40  6AEE               	clrf	postinc0,c
   607  003C42  06E8               	decf	wreg,f,c
   608  003C44  E1FD               	bnz	clear_2
   609                           
   610                           ;
   611                           ; Setup IVTBASE
   612                           ;
   613  003C46  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   614  003C48  6ED5               	movwf	213,c
   615  003C4A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   616  003C4C  6ED6               	movwf	214,c
   617  003C4E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   618  003C50  6ED7               	movwf	215,c
   619  003C52                     end_of_initialization:
   620                           	callstack 0
   621  003C52                     __end_of__initialization:
   622                           	callstack 0
   623  003C52  0100               	movlb	0
   624  003C54  EFDD  F01F         	goto	_main	;jump to C main() function
   625                           
   626                           	psect	bssCOMRAM
   627  000023                     __pbssCOMRAM:
   628                           	callstack 0
   629  000023                     _flags:
   630                           	callstack 0
   631  000023                     	ds	2
   632  000025                     _motPow:
   633                           	callstack 0
   634  000025                     	ds	2
   635  000027                     TMR4_ISR@CountCallBack:
   636                           	callstack 0
   637  000027                     	ds	2
   638  000029                     _distRightM:
   639                           	callstack 0
   640  000029                     	ds	2
   641  00002B                     _distLeftM:
   642                           	callstack 0
   643  00002B                     	ds	2
   644  00002D                     _reverseCount:
   645                           	callstack 0
   646  00002D                     	ds	1
   647  00002E                     _uart1RxLastError:
   648                           	callstack 0
   649  00002E                     	ds	1
   650  00002F                     _uart1RxCount:
   651                           	callstack 0
   652  00002F                     	ds	1
   653  000030                     _uart1RxTail:
   654                           	callstack 0
   655  000030                     	ds	1
   656  000031                     _uart1RxHead:
   657                           	callstack 0
   658  000031                     	ds	1
   659  000032                     _uart1TxTail:
   660                           	callstack 0
   661  000032                     	ds	1
   662  000033                     _uart1TxHead:
   663                           	callstack 0
   664  000033                     	ds	1
   665  000034                     _smtPeriod:
   666                           	callstack 0
   667  000034                     	ds	4
   668                           
   669                           	psect	bssBANK0
   670  0000B4                     __pbssBANK0:
   671                           	callstack 0
   672  0000B4                     _uart1RxStatusBuffer:
   673                           	callstack 0
   674  0000B4                     	ds	8
   675  0000BC                     _uart1RxBuffer:
   676                           	callstack 0
   677  0000BC                     	ds	8
   678  0000C4                     _uart1TxBuffer:
   679                           	callstack 0
   680  0000C4                     	ds	8
   681  0000CC                     _smtWay:
   682                           	callstack 0
   683  0000CC                     	ds	4
   684  0000D0                     _smtDuty:
   685                           	callstack 0
   686  0000D0                     	ds	4
   687  0000D4                     _nout:
   688                           	callstack 0
   689  0000D4                     	ds	2
   690  0000D6                     _width:
   691                           	callstack 0
   692  0000D6                     	ds	2
   693  0000D8                     _prec:
   694                           	callstack 0
   695  0000D8                     	ds	2
   696  0000DA                     _actMotorPow:
   697                           	callstack 0
   698  0000DA                     	ds	2
   699  0000DC                     _oldSpeed:
   700                           	callstack 0
   701  0000DC                     	ds	2
   702  0000DE                     _currentSpeed:
   703                           	callstack 0
   704  0000DE                     	ds	2
   705  0000E0                     _setSpeed:
   706                           	callstack 0
   707  0000E0                     	ds	2
   708  0000E2                     _oldDistRight:
   709                           	callstack 0
   710  0000E2                     	ds	2
   711  0000E4                     _oldDistLeft:
   712                           	callstack 0
   713  0000E4                     	ds	2
   714  0000E6                     _distRight:
   715                           	callstack 0
   716  0000E6                     	ds	2
   717  0000E8                     _distLeft:
   718                           	callstack 0
   719  0000E8                     	ds	2
   720  0000EA                     _delay:
   721                           	callstack 0
   722  0000EA                     	ds	1
   723  0000EB                     _cycle10ms:
   724                           	callstack 0
   725  0000EB                     	ds	1
   726  0000EC                     _curveMode:
   727                           	callstack 0
   728  0000EC                     	ds	1
   729  0000ED                     _driveMode:
   730                           	callstack 0
   731  0000ED                     	ds	1
   732  0000EE                     _distFront:
   733                           	callstack 0
   734  0000EE                     	ds	2
   735                           
   736                           	psect	bssBANK1
   737  000100                     __pbssBANK1:
   738                           	callstack 0
   739  000100                     _dbuf:
   740                           	callstack 0
   741  000100                     	ds	32
   742                           
   743                           	psect	cstackBANK1
   744  000120                     __pcstackBANK1:
   745                           	callstack 0
   746  000120                     vfprintf@cfmt:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x0
   750  000120                     	ds	2
   751  000122                     ?_printf:
   752                           	callstack 0
   753  000122                     printf@fmt:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x2
   757  000122                     	ds	6
   758  000128                     printf@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x8
   762  000128                     	ds	2
   763  00012A                     ??_getCurve:
   764                           
   765                           ; 1 bytes @ 0xA
   766  00012A                     	ds	2
   767  00012C                     getCurve@deltaLeft:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0xC
   771  00012C                     	ds	2
   772  00012E                     getCurve@deltaRight:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0xE
   776  00012E                     	ds	2
   777                           
   778                           	psect	cstackBANK0
   779  000060                     __pcstackBANK0:
   780                           	callstack 0
   781  000060                     ??_TMR5_Initialize:
   782  000060                     ??_PWM7_LoadDutyValue:
   783  000060                     ??_PWM8_LoadDutyValue:
   784  000060                     ??_PWM5_LoadDutyValue:
   785  000060                     ??_PWM6_LoadDutyValue:
   786  000060                     ??_ADCC_GetSingleConversion:
   787  000060                     ?___awdiv:
   788                           	callstack 0
   789  000060                     ?___aldiv:
   790                           	callstack 0
   791  000060                     ?___aodiv:
   792                           	callstack 0
   793  000060                     ?___aomod:
   794                           	callstack 0
   795  000060                     ___awdiv@dividend:
   796                           	callstack 0
   797  000060                     fputc@c:
   798                           	callstack 0
   799  000060                     strlen@a:
   800                           	callstack 0
   801  000060                     ___aldiv@dividend:
   802                           	callstack 0
   803  000060                     ___aodiv@dividend:
   804                           	callstack 0
   805  000060                     ___aomod@dividend:
   806                           	callstack 0
   807                           
   808                           ; 8 bytes @ 0x0
   809  000060                     	ds	2
   810  000062                     setMotor@motorPower:
   811                           	callstack 0
   812  000062                     ___awdiv@divisor:
   813                           	callstack 0
   814  000062                     fputc@fp:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x2
   818  000062                     	ds	2
   819  000064                     ??_setMotor:
   820  000064                     ??_fputc:
   821  000064                     ___awdiv@counter:
   822                           	callstack 0
   823  000064                     ___aldiv@divisor:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x4
   827  000064                     	ds	1
   828  000065                     ___awdiv@sign:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x5
   832  000065                     	ds	1
   833  000066                     ___awdiv@quotient:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x6
   837  000066                     	ds	2
   838  000068                     ?___xxtofl:
   839                           	callstack 0
   840  000068                     ___aldiv@counter:
   841                           	callstack 0
   842  000068                     setSteering@steering:
   843                           	callstack 0
   844  000068                     ___xxtofl@val:
   845                           	callstack 0
   846  000068                     ___aodiv@divisor:
   847                           	callstack 0
   848  000068                     ___aomod@divisor:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x8
   852  000068                     	ds	1
   853  000069                     ___aldiv@sign:
   854                           	callstack 0
   855  000069                     fputs@s:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x9
   859  000069                     	ds	1
   860  00006A                     setSteering@steeringMode:
   861                           	callstack 0
   862  00006A                     ___aldiv@quotient:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0xA
   866  00006A                     	ds	1
   867  00006B                     ??_setSteering:
   868  00006B                     fputs@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0xB
   872  00006B                     	ds	1
   873  00006C                     ??___xxtofl:
   874                           
   875                           ; 1 bytes @ 0xC
   876  00006C                     	ds	1
   877  00006D                     fputs@c:
   878                           	callstack 0
   879  00006D                     setSteering@steeringF:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0xD
   883  00006D                     	ds	1
   884  00006E                     actSpeed@speed:
   885                           	callstack 0
   886  00006E                     fputs@i:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xE
   890  00006E                     	ds	1
   891  00006F                     setSteering@steeringB:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0xF
   895  00006F                     	ds	1
   896  000070                     ?_abs:
   897                           	callstack 0
   898  000070                     ?_pad:
   899                           	callstack 0
   900  000070                     ___aodiv@counter:
   901                           	callstack 0
   902  000070                     ___xxtofl@sign:
   903                           	callstack 0
   904  000070                     pad@fp:
   905                           	callstack 0
   906  000070                     abs@a:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x10
   910  000070                     	ds	1
   911  000071                     ??_calcSteering:
   912  000071                     ___aodiv@sign:
   913                           	callstack 0
   914  000071                     ___xxtofl@exp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x11
   918  000071                     	ds	1
   919  000072                     ??_abs:
   920  000072                     pad@buf:
   921                           	callstack 0
   922  000072                     ___xxtofl@arg:
   923                           	callstack 0
   924  000072                     ___aodiv@quotient:
   925                           	callstack 0
   926                           
   927                           ; 8 bytes @ 0x12
   928  000072                     	ds	1
   929  000073                     calcSteering@delta:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x13
   933  000073                     	ds	1
   934  000074                     pad@p:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x14
   938  000074                     	ds	2
   939  000076                     ?___flmul:
   940                           	callstack 0
   941  000076                     pad@i:
   942                           	callstack 0
   943  000076                     ___flge@ff1:
   944                           	callstack 0
   945  000076                     ___flmul@b:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x16
   949  000076                     	ds	2
   950  000078                     pad@w:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x18
   954  000078                     	ds	2
   955  00007A                     ?_dtoa:
   956                           	callstack 0
   957  00007A                     dtoa@fp:
   958                           	callstack 0
   959  00007A                     ___flge@ff2:
   960                           	callstack 0
   961  00007A                     ___flmul@a:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x1A
   965  00007A                     	ds	2
   966  00007C                     dtoa@d:
   967                           	callstack 0
   968                           
   969                           ; 8 bytes @ 0x1C
   970  00007C                     	ds	2
   971  00007E                     ??___flmul:
   972  00007E                     ??___flge:
   973                           
   974                           ; 1 bytes @ 0x1E
   975  00007E                     	ds	4
   976  000082                     ___flmul@sign:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x22
   980  000082                     	ds	1
   981  000083                     ___flmul@aexp:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x23
   985  000083                     	ds	1
   986  000084                     ??_dtoa:
   987  000084                     ___flmul@grs:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x24
   991  000084                     	ds	4
   992  000088                     ___flmul@bexp:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x28
   996  000088                     	ds	1
   997  000089                     ___flmul@prod:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x29
  1001  000089                     	ds	3
  1002  00008C                     _dtoa$3454:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x2C
  1006  00008C                     	ds	1
  1007  00008D                     ___flmul@temp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2D
  1011  00008D                     	ds	1
  1012  00008E                     dtoa@p:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x2E
  1016  00008E                     	ds	1
  1017  00008F                     ?___fladd:
  1018                           	callstack 0
  1019  00008F                     ___fladd@b:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x2F
  1023  00008F                     	ds	1
  1024  000090                     dtoa@w:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x30
  1028  000090                     	ds	2
  1029  000092                     dtoa@s:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x32
  1033  000092                     	ds	1
  1034  000093                     ___fladd@a:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x33
  1038  000093                     	ds	1
  1039  000094                     dtoa@n:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x34
  1043  000094                     	ds	3
  1044  000097                     ??___fladd:
  1045                           
  1046                           ; 1 bytes @ 0x37
  1047  000097                     	ds	4
  1048  00009B                     ___fladd@signs:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x3B
  1052  00009B                     	ds	1
  1053  00009C                     ___fladd@aexp:
  1054                           	callstack 0
  1055  00009C                     dtoa@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x3C
  1059  00009C                     	ds	1
  1060  00009D                     ___fladd@bexp:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x3D
  1064  00009D                     	ds	1
  1065  00009E                     ?_vfpfcnvrt:
  1066                           	callstack 0
  1067  00009E                     ___fladd@grs:
  1068                           	callstack 0
  1069  00009E                     vfpfcnvrt@fp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x3E
  1073  00009E                     	ds	1
  1074  00009F                     ?___fltol:
  1075                           	callstack 0
  1076  00009F                     ___fltol@f1:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x3F
  1080  00009F                     	ds	1
  1081  0000A0                     vfpfcnvrt@fmt:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x40
  1085  0000A0                     	ds	2
  1086  0000A2                     vfpfcnvrt@ap:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x42
  1090  0000A2                     	ds	1
  1091  0000A3                     ??___fltol:
  1092                           
  1093                           ; 1 bytes @ 0x43
  1094  0000A3                     	ds	1
  1095  0000A4                     ??_vfpfcnvrt:
  1096                           
  1097                           ; 1 bytes @ 0x44
  1098  0000A4                     	ds	2
  1099  0000A6                     vfpfcnvrt@ll:
  1100                           	callstack 0
  1101                           
  1102                           ; 8 bytes @ 0x46
  1103  0000A6                     	ds	1
  1104  0000A7                     ??_calcSpeed:
  1105  0000A7                     ??_calcMotorPow:
  1106                           
  1107                           ; 1 bytes @ 0x47
  1108  0000A7                     	ds	2
  1109  0000A9                     calcMotorPow@setSpeedDelta:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x49
  1113  0000A9                     	ds	2
  1114  0000AB                     calcSpeed@speed:
  1115                           	callstack 0
  1116  0000AB                     calcMotorPow@oldSpeedDelta:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x4B
  1120  0000AB                     	ds	2
  1121  0000AD                     calcMotorPow@addMPow:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x4D
  1125  0000AD                     	ds	1
  1126  0000AE                     ?_vfprintf:
  1127                           	callstack 0
  1128  0000AE                     vfprintf@fp:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x4E
  1132  0000AE                     	ds	2
  1133  0000B0                     vfprintf@fmt:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x50
  1137  0000B0                     	ds	2
  1138  0000B2                     vfprintf@ap:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x52
  1142  0000B2                     	ds	2
  1143                           
  1144                           	psect	cstackCOMRAM
  1145  000001                     __pcstackCOMRAM:
  1146                           	callstack 0
  1147  000001                     CCP3_DefaultCallBack@capturedValue:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x0
  1151  000001                     	ds	2
  1152  000003                     ??_CCP3_CaptureISR:
  1153                           
  1154                           ; 1 bytes @ 0x2
  1155  000003                     	ds	2
  1156  000005                     CCP3_CaptureISR@module:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x4
  1160  000005                     	ds	2
  1161  000007                     CCP4_DefaultCallBack@capturedValue:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x6
  1165  000007                     	ds	2
  1166  000009                     ??_CCP4_CaptureISR:
  1167                           
  1168                           ; 1 bytes @ 0x8
  1169  000009                     	ds	2
  1170  00000B                     CCP4_CaptureISR@module:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0xA
  1174  00000B                     	ds	2
  1175  00000D                     ?_TMR5_ReadTimer:
  1176                           	callstack 0
  1177  00000D                     TMR5_WriteTimer@timerVal:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0xC
  1181  00000D                     	ds	2
  1182  00000F                     ??_TMR5_ReadTimer:
  1183  00000F                     
  1184                           ; 1 bytes @ 0xE
  1185  00000F                     	ds	2
  1186  000011                     TMR5_ReadTimer@readVal:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x10
  1190  000011                     	ds	2
  1191  000013                     TMR5_ReadTimer@readValHigh:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x12
  1195  000013                     	ds	1
  1196  000014                     TMR5_ReadTimer@readValLow:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x13
  1200  000014                     	ds	1
  1201  000015                     ??_TMR5_GATE_ISR:
  1202                           
  1203                           ; 1 bytes @ 0x14
  1204  000015                     	ds	2
  1205  000017                     ??_UART1_tx_vect_isr:
  1206  000017                     
  1207                           ; 1 bytes @ 0x16
  1208  000017                     	ds	3
  1209  00001A                     ??_UART1_rx_vect_isr:
  1210                           
  1211                           ; 1 bytes @ 0x19
  1212  00001A                     	ds	3
  1213  00001D                     ??_TMR4_ISR:
  1214                           
  1215                           ; 1 bytes @ 0x1C
  1216  00001D                     	ds	3
  1217  000020                     ??_TMR3_Initialize:
  1218  000020                     ?_strlen:
  1219                           	callstack 0
  1220  000020                     ?_ADCC_GetSingleConversion:
  1221                           	callstack 0
  1222  000020                     ?_actSpeed:
  1223                           	callstack 0
  1224  000020                     UART1_Write@txData:
  1225                           	callstack 0
  1226  000020                     INTERRUPT_Initialize@state:
  1227                           	callstack 0
  1228  000020                     ___aomod@counter:
  1229                           	callstack 0
  1230  000020                     ___fltol@sign1:
  1231                           	callstack 0
  1232  000020                     UART1_SetFramingErrorHandler@interruptHandler:
  1233                           	callstack 0
  1234  000020                     UART1_SetOverrunErrorHandler@interruptHandler:
  1235                           	callstack 0
  1236  000020                     UART1_SetErrorHandler@interruptHandler:
  1237                           	callstack 0
  1238  000020                     UART1_SetRxInterruptHandler@InterruptHandler:
  1239                           	callstack 0
  1240  000020                     UART1_SetTxInterruptHandler@InterruptHandler:
  1241                           	callstack 0
  1242  000020                     CCP3_SetCallBack@customCallBack:
  1243                           	callstack 0
  1244  000020                     CCP4_SetCallBack@customCallBack:
  1245                           	callstack 0
  1246  000020                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1247                           	callstack 0
  1248  000020                     TMR4_SetInterruptHandler@InterruptHandler:
  1249                           	callstack 0
  1250  000020                     PWM7_LoadDutyValue@dutyValue:
  1251                           	callstack 0
  1252  000020                     PWM8_LoadDutyValue@dutyValue:
  1253                           	callstack 0
  1254  000020                     PWM5_LoadDutyValue@dutyValue:
  1255                           	callstack 0
  1256  000020                     PWM6_LoadDutyValue@dutyValue:
  1257                           	callstack 0
  1258  000020                     strlen@s:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x1F
  1262  000020                     	ds	1
  1263  000021                     putch@txData:
  1264                           	callstack 0
  1265  000021                     ___aomod@sign:
  1266                           	callstack 0
  1267  000021                     ___fltol@exp1:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x20
  1271  000021                     	ds	1
  1272  000022                     ??_pad:
  1273  000022                     ADCC_GetSingleConversion@channel:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0x21
  1277  000022                     	ds	1
  1278  000023                     
  1279                           ; 1 bytes @ 0x22
  1280 ;;
  1281 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1282 ;;
  1283 ;; *************** function _main *****************
  1284 ;; Defined at:
  1285 ;;		line 9 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels required when called: 19
  1305 ;; This function calls:
  1306 ;;		_SYSTEM_Initialize
  1307 ;;		_TMR4_SetInterruptHandler
  1308 ;;		_loop
  1309 ;; This function is called by:
  1310 ;;		Startup code after reset
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text0
  1315  003FBA                     __ptext0:
  1316                           	callstack 0
  1317  003FBA                     _main:
  1318                           	callstack 12
  1319  003FBA                     
  1320                           ;main.c: 10:     SYSTEM_Initialize();
  1321  003FBA  ECBE  F01C         	call	_SYSTEM_Initialize	;wreg free
  1322  003FBE                     
  1323                           ;main.c: 11:     (INTCON0bits.GIEH = 1);
  1324  003FBE  8ED2               	bsf	210,7,c	;volatile
  1325  003FC0                     
  1326                           ;main.c: 12:     (INTCON0bits.GIEL = 1);
  1327  003FC0  8CD2               	bsf	210,6,c	;volatile
  1328                           
  1329                           ;main.c: 13:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1330  003FC2  0E04               	movlw	low _TMR4_10msISR
  1331  003FC4  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1332  003FC6  0E41               	movlw	high _TMR4_10msISR
  1333  003FC8  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1334  003FCA  EC70  F020         	call	_TMR4_SetInterruptHandler	;wreg free
  1335  003FCE                     l6567:
  1336                           
  1337                           ;main.c: 16:         loop();
  1338  003FCE  EC8E  F01A         	call	_loop	;wreg free
  1339  003FD2  EFE7  F01F         	goto	l6567
  1340  003FD6  EF57  F000         	goto	start
  1341  003FDA                     __end_of_main:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _loop *****************
  1345 ;; Defined at:
  1346 ;;		line 20 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used: 1
  1366 ;; Hardware stack levels required when called: 18
  1367 ;; This function calls:
  1368 ;;		___flge
  1369 ;;		___xxtofl
  1370 ;;		_calcMotorPow
  1371 ;;		_calcSpeed
  1372 ;;		_calcSteering
  1373 ;;		_getBatteryVoltage
  1374 ;;		_getCurve
  1375 ;;		_getReverse
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text1
  1382  00351C                     __ptext1:
  1383                           	callstack 0
  1384  00351C                     _loop:
  1385                           	callstack 12
  1386  00351C                     l1212:
  1387  00351C                     
  1388                           ;main.c: 26:         getBatteryVoltage();
  1389  00351C  ECA6  F01F         	call	_getBatteryVoltage	;wreg free
  1390  003520                     
  1391                           ;main.c: 27:     }while(BatteryVolt < ((7.5) * 409.6));
  1392  003520  C0F0  F068         	movff	_BatteryVolt,___xxtofl@val
  1393  003524  C0F1  F069         	movff	_BatteryVolt+1,___xxtofl@val+1
  1394  003528  0100               	movlb	0	; () banked
  1395  00352A  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  1396  00352C  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  1397  00352E  0E00               	movlw	0
  1398  003530  EC83  F011         	call	___xxtofl
  1399  003534  C068  F076         	movff	?___xxtofl,___flge@ff1
  1400  003538  C069  F077         	movff	?___xxtofl+1,___flge@ff1+1
  1401  00353C  C06A  F078         	movff	?___xxtofl+2,___flge@ff1+2
  1402  003540  C06B  F079         	movff	?___xxtofl+3,___flge@ff1+3
  1403  003544  0E00               	movlw	0
  1404  003546  0100               	movlb	0	; () banked
  1405  003548  6F7A               	movwf	___flge@ff2& (0+255),b
  1406  00354A  0E00               	movlw	0
  1407  00354C  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  1408  00354E  0E40               	movlw	64
  1409  003550  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  1410  003552  0E45               	movlw	69
  1411  003554  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  1412  003556  EC21  F017         	call	___flge	;wreg free
  1413  00355A  0100               	movlb	0	; () banked
  1414  00355C  A0D8               	btfss	status,0,c
  1415  00355E  EFB3  F01A         	goto	u5711
  1416  003562  EFB5  F01A         	goto	u5710
  1417  003566                     u5711:
  1418  003566  EF8E  F01A         	goto	l1212
  1419  00356A                     u5710:
  1420  00356A                     
  1421                           ; BSR set to: 0
  1422                           ;main.c: 29:     oldDistLeft = distLeft;
  1423  00356A  C0E8  F0E4         	movff	_distLeft,_oldDistLeft	;volatile
  1424  00356E  C0E9  F0E5         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1425                           
  1426                           ;main.c: 30:     oldDistRight = distRight;
  1427  003572  C0E6  F0E2         	movff	_distRight,_oldDistRight	;volatile
  1428  003576  C0E7  F0E3         	movff	_distRight+1,_oldDistRight+1	;volatile
  1429  00357A                     
  1430                           ; BSR set to: 0
  1431                           ;main.c: 31:     cycle10ms = 0;
  1432  00357A  0E00               	movlw	0
  1433  00357C  6FEB               	movwf	_cycle10ms& (0+255),b
  1434  00357E                     l6547:
  1435  00357E  0100               	movlb	0	; () banked
  1436  003580  51EB               	movf	_cycle10ms& (0+255),w,b
  1437  003582  B4D8               	btfsc	status,2,c
  1438  003584  EFC6  F01A         	goto	u5721
  1439  003588  EFC8  F01A         	goto	u5720
  1440  00358C                     u5721:
  1441  00358C  EFBF  F01A         	goto	l6547
  1442  003590                     u5720:
  1443  003590                     
  1444                           ; BSR set to: 0
  1445                           ;main.c: 34:         cycle10ms = 0;
  1446  003590  0E00               	movlw	0
  1447  003592  6FEB               	movwf	_cycle10ms& (0+255),b
  1448  003594                     
  1449                           ; BSR set to: 0
  1450                           ;main.c: 49:         getCurve();
  1451  003594  EC36  F00E         	call	_getCurve	;wreg free
  1452  003598                     
  1453                           ;main.c: 50:         getReverse();
  1454  003598  ECD7  F01A         	call	_getReverse	;wreg free
  1455  00359C                     
  1456                           ;main.c: 52:         calcSteering();
  1457  00359C  EC30  F013         	call	_calcSteering	;wreg free
  1458  0035A0                     
  1459                           ;main.c: 53:         calcSpeed();
  1460  0035A0  EC6D  F00F         	call	_calcSpeed	;wreg free
  1461  0035A4                     
  1462                           ;main.c: 54:         calcMotorPow();
  1463  0035A4  EC71  F015         	call	_calcMotorPow	;wreg free
  1464  0035A8  EFBF  F01A         	goto	l6547
  1465  0035AC  0012               	return		;funcret
  1466  0035AE                     __end_of_loop:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _getReverse *****************
  1470 ;; Defined at:
  1471 ;;		line 146 in file "main.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;		None
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        0 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 8
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_loop
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text2
  1500  0035AE                     __ptext2:
  1501                           	callstack 0
  1502  0035AE                     _getReverse:
  1503                           	callstack 21
  1504  0035AE                     
  1505                           ;main.c: 147:     if(distFront < (10)){
  1506  0035AE  0100               	movlb	0	; () banked
  1507  0035B0  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1508  0035B2  E107               	bnz	u3821
  1509  0035B4  0E0A               	movlw	10
  1510  0035B6  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  1511  0035B8  B0D8               	btfsc	status,0,c
  1512  0035BA  EFE1  F01A         	goto	u3821
  1513  0035BE  EFE3  F01A         	goto	u3820
  1514  0035C2                     u3821:
  1515  0035C2  EFE6  F01A         	goto	l5139
  1516  0035C6                     u3820:
  1517  0035C6                     
  1518                           ; BSR set to: 0
  1519                           ;main.c: 148:         ++reverseCount;
  1520  0035C6  2A2D               	incf	_reverseCount^0,f,c
  1521                           
  1522                           ;main.c: 149:     }else if(driveMode != ReverseRight){
  1523  0035C8  EFF1  F01A         	goto	l5143
  1524  0035CC                     l5139:
  1525                           
  1526                           ; BSR set to: 0
  1527  0035CC  0E02               	movlw	2
  1528  0035CE  19ED               	xorwf	_driveMode& (0+255),w,b
  1529  0035D0  B4D8               	btfsc	status,2,c
  1530  0035D2  EFED  F01A         	goto	u3831
  1531  0035D6  EFEF  F01A         	goto	u3830
  1532  0035DA                     u3831:
  1533  0035DA  EFF1  F01A         	goto	l5143
  1534  0035DE                     u3830:
  1535  0035DE                     
  1536                           ; BSR set to: 0
  1537                           ;main.c: 150:         reverseCount = 0;
  1538  0035DE  0E00               	movlw	0
  1539  0035E0  6E2D               	movwf	_reverseCount^0,c
  1540  0035E2                     l5143:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 153:     if(reverseCount > (100)){
  1544  0035E2  0E64               	movlw	100
  1545  0035E4  642D               	cpfsgt	_reverseCount^0,c
  1546  0035E6  EFF7  F01A         	goto	u3841
  1547  0035EA  EFF9  F01A         	goto	u3840
  1548  0035EE                     u3841:
  1549  0035EE  EF19  F01B         	goto	l1266
  1550  0035F2                     u3840:
  1551  0035F2                     
  1552                           ; BSR set to: 0
  1553                           ;main.c: 154:         if(distLeft > distRight){
  1554  0035F2  51E8               	movf	_distLeft& (0+255),w,b	;volatile
  1555  0035F4  5DE6               	subwf	_distRight& (0+255),w,b	;volatile
  1556  0035F6  51E9               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1557  0035F8  59E7               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1558  0035FA  B0D8               	btfsc	status,0,c
  1559  0035FC  EF02  F01B         	goto	u3851
  1560  003600  EF04  F01B         	goto	u3850
  1561  003604                     u3851:
  1562  003604  EF08  F01B         	goto	l5149
  1563  003608                     u3850:
  1564  003608                     
  1565                           ; BSR set to: 0
  1566                           ;main.c: 155:             driveMode = ReverseRight;
  1567  003608  0E02               	movlw	2
  1568  00360A  6FED               	movwf	_driveMode& (0+255),b
  1569                           
  1570                           ;main.c: 156:         }else{
  1571  00360C  EF0A  F01B         	goto	l5151
  1572  003610                     l5149:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 157:             driveMode = ReverseLeft;
  1576  003610  0E03               	movlw	3
  1577  003612  6FED               	movwf	_driveMode& (0+255),b
  1578  003614                     l5151:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 160:         if(distFront > (40)){
  1582  003614  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  1583  003616  E109               	bnz	u3860
  1584  003618  0E29               	movlw	41
  1585  00361A  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  1586  00361C  A0D8               	btfss	status,0,c
  1587  00361E  EF13  F01B         	goto	u3861
  1588  003622  EF15  F01B         	goto	u3860
  1589  003626                     u3861:
  1590  003626  EF19  F01B         	goto	l1266
  1591  00362A                     u3860:
  1592  00362A                     
  1593                           ; BSR set to: 0
  1594                           ;main.c: 161:              driveMode = Straight;
  1595  00362A  0E00               	movlw	0
  1596  00362C  6FED               	movwf	_driveMode& (0+255),b
  1597                           
  1598                           ;main.c: 162:              reverseCount = 0;
  1599  00362E  0E00               	movlw	0
  1600  003630  6E2D               	movwf	_reverseCount^0,c
  1601  003632                     l1266:
  1602                           
  1603                           ; BSR set to: 0
  1604  003632  0012               	return		;funcret
  1605  003634                     __end_of_getReverse:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _getCurve *****************
  1609 ;; Defined at:
  1610 ;;		line 79 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  deltaRight      2   14[BANK1 ] short 
  1615 ;;  deltaLeft       2   12[BANK1 ] short 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;Total ram usage:        6 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 17
  1632 ;; This function calls:
  1633 ;;		_printf
  1634 ;; This function is called by:
  1635 ;;		_loop
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text3
  1640  001C6C                     __ptext3:
  1641                           	callstack 0
  1642  001C6C                     _getCurve:
  1643                           	callstack 12
  1644  001C6C                     
  1645                           ;main.c: 80:     int16_t deltaLeft;;main.c: 81:     int16_t deltaRight;;main.c: 83:     
      +                          switch (curveMode){
  1646  001C6C  EF45  F00F         	goto	l6353
  1647  001C70                     l6295:
  1648                           
  1649                           ; BSR set to: 1
  1650                           ;main.c: 85:             deltaLeft = (int16_t)(distLeft - oldDistLeft);
  1651  001C70  0100               	movlb	0	; () banked
  1652  001C72  51E4               	movf	_oldDistLeft& (0+255),w,b
  1653  001C74  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  1654  001C76  0101               	movlb	1	; () banked
  1655  001C78  6F2C               	movwf	getCurve@deltaLeft& (0+255),b
  1656  001C7A  0100               	movlb	0	; () banked
  1657  001C7C  51E5               	movf	(_oldDistLeft+1)& (0+255),w,b
  1658  001C7E  59E9               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  1659  001C80  0101               	movlb	1	; () banked
  1660  001C82  6F2D               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  1661                           
  1662                           ;main.c: 86:             deltaRight = (int16_t)(distRight - oldDistRight);
  1663  001C84  0100               	movlb	0	; () banked
  1664  001C86  51E2               	movf	_oldDistRight& (0+255),w,b
  1665  001C88  5DE6               	subwf	_distRight& (0+255),w,b	;volatile
  1666  001C8A  0101               	movlb	1	; () banked
  1667  001C8C  6F2E               	movwf	getCurve@deltaRight& (0+255),b
  1668  001C8E  0100               	movlb	0	; () banked
  1669  001C90  51E3               	movf	(_oldDistRight+1)& (0+255),w,b
  1670  001C92  59E7               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  1671  001C94  0101               	movlb	1	; () banked
  1672  001C96  6F2F               	movwf	(getCurve@deltaRight+1)& (0+255),b
  1673                           
  1674                           ;main.c: 89:             if(deltaLeft > (60) && oldDistLeft < (200)){
  1675  001C98  BF2D               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  1676  001C9A  EF58  F00E         	goto	u5391
  1677  001C9E  512D               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  1678  001CA0  E109               	bnz	u5390
  1679  001CA2  0E3D               	movlw	61
  1680  001CA4  5D2C               	subwf	getCurve@deltaLeft& (0+255),w,b
  1681  001CA6  A0D8               	btfss	status,0,c
  1682  001CA8  EF58  F00E         	goto	u5391
  1683  001CAC  EF5A  F00E         	goto	u5390
  1684  001CB0                     u5391:
  1685  001CB0  EF84  F00E         	goto	l6305
  1686  001CB4                     u5390:
  1687  001CB4                     
  1688                           ; BSR set to: 1
  1689  001CB4  0100               	movlb	0	; () banked
  1690  001CB6  51E5               	movf	(_oldDistLeft+1)& (0+255),w,b
  1691  001CB8  E107               	bnz	u5401
  1692  001CBA  0EC8               	movlw	200
  1693  001CBC  5DE4               	subwf	_oldDistLeft& (0+255),w,b
  1694  001CBE  B0D8               	btfsc	status,0,c
  1695  001CC0  EF64  F00E         	goto	u5401
  1696  001CC4  EF66  F00E         	goto	u5400
  1697  001CC8                     u5401:
  1698  001CC8  EF84  F00E         	goto	l6305
  1699  001CCC                     u5400:
  1700  001CCC                     
  1701                           ; BSR set to: 0
  1702                           ;main.c: 90:                 delay = 0;
  1703  001CCC  0E00               	movlw	0
  1704  001CCE  6FEA               	movwf	_delay& (0+255),b
  1705                           
  1706                           ;main.c: 91:                 curveMode = BeforeCurve;
  1707  001CD0  0E01               	movlw	1
  1708  001CD2  6FEC               	movwf	_curveMode& (0+255),b
  1709                           
  1710                           ;main.c: 92:                 driveMode = CurveLeft;
  1711  001CD4  0E04               	movlw	4
  1712  001CD6  6FED               	movwf	_driveMode& (0+255),b
  1713  001CD8                     
  1714                           ; BSR set to: 0
  1715                           ;main.c: 93:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1716  001CD8  0E01               	movlw	low STR_2
  1717  001CDA  0101               	movlb	1	; () banked
  1718  001CDC  6F22               	movwf	printf@fmt& (0+255),b
  1719  001CDE  0E10               	movlw	high STR_2
  1720  001CE0  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1721  001CE2  C12C  F124         	movff	getCurve@deltaLeft,?_printf+2
  1722  001CE6  C12D  F125         	movff	getCurve@deltaLeft+1,?_printf+3
  1723  001CEA  C12E  F126         	movff	getCurve@deltaRight,?_printf+4
  1724  001CEE  C12F  F127         	movff	getCurve@deltaRight+1,?_printf+5
  1725  001CF2  EC7D  F01F         	call	_printf	;wreg free
  1726  001CF6                     
  1727                           ;main.c: 94:                 printf("   CurveLeft");
  1728  001CF6  0E25               	movlw	low STR_3
  1729  001CF8  0101               	movlb	1	; () banked
  1730  001CFA  6F22               	movwf	printf@fmt& (0+255),b
  1731  001CFC  0E10               	movlw	high STR_3
  1732  001CFE  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1733  001D00  EC7D  F01F         	call	_printf	;wreg free
  1734                           
  1735                           ;main.c: 95:             } else if(deltaRight > (60) && oldDistRight < (200)){
  1736  001D04  EF64  F00F         	goto	l1240
  1737  001D08                     l6305:
  1738  001D08  0101               	movlb	1	; () banked
  1739  001D0A  BF2F               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  1740  001D0C  EF91  F00E         	goto	u5411
  1741  001D10  512F               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  1742  001D12  E109               	bnz	u5410
  1743  001D14  0E3D               	movlw	61
  1744  001D16  5D2E               	subwf	getCurve@deltaRight& (0+255),w,b
  1745  001D18  A0D8               	btfss	status,0,c
  1746  001D1A  EF91  F00E         	goto	u5411
  1747  001D1E  EF93  F00E         	goto	u5410
  1748  001D22                     u5411:
  1749  001D22  EF64  F00F         	goto	l1240
  1750  001D26                     u5410:
  1751  001D26                     
  1752                           ; BSR set to: 1
  1753  001D26  0100               	movlb	0	; () banked
  1754  001D28  51E3               	movf	(_oldDistRight+1)& (0+255),w,b
  1755  001D2A  E107               	bnz	u5421
  1756  001D2C  0EC8               	movlw	200
  1757  001D2E  5DE2               	subwf	_oldDistRight& (0+255),w,b
  1758  001D30  B0D8               	btfsc	status,0,c
  1759  001D32  EF9D  F00E         	goto	u5421
  1760  001D36  EF9F  F00E         	goto	u5420
  1761  001D3A                     u5421:
  1762  001D3A  EF64  F00F         	goto	l1240
  1763  001D3E                     u5420:
  1764  001D3E                     
  1765                           ; BSR set to: 0
  1766                           ;main.c: 96:                 delay = 0;
  1767  001D3E  0E00               	movlw	0
  1768  001D40  6FEA               	movwf	_delay& (0+255),b
  1769                           
  1770                           ;main.c: 97:                 curveMode = BeforeCurve;
  1771  001D42  0E01               	movlw	1
  1772  001D44  6FEC               	movwf	_curveMode& (0+255),b
  1773                           
  1774                           ;main.c: 98:                 driveMode = CurveRight;
  1775  001D46  0E05               	movlw	5
  1776  001D48  6FED               	movwf	_driveMode& (0+255),b
  1777  001D4A                     
  1778                           ; BSR set to: 0
  1779                           ;main.c: 99:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  1780  001D4A  0E01               	movlw	low STR_2
  1781  001D4C  0101               	movlb	1	; () banked
  1782  001D4E  6F22               	movwf	printf@fmt& (0+255),b
  1783  001D50  0E10               	movlw	high STR_2
  1784  001D52  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1785  001D54  C12C  F124         	movff	getCurve@deltaLeft,?_printf+2
  1786  001D58  C12D  F125         	movff	getCurve@deltaLeft+1,?_printf+3
  1787  001D5C  C12E  F126         	movff	getCurve@deltaRight,?_printf+4
  1788  001D60  C12F  F127         	movff	getCurve@deltaRight+1,?_printf+5
  1789  001D64  EC7D  F01F         	call	_printf	;wreg free
  1790  001D68                     
  1791                           ;main.c: 100:                 printf("   CurveRight");
  1792  001D68  0E17               	movlw	low STR_5
  1793  001D6A  0101               	movlb	1	; () banked
  1794  001D6C  6F22               	movwf	printf@fmt& (0+255),b
  1795  001D6E  0E10               	movlw	high STR_5
  1796  001D70  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1797  001D72  EC7D  F01F         	call	_printf	;wreg free
  1798  001D76  EF64  F00F         	goto	l1240
  1799  001D7A                     l6315:
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;main.c: 106:             if(delay > (15)){
  1803  001D7A  0E0F               	movlw	15
  1804  001D7C  0100               	movlb	0	; () banked
  1805  001D7E  65EA               	cpfsgt	_delay& (0+255),b
  1806  001D80  EFC4  F00E         	goto	u5431
  1807  001D84  EFC6  F00E         	goto	u5430
  1808  001D88                     u5431:
  1809  001D88  EFD3  F00E         	goto	l6321
  1810  001D8C                     u5430:
  1811  001D8C                     
  1812                           ; BSR set to: 0
  1813                           ;main.c: 107:                 delay = 0;
  1814  001D8C  0E00               	movlw	0
  1815  001D8E  6FEA               	movwf	_delay& (0+255),b
  1816                           
  1817                           ;main.c: 108:                 curveMode = InCurve;
  1818  001D90  0E02               	movlw	2
  1819  001D92  6FEC               	movwf	_curveMode& (0+255),b
  1820  001D94                     
  1821                           ; BSR set to: 0
  1822                           ;main.c: 109:                 printf("InCurve\n");
  1823  001D94  0E69               	movlw	low STR_6
  1824  001D96  0101               	movlb	1	; () banked
  1825  001D98  6F22               	movwf	printf@fmt& (0+255),b
  1826  001D9A  0E10               	movlw	high STR_6
  1827  001D9C  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1828  001D9E  EC7D  F01F         	call	_printf	;wreg free
  1829                           
  1830                           ;main.c: 110:             } else {
  1831  001DA2  EF64  F00F         	goto	l1240
  1832  001DA6                     l6321:
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 111:                 delay++;
  1836  001DA6  2BEA               	incf	_delay& (0+255),f,b
  1837  001DA8  EF64  F00F         	goto	l1240
  1838  001DAC                     l6323:
  1839                           
  1840                           ; BSR set to: 1
  1841                           ;main.c: 115:             if(delay > (60)){
  1842  001DAC  0E3C               	movlw	60
  1843  001DAE  0100               	movlb	0	; () banked
  1844  001DB0  65EA               	cpfsgt	_delay& (0+255),b
  1845  001DB2  EFDD  F00E         	goto	u5441
  1846  001DB6  EFDF  F00E         	goto	u5440
  1847  001DBA                     u5441:
  1848  001DBA  EFD3  F00E         	goto	l6321
  1849  001DBE                     u5440:
  1850  001DBE                     
  1851                           ; BSR set to: 0
  1852                           ;main.c: 116:                 if(driveMode == CurveLeft){
  1853  001DBE  0E04               	movlw	4
  1854  001DC0  19ED               	xorwf	_driveMode& (0+255),w,b
  1855  001DC2  A4D8               	btfss	status,2,c
  1856  001DC4  EFE6  F00E         	goto	u5451
  1857  001DC8  EFE8  F00E         	goto	u5450
  1858  001DCC                     u5451:
  1859  001DCC  EFF5  F00E         	goto	l6329
  1860  001DD0                     u5450:
  1861  001DD0                     
  1862                           ; BSR set to: 0
  1863                           ;main.c: 117:                     printf("distL= %d\n", distLeft);
  1864  001DD0  0E49               	movlw	low STR_7
  1865  001DD2  0101               	movlb	1	; () banked
  1866  001DD4  6F22               	movwf	printf@fmt& (0+255),b
  1867  001DD6  0E10               	movlw	high STR_7
  1868  001DD8  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1869  001DDA  C0E8  F124         	movff	_distLeft,?_printf+2	;volatile
  1870  001DDE  C0E9  F125         	movff	_distLeft+1,?_printf+3	;volatile
  1871  001DE2  EC7D  F01F         	call	_printf	;wreg free
  1872                           
  1873                           ;main.c: 118:                 } else if(driveMode == CurveLeft){
  1874  001DE6  EF09  F00F         	goto	l6333
  1875  001DEA                     l6329:
  1876                           
  1877                           ; BSR set to: 0
  1878  001DEA  0E04               	movlw	4
  1879  001DEC  19ED               	xorwf	_driveMode& (0+255),w,b
  1880  001DEE  A4D8               	btfss	status,2,c
  1881  001DF0  EFFC  F00E         	goto	u5461
  1882  001DF4  EFFE  F00E         	goto	u5460
  1883  001DF8                     u5461:
  1884  001DF8  EF09  F00F         	goto	l6333
  1885  001DFC                     u5460:
  1886  001DFC                     
  1887                           ; BSR set to: 0
  1888                           ;main.c: 119:                     printf("distR= %d\n", distRight);
  1889  001DFC  0E54               	movlw	low STR_8
  1890  001DFE  0101               	movlb	1	; () banked
  1891  001E00  6F22               	movwf	printf@fmt& (0+255),b
  1892  001E02  0E10               	movlw	high STR_8
  1893  001E04  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1894  001E06  C0E6  F124         	movff	_distRight,?_printf+2	;volatile
  1895  001E0A  C0E7  F125         	movff	_distRight+1,?_printf+3	;volatile
  1896  001E0E  EC7D  F01F         	call	_printf	;wreg free
  1897  001E12                     l6333:
  1898                           
  1899                           ;main.c: 122:                 if(distLeft < (40) || distRight < (40)){
  1900  001E12  0100               	movlb	0	; () banked
  1901  001E14  51E9               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1902  001E16  E109               	bnz	u5470
  1903  001E18  0E28               	movlw	40
  1904  001E1A  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  1905  001E1C  A0D8               	btfss	status,0,c
  1906  001E1E  EF13  F00F         	goto	u5471
  1907  001E22  EF15  F00F         	goto	u5470
  1908  001E26                     u5471:
  1909  001E26  EF20  F00F         	goto	l6337
  1910  001E2A                     u5470:
  1911  001E2A                     
  1912                           ; BSR set to: 0
  1913  001E2A  51E7               	movf	(_distRight+1)& (0+255),w,b	;volatile
  1914  001E2C  E107               	bnz	u5481
  1915  001E2E  0E28               	movlw	40
  1916  001E30  5DE6               	subwf	_distRight& (0+255),w,b	;volatile
  1917  001E32  B0D8               	btfsc	status,0,c
  1918  001E34  EF1E  F00F         	goto	u5481
  1919  001E38  EF20  F00F         	goto	u5480
  1920  001E3C                     u5481:
  1921  001E3C  EF64  F00F         	goto	l1240
  1922  001E40                     u5480:
  1923  001E40                     l6337:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;main.c: 123:                     delay = 0;
  1927  001E40  0E00               	movlw	0
  1928  001E42  6FEA               	movwf	_delay& (0+255),b
  1929                           
  1930                           ;main.c: 124:                     curveMode = AfterCurve;
  1931  001E44  0E03               	movlw	3
  1932  001E46  6FEC               	movwf	_curveMode& (0+255),b
  1933                           
  1934                           ;main.c: 125:                     driveMode = Straight;
  1935  001E48  0E00               	movlw	0
  1936  001E4A  6FED               	movwf	_driveMode& (0+255),b
  1937  001E4C                     
  1938                           ; BSR set to: 0
  1939                           ;main.c: 126:                     printf("AfterCurve\n");
  1940  001E4C  0E32               	movlw	low STR_9
  1941  001E4E  0101               	movlb	1	; () banked
  1942  001E50  6F22               	movwf	printf@fmt& (0+255),b
  1943  001E52  0E10               	movlw	high STR_9
  1944  001E54  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1945  001E56  EC7D  F01F         	call	_printf	;wreg free
  1946  001E5A  EF64  F00F         	goto	l1240
  1947  001E5E                     l6343:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main.c: 133:             if(delay > (50)){
  1951  001E5E  0E32               	movlw	50
  1952  001E60  0100               	movlb	0	; () banked
  1953  001E62  65EA               	cpfsgt	_delay& (0+255),b
  1954  001E64  EF36  F00F         	goto	u5491
  1955  001E68  EF38  F00F         	goto	u5490
  1956  001E6C                     u5491:
  1957  001E6C  EFD3  F00E         	goto	l6321
  1958  001E70                     u5490:
  1959  001E70                     
  1960                           ; BSR set to: 0
  1961                           ;main.c: 134:                 delay = 0;
  1962  001E70  0E00               	movlw	0
  1963  001E72  6FEA               	movwf	_delay& (0+255),b
  1964                           
  1965                           ;main.c: 135:                 curveMode = OutCurve;
  1966  001E74  0E00               	movlw	0
  1967  001E76  6FEC               	movwf	_curveMode& (0+255),b
  1968  001E78                     
  1969                           ; BSR set to: 0
  1970                           ;main.c: 136:                 printf("OutCurve\n");
  1971  001E78  0E5F               	movlw	low STR_10
  1972  001E7A  0101               	movlb	1	; () banked
  1973  001E7C  6F22               	movwf	printf@fmt& (0+255),b
  1974  001E7E  0E10               	movlw	high STR_10
  1975  001E80  6F23               	movwf	(printf@fmt+1)& (0+255),b
  1976  001E82  EC7D  F01F         	call	_printf	;wreg free
  1977                           
  1978                           ;main.c: 137:             } else {
  1979  001E86  EF64  F00F         	goto	l1240
  1980  001E8A                     l6353:
  1981  001E8A  0100               	movlb	0	; () banked
  1982  001E8C  51EC               	movf	_curveMode& (0+255),w,b
  1983  001E8E  0101               	movlb	1	; () banked
  1984  001E90  6F2A               	movwf	??_getCurve& (0+255),b
  1985  001E92  6B2B               	clrf	(??_getCurve+1)& (0+255),b
  1986                           
  1987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1988                           ; Switch size 1, requested type "simple"
  1989                           ; Number of cases is 1, Range of values is 0 to 0
  1990                           ; switch strategies available:
  1991                           ; Name         Instructions Cycles
  1992                           ; simple_byte            4     3 (average)
  1993                           ;	Chosen strategy is simple_byte
  1994  001E94  512B               	movf	(??_getCurve+1)& (0+255),w,b
  1995  001E96  0A00               	xorlw	0	; case 0
  1996  001E98  B4D8               	btfsc	status,2,c
  1997  001E9A  EF51  F00F         	goto	l6699
  1998  001E9E  EF64  F00F         	goto	l1240
  1999  001EA2                     l6699:
  2000                           
  2001                           ; BSR set to: 1
  2002                           ; Switch size 1, requested type "simple"
  2003                           ; Number of cases is 4, Range of values is 0 to 3
  2004                           ; switch strategies available:
  2005                           ; Name         Instructions Cycles
  2006                           ; simple_byte           13     7 (average)
  2007                           ;	Chosen strategy is simple_byte
  2008  001EA2  512A               	movf	??_getCurve& (0+255),w,b
  2009  001EA4  0A00               	xorlw	0	; case 0
  2010  001EA6  B4D8               	btfsc	status,2,c
  2011  001EA8  EF38  F00E         	goto	l6295
  2012  001EAC  0A01               	xorlw	1	; case 1
  2013  001EAE  B4D8               	btfsc	status,2,c
  2014  001EB0  EFBD  F00E         	goto	l6315
  2015  001EB4  0A03               	xorlw	3	; case 2
  2016  001EB6  B4D8               	btfsc	status,2,c
  2017  001EB8  EFD6  F00E         	goto	l6323
  2018  001EBC  0A01               	xorlw	1	; case 3
  2019  001EBE  B4D8               	btfsc	status,2,c
  2020  001EC0  EF2F  F00F         	goto	l6343
  2021  001EC4  EF64  F00F         	goto	l1240
  2022  001EC8                     l1240:
  2023                           
  2024                           ;main.c: 142:     oldDistLeft = distLeft;
  2025  001EC8  C0E8  F0E4         	movff	_distLeft,_oldDistLeft	;volatile
  2026  001ECC  C0E9  F0E5         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2027                           
  2028                           ;main.c: 143:     oldDistRight = distRight;
  2029  001ED0  C0E6  F0E2         	movff	_distRight,_oldDistRight	;volatile
  2030  001ED4  C0E7  F0E3         	movff	_distRight+1,_oldDistRight+1	;volatile
  2031  001ED8  0012               	return		;funcret
  2032  001EDA                     __end_of_getCurve:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _getBatteryVoltage *****************
  2036 ;; Defined at:
  2037 ;;		line 74 in file "main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; Hardware stack levels required when called: 17
  2058 ;; This function calls:
  2059 ;;		_ADCC_GetSingleConversion
  2060 ;;		_printf
  2061 ;; This function is called by:
  2062 ;;		_loop
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text4
  2067  003F4C                     __ptext4:
  2068                           	callstack 0
  2069  003F4C                     _getBatteryVoltage:
  2070                           	callstack 12
  2071  003F4C                     
  2072                           ;main.c: 75:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2073  003F4C  0E22               	movlw	34
  2074  003F4E  ECD7  F01D         	call	_ADCC_GetSingleConversion
  2075  003F52  C020  F0F0         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2076  003F56  C021  F0F1         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2077  003F5A                     
  2078                           ;main.c: 76:     printf("BVolt: %d\n", BatteryVolt);
  2079  003F5A  0E3E               	movlw	low STR_1
  2080  003F5C  0101               	movlb	1	; () banked
  2081  003F5E  6F22               	movwf	printf@fmt& (0+255),b
  2082  003F60  0E10               	movlw	high STR_1
  2083  003F62  6F23               	movwf	(printf@fmt+1)& (0+255),b
  2084  003F64  C0F0  F124         	movff	_BatteryVolt,?_printf+2
  2085  003F68  C0F1  F125         	movff	_BatteryVolt+1,?_printf+3
  2086  003F6C  EC7D  F01F         	call	_printf	;wreg free
  2087  003F70  0012               	return		;funcret
  2088  003F72                     __end_of_getBatteryVoltage:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _printf *****************
  2092 ;; Defined at:
  2093 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\printf.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2096 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2097 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2098 ;;		 -> STR_2(22), STR_1(11), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  ap              2    8[BANK1 ] PTR void [1]
  2101 ;;		 -> ?_printf(2), 
  2102 ;;  ret             2    0        int 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  2    2[BANK1 ] int 
  2105 ;; Registers used:
  2106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2112 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;Total ram usage:        8 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 16
  2119 ;; This function calls:
  2120 ;;		_vfprintf
  2121 ;; This function is called by:
  2122 ;;		_getBatteryVoltage
  2123 ;;		_getCurve
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text5
  2128  003EFA                     __ptext5:
  2129                           	callstack 0
  2130  003EFA                     _printf:
  2131                           	callstack 12
  2132  003EFA  0E24               	movlw	low (?_printf+2)
  2133  003EFC  0101               	movlb	1	; () banked
  2134  003EFE  6F28               	movwf	printf@ap& (0+255),b
  2135  003F00  0E01               	movlw	high (?_printf+2)
  2136  003F02  6F29               	movwf	(printf@ap+1)& (0+255),b
  2137  003F04                     
  2138                           ; BSR set to: 1
  2139  003F04  0E00               	movlw	0
  2140  003F06  0100               	movlb	0	; () banked
  2141  003F08  6FAE               	movwf	vfprintf@fp& (0+255),b
  2142  003F0A  0E00               	movlw	0
  2143  003F0C  6FAF               	movwf	(vfprintf@fp+1)& (0+255),b
  2144  003F0E  C122  F0B0         	movff	printf@fmt,vfprintf@fmt
  2145  003F12  C123  F0B1         	movff	printf@fmt+1,vfprintf@fmt+1
  2146  003F16  0E28               	movlw	low printf@ap
  2147  003F18  6FB2               	movwf	vfprintf@ap& (0+255),b
  2148  003F1A  0E01               	movlw	high printf@ap
  2149  003F1C  6FB3               	movwf	(vfprintf@ap+1)& (0+255),b
  2150  003F1E  EC1A  F01B         	call	_vfprintf	;wreg free
  2151  003F22  0012               	return		;funcret
  2152  003F24                     __end_of_printf:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _vfprintf *****************
  2156 ;; Defined at:
  2157 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  fp              2   78[BANK0 ] PTR struct _IO_FILE
  2160 ;;		 -> NULL(0), 
  2161 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  2162 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2163 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2164 ;;		 -> STR_2(22), STR_1(11), 
  2165 ;;  ap              2   82[BANK0 ] PTR PTR void 
  2166 ;;		 -> printf@ap(2), 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  cfmt            2    0[BANK1 ] PTR unsigned char 
  2169 ;;		 -> STR_10(10), STR_9(12), STR_8(11), STR_7(11), 
  2170 ;;		 -> STR_6(9), STR_5(14), STR_4(22), STR_3(13), 
  2171 ;;		 -> STR_2(22), STR_1(11), 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2   78[BANK0 ] int 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2181 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;Total ram usage:        8 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 15
  2188 ;; This function calls:
  2189 ;;		_vfpfcnvrt
  2190 ;; This function is called by:
  2191 ;;		_printf
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text6
  2196  003634                     __ptext6:
  2197                           	callstack 0
  2198  003634                     _vfprintf:
  2199                           	callstack 12
  2200  003634                     
  2201                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2202  003634  C0B0  F120         	movff	vfprintf@fmt,vfprintf@cfmt
  2203  003638  C0B1  F121         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2204  00363C                     
  2205                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2206  00363C  0E00               	movlw	0
  2207  00363E  0100               	movlb	0	; () banked
  2208  003640  6FD5               	movwf	(_nout+1)& (0+255),b
  2209  003642  0E00               	movlw	0
  2210  003644  6FD4               	movwf	_nout& (0+255),b
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2213  003646  EF38  F01B         	goto	l6007
  2214  00364A                     l6005:
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2218  00364A  C0AE  F09E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2219  00364E  C0AF  F09F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2220  003652  0E20               	movlw	low vfprintf@cfmt
  2221  003654  6FA0               	movwf	vfpfcnvrt@fmt& (0+255),b
  2222  003656  0E01               	movlw	high vfprintf@cfmt
  2223  003658  6FA1               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2224  00365A  C0B2  F0A2         	movff	vfprintf@ap,vfpfcnvrt@ap
  2225  00365E  C0B3  F0A3         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2226  003662  EC7C  F010         	call	_vfpfcnvrt	;wreg free
  2227  003666  0100               	movlb	0	; () banked
  2228  003668  519E               	movf	?_vfpfcnvrt& (0+255),w,b
  2229  00366A  27D4               	addwf	_nout& (0+255),f,b
  2230  00366C  519F               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2231  00366E  23D5               	addwfc	(_nout+1)& (0+255),f,b
  2232  003670                     l6007:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2236  003670  0060  F483  FFF6   	movff	vfprintf@cfmt,tblptrl
  2237  003676  0060  F487  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2238  00367C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2239  00367C  6AF8               	clrf	tblptru,c
  2240  00367E                     	endif
  2241  00367E                     	if	0	;tblptru may be non-zero
  2242  00367E                     	endif
  2243  00367E  0008               	tblrd		*
  2244  003680  50F5               	movf	tablat,w,c
  2245  003682  0900               	iorlw	0
  2246  003684  A4D8               	btfss	status,2,c
  2247  003686  EF47  F01B         	goto	u4981
  2248  00368A  EF49  F01B         	goto	u4980
  2249  00368E                     u4981:
  2250  00368E  EF25  F01B         	goto	l6005
  2251  003692                     u4980:
  2252  003692                     
  2253                           ; BSR set to: 0
  2254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2255  003692  C0D4  F0AE         	movff	_nout,?_vfprintf
  2256  003696  C0D5  F0AF         	movff	_nout+1,?_vfprintf+1
  2257  00369A                     
  2258                           ; BSR set to: 0
  2259  00369A  0012               	return		;funcret
  2260  00369C                     __end_of_vfprintf:
  2261                           	callstack 0
  2262                           
  2263 ;; *************** function _vfpfcnvrt *****************
  2264 ;; Defined at:
  2265 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  2268 ;;		 -> NULL(0), 
  2269 ;;  fmt             2   64[BANK0 ] PTR PTR unsigned char 
  2270 ;;		 -> vfprintf@cfmt(2), 
  2271 ;;  ap              2   66[BANK0 ] PTR PTR void 
  2272 ;;		 -> printf@ap(2), 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  ll              8   70[BANK0 ] long long 
  2275 ;;  llu             8    0        unsigned long long 
  2276 ;;  f               4    0        unsigned long long 
  2277 ;;  vp              3    0        PTR void 
  2278 ;;  ct              3    0        unsigned char [3]
  2279 ;;  cp              3    0        PTR unsigned char 
  2280 ;;  i               2    0        int 
  2281 ;;  done            2    0        int 
  2282 ;;  c               1    0        unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2   62[BANK0 ] int 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2292 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;Total ram usage:       16 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 14
  2299 ;; This function calls:
  2300 ;;		_dtoa
  2301 ;;		_fputc
  2302 ;; This function is called by:
  2303 ;;		_vfprintf
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text7
  2308  0020F8                     __ptext7:
  2309                           	callstack 0
  2310  0020F8                     _vfpfcnvrt:
  2311                           	callstack 12
  2312  0020F8                     
  2313                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2314  0020F8  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2315  0020FE  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2316  002104  006F FF7B FFF6     	movff	postinc2,tblptrl
  2317  00210A  006F FF77 FFF7     	movff	postdec2,tblptrh
  2318  002110                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2319  002110  6AF8               	clrf	tblptru,c
  2320  002112                     	endif
  2321  002112                     	if	0	;tblptru may be non-zero
  2322  002112                     	endif
  2323  002112  0008               	tblrd		*
  2324  002114  50F5               	movf	tablat,w,c
  2325  002116  0A25               	xorlw	37
  2326  002118  A4D8               	btfss	status,2,c
  2327  00211A  EF91  F010         	goto	u4781
  2328  00211E  EF93  F010         	goto	u4780
  2329  002122                     u4781:
  2330  002122  EF5F  F011         	goto	l5897
  2331  002126                     u4780:
  2332  002126                     
  2333                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2334  002126  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2335  00212C  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2336  002132  2ADE               	incf	postinc2,f,c
  2337  002134  0E00               	movlw	0
  2338  002136  22DD               	addwfc	postdec2,f,c
  2339  002138                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2341  002138  0E00               	movlw	0
  2342  00213A  0100               	movlb	0	; () banked
  2343  00213C  6FD7               	movwf	(_width+1)& (0+255),b
  2344  00213E  0E00               	movlw	0
  2345  002140  6FD6               	movwf	_width& (0+255),b
  2346  002142  C0D6  F023         	movff	_width,_flags
  2347  002146  C0D7  F024         	movff	_width+1,_flags+1
  2348  00214A                     
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2351  00214A  69D8               	setf	_prec& (0+255),b
  2352  00214C  69D9               	setf	(_prec+1)& (0+255),b
  2353  00214E                     
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2356  00214E  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2357  002154  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2358  00215A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2359  002160  006F FF77 FFF7     	movff	postdec2,tblptrh
  2360  002166                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2361  002166  6AF8               	clrf	tblptru,c
  2362  002168                     	endif
  2363  002168                     	if	0	;tblptru may be non-zero
  2364  002168                     	endif
  2365  002168  0008               	tblrd		*
  2366  00216A  50F5               	movf	tablat,w,c
  2367  00216C  0A64               	xorlw	100
  2368  00216E  B4D8               	btfsc	status,2,c
  2369  002170  EFBC  F010         	goto	u4791
  2370  002174  EFBE  F010         	goto	u4790
  2371  002178                     u4791:
  2372  002178  EFD5  F010         	goto	l5875
  2373  00217C                     u4790:
  2374  00217C                     
  2375                           ; BSR set to: 0
  2376  00217C  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2377  002182  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2378  002188  006F FF7B FFF6     	movff	postinc2,tblptrl
  2379  00218E  006F FF77 FFF7     	movff	postdec2,tblptrh
  2380  002194                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2381  002194  6AF8               	clrf	tblptru,c
  2382  002196                     	endif
  2383  002196                     	if	0	;tblptru may be non-zero
  2384  002196                     	endif
  2385  002196  0008               	tblrd		*
  2386  002198  50F5               	movf	tablat,w,c
  2387  00219A  0A69               	xorlw	105
  2388  00219C  A4D8               	btfss	status,2,c
  2389  00219E  EFD3  F010         	goto	u4801
  2390  0021A2  EFD5  F010         	goto	u4800
  2391  0021A6                     u4801:
  2392  0021A6  EF1F  F011         	goto	l5881
  2393  0021AA                     u4800:
  2394  0021AA                     l5875:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2398  0021AA  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2399  0021B0  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2400  0021B6  2ADE               	incf	postinc2,f,c
  2401  0021B8  0E00               	movlw	0
  2402  0021BA  22DD               	addwfc	postdec2,f,c
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2405  0021BC  0060  F28B  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2406  0021C2  0060  F28F  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2407  0021C8  006F FF7C  F0A4    	movff	indf2,??_vfpfcnvrt
  2408  0021CE  0E02               	movlw	2
  2409  0021D0  26DE               	addwf	postinc2,f,c
  2410  0021D2  006F FF7C  F0A5    	movff	indf2,??_vfpfcnvrt+1
  2411  0021D8  0E00               	movlw	0
  2412  0021DA  22DD               	addwfc	postdec2,f,c
  2413  0021DC  0060  F293  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2414  0021E2  0060  F297  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2415  0021E8  006F FF78  F0A6    	movff	postinc2,vfpfcnvrt@ll
  2416  0021EE  006F FF74  F0A7    	movff	postdec2,vfpfcnvrt@ll+1
  2417  0021F4  0E00               	movlw	0
  2418  0021F6  BFA7               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2419  0021F8  0EFF               	movlw	-1
  2420  0021FA  6FA8               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2421  0021FC  6FA9               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2422  0021FE  6FAA               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2423  002200  6FAB               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2424  002202  6FAC               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2425  002204  6FAD               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2426  002206                     
  2427                           ; BSR set to: 0
  2428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2429  002206  C09E  F07A         	movff	vfpfcnvrt@fp,dtoa@fp
  2430  00220A  C09F  F07B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2431  00220E  C0A6  F07C         	movff	vfpfcnvrt@ll,dtoa@d
  2432  002212  C0A7  F07D         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2433  002216  C0A8  F07E         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2434  00221A  C0A9  F07F         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2435  00221E  C0AA  F080         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2436  002222  C0AB  F081         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2437  002226  C0AC  F082         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2438  00222A  C0AD  F083         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2439  00222E  ECC3  F00C         	call	_dtoa	;wreg free
  2440  002232  C07A  F09E         	movff	?_dtoa,?_vfpfcnvrt
  2441  002236  C07B  F09F         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2442  00223A  EF82  F011         	goto	l2091
  2443  00223E                     l5881:
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2447  00223E  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2448  002244  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2449  00224A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2450  002250  006F FF77 FFF7     	movff	postdec2,tblptrh
  2451  002256                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2452  002256  6AF8               	clrf	tblptru,c
  2453  002258                     	endif
  2454  002258                     	if	0	;tblptru may be non-zero
  2455  002258                     	endif
  2456  002258  0008               	tblrd		*
  2457  00225A  50F5               	movf	tablat,w,c
  2458  00225C  0A25               	xorlw	37
  2459  00225E  A4D8               	btfss	status,2,c
  2460  002260  EF34  F011         	goto	u4811
  2461  002264  EF36  F011         	goto	u4810
  2462  002268                     u4811:
  2463  002268  EF50  F011         	goto	l5891
  2464  00226C                     u4810:
  2465  00226C                     
  2466                           ; BSR set to: 0
  2467                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2468  00226C  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2469  002272  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2470  002278  2ADE               	incf	postinc2,f,c
  2471  00227A  0E00               	movlw	0
  2472  00227C  22DD               	addwfc	postdec2,f,c
  2473  00227E                     
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2476  00227E  0E00               	movlw	0
  2477  002280  6F61               	movwf	(fputc@c+1)& (0+255),b
  2478  002282  0E25               	movlw	37
  2479  002284  6F60               	movwf	fputc@c& (0+255),b
  2480  002286  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2481  00228A  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2482  00228E  EC42  F01A         	call	_fputc	;wreg free
  2483  002292                     l5887:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2486  002292  0E00               	movlw	0
  2487  002294  0100               	movlb	0	; () banked
  2488  002296  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2489  002298  0E01               	movlw	1
  2490  00229A  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2491  00229C  EF82  F011         	goto	l2091
  2492  0022A0                     l5891:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2496  0022A0  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2497  0022A6  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2498  0022AC  2ADE               	incf	postinc2,f,c
  2499  0022AE  0E00               	movlw	0
  2500  0022B0  22DD               	addwfc	postdec2,f,c
  2501  0022B2                     
  2502                           ; BSR set to: 0
  2503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2504  0022B2  0E00               	movlw	0
  2505  0022B4  6F9F               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2506  0022B6  0E00               	movlw	0
  2507  0022B8  6F9E               	movwf	?_vfpfcnvrt& (0+255),b
  2508  0022BA  EF82  F011         	goto	l2091
  2509  0022BE                     l5897:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2512  0022BE  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2513  0022C4  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  0022CA  006F FF7B FFF6     	movff	postinc2,tblptrl
  2515  0022D0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2516  0022D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2517  0022D6  6AF8               	clrf	tblptru,c
  2518  0022D8                     	endif
  2519  0022D8                     	if	0	;tblptru may be non-zero
  2520  0022D8                     	endif
  2521  0022D8  0008               	tblrd		*
  2522  0022DA  50F5               	movf	tablat,w,c
  2523  0022DC  0100               	movlb	0	; () banked
  2524  0022DE  6F60               	movwf	fputc@c& (0+255),b
  2525  0022E0  6B61               	clrf	(fputc@c+1)& (0+255),b
  2526  0022E2  C09E  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2527  0022E6  C09F  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2528  0022EA  EC42  F01A         	call	_fputc	;wreg free
  2529  0022EE                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2531  0022EE  0060  F283  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2532  0022F4  0060  F287  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2533  0022FA  2ADE               	incf	postinc2,f,c
  2534  0022FC  0E00               	movlw	0
  2535  0022FE  22DD               	addwfc	postdec2,f,c
  2536  002300  EF49  F011         	goto	l5887
  2537  002304                     l2091:
  2538  002304  0012               	return		;funcret
  2539  002306                     __end_of_vfpfcnvrt:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _dtoa *****************
  2543 ;; Defined at:
  2544 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  fp              2   26[BANK0 ] PTR struct _IO_FILE
  2547 ;;		 -> NULL(0), 
  2548 ;;  d               8   28[BANK0 ] long long 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  n               8   52[BANK0 ] long long 
  2551 ;;  i               2   60[BANK0 ] int 
  2552 ;;  s               2   50[BANK0 ] int 
  2553 ;;  w               2   48[BANK0 ] int 
  2554 ;;  p               2   46[BANK0 ] int 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2   26[BANK0 ] int 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2564 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;Total ram usage:       36 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 13
  2571 ;; This function calls:
  2572 ;;		___aodiv
  2573 ;;		___aomod
  2574 ;;		_abs
  2575 ;;		_pad
  2576 ;; This function is called by:
  2577 ;;		_vfpfcnvrt
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text8
  2582  001986                     __ptext8:
  2583                           	callstack 0
  2584  001986                     _dtoa:
  2585                           	callstack 12
  2586  001986                     
  2587                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2588  001986  C07C  F094         	movff	dtoa@d,dtoa@n
  2589  00198A  C07D  F095         	movff	dtoa@d+1,dtoa@n+1
  2590  00198E  C07E  F096         	movff	dtoa@d+2,dtoa@n+2
  2591  001992  C07F  F097         	movff	dtoa@d+3,dtoa@n+3
  2592  001996  C080  F098         	movff	dtoa@d+4,dtoa@n+4
  2593  00199A  C081  F099         	movff	dtoa@d+5,dtoa@n+5
  2594  00199E  C082  F09A         	movff	dtoa@d+6,dtoa@n+6
  2595  0019A2  C083  F09B         	movff	dtoa@d+7,dtoa@n+7
  2596  0019A6                     
  2597                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2598  0019A6  0100               	movlb	0	; () banked
  2599  0019A8  BF9B               	btfsc	(dtoa@n+7)& (0+255),7,b
  2600  0019AA  EFD9  F00C         	goto	u4631
  2601  0019AE  EFDC  F00C         	goto	u4630
  2602  0019B2                     u4631:
  2603  0019B2  0E01               	movlw	1
  2604  0019B4  EFDD  F00C         	goto	u4640
  2605  0019B8                     u4630:
  2606  0019B8  0E00               	movlw	0
  2607  0019BA                     u4640:
  2608  0019BA  6F92               	movwf	dtoa@s& (0+255),b
  2609  0019BC  6B93               	clrf	(dtoa@s+1)& (0+255),b
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2612  0019BE  5192               	movf	dtoa@s& (0+255),w,b
  2613  0019C0  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2614  0019C2  B4D8               	btfsc	status,2,c
  2615  0019C4  EFE6  F00C         	goto	u4651
  2616  0019C8  EFE8  F00C         	goto	u4650
  2617  0019CC                     u4651:
  2618  0019CC  EFF8  F00C         	goto	l5807
  2619  0019D0                     u4650:
  2620  0019D0                     
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2623  0019D0  1F9B               	comf	(dtoa@n+7)& (0+255),f,b
  2624  0019D2  1F9A               	comf	(dtoa@n+6)& (0+255),f,b
  2625  0019D4  1F99               	comf	(dtoa@n+5)& (0+255),f,b
  2626  0019D6  1F98               	comf	(dtoa@n+4)& (0+255),f,b
  2627  0019D8  1F97               	comf	(dtoa@n+3)& (0+255),f,b
  2628  0019DA  1F96               	comf	(dtoa@n+2)& (0+255),f,b
  2629  0019DC  1F95               	comf	(dtoa@n+1)& (0+255),f,b
  2630  0019DE  6D94               	negf	dtoa@n& (0+255),b
  2631  0019E0  0E00               	movlw	0
  2632  0019E2  2395               	addwfc	(dtoa@n+1)& (0+255),f,b
  2633  0019E4  2396               	addwfc	(dtoa@n+2)& (0+255),f,b
  2634  0019E6  2397               	addwfc	(dtoa@n+3)& (0+255),f,b
  2635  0019E8  2398               	addwfc	(dtoa@n+4)& (0+255),f,b
  2636  0019EA  2399               	addwfc	(dtoa@n+5)& (0+255),f,b
  2637  0019EC  239A               	addwfc	(dtoa@n+6)& (0+255),f,b
  2638  0019EE  239B               	addwfc	(dtoa@n+7)& (0+255),f,b
  2639  0019F0                     l5807:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2643  0019F0  BFD9               	btfsc	(_prec+1)& (0+255),7,b
  2644  0019F2  EFFD  F00C         	goto	u4661
  2645  0019F6  EFFF  F00C         	goto	u4660
  2646  0019FA                     u4661:
  2647  0019FA  EF00  F00D         	goto	l5811
  2648  0019FE                     u4660:
  2649  0019FE                     
  2650                           ; BSR set to: 0
  2651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2652  0019FE  9223               	bcf	_flags^0,1,c
  2653  001A00                     l5811:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2657  001A00  BFD9               	btfsc	(_prec+1)& (0+255),7,b
  2658  001A02  EF0D  F00D         	goto	u4670
  2659  001A06  51D9               	movf	(_prec+1)& (0+255),w,b
  2660  001A08  E106               	bnz	u4671
  2661  001A0A  05D8               	decf	_prec& (0+255),w,b
  2662  001A0C  B0D8               	btfsc	status,0,c
  2663  001A0E  EF0B  F00D         	goto	u4671
  2664  001A12  EF0D  F00D         	goto	u4670
  2665  001A16                     u4671:
  2666  001A16  EF13  F00D         	goto	l2064
  2667  001A1A                     u4670:
  2668  001A1A                     
  2669                           ; BSR set to: 0
  2670  001A1A  0E00               	movlw	0
  2671  001A1C  6F8F               	movwf	(dtoa@p+1)& (0+255),b
  2672  001A1E  0E01               	movlw	1
  2673  001A20  6F8E               	movwf	dtoa@p& (0+255),b
  2674  001A22  EF17  F00D         	goto	l2066
  2675  001A26                     l2064:
  2676                           
  2677                           ; BSR set to: 0
  2678  001A26  C0D8  F08E         	movff	_prec,dtoa@p
  2679  001A2A  C0D9  F08F         	movff	_prec+1,dtoa@p+1
  2680  001A2E                     l2066:
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2684  001A2E  C0D6  F090         	movff	_width,dtoa@w
  2685  001A32  C0D7  F091         	movff	_width+1,dtoa@w+1
  2686  001A36                     
  2687                           ; BSR set to: 0
  2688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2689  001A36  5192               	movf	dtoa@s& (0+255),w,b
  2690  001A38  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2691  001A3A  A4D8               	btfss	status,2,c
  2692  001A3C  EF22  F00D         	goto	u4681
  2693  001A40  EF24  F00D         	goto	u4680
  2694  001A44                     u4681:
  2695  001A44  EF2B  F00D         	goto	l5819
  2696  001A48                     u4680:
  2697  001A48                     
  2698                           ; BSR set to: 0
  2699  001A48  A423               	btfss	_flags^0,2,c
  2700  001A4A  EF29  F00D         	goto	u4691
  2701  001A4E  EF2B  F00D         	goto	u4690
  2702  001A52                     u4691:
  2703  001A52  EF2E  F00D         	goto	l5821
  2704  001A56                     u4690:
  2705  001A56                     l5819:
  2706                           
  2707                           ; BSR set to: 0
  2708                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  2709  001A56  0790               	decf	dtoa@w& (0+255),f,b
  2710  001A58  A0D8               	btfss	status,0,c
  2711  001A5A  0791               	decf	(dtoa@w+1)& (0+255),f,b
  2712  001A5C                     l5821:
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2716  001A5C  0E00               	movlw	0
  2717  001A5E  6F9D               	movwf	(dtoa@i+1)& (0+255),b
  2718  001A60  0E1F               	movlw	31
  2719  001A62  6F9C               	movwf	dtoa@i& (0+255),b
  2720  001A64                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2723  001A64  0E00               	movlw	0
  2724  001A66  0101               	movlb	1	; () banked
  2725  001A68  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2728  001A6A  EFB4  F00D         	goto	l5835
  2729  001A6E                     l5825:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  2733  001A6E  079C               	decf	dtoa@i& (0+255),f,b
  2734  001A70  A0D8               	btfss	status,0,c
  2735  001A72  079D               	decf	(dtoa@i+1)& (0+255),f,b
  2736  001A74                     
  2737                           ; BSR set to: 0
  2738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2739  001A74  0E00               	movlw	low _dbuf
  2740  001A76  259C               	addwf	dtoa@i& (0+255),w,b
  2741  001A78  6ED9               	movwf	fsr2l,c
  2742  001A7A  0E01               	movlw	high _dbuf
  2743  001A7C  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2744  001A7E  6EDA               	movwf	fsr2h,c
  2745  001A80  C094  F060         	movff	dtoa@n,___aomod@dividend
  2746  001A84  C095  F061         	movff	dtoa@n+1,___aomod@dividend+1
  2747  001A88  C096  F062         	movff	dtoa@n+2,___aomod@dividend+2
  2748  001A8C  C097  F063         	movff	dtoa@n+3,___aomod@dividend+3
  2749  001A90  C098  F064         	movff	dtoa@n+4,___aomod@dividend+4
  2750  001A94  C099  F065         	movff	dtoa@n+5,___aomod@dividend+5
  2751  001A98  C09A  F066         	movff	dtoa@n+6,___aomod@dividend+6
  2752  001A9C  C09B  F067         	movff	dtoa@n+7,___aomod@dividend+7
  2753  001AA0  0E0A               	movlw	10
  2754  001AA2  6F68               	movwf	___aomod@divisor& (0+255),b
  2755  001AA4  0E00               	movlw	0
  2756  001AA6  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  2757  001AA8  0E00               	movlw	0
  2758  001AAA  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  2759  001AAC  0E00               	movlw	0
  2760  001AAE  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  2761  001AB0  0E00               	movlw	0
  2762  001AB2  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  2763  001AB4  0E00               	movlw	0
  2764  001AB6  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  2765  001AB8  0E00               	movlw	0
  2766  001ABA  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  2767  001ABC  0E00               	movlw	0
  2768  001ABE  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  2769  001AC0  ECBE  F014         	call	___aomod	;wreg free
  2770  001AC4  C060  F084         	movff	?___aomod,??_dtoa
  2771  001AC8  C061  F085         	movff	?___aomod+1,??_dtoa+1
  2772  001ACC  C062  F086         	movff	?___aomod+2,??_dtoa+2
  2773  001AD0  C063  F087         	movff	?___aomod+3,??_dtoa+3
  2774  001AD4  C064  F088         	movff	?___aomod+4,??_dtoa+4
  2775  001AD8  C065  F089         	movff	?___aomod+5,??_dtoa+5
  2776  001ADC  C066  F08A         	movff	?___aomod+6,??_dtoa+6
  2777  001AE0  C067  F08B         	movff	?___aomod+7,??_dtoa+7
  2778  001AE4  C084  F070         	movff	??_dtoa,abs@a
  2779  001AE8  C086  F071         	movff	??_dtoa+2,abs@a+1
  2780  001AEC  EC98  F01D         	call	_abs	;wreg free
  2781  001AF0  0100               	movlb	0	; () banked
  2782  001AF2  5170               	movf	?_abs& (0+255),w,b
  2783  001AF4  0F30               	addlw	48
  2784  001AF6  6EDF               	movwf	indf2,c
  2785  001AF8                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  2788  001AF8  078E               	decf	dtoa@p& (0+255),f,b
  2789  001AFA  A0D8               	btfss	status,0,c
  2790  001AFC  078F               	decf	(dtoa@p+1)& (0+255),f,b
  2791  001AFE                     
  2792                           ; BSR set to: 0
  2793                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  2794  001AFE  0790               	decf	dtoa@w& (0+255),f,b
  2795  001B00  A0D8               	btfss	status,0,c
  2796  001B02  0791               	decf	(dtoa@w+1)& (0+255),f,b
  2797  001B04                     
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2800  001B04  C094  F060         	movff	dtoa@n,___aodiv@dividend
  2801  001B08  C095  F061         	movff	dtoa@n+1,___aodiv@dividend+1
  2802  001B0C  C096  F062         	movff	dtoa@n+2,___aodiv@dividend+2
  2803  001B10  C097  F063         	movff	dtoa@n+3,___aodiv@dividend+3
  2804  001B14  C098  F064         	movff	dtoa@n+4,___aodiv@dividend+4
  2805  001B18  C099  F065         	movff	dtoa@n+5,___aodiv@dividend+5
  2806  001B1C  C09A  F066         	movff	dtoa@n+6,___aodiv@dividend+6
  2807  001B20  C09B  F067         	movff	dtoa@n+7,___aodiv@dividend+7
  2808  001B24  0E0A               	movlw	10
  2809  001B26  6F68               	movwf	___aodiv@divisor& (0+255),b
  2810  001B28  0E00               	movlw	0
  2811  001B2A  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  2812  001B2C  0E00               	movlw	0
  2813  001B2E  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  2814  001B30  0E00               	movlw	0
  2815  001B32  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  2816  001B34  0E00               	movlw	0
  2817  001B36  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  2818  001B38  0E00               	movlw	0
  2819  001B3A  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  2820  001B3C  0E00               	movlw	0
  2821  001B3E  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  2822  001B40  0E00               	movlw	0
  2823  001B42  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  2824  001B44  ECF9  F013         	call	___aodiv	;wreg free
  2825  001B48  C060  F094         	movff	?___aodiv,dtoa@n
  2826  001B4C  C061  F095         	movff	?___aodiv+1,dtoa@n+1
  2827  001B50  C062  F096         	movff	?___aodiv+2,dtoa@n+2
  2828  001B54  C063  F097         	movff	?___aodiv+3,dtoa@n+3
  2829  001B58  C064  F098         	movff	?___aodiv+4,dtoa@n+4
  2830  001B5C  C065  F099         	movff	?___aodiv+5,dtoa@n+5
  2831  001B60  C066  F09A         	movff	?___aodiv+6,dtoa@n+6
  2832  001B64  C067  F09B         	movff	?___aodiv+7,dtoa@n+7
  2833  001B68                     l5835:
  2834                           
  2835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2836  001B68  0100               	movlb	0	; () banked
  2837  001B6A  BF9D               	btfsc	(dtoa@i+1)& (0+255),7,b
  2838  001B6C  EFC0  F00D         	goto	u4701
  2839  001B70  519D               	movf	(dtoa@i+1)& (0+255),w,b
  2840  001B72  E108               	bnz	u4700
  2841  001B74  059C               	decf	dtoa@i& (0+255),w,b
  2842  001B76  A0D8               	btfss	status,0,c
  2843  001B78  EFC0  F00D         	goto	u4701
  2844  001B7C  EFC2  F00D         	goto	u4700
  2845  001B80                     u4701:
  2846  001B80  EFF2  F00D         	goto	l5845
  2847  001B84                     u4700:
  2848  001B84                     
  2849                           ; BSR set to: 0
  2850  001B84  5194               	movf	dtoa@n& (0+255),w,b
  2851  001B86  1195               	iorwf	(dtoa@n+1)& (0+255),w,b
  2852  001B88  1196               	iorwf	(dtoa@n+2)& (0+255),w,b
  2853  001B8A  1197               	iorwf	(dtoa@n+3)& (0+255),w,b
  2854  001B8C  1198               	iorwf	(dtoa@n+4)& (0+255),w,b
  2855  001B8E  1199               	iorwf	(dtoa@n+5)& (0+255),w,b
  2856  001B90  119A               	iorwf	(dtoa@n+6)& (0+255),w,b
  2857  001B92  119B               	iorwf	(dtoa@n+7)& (0+255),w,b
  2858  001B94  A4D8               	btfss	status,2,c
  2859  001B96  EFCF  F00D         	goto	u4711
  2860  001B9A  EFD1  F00D         	goto	u4710
  2861  001B9E                     u4711:
  2862  001B9E  EF37  F00D         	goto	l5825
  2863  001BA2                     u4710:
  2864  001BA2                     
  2865                           ; BSR set to: 0
  2866  001BA2  BF8F               	btfsc	(dtoa@p+1)& (0+255),7,b
  2867  001BA4  EFDE  F00D         	goto	u4720
  2868  001BA8  518F               	movf	(dtoa@p+1)& (0+255),w,b
  2869  001BAA  E106               	bnz	u4721
  2870  001BAC  058E               	decf	dtoa@p& (0+255),w,b
  2871  001BAE  B0D8               	btfsc	status,0,c
  2872  001BB0  EFDC  F00D         	goto	u4721
  2873  001BB4  EFDE  F00D         	goto	u4720
  2874  001BB8                     u4721:
  2875  001BB8  EF37  F00D         	goto	l5825
  2876  001BBC                     u4720:
  2877  001BBC                     
  2878                           ; BSR set to: 0
  2879  001BBC  BF91               	btfsc	(dtoa@w+1)& (0+255),7,b
  2880  001BBE  EFE9  F00D         	goto	u4731
  2881  001BC2  5191               	movf	(dtoa@w+1)& (0+255),w,b
  2882  001BC4  E108               	bnz	u4730
  2883  001BC6  0590               	decf	dtoa@w& (0+255),w,b
  2884  001BC8  A0D8               	btfss	status,0,c
  2885  001BCA  EFE9  F00D         	goto	u4731
  2886  001BCE  EFEB  F00D         	goto	u4730
  2887  001BD2                     u4731:
  2888  001BD2  EFF2  F00D         	goto	l5845
  2889  001BD6                     u4730:
  2890  001BD6                     
  2891                           ; BSR set to: 0
  2892  001BD6  B223               	btfsc	_flags^0,1,c
  2893  001BD8  EFF0  F00D         	goto	u4741
  2894  001BDC  EFF2  F00D         	goto	u4740
  2895  001BE0                     u4741:
  2896  001BE0  EF37  F00D         	goto	l5825
  2897  001BE4                     u4740:
  2898  001BE4                     l5845:
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2902  001BE4  5192               	movf	dtoa@s& (0+255),w,b
  2903  001BE6  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2904  001BE8  A4D8               	btfss	status,2,c
  2905  001BEA  EFF9  F00D         	goto	u4751
  2906  001BEE  EFFB  F00D         	goto	u4750
  2907  001BF2                     u4751:
  2908  001BF2  EF02  F00E         	goto	l5849
  2909  001BF6                     u4750:
  2910  001BF6                     
  2911                           ; BSR set to: 0
  2912  001BF6  A423               	btfss	_flags^0,2,c
  2913  001BF8  EF00  F00E         	goto	u4761
  2914  001BFC  EF02  F00E         	goto	u4760
  2915  001C00                     u4761:
  2916  001C00  EF21  F00E         	goto	l5859
  2917  001C04                     u4760:
  2918  001C04                     l5849:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2922  001C04  079C               	decf	dtoa@i& (0+255),f,b
  2923  001C06  A0D8               	btfss	status,0,c
  2924  001C08  079D               	decf	(dtoa@i+1)& (0+255),f,b
  2925  001C0A                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2928  001C0A  5192               	movf	dtoa@s& (0+255),w,b
  2929  001C0C  1193               	iorwf	(dtoa@s+1)& (0+255),w,b
  2930  001C0E  A4D8               	btfss	status,2,c
  2931  001C10  EF0C  F00E         	goto	u4771
  2932  001C14  EF0E  F00E         	goto	u4770
  2933  001C18                     u4771:
  2934  001C18  EF14  F00E         	goto	l5855
  2935  001C1C                     u4770:
  2936  001C1C                     
  2937                           ; BSR set to: 0
  2938  001C1C  0E00               	movlw	0
  2939  001C1E  6F8D               	movwf	(_dtoa$3454+1)& (0+255),b
  2940  001C20  0E2B               	movlw	43
  2941  001C22  6F8C               	movwf	_dtoa$3454& (0+255),b
  2942  001C24  EF18  F00E         	goto	l5857
  2943  001C28                     l5855:
  2944                           
  2945                           ; BSR set to: 0
  2946  001C28  0E00               	movlw	0
  2947  001C2A  6F8D               	movwf	(_dtoa$3454+1)& (0+255),b
  2948  001C2C  0E2D               	movlw	45
  2949  001C2E  6F8C               	movwf	_dtoa$3454& (0+255),b
  2950  001C30                     l5857:
  2951                           
  2952                           ; BSR set to: 0
  2953  001C30  0E00               	movlw	low _dbuf
  2954  001C32  259C               	addwf	dtoa@i& (0+255),w,b
  2955  001C34  6ED9               	movwf	fsr2l,c
  2956  001C36  0E01               	movlw	high _dbuf
  2957  001C38  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2958  001C3A  6EDA               	movwf	fsr2h,c
  2959  001C3C  0060  F233  FFDF   	movff	_dtoa$3454,indf2
  2960  001C42                     l5859:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2964  001C42  C07A  F070         	movff	dtoa@fp,pad@fp
  2965  001C46  C07B  F071         	movff	dtoa@fp+1,pad@fp+1
  2966  001C4A  0E00               	movlw	low _dbuf
  2967  001C4C  259C               	addwf	dtoa@i& (0+255),w,b
  2968  001C4E  6F72               	movwf	pad@buf& (0+255),b
  2969  001C50  0E01               	movlw	high _dbuf
  2970  001C52  219D               	addwfc	(dtoa@i+1)& (0+255),w,b
  2971  001C54  6F73               	movwf	(pad@buf+1)& (0+255),b
  2972  001C56  C090  F074         	movff	dtoa@w,pad@p
  2973  001C5A  C091  F075         	movff	dtoa@w+1,pad@p+1
  2974  001C5E  EC7C  F018         	call	_pad	;wreg free
  2975  001C62  C070  F07A         	movff	?_pad,?_dtoa
  2976  001C66  C071  F07B         	movff	?_pad+1,?_dtoa+1
  2977  001C6A  0012               	return		;funcret
  2978  001C6C                     __end_of_dtoa:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _pad *****************
  2982 ;; Defined at:
  2983 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  2986 ;;		 -> NULL(0), 
  2987 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  2988 ;;		 -> dbuf(32), 
  2989 ;;  p               2   20[BANK0 ] int 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  w               2   24[BANK0 ] int 
  2992 ;;  i               2   22[BANK0 ] int 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  2   16[BANK0 ] int 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3002 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Totals:         1      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;Total ram usage:       11 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 12
  3009 ;; This function calls:
  3010 ;;		_fputc
  3011 ;;		_fputs
  3012 ;;		_strlen
  3013 ;; This function is called by:
  3014 ;;		_dtoa
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text9
  3019  0030F8                     __ptext9:
  3020                           	callstack 0
  3021  0030F8                     _pad:
  3022                           	callstack 12
  3023  0030F8                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3025  0030F8  A023               	btfss	_flags^0,0,c
  3026  0030FA  EF81  F018         	goto	u4581
  3027  0030FE  EF83  F018         	goto	u4580
  3028  003102                     u4581:
  3029  003102  EF8D  F018         	goto	l5779
  3030  003106                     u4580:
  3031  003106                     
  3032                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3033  003106  C072  F069         	movff	pad@buf,fputs@s
  3034  00310A  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3035  00310E  C070  F06B         	movff	pad@fp,fputs@fp
  3036  003112  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3037  003116  EC2D  F01D         	call	_fputs	;wreg free
  3038  00311A                     l5779:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3041  00311A  0100               	movlb	0	; () banked
  3042  00311C  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  3043  00311E  EF93  F018         	goto	u4591
  3044  003122  EF95  F018         	goto	u4590
  3045  003126                     u4591:
  3046  003126  EF9B  F018         	goto	l5783
  3047  00312A                     u4590:
  3048  00312A                     
  3049                           ; BSR set to: 0
  3050  00312A  C074  F078         	movff	pad@p,pad@w
  3051  00312E  C075  F079         	movff	pad@p+1,pad@w+1
  3052  003132  EF9F  F018         	goto	l2053
  3053  003136                     l5783:
  3054                           
  3055                           ; BSR set to: 0
  3056  003136  0E00               	movlw	0
  3057  003138  6F79               	movwf	(pad@w+1)& (0+255),b
  3058  00313A  0E00               	movlw	0
  3059  00313C  6F78               	movwf	pad@w& (0+255),b
  3060  00313E                     l2053:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3064  00313E  0E00               	movlw	0
  3065  003140  6F77               	movwf	(pad@i+1)& (0+255),b
  3066  003142  0E00               	movlw	0
  3067  003144  6F76               	movwf	pad@i& (0+255),b
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3070  003146  EFB2  F018         	goto	l5789
  3071  00314A                     l5785:
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3075  00314A  0E00               	movlw	0
  3076  00314C  6F61               	movwf	(fputc@c+1)& (0+255),b
  3077  00314E  0E20               	movlw	32
  3078  003150  6F60               	movwf	fputc@c& (0+255),b
  3079  003152  C070  F062         	movff	pad@fp,fputc@fp
  3080  003156  C071  F063         	movff	pad@fp+1,fputc@fp+1
  3081  00315A  EC42  F01A         	call	_fputc	;wreg free
  3082  00315E                     
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3084  00315E  0100               	movlb	0	; () banked
  3085  003160  4B76               	infsnz	pad@i& (0+255),f,b
  3086  003162  2B77               	incf	(pad@i+1)& (0+255),f,b
  3087  003164                     l5789:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3091  003164  5178               	movf	pad@w& (0+255),w,b
  3092  003166  5D76               	subwf	pad@i& (0+255),w,b
  3093  003168  5177               	movf	(pad@i+1)& (0+255),w,b
  3094  00316A  0A80               	xorlw	128
  3095  00316C  6E22               	movwf	??_pad^0,c
  3096  00316E  5179               	movf	(pad@w+1)& (0+255),w,b
  3097  003170  0A80               	xorlw	128
  3098  003172  5822               	subwfb	??_pad^0,w,c
  3099  003174  A0D8               	btfss	status,0,c
  3100  003176  EFBF  F018         	goto	u4601
  3101  00317A  EFC1  F018         	goto	u4600
  3102  00317E                     u4601:
  3103  00317E  EFA5  F018         	goto	l5785
  3104  003182                     u4600:
  3105  003182                     
  3106                           ; BSR set to: 0
  3107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3108  003182  B023               	btfsc	_flags^0,0,c
  3109  003184  EFC6  F018         	goto	u4611
  3110  003188  EFC8  F018         	goto	u4610
  3111  00318C                     u4611:
  3112  00318C  EFD2  F018         	goto	l5793
  3113  003190                     u4610:
  3114  003190                     
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3117  003190  C072  F069         	movff	pad@buf,fputs@s
  3118  003194  C073  F06A         	movff	pad@buf+1,fputs@s+1
  3119  003198  C070  F06B         	movff	pad@fp,fputs@fp
  3120  00319C  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  3121  0031A0  EC2D  F01D         	call	_fputs	;wreg free
  3122  0031A4                     l5793:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3125  0031A4  C072  F020         	movff	pad@buf,strlen@s
  3126  0031A8  C073  F021         	movff	pad@buf+1,strlen@s+1
  3127  0031AC  ECB9  F01D         	call	_strlen	;wreg free
  3128  0031B0  0100               	movlb	0	; () banked
  3129  0031B2  5178               	movf	pad@w& (0+255),w,b
  3130  0031B4  2420               	addwf	?_strlen^0,w,c
  3131  0031B6  6F70               	movwf	?_pad& (0+255),b
  3132  0031B8  5179               	movf	(pad@w+1)& (0+255),w,b
  3133  0031BA  2021               	addwfc	(?_strlen+1)^0,w,c
  3134  0031BC  6F71               	movwf	(?_pad+1)& (0+255),b
  3135  0031BE                     
  3136                           ; BSR set to: 0
  3137  0031BE  0012               	return		;funcret
  3138  0031C0                     __end_of_pad:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _strlen *****************
  3142 ;; Defined at:
  3143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  s               2   31[COMRAM] PTR const unsigned char 
  3146 ;;		 -> dbuf(32), 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  a               2    0[BANK0 ] PTR const unsigned char 
  3149 ;;		 -> dbuf(32), 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  2   31[COMRAM] unsigned int 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;Total ram usage:        4 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 8
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_pad
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text10
  3174  003B72                     __ptext10:
  3175                           	callstack 0
  3176  003B72                     _strlen:
  3177                           	callstack 15
  3178  003B72  C020  F060         	movff	strlen@s,strlen@a
  3179  003B76  C021  F061         	movff	strlen@s+1,strlen@a+1
  3180  003B7A  EFC1  F01D         	goto	l5689
  3181  003B7E                     l5687:
  3182  003B7E  4A20               	infsnz	strlen@s^0,f,c
  3183  003B80  2A21               	incf	(strlen@s+1)^0,f,c
  3184  003B82                     l5689:
  3185  003B82  0060  F083  FFD9   	movff	strlen@s,fsr2l
  3186  003B88  0060  F087  FFDA   	movff	strlen@s+1,fsr2h
  3187  003B8E  50DF               	movf	indf2,w,c
  3188  003B90  A4D8               	btfss	status,2,c
  3189  003B92  EFCD  F01D         	goto	u4441
  3190  003B96  EFCF  F01D         	goto	u4440
  3191  003B9A                     u4441:
  3192  003B9A  EFBF  F01D         	goto	l5687
  3193  003B9E                     u4440:
  3194  003B9E  0100               	movlb	0	; () banked
  3195  003BA0  5160               	movf	strlen@a& (0+255),w,b
  3196  003BA2  5C20               	subwf	strlen@s^0,w,c
  3197  003BA4  6E20               	movwf	?_strlen^0,c
  3198  003BA6  5161               	movf	(strlen@a+1)& (0+255),w,b
  3199  003BA8  5821               	subwfb	(strlen@s+1)^0,w,c
  3200  003BAA  6E21               	movwf	(?_strlen+1)^0,c
  3201  003BAC                     
  3202                           ; BSR set to: 0
  3203  003BAC  0012               	return		;funcret
  3204  003BAE                     __end_of_strlen:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _fputs *****************
  3208 ;; Defined at:
  3209 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3212 ;;		 -> dbuf(32), 
  3213 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  3214 ;;		 -> NULL(0), 
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;  i               2   14[BANK0 ] int 
  3217 ;;  c               1   13[BANK0 ] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2    9[BANK0 ] int 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;Total ram usage:        7 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; Hardware stack levels required when called: 11
  3234 ;; This function calls:
  3235 ;;		_fputc
  3236 ;; This function is called by:
  3237 ;;		_pad
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text11
  3242  003A5A                     __ptext11:
  3243                           	callstack 0
  3244  003A5A                     _fputs:
  3245                           	callstack 12
  3246  003A5A  0E00               	movlw	0
  3247  003A5C  0100               	movlb	0	; () banked
  3248  003A5E  6F6F               	movwf	(fputs@i+1)& (0+255),b
  3249  003A60  0E00               	movlw	0
  3250  003A62  6F6E               	movwf	fputs@i& (0+255),b
  3251  003A64  EF40  F01D         	goto	l5683
  3252  003A68                     l5679:
  3253                           
  3254                           ; BSR set to: 0
  3255  003A68  C06D  F060         	movff	fputs@c,fputc@c
  3256  003A6C  6B61               	clrf	(fputc@c+1)& (0+255),b
  3257  003A6E  C06B  F062         	movff	fputs@fp,fputc@fp
  3258  003A72  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  3259  003A76  EC42  F01A         	call	_fputc	;wreg free
  3260  003A7A  0100               	movlb	0	; () banked
  3261  003A7C  4B6E               	infsnz	fputs@i& (0+255),f,b
  3262  003A7E  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  3263  003A80                     l5683:
  3264                           
  3265                           ; BSR set to: 0
  3266  003A80  516E               	movf	fputs@i& (0+255),w,b
  3267  003A82  2569               	addwf	fputs@s& (0+255),w,b
  3268  003A84  6ED9               	movwf	fsr2l,c
  3269  003A86  516F               	movf	(fputs@i+1)& (0+255),w,b
  3270  003A88  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  3271  003A8A  6EDA               	movwf	fsr2h,c
  3272  003A8C  50DF               	movf	indf2,w,c
  3273  003A8E  6F6D               	movwf	fputs@c& (0+255),b
  3274  003A90  516D               	movf	fputs@c& (0+255),w,b
  3275  003A92  A4D8               	btfss	status,2,c
  3276  003A94  EF4E  F01D         	goto	u4431
  3277  003A98  EF50  F01D         	goto	u4430
  3278  003A9C                     u4431:
  3279  003A9C  EF34  F01D         	goto	l5679
  3280  003AA0                     u4430:
  3281  003AA0                     
  3282                           ; BSR set to: 0
  3283  003AA0  0012               	return		;funcret
  3284  003AA2                     __end_of_fputs:
  3285                           	callstack 0
  3286                           
  3287 ;; *************** function _fputc *****************
  3288 ;; Defined at:
  3289 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  c               2    0[BANK0 ] int 
  3292 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  3293 ;;		 -> NULL(0), 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  2    0[BANK0 ] int 
  3298 ;; Registers used:
  3299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3305 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;Total ram usage:        9 bytes
  3310 ;; Hardware stack levels used: 1
  3311 ;; Hardware stack levels required when called: 10
  3312 ;; This function calls:
  3313 ;;		_putch
  3314 ;; This function is called by:
  3315 ;;		_pad
  3316 ;;		_vfpfcnvrt
  3317 ;;		_fputs
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text12
  3322  003484                     __ptext12:
  3323                           	callstack 0
  3324  003484                     _fputc:
  3325                           	callstack 15
  3326  003484  0100               	movlb	0	; () banked
  3327  003486  5162               	movf	fputc@fp& (0+255),w,b
  3328  003488  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3329  00348A  B4D8               	btfsc	status,2,c
  3330  00348C  EF4A  F01A         	goto	u4391
  3331  003490  EF4C  F01A         	goto	u4390
  3332  003494                     u4391:
  3333  003494  EF55  F01A         	goto	l5667
  3334  003498                     u4390:
  3335  003498                     
  3336                           ; BSR set to: 0
  3337  003498  5162               	movf	fputc@fp& (0+255),w,b
  3338  00349A  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  3339  00349C  A4D8               	btfss	status,2,c
  3340  00349E  EF53  F01A         	goto	u4401
  3341  0034A2  EF55  F01A         	goto	u4400
  3342  0034A6                     u4401:
  3343  0034A6  EF5A  F01A         	goto	l5669
  3344  0034AA                     u4400:
  3345  0034AA                     l5667:
  3346                           
  3347                           ; BSR set to: 0
  3348  0034AA  5160               	movf	fputc@c& (0+255),w,b
  3349  0034AC  EC4D  F020         	call	_putch
  3350  0034B0  EF8D  F01A         	goto	l2117
  3351  0034B4                     l5669:
  3352                           
  3353                           ; BSR set to: 0
  3354  0034B4  EE20 F009          	lfsr	2,9
  3355  0034B8  5162               	movf	fputc@fp& (0+255),w,b
  3356  0034BA  26D9               	addwf	fsr2l,f,c
  3357  0034BC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3358  0034BE  22DA               	addwfc	fsr2h,f,c
  3359  0034C0  50DE               	movf	postinc2,w,c
  3360  0034C2  10DE               	iorwf	postinc2,w,c
  3361  0034C4  B4D8               	btfsc	status,2,c
  3362  0034C6  EF67  F01A         	goto	u4411
  3363  0034CA  EF69  F01A         	goto	u4410
  3364  0034CE                     u4411:
  3365  0034CE  EF84  F01A         	goto	l5673
  3366  0034D2                     u4410:
  3367  0034D2                     
  3368                           ; BSR set to: 0
  3369  0034D2  EE20 F009          	lfsr	2,9
  3370  0034D6  5162               	movf	fputc@fp& (0+255),w,b
  3371  0034D8  26D9               	addwf	fsr2l,f,c
  3372  0034DA  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3373  0034DC  22DA               	addwfc	fsr2h,f,c
  3374  0034DE  EE10 F003          	lfsr	1,3
  3375  0034E2  5162               	movf	fputc@fp& (0+255),w,b
  3376  0034E4  26E1               	addwf	fsr1l,f,c
  3377  0034E6  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3378  0034E8  22E2               	addwfc	fsr1h,f,c
  3379  0034EA  50DE               	movf	postinc2,w,c
  3380  0034EC  5CE6               	subwf	postinc1,w,c
  3381  0034EE  50E6               	movf	postinc1,w,c
  3382  0034F0  0A80               	xorlw	128
  3383  0034F2  6F68               	movwf	(??_fputc+4)& (0+255),b
  3384  0034F4  50DE               	movf	postinc2,w,c
  3385  0034F6  0A80               	xorlw	128
  3386  0034F8  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  3387  0034FA  B0D8               	btfsc	status,0,c
  3388  0034FC  EF82  F01A         	goto	u4421
  3389  003500  EF84  F01A         	goto	u4420
  3390  003504                     u4421:
  3391  003504  EF8D  F01A         	goto	l2117
  3392  003508                     u4420:
  3393  003508                     l5673:
  3394                           
  3395                           ; BSR set to: 0
  3396  003508  EE20 F003          	lfsr	2,3
  3397  00350C  5162               	movf	fputc@fp& (0+255),w,b
  3398  00350E  26D9               	addwf	fsr2l,f,c
  3399  003510  5163               	movf	(fputc@fp+1)& (0+255),w,b
  3400  003512  22DA               	addwfc	fsr2h,f,c
  3401  003514  2ADE               	incf	postinc2,f,c
  3402  003516  0E00               	movlw	0
  3403  003518  22DD               	addwfc	postdec2,f,c
  3404  00351A                     l2117:
  3405  00351A  0012               	return		;funcret
  3406  00351C                     __end_of_fputc:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _putch *****************
  3410 ;; Defined at:
  3411 ;;		line 230 in file "mcc_generated_files/uart1.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  txData          1    wreg     unsigned char 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;  txData          1   32[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;Total ram usage:        1 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; Hardware stack levels required when called: 9
  3432 ;; This function calls:
  3433 ;;		_UART1_Write
  3434 ;; This function is called by:
  3435 ;;		_fputc
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text13
  3440  00409A                     __ptext13:
  3441                           	callstack 0
  3442  00409A                     _putch:
  3443                           	callstack 15
  3444                           
  3445                           ;incstack = 0
  3446                           ;putch@txData stored from wreg
  3447  00409A  6E21               	movwf	putch@txData^0,c
  3448  00409C                     
  3449                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  3450  00409C  5021               	movf	putch@txData^0,w,c
  3451  00409E  EC4E  F01B         	call	_UART1_Write
  3452  0040A2  0012               	return		;funcret
  3453  0040A4                     __end_of_putch:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _UART1_Write *****************
  3457 ;; Defined at:
  3458 ;;		line 202 in file "mcc_generated_files/uart1.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  txData          1    wreg     unsigned char 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  txData          1   31[COMRAM] unsigned char 
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;Total ram usage:        1 bytes
  3477 ;; Hardware stack levels used: 1
  3478 ;; Hardware stack levels required when called: 8
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_putch
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text14
  3487  00369C                     __ptext14:
  3488                           	callstack 0
  3489  00369C                     _UART1_Write:
  3490                           	callstack 15
  3491                           
  3492                           ;incstack = 0
  3493                           ;UART1_Write@txData stored from wreg
  3494  00369C  6E20               	movwf	UART1_Write@txData^0,c
  3495  00369E                     l5645:
  3496                           
  3497                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  3498  00369E  5040               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  3499  0036A0  B4D8               	btfsc	status,2,c
  3500  0036A2  EF55  F01B         	goto	u4361
  3501  0036A6  EF57  F01B         	goto	u4360
  3502  0036AA                     u4361:
  3503  0036AA  EF4F  F01B         	goto	l5645
  3504  0036AE                     u4360:
  3505  0036AE                     
  3506                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  3507  0036AE  0139               	movlb	57	; () banked
  3508  0036B0  B993               	btfsc	147,4,b	;volatile
  3509  0036B2  EF5D  F01B         	goto	u4371
  3510  0036B6  EF5F  F01B         	goto	u4370
  3511  0036BA                     u4371:
  3512  0036BA  EF64  F01B         	goto	l309
  3513  0036BE                     u4370:
  3514  0036BE                     
  3515                           ; BSR set to: 57
  3516                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  3517  0036BE  0060  F083  FDEA   	movff	UART1_Write@txData,15850	;volatile
  3518                           
  3519                           ;mcc_generated_files/uart1.c: 211:     }
  3520  0036C4  EF7A  F01B         	goto	l5659
  3521  0036C8                     l309:
  3522                           
  3523                           ; BSR set to: 57
  3524                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  3525  0036C8  9993               	bcf	147,4,b	;volatile
  3526  0036CA                     
  3527                           ; BSR set to: 57
  3528                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  3529  0036CA  0EC4               	movlw	low _uart1TxBuffer
  3530  0036CC  2433               	addwf	_uart1TxHead^0,w,c	;volatile
  3531  0036CE  6ED9               	movwf	fsr2l,c
  3532  0036D0  6ADA               	clrf	fsr2h,c
  3533  0036D2  0E00               	movlw	high _uart1TxBuffer
  3534  0036D4  22DA               	addwfc	fsr2h,f,c
  3535  0036D6  0060  F083  FFDF   	movff	UART1_Write@txData,indf2
  3536  0036DC                     
  3537                           ; BSR set to: 57
  3538  0036DC  2A33               	incf	_uart1TxHead^0,f,c	;volatile
  3539  0036DE                     
  3540                           ; BSR set to: 57
  3541                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  3542  0036DE  0E07               	movlw	7
  3543  0036E0  6433               	cpfsgt	_uart1TxHead^0,c	;volatile
  3544  0036E2  EF75  F01B         	goto	u4381
  3545  0036E6  EF77  F01B         	goto	u4380
  3546  0036EA                     u4381:
  3547  0036EA  EF79  F01B         	goto	l5657
  3548  0036EE                     u4380:
  3549  0036EE                     
  3550                           ; BSR set to: 57
  3551                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  3552  0036EE  0E00               	movlw	0
  3553  0036F0  6E33               	movwf	_uart1TxHead^0,c	;volatile
  3554  0036F2                     l5657:
  3555                           
  3556                           ; BSR set to: 57
  3557                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  3558  0036F2  0640               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  3559  0036F4                     l5659:
  3560                           
  3561                           ; BSR set to: 57
  3562                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  3563  0036F4  8993               	bsf	147,4,b	;volatile
  3564  0036F6                     
  3565                           ; BSR set to: 57
  3566  0036F6  0012               	return		;funcret
  3567  0036F8                     __end_of_UART1_Write:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _abs *****************
  3571 ;; Defined at:
  3572 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  a               2   16[BANK0 ] int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  2   16[BANK0 ] int 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;Total ram usage:        4 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 8
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_dtoa
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text15
  3601  003B30                     __ptext15:
  3602                           	callstack 0
  3603  003B30                     _abs:
  3604                           	callstack 16
  3605  003B30  0100               	movlb	0	; () banked
  3606  003B32  BF71               	btfsc	(abs@a+1)& (0+255),7,b
  3607  003B34  EFA6  F01D         	goto	u4620
  3608  003B38  5171               	movf	(abs@a+1)& (0+255),w,b
  3609  003B3A  E106               	bnz	u4621
  3610  003B3C  0570               	decf	abs@a& (0+255),w,b
  3611  003B3E  B0D8               	btfsc	status,0,c
  3612  003B40  EFA4  F01D         	goto	u4621
  3613  003B44  EFA6  F01D         	goto	u4620
  3614  003B48                     u4621:
  3615  003B48  EFB4  F01D         	goto	l2102
  3616  003B4C                     u4620:
  3617  003B4C                     
  3618                           ; BSR set to: 0
  3619  003B4C  C070  F072         	movff	abs@a,??_abs
  3620  003B50  C071  F073         	movff	abs@a+1,??_abs+1
  3621  003B54  1F72               	comf	??_abs& (0+255),f,b
  3622  003B56  1F73               	comf	(??_abs+1)& (0+255),f,b
  3623  003B58  4B72               	infsnz	??_abs& (0+255),f,b
  3624  003B5A  2B73               	incf	(??_abs+1)& (0+255),f,b
  3625  003B5C  C072  F070         	movff	??_abs,?_abs
  3626  003B60  C073  F071         	movff	??_abs+1,?_abs+1
  3627  003B64  EFB8  F01D         	goto	l2105
  3628  003B68                     l2102:
  3629                           
  3630                           ; BSR set to: 0
  3631  003B68  C070  F070         	movff	abs@a,?_abs
  3632  003B6C  C071  F071         	movff	abs@a+1,?_abs+1
  3633  003B70                     l2105:
  3634                           
  3635                           ; BSR set to: 0
  3636  003B70  0012               	return		;funcret
  3637  003B72                     __end_of_abs:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function ___aomod *****************
  3641 ;; Defined at:
  3642 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  dividend        8    0[BANK0 ] long long 
  3645 ;;  divisor         8    8[BANK0 ] long long 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  sign            1   32[COMRAM] unsigned char 
  3648 ;;  counter         1   31[COMRAM] unsigned char 
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  8    0[BANK0 ] long long 
  3651 ;; Registers used:
  3652 ;;		wreg, status,2, status,0
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:       18 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; Hardware stack levels required when called: 8
  3665 ;; This function calls:
  3666 ;;		Nothing
  3667 ;; This function is called by:
  3668 ;;		_dtoa
  3669 ;; This function uses a non-reentrant model
  3670 ;;
  3671                           
  3672                           	psect	text16
  3673  00297C                     __ptext16:
  3674                           	callstack 0
  3675  00297C                     ___aomod:
  3676                           	callstack 16
  3677  00297C  0E00               	movlw	0
  3678  00297E  6E21               	movwf	___aomod@sign^0,c
  3679  002980  0100               	movlb	0	; () banked
  3680  002982  BF67               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  3681  002984  EFC8  F014         	goto	u4520
  3682  002988  EFC6  F014         	goto	u4521
  3683  00298C                     u4521:
  3684  00298C  EFDA  F014         	goto	l5747
  3685  002990                     u4520:
  3686  002990                     
  3687                           ; BSR set to: 0
  3688  002990  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3689  002992  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3690  002994  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3691  002996  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3692  002998  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3693  00299A  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3694  00299C  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3695  00299E  6D60               	negf	___aomod@dividend& (0+255),b
  3696  0029A0  0E00               	movlw	0
  3697  0029A2  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3698  0029A4  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3699  0029A6  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3700  0029A8  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3701  0029AA  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3702  0029AC  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3703  0029AE  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3704  0029B0                     
  3705                           ; BSR set to: 0
  3706  0029B0  0E01               	movlw	1
  3707  0029B2  6E21               	movwf	___aomod@sign^0,c
  3708  0029B4                     l5747:
  3709                           
  3710                           ; BSR set to: 0
  3711  0029B4  BF6F               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  3712  0029B6  EFE1  F014         	goto	u4530
  3713  0029BA  EFDF  F014         	goto	u4531
  3714  0029BE                     u4531:
  3715  0029BE  EFF1  F014         	goto	l5751
  3716  0029C2                     u4530:
  3717  0029C2                     
  3718                           ; BSR set to: 0
  3719  0029C2  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
  3720  0029C4  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
  3721  0029C6  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
  3722  0029C8  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
  3723  0029CA  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
  3724  0029CC  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
  3725  0029CE  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
  3726  0029D0  6D68               	negf	___aomod@divisor& (0+255),b
  3727  0029D2  0E00               	movlw	0
  3728  0029D4  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  3729  0029D6  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  3730  0029D8  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  3731  0029DA  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  3732  0029DC  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  3733  0029DE  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  3734  0029E0  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  3735  0029E2                     l5751:
  3736                           
  3737                           ; BSR set to: 0
  3738  0029E2  5168               	movf	___aomod@divisor& (0+255),w,b
  3739  0029E4  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  3740  0029E6  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  3741  0029E8  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  3742  0029EA  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  3743  0029EC  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  3744  0029EE  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  3745  0029F0  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  3746  0029F2  B4D8               	btfsc	status,2,c
  3747  0029F4  EFFE  F014         	goto	u4541
  3748  0029F8  EF00  F015         	goto	u4540
  3749  0029FC                     u4541:
  3750  0029FC  EF48  F015         	goto	l5767
  3751  002A00                     u4540:
  3752  002A00                     
  3753                           ; BSR set to: 0
  3754  002A00  0E01               	movlw	1
  3755  002A02  6E20               	movwf	___aomod@counter^0,c
  3756  002A04  EF0E  F015         	goto	l5757
  3757  002A08                     l5755:
  3758                           
  3759                           ; BSR set to: 0
  3760  002A08  90D8               	bcf	status,0,c
  3761  002A0A  3768               	rlcf	___aomod@divisor& (0+255),f,b
  3762  002A0C  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  3763  002A0E  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  3764  002A10  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  3765  002A12  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  3766  002A14  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  3767  002A16  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  3768  002A18  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  3769  002A1A  2A20               	incf	___aomod@counter^0,f,c
  3770  002A1C                     l5757:
  3771                           
  3772                           ; BSR set to: 0
  3773  002A1C  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
  3774  002A1E  EF13  F015         	goto	u4551
  3775  002A22  EF15  F015         	goto	u4550
  3776  002A26                     u4551:
  3777  002A26  EF04  F015         	goto	l5755
  3778  002A2A                     u4550:
  3779  002A2A                     l5759:
  3780                           
  3781                           ; BSR set to: 0
  3782  002A2A  5168               	movf	___aomod@divisor& (0+255),w,b
  3783  002A2C  5D60               	subwf	___aomod@dividend& (0+255),w,b
  3784  002A2E  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3785  002A30  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  3786  002A32  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3787  002A34  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  3788  002A36  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3789  002A38  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  3790  002A3A  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3791  002A3C  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  3792  002A3E  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3793  002A40  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  3794  002A42  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3795  002A44  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  3796  002A46  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3797  002A48  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  3798  002A4A  A0D8               	btfss	status,0,c
  3799  002A4C  EF2A  F015         	goto	u4561
  3800  002A50  EF2C  F015         	goto	u4560
  3801  002A54                     u4561:
  3802  002A54  EF3C  F015         	goto	l5763
  3803  002A58                     u4560:
  3804  002A58                     
  3805                           ; BSR set to: 0
  3806  002A58  5168               	movf	___aomod@divisor& (0+255),w,b
  3807  002A5A  5F60               	subwf	___aomod@dividend& (0+255),f,b
  3808  002A5C  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
  3809  002A5E  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  3810  002A60  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
  3811  002A62  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  3812  002A64  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
  3813  002A66  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  3814  002A68  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
  3815  002A6A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  3816  002A6C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
  3817  002A6E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  3818  002A70  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
  3819  002A72  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  3820  002A74  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
  3821  002A76  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  3822  002A78                     l5763:
  3823                           
  3824                           ; BSR set to: 0
  3825  002A78  90D8               	bcf	status,0,c
  3826  002A7A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  3827  002A7C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  3828  002A7E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  3829  002A80  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  3830  002A82  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  3831  002A84  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  3832  002A86  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  3833  002A88  3368               	rrcf	___aomod@divisor& (0+255),f,b
  3834  002A8A                     
  3835                           ; BSR set to: 0
  3836  002A8A  2E20               	decfsz	___aomod@counter^0,f,c
  3837  002A8C  EF15  F015         	goto	l5759
  3838  002A90                     l5767:
  3839                           
  3840                           ; BSR set to: 0
  3841  002A90  5021               	movf	___aomod@sign^0,w,c
  3842  002A92  B4D8               	btfsc	status,2,c
  3843  002A94  EF4E  F015         	goto	u4571
  3844  002A98  EF50  F015         	goto	u4570
  3845  002A9C                     u4571:
  3846  002A9C  EF60  F015         	goto	l5771
  3847  002AA0                     u4570:
  3848  002AA0                     
  3849                           ; BSR set to: 0
  3850  002AA0  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
  3851  002AA2  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
  3852  002AA4  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
  3853  002AA6  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
  3854  002AA8  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
  3855  002AAA  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
  3856  002AAC  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
  3857  002AAE  6D60               	negf	___aomod@dividend& (0+255),b
  3858  002AB0  0E00               	movlw	0
  3859  002AB2  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  3860  002AB4  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  3861  002AB6  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  3862  002AB8  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  3863  002ABA  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  3864  002ABC  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  3865  002ABE  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  3866  002AC0                     l5771:
  3867                           
  3868                           ; BSR set to: 0
  3869  002AC0  C060  F060         	movff	___aomod@dividend,?___aomod
  3870  002AC4  C061  F061         	movff	___aomod@dividend+1,?___aomod+1
  3871  002AC8  C062  F062         	movff	___aomod@dividend+2,?___aomod+2
  3872  002ACC  C063  F063         	movff	___aomod@dividend+3,?___aomod+3
  3873  002AD0  C064  F064         	movff	___aomod@dividend+4,?___aomod+4
  3874  002AD4  C065  F065         	movff	___aomod@dividend+5,?___aomod+5
  3875  002AD8  C066  F066         	movff	___aomod@dividend+6,?___aomod+6
  3876  002ADC  C067  F067         	movff	___aomod@dividend+7,?___aomod+7
  3877  002AE0                     
  3878                           ; BSR set to: 0
  3879  002AE0  0012               	return		;funcret
  3880  002AE2                     __end_of___aomod:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function ___aodiv *****************
  3884 ;; Defined at:
  3885 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  dividend        8    0[BANK0 ] long long 
  3888 ;;  divisor         8    8[BANK0 ] long long 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  quotient        8   18[BANK0 ] long long 
  3891 ;;  sign            1   17[BANK0 ] unsigned char 
  3892 ;;  counter         1   16[BANK0 ] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  8    0[BANK0 ] long long 
  3895 ;; Registers used:
  3896 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:       26 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 8
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_dtoa
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text17
  3917  0027F2                     __ptext17:
  3918                           	callstack 0
  3919  0027F2                     ___aodiv:
  3920                           	callstack 16
  3921  0027F2  0E00               	movlw	0
  3922  0027F4  0100               	movlb	0	; () banked
  3923  0027F6  6F71               	movwf	___aodiv@sign& (0+255),b
  3924  0027F8                     
  3925                           ; BSR set to: 0
  3926  0027F8  BF6F               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  3927  0027FA  EF03  F014         	goto	u4450
  3928  0027FE  EF01  F014         	goto	u4451
  3929  002802                     u4451:
  3930  002802  EF15  F014         	goto	l5703
  3931  002806                     u4450:
  3932  002806                     
  3933                           ; BSR set to: 0
  3934  002806  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
  3935  002808  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
  3936  00280A  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
  3937  00280C  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
  3938  00280E  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
  3939  002810  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
  3940  002812  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
  3941  002814  6D68               	negf	___aodiv@divisor& (0+255),b
  3942  002816  0E00               	movlw	0
  3943  002818  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  3944  00281A  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  3945  00281C  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  3946  00281E  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  3947  002820  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  3948  002822  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  3949  002824  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  3950  002826                     
  3951                           ; BSR set to: 0
  3952  002826  0E01               	movlw	1
  3953  002828  6F71               	movwf	___aodiv@sign& (0+255),b
  3954  00282A                     l5703:
  3955                           
  3956                           ; BSR set to: 0
  3957  00282A  BF67               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  3958  00282C  EF1C  F014         	goto	u4460
  3959  002830  EF1A  F014         	goto	u4461
  3960  002834                     u4461:
  3961  002834  EF2E  F014         	goto	l5709
  3962  002838                     u4460:
  3963  002838                     
  3964                           ; BSR set to: 0
  3965  002838  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
  3966  00283A  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
  3967  00283C  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
  3968  00283E  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
  3969  002840  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
  3970  002842  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
  3971  002844  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
  3972  002846  6D60               	negf	___aodiv@dividend& (0+255),b
  3973  002848  0E00               	movlw	0
  3974  00284A  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  3975  00284C  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  3976  00284E  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  3977  002850  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  3978  002852  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  3979  002854  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  3980  002856  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  3981  002858                     
  3982                           ; BSR set to: 0
  3983  002858  0E01               	movlw	1
  3984  00285A  1B71               	xorwf	___aodiv@sign& (0+255),f,b
  3985  00285C                     l5709:
  3986                           
  3987                           ; BSR set to: 0
  3988  00285C  EE20  F072         	lfsr	2,___aodiv@quotient
  3989  002860  0E07               	movlw	7
  3990  002862                     u4471:
  3991  002862  6ADE               	clrf	postinc2,c
  3992  002864  06E8               	decf	wreg,f,c
  3993  002866  E2FD               	bc	u4471
  3994  002868                     
  3995                           ; BSR set to: 0
  3996  002868  5168               	movf	___aodiv@divisor& (0+255),w,b
  3997  00286A  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  3998  00286C  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  3999  00286E  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4000  002870  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4001  002872  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4002  002874  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4003  002876  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4004  002878  B4D8               	btfsc	status,2,c
  4005  00287A  EF41  F014         	goto	u4481
  4006  00287E  EF43  F014         	goto	u4480
  4007  002882                     u4481:
  4008  002882  EF95  F014         	goto	l5731
  4009  002886                     u4480:
  4010  002886                     
  4011                           ; BSR set to: 0
  4012  002886  0E01               	movlw	1
  4013  002888  6F70               	movwf	___aodiv@counter& (0+255),b
  4014  00288A  EF51  F014         	goto	l5717
  4015  00288E                     l5715:
  4016                           
  4017                           ; BSR set to: 0
  4018  00288E  90D8               	bcf	status,0,c
  4019  002890  3768               	rlcf	___aodiv@divisor& (0+255),f,b
  4020  002892  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4021  002894  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4022  002896  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4023  002898  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4024  00289A  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4025  00289C  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4026  00289E  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4027  0028A0  2B70               	incf	___aodiv@counter& (0+255),f,b
  4028  0028A2                     l5717:
  4029                           
  4030                           ; BSR set to: 0
  4031  0028A2  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4032  0028A4  EF56  F014         	goto	u4491
  4033  0028A8  EF58  F014         	goto	u4490
  4034  0028AC                     u4491:
  4035  0028AC  EF47  F014         	goto	l5715
  4036  0028B0                     u4490:
  4037  0028B0                     l5719:
  4038                           
  4039                           ; BSR set to: 0
  4040  0028B0  90D8               	bcf	status,0,c
  4041  0028B2  3772               	rlcf	___aodiv@quotient& (0+255),f,b
  4042  0028B4  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4043  0028B6  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4044  0028B8  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4045  0028BA  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4046  0028BC  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4047  0028BE  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4048  0028C0  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4049  0028C2                     
  4050                           ; BSR set to: 0
  4051  0028C2  5168               	movf	___aodiv@divisor& (0+255),w,b
  4052  0028C4  5D60               	subwf	___aodiv@dividend& (0+255),w,b
  4053  0028C6  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4054  0028C8  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4055  0028CA  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4056  0028CC  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4057  0028CE  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4058  0028D0  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4059  0028D2  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4060  0028D4  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4061  0028D6  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4062  0028D8  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4063  0028DA  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4064  0028DC  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4065  0028DE  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4066  0028E0  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4067  0028E2  A0D8               	btfss	status,0,c
  4068  0028E4  EF76  F014         	goto	u4501
  4069  0028E8  EF78  F014         	goto	u4500
  4070  0028EC                     u4501:
  4071  0028EC  EF89  F014         	goto	l5727
  4072  0028F0                     u4500:
  4073  0028F0                     
  4074                           ; BSR set to: 0
  4075  0028F0  5168               	movf	___aodiv@divisor& (0+255),w,b
  4076  0028F2  5F60               	subwf	___aodiv@dividend& (0+255),f,b
  4077  0028F4  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4078  0028F6  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4079  0028F8  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4080  0028FA  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4081  0028FC  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4082  0028FE  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4083  002900  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4084  002902  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4085  002904  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4086  002906  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4087  002908  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4088  00290A  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4089  00290C  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4090  00290E  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4091  002910                     
  4092                           ; BSR set to: 0
  4093  002910  8172               	bsf	___aodiv@quotient& (0+255),0,b
  4094  002912                     l5727:
  4095                           
  4096                           ; BSR set to: 0
  4097  002912  90D8               	bcf	status,0,c
  4098  002914  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4099  002916  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4100  002918  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4101  00291A  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4102  00291C  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4103  00291E  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4104  002920  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4105  002922  3368               	rrcf	___aodiv@divisor& (0+255),f,b
  4106  002924                     
  4107                           ; BSR set to: 0
  4108  002924  2F70               	decfsz	___aodiv@counter& (0+255),f,b
  4109  002926  EF58  F014         	goto	l5719
  4110  00292A                     l5731:
  4111                           
  4112                           ; BSR set to: 0
  4113  00292A  5171               	movf	___aodiv@sign& (0+255),w,b
  4114  00292C  B4D8               	btfsc	status,2,c
  4115  00292E  EF9B  F014         	goto	u4511
  4116  002932  EF9D  F014         	goto	u4510
  4117  002936                     u4511:
  4118  002936  EFAD  F014         	goto	l5735
  4119  00293A                     u4510:
  4120  00293A                     
  4121                           ; BSR set to: 0
  4122  00293A  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4123  00293C  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4124  00293E  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4125  002940  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4126  002942  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4127  002944  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4128  002946  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4129  002948  6D72               	negf	___aodiv@quotient& (0+255),b
  4130  00294A  0E00               	movlw	0
  4131  00294C  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4132  00294E  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4133  002950  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4134  002952  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4135  002954  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4136  002956  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4137  002958  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4138  00295A                     l5735:
  4139                           
  4140                           ; BSR set to: 0
  4141  00295A  C072  F060         	movff	___aodiv@quotient,?___aodiv
  4142  00295E  C073  F061         	movff	___aodiv@quotient+1,?___aodiv+1
  4143  002962  C074  F062         	movff	___aodiv@quotient+2,?___aodiv+2
  4144  002966  C075  F063         	movff	___aodiv@quotient+3,?___aodiv+3
  4145  00296A  C076  F064         	movff	___aodiv@quotient+4,?___aodiv+4
  4146  00296E  C077  F065         	movff	___aodiv@quotient+5,?___aodiv+5
  4147  002972  C078  F066         	movff	___aodiv@quotient+6,?___aodiv+6
  4148  002976  C079  F067         	movff	___aodiv@quotient+7,?___aodiv+7
  4149  00297A                     
  4150                           ; BSR set to: 0
  4151  00297A  0012               	return		;funcret
  4152  00297C                     __end_of___aodiv:
  4153                           	callstack 0
  4154                           
  4155 ;; *************** function _ADCC_GetSingleConversion *****************
  4156 ;; Defined at:
  4157 ;;		line 137 in file "mcc_generated_files/adcc.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  channel         1    wreg     enum E16067
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  channel         1   33[COMRAM] enum E16067
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  2   31[COMRAM] unsigned short 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;Total ram usage:        5 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 8
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_getBatteryVoltage
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text18
  4186  003BAE                     __ptext18:
  4187                           	callstack 0
  4188  003BAE                     _ADCC_GetSingleConversion:
  4189                           	callstack 20
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;incstack = 0
  4193                           ;ADCC_GetSingleConversion@channel stored from wreg
  4194  003BAE  6E22               	movwf	ADCC_GetSingleConversion@channel^0,c
  4195  003BB0                     
  4196                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  4197  003BB0  0060  F08B  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  4198  003BB6                     
  4199                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  4200  003BB6  013E               	movlb	62	; () banked
  4201  003BB8  8FF8               	bsf	248,7,b	;volatile
  4202  003BBA                     
  4203                           ; BSR set to: 62
  4204                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  4205  003BBA  9DF8               	bcf	248,6,b	;volatile
  4206  003BBC                     
  4207                           ; BSR set to: 62
  4208                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  4209  003BBC  81F8               	bsf	248,0,b	;volatile
  4210  003BBE                     l1054:
  4211                           
  4212                           ; BSR set to: 62
  4213                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  4214  003BBE  B1F8               	btfsc	248,0,b	;volatile
  4215  003BC0  EFE4  F01D         	goto	u4991
  4216  003BC4  EFE6  F01D         	goto	u4990
  4217  003BC8                     u4991:
  4218  003BC8  EFDF  F01D         	goto	l1054
  4219  003BCC                     u4990:
  4220  003BCC                     
  4221                           ; BSR set to: 62
  4222                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4223  003BCC  51F0               	movf	240,w,b	;volatile
  4224  003BCE  0100               	movlb	0	; () banked
  4225  003BD0  6F61               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  4226  003BD2  6B60               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  4227  003BD4  013E               	movlb	62	; () banked
  4228  003BD6  51EF               	movf	239,w,b	;volatile
  4229  003BD8  0100               	movlb	0	; () banked
  4230  003BDA  2560               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  4231  003BDC  6E20               	movwf	?_ADCC_GetSingleConversion^0,c
  4232  003BDE  013E               	movlb	62	; () banked
  4233  003BE0  0E00               	movlw	0
  4234  003BE2  0100               	movlb	0	; () banked
  4235  003BE4  2161               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  4236  003BE6  6E21               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  4237  003BE8                     
  4238                           ; BSR set to: 0
  4239  003BE8  0012               	return		;funcret
  4240  003BEA                     __end_of_ADCC_GetSingleConversion:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _calcSteering *****************
  4244 ;; Defined at:
  4245 ;;		line 167 in file "main.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;		None
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  delta           2   19[BANK0 ] short 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, status,2, status,0, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;Total ram usage:        4 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 10
  4266 ;; This function calls:
  4267 ;;		___awdiv
  4268 ;;		_setSteering
  4269 ;; This function is called by:
  4270 ;;		_loop
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text19
  4275  002660                     __ptext19:
  4276                           	callstack 0
  4277  002660                     _calcSteering:
  4278                           	callstack 19
  4279  002660                     
  4280                           ;main.c: 168:     int16_t delta = (int16_t)(distLeft - distRight ) - (int16_t)((0) * 1.4
      +                          142135);
  4281  002660  0100               	movlb	0	; () banked
  4282  002662  51E6               	movf	_distRight& (0+255),w,b	;volatile
  4283  002664  5DE8               	subwf	_distLeft& (0+255),w,b	;volatile
  4284  002666  6F73               	movwf	calcSteering@delta& (0+255),b
  4285  002668  51E7               	movf	(_distRight+1)& (0+255),w,b	;volatile
  4286  00266A  59E9               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  4287  00266C  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4288  00266E                     
  4289                           ; BSR set to: 0
  4290                           ;main.c: 169:     delta /= (2);
  4291  00266E  C073  F060         	movff	calcSteering@delta,___awdiv@dividend
  4292  002672  C074  F061         	movff	calcSteering@delta+1,___awdiv@dividend+1
  4293  002676  0E00               	movlw	0
  4294  002678  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4295  00267A  0E02               	movlw	2
  4296  00267C  6F62               	movwf	___awdiv@divisor& (0+255),b
  4297  00267E  ECE0  F018         	call	___awdiv	;wreg free
  4298  002682  C060  F073         	movff	?___awdiv,calcSteering@delta
  4299  002686  C061  F074         	movff	?___awdiv+1,calcSteering@delta+1
  4300                           
  4301                           ;main.c: 172:     switch (driveMode){
  4302  00268A  EF6F  F013         	goto	l6373
  4303  00268E                     l1272:
  4304  00268E                     l6363:
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;main.c: 177:             if(delta > (30)){
  4308  00268E  BF74               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  4309  002690  EF53  F013         	goto	u5501
  4310  002694  5174               	movf	(calcSteering@delta+1)& (0+255),w,b
  4311  002696  E109               	bnz	u5500
  4312  002698  0E1F               	movlw	31
  4313  00269A  5D73               	subwf	calcSteering@delta& (0+255),w,b
  4314  00269C  A0D8               	btfss	status,0,c
  4315  00269E  EF53  F013         	goto	u5501
  4316  0026A2  EF55  F013         	goto	u5500
  4317  0026A6                     u5501:
  4318  0026A6  EF5B  F013         	goto	l6367
  4319  0026AA                     u5500:
  4320  0026AA                     
  4321                           ; BSR set to: 0
  4322                           ;main.c: 178:                 delta = (30);
  4323  0026AA  0E00               	movlw	0
  4324  0026AC  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4325  0026AE  0E1E               	movlw	30
  4326  0026B0  6F73               	movwf	calcSteering@delta& (0+255),b
  4327                           
  4328                           ;main.c: 179:             }else if(delta < -(30)){
  4329  0026B2  EFD3  F013         	goto	l6397
  4330  0026B6                     l6367:
  4331                           
  4332                           ; BSR set to: 0
  4333  0026B6  AF74               	btfss	(calcSteering@delta+1)& (0+255),7,b
  4334  0026B8  EF67  F013         	goto	u5511
  4335  0026BC  0EE2               	movlw	226
  4336  0026BE  5D73               	subwf	calcSteering@delta& (0+255),w,b
  4337  0026C0  0EFF               	movlw	255
  4338  0026C2  5974               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  4339  0026C4  B0D8               	btfsc	status,0,c
  4340  0026C6  EF67  F013         	goto	u5511
  4341  0026CA  EF69  F013         	goto	u5510
  4342  0026CE                     u5511:
  4343  0026CE  EF8D  F013         	goto	l1277
  4344  0026D2                     u5510:
  4345  0026D2                     
  4346                           ; BSR set to: 0
  4347                           ;main.c: 180:                 delta = -(30);
  4348  0026D2  0EFF               	movlw	255
  4349  0026D4  6F74               	movwf	(calcSteering@delta+1)& (0+255),b
  4350  0026D6  0EE2               	movlw	226
  4351  0026D8  6F73               	movwf	calcSteering@delta& (0+255),b
  4352  0026DA  EFD3  F013         	goto	l6397
  4353  0026DE                     l6373:
  4354  0026DE  0100               	movlb	0	; () banked
  4355  0026E0  51ED               	movf	_driveMode& (0+255),w,b
  4356  0026E2  6F71               	movwf	??_calcSteering& (0+255),b
  4357  0026E4  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4358                           
  4359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4360                           ; Switch size 1, requested type "simple"
  4361                           ; Number of cases is 1, Range of values is 0 to 0
  4362                           ; switch strategies available:
  4363                           ; Name         Instructions Cycles
  4364                           ; simple_byte            4     3 (average)
  4365                           ;	Chosen strategy is simple_byte
  4366  0026E6  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4367  0026E8  0A00               	xorlw	0	; case 0
  4368  0026EA  B4D8               	btfsc	status,2,c
  4369  0026EC  EF7A  F013         	goto	l6701
  4370  0026F0  EFD3  F013         	goto	l6397
  4371  0026F4                     l6701:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ; Switch size 1, requested type "simple"
  4375                           ; Number of cases is 4, Range of values is 0 to 5
  4376                           ; switch strategies available:
  4377                           ; Name         Instructions Cycles
  4378                           ; simple_byte           13     7 (average)
  4379                           ;	Chosen strategy is simple_byte
  4380  0026F4  5171               	movf	??_calcSteering& (0+255),w,b
  4381  0026F6  0A00               	xorlw	0	; case 0
  4382  0026F8  B4D8               	btfsc	status,2,c
  4383  0026FA  EF47  F013         	goto	l6363
  4384  0026FE  0A01               	xorlw	1	; case 1
  4385  002700  B4D8               	btfsc	status,2,c
  4386  002702  EF47  F013         	goto	l1272
  4387  002706  0A05               	xorlw	5	; case 4
  4388  002708  B4D8               	btfsc	status,2,c
  4389  00270A  EF47  F013         	goto	l6363
  4390  00270E  0A01               	xorlw	1	; case 5
  4391  002710  B4D8               	btfsc	status,2,c
  4392  002712  EF47  F013         	goto	l6363
  4393  002716  EFD3  F013         	goto	l6397
  4394  00271A                     l1277:
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;main.c: 185:     switch (driveMode){
  4398  00271A  EFD3  F013         	goto	l6397
  4399  00271E                     l6375:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;main.c: 187:             setSteering(delta, Ratio);
  4403  00271E  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4404  002722  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4405  002726  0E02               	movlw	2
  4406  002728  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4407  00272A  EC5F  F012         	call	_setSteering	;wreg free
  4408                           
  4409                           ;main.c: 188:             break;
  4410  00272E  EFF8  F013         	goto	l1290
  4411  002732                     l6377:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;main.c: 190:             setSteering(delta, Front);
  4415  002732  C073  F068         	movff	calcSteering@delta,setSteering@steering
  4416  002736  C074  F069         	movff	calcSteering@delta+1,setSteering@steering+1
  4417  00273A  0E03               	movlw	3
  4418  00273C  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4419  00273E  EC5F  F012         	call	_setSteering	;wreg free
  4420                           
  4421                           ;main.c: 191:             break;
  4422  002742  EFF8  F013         	goto	l1290
  4423  002746                     l6379:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;main.c: 193:             setSteering((40), Inverted);
  4427  002746  0E00               	movlw	0
  4428  002748  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4429  00274A  0E28               	movlw	40
  4430  00274C  6F68               	movwf	setSteering@steering& (0+255),b
  4431  00274E  0E00               	movlw	0
  4432  002750  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4433  002752  EC5F  F012         	call	_setSteering	;wreg free
  4434                           
  4435                           ;main.c: 194:             break;
  4436  002756  EFF8  F013         	goto	l1290
  4437  00275A                     l6383:
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;main.c: 199:             if(curveMode == InCurve){
  4441  00275A  0E02               	movlw	2
  4442  00275C  19EC               	xorwf	_curveMode& (0+255),w,b
  4443  00275E  A4D8               	btfss	status,2,c
  4444  002760  EFB4  F013         	goto	u5521
  4445  002764  EFB6  F013         	goto	u5520
  4446  002768                     u5521:
  4447  002768  EF99  F013         	goto	l6377
  4448  00276C                     u5520:
  4449  00276C                     
  4450                           ; BSR set to: 0
  4451                           ;main.c: 200:                 setSteering((65), Ratio);
  4452  00276C  0E00               	movlw	0
  4453  00276E  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4454  002770  0E41               	movlw	65
  4455  002772  6F68               	movwf	setSteering@steering& (0+255),b
  4456  002774  0E02               	movlw	2
  4457  002776  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4458  002778  EC5F  F012         	call	_setSteering	;wreg free
  4459                           
  4460                           ;main.c: 201:             } else {
  4461  00277C  EFF8  F013         	goto	l1290
  4462  002780                     l6389:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;main.c: 206:             if(curveMode == InCurve){
  4466  002780  0E02               	movlw	2
  4467  002782  19EC               	xorwf	_curveMode& (0+255),w,b
  4468  002784  A4D8               	btfss	status,2,c
  4469  002786  EFC7  F013         	goto	u5531
  4470  00278A  EFC9  F013         	goto	u5530
  4471  00278E                     u5531:
  4472  00278E  EF99  F013         	goto	l6377
  4473  002792                     u5530:
  4474  002792                     
  4475                           ; BSR set to: 0
  4476                           ;main.c: 207:                 setSteering(-(65), Ratio);
  4477  002792  0EFF               	movlw	255
  4478  002794  6F69               	movwf	(setSteering@steering+1)& (0+255),b
  4479  002796  0EBF               	movlw	191
  4480  002798  6F68               	movwf	setSteering@steering& (0+255),b
  4481  00279A  0E02               	movlw	2
  4482  00279C  6F6A               	movwf	setSteering@steeringMode& (0+255),b
  4483  00279E  EC5F  F012         	call	_setSteering	;wreg free
  4484                           
  4485                           ;main.c: 208:             } else {
  4486  0027A2  EFF8  F013         	goto	l1290
  4487  0027A6                     l6397:
  4488                           
  4489                           ; BSR set to: 0
  4490  0027A6  51ED               	movf	_driveMode& (0+255),w,b
  4491  0027A8  6F71               	movwf	??_calcSteering& (0+255),b
  4492  0027AA  6B72               	clrf	(??_calcSteering+1)& (0+255),b
  4493                           
  4494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4495                           ; Switch size 1, requested type "simple"
  4496                           ; Number of cases is 1, Range of values is 0 to 0
  4497                           ; switch strategies available:
  4498                           ; Name         Instructions Cycles
  4499                           ; simple_byte            4     3 (average)
  4500                           ;	Chosen strategy is simple_byte
  4501  0027AC  5172               	movf	(??_calcSteering+1)& (0+255),w,b
  4502  0027AE  0A00               	xorlw	0	; case 0
  4503  0027B0  B4D8               	btfsc	status,2,c
  4504  0027B2  EFDD  F013         	goto	l6703
  4505  0027B6  EFF8  F013         	goto	l1290
  4506  0027BA                     l6703:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ; Switch size 1, requested type "simple"
  4510                           ; Number of cases is 6, Range of values is 0 to 5
  4511                           ; switch strategies available:
  4512                           ; Name         Instructions Cycles
  4513                           ; simple_byte           19    10 (average)
  4514                           ;	Chosen strategy is simple_byte
  4515  0027BA  5171               	movf	??_calcSteering& (0+255),w,b
  4516  0027BC  0A00               	xorlw	0	; case 0
  4517  0027BE  B4D8               	btfsc	status,2,c
  4518  0027C0  EF99  F013         	goto	l6377
  4519  0027C4  0A01               	xorlw	1	; case 1
  4520  0027C6  B4D8               	btfsc	status,2,c
  4521  0027C8  EF8F  F013         	goto	l6375
  4522  0027CC  0A03               	xorlw	3	; case 2
  4523  0027CE  B4D8               	btfsc	status,2,c
  4524  0027D0  EFA3  F013         	goto	l6379
  4525  0027D4  0A01               	xorlw	1	; case 3
  4526  0027D6  B4D8               	btfsc	status,2,c
  4527  0027D8  EFA3  F013         	goto	l6379
  4528  0027DC  0A07               	xorlw	7	; case 4
  4529  0027DE  B4D8               	btfsc	status,2,c
  4530  0027E0  EFAD  F013         	goto	l6383
  4531  0027E4  0A01               	xorlw	1	; case 5
  4532  0027E6  B4D8               	btfsc	status,2,c
  4533  0027E8  EFC0  F013         	goto	l6389
  4534  0027EC  EFF8  F013         	goto	l1290
  4535  0027F0                     l1290:
  4536  0027F0  0012               	return		;funcret
  4537  0027F2                     __end_of_calcSteering:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _setSteering *****************
  4541 ;; Defined at:
  4542 ;;		line 218 in file "main.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  steering        2    8[BANK0 ] short 
  4545 ;;  steeringMode    1   10[BANK0 ] enum E17299
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  steeringB       2   15[BANK0 ] short 
  4548 ;;  steeringF       2   13[BANK0 ] short 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4558 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;Total ram usage:        9 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 9
  4565 ;; This function calls:
  4566 ;;		_PWM5_LoadDutyValue
  4567 ;;		_PWM6_LoadDutyValue
  4568 ;;		___awdiv
  4569 ;; This function is called by:
  4570 ;;		_calcSteering
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text20
  4575  0024BE                     __ptext20:
  4576                           	callstack 0
  4577  0024BE                     _setSteering:
  4578                           	callstack 19
  4579  0024BE                     
  4580                           ;main.c: 219:     int16_t steeringF = 0, steeringB = 0;
  4581  0024BE  0E00               	movlw	0
  4582  0024C0  0100               	movlb	0	; () banked
  4583  0024C2  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4584  0024C4  0E00               	movlw	0
  4585  0024C6  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4586  0024C8  0E00               	movlw	0
  4587  0024CA  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4588  0024CC  0E00               	movlw	0
  4589  0024CE  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4590                           
  4591                           ;main.c: 220:     switch(steeringMode){
  4592  0024D0  EFB0  F012         	goto	l6049
  4593  0024D4                     l1294:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;main.c: 222:             steeringF = (+steering);
  4597  0024D4  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4598  0024D8  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4599                           
  4600                           ;main.c: 223:             steeringB = -steering;
  4601  0024DC  C068  F06B         	movff	setSteering@steering,??_setSteering
  4602  0024E0  C069  F06C         	movff	setSteering@steering+1,??_setSteering+1
  4603  0024E4  1F6B               	comf	??_setSteering& (0+255),f,b
  4604  0024E6  1F6C               	comf	(??_setSteering+1)& (0+255),f,b
  4605  0024E8  4B6B               	infsnz	??_setSteering& (0+255),f,b
  4606  0024EA  2B6C               	incf	(??_setSteering+1)& (0+255),f,b
  4607  0024EC  C06B  F06F         	movff	??_setSteering,setSteering@steeringB
  4608  0024F0  C06C  F070         	movff	??_setSteering+1,setSteering@steeringB+1
  4609                           
  4610                           ;main.c: 224:             break;
  4611  0024F4  EFD1  F012         	goto	l6051
  4612  0024F8                     l1296:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;main.c: 226:             steeringF = (+steering);
  4616  0024F8  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4617  0024FC  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4618                           
  4619                           ;main.c: 227:             steeringB = (+steering);
  4620  002500  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4621  002504  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4622                           
  4623                           ;main.c: 228:             break;
  4624  002508  EFD1  F012         	goto	l6051
  4625  00250C                     l1297:
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;main.c: 230:             steeringF = (+steering);
  4629  00250C  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4630  002510  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4631  002514                     
  4632                           ; BSR set to: 0
  4633                           ;main.c: 231:             steeringB = (-steering / (3));
  4634  002514  C068  F060         	movff	setSteering@steering,___awdiv@dividend
  4635  002518  C069  F061         	movff	setSteering@steering+1,___awdiv@dividend+1
  4636  00251C  0EFF               	movlw	255
  4637  00251E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  4638  002520  0EFD               	movlw	253
  4639  002522  6F62               	movwf	___awdiv@divisor& (0+255),b
  4640  002524  ECE0  F018         	call	___awdiv	;wreg free
  4641  002528  C060  F06F         	movff	?___awdiv,setSteering@steeringB
  4642  00252C  C061  F070         	movff	?___awdiv+1,setSteering@steeringB+1
  4643                           
  4644                           ;main.c: 232:             break;
  4645  002530  EFD1  F012         	goto	l6051
  4646  002534                     l1298:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;main.c: 234:             steeringF = (+steering);
  4650  002534  C068  F06D         	movff	setSteering@steering,setSteering@steeringF
  4651  002538  C069  F06E         	movff	setSteering@steering+1,setSteering@steeringF+1
  4652                           
  4653                           ;main.c: 236:             break;
  4654  00253C  EFD1  F012         	goto	l6051
  4655  002540                     l1299:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;main.c: 239:             steeringB = (+steering);
  4659  002540  C068  F06F         	movff	setSteering@steering,setSteering@steeringB
  4660  002544  C069  F070         	movff	setSteering@steering+1,setSteering@steeringB+1
  4661                           
  4662                           ;main.c: 240:             break;
  4663  002548  EFD1  F012         	goto	l6051
  4664  00254C                     l6045:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;main.c: 242:             steeringF = 0;
  4668  00254C  0E00               	movlw	0
  4669  00254E  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4670  002550  0E00               	movlw	0
  4671  002552  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4672                           
  4673                           ;main.c: 243:             steeringB = 0;
  4674  002554  0E00               	movlw	0
  4675  002556  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4676  002558  0E00               	movlw	0
  4677  00255A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4678                           
  4679                           ;main.c: 244:             break;
  4680  00255C  EFD1  F012         	goto	l6051
  4681  002560                     l6049:
  4682                           
  4683                           ; BSR set to: 0
  4684  002560  516A               	movf	setSteering@steeringMode& (0+255),w,b
  4685  002562  6F6B               	movwf	??_setSteering& (0+255),b
  4686  002564  6B6C               	clrf	(??_setSteering+1)& (0+255),b
  4687                           
  4688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4689                           ; Switch size 1, requested type "simple"
  4690                           ; Number of cases is 1, Range of values is 0 to 0
  4691                           ; switch strategies available:
  4692                           ; Name         Instructions Cycles
  4693                           ; simple_byte            4     3 (average)
  4694                           ;	Chosen strategy is simple_byte
  4695  002566  516C               	movf	(??_setSteering+1)& (0+255),w,b
  4696  002568  0A00               	xorlw	0	; case 0
  4697  00256A  B4D8               	btfsc	status,2,c
  4698  00256C  EFBA  F012         	goto	l6705
  4699  002570  EFA6  F012         	goto	l6045
  4700  002574                     l6705:
  4701                           
  4702                           ; BSR set to: 0
  4703                           ; Switch size 1, requested type "simple"
  4704                           ; Number of cases is 5, Range of values is 0 to 4
  4705                           ; switch strategies available:
  4706                           ; Name         Instructions Cycles
  4707                           ; simple_byte           16     9 (average)
  4708                           ;	Chosen strategy is simple_byte
  4709  002574  516B               	movf	??_setSteering& (0+255),w,b
  4710  002576  0A00               	xorlw	0	; case 0
  4711  002578  B4D8               	btfsc	status,2,c
  4712  00257A  EF6A  F012         	goto	l1294
  4713  00257E  0A01               	xorlw	1	; case 1
  4714  002580  B4D8               	btfsc	status,2,c
  4715  002582  EF7C  F012         	goto	l1296
  4716  002586  0A03               	xorlw	3	; case 2
  4717  002588  B4D8               	btfsc	status,2,c
  4718  00258A  EF86  F012         	goto	l1297
  4719  00258E  0A01               	xorlw	1	; case 3
  4720  002590  B4D8               	btfsc	status,2,c
  4721  002592  EF9A  F012         	goto	l1298
  4722  002596  0A07               	xorlw	7	; case 4
  4723  002598  B4D8               	btfsc	status,2,c
  4724  00259A  EFA0  F012         	goto	l1299
  4725  00259E  EFA6  F012         	goto	l6045
  4726  0025A2                     l6051:
  4727                           
  4728                           ;main.c: 247:     if(steeringF > ((65))){
  4729  0025A2  0100               	movlb	0	; () banked
  4730  0025A4  BF6E               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  4731  0025A6  EFDE  F012         	goto	u5021
  4732  0025AA  516E               	movf	(setSteering@steeringF+1)& (0+255),w,b
  4733  0025AC  E109               	bnz	u5020
  4734  0025AE  0E42               	movlw	66
  4735  0025B0  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4736  0025B2  A0D8               	btfss	status,0,c
  4737  0025B4  EFDE  F012         	goto	u5021
  4738  0025B8  EFE0  F012         	goto	u5020
  4739  0025BC                     u5021:
  4740  0025BC  EFE6  F012         	goto	l6055
  4741  0025C0                     u5020:
  4742  0025C0                     
  4743                           ; BSR set to: 0
  4744                           ;main.c: 248:         steeringF = ((65));
  4745  0025C0  0E00               	movlw	0
  4746  0025C2  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4747  0025C4  0E41               	movlw	65
  4748  0025C6  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4749                           
  4750                           ;main.c: 249:     } else if(steeringF < (-(65))){
  4751  0025C8  EFF8  F012         	goto	l6059
  4752  0025CC                     l6055:
  4753                           
  4754                           ; BSR set to: 0
  4755  0025CC  AF6E               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  4756  0025CE  EFF2  F012         	goto	u5031
  4757  0025D2  0EBF               	movlw	191
  4758  0025D4  5D6D               	subwf	setSteering@steeringF& (0+255),w,b
  4759  0025D6  0EFF               	movlw	255
  4760  0025D8  596E               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  4761  0025DA  B0D8               	btfsc	status,0,c
  4762  0025DC  EFF2  F012         	goto	u5031
  4763  0025E0  EFF4  F012         	goto	u5030
  4764  0025E4                     u5031:
  4765  0025E4  EFF8  F012         	goto	l6059
  4766  0025E8                     u5030:
  4767  0025E8                     
  4768                           ; BSR set to: 0
  4769                           ;main.c: 250:         steeringF = (-(65));
  4770  0025E8  0EFF               	movlw	255
  4771  0025EA  6F6E               	movwf	(setSteering@steeringF+1)& (0+255),b
  4772  0025EC  0EBF               	movlw	191
  4773  0025EE  6F6D               	movwf	setSteering@steeringF& (0+255),b
  4774  0025F0                     l6059:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;main.c: 253:     if(steeringB > ((40))){
  4778  0025F0  BF70               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  4779  0025F2  EF04  F013         	goto	u5041
  4780  0025F6  5170               	movf	(setSteering@steeringB+1)& (0+255),w,b
  4781  0025F8  E109               	bnz	u5040
  4782  0025FA  0E29               	movlw	41
  4783  0025FC  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4784  0025FE  A0D8               	btfss	status,0,c
  4785  002600  EF04  F013         	goto	u5041
  4786  002604  EF06  F013         	goto	u5040
  4787  002608                     u5041:
  4788  002608  EF0C  F013         	goto	l6063
  4789  00260C                     u5040:
  4790  00260C                     
  4791                           ; BSR set to: 0
  4792                           ;main.c: 254:         steeringB = ((40));
  4793  00260C  0E00               	movlw	0
  4794  00260E  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4795  002610  0E28               	movlw	40
  4796  002612  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4797                           
  4798                           ;main.c: 255:     } else if(steeringB < (-(40))){
  4799  002614  EF1E  F013         	goto	l6067
  4800  002618                     l6063:
  4801                           
  4802                           ; BSR set to: 0
  4803  002618  AF70               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  4804  00261A  EF18  F013         	goto	u5051
  4805  00261E  0ED8               	movlw	216
  4806  002620  5D6F               	subwf	setSteering@steeringB& (0+255),w,b
  4807  002622  0EFF               	movlw	255
  4808  002624  5970               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  4809  002626  B0D8               	btfsc	status,0,c
  4810  002628  EF18  F013         	goto	u5051
  4811  00262C  EF1A  F013         	goto	u5050
  4812  002630                     u5051:
  4813  002630  EF1E  F013         	goto	l6067
  4814  002634                     u5050:
  4815  002634                     
  4816                           ; BSR set to: 0
  4817                           ;main.c: 256:         steeringB = (-(40));
  4818  002634  0EFF               	movlw	255
  4819  002636  6F70               	movwf	(setSteering@steeringB+1)& (0+255),b
  4820  002638  0ED8               	movlw	216
  4821  00263A  6F6F               	movwf	setSteering@steeringB& (0+255),b
  4822  00263C                     l6067:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;main.c: 260:     PWM6_LoadDutyValue((uint16_t)((352) + steeringF));
  4826  00263C  0E60               	movlw	96
  4827  00263E  256D               	addwf	setSteering@steeringF& (0+255),w,b
  4828  002640  6E20               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  4829  002642  0E01               	movlw	1
  4830  002644  216E               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  4831  002646  6E21               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  4832  002648  EC2C  F01E         	call	_PWM6_LoadDutyValue	;wreg free
  4833  00264C                     
  4834                           ;main.c: 261:     PWM5_LoadDutyValue((uint16_t)((357) + steeringB));
  4835  00264C  0E65               	movlw	101
  4836  00264E  0100               	movlb	0	; () banked
  4837  002650  256F               	addwf	setSteering@steeringB& (0+255),w,b
  4838  002652  6E20               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  4839  002654  0E01               	movlw	1
  4840  002656  2170               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  4841  002658  6E21               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  4842  00265A  EC47  F01E         	call	_PWM5_LoadDutyValue	;wreg free
  4843  00265E  0012               	return		;funcret
  4844  002660                     __end_of_setSteering:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _PWM6_LoadDutyValue *****************
  4848 ;; Defined at:
  4849 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;Total ram usage:        4 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 8
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_setSteering
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text21
  4878  003C58                     __ptext21:
  4879                           	callstack 0
  4880  003C58                     _PWM6_LoadDutyValue:
  4881                           	callstack 19
  4882  003C58                     
  4883                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4884  003C58  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4885  003C5C  C021  F061         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  4886  003C60  0100               	movlb	0	; () banked
  4887  003C62  90D8               	bcf	status,0,c
  4888  003C64  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4889  003C66  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4890  003C68  90D8               	bcf	status,0,c
  4891  003C6A  3361               	rrcf	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4892  003C6C  3360               	rrcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4893  003C6E  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4894  003C70  6E69               	movwf	105,c	;volatile
  4895                           
  4896                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4897  003C72  C020  F060         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4898  003C76  0E03               	movlw	3
  4899  003C78  1760               	andwf	??_PWM6_LoadDutyValue& (0+255),f,b
  4900  003C7A  0E06               	movlw	6
  4901  003C7C  6F61               	movwf	(??_PWM6_LoadDutyValue+1)& (0+255),b
  4902  003C7E                     u4855:
  4903  003C7E  90D8               	bcf	status,0,c
  4904  003C80  3760               	rlcf	??_PWM6_LoadDutyValue& (0+255),f,b
  4905  003C82  2F61               	decfsz	(??_PWM6_LoadDutyValue+1)& (0+255),f,b
  4906  003C84  EF3F  F01E         	goto	u4855
  4907  003C88  5160               	movf	??_PWM6_LoadDutyValue& (0+255),w,b
  4908  003C8A  6E68               	movwf	104,c	;volatile
  4909  003C8C                     
  4910                           ; BSR set to: 0
  4911  003C8C  0012               	return		;funcret
  4912  003C8E                     __end_of_PWM6_LoadDutyValue:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _PWM5_LoadDutyValue *****************
  4916 ;; Defined at:
  4917 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  dutyValue       2   31[COMRAM] unsigned short 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;Total ram usage:        4 bytes
  4936 ;; Hardware stack levels used: 1
  4937 ;; Hardware stack levels required when called: 8
  4938 ;; This function calls:
  4939 ;;		Nothing
  4940 ;; This function is called by:
  4941 ;;		_setSteering
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text22
  4946  003C8E                     __ptext22:
  4947                           	callstack 0
  4948  003C8E                     _PWM5_LoadDutyValue:
  4949                           	callstack 19
  4950  003C8E                     
  4951                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4952  003C8E  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4953  003C92  C021  F061         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4954  003C96  0100               	movlb	0	; () banked
  4955  003C98  90D8               	bcf	status,0,c
  4956  003C9A  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4957  003C9C  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4958  003C9E  90D8               	bcf	status,0,c
  4959  003CA0  3361               	rrcf	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4960  003CA2  3360               	rrcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4961  003CA4  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  4962  003CA6  6E6D               	movwf	109,c	;volatile
  4963                           
  4964                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4965  003CA8  C020  F060         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4966  003CAC  0E03               	movlw	3
  4967  003CAE  1760               	andwf	??_PWM5_LoadDutyValue& (0+255),f,b
  4968  003CB0  0E06               	movlw	6
  4969  003CB2  6F61               	movwf	(??_PWM5_LoadDutyValue+1)& (0+255),b
  4970  003CB4                     u4845:
  4971  003CB4  90D8               	bcf	status,0,c
  4972  003CB6  3760               	rlcf	??_PWM5_LoadDutyValue& (0+255),f,b
  4973  003CB8  2F61               	decfsz	(??_PWM5_LoadDutyValue+1)& (0+255),f,b
  4974  003CBA  EF5A  F01E         	goto	u4845
  4975  003CBE  5160               	movf	??_PWM5_LoadDutyValue& (0+255),w,b
  4976  003CC0  6E6C               	movwf	108,c	;volatile
  4977  003CC2                     
  4978                           ; BSR set to: 0
  4979  003CC2  0012               	return		;funcret
  4980  003CC4                     __end_of_PWM5_LoadDutyValue:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function _calcSpeed *****************
  4984 ;; Defined at:
  4985 ;;		line 264 in file "main.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  speed           2   75[BANK0 ] short 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5000 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;Total ram usage:        6 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 9
  5006 ;; This function calls:
  5007 ;;		___fladd
  5008 ;;		___flmul
  5009 ;;		___fltol
  5010 ;;		___xxtofl
  5011 ;; This function is called by:
  5012 ;;		_loop
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text23
  5017  001EDA                     __ptext23:
  5018                           	callstack 0
  5019  001EDA                     _calcSpeed:
  5020                           	callstack 20
  5021  001EDA                     
  5022                           ;main.c: 265:     int16_t speed = 0;
  5023  001EDA  0E00               	movlw	0
  5024  001EDC  0100               	movlb	0	; () banked
  5025  001EDE  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5026  001EE0  0E00               	movlw	0
  5027  001EE2  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5028                           
  5029                           ;main.c: 267:     switch (driveMode){
  5030  001EE4  EF2D  F010         	goto	l6451
  5031  001EE8                     l6413:
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;main.c: 269:             if(distFront > (40)) {
  5035  001EE8  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5036  001EEA  E109               	bnz	u5540
  5037  001EEC  0E29               	movlw	41
  5038  001EEE  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5039  001EF0  A0D8               	btfss	status,0,c
  5040  001EF2  EF7D  F00F         	goto	u5541
  5041  001EF6  EF7F  F00F         	goto	u5540
  5042  001EFA                     u5541:
  5043  001EFA  EF81  F00F         	goto	l6417
  5044  001EFE                     u5540:
  5045  001EFE                     
  5046                           ; BSR set to: 0
  5047                           ;main.c: 270:                 driveMode = Straight;
  5048  001EFE  0E00               	movlw	0
  5049  001F00  6FED               	movwf	_driveMode& (0+255),b
  5050  001F02                     l6417:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;main.c: 273:             if(setSpeed > 0){
  5054  001F02  BFE1               	btfsc	(_setSpeed+1)& (0+255),7,b
  5055  001F04  EF8C  F00F         	goto	u5551
  5056  001F08  51E1               	movf	(_setSpeed+1)& (0+255),w,b
  5057  001F0A  E108               	bnz	u5550
  5058  001F0C  05E0               	decf	_setSpeed& (0+255),w,b
  5059  001F0E  A0D8               	btfss	status,0,c
  5060  001F10  EF8C  F00F         	goto	u5551
  5061  001F14  EF8E  F00F         	goto	u5550
  5062  001F18                     u5551:
  5063  001F18  EF98  F00F         	goto	l6423
  5064  001F1C                     u5550:
  5065  001F1C                     
  5066                           ; BSR set to: 0
  5067                           ;main.c: 274:                 speed = setSpeed;
  5068  001F1C  C0E0  F0AB         	movff	_setSpeed,calcSpeed@speed
  5069  001F20  C0E1  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5070  001F24                     
  5071                           ; BSR set to: 0
  5072                           ;main.c: 275:                 speed -= 2;
  5073  001F24  0EFE               	movlw	254
  5074  001F26  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5075  001F28  0EFF               	movlw	255
  5076  001F2A  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5077                           
  5078                           ;main.c: 276:             }else if( setSpeed > 0 && distFront < (20)){
  5079  001F2C  EF52  F010         	goto	l6453
  5080  001F30                     l6423:
  5081                           
  5082                           ; BSR set to: 0
  5083  001F30  BFE1               	btfsc	(_setSpeed+1)& (0+255),7,b
  5084  001F32  EFA3  F00F         	goto	u5561
  5085  001F36  51E1               	movf	(_setSpeed+1)& (0+255),w,b
  5086  001F38  E108               	bnz	u5560
  5087  001F3A  05E0               	decf	_setSpeed& (0+255),w,b
  5088  001F3C  A0D8               	btfss	status,0,c
  5089  001F3E  EFA3  F00F         	goto	u5561
  5090  001F42  EFA5  F00F         	goto	u5560
  5091  001F46                     u5561:
  5092  001F46  EF52  F010         	goto	l6453
  5093  001F4A                     u5560:
  5094  001F4A                     
  5095                           ; BSR set to: 0
  5096  001F4A  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5097  001F4C  E107               	bnz	u5571
  5098  001F4E  0E14               	movlw	20
  5099  001F50  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5100  001F52  B0D8               	btfsc	status,0,c
  5101  001F54  EFAE  F00F         	goto	u5571
  5102  001F58  EFB0  F00F         	goto	u5570
  5103  001F5C                     u5571:
  5104  001F5C  EF52  F010         	goto	l6453
  5105  001F60                     u5570:
  5106  001F60                     
  5107                           ; BSR set to: 0
  5108                           ;main.c: 277:                 speed = setSpeed;
  5109  001F60  C0E0  F0AB         	movff	_setSpeed,calcSpeed@speed
  5110  001F64  C0E1  F0AC         	movff	_setSpeed+1,calcSpeed@speed+1
  5111  001F68                     
  5112                           ; BSR set to: 0
  5113                           ;main.c: 278:                 speed -= 4;
  5114  001F68  0EFC               	movlw	252
  5115  001F6A  27AB               	addwf	calcSpeed@speed& (0+255),f,b
  5116  001F6C  0EFF               	movlw	255
  5117  001F6E  23AC               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  5118  001F70  EF52  F010         	goto	l6453
  5119  001F74                     l6431:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;main.c: 282:             if(distFront < (40)) {
  5123  001F74  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5124  001F76  E107               	bnz	u5581
  5125  001F78  0E28               	movlw	40
  5126  001F7A  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5127  001F7C  B0D8               	btfsc	status,0,c
  5128  001F7E  EFC3  F00F         	goto	u5581
  5129  001F82  EFC5  F00F         	goto	u5580
  5130  001F86                     u5581:
  5131  001F86  EFC7  F00F         	goto	l6435
  5132  001F8A                     u5580:
  5133  001F8A                     
  5134                           ; BSR set to: 0
  5135                           ;main.c: 283:                 driveMode = Brake;
  5136  001F8A  0E01               	movlw	1
  5137  001F8C  6FED               	movwf	_driveMode& (0+255),b
  5138  001F8E                     l6435:
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;main.c: 286:             if(distFront > (100)){
  5142  001F8E  51EF               	movf	(_distFront+1)& (0+255),w,b	;volatile
  5143  001F90  E109               	bnz	u5590
  5144  001F92  0E65               	movlw	101
  5145  001F94  5DEE               	subwf	_distFront& (0+255),w,b	;volatile
  5146  001F96  A0D8               	btfss	status,0,c
  5147  001F98  EFD0  F00F         	goto	u5591
  5148  001F9C  EFD2  F00F         	goto	u5590
  5149  001FA0                     u5591:
  5150  001FA0  EF1B  F010         	goto	l6439
  5151  001FA4                     u5590:
  5152  001FA4                     
  5153                           ; BSR set to: 0
  5154                           ;main.c: 287:                 speed = (int16_t)((0.8) * (distFront - (100)) + (200));
  5155  001FA4  0E00               	movlw	0
  5156  001FA6  6F93               	movwf	___fladd@a& (0+255),b
  5157  001FA8  0E00               	movlw	0
  5158  001FAA  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5159  001FAC  0E48               	movlw	72
  5160  001FAE  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5161  001FB0  0E43               	movlw	67
  5162  001FB2  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5163  001FB4  0ECD               	movlw	205
  5164  001FB6  6F7A               	movwf	___flmul@a& (0+255),b
  5165  001FB8  0ECC               	movlw	204
  5166  001FBA  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  5167  001FBC  0E4C               	movlw	76
  5168  001FBE  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  5169  001FC0  0E3F               	movlw	63
  5170  001FC2  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  5171  001FC4  0E9C               	movlw	156
  5172  001FC6  6FA7               	movwf	??_calcSpeed& (0+255),b
  5173  001FC8  0EFF               	movlw	255
  5174  001FCA  6FA8               	movwf	(??_calcSpeed+1)& (0+255),b
  5175  001FCC  C0EE  F0A9         	movff	_distFront,??_calcSpeed+2	;volatile
  5176  001FD0  C0EF  F0AA         	movff	_distFront+1,??_calcSpeed+3	;volatile
  5177  001FD4  51A7               	movf	??_calcSpeed& (0+255),w,b
  5178  001FD6  27A9               	addwf	(??_calcSpeed+2)& (0+255),f,b
  5179  001FD8  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5180  001FDA  23AA               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  5181  001FDC  C0A9  F068         	movff	??_calcSpeed+2,___xxtofl@val
  5182  001FE0  C0AA  F069         	movff	??_calcSpeed+3,___xxtofl@val+1
  5183  001FE4  6B6A               	clrf	(___xxtofl@val+2)& (0+255),b
  5184  001FE6  6B6B               	clrf	(___xxtofl@val+3)& (0+255),b
  5185  001FE8  0E00               	movlw	0
  5186  001FEA  EC83  F011         	call	___xxtofl
  5187  001FEE  C068  F076         	movff	?___xxtofl,___flmul@b
  5188  001FF2  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  5189  001FF6  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  5190  001FFA  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  5191  001FFE  EC9B  F00A         	call	___flmul	;wreg free
  5192  002002  C076  F08F         	movff	?___flmul,___fladd@b
  5193  002006  C077  F090         	movff	?___flmul+1,___fladd@b+1
  5194  00200A  C078  F091         	movff	?___flmul+2,___fladd@b+2
  5195  00200E  C079  F092         	movff	?___flmul+3,___fladd@b+3
  5196  002012  EC3A  F008         	call	___fladd	;wreg free
  5197  002016  C08F  F09F         	movff	?___fladd,___fltol@f1
  5198  00201A  C090  F0A0         	movff	?___fladd+1,___fltol@f1+1
  5199  00201E  C091  F0A1         	movff	?___fladd+2,___fltol@f1+2
  5200  002022  C092  F0A2         	movff	?___fladd+3,___fltol@f1+3
  5201  002026  EC9D  F016         	call	___fltol	;wreg free
  5202  00202A  C09F  F0AB         	movff	?___fltol,calcSpeed@speed
  5203  00202E  C0A0  F0AC         	movff	?___fltol+1,calcSpeed@speed+1
  5204                           
  5205                           ;main.c: 288:             }else{
  5206  002032  EF52  F010         	goto	l6453
  5207  002036                     l6439:
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;main.c: 289:                 speed = (200);
  5211  002036  0E00               	movlw	0
  5212  002038  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5213  00203A  0EC8               	movlw	200
  5214  00203C  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5215  00203E  EF52  F010         	goto	l6453
  5216  002042                     l6441:
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;main.c: 295:             speed = (-150);
  5220  002042  0EFF               	movlw	255
  5221  002044  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5222  002046  0E6A               	movlw	106
  5223  002048  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5224                           
  5225                           ;main.c: 296:             break;
  5226  00204A  EF52  F010         	goto	l6453
  5227  00204E                     l6445:
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;main.c: 301:             speed = (150);
  5231  00204E  0E00               	movlw	0
  5232  002050  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5233  002052  0E96               	movlw	150
  5234  002054  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5235                           
  5236                           ;main.c: 302:             break;
  5237  002056  EF52  F010         	goto	l6453
  5238  00205A                     l6451:
  5239                           
  5240                           ; BSR set to: 0
  5241  00205A  51ED               	movf	_driveMode& (0+255),w,b
  5242  00205C  6FA7               	movwf	??_calcSpeed& (0+255),b
  5243  00205E  6BA8               	clrf	(??_calcSpeed+1)& (0+255),b
  5244                           
  5245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5246                           ; Switch size 1, requested type "simple"
  5247                           ; Number of cases is 1, Range of values is 0 to 0
  5248                           ; switch strategies available:
  5249                           ; Name         Instructions Cycles
  5250                           ; simple_byte            4     3 (average)
  5251                           ;	Chosen strategy is simple_byte
  5252  002060  51A8               	movf	(??_calcSpeed+1)& (0+255),w,b
  5253  002062  0A00               	xorlw	0	; case 0
  5254  002064  B4D8               	btfsc	status,2,c
  5255  002066  EF37  F010         	goto	l6707
  5256  00206A  EF52  F010         	goto	l6453
  5257  00206E                     l6707:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ; Switch size 1, requested type "simple"
  5261                           ; Number of cases is 6, Range of values is 0 to 5
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; simple_byte           19    10 (average)
  5265                           ;	Chosen strategy is simple_byte
  5266  00206E  51A7               	movf	??_calcSpeed& (0+255),w,b
  5267  002070  0A00               	xorlw	0	; case 0
  5268  002072  B4D8               	btfsc	status,2,c
  5269  002074  EFBA  F00F         	goto	l6431
  5270  002078  0A01               	xorlw	1	; case 1
  5271  00207A  B4D8               	btfsc	status,2,c
  5272  00207C  EF74  F00F         	goto	l6413
  5273  002080  0A03               	xorlw	3	; case 2
  5274  002082  B4D8               	btfsc	status,2,c
  5275  002084  EF21  F010         	goto	l6441
  5276  002088  0A01               	xorlw	1	; case 3
  5277  00208A  B4D8               	btfsc	status,2,c
  5278  00208C  EF21  F010         	goto	l6441
  5279  002090  0A07               	xorlw	7	; case 4
  5280  002092  B4D8               	btfsc	status,2,c
  5281  002094  EF27  F010         	goto	l6445
  5282  002098  0A01               	xorlw	1	; case 5
  5283  00209A  B4D8               	btfsc	status,2,c
  5284  00209C  EF27  F010         	goto	l6445
  5285  0020A0  EF52  F010         	goto	l6453
  5286  0020A4                     l6453:
  5287                           
  5288                           ;main.c: 308:     if(speed > (450)){
  5289  0020A4  0100               	movlb	0	; () banked
  5290  0020A6  BFAC               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  5291  0020A8  EF5F  F010         	goto	u5601
  5292  0020AC  0EC3               	movlw	195
  5293  0020AE  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  5294  0020B0  0E01               	movlw	1
  5295  0020B2  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5296  0020B4  A0D8               	btfss	status,0,c
  5297  0020B6  EF5F  F010         	goto	u5601
  5298  0020BA  EF61  F010         	goto	u5600
  5299  0020BE                     u5601:
  5300  0020BE  EF65  F010         	goto	l6457
  5301  0020C2                     u5600:
  5302  0020C2                     
  5303                           ; BSR set to: 0
  5304                           ;main.c: 309:         speed = (450);
  5305  0020C2  0E01               	movlw	1
  5306  0020C4  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5307  0020C6  0EC2               	movlw	194
  5308  0020C8  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5309  0020CA                     l6457:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;main.c: 311:     if(speed < (-200)){
  5313  0020CA  AFAC               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  5314  0020CC  EF71  F010         	goto	u5611
  5315  0020D0  0E38               	movlw	56
  5316  0020D2  5DAB               	subwf	calcSpeed@speed& (0+255),w,b
  5317  0020D4  0EFF               	movlw	255
  5318  0020D6  59AC               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  5319  0020D8  B0D8               	btfsc	status,0,c
  5320  0020DA  EF71  F010         	goto	u5611
  5321  0020DE  EF73  F010         	goto	u5610
  5322  0020E2                     u5611:
  5323  0020E2  EF77  F010         	goto	l6461
  5324  0020E6                     u5610:
  5325  0020E6                     
  5326                           ; BSR set to: 0
  5327                           ;main.c: 312:         speed = (-200);
  5328  0020E6  0EFF               	movlw	255
  5329  0020E8  6FAC               	movwf	(calcSpeed@speed+1)& (0+255),b
  5330  0020EA  0E38               	movlw	56
  5331  0020EC  6FAB               	movwf	calcSpeed@speed& (0+255),b
  5332  0020EE                     l6461:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;main.c: 314:     setSpeed = speed;
  5336  0020EE  C0AB  F0E0         	movff	calcSpeed@speed,_setSpeed
  5337  0020F2  C0AC  F0E1         	movff	calcSpeed@speed+1,_setSpeed+1
  5338  0020F6                     
  5339                           ; BSR set to: 0
  5340  0020F6  0012               	return		;funcret
  5341  0020F8                     __end_of_calcSpeed:
  5342                           	callstack 0
  5343                           
  5344 ;; *************** function ___fladd *****************
  5345 ;; Defined at:
  5346 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;  b               4   47[BANK0 ] void 
  5349 ;;  a               4   51[BANK0 ] void 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  grs             1   62[BANK0 ] unsigned char 
  5352 ;;  bexp            1   61[BANK0 ] unsigned char 
  5353 ;;  aexp            1   60[BANK0 ] unsigned char 
  5354 ;;  signs           1   59[BANK0 ] unsigned char 
  5355 ;; Return value:  Size  Location     Type
  5356 ;;                  4   47[BANK0 ] unsigned char 
  5357 ;; Registers used:
  5358 ;;		wreg, status,2, status,0
  5359 ;; Tracked objects:
  5360 ;;		On entry : 0/0
  5361 ;;		On exit  : 0/0
  5362 ;;		Unchanged: 0/0
  5363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5364 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5365 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5366 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;Total ram usage:       16 bytes
  5369 ;; Hardware stack levels used: 1
  5370 ;; Hardware stack levels required when called: 8
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_calcSpeed
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text24
  5379  001074                     __ptext24:
  5380                           	callstack 0
  5381  001074                     ___fladd:
  5382                           	callstack 20
  5383  001074  0100               	movlb	0	; () banked
  5384  001076  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5385  001078  0B80               	andlw	128
  5386  00107A  6F9B               	movwf	___fladd@signs& (0+255),b
  5387  00107C  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5388  00107E  2592               	addwf	(___fladd@b+3)& (0+255),w,b
  5389  001080  6F9D               	movwf	___fladd@bexp& (0+255),b
  5390  001082                     
  5391                           ; BSR set to: 0
  5392  001082  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  5393  001084  EF46  F008         	goto	u2961
  5394  001088  EF48  F008         	goto	u2960
  5395  00108C                     u2961:
  5396  00108C  EF49  F008         	goto	l4541
  5397  001090                     u2960:
  5398  001090                     
  5399                           ; BSR set to: 0
  5400  001090  819D               	bsf	___fladd@bexp& (0+255),0,b
  5401  001092                     l4541:
  5402                           
  5403                           ; BSR set to: 0
  5404  001092  519D               	movf	___fladd@bexp& (0+255),w,b
  5405  001094  B4D8               	btfsc	status,2,c
  5406  001096  EF4F  F008         	goto	u2971
  5407  00109A  EF51  F008         	goto	u2970
  5408  00109E                     u2971:
  5409  00109E  EF66  F008         	goto	l4551
  5410  0010A2                     u2970:
  5411  0010A2                     
  5412                           ; BSR set to: 0
  5413  0010A2  299D               	incf	___fladd@bexp& (0+255),w,b
  5414  0010A4  A4D8               	btfss	status,2,c
  5415  0010A6  EF57  F008         	goto	u2981
  5416  0010AA  EF59  F008         	goto	u2980
  5417  0010AE                     u2981:
  5418  0010AE  EF61  F008         	goto	l4547
  5419  0010B2                     u2980:
  5420  0010B2                     
  5421                           ; BSR set to: 0
  5422  0010B2  0E00               	movlw	0
  5423  0010B4  6F8F               	movwf	___fladd@b& (0+255),b
  5424  0010B6  0E00               	movlw	0
  5425  0010B8  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5426  0010BA  0E00               	movlw	0
  5427  0010BC  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5428  0010BE  0E00               	movlw	0
  5429  0010C0  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5430  0010C2                     l4547:
  5431                           
  5432                           ; BSR set to: 0
  5433  0010C2  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  5434  0010C4                     
  5435                           ; BSR set to: 0
  5436  0010C4  0E00               	movlw	0
  5437  0010C6  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5438  0010C8  EF6E  F008         	goto	l4553
  5439  0010CC                     l4551:
  5440                           
  5441                           ; BSR set to: 0
  5442  0010CC  0E00               	movlw	0
  5443  0010CE  6F8F               	movwf	___fladd@b& (0+255),b
  5444  0010D0  0E00               	movlw	0
  5445  0010D2  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5446  0010D4  0E00               	movlw	0
  5447  0010D6  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5448  0010D8  0E00               	movlw	0
  5449  0010DA  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5450  0010DC                     l4553:
  5451                           
  5452                           ; BSR set to: 0
  5453  0010DC  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5454  0010DE  0B80               	andlw	128
  5455  0010E0  6F9C               	movwf	___fladd@aexp& (0+255),b
  5456  0010E2                     
  5457                           ; BSR set to: 0
  5458  0010E2  519B               	movf	___fladd@signs& (0+255),w,b
  5459  0010E4  199C               	xorwf	___fladd@aexp& (0+255),w,b
  5460  0010E6  B4D8               	btfsc	status,2,c
  5461  0010E8  EF78  F008         	goto	u2991
  5462  0010EC  EF7A  F008         	goto	u2990
  5463  0010F0                     u2991:
  5464  0010F0  EF7B  F008         	goto	l4559
  5465  0010F4                     u2990:
  5466  0010F4                     
  5467                           ; BSR set to: 0
  5468  0010F4  8D9B               	bsf	___fladd@signs& (0+255),6,b
  5469  0010F6                     l4559:
  5470                           
  5471                           ; BSR set to: 0
  5472  0010F6  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5473  0010F8  2596               	addwf	(___fladd@a+3)& (0+255),w,b
  5474  0010FA  6F9C               	movwf	___fladd@aexp& (0+255),b
  5475  0010FC                     
  5476                           ; BSR set to: 0
  5477  0010FC  AF95               	btfss	(___fladd@a+2)& (0+255),7,b
  5478  0010FE  EF83  F008         	goto	u3001
  5479  001102  EF85  F008         	goto	u3000
  5480  001106                     u3001:
  5481  001106  EF86  F008         	goto	l4565
  5482  00110A                     u3000:
  5483  00110A                     
  5484                           ; BSR set to: 0
  5485  00110A  819C               	bsf	___fladd@aexp& (0+255),0,b
  5486  00110C                     l4565:
  5487                           
  5488                           ; BSR set to: 0
  5489  00110C  519C               	movf	___fladd@aexp& (0+255),w,b
  5490  00110E  B4D8               	btfsc	status,2,c
  5491  001110  EF8C  F008         	goto	u3011
  5492  001114  EF8E  F008         	goto	u3010
  5493  001118                     u3011:
  5494  001118  EFA3  F008         	goto	l4575
  5495  00111C                     u3010:
  5496  00111C                     
  5497                           ; BSR set to: 0
  5498  00111C  299C               	incf	___fladd@aexp& (0+255),w,b
  5499  00111E  A4D8               	btfss	status,2,c
  5500  001120  EF94  F008         	goto	u3021
  5501  001124  EF96  F008         	goto	u3020
  5502  001128                     u3021:
  5503  001128  EF9E  F008         	goto	l4571
  5504  00112C                     u3020:
  5505  00112C                     
  5506                           ; BSR set to: 0
  5507  00112C  0E00               	movlw	0
  5508  00112E  6F93               	movwf	___fladd@a& (0+255),b
  5509  001130  0E00               	movlw	0
  5510  001132  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5511  001134  0E00               	movlw	0
  5512  001136  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5513  001138  0E00               	movlw	0
  5514  00113A  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5515  00113C                     l4571:
  5516                           
  5517                           ; BSR set to: 0
  5518  00113C  8F95               	bsf	(___fladd@a+2)& (0+255),7,b
  5519  00113E                     
  5520                           ; BSR set to: 0
  5521  00113E  0E00               	movlw	0
  5522  001140  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5523  001142  EFAB  F008         	goto	l4577
  5524  001146                     l4575:
  5525                           
  5526                           ; BSR set to: 0
  5527  001146  0E00               	movlw	0
  5528  001148  6F93               	movwf	___fladd@a& (0+255),b
  5529  00114A  0E00               	movlw	0
  5530  00114C  6F94               	movwf	(___fladd@a+1)& (0+255),b
  5531  00114E  0E00               	movlw	0
  5532  001150  6F95               	movwf	(___fladd@a+2)& (0+255),b
  5533  001152  0E00               	movlw	0
  5534  001154  6F96               	movwf	(___fladd@a+3)& (0+255),b
  5535  001156                     l4577:
  5536                           
  5537                           ; BSR set to: 0
  5538  001156  519D               	movf	___fladd@bexp& (0+255),w,b
  5539  001158  5D9C               	subwf	___fladd@aexp& (0+255),w,b
  5540  00115A  B0D8               	btfsc	status,0,c
  5541  00115C  EFB2  F008         	goto	u3031
  5542  001160  EFB4  F008         	goto	u3030
  5543  001164                     u3031:
  5544  001164  EFDB  F008         	goto	l4613
  5545  001168                     u3030:
  5546  001168                     
  5547                           ; BSR set to: 0
  5548  001168  AD9B               	btfss	___fladd@signs& (0+255),6,b
  5549  00116A  EFB9  F008         	goto	u3041
  5550  00116E  EFBB  F008         	goto	u3040
  5551  001172                     u3041:
  5552  001172  EFBD  F008         	goto	l4583
  5553  001176                     u3040:
  5554  001176                     
  5555                           ; BSR set to: 0
  5556  001176  0E80               	movlw	128
  5557  001178  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  5558  00117A                     l4583:
  5559                           
  5560                           ; BSR set to: 0
  5561  00117A  C09D  F09E         	movff	___fladd@bexp,___fladd@grs
  5562  00117E                     
  5563                           ; BSR set to: 0
  5564  00117E  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  5565  001182                     
  5566                           ; BSR set to: 0
  5567  001182  C09E  F09C         	movff	___fladd@grs,___fladd@aexp
  5568  001186                     
  5569                           ; BSR set to: 0
  5570  001186  C08F  F09E         	movff	___fladd@b,___fladd@grs
  5571  00118A                     
  5572                           ; BSR set to: 0
  5573  00118A  C093  F08F         	movff	___fladd@a,___fladd@b
  5574  00118E                     
  5575                           ; BSR set to: 0
  5576  00118E  C09E  F093         	movff	___fladd@grs,___fladd@a
  5577  001192                     
  5578                           ; BSR set to: 0
  5579  001192  C090  F09E         	movff	___fladd@b+1,___fladd@grs
  5580  001196                     
  5581                           ; BSR set to: 0
  5582  001196  C094  F090         	movff	___fladd@a+1,___fladd@b+1
  5583  00119A                     
  5584                           ; BSR set to: 0
  5585  00119A  C09E  F094         	movff	___fladd@grs,___fladd@a+1
  5586  00119E                     
  5587                           ; BSR set to: 0
  5588  00119E  C091  F09E         	movff	___fladd@b+2,___fladd@grs
  5589  0011A2                     
  5590                           ; BSR set to: 0
  5591  0011A2  C095  F091         	movff	___fladd@a+2,___fladd@b+2
  5592  0011A6                     
  5593                           ; BSR set to: 0
  5594  0011A6  C09E  F095         	movff	___fladd@grs,___fladd@a+2
  5595  0011AA                     
  5596                           ; BSR set to: 0
  5597  0011AA  C092  F09E         	movff	___fladd@b+3,___fladd@grs
  5598  0011AE                     
  5599                           ; BSR set to: 0
  5600  0011AE  C096  F092         	movff	___fladd@a+3,___fladd@b+3
  5601  0011B2                     
  5602                           ; BSR set to: 0
  5603  0011B2  C09E  F096         	movff	___fladd@grs,___fladd@a+3
  5604  0011B6                     l4613:
  5605                           
  5606                           ; BSR set to: 0
  5607  0011B6  0E00               	movlw	0
  5608  0011B8  6F9E               	movwf	___fladd@grs& (0+255),b
  5609  0011BA                     
  5610                           ; BSR set to: 0
  5611  0011BA  519D               	movf	___fladd@bexp& (0+255),w,b
  5612  0011BC  C09C  F097         	movff	___fladd@aexp,??___fladd
  5613  0011C0  6B98               	clrf	(??___fladd+1)& (0+255),b
  5614  0011C2  5F97               	subwf	??___fladd& (0+255),f,b
  5615  0011C4  0E00               	movlw	0
  5616  0011C6  5B98               	subwfb	(??___fladd+1)& (0+255),f,b
  5617  0011C8  BF98               	btfsc	(??___fladd+1)& (0+255),7,b
  5618  0011CA  EFF0  F008         	goto	u3051
  5619  0011CE  5198               	movf	(??___fladd+1)& (0+255),w,b
  5620  0011D0  E109               	bnz	u3050
  5621  0011D2  0E1A               	movlw	26
  5622  0011D4  5D97               	subwf	??___fladd& (0+255),w,b
  5623  0011D6  A0D8               	btfss	status,0,c
  5624  0011D8  EFF0  F008         	goto	u3051
  5625  0011DC  EFF2  F008         	goto	u3050
  5626  0011E0                     u3051:
  5627  0011E0  EF29  F009         	goto	l1877
  5628  0011E4                     u3050:
  5629  0011E4                     
  5630                           ; BSR set to: 0
  5631  0011E4  518F               	movf	___fladd@b& (0+255),w,b
  5632  0011E6  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  5633  0011E8  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  5634  0011EA  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  5635  0011EC  A4D8               	btfss	status,2,c
  5636  0011EE  EFFB  F008         	goto	u3061
  5637  0011F2  EFFE  F008         	goto	u3060
  5638  0011F6                     u3061:
  5639  0011F6  0E01               	movlw	1
  5640  0011F8  EFFF  F008         	goto	u3070
  5641  0011FC                     u3060:
  5642  0011FC  0E00               	movlw	0
  5643  0011FE                     u3070:
  5644  0011FE  6F9E               	movwf	___fladd@grs& (0+255),b
  5645  001200                     
  5646                           ; BSR set to: 0
  5647  001200  0E00               	movlw	0
  5648  001202  6F8F               	movwf	___fladd@b& (0+255),b
  5649  001204  0E00               	movlw	0
  5650  001206  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5651  001208  0E00               	movlw	0
  5652  00120A  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5653  00120C  0E00               	movlw	0
  5654  00120E  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5655  001210                     
  5656                           ; BSR set to: 0
  5657  001210  C09C  F09D         	movff	___fladd@aexp,___fladd@bexp
  5658  001214  EF32  F009         	goto	l1876
  5659  001218                     l1878:
  5660                           
  5661                           ; BSR set to: 0
  5662  001218  A19E               	btfss	___fladd@grs& (0+255),0,b
  5663  00121A  EF11  F009         	goto	u3081
  5664  00121E  EF13  F009         	goto	u3080
  5665  001222                     u3081:
  5666  001222  EF19  F009         	goto	l4625
  5667  001226                     u3080:
  5668  001226                     
  5669                           ; BSR set to: 0
  5670  001226  90D8               	bcf	status,0,c
  5671  001228  319E               	rrcf	___fladd@grs& (0+255),w,b
  5672  00122A  0901               	iorlw	1
  5673  00122C  6F9E               	movwf	___fladd@grs& (0+255),b
  5674  00122E  EF1B  F009         	goto	l4627
  5675  001232                     l4625:
  5676                           
  5677                           ; BSR set to: 0
  5678  001232  90D8               	bcf	status,0,c
  5679  001234  339E               	rrcf	___fladd@grs& (0+255),f,b
  5680  001236                     l4627:
  5681                           
  5682                           ; BSR set to: 0
  5683  001236  A18F               	btfss	___fladd@b& (0+255),0,b
  5684  001238  EF20  F009         	goto	u3091
  5685  00123C  EF22  F009         	goto	u3090
  5686  001240                     u3091:
  5687  001240  EF23  F009         	goto	l4631
  5688  001244                     u3090:
  5689  001244                     
  5690                           ; BSR set to: 0
  5691  001244  8F9E               	bsf	___fladd@grs& (0+255),7,b
  5692  001246                     l4631:
  5693                           
  5694                           ; BSR set to: 0
  5695  001246  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  5696  001248  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  5697  00124A  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  5698  00124C  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  5699  00124E  338F               	rrcf	___fladd@b& (0+255),f,b
  5700  001250                     
  5701                           ; BSR set to: 0
  5702  001250  2B9D               	incf	___fladd@bexp& (0+255),f,b
  5703  001252                     l1877:
  5704                           
  5705                           ; BSR set to: 0
  5706  001252  519C               	movf	___fladd@aexp& (0+255),w,b
  5707  001254  5D9D               	subwf	___fladd@bexp& (0+255),w,b
  5708  001256  A0D8               	btfss	status,0,c
  5709  001258  EF30  F009         	goto	u3101
  5710  00125C  EF32  F009         	goto	u3100
  5711  001260                     u3101:
  5712  001260  EF0C  F009         	goto	l1878
  5713  001264                     u3100:
  5714  001264                     l1876:
  5715                           
  5716                           ; BSR set to: 0
  5717  001264  BD9B               	btfsc	___fladd@signs& (0+255),6,b
  5718  001266  EF37  F009         	goto	u3111
  5719  00126A  EF39  F009         	goto	u3110
  5720  00126E                     u3111:
  5721  00126E  EF79  F009         	goto	l4659
  5722  001272                     u3110:
  5723  001272                     
  5724                           ; BSR set to: 0
  5725  001272  519D               	movf	___fladd@bexp& (0+255),w,b
  5726  001274  A4D8               	btfss	status,2,c
  5727  001276  EF3F  F009         	goto	u3121
  5728  00127A  EF41  F009         	goto	u3120
  5729  00127E                     u3121:
  5730  00127E  EF4B  F009         	goto	l4641
  5731  001282                     u3120:
  5732  001282                     
  5733                           ; BSR set to: 0
  5734  001282  0E00               	movlw	0
  5735  001284  6F8F               	movwf	?___fladd& (0+255),b
  5736  001286  0E00               	movlw	0
  5737  001288  6F90               	movwf	(?___fladd+1)& (0+255),b
  5738  00128A  0E00               	movlw	0
  5739  00128C  6F91               	movwf	(?___fladd+2)& (0+255),b
  5740  00128E  0E00               	movlw	0
  5741  001290  6F92               	movwf	(?___fladd+3)& (0+255),b
  5742  001292  EF9A  F00A         	goto	l1885
  5743  001296                     l4641:
  5744                           
  5745                           ; BSR set to: 0
  5746  001296  5193               	movf	___fladd@a& (0+255),w,b
  5747  001298  278F               	addwf	___fladd@b& (0+255),f,b
  5748  00129A  5194               	movf	(___fladd@a+1)& (0+255),w,b
  5749  00129C  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  5750  00129E  5195               	movf	(___fladd@a+2)& (0+255),w,b
  5751  0012A0  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  5752  0012A2  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5753  0012A4  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  5754  0012A6                     
  5755                           ; BSR set to: 0
  5756  0012A6  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  5757  0012A8  EF58  F009         	goto	u3131
  5758  0012AC  EF5A  F009         	goto	u3130
  5759  0012B0                     u3131:
  5760  0012B0  EF06  F00A         	goto	l4695
  5761  0012B4                     u3130:
  5762  0012B4                     
  5763                           ; BSR set to: 0
  5764  0012B4  A19E               	btfss	___fladd@grs& (0+255),0,b
  5765  0012B6  EF5F  F009         	goto	u3141
  5766  0012BA  EF61  F009         	goto	u3140
  5767  0012BE                     u3141:
  5768  0012BE  EF67  F009         	goto	l4649
  5769  0012C2                     u3140:
  5770  0012C2                     
  5771                           ; BSR set to: 0
  5772  0012C2  90D8               	bcf	status,0,c
  5773  0012C4  319E               	rrcf	___fladd@grs& (0+255),w,b
  5774  0012C6  0901               	iorlw	1
  5775  0012C8  6F9E               	movwf	___fladd@grs& (0+255),b
  5776  0012CA  EF69  F009         	goto	l4651
  5777  0012CE                     l4649:
  5778                           
  5779                           ; BSR set to: 0
  5780  0012CE  90D8               	bcf	status,0,c
  5781  0012D0  339E               	rrcf	___fladd@grs& (0+255),f,b
  5782  0012D2                     l4651:
  5783                           
  5784                           ; BSR set to: 0
  5785  0012D2  A18F               	btfss	___fladd@b& (0+255),0,b
  5786  0012D4  EF6E  F009         	goto	u3151
  5787  0012D8  EF70  F009         	goto	u3150
  5788  0012DC                     u3151:
  5789  0012DC  EF71  F009         	goto	l4655
  5790  0012E0                     u3150:
  5791  0012E0                     
  5792                           ; BSR set to: 0
  5793  0012E0  8F9E               	bsf	___fladd@grs& (0+255),7,b
  5794  0012E2                     l4655:
  5795                           
  5796                           ; BSR set to: 0
  5797  0012E2  3592               	rlcf	(___fladd@b+3)& (0+255),w,b
  5798  0012E4  3392               	rrcf	(___fladd@b+3)& (0+255),f,b
  5799  0012E6  3391               	rrcf	(___fladd@b+2)& (0+255),f,b
  5800  0012E8  3390               	rrcf	(___fladd@b+1)& (0+255),f,b
  5801  0012EA  338F               	rrcf	___fladd@b& (0+255),f,b
  5802  0012EC                     
  5803                           ; BSR set to: 0
  5804  0012EC  2B9D               	incf	___fladd@bexp& (0+255),f,b
  5805  0012EE  EF06  F00A         	goto	l4695
  5806  0012F2                     l4659:
  5807                           
  5808                           ; BSR set to: 0
  5809  0012F2  5193               	movf	___fladd@a& (0+255),w,b
  5810  0012F4  5D8F               	subwf	___fladd@b& (0+255),w,b
  5811  0012F6  5194               	movf	(___fladd@a+1)& (0+255),w,b
  5812  0012F8  5990               	subwfb	(___fladd@b+1)& (0+255),w,b
  5813  0012FA  5195               	movf	(___fladd@a+2)& (0+255),w,b
  5814  0012FC  5991               	subwfb	(___fladd@b+2)& (0+255),w,b
  5815  0012FE  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5816  001300  0A80               	xorlw	128
  5817  001302  6F97               	movwf	??___fladd& (0+255),b
  5818  001304  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5819  001306  0A80               	xorlw	128
  5820  001308  5997               	subwfb	??___fladd& (0+255),w,b
  5821  00130A  B0D8               	btfsc	status,0,c
  5822  00130C  EF8A  F009         	goto	u3161
  5823  001310  EF8C  F009         	goto	u3160
  5824  001314                     u3161:
  5825  001314  EFB7  F009         	goto	l4669
  5826  001318                     u3160:
  5827  001318                     
  5828                           ; BSR set to: 0
  5829  001318  518F               	movf	___fladd@b& (0+255),w,b
  5830  00131A  5D93               	subwf	___fladd@a& (0+255),w,b
  5831  00131C  6F97               	movwf	??___fladd& (0+255),b
  5832  00131E  5190               	movf	(___fladd@b+1)& (0+255),w,b
  5833  001320  5994               	subwfb	(___fladd@a+1)& (0+255),w,b
  5834  001322  6F98               	movwf	(??___fladd+1)& (0+255),b
  5835  001324  5191               	movf	(___fladd@b+2)& (0+255),w,b
  5836  001326  5995               	subwfb	(___fladd@a+2)& (0+255),w,b
  5837  001328  6F99               	movwf	(??___fladd+2)& (0+255),b
  5838  00132A  5192               	movf	(___fladd@b+3)& (0+255),w,b
  5839  00132C  5996               	subwfb	(___fladd@a+3)& (0+255),w,b
  5840  00132E  6F9A               	movwf	(??___fladd+3)& (0+255),b
  5841  001330  0EFF               	movlw	255
  5842  001332  2597               	addwf	??___fladd& (0+255),w,b
  5843  001334  6F8F               	movwf	___fladd@b& (0+255),b
  5844  001336  0EFF               	movlw	255
  5845  001338  2198               	addwfc	(??___fladd+1)& (0+255),w,b
  5846  00133A  6F90               	movwf	(___fladd@b+1)& (0+255),b
  5847  00133C  0EFF               	movlw	255
  5848  00133E  2199               	addwfc	(??___fladd+2)& (0+255),w,b
  5849  001340  6F91               	movwf	(___fladd@b+2)& (0+255),b
  5850  001342  0EFF               	movlw	255
  5851  001344  219A               	addwfc	(??___fladd+3)& (0+255),w,b
  5852  001346  6F92               	movwf	(___fladd@b+3)& (0+255),b
  5853  001348  0E80               	movlw	128
  5854  00134A  1B9B               	xorwf	___fladd@signs& (0+255),f,b
  5855  00134C                     
  5856                           ; BSR set to: 0
  5857  00134C  6D9E               	negf	___fladd@grs& (0+255),b
  5858  00134E                     
  5859                           ; BSR set to: 0
  5860  00134E  519E               	movf	___fladd@grs& (0+255),w,b
  5861  001350  A4D8               	btfss	status,2,c
  5862  001352  EFAD  F009         	goto	u3171
  5863  001356  EFAF  F009         	goto	u3170
  5864  00135A                     u3171:
  5865  00135A  EFBF  F009         	goto	l1893
  5866  00135E                     u3170:
  5867  00135E                     
  5868                           ; BSR set to: 0
  5869  00135E  0E01               	movlw	1
  5870  001360  278F               	addwf	___fladd@b& (0+255),f,b
  5871  001362  0E00               	movlw	0
  5872  001364  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  5873  001366  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  5874  001368  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  5875  00136A  EFBF  F009         	goto	l1893
  5876  00136E                     l4669:
  5877                           
  5878                           ; BSR set to: 0
  5879  00136E  5193               	movf	___fladd@a& (0+255),w,b
  5880  001370  5F8F               	subwf	___fladd@b& (0+255),f,b
  5881  001372  5194               	movf	(___fladd@a+1)& (0+255),w,b
  5882  001374  5B90               	subwfb	(___fladd@b+1)& (0+255),f,b
  5883  001376  5195               	movf	(___fladd@a+2)& (0+255),w,b
  5884  001378  5B91               	subwfb	(___fladd@b+2)& (0+255),f,b
  5885  00137A  5196               	movf	(___fladd@a+3)& (0+255),w,b
  5886  00137C  5B92               	subwfb	(___fladd@b+3)& (0+255),f,b
  5887  00137E                     l1893:
  5888                           
  5889                           ; BSR set to: 0
  5890  00137E  518F               	movf	___fladd@b& (0+255),w,b
  5891  001380  1190               	iorwf	(___fladd@b+1)& (0+255),w,b
  5892  001382  1191               	iorwf	(___fladd@b+2)& (0+255),w,b
  5893  001384  1192               	iorwf	(___fladd@b+3)& (0+255),w,b
  5894  001386  A4D8               	btfss	status,2,c
  5895  001388  EFC8  F009         	goto	u3181
  5896  00138C  EFCA  F009         	goto	u3180
  5897  001390                     u3181:
  5898  001390  EFFF  F009         	goto	l4693
  5899  001394                     u3180:
  5900  001394                     
  5901                           ; BSR set to: 0
  5902  001394  519E               	movf	___fladd@grs& (0+255),w,b
  5903  001396  A4D8               	btfss	status,2,c
  5904  001398  EFD0  F009         	goto	u3191
  5905  00139C  EFD2  F009         	goto	u3190
  5906  0013A0                     u3191:
  5907  0013A0  EFFF  F009         	goto	l4693
  5908  0013A4                     u3190:
  5909  0013A4                     
  5910                           ; BSR set to: 0
  5911  0013A4  0E00               	movlw	0
  5912  0013A6  6F8F               	movwf	?___fladd& (0+255),b
  5913  0013A8  0E00               	movlw	0
  5914  0013AA  6F90               	movwf	(?___fladd+1)& (0+255),b
  5915  0013AC  0E00               	movlw	0
  5916  0013AE  6F91               	movwf	(?___fladd+2)& (0+255),b
  5917  0013B0  0E00               	movlw	0
  5918  0013B2  6F92               	movwf	(?___fladd+3)& (0+255),b
  5919  0013B4  EF9A  F00A         	goto	l1885
  5920  0013B8                     l4677:
  5921                           
  5922                           ; BSR set to: 0
  5923  0013B8  90D8               	bcf	status,0,c
  5924  0013BA  378F               	rlcf	___fladd@b& (0+255),f,b
  5925  0013BC  3790               	rlcf	(___fladd@b+1)& (0+255),f,b
  5926  0013BE  3791               	rlcf	(___fladd@b+2)& (0+255),f,b
  5927  0013C0  3792               	rlcf	(___fladd@b+3)& (0+255),f,b
  5928  0013C2                     
  5929                           ; BSR set to: 0
  5930  0013C2  AF9E               	btfss	___fladd@grs& (0+255),7,b
  5931  0013C4  EFE6  F009         	goto	u3201
  5932  0013C8  EFE8  F009         	goto	u3200
  5933  0013CC                     u3201:
  5934  0013CC  EFE9  F009         	goto	l4683
  5935  0013D0                     u3200:
  5936  0013D0                     
  5937                           ; BSR set to: 0
  5938  0013D0  818F               	bsf	___fladd@b& (0+255),0,b
  5939  0013D2                     l4683:
  5940                           
  5941                           ; BSR set to: 0
  5942  0013D2  A19E               	btfss	___fladd@grs& (0+255),0,b
  5943  0013D4  EFEE  F009         	goto	u3211
  5944  0013D8  EFF0  F009         	goto	u3210
  5945  0013DC                     u3211:
  5946  0013DC  EFF4  F009         	goto	l4687
  5947  0013E0                     u3210:
  5948  0013E0                     
  5949                           ; BSR set to: 0
  5950  0013E0  80D8               	bsf	status,0,c
  5951  0013E2  379E               	rlcf	___fladd@grs& (0+255),f,b
  5952  0013E4  EFF6  F009         	goto	l4689
  5953  0013E8                     l4687:
  5954                           
  5955                           ; BSR set to: 0
  5956  0013E8  90D8               	bcf	status,0,c
  5957  0013EA  379E               	rlcf	___fladd@grs& (0+255),f,b
  5958  0013EC                     l4689:
  5959                           
  5960                           ; BSR set to: 0
  5961  0013EC  519D               	movf	___fladd@bexp& (0+255),w,b
  5962  0013EE  B4D8               	btfsc	status,2,c
  5963  0013F0  EFFC  F009         	goto	u3221
  5964  0013F4  EFFE  F009         	goto	u3220
  5965  0013F8                     u3221:
  5966  0013F8  EFFF  F009         	goto	l4693
  5967  0013FC                     u3220:
  5968  0013FC                     
  5969                           ; BSR set to: 0
  5970  0013FC  079D               	decf	___fladd@bexp& (0+255),f,b
  5971  0013FE                     l4693:
  5972                           
  5973                           ; BSR set to: 0
  5974  0013FE  AF91               	btfss	(___fladd@b+2)& (0+255),7,b
  5975  001400  EF04  F00A         	goto	u3231
  5976  001404  EF06  F00A         	goto	u3230
  5977  001408                     u3231:
  5978  001408  EFDC  F009         	goto	l4677
  5979  00140C                     u3230:
  5980  00140C                     l4695:
  5981                           
  5982                           ; BSR set to: 0
  5983  00140C  0E00               	movlw	0
  5984  00140E  6F9C               	movwf	___fladd@aexp& (0+255),b
  5985  001410                     
  5986                           ; BSR set to: 0
  5987  001410  AF9E               	btfss	___fladd@grs& (0+255),7,b
  5988  001412  EF0D  F00A         	goto	u3241
  5989  001416  EF0F  F00A         	goto	u3240
  5990  00141A                     u3241:
  5991  00141A  EF27  F00A         	goto	l1902
  5992  00141E                     u3240:
  5993  00141E                     
  5994                           ; BSR set to: 0
  5995  00141E  C09E  F097         	movff	___fladd@grs,??___fladd
  5996  001422  0E7F               	movlw	127
  5997  001424  1797               	andwf	??___fladd& (0+255),f,b
  5998  001426  B4D8               	btfsc	status,2,c
  5999  001428  EF18  F00A         	goto	u3251
  6000  00142C  EF1A  F00A         	goto	u3250
  6001  001430                     u3251:
  6002  001430  EF1E  F00A         	goto	l1903
  6003  001434                     u3250:
  6004  001434                     l4701:
  6005                           
  6006                           ; BSR set to: 0
  6007  001434  0E01               	movlw	1
  6008  001436  6F9C               	movwf	___fladd@aexp& (0+255),b
  6009  001438  EF27  F00A         	goto	l1902
  6010  00143C                     l1903:
  6011                           
  6012                           ; BSR set to: 0
  6013  00143C  A18F               	btfss	___fladd@b& (0+255),0,b
  6014  00143E  EF23  F00A         	goto	u3261
  6015  001442  EF25  F00A         	goto	u3260
  6016  001446                     u3261:
  6017  001446  EF27  F00A         	goto	l1902
  6018  00144A                     u3260:
  6019  00144A  EF1A  F00A         	goto	l4701
  6020  00144E                     l1902:
  6021                           
  6022                           ; BSR set to: 0
  6023  00144E  519C               	movf	___fladd@aexp& (0+255),w,b
  6024  001450  B4D8               	btfsc	status,2,c
  6025  001452  EF2D  F00A         	goto	u3271
  6026  001456  EF2F  F00A         	goto	u3270
  6027  00145A                     u3271:
  6028  00145A  EF5A  F00A         	goto	l4713
  6029  00145E                     u3270:
  6030  00145E                     
  6031                           ; BSR set to: 0
  6032  00145E  0E01               	movlw	1
  6033  001460  278F               	addwf	___fladd@b& (0+255),f,b
  6034  001462  0E00               	movlw	0
  6035  001464  2390               	addwfc	(___fladd@b+1)& (0+255),f,b
  6036  001466  2391               	addwfc	(___fladd@b+2)& (0+255),f,b
  6037  001468  2392               	addwfc	(___fladd@b+3)& (0+255),f,b
  6038  00146A                     
  6039                           ; BSR set to: 0
  6040  00146A  A192               	btfss	(___fladd@b+3)& (0+255),0,b
  6041  00146C  EF3A  F00A         	goto	u3281
  6042  001470  EF3C  F00A         	goto	u3280
  6043  001474                     u3281:
  6044  001474  EF5A  F00A         	goto	l4713
  6045  001478                     u3280:
  6046  001478                     
  6047                           ; BSR set to: 0
  6048  001478  C08F  F097         	movff	___fladd@b,??___fladd
  6049  00147C  C090  F098         	movff	___fladd@b+1,??___fladd+1
  6050  001480  C091  F099         	movff	___fladd@b+2,??___fladd+2
  6051  001484  C092  F09A         	movff	___fladd@b+3,??___fladd+3
  6052  001488  359A               	rlcf	(??___fladd+3)& (0+255),w,b
  6053  00148A  339A               	rrcf	(??___fladd+3)& (0+255),f,b
  6054  00148C  3399               	rrcf	(??___fladd+2)& (0+255),f,b
  6055  00148E  3398               	rrcf	(??___fladd+1)& (0+255),f,b
  6056  001490  3397               	rrcf	??___fladd& (0+255),f,b
  6057  001492  C097  F08F         	movff	??___fladd,___fladd@b
  6058  001496  C098  F090         	movff	??___fladd+1,___fladd@b+1
  6059  00149A  C099  F091         	movff	??___fladd+2,___fladd@b+2
  6060  00149E  C09A  F092         	movff	??___fladd+3,___fladd@b+3
  6061  0014A2  299D               	incf	___fladd@bexp& (0+255),w,b
  6062  0014A4  B4D8               	btfsc	status,2,c
  6063  0014A6  EF57  F00A         	goto	u3291
  6064  0014AA  EF59  F00A         	goto	u3290
  6065  0014AE                     u3291:
  6066  0014AE  EF5A  F00A         	goto	l4713
  6067  0014B2                     u3290:
  6068  0014B2                     
  6069                           ; BSR set to: 0
  6070  0014B2  2B9D               	incf	___fladd@bexp& (0+255),f,b
  6071  0014B4                     l4713:
  6072                           
  6073                           ; BSR set to: 0
  6074  0014B4  299D               	incf	___fladd@bexp& (0+255),w,b
  6075  0014B6  B4D8               	btfsc	status,2,c
  6076  0014B8  EF60  F00A         	goto	u3301
  6077  0014BC  EF62  F00A         	goto	u3300
  6078  0014C0                     u3301:
  6079  0014C0  EF6A  F00A         	goto	l4717
  6080  0014C4                     u3300:
  6081  0014C4                     
  6082                           ; BSR set to: 0
  6083  0014C4  519D               	movf	___fladd@bexp& (0+255),w,b
  6084  0014C6  A4D8               	btfss	status,2,c
  6085  0014C8  EF68  F00A         	goto	u3311
  6086  0014CC  EF6A  F00A         	goto	u3310
  6087  0014D0                     u3311:
  6088  0014D0  EF7C  F00A         	goto	l4721
  6089  0014D4                     u3310:
  6090  0014D4                     l4717:
  6091                           
  6092                           ; BSR set to: 0
  6093  0014D4  0E00               	movlw	0
  6094  0014D6  6F8F               	movwf	___fladd@b& (0+255),b
  6095  0014D8  0E00               	movlw	0
  6096  0014DA  6F90               	movwf	(___fladd@b+1)& (0+255),b
  6097  0014DC  0E00               	movlw	0
  6098  0014DE  6F91               	movwf	(___fladd@b+2)& (0+255),b
  6099  0014E0  0E00               	movlw	0
  6100  0014E2  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6101  0014E4  519D               	movf	___fladd@bexp& (0+255),w,b
  6102  0014E6  A4D8               	btfss	status,2,c
  6103  0014E8  EF78  F00A         	goto	u3321
  6104  0014EC  EF7A  F00A         	goto	u3320
  6105  0014F0                     u3321:
  6106  0014F0  EF7C  F00A         	goto	l4721
  6107  0014F4                     u3320:
  6108  0014F4                     
  6109                           ; BSR set to: 0
  6110  0014F4  0E00               	movlw	0
  6111  0014F6  6F9B               	movwf	___fladd@signs& (0+255),b
  6112  0014F8                     l4721:
  6113                           
  6114                           ; BSR set to: 0
  6115  0014F8  A19D               	btfss	___fladd@bexp& (0+255),0,b
  6116  0014FA  EF81  F00A         	goto	u3331
  6117  0014FE  EF83  F00A         	goto	u3330
  6118  001502                     u3331:
  6119  001502  EF86  F00A         	goto	l4725
  6120  001506                     u3330:
  6121  001506                     
  6122                           ; BSR set to: 0
  6123  001506  8F91               	bsf	(___fladd@b+2)& (0+255),7,b
  6124  001508  EF87  F00A         	goto	l4727
  6125  00150C                     l4725:
  6126                           
  6127                           ; BSR set to: 0
  6128  00150C  9F91               	bcf	(___fladd@b+2)& (0+255),7,b
  6129  00150E                     l4727:
  6130                           
  6131                           ; BSR set to: 0
  6132  00150E  90D8               	bcf	status,0,c
  6133  001510  319D               	rrcf	___fladd@bexp& (0+255),w,b
  6134  001512  6F92               	movwf	(___fladd@b+3)& (0+255),b
  6135  001514                     
  6136                           ; BSR set to: 0
  6137  001514  AF9B               	btfss	___fladd@signs& (0+255),7,b
  6138  001516  EF8F  F00A         	goto	u3341
  6139  00151A  EF91  F00A         	goto	u3340
  6140  00151E                     u3341:
  6141  00151E  EF92  F00A         	goto	l4733
  6142  001522                     u3340:
  6143  001522                     
  6144                           ; BSR set to: 0
  6145  001522  8F92               	bsf	(___fladd@b+3)& (0+255),7,b
  6146  001524                     l4733:
  6147                           
  6148                           ; BSR set to: 0
  6149  001524  C08F  F08F         	movff	___fladd@b,?___fladd
  6150  001528  C090  F090         	movff	___fladd@b+1,?___fladd+1
  6151  00152C  C091  F091         	movff	___fladd@b+2,?___fladd+2
  6152  001530  C092  F092         	movff	___fladd@b+3,?___fladd+3
  6153  001534                     l1885:
  6154                           
  6155                           ; BSR set to: 0
  6156  001534  0012               	return		;funcret
  6157  001536                     __end_of___fladd:
  6158                           	callstack 0
  6159                           
  6160 ;; *************** function _calcMotorPow *****************
  6161 ;; Defined at:
  6162 ;;		line 317 in file "main.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  oldSpeedDelt    2   75[BANK0 ] short 
  6167 ;;  setSpeedDelt    2   73[BANK0 ] short 
  6168 ;;  addMPow         1   77[BANK0 ] char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        7 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 10
  6185 ;; This function calls:
  6186 ;;		___awdiv
  6187 ;;		___flmul
  6188 ;;		___fltol
  6189 ;;		___xxtofl
  6190 ;;		_actSpeed
  6191 ;;		_setMotor
  6192 ;; This function is called by:
  6193 ;;		_loop
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text25
  6198  002AE2                     __ptext25:
  6199                           	callstack 0
  6200  002AE2                     _calcMotorPow:
  6201                           	callstack 19
  6202  002AE2                     
  6203                           ;main.c: 318:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  6204  002AE2  0100               	movlb	0	; () banked
  6205  002AE4  51DE               	movf	_currentSpeed& (0+255),w,b
  6206  002AE6  5DE0               	subwf	_setSpeed& (0+255),w,b
  6207  002AE8  6FA9               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  6208  002AEA  51DF               	movf	(_currentSpeed+1)& (0+255),w,b
  6209  002AEC  59E1               	subwfb	(_setSpeed+1)& (0+255),w,b
  6210  002AEE  6FAA               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  6211                           
  6212                           ;main.c: 319:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  6213  002AF0  51DC               	movf	_oldSpeed& (0+255),w,b
  6214  002AF2  5DDE               	subwf	_currentSpeed& (0+255),w,b
  6215  002AF4  6FAB               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  6216  002AF6  51DD               	movf	(_oldSpeed+1)& (0+255),w,b
  6217  002AF8  59DF               	subwfb	(_currentSpeed+1)& (0+255),w,b
  6218  002AFA  6FAC               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  6219  002AFC                     
  6220                           ; BSR set to: 0
  6221                           ;main.c: 322:     currentSpeed = actSpeed();
  6222  002AFC  ECF5  F019         	call	_actSpeed	;wreg free
  6223  002B00  C020  F0DE         	movff	?_actSpeed,_currentSpeed
  6224  002B04  C021  F0DF         	movff	?_actSpeed+1,_currentSpeed+1
  6225  002B08                     
  6226                           ;main.c: 326:  addMPow = (int8_t)((0.025) * (setSpeedDelta - (oldSpeedDelta / (2))));
  6227  002B08  0ECD               	movlw	205
  6228  002B0A  0100               	movlb	0	; () banked
  6229  002B0C  6F7A               	movwf	___flmul@a& (0+255),b
  6230  002B0E  0ECC               	movlw	204
  6231  002B10  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  6232  002B12  0ECC               	movlw	204
  6233  002B14  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  6234  002B16  0E3C               	movlw	60
  6235  002B18  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  6236  002B1A  0E00               	movlw	0
  6237  002B1C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6238  002B1E  0E02               	movlw	2
  6239  002B20  6F62               	movwf	___awdiv@divisor& (0+255),b
  6240  002B22  C0AB  F060         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  6241  002B26  C0AC  F061         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  6242  002B2A  ECE0  F018         	call	___awdiv	;wreg free
  6243  002B2E  C0A9  F0A7         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  6244  002B32  C0AA  F0A8         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  6245  002B36  0100               	movlb	0	; () banked
  6246  002B38  5160               	movf	?___awdiv& (0+255),w,b
  6247  002B3A  5FA7               	subwf	??_calcMotorPow& (0+255),f,b
  6248  002B3C  5161               	movf	(?___awdiv+1)& (0+255),w,b
  6249  002B3E  5BA8               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  6250  002B40  C0A7  F068         	movff	??_calcMotorPow,___xxtofl@val
  6251  002B44  C0A8  F069         	movff	??_calcMotorPow+1,___xxtofl@val+1
  6252  002B48  0E00               	movlw	0
  6253  002B4A  BF69               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  6254  002B4C  0EFF               	movlw	-1
  6255  002B4E  6F6A               	movwf	(___xxtofl@val+2)& (0+255),b
  6256  002B50  6F6B               	movwf	(___xxtofl@val+3)& (0+255),b
  6257  002B52  0E01               	movlw	1
  6258  002B54  EC83  F011         	call	___xxtofl
  6259  002B58  C068  F076         	movff	?___xxtofl,___flmul@b
  6260  002B5C  C069  F077         	movff	?___xxtofl+1,___flmul@b+1
  6261  002B60  C06A  F078         	movff	?___xxtofl+2,___flmul@b+2
  6262  002B64  C06B  F079         	movff	?___xxtofl+3,___flmul@b+3
  6263  002B68  EC9B  F00A         	call	___flmul	;wreg free
  6264  002B6C  C076  F09F         	movff	?___flmul,___fltol@f1
  6265  002B70  C077  F0A0         	movff	?___flmul+1,___fltol@f1+1
  6266  002B74  C078  F0A1         	movff	?___flmul+2,___fltol@f1+2
  6267  002B78  C079  F0A2         	movff	?___flmul+3,___fltol@f1+3
  6268  002B7C  EC9D  F016         	call	___fltol	;wreg free
  6269  002B80  0100               	movlb	0	; () banked
  6270  002B82  519F               	movf	?___fltol& (0+255),w,b
  6271  002B84  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6272  002B86                     
  6273                           ; BSR set to: 0
  6274                           ;main.c: 328:     if(addMPow > (2)){
  6275  002B86  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  6276  002B88  0A80               	xorlw	128
  6277  002B8A  0F7D               	addlw	-131
  6278  002B8C  A0D8               	btfss	status,0,c
  6279  002B8E  EFCB  F015         	goto	u5621
  6280  002B92  EFCD  F015         	goto	u5620
  6281  002B96                     u5621:
  6282  002B96  EFD1  F015         	goto	l6479
  6283  002B9A                     u5620:
  6284  002B9A                     
  6285                           ; BSR set to: 0
  6286                           ;main.c: 329:         addMPow = (2);
  6287  002B9A  0E02               	movlw	2
  6288  002B9C  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6289                           
  6290                           ;main.c: 330:     }else if(addMPow < -(2)){
  6291  002B9E  EFDD  F015         	goto	l6483
  6292  002BA2                     l6479:
  6293                           
  6294                           ; BSR set to: 0
  6295  002BA2  51AD               	movf	calcMotorPow@addMPow& (0+255),w,b
  6296  002BA4  0A80               	xorlw	128
  6297  002BA6  0F82               	addlw	130
  6298  002BA8  B0D8               	btfsc	status,0,c
  6299  002BAA  EFD9  F015         	goto	u5631
  6300  002BAE  EFDB  F015         	goto	u5630
  6301  002BB2                     u5631:
  6302  002BB2  EFDD  F015         	goto	l6483
  6303  002BB6                     u5630:
  6304  002BB6                     
  6305                           ; BSR set to: 0
  6306                           ;main.c: 331:         addMPow = -(2);
  6307  002BB6  0EFE               	movlw	254
  6308  002BB8  6FAD               	movwf	calcMotorPow@addMPow& (0+255),b
  6309  002BBA                     l6483:
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;main.c: 334:  actMotorPow = actMotorPow + addMPow;
  6313  002BBA  51DA               	movf	_actMotorPow& (0+255),w,b
  6314  002BBC  25AD               	addwf	calcMotorPow@addMPow& (0+255),w,b
  6315  002BBE  6FDA               	movwf	_actMotorPow& (0+255),b
  6316  002BC0  0E00               	movlw	0
  6317  002BC2  BFAD               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  6318  002BC4  0EFF               	movlw	255
  6319  002BC6  21DB               	addwfc	(_actMotorPow+1)& (0+255),w,b
  6320  002BC8  6FDB               	movwf	(_actMotorPow+1)& (0+255),b
  6321  002BCA                     
  6322                           ; BSR set to: 0
  6323                           ;main.c: 336:  if(actMotorPow > (700)){
  6324  002BCA  BFDB               	btfsc	(_actMotorPow+1)& (0+255),7,b
  6325  002BCC  EFF1  F015         	goto	u5641
  6326  002BD0  0EBD               	movlw	189
  6327  002BD2  5DDA               	subwf	_actMotorPow& (0+255),w,b
  6328  002BD4  0E02               	movlw	2
  6329  002BD6  59DB               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6330  002BD8  A0D8               	btfss	status,0,c
  6331  002BDA  EFF1  F015         	goto	u5641
  6332  002BDE  EFF3  F015         	goto	u5640
  6333  002BE2                     u5641:
  6334  002BE2  EFF9  F015         	goto	l6489
  6335  002BE6                     u5640:
  6336  002BE6                     
  6337                           ; BSR set to: 0
  6338                           ;main.c: 337:   actMotorPow = (700);
  6339  002BE6  0E02               	movlw	2
  6340  002BE8  6FDB               	movwf	(_actMotorPow+1)& (0+255),b
  6341  002BEA  0EBC               	movlw	188
  6342  002BEC  6FDA               	movwf	_actMotorPow& (0+255),b
  6343                           
  6344                           ;main.c: 338:  }else if(actMotorPow < (-300)){
  6345  002BEE  EF0B  F016         	goto	l6493
  6346  002BF2                     l6489:
  6347                           
  6348                           ; BSR set to: 0
  6349  002BF2  AFDB               	btfss	(_actMotorPow+1)& (0+255),7,b
  6350  002BF4  EF05  F016         	goto	u5651
  6351  002BF8  0ED4               	movlw	212
  6352  002BFA  5DDA               	subwf	_actMotorPow& (0+255),w,b
  6353  002BFC  0EFE               	movlw	254
  6354  002BFE  59DB               	subwfb	(_actMotorPow+1)& (0+255),w,b
  6355  002C00  B0D8               	btfsc	status,0,c
  6356  002C02  EF05  F016         	goto	u5651
  6357  002C06  EF07  F016         	goto	u5650
  6358  002C0A                     u5651:
  6359  002C0A  EF0B  F016         	goto	l6493
  6360  002C0E                     u5650:
  6361  002C0E                     
  6362                           ; BSR set to: 0
  6363                           ;main.c: 339:   actMotorPow = (-300);
  6364  002C0E  0EFE               	movlw	254
  6365  002C10  6FDB               	movwf	(_actMotorPow+1)& (0+255),b
  6366  002C12  0ED4               	movlw	212
  6367  002C14  6FDA               	movwf	_actMotorPow& (0+255),b
  6368  002C16                     l6493:
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;main.c: 342:     setMotor(actMotorPow);
  6372  002C16  C0DA  F062         	movff	_actMotorPow,setMotor@motorPower
  6373  002C1A  C0DB  F063         	movff	_actMotorPow+1,setMotor@motorPower+1
  6374  002C1E  ECA4  F017         	call	_setMotor	;wreg free
  6375  002C22                     
  6376                           ;main.c: 344:     oldSpeed = currentSpeed;
  6377  002C22  C0DE  F0DC         	movff	_currentSpeed,_oldSpeed
  6378  002C26  C0DF  F0DD         	movff	_currentSpeed+1,_oldSpeed+1
  6379  002C2A  0012               	return		;funcret
  6380  002C2C                     __end_of_calcMotorPow:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function _setMotor *****************
  6384 ;; Defined at:
  6385 ;;		line 348 in file "main.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;  motorPower      2    2[BANK0 ] short 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        4 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 9
  6406 ;; This function calls:
  6407 ;;		_PWM7_LoadDutyValue
  6408 ;;		_PWM8_LoadDutyValue
  6409 ;; This function is called by:
  6410 ;;		_calcMotorPow
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text26
  6415  002F48                     __ptext26:
  6416                           	callstack 0
  6417  002F48                     _setMotor:
  6418                           	callstack 19
  6419  002F48                     
  6420                           ;main.c: 349:     if(motorPower > (50)){
  6421  002F48  0100               	movlb	0	; () banked
  6422  002F4A  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6423  002F4C  EFB1  F017         	goto	u5061
  6424  002F50  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  6425  002F52  E109               	bnz	u5060
  6426  002F54  0E33               	movlw	51
  6427  002F56  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6428  002F58  A0D8               	btfss	status,0,c
  6429  002F5A  EFB1  F017         	goto	u5061
  6430  002F5E  EFB3  F017         	goto	u5060
  6431  002F62                     u5061:
  6432  002F62  EFD3  F017         	goto	l6087
  6433  002F66                     u5060:
  6434  002F66                     
  6435                           ; BSR set to: 0
  6436                           ;main.c: 350:        if(motorPower > (700)){
  6437  002F66  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6438  002F68  EFBF  F017         	goto	u5071
  6439  002F6C  0EBD               	movlw	189
  6440  002F6E  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6441  002F70  0E02               	movlw	2
  6442  002F72  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6443  002F74  A0D8               	btfss	status,0,c
  6444  002F76  EFBF  F017         	goto	u5071
  6445  002F7A  EFC1  F017         	goto	u5070
  6446  002F7E                     u5071:
  6447  002F7E  EFC5  F017         	goto	l6083
  6448  002F82                     u5070:
  6449  002F82                     
  6450                           ; BSR set to: 0
  6451                           ;main.c: 351:             motorPower = (700);
  6452  002F82  0E02               	movlw	2
  6453  002F84  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6454  002F86  0EBC               	movlw	188
  6455  002F88  6F62               	movwf	setMotor@motorPower& (0+255),b
  6456  002F8A                     l6083:
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;main.c: 353:         PWM7_LoadDutyValue((uint16_t)(motorPower));
  6460  002F8A  C062  F020         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  6461  002F8E  C063  F021         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  6462  002F92  EC7D  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6463  002F96                     
  6464                           ;main.c: 354:         PWM8_LoadDutyValue(0);
  6465  002F96  0E00               	movlw	0
  6466  002F98  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6467  002F9A  0E00               	movlw	0
  6468  002F9C  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6469  002F9E  EC62  F01E         	call	_PWM8_LoadDutyValue	;wreg free
  6470                           
  6471                           ;main.c: 355:     } else if(motorPower < (50)){
  6472  002FA2  EF16  F018         	goto	l1345
  6473  002FA6                     l6087:
  6474                           
  6475                           ; BSR set to: 0
  6476  002FA6  BF63               	btfsc	(setMotor@motorPower+1)& (0+255),7,b
  6477  002FA8  EFE1  F017         	goto	u5080
  6478  002FAC  5163               	movf	(setMotor@motorPower+1)& (0+255),w,b
  6479  002FAE  E107               	bnz	u5081
  6480  002FB0  0E32               	movlw	50
  6481  002FB2  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6482  002FB4  B0D8               	btfsc	status,0,c
  6483  002FB6  EFDF  F017         	goto	u5081
  6484  002FBA  EFE1  F017         	goto	u5080
  6485  002FBE                     u5081:
  6486  002FBE  EF0A  F018         	goto	l6097
  6487  002FC2                     u5080:
  6488  002FC2                     
  6489                           ; BSR set to: 0
  6490                           ;main.c: 356:         if(motorPower < (-300)){
  6491  002FC2  AF63               	btfss	(setMotor@motorPower+1)& (0+255),7,b
  6492  002FC4  EFED  F017         	goto	u5091
  6493  002FC8  0ED4               	movlw	212
  6494  002FCA  5D62               	subwf	setMotor@motorPower& (0+255),w,b
  6495  002FCC  0EFE               	movlw	254
  6496  002FCE  5963               	subwfb	(setMotor@motorPower+1)& (0+255),w,b
  6497  002FD0  B0D8               	btfsc	status,0,c
  6498  002FD2  EFED  F017         	goto	u5091
  6499  002FD6  EFEF  F017         	goto	u5090
  6500  002FDA                     u5091:
  6501  002FDA  EFF3  F017         	goto	l6093
  6502  002FDE                     u5090:
  6503  002FDE                     
  6504                           ; BSR set to: 0
  6505                           ;main.c: 357:             motorPower = (-300);
  6506  002FDE  0EFE               	movlw	254
  6507  002FE0  6F63               	movwf	(setMotor@motorPower+1)& (0+255),b
  6508  002FE2  0ED4               	movlw	212
  6509  002FE4  6F62               	movwf	setMotor@motorPower& (0+255),b
  6510  002FE6                     l6093:
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;main.c: 359:         PWM7_LoadDutyValue(0);
  6514  002FE6  0E00               	movlw	0
  6515  002FE8  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6516  002FEA  0E00               	movlw	0
  6517  002FEC  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6518  002FEE  EC7D  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6519  002FF2                     
  6520                           ;main.c: 360:         PWM8_LoadDutyValue((uint16_t)(-motorPower));
  6521  002FF2  C062  F064         	movff	setMotor@motorPower,??_setMotor
  6522  002FF6  C063  F065         	movff	setMotor@motorPower+1,??_setMotor+1
  6523  002FFA  0100               	movlb	0	; () banked
  6524  002FFC  1F64               	comf	??_setMotor& (0+255),f,b
  6525  002FFE  1F65               	comf	(??_setMotor+1)& (0+255),f,b
  6526  003000  4B64               	infsnz	??_setMotor& (0+255),f,b
  6527  003002  2B65               	incf	(??_setMotor+1)& (0+255),f,b
  6528  003004  C064  F020         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  6529  003008  C065  F021         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  6530  00300C  EC62  F01E         	call	_PWM8_LoadDutyValue	;wreg free
  6531                           
  6532                           ;main.c: 361:     } else {
  6533  003010  EF16  F018         	goto	l1345
  6534  003014                     l6097:
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;main.c: 362:         PWM7_LoadDutyValue(0);
  6538  003014  0E00               	movlw	0
  6539  003016  6E21               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  6540  003018  0E00               	movlw	0
  6541  00301A  6E20               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  6542  00301C  EC7D  F01E         	call	_PWM7_LoadDutyValue	;wreg free
  6543                           
  6544                           ;main.c: 363:         PWM8_LoadDutyValue(0);
  6545  003020  0E00               	movlw	0
  6546  003022  6E21               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  6547  003024  0E00               	movlw	0
  6548  003026  6E20               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  6549  003028  EC62  F01E         	call	_PWM8_LoadDutyValue	;wreg free
  6550  00302C                     l1345:
  6551  00302C  0012               	return		;funcret
  6552  00302E                     __end_of_setMotor:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _PWM8_LoadDutyValue *****************
  6556 ;; Defined at:
  6557 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;Total ram usage:        4 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 8
  6578 ;; This function calls:
  6579 ;;		Nothing
  6580 ;; This function is called by:
  6581 ;;		_setMotor
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text27
  6586  003CC4                     __ptext27:
  6587                           	callstack 0
  6588  003CC4                     _PWM8_LoadDutyValue:
  6589                           	callstack 19
  6590  003CC4                     
  6591                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6592  003CC4  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6593  003CC8  C021  F061         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  6594  003CCC  0100               	movlb	0	; () banked
  6595  003CCE  90D8               	bcf	status,0,c
  6596  003CD0  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6597  003CD2  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6598  003CD4  90D8               	bcf	status,0,c
  6599  003CD6  3361               	rrcf	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6600  003CD8  3360               	rrcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6601  003CDA  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6602  003CDC  6E61               	movwf	97,c	;volatile
  6603                           
  6604                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  6605  003CDE  C020  F060         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  6606  003CE2  0E03               	movlw	3
  6607  003CE4  1760               	andwf	??_PWM8_LoadDutyValue& (0+255),f,b
  6608  003CE6  0E06               	movlw	6
  6609  003CE8  6F61               	movwf	(??_PWM8_LoadDutyValue+1)& (0+255),b
  6610  003CEA                     u4835:
  6611  003CEA  90D8               	bcf	status,0,c
  6612  003CEC  3760               	rlcf	??_PWM8_LoadDutyValue& (0+255),f,b
  6613  003CEE  2F61               	decfsz	(??_PWM8_LoadDutyValue+1)& (0+255),f,b
  6614  003CF0  EF75  F01E         	goto	u4835
  6615  003CF4  5160               	movf	??_PWM8_LoadDutyValue& (0+255),w,b
  6616  003CF6  6E60               	movwf	96,c	;volatile
  6617  003CF8                     
  6618                           ; BSR set to: 0
  6619  003CF8  0012               	return		;funcret
  6620  003CFA                     __end_of_PWM8_LoadDutyValue:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _PWM7_LoadDutyValue *****************
  6624 ;; Defined at:
  6625 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  dutyValue       2   31[COMRAM] unsigned short 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6642 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;Total ram usage:        4 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 8
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_setMotor
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text28
  6654  003CFA                     __ptext28:
  6655                           	callstack 0
  6656  003CFA                     _PWM7_LoadDutyValue:
  6657                           	callstack 19
  6658  003CFA                     
  6659                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  6660  003CFA  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6661  003CFE  C021  F061         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  6662  003D02  0100               	movlb	0	; () banked
  6663  003D04  90D8               	bcf	status,0,c
  6664  003D06  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6665  003D08  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6666  003D0A  90D8               	bcf	status,0,c
  6667  003D0C  3361               	rrcf	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6668  003D0E  3360               	rrcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6669  003D10  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6670  003D12  6E65               	movwf	101,c	;volatile
  6671                           
  6672                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  6673  003D14  C020  F060         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  6674  003D18  0E03               	movlw	3
  6675  003D1A  1760               	andwf	??_PWM7_LoadDutyValue& (0+255),f,b
  6676  003D1C  0E06               	movlw	6
  6677  003D1E  6F61               	movwf	(??_PWM7_LoadDutyValue+1)& (0+255),b
  6678  003D20                     u4825:
  6679  003D20  90D8               	bcf	status,0,c
  6680  003D22  3760               	rlcf	??_PWM7_LoadDutyValue& (0+255),f,b
  6681  003D24  2F61               	decfsz	(??_PWM7_LoadDutyValue+1)& (0+255),f,b
  6682  003D26  EF90  F01E         	goto	u4825
  6683  003D2A  5160               	movf	??_PWM7_LoadDutyValue& (0+255),w,b
  6684  003D2C  6E64               	movwf	100,c	;volatile
  6685  003D2E                     
  6686                           ; BSR set to: 0
  6687  003D2E  0012               	return		;funcret
  6688  003D30                     __end_of_PWM7_LoadDutyValue:
  6689                           	callstack 0
  6690                           
  6691 ;; *************** function _actSpeed *****************
  6692 ;; Defined at:
  6693 ;;		line 62 in file "main.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  speed           2   14[BANK0 ] short 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  2   31[COMRAM] short 
  6700 ;; Registers used:
  6701 ;;		wreg, status,2, status,0, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6711 ;;Total ram usage:        4 bytes
  6712 ;; Hardware stack levels used: 1
  6713 ;; Hardware stack levels required when called: 9
  6714 ;; This function calls:
  6715 ;;		___aldiv
  6716 ;; This function is called by:
  6717 ;;		_calcMotorPow
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text29
  6722  0033EA                     __ptext29:
  6723                           	callstack 0
  6724  0033EA                     _actSpeed:
  6725                           	callstack 19
  6726  0033EA                     
  6727                           ;main.c: 63:     int16_t speed = 0;
  6728  0033EA  0E00               	movlw	0
  6729  0033EC  0100               	movlb	0	; () banked
  6730  0033EE  6F6F               	movwf	(actSpeed@speed+1)& (0+255),b
  6731  0033F0  0E00               	movlw	0
  6732  0033F2  6F6E               	movwf	actSpeed@speed& (0+255),b
  6733  0033F4                     
  6734                           ; BSR set to: 0
  6735                           ;main.c: 64:     if(smtPeriod){
  6736  0033F4  5034               	movf	_smtPeriod^0,w,c	;volatile
  6737  0033F6  1035               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  6738  0033F8  1036               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  6739  0033FA  1037               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  6740  0033FC  B4D8               	btfsc	status,2,c
  6741  0033FE  EF03  F01A         	goto	u5001
  6742  003402  EF05  F01A         	goto	u5000
  6743  003406                     u5001:
  6744  003406  EF3D  F01A         	goto	l6031
  6745  00340A                     u5000:
  6746  00340A                     
  6747                           ; BSR set to: 0
  6748                           ;main.c: 65:         if(CLC3CONbits.LC3OUT){
  6749  00340A  013C               	movlb	60	; () banked
  6750  00340C  AB60               	btfss	96,5,b	;volatile
  6751  00340E  EF0B  F01A         	goto	u5011
  6752  003412  EF0D  F01A         	goto	u5010
  6753  003416                     u5011:
  6754  003416  EF26  F01A         	goto	l6029
  6755  00341A                     u5010:
  6756  00341A                     
  6757                           ; BSR set to: 60
  6758                           ;main.c: 66:             speed = (int16_t)((int32_t)(500000 / (int32_t)smtPeriod));
  6759  00341A  0E20               	movlw	32
  6760  00341C  0100               	movlb	0	; () banked
  6761  00341E  6F60               	movwf	___aldiv@dividend& (0+255),b
  6762  003420  0EA1               	movlw	161
  6763  003422  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6764  003424  0E07               	movlw	7
  6765  003426  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6766  003428  0E00               	movlw	0
  6767  00342A  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6768  00342C  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6769  003430  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6770  003434  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6771  003438  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6772  00343C  EC16  F016         	call	___aldiv	;wreg free
  6773  003440  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6774  003444  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6775                           
  6776                           ;main.c: 67:         } else {
  6777  003448  EF3D  F01A         	goto	l6031
  6778  00344C                     l6029:
  6779                           
  6780                           ; BSR set to: 60
  6781                           ;main.c: 68:             speed = (int16_t)((int32_t)(-500000 / (int32_t)smtPeriod));
  6782  00344C  0EE0               	movlw	224
  6783  00344E  0100               	movlb	0	; () banked
  6784  003450  6F60               	movwf	___aldiv@dividend& (0+255),b
  6785  003452  0E5E               	movlw	94
  6786  003454  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
  6787  003456  0EF8               	movlw	248
  6788  003458  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
  6789  00345A  0EFF               	movlw	255
  6790  00345C  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
  6791  00345E  C034  F064         	movff	_smtPeriod,___aldiv@divisor	;volatile
  6792  003462  C035  F065         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  6793  003466  C036  F066         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  6794  00346A  C037  F067         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  6795  00346E  EC16  F016         	call	___aldiv	;wreg free
  6796  003472  C060  F06E         	movff	?___aldiv,actSpeed@speed
  6797  003476  C061  F06F         	movff	?___aldiv+1,actSpeed@speed+1
  6798  00347A                     l6031:
  6799                           
  6800                           ;main.c: 71:     return speed;
  6801  00347A  C06E  F020         	movff	actSpeed@speed,?_actSpeed
  6802  00347E  C06F  F021         	movff	actSpeed@speed+1,?_actSpeed+1
  6803  003482  0012               	return		;funcret
  6804  003484                     __end_of_actSpeed:
  6805                           	callstack 0
  6806                           
  6807 ;; *************** function ___aldiv *****************
  6808 ;; Defined at:
  6809 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aldiv.c"
  6810 ;; Parameters:    Size  Location     Type
  6811 ;;  dividend        4    0[BANK0 ] long 
  6812 ;;  divisor         4    4[BANK0 ] long 
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;  quotient        4   10[BANK0 ] long 
  6815 ;;  sign            1    9[BANK0 ] unsigned char 
  6816 ;;  counter         1    8[BANK0 ] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  4    0[BANK0 ] long 
  6819 ;; Registers used:
  6820 ;;		wreg, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6826 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;Total ram usage:       14 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; Hardware stack levels required when called: 8
  6833 ;; This function calls:
  6834 ;;		Nothing
  6835 ;; This function is called by:
  6836 ;;		_actSpeed
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text30
  6841  002C2C                     __ptext30:
  6842                           	callstack 0
  6843  002C2C                     ___aldiv:
  6844                           	callstack 19
  6845  002C2C  0E00               	movlw	0
  6846  002C2E  0100               	movlb	0	; () banked
  6847  002C30  6F69               	movwf	___aldiv@sign& (0+255),b
  6848  002C32                     
  6849                           ; BSR set to: 0
  6850  002C32  BF67               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  6851  002C34  EF20  F016         	goto	u4860
  6852  002C38  EF1E  F016         	goto	u4861
  6853  002C3C                     u4861:
  6854  002C3C  EF2A  F016         	goto	l5921
  6855  002C40                     u4860:
  6856  002C40                     
  6857                           ; BSR set to: 0
  6858  002C40  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  6859  002C42  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  6860  002C44  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  6861  002C46  6D64               	negf	___aldiv@divisor& (0+255),b
  6862  002C48  0E00               	movlw	0
  6863  002C4A  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  6864  002C4C  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  6865  002C4E  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  6866  002C50                     
  6867                           ; BSR set to: 0
  6868  002C50  0E01               	movlw	1
  6869  002C52  6F69               	movwf	___aldiv@sign& (0+255),b
  6870  002C54                     l5921:
  6871                           
  6872                           ; BSR set to: 0
  6873  002C54  BF63               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  6874  002C56  EF31  F016         	goto	u4870
  6875  002C5A  EF2F  F016         	goto	u4871
  6876  002C5E                     u4871:
  6877  002C5E  EF3B  F016         	goto	l5927
  6878  002C62                     u4870:
  6879  002C62                     
  6880                           ; BSR set to: 0
  6881  002C62  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  6882  002C64  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  6883  002C66  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  6884  002C68  6D60               	negf	___aldiv@dividend& (0+255),b
  6885  002C6A  0E00               	movlw	0
  6886  002C6C  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  6887  002C6E  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  6888  002C70  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  6889  002C72                     
  6890                           ; BSR set to: 0
  6891  002C72  0E01               	movlw	1
  6892  002C74  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  6893  002C76                     l5927:
  6894                           
  6895                           ; BSR set to: 0
  6896  002C76  0E00               	movlw	0
  6897  002C78  6F6A               	movwf	___aldiv@quotient& (0+255),b
  6898  002C7A  0E00               	movlw	0
  6899  002C7C  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  6900  002C7E  0E00               	movlw	0
  6901  002C80  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  6902  002C82  0E00               	movlw	0
  6903  002C84  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  6904  002C86                     
  6905                           ; BSR set to: 0
  6906  002C86  5164               	movf	___aldiv@divisor& (0+255),w,b
  6907  002C88  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  6908  002C8A  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  6909  002C8C  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  6910  002C8E  B4D8               	btfsc	status,2,c
  6911  002C90  EF4C  F016         	goto	u4881
  6912  002C94  EF4E  F016         	goto	u4880
  6913  002C98                     u4881:
  6914  002C98  EF84  F016         	goto	l5949
  6915  002C9C                     u4880:
  6916  002C9C                     
  6917                           ; BSR set to: 0
  6918  002C9C  0E01               	movlw	1
  6919  002C9E  6F68               	movwf	___aldiv@counter& (0+255),b
  6920  002CA0  EF58  F016         	goto	l5935
  6921  002CA4                     l5933:
  6922                           
  6923                           ; BSR set to: 0
  6924  002CA4  90D8               	bcf	status,0,c
  6925  002CA6  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  6926  002CA8  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  6927  002CAA  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  6928  002CAC  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  6929  002CAE  2B68               	incf	___aldiv@counter& (0+255),f,b
  6930  002CB0                     l5935:
  6931                           
  6932                           ; BSR set to: 0
  6933  002CB0  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  6934  002CB2  EF5D  F016         	goto	u4891
  6935  002CB6  EF5F  F016         	goto	u4890
  6936  002CBA                     u4891:
  6937  002CBA  EF52  F016         	goto	l5933
  6938  002CBE                     u4890:
  6939  002CBE                     l5937:
  6940                           
  6941                           ; BSR set to: 0
  6942  002CBE  90D8               	bcf	status,0,c
  6943  002CC0  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  6944  002CC2  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  6945  002CC4  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  6946  002CC6  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  6947  002CC8                     
  6948                           ; BSR set to: 0
  6949  002CC8  5164               	movf	___aldiv@divisor& (0+255),w,b
  6950  002CCA  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  6951  002CCC  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6952  002CCE  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  6953  002CD0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6954  002CD2  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  6955  002CD4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6956  002CD6  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  6957  002CD8  A0D8               	btfss	status,0,c
  6958  002CDA  EF71  F016         	goto	u4901
  6959  002CDE  EF73  F016         	goto	u4900
  6960  002CE2                     u4901:
  6961  002CE2  EF7C  F016         	goto	l5945
  6962  002CE6                     u4900:
  6963  002CE6                     
  6964                           ; BSR set to: 0
  6965  002CE6  5164               	movf	___aldiv@divisor& (0+255),w,b
  6966  002CE8  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  6967  002CEA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  6968  002CEC  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  6969  002CEE  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  6970  002CF0  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  6971  002CF2  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  6972  002CF4  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  6973  002CF6                     
  6974                           ; BSR set to: 0
  6975  002CF6  816A               	bsf	___aldiv@quotient& (0+255),0,b
  6976  002CF8                     l5945:
  6977                           
  6978                           ; BSR set to: 0
  6979  002CF8  90D8               	bcf	status,0,c
  6980  002CFA  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  6981  002CFC  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  6982  002CFE  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  6983  002D00  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  6984  002D02                     
  6985                           ; BSR set to: 0
  6986  002D02  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  6987  002D04  EF5F  F016         	goto	l5937
  6988  002D08                     l5949:
  6989                           
  6990                           ; BSR set to: 0
  6991  002D08  5169               	movf	___aldiv@sign& (0+255),w,b
  6992  002D0A  B4D8               	btfsc	status,2,c
  6993  002D0C  EF8A  F016         	goto	u4911
  6994  002D10  EF8C  F016         	goto	u4910
  6995  002D14                     u4911:
  6996  002D14  EF94  F016         	goto	l5953
  6997  002D18                     u4910:
  6998  002D18                     
  6999                           ; BSR set to: 0
  7000  002D18  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7001  002D1A  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7002  002D1C  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7003  002D1E  6D6A               	negf	___aldiv@quotient& (0+255),b
  7004  002D20  0E00               	movlw	0
  7005  002D22  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7006  002D24  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7007  002D26  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7008  002D28                     l5953:
  7009                           
  7010                           ; BSR set to: 0
  7011  002D28  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  7012  002D2C  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  7013  002D30  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  7014  002D34  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  7015  002D38                     
  7016                           ; BSR set to: 0
  7017  002D38  0012               	return		;funcret
  7018  002D3A                     __end_of___aldiv:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function ___xxtofl *****************
  7022 ;; Defined at:
  7023 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  sign            1    wreg     unsigned char 
  7026 ;;  val             4    8[BANK0 ] long 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  sign            1   16[BANK0 ] unsigned char 
  7029 ;;  arg             4   18[BANK0 ] unsigned long 
  7030 ;;  exp             1   17[BANK0 ] unsigned char 
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  4    8[BANK0 ] unsigned char 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7040 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7041 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7042 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7043 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;Total ram usage:       14 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 8
  7047 ;; This function calls:
  7048 ;;		Nothing
  7049 ;; This function is called by:
  7050 ;;		_loop
  7051 ;;		_calcSpeed
  7052 ;;		_calcMotorPow
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text31
  7057  002306                     __ptext31:
  7058                           	callstack 0
  7059  002306                     ___xxtofl:
  7060                           	callstack 20
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;incstack = 0
  7064                           ;___xxtofl@sign stored from wreg
  7065  002306  0100               	movlb	0	; () banked
  7066  002308  6F70               	movwf	___xxtofl@sign& (0+255),b
  7067  00230A  0100               	movlb	0	; () banked
  7068  00230C  5170               	movf	___xxtofl@sign& (0+255),w,b
  7069  00230E  B4D8               	btfsc	status,2,c
  7070  002310  EF8C  F011         	goto	u5291
  7071  002314  EF8E  F011         	goto	u5290
  7072  002318                     u5291:
  7073  002318  EFB0  F011         	goto	l2003
  7074  00231C                     u5290:
  7075  00231C                     
  7076                           ; BSR set to: 0
  7077  00231C  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7078  00231E  EF95  F011         	goto	u5300
  7079  002322  EF93  F011         	goto	u5301
  7080  002326                     u5301:
  7081  002326  EFB0  F011         	goto	l2003
  7082  00232A                     u5300:
  7083  00232A                     
  7084                           ; BSR set to: 0
  7085  00232A  C068  F06C         	movff	___xxtofl@val,??___xxtofl
  7086  00232E  C069  F06D         	movff	___xxtofl@val+1,??___xxtofl+1
  7087  002332  C06A  F06E         	movff	___xxtofl@val+2,??___xxtofl+2
  7088  002336  C06B  F06F         	movff	___xxtofl@val+3,??___xxtofl+3
  7089  00233A  1F6C               	comf	??___xxtofl& (0+255),f,b
  7090  00233C  1F6D               	comf	(??___xxtofl+1)& (0+255),f,b
  7091  00233E  1F6E               	comf	(??___xxtofl+2)& (0+255),f,b
  7092  002340  1F6F               	comf	(??___xxtofl+3)& (0+255),f,b
  7093  002342  2B6C               	incf	??___xxtofl& (0+255),f,b
  7094  002344  0E00               	movlw	0
  7095  002346  236D               	addwfc	(??___xxtofl+1)& (0+255),f,b
  7096  002348  236E               	addwfc	(??___xxtofl+2)& (0+255),f,b
  7097  00234A  236F               	addwfc	(??___xxtofl+3)& (0+255),f,b
  7098  00234C  C06C  F072         	movff	??___xxtofl,___xxtofl@arg
  7099  002350  C06D  F073         	movff	??___xxtofl+1,___xxtofl@arg+1
  7100  002354  C06E  F074         	movff	??___xxtofl+2,___xxtofl@arg+2
  7101  002358  C06F  F075         	movff	??___xxtofl+3,___xxtofl@arg+3
  7102  00235C  EFB8  F011         	goto	l6235
  7103  002360                     l2003:
  7104                           
  7105                           ; BSR set to: 0
  7106  002360  C068  F072         	movff	___xxtofl@val,___xxtofl@arg
  7107  002364  C069  F073         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7108  002368  C06A  F074         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7109  00236C  C06B  F075         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7110  002370                     l6235:
  7111                           
  7112                           ; BSR set to: 0
  7113  002370  5168               	movf	___xxtofl@val& (0+255),w,b
  7114  002372  1169               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  7115  002374  116A               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  7116  002376  116B               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  7117  002378  A4D8               	btfss	status,2,c
  7118  00237A  EFC1  F011         	goto	u5311
  7119  00237E  EFC3  F011         	goto	u5310
  7120  002382                     u5311:
  7121  002382  EFCD  F011         	goto	l6241
  7122  002386                     u5310:
  7123  002386                     
  7124                           ; BSR set to: 0
  7125  002386  0E00               	movlw	0
  7126  002388  6F68               	movwf	?___xxtofl& (0+255),b
  7127  00238A  0E00               	movlw	0
  7128  00238C  6F69               	movwf	(?___xxtofl+1)& (0+255),b
  7129  00238E  0E00               	movlw	0
  7130  002390  6F6A               	movwf	(?___xxtofl+2)& (0+255),b
  7131  002392  0E00               	movlw	0
  7132  002394  6F6B               	movwf	(?___xxtofl+3)& (0+255),b
  7133  002396  EF5E  F012         	goto	l2006
  7134  00239A                     l6241:
  7135                           
  7136                           ; BSR set to: 0
  7137  00239A  0E96               	movlw	150
  7138  00239C  6F71               	movwf	___xxtofl@exp& (0+255),b
  7139  00239E  EFD7  F011         	goto	l6245
  7140  0023A2                     l6243:
  7141                           
  7142                           ; BSR set to: 0
  7143  0023A2  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7144  0023A4  90D8               	bcf	status,0,c
  7145  0023A6  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7146  0023A8  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7147  0023AA  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7148  0023AC  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7149  0023AE                     l6245:
  7150                           
  7151                           ; BSR set to: 0
  7152  0023AE  0E00               	movlw	0
  7153  0023B0  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7154  0023B2  6F6C               	movwf	??___xxtofl& (0+255),b
  7155  0023B4  0E00               	movlw	0
  7156  0023B6  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7157  0023B8  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7158  0023BA  0E00               	movlw	0
  7159  0023BC  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7160  0023BE  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7161  0023C0  0EFE               	movlw	254
  7162  0023C2  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7163  0023C4  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7164  0023C6  516C               	movf	??___xxtofl& (0+255),w,b
  7165  0023C8  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7166  0023CA  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7167  0023CC  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7168  0023CE  A4D8               	btfss	status,2,c
  7169  0023D0  EFEC  F011         	goto	u5321
  7170  0023D4  EFEE  F011         	goto	u5320
  7171  0023D8                     u5321:
  7172  0023D8  EFD1  F011         	goto	l6243
  7173  0023DC                     u5320:
  7174  0023DC  EFFC  F011         	goto	l2010
  7175  0023E0                     l6247:
  7176                           
  7177                           ; BSR set to: 0
  7178  0023E0  2B71               	incf	___xxtofl@exp& (0+255),f,b
  7179  0023E2                     
  7180                           ; BSR set to: 0
  7181  0023E2  0E01               	movlw	1
  7182  0023E4  2772               	addwf	___xxtofl@arg& (0+255),f,b
  7183  0023E6  0E00               	movlw	0
  7184  0023E8  2373               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  7185  0023EA  2374               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  7186  0023EC  2375               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  7187  0023EE                     
  7188                           ; BSR set to: 0
  7189  0023EE  90D8               	bcf	status,0,c
  7190  0023F0  3375               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  7191  0023F2  3374               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  7192  0023F4  3373               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  7193  0023F6  3372               	rrcf	___xxtofl@arg& (0+255),f,b
  7194  0023F8                     l2010:
  7195                           
  7196                           ; BSR set to: 0
  7197  0023F8  0E00               	movlw	0
  7198  0023FA  1572               	andwf	___xxtofl@arg& (0+255),w,b
  7199  0023FC  6F6C               	movwf	??___xxtofl& (0+255),b
  7200  0023FE  0E00               	movlw	0
  7201  002400  1573               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  7202  002402  6F6D               	movwf	(??___xxtofl+1)& (0+255),b
  7203  002404  0E00               	movlw	0
  7204  002406  1574               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  7205  002408  6F6E               	movwf	(??___xxtofl+2)& (0+255),b
  7206  00240A  0EFF               	movlw	255
  7207  00240C  1575               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  7208  00240E  6F6F               	movwf	(??___xxtofl+3)& (0+255),b
  7209  002410  516C               	movf	??___xxtofl& (0+255),w,b
  7210  002412  116D               	iorwf	(??___xxtofl+1)& (0+255),w,b
  7211  002414  116E               	iorwf	(??___xxtofl+2)& (0+255),w,b
  7212  002416  116F               	iorwf	(??___xxtofl+3)& (0+255),w,b
  7213  002418  A4D8               	btfss	status,2,c
  7214  00241A  EF11  F012         	goto	u5331
  7215  00241E  EF13  F012         	goto	u5330
  7216  002422                     u5331:
  7217  002422  EFF0  F011         	goto	l6247
  7218  002426                     u5330:
  7219  002426  EF1B  F012         	goto	l6255
  7220  00242A                     l6253:
  7221                           
  7222                           ; BSR set to: 0
  7223  00242A  0771               	decf	___xxtofl@exp& (0+255),f,b
  7224  00242C  90D8               	bcf	status,0,c
  7225  00242E  3772               	rlcf	___xxtofl@arg& (0+255),f,b
  7226  002430  3773               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  7227  002432  3774               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  7228  002434  3775               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  7229  002436                     l6255:
  7230                           
  7231                           ; BSR set to: 0
  7232  002436  BF74               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  7233  002438  EF20  F012         	goto	u5341
  7234  00243C  EF22  F012         	goto	u5340
  7235  002440                     u5341:
  7236  002440  EF2A  F012         	goto	l2017
  7237  002444                     u5340:
  7238  002444                     
  7239                           ; BSR set to: 0
  7240  002444  0E02               	movlw	2
  7241  002446  6171               	cpfslt	___xxtofl@exp& (0+255),b
  7242  002448  EF28  F012         	goto	u5351
  7243  00244C  EF2A  F012         	goto	u5350
  7244  002450                     u5351:
  7245  002450  EF15  F012         	goto	l6253
  7246  002454                     u5350:
  7247  002454                     l2017:
  7248                           
  7249                           ; BSR set to: 0
  7250  002454  B171               	btfsc	___xxtofl@exp& (0+255),0,b
  7251  002456  EF2F  F012         	goto	u5361
  7252  00245A  EF31  F012         	goto	u5360
  7253  00245E                     u5361:
  7254  00245E  EF32  F012         	goto	l6261
  7255  002462                     u5360:
  7256  002462                     
  7257                           ; BSR set to: 0
  7258  002462  9F74               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  7259  002464                     l6261:
  7260                           
  7261                           ; BSR set to: 0
  7262  002464  90D8               	bcf	status,0,c
  7263  002466  3371               	rrcf	___xxtofl@exp& (0+255),f,b
  7264  002468                     
  7265                           ; BSR set to: 0
  7266  002468  C071  F06C         	movff	___xxtofl@exp,??___xxtofl
  7267  00246C  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  7268  00246E  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  7269  002470  6B6F               	clrf	(??___xxtofl+3)& (0+255),b
  7270  002472  C06C  F06F         	movff	??___xxtofl,??___xxtofl+3
  7271  002476  6B6E               	clrf	(??___xxtofl+2)& (0+255),b
  7272  002478  6B6D               	clrf	(??___xxtofl+1)& (0+255),b
  7273  00247A  6B6C               	clrf	??___xxtofl& (0+255),b
  7274  00247C  516C               	movf	??___xxtofl& (0+255),w,b
  7275  00247E  1372               	iorwf	___xxtofl@arg& (0+255),f,b
  7276  002480  516D               	movf	(??___xxtofl+1)& (0+255),w,b
  7277  002482  1373               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  7278  002484  516E               	movf	(??___xxtofl+2)& (0+255),w,b
  7279  002486  1374               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  7280  002488  516F               	movf	(??___xxtofl+3)& (0+255),w,b
  7281  00248A  1375               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  7282  00248C                     
  7283                           ; BSR set to: 0
  7284  00248C  5170               	movf	___xxtofl@sign& (0+255),w,b
  7285  00248E  B4D8               	btfsc	status,2,c
  7286  002490  EF4C  F012         	goto	u5371
  7287  002494  EF4E  F012         	goto	u5370
  7288  002498                     u5371:
  7289  002498  EF56  F012         	goto	l6271
  7290  00249C                     u5370:
  7291  00249C                     
  7292                           ; BSR set to: 0
  7293  00249C  BF6B               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  7294  00249E  EF55  F012         	goto	u5380
  7295  0024A2  EF53  F012         	goto	u5381
  7296  0024A6                     u5381:
  7297  0024A6  EF56  F012         	goto	l6271
  7298  0024AA                     u5380:
  7299  0024AA                     
  7300                           ; BSR set to: 0
  7301  0024AA  8F75               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  7302  0024AC                     l6271:
  7303                           
  7304                           ; BSR set to: 0
  7305  0024AC  C072  F068         	movff	___xxtofl@arg,?___xxtofl
  7306  0024B0  C073  F069         	movff	___xxtofl@arg+1,?___xxtofl+1
  7307  0024B4  C074  F06A         	movff	___xxtofl@arg+2,?___xxtofl+2
  7308  0024B8  C075  F06B         	movff	___xxtofl@arg+3,?___xxtofl+3
  7309  0024BC                     l2006:
  7310                           
  7311                           ; BSR set to: 0
  7312  0024BC  0012               	return		;funcret
  7313  0024BE                     __end_of___xxtofl:
  7314                           	callstack 0
  7315                           
  7316 ;; *************** function ___fltol *****************
  7317 ;; Defined at:
  7318 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  f1              4   63[BANK0 ] unsigned char 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  exp1            1   32[COMRAM] unsigned char 
  7323 ;;  sign1           1   31[COMRAM] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4   63[BANK0 ] long 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7337 ;;Total ram usage:       10 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 8
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_calcSpeed
  7344 ;;		_calcMotorPow
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           	psect	text32
  7349  002D3A                     __ptext32:
  7350                           	callstack 0
  7351  002D3A                     ___fltol:
  7352                           	callstack 20
  7353  002D3A  0100               	movlb	0	; () banked
  7354  002D3C  35A1               	rlcf	(___fltol@f1+2)& (0+255),w,b
  7355  002D3E  35A2               	rlcf	(___fltol@f1+3)& (0+255),w,b
  7356  002D40  6E21               	movwf	___fltol@exp1^0,c
  7357  002D42  5021               	movf	___fltol@exp1^0,w,c
  7358  002D44  A4D8               	btfss	status,2,c
  7359  002D46  EFA7  F016         	goto	u3541
  7360  002D4A  EFA9  F016         	goto	u3540
  7361  002D4E                     u3541:
  7362  002D4E  EFB3  F016         	goto	l4873
  7363  002D52                     u3540:
  7364  002D52                     l4869:
  7365                           
  7366                           ; BSR set to: 0
  7367  002D52  0E00               	movlw	0
  7368  002D54  6F9F               	movwf	?___fltol& (0+255),b
  7369  002D56  0E00               	movlw	0
  7370  002D58  6FA0               	movwf	(?___fltol+1)& (0+255),b
  7371  002D5A  0E00               	movlw	0
  7372  002D5C  6FA1               	movwf	(?___fltol+2)& (0+255),b
  7373  002D5E  0E00               	movlw	0
  7374  002D60  6FA2               	movwf	(?___fltol+3)& (0+255),b
  7375  002D62  EF20  F017         	goto	l1645
  7376  002D66                     l4873:
  7377                           
  7378                           ; BSR set to: 0
  7379  002D66  C09F  F0A3         	movff	___fltol@f1,??___fltol
  7380  002D6A  C0A0  F0A4         	movff	___fltol@f1+1,??___fltol+1
  7381  002D6E  C0A1  F0A5         	movff	___fltol@f1+2,??___fltol+2
  7382  002D72  C0A2  F0A6         	movff	___fltol@f1+3,??___fltol+3
  7383  002D76  0E20               	movlw	32
  7384  002D78  EFC3  F016         	goto	u3550
  7385  002D7C                     u3555:
  7386  002D7C  90D8               	bcf	status,0,c
  7387  002D7E  33A6               	rrcf	(??___fltol+3)& (0+255),f,b
  7388  002D80  33A5               	rrcf	(??___fltol+2)& (0+255),f,b
  7389  002D82  33A4               	rrcf	(??___fltol+1)& (0+255),f,b
  7390  002D84  33A3               	rrcf	??___fltol& (0+255),f,b
  7391  002D86                     u3550:
  7392  002D86  2EE8               	decfsz	wreg,f,c
  7393  002D88  EFBE  F016         	goto	u3555
  7394  002D8C  51A3               	movf	??___fltol& (0+255),w,b
  7395  002D8E  6E20               	movwf	___fltol@sign1^0,c
  7396  002D90                     
  7397                           ; BSR set to: 0
  7398  002D90  8FA1               	bsf	(___fltol@f1+2)& (0+255),7,b
  7399  002D92                     
  7400                           ; BSR set to: 0
  7401  002D92  0EFF               	movlw	255
  7402  002D94  179F               	andwf	___fltol@f1& (0+255),f,b
  7403  002D96  0EFF               	movlw	255
  7404  002D98  17A0               	andwf	(___fltol@f1+1)& (0+255),f,b
  7405  002D9A  0EFF               	movlw	255
  7406  002D9C  17A1               	andwf	(___fltol@f1+2)& (0+255),f,b
  7407  002D9E  0E00               	movlw	0
  7408  002DA0  17A2               	andwf	(___fltol@f1+3)& (0+255),f,b
  7409  002DA2                     
  7410                           ; BSR set to: 0
  7411  002DA2  0E96               	movlw	150
  7412  002DA4  5E21               	subwf	___fltol@exp1^0,f,c
  7413  002DA6                     
  7414                           ; BSR set to: 0
  7415  002DA6  BE21               	btfsc	___fltol@exp1^0,7,c
  7416  002DA8  EFDA  F016         	goto	u3560
  7417  002DAC  EFD8  F016         	goto	u3561
  7418  002DB0                     u3561:
  7419  002DB0  EFF0  F016         	goto	l4893
  7420  002DB4                     u3560:
  7421  002DB4                     
  7422                           ; BSR set to: 0
  7423  002DB4  5021               	movf	___fltol@exp1^0,w,c
  7424  002DB6  0A80               	xorlw	128
  7425  002DB8  0F97               	addlw	151
  7426  002DBA  B0D8               	btfsc	status,0,c
  7427  002DBC  EFE2  F016         	goto	u3571
  7428  002DC0  EFE4  F016         	goto	u3570
  7429  002DC4                     u3571:
  7430  002DC4  EFE6  F016         	goto	l4889
  7431  002DC8                     u3570:
  7432  002DC8  EFA9  F016         	goto	l4869
  7433  002DCC                     l4889:
  7434                           
  7435                           ; BSR set to: 0
  7436  002DCC  90D8               	bcf	status,0,c
  7437  002DCE  33A2               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7438  002DD0  33A1               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7439  002DD2  33A0               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7440  002DD4  339F               	rrcf	___fltol@f1& (0+255),f,b
  7441  002DD6                     
  7442                           ; BSR set to: 0
  7443  002DD6  3E21               	incfsz	___fltol@exp1^0,f,c
  7444  002DD8  EFE6  F016         	goto	l4889
  7445  002DDC  EF08  F017         	goto	l4903
  7446  002DE0                     l4893:
  7447                           
  7448                           ; BSR set to: 0
  7449  002DE0  0E1F               	movlw	31
  7450  002DE2  6421               	cpfsgt	___fltol@exp1^0,c
  7451  002DE4  EFF6  F016         	goto	u3581
  7452  002DE8  EFF8  F016         	goto	u3580
  7453  002DEC                     u3581:
  7454  002DEC  EF00  F017         	goto	l4901
  7455  002DF0                     u3580:
  7456  002DF0  EFA9  F016         	goto	l4869
  7457  002DF4                     l4899:
  7458                           
  7459                           ; BSR set to: 0
  7460  002DF4  90D8               	bcf	status,0,c
  7461  002DF6  379F               	rlcf	___fltol@f1& (0+255),f,b
  7462  002DF8  37A0               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7463  002DFA  37A1               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7464  002DFC  37A2               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7465  002DFE  0621               	decf	___fltol@exp1^0,f,c
  7466  002E00                     l4901:
  7467                           
  7468                           ; BSR set to: 0
  7469  002E00  5021               	movf	___fltol@exp1^0,w,c
  7470  002E02  A4D8               	btfss	status,2,c
  7471  002E04  EF06  F017         	goto	u3591
  7472  002E08  EF08  F017         	goto	u3590
  7473  002E0C                     u3591:
  7474  002E0C  EFFA  F016         	goto	l4899
  7475  002E10                     u3590:
  7476  002E10                     l4903:
  7477                           
  7478                           ; BSR set to: 0
  7479  002E10  5020               	movf	___fltol@sign1^0,w,c
  7480  002E12  B4D8               	btfsc	status,2,c
  7481  002E14  EF0E  F017         	goto	u3601
  7482  002E18  EF10  F017         	goto	u3600
  7483  002E1C                     u3601:
  7484  002E1C  EF18  F017         	goto	l4907
  7485  002E20                     u3600:
  7486  002E20                     
  7487                           ; BSR set to: 0
  7488  002E20  1FA2               	comf	(___fltol@f1+3)& (0+255),f,b
  7489  002E22  1FA1               	comf	(___fltol@f1+2)& (0+255),f,b
  7490  002E24  1FA0               	comf	(___fltol@f1+1)& (0+255),f,b
  7491  002E26  6D9F               	negf	___fltol@f1& (0+255),b
  7492  002E28  0E00               	movlw	0
  7493  002E2A  23A0               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7494  002E2C  23A1               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7495  002E2E  23A2               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7496  002E30                     l4907:
  7497                           
  7498                           ; BSR set to: 0
  7499  002E30  C09F  F09F         	movff	___fltol@f1,?___fltol
  7500  002E34  C0A0  F0A0         	movff	___fltol@f1+1,?___fltol+1
  7501  002E38  C0A1  F0A1         	movff	___fltol@f1+2,?___fltol+2
  7502  002E3C  C0A2  F0A2         	movff	___fltol@f1+3,?___fltol+3
  7503  002E40                     l1645:
  7504                           
  7505                           ; BSR set to: 0
  7506  002E40  0012               	return		;funcret
  7507  002E42                     __end_of___fltol:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function ___flmul *****************
  7511 ;; Defined at:
  7512 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  b               4   22[BANK0 ] long 
  7515 ;;  a               4   26[BANK0 ] long 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  prod            4   41[BANK0 ] struct .
  7518 ;;  grs             4   36[BANK0 ] unsigned long 
  7519 ;;  temp            2   45[BANK0 ] struct .
  7520 ;;  bexp            1   40[BANK0 ] unsigned char 
  7521 ;;  aexp            1   35[BANK0 ] unsigned char 
  7522 ;;  sign            1   34[BANK0 ] unsigned char 
  7523 ;; Return value:  Size  Location     Type
  7524 ;;                  4   22[BANK0 ] unsigned char 
  7525 ;; Registers used:
  7526 ;;		wreg, status,2, status,0, prodl, prodh
  7527 ;; Tracked objects:
  7528 ;;		On entry : 0/0
  7529 ;;		On exit  : 0/0
  7530 ;;		Unchanged: 0/0
  7531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7532 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7535 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7536 ;;Total ram usage:       25 bytes
  7537 ;; Hardware stack levels used: 1
  7538 ;; Hardware stack levels required when called: 8
  7539 ;; This function calls:
  7540 ;;		Nothing
  7541 ;; This function is called by:
  7542 ;;		_calcSpeed
  7543 ;;		_calcMotorPow
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546                           
  7547                           	psect	text33
  7548  001536                     __ptext33:
  7549                           	callstack 0
  7550  001536                     ___flmul:
  7551                           	callstack 20
  7552  001536  0100               	movlb	0	; () banked
  7553  001538  5179               	movf	(___flmul@b+3)& (0+255),w,b
  7554  00153A  0B80               	andlw	128
  7555  00153C  6F82               	movwf	___flmul@sign& (0+255),b
  7556  00153E  5179               	movf	(___flmul@b+3)& (0+255),w,b
  7557  001540  2579               	addwf	(___flmul@b+3)& (0+255),w,b
  7558  001542  6F88               	movwf	___flmul@bexp& (0+255),b
  7559  001544                     
  7560                           ; BSR set to: 0
  7561  001544  AF78               	btfss	(___flmul@b+2)& (0+255),7,b
  7562  001546  EFA7  F00A         	goto	u5101
  7563  00154A  EFA9  F00A         	goto	u5100
  7564  00154E                     u5101:
  7565  00154E  EFAA  F00A         	goto	l6105
  7566  001552                     u5100:
  7567  001552                     
  7568                           ; BSR set to: 0
  7569  001552  8188               	bsf	___flmul@bexp& (0+255),0,b
  7570  001554                     l6105:
  7571                           
  7572                           ; BSR set to: 0
  7573  001554  5188               	movf	___flmul@bexp& (0+255),w,b
  7574  001556  B4D8               	btfsc	status,2,c
  7575  001558  EFB0  F00A         	goto	u5111
  7576  00155C  EFB2  F00A         	goto	u5110
  7577  001560                     u5111:
  7578  001560  EFC5  F00A         	goto	l6113
  7579  001564                     u5110:
  7580  001564                     
  7581                           ; BSR set to: 0
  7582  001564  2988               	incf	___flmul@bexp& (0+255),w,b
  7583  001566  A4D8               	btfss	status,2,c
  7584  001568  EFB8  F00A         	goto	u5121
  7585  00156C  EFBA  F00A         	goto	u5120
  7586  001570                     u5121:
  7587  001570  EFC2  F00A         	goto	l6111
  7588  001574                     u5120:
  7589  001574                     
  7590                           ; BSR set to: 0
  7591  001574  0E00               	movlw	0
  7592  001576  6F76               	movwf	___flmul@b& (0+255),b
  7593  001578  0E00               	movlw	0
  7594  00157A  6F77               	movwf	(___flmul@b+1)& (0+255),b
  7595  00157C  0E00               	movlw	0
  7596  00157E  6F78               	movwf	(___flmul@b+2)& (0+255),b
  7597  001580  0E00               	movlw	0
  7598  001582  6F79               	movwf	(___flmul@b+3)& (0+255),b
  7599  001584                     l6111:
  7600                           
  7601                           ; BSR set to: 0
  7602  001584  8F78               	bsf	(___flmul@b+2)& (0+255),7,b
  7603  001586  EFCD  F00A         	goto	l6115
  7604  00158A                     l6113:
  7605                           
  7606                           ; BSR set to: 0
  7607  00158A  0E00               	movlw	0
  7608  00158C  6F76               	movwf	___flmul@b& (0+255),b
  7609  00158E  0E00               	movlw	0
  7610  001590  6F77               	movwf	(___flmul@b+1)& (0+255),b
  7611  001592  0E00               	movlw	0
  7612  001594  6F78               	movwf	(___flmul@b+2)& (0+255),b
  7613  001596  0E00               	movlw	0
  7614  001598  6F79               	movwf	(___flmul@b+3)& (0+255),b
  7615  00159A                     l6115:
  7616                           
  7617                           ; BSR set to: 0
  7618  00159A  517D               	movf	(___flmul@a+3)& (0+255),w,b
  7619  00159C  0B80               	andlw	128
  7620  00159E  1B82               	xorwf	___flmul@sign& (0+255),f,b
  7621  0015A0                     
  7622                           ; BSR set to: 0
  7623  0015A0  517D               	movf	(___flmul@a+3)& (0+255),w,b
  7624  0015A2  257D               	addwf	(___flmul@a+3)& (0+255),w,b
  7625  0015A4  6F83               	movwf	___flmul@aexp& (0+255),b
  7626  0015A6                     
  7627                           ; BSR set to: 0
  7628  0015A6  AF7C               	btfss	(___flmul@a+2)& (0+255),7,b
  7629  0015A8  EFD8  F00A         	goto	u5131
  7630  0015AC  EFDA  F00A         	goto	u5130
  7631  0015B0                     u5131:
  7632  0015B0  EFDB  F00A         	goto	l6123
  7633  0015B4                     u5130:
  7634  0015B4                     
  7635                           ; BSR set to: 0
  7636  0015B4  8183               	bsf	___flmul@aexp& (0+255),0,b
  7637  0015B6                     l6123:
  7638                           
  7639                           ; BSR set to: 0
  7640  0015B6  5183               	movf	___flmul@aexp& (0+255),w,b
  7641  0015B8  B4D8               	btfsc	status,2,c
  7642  0015BA  EFE1  F00A         	goto	u5141
  7643  0015BE  EFE3  F00A         	goto	u5140
  7644  0015C2                     u5141:
  7645  0015C2  EFF6  F00A         	goto	l6131
  7646  0015C6                     u5140:
  7647  0015C6                     
  7648                           ; BSR set to: 0
  7649  0015C6  2983               	incf	___flmul@aexp& (0+255),w,b
  7650  0015C8  A4D8               	btfss	status,2,c
  7651  0015CA  EFE9  F00A         	goto	u5151
  7652  0015CE  EFEB  F00A         	goto	u5150
  7653  0015D2                     u5151:
  7654  0015D2  EFF3  F00A         	goto	l6129
  7655  0015D6                     u5150:
  7656  0015D6                     
  7657                           ; BSR set to: 0
  7658  0015D6  0E00               	movlw	0
  7659  0015D8  6F7A               	movwf	___flmul@a& (0+255),b
  7660  0015DA  0E00               	movlw	0
  7661  0015DC  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  7662  0015DE  0E00               	movlw	0
  7663  0015E0  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  7664  0015E2  0E00               	movlw	0
  7665  0015E4  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  7666  0015E6                     l6129:
  7667                           
  7668                           ; BSR set to: 0
  7669  0015E6  8F7C               	bsf	(___flmul@a+2)& (0+255),7,b
  7670  0015E8  EFFE  F00A         	goto	l1962
  7671  0015EC                     l6131:
  7672                           
  7673                           ; BSR set to: 0
  7674  0015EC  0E00               	movlw	0
  7675  0015EE  6F7A               	movwf	___flmul@a& (0+255),b
  7676  0015F0  0E00               	movlw	0
  7677  0015F2  6F7B               	movwf	(___flmul@a+1)& (0+255),b
  7678  0015F4  0E00               	movlw	0
  7679  0015F6  6F7C               	movwf	(___flmul@a+2)& (0+255),b
  7680  0015F8  0E00               	movlw	0
  7681  0015FA  6F7D               	movwf	(___flmul@a+3)& (0+255),b
  7682  0015FC                     l1962:
  7683                           
  7684                           ; BSR set to: 0
  7685  0015FC  5183               	movf	___flmul@aexp& (0+255),w,b
  7686  0015FE  B4D8               	btfsc	status,2,c
  7687  001600  EF04  F00B         	goto	u5161
  7688  001604  EF06  F00B         	goto	u5160
  7689  001608                     u5161:
  7690  001608  EF0E  F00B         	goto	l6135
  7691  00160C                     u5160:
  7692  00160C                     
  7693                           ; BSR set to: 0
  7694  00160C  5188               	movf	___flmul@bexp& (0+255),w,b
  7695  00160E  A4D8               	btfss	status,2,c
  7696  001610  EF0C  F00B         	goto	u5171
  7697  001614  EF0E  F00B         	goto	u5170
  7698  001618                     u5171:
  7699  001618  EF18  F00B         	goto	l6139
  7700  00161C                     u5170:
  7701  00161C                     l6135:
  7702                           
  7703                           ; BSR set to: 0
  7704  00161C  0E00               	movlw	0
  7705  00161E  6F76               	movwf	?___flmul& (0+255),b
  7706  001620  0E00               	movlw	0
  7707  001622  6F77               	movwf	(?___flmul+1)& (0+255),b
  7708  001624  0E00               	movlw	0
  7709  001626  6F78               	movwf	(?___flmul+2)& (0+255),b
  7710  001628  0E00               	movlw	0
  7711  00162A  6F79               	movwf	(?___flmul+3)& (0+255),b
  7712  00162C  EFC2  F00C         	goto	l1966
  7713  001630                     l6139:
  7714                           
  7715                           ; BSR set to: 0
  7716  001630  517C               	movf	(___flmul@a+2)& (0+255),w,b
  7717  001632  0376               	mulwf	___flmul@b& (0+255),b
  7718  001634  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7719  00163A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7720  001640                     
  7721                           ; BSR set to: 0
  7722  001640  518D               	movf	___flmul@temp& (0+255),w,b
  7723  001642  6F84               	movwf	___flmul@grs& (0+255),b
  7724  001644  6B85               	clrf	(___flmul@grs+1)& (0+255),b
  7725  001646  6B86               	clrf	(___flmul@grs+2)& (0+255),b
  7726  001648  6B87               	clrf	(___flmul@grs+3)& (0+255),b
  7727  00164A                     
  7728                           ; BSR set to: 0
  7729  00164A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7730  00164C  6F89               	movwf	___flmul@prod& (0+255),b
  7731  00164E  6B8A               	clrf	(___flmul@prod+1)& (0+255),b
  7732  001650  6B8B               	clrf	(___flmul@prod+2)& (0+255),b
  7733  001652  6B8C               	clrf	(___flmul@prod+3)& (0+255),b
  7734  001654  517B               	movf	(___flmul@a+1)& (0+255),w,b
  7735  001656  0377               	mulwf	(___flmul@b+1)& (0+255),b
  7736  001658  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7737  00165E  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7738  001664                     
  7739                           ; BSR set to: 0
  7740  001664  518D               	movf	___flmul@temp& (0+255),w,b
  7741  001666  2784               	addwf	___flmul@grs& (0+255),f,b
  7742  001668  0E00               	movlw	0
  7743  00166A  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7744  00166C  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7745  00166E  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7746  001670                     
  7747                           ; BSR set to: 0
  7748  001670  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7749  001672  2789               	addwf	___flmul@prod& (0+255),f,b
  7750  001674  0E00               	movlw	0
  7751  001676  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7752  001678  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7753  00167A  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7754  00167C  517A               	movf	___flmul@a& (0+255),w,b
  7755  00167E  0378               	mulwf	(___flmul@b+2)& (0+255),b
  7756  001680  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7757  001686  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7758  00168C                     
  7759                           ; BSR set to: 0
  7760  00168C  518D               	movf	___flmul@temp& (0+255),w,b
  7761  00168E  2784               	addwf	___flmul@grs& (0+255),f,b
  7762  001690  0E00               	movlw	0
  7763  001692  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7764  001694  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7765  001696  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7766  001698                     
  7767                           ; BSR set to: 0
  7768  001698  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7769  00169A  2789               	addwf	___flmul@prod& (0+255),f,b
  7770  00169C  0E00               	movlw	0
  7771  00169E  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7772  0016A0  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7773  0016A2  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7774  0016A4                     
  7775                           ; BSR set to: 0
  7776  0016A4  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  7777  0016A8  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  7778  0016AC  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  7779  0016B0  6B84               	clrf	___flmul@grs& (0+255),b
  7780  0016B2                     
  7781                           ; BSR set to: 0
  7782  0016B2  517A               	movf	___flmul@a& (0+255),w,b
  7783  0016B4  0377               	mulwf	(___flmul@b+1)& (0+255),b
  7784  0016B6  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7785  0016BC  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7786  0016C2                     
  7787                           ; BSR set to: 0
  7788  0016C2  518D               	movf	___flmul@temp& (0+255),w,b
  7789  0016C4  2784               	addwf	___flmul@grs& (0+255),f,b
  7790  0016C6  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7791  0016C8  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7792  0016CA  0E00               	movlw	0
  7793  0016CC  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7794  0016CE  0E00               	movlw	0
  7795  0016D0  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7796  0016D2                     
  7797                           ; BSR set to: 0
  7798  0016D2  517B               	movf	(___flmul@a+1)& (0+255),w,b
  7799  0016D4  0376               	mulwf	___flmul@b& (0+255),b
  7800  0016D6  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7801  0016DC  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7802  0016E2                     
  7803                           ; BSR set to: 0
  7804  0016E2  518D               	movf	___flmul@temp& (0+255),w,b
  7805  0016E4  2784               	addwf	___flmul@grs& (0+255),f,b
  7806  0016E6  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7807  0016E8  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7808  0016EA  0E00               	movlw	0
  7809  0016EC  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7810  0016EE  0E00               	movlw	0
  7811  0016F0  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7812  0016F2                     
  7813                           ; BSR set to: 0
  7814  0016F2  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  7815  0016F6  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  7816  0016FA  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  7817  0016FE  6B84               	clrf	___flmul@grs& (0+255),b
  7818  001700  517A               	movf	___flmul@a& (0+255),w,b
  7819  001702  0376               	mulwf	___flmul@b& (0+255),b
  7820  001704  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7821  00170A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7822  001710                     
  7823                           ; BSR set to: 0
  7824  001710  518D               	movf	___flmul@temp& (0+255),w,b
  7825  001712  2784               	addwf	___flmul@grs& (0+255),f,b
  7826  001714  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7827  001716  2385               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7828  001718  0E00               	movlw	0
  7829  00171A  2386               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7830  00171C  0E00               	movlw	0
  7831  00171E  2387               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7832  001720                     
  7833                           ; BSR set to: 0
  7834  001720  517C               	movf	(___flmul@a+2)& (0+255),w,b
  7835  001722  0377               	mulwf	(___flmul@b+1)& (0+255),b
  7836  001724  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7837  00172A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7838  001730  518D               	movf	___flmul@temp& (0+255),w,b
  7839  001732  2789               	addwf	___flmul@prod& (0+255),f,b
  7840  001734  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7841  001736  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7842  001738  0E00               	movlw	0
  7843  00173A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7844  00173C  0E00               	movlw	0
  7845  00173E  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7846  001740                     
  7847                           ; BSR set to: 0
  7848  001740  517B               	movf	(___flmul@a+1)& (0+255),w,b
  7849  001742  0378               	mulwf	(___flmul@b+2)& (0+255),b
  7850  001744  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7851  00174A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7852  001750                     
  7853                           ; BSR set to: 0
  7854  001750  518D               	movf	___flmul@temp& (0+255),w,b
  7855  001752  2789               	addwf	___flmul@prod& (0+255),f,b
  7856  001754  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7857  001756  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7858  001758  0E00               	movlw	0
  7859  00175A  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7860  00175C  0E00               	movlw	0
  7861  00175E  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7862  001760  517C               	movf	(___flmul@a+2)& (0+255),w,b
  7863  001762  0378               	mulwf	(___flmul@b+2)& (0+255),b
  7864  001764  006F FFCC  F08D    	movff	prodl,___flmul@temp
  7865  00176A  006F FFD0  F08E    	movff	prodh,___flmul@temp+1
  7866  001770                     
  7867                           ; BSR set to: 0
  7868  001770  518D               	movf	___flmul@temp& (0+255),w,b
  7869  001772  6F7E               	movwf	??___flmul& (0+255),b
  7870  001774  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  7871  001776  6F7F               	movwf	(??___flmul+1)& (0+255),b
  7872  001778  6B80               	clrf	(??___flmul+2)& (0+255),b
  7873  00177A  6B81               	clrf	(??___flmul+3)& (0+255),b
  7874  00177C  C080  F081         	movff	??___flmul+2,??___flmul+3
  7875  001780  C07F  F080         	movff	??___flmul+1,??___flmul+2
  7876  001784  C07E  F07F         	movff	??___flmul,??___flmul+1
  7877  001788  6B7E               	clrf	??___flmul& (0+255),b
  7878  00178A  517E               	movf	??___flmul& (0+255),w,b
  7879  00178C  2789               	addwf	___flmul@prod& (0+255),f,b
  7880  00178E  517F               	movf	(??___flmul+1)& (0+255),w,b
  7881  001790  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7882  001792  5180               	movf	(??___flmul+2)& (0+255),w,b
  7883  001794  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7884  001796  5181               	movf	(??___flmul+3)& (0+255),w,b
  7885  001798  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7886  00179A                     
  7887                           ; BSR set to: 0
  7888  00179A  C084  F07E         	movff	___flmul@grs,??___flmul
  7889  00179E  C085  F07F         	movff	___flmul@grs+1,??___flmul+1
  7890  0017A2  C086  F080         	movff	___flmul@grs+2,??___flmul+2
  7891  0017A6  C087  F081         	movff	___flmul@grs+3,??___flmul+3
  7892  0017AA  0E19               	movlw	25
  7893  0017AC  EFDD  F00B         	goto	u5180
  7894  0017B0                     u5185:
  7895  0017B0  90D8               	bcf	status,0,c
  7896  0017B2  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  7897  0017B4  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  7898  0017B6  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  7899  0017B8  337E               	rrcf	??___flmul& (0+255),f,b
  7900  0017BA                     u5180:
  7901  0017BA  2EE8               	decfsz	wreg,f,c
  7902  0017BC  EFD8  F00B         	goto	u5185
  7903  0017C0  517E               	movf	??___flmul& (0+255),w,b
  7904  0017C2  2789               	addwf	___flmul@prod& (0+255),f,b
  7905  0017C4  517F               	movf	(??___flmul+1)& (0+255),w,b
  7906  0017C6  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7907  0017C8  5180               	movf	(??___flmul+2)& (0+255),w,b
  7908  0017CA  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7909  0017CC  5181               	movf	(??___flmul+3)& (0+255),w,b
  7910  0017CE  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7911  0017D0                     
  7912                           ; BSR set to: 0
  7913  0017D0  C086  F087         	movff	___flmul@grs+2,___flmul@grs+3
  7914  0017D4  C085  F086         	movff	___flmul@grs+1,___flmul@grs+2
  7915  0017D8  C084  F085         	movff	___flmul@grs,___flmul@grs+1
  7916  0017DC  6B84               	clrf	___flmul@grs& (0+255),b
  7917  0017DE                     
  7918                           ; BSR set to: 0
  7919  0017DE  5183               	movf	___flmul@aexp& (0+255),w,b
  7920  0017E0  C088  F07E         	movff	___flmul@bexp,??___flmul
  7921  0017E4  6B7F               	clrf	(??___flmul+1)& (0+255),b
  7922  0017E6  277E               	addwf	??___flmul& (0+255),f,b
  7923  0017E8  0E00               	movlw	0
  7924  0017EA  237F               	addwfc	(??___flmul+1)& (0+255),f,b
  7925  0017EC  0E82               	movlw	130
  7926  0017EE  257E               	addwf	??___flmul& (0+255),w,b
  7927  0017F0  6F8D               	movwf	___flmul@temp& (0+255),b
  7928  0017F2  0EFF               	movlw	255
  7929  0017F4  217F               	addwfc	(??___flmul+1)& (0+255),w,b
  7930  0017F6  6F8E               	movwf	(___flmul@temp+1)& (0+255),b
  7931  0017F8  EF13  F00C         	goto	l6187
  7932  0017FC                     l6181:
  7933                           
  7934                           ; BSR set to: 0
  7935  0017FC  90D8               	bcf	status,0,c
  7936  0017FE  3789               	rlcf	___flmul@prod& (0+255),f,b
  7937  001800  378A               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7938  001802  378B               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7939  001804  378C               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7940  001806                     
  7941                           ; BSR set to: 0
  7942  001806  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  7943  001808  EF08  F00C         	goto	u5191
  7944  00180C  EF0A  F00C         	goto	u5190
  7945  001810                     u5191:
  7946  001810  EF0B  F00C         	goto	l1969
  7947  001814                     u5190:
  7948  001814                     
  7949                           ; BSR set to: 0
  7950  001814  8189               	bsf	___flmul@prod& (0+255),0,b
  7951  001816                     l1969:
  7952                           
  7953                           ; BSR set to: 0
  7954  001816  90D8               	bcf	status,0,c
  7955  001818  3784               	rlcf	___flmul@grs& (0+255),f,b
  7956  00181A  3785               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7957  00181C  3786               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7958  00181E  3787               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7959  001820  078D               	decf	___flmul@temp& (0+255),f,b
  7960  001822  A0D8               	btfss	status,0,c
  7961  001824  078E               	decf	(___flmul@temp+1)& (0+255),f,b
  7962  001826                     l6187:
  7963                           
  7964                           ; BSR set to: 0
  7965  001826  AF8B               	btfss	(___flmul@prod+2)& (0+255),7,b
  7966  001828  EF18  F00C         	goto	u5201
  7967  00182C  EF1A  F00C         	goto	u5200
  7968  001830                     u5201:
  7969  001830  EFFE  F00B         	goto	l6181
  7970  001834                     u5200:
  7971  001834                     
  7972                           ; BSR set to: 0
  7973  001834  0E00               	movlw	0
  7974  001836  6F83               	movwf	___flmul@aexp& (0+255),b
  7975  001838                     
  7976                           ; BSR set to: 0
  7977  001838  AF87               	btfss	(___flmul@grs+3)& (0+255),7,b
  7978  00183A  EF21  F00C         	goto	u5211
  7979  00183E  EF23  F00C         	goto	u5210
  7980  001842                     u5211:
  7981  001842  EF47  F00C         	goto	l1971
  7982  001846                     u5210:
  7983  001846                     
  7984                           ; BSR set to: 0
  7985  001846  0EFF               	movlw	255
  7986  001848  1584               	andwf	___flmul@grs& (0+255),w,b
  7987  00184A  6F7E               	movwf	??___flmul& (0+255),b
  7988  00184C  0EFF               	movlw	255
  7989  00184E  1585               	andwf	(___flmul@grs+1)& (0+255),w,b
  7990  001850  6F7F               	movwf	(??___flmul+1)& (0+255),b
  7991  001852  0EFF               	movlw	255
  7992  001854  1586               	andwf	(___flmul@grs+2)& (0+255),w,b
  7993  001856  6F80               	movwf	(??___flmul+2)& (0+255),b
  7994  001858  0E7F               	movlw	127
  7995  00185A  1587               	andwf	(___flmul@grs+3)& (0+255),w,b
  7996  00185C  6F81               	movwf	(??___flmul+3)& (0+255),b
  7997  00185E  517E               	movf	??___flmul& (0+255),w,b
  7998  001860  117F               	iorwf	(??___flmul+1)& (0+255),w,b
  7999  001862  1180               	iorwf	(??___flmul+2)& (0+255),w,b
  8000  001864  1181               	iorwf	(??___flmul+3)& (0+255),w,b
  8001  001866  B4D8               	btfsc	status,2,c
  8002  001868  EF38  F00C         	goto	u5221
  8003  00186C  EF3A  F00C         	goto	u5220
  8004  001870                     u5221:
  8005  001870  EF3E  F00C         	goto	l1972
  8006  001874                     u5220:
  8007  001874                     l6195:
  8008                           
  8009                           ; BSR set to: 0
  8010  001874  0E01               	movlw	1
  8011  001876  6F83               	movwf	___flmul@aexp& (0+255),b
  8012  001878  EF47  F00C         	goto	l1971
  8013  00187C                     l1972:
  8014                           
  8015                           ; BSR set to: 0
  8016  00187C  A189               	btfss	___flmul@prod& (0+255),0,b
  8017  00187E  EF43  F00C         	goto	u5231
  8018  001882  EF45  F00C         	goto	u5230
  8019  001886                     u5231:
  8020  001886  EF47  F00C         	goto	l1971
  8021  00188A                     u5230:
  8022  00188A  EF3A  F00C         	goto	l6195
  8023  00188E                     l1971:
  8024                           
  8025                           ; BSR set to: 0
  8026  00188E  5183               	movf	___flmul@aexp& (0+255),w,b
  8027  001890  B4D8               	btfsc	status,2,c
  8028  001892  EF4D  F00C         	goto	u5241
  8029  001896  EF4F  F00C         	goto	u5240
  8030  00189A                     u5241:
  8031  00189A  EF73  F00C         	goto	l6207
  8032  00189E                     u5240:
  8033  00189E                     
  8034                           ; BSR set to: 0
  8035  00189E  0E01               	movlw	1
  8036  0018A0  2789               	addwf	___flmul@prod& (0+255),f,b
  8037  0018A2  0E00               	movlw	0
  8038  0018A4  238A               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8039  0018A6  238B               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8040  0018A8  238C               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8041  0018AA                     
  8042                           ; BSR set to: 0
  8043  0018AA  A18C               	btfss	(___flmul@prod+3)& (0+255),0,b
  8044  0018AC  EF5A  F00C         	goto	u5251
  8045  0018B0  EF5C  F00C         	goto	u5250
  8046  0018B4                     u5251:
  8047  0018B4  EF73  F00C         	goto	l6207
  8048  0018B8                     u5250:
  8049  0018B8                     
  8050                           ; BSR set to: 0
  8051  0018B8  C089  F07E         	movff	___flmul@prod,??___flmul
  8052  0018BC  C08A  F07F         	movff	___flmul@prod+1,??___flmul+1
  8053  0018C0  C08B  F080         	movff	___flmul@prod+2,??___flmul+2
  8054  0018C4  C08C  F081         	movff	___flmul@prod+3,??___flmul+3
  8055  0018C8  3581               	rlcf	(??___flmul+3)& (0+255),w,b
  8056  0018CA  3381               	rrcf	(??___flmul+3)& (0+255),f,b
  8057  0018CC  3380               	rrcf	(??___flmul+2)& (0+255),f,b
  8058  0018CE  337F               	rrcf	(??___flmul+1)& (0+255),f,b
  8059  0018D0  337E               	rrcf	??___flmul& (0+255),f,b
  8060  0018D2  C07E  F089         	movff	??___flmul,___flmul@prod
  8061  0018D6  C07F  F08A         	movff	??___flmul+1,___flmul@prod+1
  8062  0018DA  C080  F08B         	movff	??___flmul+2,___flmul@prod+2
  8063  0018DE  C081  F08C         	movff	??___flmul+3,___flmul@prod+3
  8064  0018E2                     
  8065                           ; BSR set to: 0
  8066  0018E2  4B8D               	infsnz	___flmul@temp& (0+255),f,b
  8067  0018E4  2B8E               	incf	(___flmul@temp+1)& (0+255),f,b
  8068  0018E6                     l6207:
  8069                           
  8070                           ; BSR set to: 0
  8071  0018E6  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8072  0018E8  EF7E  F00C         	goto	u5261
  8073  0018EC  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8074  0018EE  E108               	bnz	u5260
  8075  0018F0  298D               	incf	___flmul@temp& (0+255),w,b
  8076  0018F2  A0D8               	btfss	status,0,c
  8077  0018F4  EF7E  F00C         	goto	u5261
  8078  0018F8  EF80  F00C         	goto	u5260
  8079  0018FC                     u5261:
  8080  0018FC  EF8A  F00C         	goto	l6211
  8081  001900                     u5260:
  8082  001900                     
  8083                           ; BSR set to: 0
  8084  001900  0E00               	movlw	0
  8085  001902  6F89               	movwf	___flmul@prod& (0+255),b
  8086  001904  0E00               	movlw	0
  8087  001906  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8088  001908  0E80               	movlw	128
  8089  00190A  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8090  00190C  0E7F               	movlw	127
  8091  00190E  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8092  001910  EFB8  F00C         	goto	l6223
  8093  001914                     l6211:
  8094                           
  8095                           ; BSR set to: 0
  8096  001914  BF8E               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8097  001916  EF97  F00C         	goto	u5270
  8098  00191A  518E               	movf	(___flmul@temp+1)& (0+255),w,b
  8099  00191C  E106               	bnz	u5271
  8100  00191E  058D               	decf	___flmul@temp& (0+255),w,b
  8101  001920  B0D8               	btfsc	status,0,c
  8102  001922  EF95  F00C         	goto	u5271
  8103  001926  EF97  F00C         	goto	u5270
  8104  00192A                     u5271:
  8105  00192A  EFA3  F00C         	goto	l1979
  8106  00192E                     u5270:
  8107  00192E                     
  8108                           ; BSR set to: 0
  8109  00192E  0E00               	movlw	0
  8110  001930  6F89               	movwf	___flmul@prod& (0+255),b
  8111  001932  0E00               	movlw	0
  8112  001934  6F8A               	movwf	(___flmul@prod+1)& (0+255),b
  8113  001936  0E00               	movlw	0
  8114  001938  6F8B               	movwf	(___flmul@prod+2)& (0+255),b
  8115  00193A  0E00               	movlw	0
  8116  00193C  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8117  00193E  0E00               	movlw	0
  8118  001940  6F82               	movwf	___flmul@sign& (0+255),b
  8119  001942  EFB8  F00C         	goto	l6223
  8120  001946                     l1979:
  8121                           
  8122                           ; BSR set to: 0
  8123  001946  C08D  F088         	movff	___flmul@temp,___flmul@bexp
  8124  00194A                     
  8125                           ; BSR set to: 0
  8126  00194A  0EFF               	movlw	255
  8127  00194C  1789               	andwf	___flmul@prod& (0+255),f,b
  8128  00194E  0EFF               	movlw	255
  8129  001950  178A               	andwf	(___flmul@prod+1)& (0+255),f,b
  8130  001952  0E7F               	movlw	127
  8131  001954  178B               	andwf	(___flmul@prod+2)& (0+255),f,b
  8132  001956  0E00               	movlw	0
  8133  001958  178C               	andwf	(___flmul@prod+3)& (0+255),f,b
  8134  00195A                     
  8135                           ; BSR set to: 0
  8136  00195A  A188               	btfss	___flmul@bexp& (0+255),0,b
  8137  00195C  EFB2  F00C         	goto	u5281
  8138  001960  EFB4  F00C         	goto	u5280
  8139  001964                     u5281:
  8140  001964  EFB5  F00C         	goto	l6221
  8141  001968                     u5280:
  8142  001968                     
  8143                           ; BSR set to: 0
  8144  001968  8F8B               	bsf	(___flmul@prod+2)& (0+255),7,b
  8145  00196A                     l6221:
  8146                           
  8147                           ; BSR set to: 0
  8148  00196A  90D8               	bcf	status,0,c
  8149  00196C  3188               	rrcf	___flmul@bexp& (0+255),w,b
  8150  00196E  6F8C               	movwf	(___flmul@prod+3)& (0+255),b
  8151  001970                     l6223:
  8152                           
  8153                           ; BSR set to: 0
  8154  001970  5182               	movf	___flmul@sign& (0+255),w,b
  8155  001972  138C               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8156  001974                     
  8157                           ; BSR set to: 0
  8158  001974  C089  F076         	movff	___flmul@prod,?___flmul
  8159  001978  C08A  F077         	movff	___flmul@prod+1,?___flmul+1
  8160  00197C  C08B  F078         	movff	___flmul@prod+2,?___flmul+2
  8161  001980  C08C  F079         	movff	___flmul@prod+3,?___flmul+3
  8162  001984                     l1966:
  8163                           
  8164                           ; BSR set to: 0
  8165  001984  0012               	return		;funcret
  8166  001986                     __end_of___flmul:
  8167                           	callstack 0
  8168                           
  8169 ;; *************** function ___awdiv *****************
  8170 ;; Defined at:
  8171 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8172 ;; Parameters:    Size  Location     Type
  8173 ;;  dividend        2    0[BANK0 ] int 
  8174 ;;  divisor         2    2[BANK0 ] int 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  quotient        2    6[BANK0 ] int 
  8177 ;;  sign            1    5[BANK0 ] unsigned char 
  8178 ;;  counter         1    4[BANK0 ] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  2    0[BANK0 ] int 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;Total ram usage:        8 bytes
  8193 ;; Hardware stack levels used: 1
  8194 ;; Hardware stack levels required when called: 8
  8195 ;; This function calls:
  8196 ;;		Nothing
  8197 ;; This function is called by:
  8198 ;;		_calcSteering
  8199 ;;		_setSteering
  8200 ;;		_calcMotorPow
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text34
  8205  0031C0                     __ptext34:
  8206                           	callstack 0
  8207  0031C0                     ___awdiv:
  8208                           	callstack 19
  8209  0031C0  0E00               	movlw	0
  8210  0031C2  0100               	movlb	0	; () banked
  8211  0031C4  6F65               	movwf	___awdiv@sign& (0+255),b
  8212  0031C6                     
  8213                           ; BSR set to: 0
  8214  0031C6  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8215  0031C8  EFEA  F018         	goto	u4920
  8216  0031CC  EFE8  F018         	goto	u4921
  8217  0031D0                     u4921:
  8218  0031D0  EFF0  F018         	goto	l5965
  8219  0031D4                     u4920:
  8220  0031D4                     
  8221                           ; BSR set to: 0
  8222  0031D4  6D62               	negf	___awdiv@divisor& (0+255),b
  8223  0031D6  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8224  0031D8  B0D8               	btfsc	status,0,c
  8225  0031DA  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8226  0031DC                     
  8227                           ; BSR set to: 0
  8228  0031DC  0E01               	movlw	1
  8229  0031DE  6F65               	movwf	___awdiv@sign& (0+255),b
  8230  0031E0                     l5965:
  8231                           
  8232                           ; BSR set to: 0
  8233  0031E0  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  8234  0031E2  EFF7  F018         	goto	u4930
  8235  0031E6  EFF5  F018         	goto	u4931
  8236  0031EA                     u4931:
  8237  0031EA  EFFD  F018         	goto	l5971
  8238  0031EE                     u4930:
  8239  0031EE                     
  8240                           ; BSR set to: 0
  8241  0031EE  6D60               	negf	___awdiv@dividend& (0+255),b
  8242  0031F0  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8243  0031F2  B0D8               	btfsc	status,0,c
  8244  0031F4  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8245  0031F6                     
  8246                           ; BSR set to: 0
  8247  0031F6  0E01               	movlw	1
  8248  0031F8  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8249  0031FA                     l5971:
  8250                           
  8251                           ; BSR set to: 0
  8252  0031FA  0E00               	movlw	0
  8253  0031FC  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8254  0031FE  0E00               	movlw	0
  8255  003200  6F66               	movwf	___awdiv@quotient& (0+255),b
  8256  003202                     
  8257                           ; BSR set to: 0
  8258  003202  5162               	movf	___awdiv@divisor& (0+255),w,b
  8259  003204  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8260  003206  B4D8               	btfsc	status,2,c
  8261  003208  EF08  F019         	goto	u4941
  8262  00320C  EF0A  F019         	goto	u4940
  8263  003210                     u4941:
  8264  003210  EF32  F019         	goto	l5993
  8265  003214                     u4940:
  8266  003214                     
  8267                           ; BSR set to: 0
  8268  003214  0E01               	movlw	1
  8269  003216  6F64               	movwf	___awdiv@counter& (0+255),b
  8270  003218  EF12  F019         	goto	l5979
  8271  00321C                     l5977:
  8272                           
  8273                           ; BSR set to: 0
  8274  00321C  90D8               	bcf	status,0,c
  8275  00321E  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8276  003220  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8277  003222  2B64               	incf	___awdiv@counter& (0+255),f,b
  8278  003224                     l5979:
  8279                           
  8280                           ; BSR set to: 0
  8281  003224  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8282  003226  EF17  F019         	goto	u4951
  8283  00322A  EF19  F019         	goto	u4950
  8284  00322E                     u4951:
  8285  00322E  EF0E  F019         	goto	l5977
  8286  003232                     u4950:
  8287  003232                     l5981:
  8288                           
  8289                           ; BSR set to: 0
  8290  003232  90D8               	bcf	status,0,c
  8291  003234  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8292  003236  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8293  003238                     
  8294                           ; BSR set to: 0
  8295  003238  5162               	movf	___awdiv@divisor& (0+255),w,b
  8296  00323A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8297  00323C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8298  00323E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8299  003240  A0D8               	btfss	status,0,c
  8300  003242  EF25  F019         	goto	u4961
  8301  003246  EF27  F019         	goto	u4960
  8302  00324A                     u4961:
  8303  00324A  EF2C  F019         	goto	l5989
  8304  00324E                     u4960:
  8305  00324E                     
  8306                           ; BSR set to: 0
  8307  00324E  5162               	movf	___awdiv@divisor& (0+255),w,b
  8308  003250  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8309  003252  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8310  003254  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8311  003256                     
  8312                           ; BSR set to: 0
  8313  003256  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8314  003258                     l5989:
  8315                           
  8316                           ; BSR set to: 0
  8317  003258  90D8               	bcf	status,0,c
  8318  00325A  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8319  00325C  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8320  00325E                     
  8321                           ; BSR set to: 0
  8322  00325E  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8323  003260  EF19  F019         	goto	l5981
  8324  003264                     l5993:
  8325                           
  8326                           ; BSR set to: 0
  8327  003264  5165               	movf	___awdiv@sign& (0+255),w,b
  8328  003266  B4D8               	btfsc	status,2,c
  8329  003268  EF38  F019         	goto	u4971
  8330  00326C  EF3A  F019         	goto	u4970
  8331  003270                     u4971:
  8332  003270  EF3E  F019         	goto	l5997
  8333  003274                     u4970:
  8334  003274                     
  8335                           ; BSR set to: 0
  8336  003274  6D66               	negf	___awdiv@quotient& (0+255),b
  8337  003276  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8338  003278  B0D8               	btfsc	status,0,c
  8339  00327A  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8340  00327C                     l5997:
  8341                           
  8342                           ; BSR set to: 0
  8343  00327C  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8344  003280  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  8345  003284                     
  8346                           ; BSR set to: 0
  8347  003284  0012               	return		;funcret
  8348  003286                     __end_of___awdiv:
  8349                           	callstack 0
  8350                           
  8351 ;; *************** function ___flge *****************
  8352 ;; Defined at:
  8353 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  ff1             4   22[BANK0 ] int 
  8356 ;;  ff2             4   26[BANK0 ] int 
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;		None               void
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8368 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;Total ram usage:       12 bytes
  8373 ;; Hardware stack levels used: 1
  8374 ;; Hardware stack levels required when called: 8
  8375 ;; This function calls:
  8376 ;;		Nothing
  8377 ;; This function is called by:
  8378 ;;		_loop
  8379 ;; This function uses a non-reentrant model
  8380 ;;
  8381                           
  8382                           	psect	text35
  8383  002E42                     __ptext35:
  8384                           	callstack 0
  8385  002E42                     ___flge:
  8386                           	callstack 21
  8387  002E42  0E00               	movlw	0
  8388  002E44  0100               	movlb	0	; () banked
  8389  002E46  1576               	andwf	___flge@ff1& (0+255),w,b
  8390  002E48  6F7E               	movwf	??___flge& (0+255),b
  8391  002E4A  0E00               	movlw	0
  8392  002E4C  1577               	andwf	(___flge@ff1+1)& (0+255),w,b
  8393  002E4E  6F7F               	movwf	(??___flge+1)& (0+255),b
  8394  002E50  0E80               	movlw	128
  8395  002E52  1578               	andwf	(___flge@ff1+2)& (0+255),w,b
  8396  002E54  6F80               	movwf	(??___flge+2)& (0+255),b
  8397  002E56  0E7F               	movlw	127
  8398  002E58  1579               	andwf	(___flge@ff1+3)& (0+255),w,b
  8399  002E5A  6F81               	movwf	(??___flge+3)& (0+255),b
  8400  002E5C  517E               	movf	??___flge& (0+255),w,b
  8401  002E5E  117F               	iorwf	(??___flge+1)& (0+255),w,b
  8402  002E60  1180               	iorwf	(??___flge+2)& (0+255),w,b
  8403  002E62  1181               	iorwf	(??___flge+3)& (0+255),w,b
  8404  002E64  A4D8               	btfss	status,2,c
  8405  002E66  EF37  F017         	goto	u5661
  8406  002E6A  EF39  F017         	goto	u5660
  8407  002E6E                     u5661:
  8408  002E6E  EF41  F017         	goto	l6501
  8409  002E72                     u5660:
  8410  002E72                     
  8411                           ; BSR set to: 0
  8412  002E72  0E00               	movlw	0
  8413  002E74  6F76               	movwf	___flge@ff1& (0+255),b
  8414  002E76  0E00               	movlw	0
  8415  002E78  6F77               	movwf	(___flge@ff1+1)& (0+255),b
  8416  002E7A  0E00               	movlw	0
  8417  002E7C  6F78               	movwf	(___flge@ff1+2)& (0+255),b
  8418  002E7E  0E00               	movlw	0
  8419  002E80  6F79               	movwf	(___flge@ff1+3)& (0+255),b
  8420  002E82                     l6501:
  8421                           
  8422                           ; BSR set to: 0
  8423  002E82  0E00               	movlw	0
  8424  002E84  157A               	andwf	___flge@ff2& (0+255),w,b
  8425  002E86  6F7E               	movwf	??___flge& (0+255),b
  8426  002E88  0E00               	movlw	0
  8427  002E8A  157B               	andwf	(___flge@ff2+1)& (0+255),w,b
  8428  002E8C  6F7F               	movwf	(??___flge+1)& (0+255),b
  8429  002E8E  0E80               	movlw	128
  8430  002E90  157C               	andwf	(___flge@ff2+2)& (0+255),w,b
  8431  002E92  6F80               	movwf	(??___flge+2)& (0+255),b
  8432  002E94  0E7F               	movlw	127
  8433  002E96  157D               	andwf	(___flge@ff2+3)& (0+255),w,b
  8434  002E98  6F81               	movwf	(??___flge+3)& (0+255),b
  8435  002E9A  517E               	movf	??___flge& (0+255),w,b
  8436  002E9C  117F               	iorwf	(??___flge+1)& (0+255),w,b
  8437  002E9E  1180               	iorwf	(??___flge+2)& (0+255),w,b
  8438  002EA0  1181               	iorwf	(??___flge+3)& (0+255),w,b
  8439  002EA2  A4D8               	btfss	status,2,c
  8440  002EA4  EF56  F017         	goto	u5671
  8441  002EA8  EF58  F017         	goto	u5670
  8442  002EAC                     u5671:
  8443  002EAC  EF60  F017         	goto	l6505
  8444  002EB0                     u5670:
  8445  002EB0                     
  8446                           ; BSR set to: 0
  8447  002EB0  0E00               	movlw	0
  8448  002EB2  6F7A               	movwf	___flge@ff2& (0+255),b
  8449  002EB4  0E00               	movlw	0
  8450  002EB6  6F7B               	movwf	(___flge@ff2+1)& (0+255),b
  8451  002EB8  0E00               	movlw	0
  8452  002EBA  6F7C               	movwf	(___flge@ff2+2)& (0+255),b
  8453  002EBC  0E00               	movlw	0
  8454  002EBE  6F7D               	movwf	(___flge@ff2+3)& (0+255),b
  8455  002EC0                     l6505:
  8456                           
  8457                           ; BSR set to: 0
  8458  002EC0  AF79               	btfss	(___flge@ff1+3)& (0+255),7,b
  8459  002EC2  EF65  F017         	goto	u5681
  8460  002EC6  EF67  F017         	goto	u5680
  8461  002ECA                     u5681:
  8462  002ECA  EF70  F017         	goto	l6509
  8463  002ECE                     u5680:
  8464  002ECE                     
  8465                           ; BSR set to: 0
  8466  002ECE  6D76               	negf	___flge@ff1& (0+255),b
  8467  002ED0  1F77               	comf	(___flge@ff1+1)& (0+255),f,b
  8468  002ED2  B0D8               	btfsc	status,0,c
  8469  002ED4  2B77               	incf	(___flge@ff1+1)& (0+255),f,b
  8470  002ED6  1F78               	comf	(___flge@ff1+2)& (0+255),f,b
  8471  002ED8  B0D8               	btfsc	status,0,c
  8472  002EDA  2B78               	incf	(___flge@ff1+2)& (0+255),f,b
  8473  002EDC  0E80               	movlw	128
  8474  002EDE  5779               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8475  002EE0                     l6509:
  8476                           
  8477                           ; BSR set to: 0
  8478  002EE0  AF7D               	btfss	(___flge@ff2+3)& (0+255),7,b
  8479  002EE2  EF75  F017         	goto	u5691
  8480  002EE6  EF77  F017         	goto	u5690
  8481  002EEA                     u5691:
  8482  002EEA  EF80  F017         	goto	l1613
  8483  002EEE                     u5690:
  8484  002EEE                     
  8485                           ; BSR set to: 0
  8486  002EEE  6D7A               	negf	___flge@ff2& (0+255),b
  8487  002EF0  1F7B               	comf	(___flge@ff2+1)& (0+255),f,b
  8488  002EF2  B0D8               	btfsc	status,0,c
  8489  002EF4  2B7B               	incf	(___flge@ff2+1)& (0+255),f,b
  8490  002EF6  1F7C               	comf	(___flge@ff2+2)& (0+255),f,b
  8491  002EF8  B0D8               	btfsc	status,0,c
  8492  002EFA  2B7C               	incf	(___flge@ff2+2)& (0+255),f,b
  8493  002EFC  0E80               	movlw	128
  8494  002EFE  577D               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8495  002F00                     l1613:
  8496                           
  8497                           ; BSR set to: 0
  8498  002F00  0E00               	movlw	0
  8499  002F02  1B76               	xorwf	___flge@ff1& (0+255),f,b
  8500  002F04  0E00               	movlw	0
  8501  002F06  1B77               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8502  002F08  0E00               	movlw	0
  8503  002F0A  1B78               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8504  002F0C  0E80               	movlw	128
  8505  002F0E  1B79               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8506  002F10  0E00               	movlw	0
  8507  002F12  1B7A               	xorwf	___flge@ff2& (0+255),f,b
  8508  002F14  0E00               	movlw	0
  8509  002F16  1B7B               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8510  002F18  0E00               	movlw	0
  8511  002F1A  1B7C               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8512  002F1C  0E80               	movlw	128
  8513  002F1E  1B7D               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8514  002F20  517A               	movf	___flge@ff2& (0+255),w,b
  8515  002F22  5D76               	subwf	___flge@ff1& (0+255),w,b
  8516  002F24  517B               	movf	(___flge@ff2+1)& (0+255),w,b
  8517  002F26  5977               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8518  002F28  517C               	movf	(___flge@ff2+2)& (0+255),w,b
  8519  002F2A  5978               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8520  002F2C  517D               	movf	(___flge@ff2+3)& (0+255),w,b
  8521  002F2E  5979               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8522  002F30  B0D8               	btfsc	status,0,c
  8523  002F32  EF9D  F017         	goto	u5701
  8524  002F36  EF9F  F017         	goto	u5700
  8525  002F3A                     u5701:
  8526  002F3A  EFA2  F017         	goto	l6515
  8527  002F3E                     u5700:
  8528  002F3E                     
  8529                           ; BSR set to: 0
  8530  002F3E  90D8               	bcf	status,0,c
  8531  002F40  EFA3  F017         	goto	l1618
  8532  002F44                     l6515:
  8533                           
  8534                           ; BSR set to: 0
  8535  002F44  80D8               	bsf	status,0,c
  8536  002F46                     l1618:
  8537                           
  8538                           ; BSR set to: 0
  8539  002F46  0012               	return		;funcret
  8540  002F48                     __end_of___flge:
  8541                           	callstack 0
  8542                           
  8543 ;; *************** function _SYSTEM_Initialize *****************
  8544 ;; Defined at:
  8545 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 10
  8566 ;; This function calls:
  8567 ;;		_ADCC_Initialize
  8568 ;;		_CCP3_Initialize
  8569 ;;		_CCP4_Initialize
  8570 ;;		_CLC3_Initialize
  8571 ;;		_INTERRUPT_Initialize
  8572 ;;		_OSCILLATOR_Initialize
  8573 ;;		_PIN_MANAGER_Initialize
  8574 ;;		_PMD_Initialize
  8575 ;;		_PWM5_Initialize
  8576 ;;		_PWM6_Initialize
  8577 ;;		_PWM7_Initialize
  8578 ;;		_PWM8_Initialize
  8579 ;;		_SMT1_Initialize
  8580 ;;		_TMR2_Initialize
  8581 ;;		_TMR3_Initialize
  8582 ;;		_TMR4_Initialize
  8583 ;;		_TMR5_Initialize
  8584 ;;		_UART1_Initialize
  8585 ;; This function is called by:
  8586 ;;		_main
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text36
  8591  00397C                     __ptext36:
  8592                           	callstack 0
  8593  00397C                     _SYSTEM_Initialize:
  8594                           	callstack 20
  8595  00397C                     
  8596                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  8597  00397C  EC4C  F01C         	call	_INTERRUPT_Initialize	;wreg free
  8598                           
  8599                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  8600  003980  ECB9  F01F         	call	_PMD_Initialize	;wreg free
  8601                           
  8602                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8603  003984  EC17  F018         	call	_PIN_MANAGER_Initialize	;wreg free
  8604                           
  8605                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8606  003988  EC3A  F020         	call	_OSCILLATOR_Initialize	;wreg free
  8607  00398C                     
  8608                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  8609  00398C  ECF7  F01E         	call	_CCP3_Initialize	;wreg free
  8610  003990                     
  8611                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  8612  003990  EC7C  F01B         	call	_ADCC_Initialize	;wreg free
  8613                           
  8614                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  8615  003994  EC25  F01F         	call	_TMR4_Initialize	;wreg free
  8616  003998                     
  8617                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  8618  003998  EC98  F01E         	call	_SMT1_Initialize	;wreg free
  8619  00399C                     
  8620                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  8621  00399C  EC0A  F020         	call	_PWM8_Initialize	;wreg free
  8622  0039A0                     
  8623                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  8624  0039A0  ECFC  F01F         	call	_TMR2_Initialize	;wreg free
  8625  0039A4                     
  8626                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  8627  0039A4  EC22  F020         	call	_PWM6_Initialize	;wreg free
  8628                           
  8629                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  8630  0039A8  ECE0  F01E         	call	_CCP4_Initialize	;wreg free
  8631  0039AC                     
  8632                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  8633  0039AC  EC3B  F01F         	call	_CLC3_Initialize	;wreg free
  8634  0039B0                     
  8635                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  8636  0039B0  ECF5  F01D         	call	_TMR3_Initialize	;wreg free
  8637                           
  8638                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  8639  0039B4  EC2E  F020         	call	_PWM5_Initialize	;wreg free
  8640  0039B8                     
  8641                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  8642  0039B8  ECE3  F01C         	call	_TMR5_Initialize	;wreg free
  8643  0039BC                     
  8644                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  8645  0039BC  EC16  F020         	call	_PWM7_Initialize	;wreg free
  8646                           
  8647                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  8648  0039C0  ECA3  F019         	call	_UART1_Initialize	;wreg free
  8649  0039C4  0012               	return		;funcret
  8650  0039C6                     __end_of_SYSTEM_Initialize:
  8651                           	callstack 0
  8652                           
  8653 ;; *************** function _UART1_Initialize *****************
  8654 ;; Defined at:
  8655 ;;		line 87 in file "mcc_generated_files/uart1.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;		None
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;		None
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      void 
  8662 ;; Registers used:
  8663 ;;		wreg, status,2, status,0, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8673 ;;Total ram usage:        0 bytes
  8674 ;; Hardware stack levels used: 1
  8675 ;; Hardware stack levels required when called: 9
  8676 ;; This function calls:
  8677 ;;		_UART1_SetErrorHandler
  8678 ;;		_UART1_SetFramingErrorHandler
  8679 ;;		_UART1_SetOverrunErrorHandler
  8680 ;;		_UART1_SetRxInterruptHandler
  8681 ;;		_UART1_SetTxInterruptHandler
  8682 ;; This function is called by:
  8683 ;;		_SYSTEM_Initialize
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text37
  8688  003346                     __ptext37:
  8689                           	callstack 0
  8690  003346                     _UART1_Initialize:
  8691                           	callstack 20
  8692  003346                     
  8693                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  8694  003346  0139               	movlb	57	; () banked
  8695  003348  9793               	bcf	147,3,b	;volatile
  8696  00334A                     
  8697                           ; BSR set to: 57
  8698                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  8699  00334A  0E86               	movlw	low _UART1_Receive_ISR
  8700  00334C  6E20               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  8701  00334E  0E32               	movlw	high _UART1_Receive_ISR
  8702  003350  6E21               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  8703  003352  EC57  F020         	call	_UART1_SetRxInterruptHandler	;wreg free
  8704  003356                     
  8705                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  8706  003356  0139               	movlb	57	; () banked
  8707  003358  9993               	bcf	147,4,b	;volatile
  8708                           
  8709                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  8710  00335A  0EEC               	movlw	low _UART1_Transmit_ISR
  8711  00335C  6E20               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  8712  00335E  0E3A               	movlw	high _UART1_Transmit_ISR
  8713  003360  6E21               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  8714  003362  EC52  F020         	call	_UART1_SetTxInterruptHandler	;wreg free
  8715  003366                     
  8716                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  8717  003366  0E00               	movlw	0
  8718  003368  013D               	movlb	61	; () banked
  8719  00336A  6FEC               	movwf	236,b	;volatile
  8720  00336C                     
  8721                           ; BSR set to: 61
  8722                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  8723  00336C  0E00               	movlw	0
  8724  00336E  6FED               	movwf	237,b	;volatile
  8725  003370                     
  8726                           ; BSR set to: 61
  8727                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  8728  003370  0E00               	movlw	0
  8729  003372  6FEE               	movwf	238,b	;volatile
  8730  003374                     
  8731                           ; BSR set to: 61
  8732                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  8733  003374  0E00               	movlw	0
  8734  003376  6FEF               	movwf	239,b	;volatile
  8735  003378                     
  8736                           ; BSR set to: 61
  8737                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  8738  003378  0E00               	movlw	0
  8739  00337A  6FF0               	movwf	240,b	;volatile
  8740  00337C                     
  8741                           ; BSR set to: 61
  8742                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  8743  00337C  0E00               	movlw	0
  8744  00337E  6FF1               	movwf	241,b	;volatile
  8745  003380                     
  8746                           ; BSR set to: 61
  8747                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  8748  003380  0EB0               	movlw	176
  8749  003382  6FF2               	movwf	242,b	;volatile
  8750  003384                     
  8751                           ; BSR set to: 61
  8752                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  8753  003384  0E80               	movlw	128
  8754  003386  6FF3               	movwf	243,b	;volatile
  8755  003388                     
  8756                           ; BSR set to: 61
  8757                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  8758  003388  0E00               	movlw	0
  8759  00338A  6FF4               	movwf	244,b	;volatile
  8760  00338C                     
  8761                           ; BSR set to: 61
  8762                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  8763  00338C  0E8A               	movlw	138
  8764  00338E  6FF5               	movwf	245,b	;volatile
  8765  003390                     
  8766                           ; BSR set to: 61
  8767                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  8768  003390  0E00               	movlw	0
  8769  003392  6FF6               	movwf	246,b	;volatile
  8770  003394                     
  8771                           ; BSR set to: 61
  8772                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  8773  003394  0E00               	movlw	0
  8774  003396  6FF7               	movwf	247,b	;volatile
  8775  003398                     
  8776                           ; BSR set to: 61
  8777                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  8778  003398  0E00               	movlw	0
  8779  00339A  6FF8               	movwf	248,b	;volatile
  8780  00339C                     
  8781                           ; BSR set to: 61
  8782                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  8783  00339C  0E00               	movlw	0
  8784  00339E  6FF9               	movwf	249,b	;volatile
  8785  0033A0                     
  8786                           ; BSR set to: 61
  8787                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  8788  0033A0  0E00               	movlw	0
  8789  0033A2  6FFA               	movwf	250,b	;volatile
  8790  0033A4                     
  8791                           ; BSR set to: 61
  8792                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  8793  0033A4  0E0C               	movlw	low _UART1_DefaultFramingErrorHandler
  8794  0033A6  6E20               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  8795  0033A8  0E41               	movlw	high _UART1_DefaultFramingErrorHandler
  8796  0033AA  6E21               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8797  0033AC  EC61  F020         	call	_UART1_SetFramingErrorHandler	;wreg free
  8798  0033B0                     
  8799                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  8800  0033B0  0E0A               	movlw	low _UART1_DefaultOverrunErrorHandler
  8801  0033B2  6E20               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  8802  0033B4  0E41               	movlw	high _UART1_DefaultOverrunErrorHandler
  8803  0033B6  6E21               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8804  0033B8  EC5C  F020         	call	_UART1_SetOverrunErrorHandler	;wreg free
  8805  0033BC                     
  8806                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  8807  0033BC  0EFE               	movlw	low _UART1_DefaultErrorHandler
  8808  0033BE  6E20               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  8809  0033C0  0E40               	movlw	high _UART1_DefaultErrorHandler
  8810  0033C2  6E21               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  8811  0033C4  EC66  F020         	call	_UART1_SetErrorHandler	;wreg free
  8812                           
  8813                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  8814  0033C8  0E00               	movlw	0
  8815  0033CA  6E2E               	movwf	_uart1RxLastError^0,c	;volatile
  8816                           
  8817                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  8818  0033CC  0E00               	movlw	0
  8819  0033CE  6E33               	movwf	_uart1TxHead^0,c	;volatile
  8820                           
  8821                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  8822  0033D0  0E00               	movlw	0
  8823  0033D2  6E32               	movwf	_uart1TxTail^0,c	;volatile
  8824                           
  8825                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  8826  0033D4  0E08               	movlw	8
  8827  0033D6  6E40               	movwf	_uart1TxBufferRemaining^0,c	;volatile
  8828                           
  8829                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  8830  0033D8  0E00               	movlw	0
  8831  0033DA  6E31               	movwf	_uart1RxHead^0,c	;volatile
  8832                           
  8833                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  8834  0033DC  0E00               	movlw	0
  8835  0033DE  6E30               	movwf	_uart1RxTail^0,c	;volatile
  8836                           
  8837                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  8838  0033E0  0E00               	movlw	0
  8839  0033E2  6E2F               	movwf	_uart1RxCount^0,c	;volatile
  8840  0033E4                     
  8841                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  8842  0033E4  0139               	movlb	57	; () banked
  8843  0033E6  8793               	bsf	147,3,b	;volatile
  8844  0033E8                     
  8845                           ; BSR set to: 57
  8846  0033E8  0012               	return		;funcret
  8847  0033EA                     __end_of_UART1_Initialize:
  8848                           	callstack 0
  8849                           
  8850 ;; *************** function _UART1_SetTxInterruptHandler *****************
  8851 ;; Defined at:
  8852 ;;		line 333 in file "mcc_generated_files/uart1.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8855 ;;		 -> UART1_Transmit_ISR(1), 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;		None
  8858 ;; Return value:  Size  Location     Type
  8859 ;;                  1    wreg      void 
  8860 ;; Registers used:
  8861 ;;		wreg, status,2, status,0
  8862 ;; Tracked objects:
  8863 ;;		On entry : 0/0
  8864 ;;		On exit  : 0/0
  8865 ;;		Unchanged: 0/0
  8866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;Total ram usage:        2 bytes
  8872 ;; Hardware stack levels used: 1
  8873 ;; Hardware stack levels required when called: 8
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_UART1_Initialize
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           	psect	text38
  8882  0040A4                     __ptext38:
  8883                           	callstack 0
  8884  0040A4                     _UART1_SetTxInterruptHandler:
  8885                           	callstack 20
  8886  0040A4                     
  8887                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  8888  0040A4  C020  F03C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  8889  0040A8  C021  F03D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  8890  0040AC  0012               	return		;funcret
  8891  0040AE                     __end_of_UART1_SetTxInterruptHandler:
  8892                           	callstack 0
  8893                           
  8894 ;; *************** function _UART1_SetRxInterruptHandler *****************
  8895 ;; Defined at:
  8896 ;;		line 329 in file "mcc_generated_files/uart1.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  8899 ;;		 -> UART1_Receive_ISR(1), 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;		None
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  1    wreg      void 
  8904 ;; Registers used:
  8905 ;;		wreg, status,2, status,0
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8911 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;Total ram usage:        2 bytes
  8916 ;; Hardware stack levels used: 1
  8917 ;; Hardware stack levels required when called: 8
  8918 ;; This function calls:
  8919 ;;		Nothing
  8920 ;; This function is called by:
  8921 ;;		_UART1_Initialize
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text39
  8926  0040AE                     __ptext39:
  8927                           	callstack 0
  8928  0040AE                     _UART1_SetRxInterruptHandler:
  8929                           	callstack 20
  8930  0040AE                     
  8931                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  8932  0040AE  C020  F03E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  8933  0040B2  C021  F03F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  8934  0040B6  0012               	return		;funcret
  8935  0040B8                     __end_of_UART1_SetRxInterruptHandler:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  8939 ;; Defined at:
  8940 ;;		line 319 in file "mcc_generated_files/uart1.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8943 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      void 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;Total ram usage:        2 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; Hardware stack levels required when called: 8
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_UART1_Initialize
  8966 ;; This function uses a non-reentrant model
  8967 ;;
  8968                           
  8969                           	psect	text40
  8970  0040B8                     __ptext40:
  8971                           	callstack 0
  8972  0040B8                     _UART1_SetOverrunErrorHandler:
  8973                           	callstack 20
  8974  0040B8                     
  8975                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  8976  0040B8  C020  F0FC         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  8977  0040BC  C021  F0FD         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  8978  0040C0  0012               	return		;funcret
  8979  0040C2                     __end_of_UART1_SetOverrunErrorHandler:
  8980                           	callstack 0
  8981                           
  8982 ;; *************** function _UART1_SetFramingErrorHandler *****************
  8983 ;; Defined at:
  8984 ;;		line 315 in file "mcc_generated_files/uart1.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  8987 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;Total ram usage:        2 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 8
  9006 ;; This function calls:
  9007 ;;		Nothing
  9008 ;; This function is called by:
  9009 ;;		_UART1_Initialize
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text41
  9014  0040C2                     __ptext41:
  9015                           	callstack 0
  9016  0040C2                     _UART1_SetFramingErrorHandler:
  9017                           	callstack 20
  9018  0040C2                     
  9019                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  9020  0040C2  C020  F0FE         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  9021  0040C6  C021  F0FF         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  9022  0040CA  0012               	return		;funcret
  9023  0040CC                     __end_of_UART1_SetFramingErrorHandler:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function _UART1_SetErrorHandler *****************
  9027 ;; Defined at:
  9028 ;;		line 323 in file "mcc_generated_files/uart1.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;  interruptHan    2   31[COMRAM] PTR FTN()void 
  9031 ;;		 -> UART1_DefaultErrorHandler(1), 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2, status,0
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;Total ram usage:        2 bytes
  9048 ;; Hardware stack levels used: 1
  9049 ;; Hardware stack levels required when called: 8
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_UART1_Initialize
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text42
  9058  0040CC                     __ptext42:
  9059                           	callstack 0
  9060  0040CC                     _UART1_SetErrorHandler:
  9061                           	callstack 20
  9062  0040CC                     
  9063                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  9064  0040CC  C020  F0FA         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  9065  0040D0  C021  F0FB         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  9066  0040D4  0012               	return		;funcret
  9067  0040D6                     __end_of_UART1_SetErrorHandler:
  9068                           	callstack 0
  9069                           
  9070 ;; *************** function _TMR5_Initialize *****************
  9071 ;; Defined at:
  9072 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;		None
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, status,2, status,0, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9088 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;Total ram usage:        2 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 9
  9093 ;; This function calls:
  9094 ;;		_TMR5_SetGateInterruptHandler
  9095 ;; This function is called by:
  9096 ;;		_SYSTEM_Initialize
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text43
  9101  0039C6                     __ptext43:
  9102                           	callstack 0
  9103  0039C6                     _TMR5_Initialize:
  9104                           	callstack 20
  9105  0039C6                     
  9106                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  9107  0039C6  0EC0               	movlw	192
  9108  0039C8  6E9B               	movwf	155,c	;volatile
  9109                           
  9110                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  9111  0039CA  0E00               	movlw	0
  9112  0039CC  6E9C               	movwf	156,c	;volatile
  9113                           
  9114                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  9115  0039CE  0E05               	movlw	5
  9116  0039D0  6E9D               	movwf	157,c	;volatile
  9117                           
  9118                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  9119  0039D2  0E00               	movlw	0
  9120  0039D4  6E99               	movwf	153,c	;volatile
  9121                           
  9122                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  9123  0039D6  0E00               	movlw	0
  9124  0039D8  6E98               	movwf	152,c	;volatile
  9125  0039DA                     
  9126                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  9127  0039DA  0139               	movlb	57	; () banked
  9128  0039DC  9DA8               	bcf	168,6,b	;volatile
  9129  0039DE                     
  9130                           ; BSR set to: 57
  9131                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  9132  0039DE  5098               	movf	152,w,c	;volatile
  9133  0039E0  006F FE64  F060    	movff	16281,??_TMR5_Initialize	;volatile
  9134  0039E6  0100               	movlb	0	; () banked
  9135  0039E8  6B61               	clrf	(??_TMR5_Initialize+1)& (0+255),b
  9136  0039EA  C060  F061         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  9137  0039EE  6B60               	clrf	??_TMR5_Initialize& (0+255),b
  9138  0039F0  1160               	iorwf	??_TMR5_Initialize& (0+255),w,b
  9139  0039F2  6E3A               	movwf	_timer5ReloadVal^0,c	;volatile
  9140  0039F4  5161               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
  9141  0039F6  6E3B               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
  9142  0039F8                     
  9143                           ; BSR set to: 0
  9144                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  9145  0039F8  0139               	movlb	57	; () banked
  9146  0039FA  9FA8               	bcf	168,7,b	;volatile
  9147  0039FC                     
  9148                           ; BSR set to: 57
  9149                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  9150  0039FC  8F98               	bsf	152,7,b	;volatile
  9151  0039FE                     
  9152                           ; BSR set to: 57
  9153                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  9154  0039FE  0EDA               	movlw	low _TMR5_DefaultGateInterruptHandler
  9155  003A00  6E20               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  9156  003A02  0E3F               	movlw	high _TMR5_DefaultGateInterruptHandler
  9157  003A04  6E21               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  9158  003A06  EC6B  F020         	call	_TMR5_SetGateInterruptHandler	;wreg free
  9159  003A0A                     
  9160                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  9161  003A0A  0E03               	movlw	3
  9162  003A0C  6E9A               	movwf	154,c	;volatile
  9163  003A0E  0012               	return		;funcret
  9164  003A10                     __end_of_TMR5_Initialize:
  9165                           	callstack 0
  9166                           
  9167 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  9168 ;; Defined at:
  9169 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  9170 ;; Parameters:    Size  Location     Type
  9171 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9172 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  9173 ;; Auto vars:     Size  Location     Type
  9174 ;;		None
  9175 ;; Return value:  Size  Location     Type
  9176 ;;                  1    wreg      void 
  9177 ;; Registers used:
  9178 ;;		wreg, status,2, status,0
  9179 ;; Tracked objects:
  9180 ;;		On entry : 0/0
  9181 ;;		On exit  : 0/0
  9182 ;;		Unchanged: 0/0
  9183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;Total ram usage:        2 bytes
  9189 ;; Hardware stack levels used: 1
  9190 ;; Hardware stack levels required when called: 8
  9191 ;; This function calls:
  9192 ;;		Nothing
  9193 ;; This function is called by:
  9194 ;;		_TMR5_Initialize
  9195 ;; This function uses a non-reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text44
  9199  0040D6                     __ptext44:
  9200                           	callstack 0
  9201  0040D6                     _TMR5_SetGateInterruptHandler:
  9202                           	callstack 20
  9203  0040D6                     
  9204                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  9205  0040D6  C020  F038         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  9206  0040DA  C021  F039         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  9207  0040DE  0012               	return		;funcret
  9208  0040E0                     __end_of_TMR5_SetGateInterruptHandler:
  9209                           	callstack 0
  9210                           
  9211 ;; *************** function _TMR4_Initialize *****************
  9212 ;; Defined at:
  9213 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;		None
  9216 ;; Auto vars:     Size  Location     Type
  9217 ;;		None
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2, status,0, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;Total ram usage:        0 bytes
  9232 ;; Hardware stack levels used: 1
  9233 ;; Hardware stack levels required when called: 9
  9234 ;; This function calls:
  9235 ;;		_TMR4_SetInterruptHandler
  9236 ;; This function is called by:
  9237 ;;		_SYSTEM_Initialize
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text45
  9242  003E4A                     __ptext45:
  9243                           	callstack 0
  9244  003E4A                     _TMR4_Initialize:
  9245                           	callstack 20
  9246  003E4A                     
  9247                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  9248  003E4A  0E01               	movlw	1
  9249  003E4C  6EA2               	movwf	162,c	;volatile
  9250                           
  9251                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  9252  003E4E  0E00               	movlw	0
  9253  003E50  6EA1               	movwf	161,c	;volatile
  9254                           
  9255                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  9256  003E52  0E00               	movlw	0
  9257  003E54  6EA3               	movwf	163,c	;volatile
  9258                           
  9259                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  9260  003E56  0EF9               	movlw	249
  9261  003E58  6E9F               	movwf	159,c	;volatile
  9262                           
  9263                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  9264  003E5A  0E00               	movlw	0
  9265  003E5C  6E9E               	movwf	158,c	;volatile
  9266  003E5E                     
  9267                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  9268  003E5E  0139               	movlb	57	; () banked
  9269  003E60  91A7               	bcf	167,0,b	;volatile
  9270  003E62                     
  9271                           ; BSR set to: 57
  9272                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  9273  003E62  8197               	bsf	151,0,b	;volatile
  9274  003E64                     
  9275                           ; BSR set to: 57
  9276                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  9277  003E64  0E0E               	movlw	low _TMR4_DefaultInterruptHandler
  9278  003E66  6E20               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  9279  003E68  0E41               	movlw	high _TMR4_DefaultInterruptHandler
  9280  003E6A  6E21               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  9281  003E6C  EC70  F020         	call	_TMR4_SetInterruptHandler	;wreg free
  9282  003E70                     
  9283                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  9284  003E70  0EE0               	movlw	224
  9285  003E72  6EA0               	movwf	160,c	;volatile
  9286  003E74  0012               	return		;funcret
  9287  003E76                     __end_of_TMR4_Initialize:
  9288                           	callstack 0
  9289                           
  9290 ;; *************** function _TMR4_SetInterruptHandler *****************
  9291 ;; Defined at:
  9292 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  InterruptHan    2   31[COMRAM] PTR FTN()void 
  9295 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9311 ;;Total ram usage:        2 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; Hardware stack levels required when called: 8
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_TMR4_Initialize
  9318 ;;		_main
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text46
  9323  0040E0                     __ptext46:
  9324                           	callstack 0
  9325  0040E0                     _TMR4_SetInterruptHandler:
  9326                           	callstack 22
  9327  0040E0                     
  9328                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  9329  0040E0  C020  F0F2         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  9330  0040E4  C021  F0F3         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  9331  0040E8  0012               	return		;funcret
  9332  0040EA                     __end_of_TMR4_SetInterruptHandler:
  9333                           	callstack 0
  9334                           
  9335 ;; *************** function _TMR3_Initialize *****************
  9336 ;; Defined at:
  9337 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;		None
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;		None
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      void 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;Total ram usage:        2 bytes
  9356 ;; Hardware stack levels used: 1
  9357 ;; Hardware stack levels required when called: 8
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_SYSTEM_Initialize
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text47
  9366  003BEA                     __ptext47:
  9367                           	callstack 0
  9368  003BEA                     _TMR3_Initialize:
  9369                           	callstack 21
  9370  003BEA                     
  9371                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  9372  003BEA  0E00               	movlw	0
  9373  003BEC  6EA7               	movwf	167,c	;volatile
  9374                           
  9375                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  9376  003BEE  0E00               	movlw	0
  9377  003BF0  6EA8               	movwf	168,c	;volatile
  9378                           
  9379                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  9380  003BF2  0E05               	movlw	5
  9381  003BF4  6EA9               	movwf	169,c	;volatile
  9382                           
  9383                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  9384  003BF6  0E00               	movlw	0
  9385  003BF8  6EA5               	movwf	165,c	;volatile
  9386                           
  9387                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  9388  003BFA  0E00               	movlw	0
  9389  003BFC  6EA4               	movwf	164,c	;volatile
  9390  003BFE                     
  9391                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  9392  003BFE  0139               	movlb	57	; () banked
  9393  003C00  9DA6               	bcf	166,6,b	;volatile
  9394  003C02                     
  9395                           ; BSR set to: 57
  9396                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  9397  003C02  50A4               	movf	164,w,c	;volatile
  9398  003C04  006F FE94  F020    	movff	16293,??_TMR3_Initialize	;volatile
  9399  003C0A  6A21               	clrf	(??_TMR3_Initialize+1)^0,c
  9400  003C0C  C020  F021         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  9401  003C10  6A20               	clrf	??_TMR3_Initialize^0,c
  9402  003C12  1020               	iorwf	??_TMR3_Initialize^0,w,c
  9403  003C14  0100               	movlb	0	; () banked
  9404  003C16  6FF4               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  9405  003C18  5021               	movf	(??_TMR3_Initialize+1)^0,w,c
  9406  003C1A  6FF5               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  9407  003C1C                     
  9408                           ; BSR set to: 0
  9409                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  9410  003C1C  0E01               	movlw	1
  9411  003C1E  6EA6               	movwf	166,c	;volatile
  9412  003C20                     
  9413                           ; BSR set to: 0
  9414  003C20  0012               	return		;funcret
  9415  003C22                     __end_of_TMR3_Initialize:
  9416                           	callstack 0
  9417                           
  9418 ;; *************** function _TMR2_Initialize *****************
  9419 ;; Defined at:
  9420 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, status,2
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;Total ram usage:        0 bytes
  9439 ;; Hardware stack levels used: 1
  9440 ;; Hardware stack levels required when called: 8
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_SYSTEM_Initialize
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text48
  9449  003FF8                     __ptext48:
  9450                           	callstack 0
  9451  003FF8                     _TMR2_Initialize:
  9452                           	callstack 21
  9453  003FF8                     
  9454                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  9455  003FF8  0E05               	movlw	5
  9456  003FFA  6EAE               	movwf	174,c	;volatile
  9457                           
  9458                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  9459  003FFC  0E00               	movlw	0
  9460  003FFE  6EAD               	movwf	173,c	;volatile
  9461                           
  9462                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  9463  004000  0E00               	movlw	0
  9464  004002  6EAF               	movwf	175,c	;volatile
  9465  004004                     
  9466                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  9467  004004  68AB               	setf	171,c	;volatile
  9468                           
  9469                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  9470  004006  0E00               	movlw	0
  9471  004008  6EAA               	movwf	170,c	;volatile
  9472  00400A                     
  9473                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  9474  00400A  0139               	movlb	57	; () banked
  9475  00400C  95A4               	bcf	164,2,b	;volatile
  9476                           
  9477                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  9478  00400E  0EB0               	movlw	176
  9479  004010  6EAC               	movwf	172,c	;volatile
  9480  004012                     
  9481                           ; BSR set to: 57
  9482  004012  0012               	return		;funcret
  9483  004014                     __end_of_TMR2_Initialize:
  9484                           	callstack 0
  9485                           
  9486 ;; *************** function _SMT1_Initialize *****************
  9487 ;; Defined at:
  9488 ;;		line 60 in file "mcc_generated_files/smt1.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;		None
  9491 ;; Auto vars:     Size  Location     Type
  9492 ;;		None
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  1    wreg      void 
  9495 ;; Registers used:
  9496 ;;		wreg, status,2
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;Total ram usage:        0 bytes
  9507 ;; Hardware stack levels used: 1
  9508 ;; Hardware stack levels required when called: 8
  9509 ;; This function calls:
  9510 ;;		Nothing
  9511 ;; This function is called by:
  9512 ;;		_SYSTEM_Initialize
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text49
  9517  003D30                     __ptext49:
  9518                           	callstack 0
  9519  003D30                     _SMT1_Initialize:
  9520                           	callstack 21
  9521  003D30                     
  9522                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  9523  003D30  0E80               	movlw	128
  9524  003D32  013F               	movlb	63	; () banked
  9525  003D34  6F1E               	movwf	30,b	;volatile
  9526                           
  9527                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  9528  003D36  0E42               	movlw	66
  9529  003D38  6F1F               	movwf	31,b	;volatile
  9530                           
  9531                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  9532  003D3A  0E00               	movlw	0
  9533  003D3C  6F20               	movwf	32,b	;volatile
  9534                           
  9535                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  9536  003D3E  0E04               	movlw	4
  9537  003D40  6F21               	movwf	33,b	;volatile
  9538                           
  9539                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  9540  003D42  0E00               	movlw	0
  9541  003D44  6F23               	movwf	35,b	;volatile
  9542                           
  9543                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  9544  003D46  0E00               	movlw	0
  9545  003D48  6F22               	movwf	34,b	;volatile
  9546                           
  9547                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  9548  003D4A  0E01               	movlw	1
  9549  003D4C  6F1D               	movwf	29,b	;volatile
  9550  003D4E                     
  9551                           ; BSR set to: 63
  9552                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  9553  003D4E  691C               	setf	28,b	;volatile
  9554  003D50                     
  9555                           ; BSR set to: 63
  9556                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  9557  003D50  691B               	setf	27,b	;volatile
  9558  003D52                     
  9559                           ; BSR set to: 63
  9560                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  9561  003D52  0139               	movlb	57	; () banked
  9562  003D54  8B91               	bsf	145,5,b	;volatile
  9563  003D56                     
  9564                           ; BSR set to: 57
  9565                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  9566  003D56  8F91               	bsf	145,7,b	;volatile
  9567  003D58                     
  9568                           ; BSR set to: 57
  9569                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  9570  003D58  8D91               	bsf	145,6,b	;volatile
  9571  003D5A                     
  9572                           ; BSR set to: 57
  9573                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  9574  003D5A  013F               	movlb	63	; () banked
  9575  003D5C  8F1F               	bsf	31,7,b	;volatile
  9576  003D5E                     
  9577                           ; BSR set to: 63
  9578  003D5E  0012               	return		;funcret
  9579  003D60                     __end_of_SMT1_Initialize:
  9580                           	callstack 0
  9581                           
  9582 ;; *************** function _PWM8_Initialize *****************
  9583 ;; Defined at:
  9584 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;		None
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  1    wreg      void 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;Total ram usage:        0 bytes
  9603 ;; Hardware stack levels used: 1
  9604 ;; Hardware stack levels required when called: 8
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_SYSTEM_Initialize
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           	psect	text50
  9613  004014                     __ptext50:
  9614                           	callstack 0
  9615  004014                     _PWM8_Initialize:
  9616                           	callstack 21
  9617  004014                     
  9618                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  9619  004014  0E80               	movlw	128
  9620  004016  6E62               	movwf	98,c	;volatile
  9621                           
  9622                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  9623  004018  0E00               	movlw	0
  9624  00401A  6E61               	movwf	97,c	;volatile
  9625                           
  9626                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  9627  00401C  0E00               	movlw	0
  9628  00401E  6E60               	movwf	96,c	;volatile
  9629                           
  9630                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  9631  004020  013F               	movlb	63	; () banked
  9632  004022  515F               	movf	95,w,b	;volatile
  9633  004024  0B3F               	andlw	-193
  9634  004026  0980               	iorlw	128
  9635  004028  6F5F               	movwf	95,b	;volatile
  9636  00402A                     
  9637                           ; BSR set to: 63
  9638  00402A  0012               	return		;funcret
  9639  00402C                     __end_of_PWM8_Initialize:
  9640                           	callstack 0
  9641                           
  9642 ;; *************** function _PWM7_Initialize *****************
  9643 ;; Defined at:
  9644 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;		None
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1    wreg      void 
  9651 ;; Registers used:
  9652 ;;		wreg, status,2
  9653 ;; Tracked objects:
  9654 ;;		On entry : 0/0
  9655 ;;		On exit  : 0/0
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used: 1
  9664 ;; Hardware stack levels required when called: 8
  9665 ;; This function calls:
  9666 ;;		Nothing
  9667 ;; This function is called by:
  9668 ;;		_SYSTEM_Initialize
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text51
  9673  00402C                     __ptext51:
  9674                           	callstack 0
  9675  00402C                     _PWM7_Initialize:
  9676                           	callstack 21
  9677  00402C                     
  9678                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  9679  00402C  0E80               	movlw	128
  9680  00402E  6E66               	movwf	102,c	;volatile
  9681                           
  9682                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  9683  004030  0E00               	movlw	0
  9684  004032  6E65               	movwf	101,c	;volatile
  9685                           
  9686                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  9687  004034  0E00               	movlw	0
  9688  004036  6E64               	movwf	100,c	;volatile
  9689                           
  9690                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  9691  004038  013F               	movlb	63	; () banked
  9692  00403A  515F               	movf	95,w,b	;volatile
  9693  00403C  0BCF               	andlw	-49
  9694  00403E  0920               	iorlw	32
  9695  004040  6F5F               	movwf	95,b	;volatile
  9696  004042                     
  9697                           ; BSR set to: 63
  9698  004042  0012               	return		;funcret
  9699  004044                     __end_of_PWM7_Initialize:
  9700                           	callstack 0
  9701                           
  9702 ;; *************** function _PWM6_Initialize *****************
  9703 ;; Defined at:
  9704 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  9705 ;; Parameters:    Size  Location     Type
  9706 ;;		None
  9707 ;; Auto vars:     Size  Location     Type
  9708 ;;		None
  9709 ;; Return value:  Size  Location     Type
  9710 ;;                  1    wreg      void 
  9711 ;; Registers used:
  9712 ;;		wreg, status,2
  9713 ;; Tracked objects:
  9714 ;;		On entry : 0/0
  9715 ;;		On exit  : 0/0
  9716 ;;		Unchanged: 0/0
  9717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;Total ram usage:        0 bytes
  9723 ;; Hardware stack levels used: 1
  9724 ;; Hardware stack levels required when called: 8
  9725 ;; This function calls:
  9726 ;;		Nothing
  9727 ;; This function is called by:
  9728 ;;		_SYSTEM_Initialize
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text52
  9733  004044                     __ptext52:
  9734                           	callstack 0
  9735  004044                     _PWM6_Initialize:
  9736                           	callstack 21
  9737  004044                     
  9738                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  9739  004044  0E80               	movlw	128
  9740  004046  6E6A               	movwf	106,c	;volatile
  9741                           
  9742                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  9743  004048  0E59               	movlw	89
  9744  00404A  6E69               	movwf	105,c	;volatile
  9745                           
  9746                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  9747  00404C  0E40               	movlw	64
  9748  00404E  6E68               	movwf	104,c	;volatile
  9749                           
  9750                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  9751  004050  013F               	movlb	63	; () banked
  9752  004052  515F               	movf	95,w,b	;volatile
  9753  004054  0BF3               	andlw	-13
  9754  004056  0904               	iorlw	4
  9755  004058  6F5F               	movwf	95,b	;volatile
  9756  00405A                     
  9757                           ; BSR set to: 63
  9758  00405A  0012               	return		;funcret
  9759  00405C                     __end_of_PWM6_Initialize:
  9760                           	callstack 0
  9761                           
  9762 ;; *************** function _PWM5_Initialize *****************
  9763 ;; Defined at:
  9764 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, status,2
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; Hardware stack levels required when called: 8
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_SYSTEM_Initialize
  9789 ;; This function uses a non-reentrant model
  9790 ;;
  9791                           
  9792                           	psect	text53
  9793  00405C                     __ptext53:
  9794                           	callstack 0
  9795  00405C                     _PWM5_Initialize:
  9796                           	callstack 21
  9797  00405C                     
  9798                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  9799  00405C  0E80               	movlw	128
  9800  00405E  6E6E               	movwf	110,c	;volatile
  9801                           
  9802                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  9803  004060  0E59               	movlw	89
  9804  004062  6E6D               	movwf	109,c	;volatile
  9805                           
  9806                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  9807  004064  0E40               	movlw	64
  9808  004066  6E6C               	movwf	108,c	;volatile
  9809                           
  9810                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  9811  004068  013F               	movlb	63	; () banked
  9812  00406A  515F               	movf	95,w,b	;volatile
  9813  00406C  0BFC               	andlw	-4
  9814  00406E  0901               	iorlw	1
  9815  004070  6F5F               	movwf	95,b	;volatile
  9816  004072                     
  9817                           ; BSR set to: 63
  9818  004072  0012               	return		;funcret
  9819  004074                     __end_of_PWM5_Initialize:
  9820                           	callstack 0
  9821                           
  9822 ;; *************** function _PMD_Initialize *****************
  9823 ;; Defined at:
  9824 ;;		line 86 in file "mcc_generated_files/mcc.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;Total ram usage:        0 bytes
  9843 ;; Hardware stack levels used: 1
  9844 ;; Hardware stack levels required when called: 8
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_SYSTEM_Initialize
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           	psect	text54
  9853  003F72                     __ptext54:
  9854                           	callstack 0
  9855  003F72                     _PMD_Initialize:
  9856                           	callstack 21
  9857  003F72                     
  9858                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  9859  003F72  0E00               	movlw	0
  9860  003F74  0139               	movlb	57	; () banked
  9861  003F76  6FC0               	movwf	192,b	;volatile
  9862                           
  9863                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  9864  003F78  0E00               	movlw	0
  9865  003F7A  6FC1               	movwf	193,b	;volatile
  9866                           
  9867                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  9868  003F7C  0E00               	movlw	0
  9869  003F7E  6FC2               	movwf	194,b	;volatile
  9870                           
  9871                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  9872  003F80  0E00               	movlw	0
  9873  003F82  6FC3               	movwf	195,b	;volatile
  9874                           
  9875                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  9876  003F84  0E00               	movlw	0
  9877  003F86  6FC4               	movwf	196,b	;volatile
  9878                           
  9879                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  9880  003F88  0E00               	movlw	0
  9881  003F8A  6FC5               	movwf	197,b	;volatile
  9882                           
  9883                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  9884  003F8C  0E00               	movlw	0
  9885  003F8E  6FC6               	movwf	198,b	;volatile
  9886                           
  9887                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  9888  003F90  0E00               	movlw	0
  9889  003F92  6FC7               	movwf	199,b	;volatile
  9890  003F94                     
  9891                           ; BSR set to: 57
  9892  003F94  0012               	return		;funcret
  9893  003F96                     __end_of_PMD_Initialize:
  9894                           	callstack 0
  9895                           
  9896 ;; *************** function _PIN_MANAGER_Initialize *****************
  9897 ;; Defined at:
  9898 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;		None
  9901 ;; Auto vars:     Size  Location     Type
  9902 ;;		None
  9903 ;; Return value:  Size  Location     Type
  9904 ;;                  1    wreg      void 
  9905 ;; Registers used:
  9906 ;;		wreg, status,2
  9907 ;; Tracked objects:
  9908 ;;		On entry : 0/0
  9909 ;;		On exit  : 0/0
  9910 ;;		Unchanged: 0/0
  9911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9916 ;;Total ram usage:        0 bytes
  9917 ;; Hardware stack levels used: 1
  9918 ;; Hardware stack levels required when called: 8
  9919 ;; This function calls:
  9920 ;;		Nothing
  9921 ;; This function is called by:
  9922 ;;		_SYSTEM_Initialize
  9923 ;; This function uses a non-reentrant model
  9924 ;;
  9925                           
  9926                           	psect	text55
  9927  00302E                     __ptext55:
  9928                           	callstack 0
  9929  00302E                     _PIN_MANAGER_Initialize:
  9930                           	callstack 21
  9931  00302E                     
  9932                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9933  00302E  0E00               	movlw	0
  9934  003030  6EBE               	movwf	190,c	;volatile
  9935                           
  9936                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9937  003032  0E00               	movlw	0
  9938  003034  6EBD               	movwf	189,c	;volatile
  9939                           
  9940                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  9941  003036  0E24               	movlw	36
  9942  003038  6EBA               	movwf	186,c	;volatile
  9943                           
  9944                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9945  00303A  0E00               	movlw	0
  9946  00303C  6EBB               	movwf	187,c	;volatile
  9947                           
  9948                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9949  00303E  0E00               	movlw	0
  9950  003040  6EBC               	movwf	188,c	;volatile
  9951                           
  9952                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9953  003042  0E07               	movlw	7
  9954  003044  6EC6               	movwf	198,c	;volatile
  9955                           
  9956                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  9957  003046  0EC0               	movlw	192
  9958  003048  6EC2               	movwf	194,c	;volatile
  9959                           
  9960                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  9961  00304A  0EF7               	movlw	247
  9962  00304C  6EC3               	movwf	195,c	;volatile
  9963  00304E                     
  9964                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9965  00304E  68C4               	setf	196,c	;volatile
  9966  003050                     
  9967                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9968  003050  68C5               	setf	197,c	;volatile
  9969                           
  9970                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  9971  003052  0E1F               	movlw	31
  9972  003054  013A               	movlb	58	; () banked
  9973  003056  6F70               	movwf	112,b	;volatile
  9974  003058                     
  9975                           ; BSR set to: 58
  9976                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  9977  003058  6960               	setf	96,b	;volatile
  9978                           
  9979                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  9980  00305A  0EC0               	movlw	192
  9981  00305C  6F50               	movwf	80,b	;volatile
  9982                           
  9983                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  9984  00305E  0E07               	movlw	7
  9985  003060  6F80               	movwf	128,b	;volatile
  9986                           
  9987                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  9988  003062  0E7F               	movlw	127
  9989  003064  6F40               	movwf	64,b	;volatile
  9990                           
  9991                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  9992  003066  0E00               	movlw	0
  9993  003068  6F71               	movwf	113,b	;volatile
  9994                           
  9995                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  9996  00306A  0E00               	movlw	0
  9997  00306C  6F81               	movwf	129,b	;volatile
  9998                           
  9999                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 10000  00306E  0E00               	movlw	0
 10001  003070  6F51               	movwf	81,b	;volatile
 10002                           
 10003                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 10004  003072  0E00               	movlw	0
 10005  003074  6F41               	movwf	65,b	;volatile
 10006                           
 10007                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 10008  003076  0E00               	movlw	0
 10009  003078  6F61               	movwf	97,b	;volatile
 10010                           
 10011                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 10012  00307A  0E00               	movlw	0
 10013  00307C  6F5A               	movwf	90,b	;volatile
 10014                           
 10015                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 10016  00307E  0E00               	movlw	0
 10017  003080  6F5B               	movwf	91,b	;volatile
 10018                           
 10019                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 10020  003082  0E00               	movlw	0
 10021  003084  6F6A               	movwf	106,b	;volatile
 10022                           
 10023                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 10024  003086  0E00               	movlw	0
 10025  003088  6F6B               	movwf	107,b	;volatile
 10026                           
 10027                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 10028  00308A  0E00               	movlw	0
 10029  00308C  6F7A               	movwf	122,b	;volatile
 10030                           
 10031                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 10032  00308E  0E00               	movlw	0
 10033  003090  6F7B               	movwf	123,b	;volatile
 10034                           
 10035                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 10036  003092  0E00               	movlw	0
 10037  003094  6F82               	movwf	130,b	;volatile
 10038                           
 10039                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 10040  003096  0E00               	movlw	0
 10041  003098  6F42               	movwf	66,b	;volatile
 10042                           
 10043                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 10044  00309A  0E00               	movlw	0
 10045  00309C  6F52               	movwf	82,b	;volatile
 10046                           
 10047                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 10048  00309E  0E00               	movlw	0
 10049  0030A0  6F62               	movwf	98,b	;volatile
 10050                           
 10051                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 10052  0030A2  0E00               	movlw	0
 10053  0030A4  6F72               	movwf	114,b	;volatile
 10054  0030A6                     
 10055                           ; BSR set to: 58
 10056                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 10057  0030A6  6943               	setf	67,b	;volatile
 10058  0030A8                     
 10059                           ; BSR set to: 58
 10060                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 10061  0030A8  6953               	setf	83,b	;volatile
 10062  0030AA                     
 10063                           ; BSR set to: 58
 10064                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 10065  0030AA  6963               	setf	99,b	;volatile
 10066  0030AC                     
 10067                           ; BSR set to: 58
 10068                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 10069  0030AC  6973               	setf	115,b	;volatile
 10070                           
 10071                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 10072  0030AE  0E07               	movlw	7
 10073  0030B0  6F83               	movwf	131,b	;volatile
 10074  0030B2                     
 10075                           ; BSR set to: 58
 10076                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 10077  0030B2  6944               	setf	68,b	;volatile
 10078  0030B4                     
 10079                           ; BSR set to: 58
 10080                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 10081  0030B4  6954               	setf	84,b	;volatile
 10082  0030B6                     
 10083                           ; BSR set to: 58
 10084                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 10085  0030B6  6964               	setf	100,b	;volatile
 10086  0030B8                     
 10087                           ; BSR set to: 58
 10088                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 10089  0030B8  6974               	setf	116,b	;volatile
 10090                           
 10091                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 10092  0030BA  0E0F               	movlw	15
 10093  0030BC  6F84               	movwf	132,b	;volatile
 10094                           
 10095                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 10096  0030BE  0E1F               	movlw	31
 10097  0030C0  6FCF               	movwf	207,b	;volatile
 10098                           
 10099                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 10100  0030C2  0E09               	movlw	9
 10101  0030C4  6FDC               	movwf	220,b	;volatile
 10102                           
 10103                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 10104  0030C6  0E0E               	movlw	14
 10105  0030C8  6F01               	movwf	1,b	;volatile
 10106                           
 10107                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 10108  0030CA  0E0A               	movlw	10
 10109  0030CC  6FE5               	movwf	229,b	;volatile
 10110                           
 10111                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 10112  0030CE  0E0D               	movlw	13
 10113  0030D0  6F00               	movwf	0,b	;volatile
 10114                           
 10115                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 10116  0030D2  0E1D               	movlw	29
 10117  0030D4  6FC9               	movwf	201,b	;volatile
 10118                           
 10119                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 10120  0030D6  0E10               	movlw	16
 10121  0030D8  6F04               	movwf	4,b	;volatile
 10122                           
 10123                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 10124  0030DA  0E07               	movlw	7
 10125  0030DC  6FD9               	movwf	217,b	;volatile
 10126                           
 10127                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 10128  0030DE  0E09               	movlw	9
 10129  0030E0  6FD1               	movwf	209,b	;volatile
 10130                           
 10131                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 10132  0030E2  0E0F               	movlw	15
 10133  0030E4  6F03               	movwf	3,b	;volatile
 10134                           
 10135                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 10136  0030E6  0E13               	movlw	19
 10137  0030E8  6F0B               	movwf	11,b	;volatile
 10138                           
 10139                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 10140  0030EA  0E08               	movlw	8
 10141  0030EC  6FDB               	movwf	219,b	;volatile
 10142                           
 10143                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 10144  0030EE  0E08               	movlw	8
 10145  0030F0  6FD2               	movwf	210,b	;volatile
 10146                           
 10147                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 10148  0030F2  0E1E               	movlw	30
 10149  0030F4  6FD0               	movwf	208,b	;volatile
 10150  0030F6                     
 10151                           ; BSR set to: 58
 10152  0030F6  0012               	return		;funcret
 10153  0030F8                     __end_of_PIN_MANAGER_Initialize:
 10154                           	callstack 0
 10155                           
 10156 ;; *************** function _OSCILLATOR_Initialize *****************
 10157 ;; Defined at:
 10158 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10159 ;; Parameters:    Size  Location     Type
 10160 ;;		None
 10161 ;; Auto vars:     Size  Location     Type
 10162 ;;		None
 10163 ;; Return value:  Size  Location     Type
 10164 ;;                  1    wreg      void 
 10165 ;; Registers used:
 10166 ;;		wreg, status,2
 10167 ;; Tracked objects:
 10168 ;;		On entry : 0/0
 10169 ;;		On exit  : 0/0
 10170 ;;		Unchanged: 0/0
 10171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10176 ;;Total ram usage:        0 bytes
 10177 ;; Hardware stack levels used: 1
 10178 ;; Hardware stack levels required when called: 8
 10179 ;; This function calls:
 10180 ;;		Nothing
 10181 ;; This function is called by:
 10182 ;;		_SYSTEM_Initialize
 10183 ;; This function uses a non-reentrant model
 10184 ;;
 10185                           
 10186                           	psect	text56
 10187  004074                     __ptext56:
 10188                           	callstack 0
 10189  004074                     _OSCILLATOR_Initialize:
 10190                           	callstack 21
 10191  004074                     
 10192                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 10193  004074  0E60               	movlw	96
 10194  004076  0139               	movlb	57	; () banked
 10195  004078  6FD9               	movwf	217,b	;volatile
 10196                           
 10197                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 10198  00407A  0E00               	movlw	0
 10199  00407C  6FDB               	movwf	219,b	;volatile
 10200                           
 10201                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 10202  00407E  0E00               	movlw	0
 10203  004080  6FDD               	movwf	221,b	;volatile
 10204                           
 10205                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 10206  004082  0E08               	movlw	8
 10207  004084  6FDF               	movwf	223,b	;volatile
 10208                           
 10209                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 10210  004086  0E00               	movlw	0
 10211  004088  6FDE               	movwf	222,b	;volatile
 10212  00408A                     
 10213                           ; BSR set to: 57
 10214  00408A  0012               	return		;funcret
 10215  00408C                     __end_of_OSCILLATOR_Initialize:
 10216                           	callstack 0
 10217                           
 10218 ;; *************** function _INTERRUPT_Initialize *****************
 10219 ;; Defined at:
 10220 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;		None
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;  state           1   31[COMRAM] _Bool 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg, status,2
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10238 ;;Total ram usage:        1 bytes
 10239 ;; Hardware stack levels used: 1
 10240 ;; Hardware stack levels required when called: 8
 10241 ;; This function calls:
 10242 ;;		Nothing
 10243 ;; This function is called by:
 10244 ;;		_SYSTEM_Initialize
 10245 ;; This function uses a non-reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text57
 10249  003898                     __ptext57:
 10250                           	callstack 0
 10251  003898                     _INTERRUPT_Initialize:
 10252                           	callstack 21
 10253  003898                     
 10254                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 10255  003898  8AD2               	bsf	210,5,c	;volatile
 10256  00389A                     
 10257                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 10258  00389A  0E00               	movlw	0
 10259  00389C  BED2               	btfsc	16338,7,c	;volatile
 10260  00389E  0E01               	movlw	1
 10261  0038A0  6E20               	movwf	INTERRUPT_Initialize@state^0,c
 10262  0038A2                     
 10263                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 10264  0038A2  9ED2               	bcf	16338,7,c	;volatile
 10265                           
 10266                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 10267  0038A4  0E55               	movlw	85
 10268  0038A6  6ED4               	movwf	212,c	;volatile
 10269                           
 10270                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 10271  0038A8  0EAA               	movlw	170
 10272  0038AA  6ED4               	movwf	212,c	;volatile
 10273  0038AC                     
 10274                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 10275  0038AC  90D4               	bcf	212,0,c	;volatile
 10276                           
 10277                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 10278  0038AE  0E00               	movlw	0
 10279  0038B0  6ED7               	movwf	215,c	;volatile
 10280                           
 10281                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 10282  0038B2  0E00               	movlw	0
 10283  0038B4  6ED6               	movwf	214,c	;volatile
 10284                           
 10285                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 10286  0038B6  0E08               	movlw	8
 10287  0038B8  6ED5               	movwf	213,c	;volatile
 10288                           
 10289                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 10290  0038BA  0E55               	movlw	85
 10291  0038BC  6ED4               	movwf	212,c	;volatile
 10292                           
 10293                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 10294  0038BE  0EAA               	movlw	170
 10295  0038C0  6ED4               	movwf	212,c	;volatile
 10296  0038C2                     
 10297                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 10298  0038C2  80D4               	bsf	212,0,c	;volatile
 10299  0038C4                     
 10300                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 10301  0038C4  B020               	btfsc	INTERRUPT_Initialize@state^0,0,c
 10302  0038C6  D002               	bra	u1525
 10303  0038C8  9ED2               	bcf	16338,7,c	;volatile
 10304  0038CA  D001               	bra	u1526
 10305  0038CC                     u1525:
 10306  0038CC  8ED2               	bsf	16338,7,c	;volatile
 10307  0038CE                     u1526:
 10308  0038CE                     
 10309                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 10310  0038CE  0139               	movlb	57	; () banked
 10311  0038D0  9983               	bcf	131,4,b	;volatile
 10312  0038D2                     
 10313                           ; BSR set to: 57
 10314                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 10315  0038D2  9783               	bcf	131,3,b	;volatile
 10316  0038D4                     
 10317                           ; BSR set to: 57
 10318                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 10319  0038D4  8F81               	bsf	129,7,b	;volatile
 10320  0038D6                     
 10321                           ; BSR set to: 57
 10322                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 10323  0038D6  8B81               	bsf	129,5,b	;volatile
 10324  0038D8                     
 10325                           ; BSR set to: 57
 10326                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 10327  0038D8  8D81               	bsf	129,6,b	;volatile
 10328  0038DA                     
 10329                           ; BSR set to: 57
 10330                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 10331  0038DA  818A               	bsf	138,0,b	;volatile
 10332  0038DC                     
 10333                           ; BSR set to: 57
 10334                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 10335  0038DC  8F88               	bsf	136,7,b	;volatile
 10336  0038DE                     
 10337                           ; BSR set to: 57
 10338                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 10339  0038DE  9187               	bcf	135,0,b	;volatile
 10340  0038E0                     
 10341                           ; BSR set to: 57
 10342                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 10343  0038E0  8389               	bsf	137,1,b	;volatile
 10344  0038E2                     
 10345                           ; BSR set to: 57
 10346  0038E2  0012               	return		;funcret
 10347  0038E4                     __end_of_INTERRUPT_Initialize:
 10348                           	callstack 0
 10349                           
 10350 ;; *************** function _CLC3_Initialize *****************
 10351 ;; Defined at:
 10352 ;;		line 58 in file "mcc_generated_files/clc3.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, status,2
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;Total ram usage:        0 bytes
 10371 ;; Hardware stack levels used: 1
 10372 ;; Hardware stack levels required when called: 8
 10373 ;; This function calls:
 10374 ;;		Nothing
 10375 ;; This function is called by:
 10376 ;;		_SYSTEM_Initialize
 10377 ;; This function uses a non-reentrant model
 10378 ;;
 10379                           
 10380                           	psect	text58
 10381  003E76                     __ptext58:
 10382                           	callstack 0
 10383  003E76                     _CLC3_Initialize:
 10384                           	callstack 21
 10385  003E76                     
 10386                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 10387  003E76  0E00               	movlw	0
 10388  003E78  013C               	movlb	60	; () banked
 10389  003E7A  6F61               	movwf	97,b	;volatile
 10390                           
 10391                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 10392  003E7C  0E03               	movlw	3
 10393  003E7E  6F62               	movwf	98,b	;volatile
 10394                           
 10395                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 10396  003E80  0E02               	movlw	2
 10397  003E82  6F63               	movwf	99,b	;volatile
 10398                           
 10399                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 10400  003E84  0E00               	movlw	0
 10401  003E86  6F64               	movwf	100,b	;volatile
 10402                           
 10403                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 10404  003E88  0E00               	movlw	0
 10405  003E8A  6F65               	movwf	101,b	;volatile
 10406                           
 10407                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 10408  003E8C  0E02               	movlw	2
 10409  003E8E  6F66               	movwf	102,b	;volatile
 10410                           
 10411                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 10412  003E90  0E08               	movlw	8
 10413  003E92  6F67               	movwf	103,b	;volatile
 10414                           
 10415                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 10416  003E94  0E00               	movlw	0
 10417  003E96  6F68               	movwf	104,b	;volatile
 10418                           
 10419                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 10420  003E98  0E00               	movlw	0
 10421  003E9A  6F69               	movwf	105,b	;volatile
 10422                           
 10423                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 10424  003E9C  0E85               	movlw	133
 10425  003E9E  6F60               	movwf	96,b	;volatile
 10426  003EA0                     
 10427                           ; BSR set to: 60
 10428  003EA0  0012               	return		;funcret
 10429  003EA2                     __end_of_CLC3_Initialize:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function _CCP4_Initialize *****************
 10433 ;; Defined at:
 10434 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;		None
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2, status,0, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10452 ;;Total ram usage:        0 bytes
 10453 ;; Hardware stack levels used: 1
 10454 ;; Hardware stack levels required when called: 9
 10455 ;; This function calls:
 10456 ;;		_CCP4_SetCallBack
 10457 ;; This function is called by:
 10458 ;;		_SYSTEM_Initialize
 10459 ;; This function uses a non-reentrant model
 10460 ;;
 10461                           
 10462                           	psect	text59
 10463  003DC0                     __ptext59:
 10464                           	callstack 0
 10465  003DC0                     _CCP4_Initialize:
 10466                           	callstack 20
 10467  003DC0                     
 10468                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 10469  003DC0  0E83               	movlw	131
 10470  003DC2  6E72               	movwf	114,c	;volatile
 10471                           
 10472                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 10473  003DC4  0E00               	movlw	0
 10474  003DC6  6E73               	movwf	115,c	;volatile
 10475                           
 10476                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 10477  003DC8  0E00               	movlw	0
 10478  003DCA  6E71               	movwf	113,c	;volatile
 10479                           
 10480                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 10481  003DCC  0E00               	movlw	0
 10482  003DCE  6E70               	movwf	112,c	;volatile
 10483  003DD0                     
 10484                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 10485  003DD0  0E90               	movlw	low _CCP4_DefaultCallBack
 10486  003DD2  6E20               	movwf	CCP4_SetCallBack@customCallBack^0,c
 10487  003DD4  0E3D               	movlw	high _CCP4_DefaultCallBack
 10488  003DD6  6E21               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 10489  003DD8  EC75  F020         	call	_CCP4_SetCallBack	;wreg free
 10490  003DDC                     
 10491                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 10492  003DDC  013F               	movlb	63	; () banked
 10493  003DDE  515E               	movf	94,w,b	;volatile
 10494  003DE0  0B3F               	andlw	-193
 10495  003DE2  0980               	iorlw	128
 10496  003DE4  6F5E               	movwf	94,b	;volatile
 10497  003DE6                     
 10498                           ; BSR set to: 63
 10499                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 10500  003DE6  0139               	movlb	57	; () banked
 10501  003DE8  91AA               	bcf	170,0,b	;volatile
 10502  003DEA                     
 10503                           ; BSR set to: 57
 10504                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 10505  003DEA  819A               	bsf	154,0,b	;volatile
 10506  003DEC                     
 10507                           ; BSR set to: 57
 10508  003DEC  0012               	return		;funcret
 10509  003DEE                     __end_of_CCP4_Initialize:
 10510                           	callstack 0
 10511                           
 10512 ;; *************** function _CCP4_SetCallBack *****************
 10513 ;; Defined at:
 10514 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 10515 ;; Parameters:    Size  Location     Type
 10516 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10517 ;;		 -> CCP4_DefaultCallBack(1), 
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;		None
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      void 
 10522 ;; Registers used:
 10523 ;;		wreg, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10533 ;;Total ram usage:        2 bytes
 10534 ;; Hardware stack levels used: 1
 10535 ;; Hardware stack levels required when called: 8
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_CCP4_Initialize
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text60
 10544  0040EA                     __ptext60:
 10545                           	callstack 0
 10546  0040EA                     _CCP4_SetCallBack:
 10547                           	callstack 20
 10548  0040EA                     
 10549                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 10550  0040EA  C020  F0F6         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 10551  0040EE  C021  F0F7         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 10552  0040F2  0012               	return		;funcret
 10553  0040F4                     __end_of_CCP4_SetCallBack:
 10554                           	callstack 0
 10555                           
 10556 ;; *************** function _CCP3_Initialize *****************
 10557 ;; Defined at:
 10558 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;		None
 10561 ;; Auto vars:     Size  Location     Type
 10562 ;;		None
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  1    wreg      void 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2, status,0, cstack
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;Total ram usage:        0 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 9
 10579 ;; This function calls:
 10580 ;;		_CCP3_SetCallBack
 10581 ;; This function is called by:
 10582 ;;		_SYSTEM_Initialize
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text61
 10587  003DEE                     __ptext61:
 10588                           	callstack 0
 10589  003DEE                     _CCP3_Initialize:
 10590                           	callstack 20
 10591  003DEE                     
 10592                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 10593  003DEE  0E83               	movlw	131
 10594  003DF0  6E76               	movwf	118,c	;volatile
 10595                           
 10596                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 10597  003DF2  0E00               	movlw	0
 10598  003DF4  6E77               	movwf	119,c	;volatile
 10599                           
 10600                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 10601  003DF6  0E00               	movlw	0
 10602  003DF8  6E75               	movwf	117,c	;volatile
 10603                           
 10604                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 10605  003DFA  0E00               	movlw	0
 10606  003DFC  6E74               	movwf	116,c	;volatile
 10607  003DFE                     
 10608                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 10609  003DFE  0E60               	movlw	low _CCP3_DefaultCallBack
 10610  003E00  6E20               	movwf	CCP3_SetCallBack@customCallBack^0,c
 10611  003E02  0E3D               	movlw	high _CCP3_DefaultCallBack
 10612  003E04  6E21               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 10613  003E06  EC7A  F020         	call	_CCP3_SetCallBack	;wreg free
 10614  003E0A                     
 10615                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 10616  003E0A  013F               	movlb	63	; () banked
 10617  003E0C  515E               	movf	94,w,b	;volatile
 10618  003E0E  0BCF               	andlw	-49
 10619  003E10  0920               	iorlw	32
 10620  003E12  6F5E               	movwf	94,b	;volatile
 10621  003E14                     
 10622                           ; BSR set to: 63
 10623                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 10624  003E14  0139               	movlb	57	; () banked
 10625  003E16  93A9               	bcf	169,1,b	;volatile
 10626  003E18                     
 10627                           ; BSR set to: 57
 10628                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 10629  003E18  8399               	bsf	153,1,b	;volatile
 10630  003E1A                     
 10631                           ; BSR set to: 57
 10632  003E1A  0012               	return		;funcret
 10633  003E1C                     __end_of_CCP3_Initialize:
 10634                           	callstack 0
 10635                           
 10636 ;; *************** function _CCP3_SetCallBack *****************
 10637 ;; Defined at:
 10638 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  customCallBa    2   31[COMRAM] PTR FTN(unsigned short ,
 10641 ;;		 -> CCP3_DefaultCallBack(1), 
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;		None
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      void 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10657 ;;Total ram usage:        2 bytes
 10658 ;; Hardware stack levels used: 1
 10659 ;; Hardware stack levels required when called: 8
 10660 ;; This function calls:
 10661 ;;		Nothing
 10662 ;; This function is called by:
 10663 ;;		_CCP3_Initialize
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text62
 10668  0040F4                     __ptext62:
 10669                           	callstack 0
 10670  0040F4                     _CCP3_SetCallBack:
 10671                           	callstack 20
 10672  0040F4                     
 10673                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 10674  0040F4  C020  F0F8         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 10675  0040F8  C021  F0F9         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 10676  0040FC  0012               	return		;funcret
 10677  0040FE                     __end_of_CCP3_SetCallBack:
 10678                           	callstack 0
 10679                           
 10680 ;; *************** function _ADCC_Initialize *****************
 10681 ;; Defined at:
 10682 ;;		line 62 in file "mcc_generated_files/adcc.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;		None
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;		None
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      void 
 10689 ;; Registers used:
 10690 ;;		wreg, status,2
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10700 ;;Total ram usage:        0 bytes
 10701 ;; Hardware stack levels used: 1
 10702 ;; Hardware stack levels required when called: 8
 10703 ;; This function calls:
 10704 ;;		Nothing
 10705 ;; This function is called by:
 10706 ;;		_SYSTEM_Initialize
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text63
 10711  0036F8                     __ptext63:
 10712                           	callstack 0
 10713  0036F8                     _ADCC_Initialize:
 10714                           	callstack 21
 10715  0036F8                     
 10716                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 10717  0036F8  0E00               	movlw	0
 10718  0036FA  013E               	movlb	62	; () banked
 10719  0036FC  6FDE               	movwf	222,b	;volatile
 10720                           
 10721                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 10722  0036FE  0E00               	movlw	0
 10723  003700  6FDF               	movwf	223,b	;volatile
 10724                           
 10725                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 10726  003702  0E00               	movlw	0
 10727  003704  6FE0               	movwf	224,b	;volatile
 10728                           
 10729                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 10730  003706  0E00               	movlw	0
 10731  003708  6FE1               	movwf	225,b	;volatile
 10732                           
 10733                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 10734  00370A  0E00               	movlw	0
 10735  00370C  6FE4               	movwf	228,b	;volatile
 10736                           
 10737                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 10738  00370E  0E00               	movlw	0
 10739  003710  6FE5               	movwf	229,b	;volatile
 10740                           
 10741                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 10742  003712  0E00               	movlw	0
 10743  003714  6FEA               	movwf	234,b	;volatile
 10744                           
 10745                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 10746  003716  0E00               	movlw	0
 10747  003718  6FEC               	movwf	236,b	;volatile
 10748                           
 10749                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 10750  00371A  0E00               	movlw	0
 10751  00371C  6FF1               	movwf	241,b	;volatile
 10752                           
 10753                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 10754  00371E  0E58               	movlw	88
 10755  003720  6FF3               	movwf	243,b	;volatile
 10756                           
 10757                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 10758  003722  0E02               	movlw	2
 10759  003724  6FF4               	movwf	244,b	;volatile
 10760                           
 10761                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 10762  003726  0E00               	movlw	0
 10763  003728  6FF5               	movwf	245,b	;volatile
 10764                           
 10765                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 10766  00372A  0E00               	movlw	0
 10767  00372C  6FF6               	movwf	246,b	;volatile
 10768                           
 10769                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 10770  00372E  0E00               	movlw	0
 10771  003730  6FF7               	movwf	247,b	;volatile
 10772                           
 10773                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 10774  003732  0E00               	movlw	0
 10775  003734  6FF9               	movwf	249,b	;volatile
 10776                           
 10777                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 10778  003736  0E00               	movlw	0
 10779  003738  6FFA               	movwf	250,b	;volatile
 10780                           
 10781                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 10782  00373A  0E00               	movlw	0
 10783  00373C  6FFB               	movwf	251,b	;volatile
 10784                           
 10785                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 10786  00373E  0E00               	movlw	0
 10787  003740  6FFC               	movwf	252,b	;volatile
 10788                           
 10789                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 10790  003742  0E00               	movlw	0
 10791  003744  6FFD               	movwf	253,b	;volatile
 10792                           
 10793                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 10794  003746  0E00               	movlw	0
 10795  003748  6FFE               	movwf	254,b	;volatile
 10796                           
 10797                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 10798  00374A  0E1F               	movlw	31
 10799  00374C  6FFF               	movwf	255,b	;volatile
 10800                           
 10801                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 10802  00374E  0E84               	movlw	132
 10803  003750  6FF8               	movwf	248,b	;volatile
 10804  003752                     
 10805                           ; BSR set to: 62
 10806  003752  0012               	return		;funcret
 10807  003754                     __end_of_ADCC_Initialize:
 10808                           	callstack 0
 10809                           
 10810 ;; *************** function _UART1_tx_vect_isr *****************
 10811 ;; Defined at:
 10812 ;;		line 235 in file "mcc_generated_files/uart1.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;		None
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1    wreg      void 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;Total ram usage:        3 bytes
 10831 ;; Hardware stack levels used: 1
 10832 ;; Hardware stack levels required when called: 5
 10833 ;; This function calls:
 10834 ;;		Absolute function
 10835 ;;		_UART1_Transmit_ISR
 10836 ;; This function is called by:
 10837 ;;		Interrupt level 1
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text64
 10842  0037A8                     __ptext64:
 10843                           	callstack 0
 10844  0037A8                     _UART1_tx_vect_isr:
 10845                           	callstack 14
 10846                           
 10847                           ; BSR set to: 62
 10848                           ;incstack = 0
 10849  0037A8  006F FF60  F017    	movff	status,??_UART1_tx_vect_isr
 10850  0037AE  006F FFE8  F018    	movff	pclath,??_UART1_tx_vect_isr+1
 10851  0037B4  006F FFEC  F019    	movff	pclatu,??_UART1_tx_vect_isr+2
 10852  0037BA                     
 10853                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 10854  0037BA  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 10855  0037BC  103D               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 10856  0037BE  B4D8               	btfsc	status,2,c
 10857  0037C0  EFE4  F01B         	goto	i1u425_21
 10858  0037C4  EFE6  F01B         	goto	i1u425_20
 10859  0037C8                     i1u425_21:
 10860  0037C8  EFF2  F01B         	goto	i1l324
 10861  0037CC                     i1u425_20:
 10862  0037CC                     
 10863                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 10864  0037CC  D802               	call	i1u426_28
 10865  0037CE  EFF2  F01B         	goto	i1u426_29
 10866  0037D2                     i1u426_28:
 10867  0037D2  0005               	push	
 10868  0037D4  6EFA               	movwf	pclath,c
 10869  0037D6  503C               	movf	_UART1_TxInterruptHandler^0,w,c
 10870  0037D8  6EFD               	movwf	tosl,c
 10871  0037DA  503D               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 10872  0037DC  6EFE               	movwf	tosh,c
 10873  0037DE  6AFF               	clrf	tosu,c
 10874  0037E0  50FA               	movf	pclath,w,c
 10875  0037E2  0012               	return		;indir
 10876  0037E4                     i1u426_29:
 10877  0037E4                     i1l324:
 10878  0037E4  0060  F067  FFFB   	movff	??_UART1_tx_vect_isr+2,pclatu
 10879  0037EA  0060  F063  FFFA   	movff	??_UART1_tx_vect_isr+1,pclath
 10880  0037F0  0060  F05F  FFD8   	movff	??_UART1_tx_vect_isr,status
 10881  0037F6  0011               	retfie		f
 10882  0037F8                     __end_of_UART1_tx_vect_isr:
 10883                           	callstack 0
 10884                           
 10885 ;; *************** function _UART1_Transmit_ISR *****************
 10886 ;; Defined at:
 10887 ;;		line 253 in file "mcc_generated_files/uart1.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;		None
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;		None
 10892 ;; Return value:  Size  Location     Type
 10893 ;;                  1    wreg      void 
 10894 ;; Registers used:
 10895 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;Total ram usage:        0 bytes
 10906 ;; Hardware stack levels used: 1
 10907 ;; Hardware stack levels required when called: 4
 10908 ;; This function calls:
 10909 ;;		Nothing
 10910 ;; This function is called by:
 10911 ;;		_UART1_Initialize
 10912 ;;		_UART1_tx_vect_isr
 10913 ;; This function uses a non-reentrant model
 10914 ;;
 10915                           
 10916                           	psect	text65
 10917  003AEC                     __ptext65:
 10918                           	callstack 0
 10919  003AEC                     _UART1_Transmit_ISR:
 10920                           	callstack 14
 10921  003AEC                     
 10922                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 10923  003AEC  0E08               	movlw	8
 10924  003AEE  6040               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 10925  003AF0  EF7C  F01D         	goto	i1u410_21
 10926  003AF4  EF7E  F01D         	goto	i1u410_20
 10927  003AF8                     i1u410_21:
 10928  003AF8  EF95  F01D         	goto	i1l333
 10929  003AFC                     i1u410_20:
 10930  003AFC                     
 10931                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 10932  003AFC  0EC4               	movlw	low _uart1TxBuffer
 10933  003AFE  2432               	addwf	_uart1TxTail^0,w,c	;volatile
 10934  003B00  6ED9               	movwf	fsr2l,c
 10935  003B02  6ADA               	clrf	fsr2h,c
 10936  003B04  0E00               	movlw	high _uart1TxBuffer
 10937  003B06  22DA               	addwfc	fsr2h,f,c
 10938  003B08  50DF               	movf	indf2,w,c
 10939  003B0A  013D               	movlb	61	; () banked
 10940  003B0C  6FEA               	movwf	234,b	;volatile
 10941  003B0E                     
 10942                           ; BSR set to: 61
 10943  003B0E  2A32               	incf	_uart1TxTail^0,f,c	;volatile
 10944  003B10                     
 10945                           ; BSR set to: 61
 10946                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 10947  003B10  0E07               	movlw	7
 10948  003B12  6432               	cpfsgt	_uart1TxTail^0,c	;volatile
 10949  003B14  EF8E  F01D         	goto	i1u411_21
 10950  003B18  EF90  F01D         	goto	i1u411_20
 10951  003B1C                     i1u411_21:
 10952  003B1C  EF92  F01D         	goto	i1l5371
 10953  003B20                     i1u411_20:
 10954  003B20                     
 10955                           ; BSR set to: 61
 10956                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 10957  003B20  0E00               	movlw	0
 10958  003B22  6E32               	movwf	_uart1TxTail^0,c	;volatile
 10959  003B24                     i1l5371:
 10960                           
 10961                           ; BSR set to: 61
 10962                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 10963  003B24  2A40               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 10964                           
 10965                           ;mcc_generated_files/uart1.c: 264:     }
 10966  003B26  EF97  F01D         	goto	i1l336
 10967  003B2A                     i1l333:
 10968                           
 10969                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 10970  003B2A  0139               	movlb	57	; () banked
 10971  003B2C  9993               	bcf	147,4,b	;volatile
 10972  003B2E                     i1l336:
 10973  003B2E  0012               	return		;funcret
 10974  003B30                     __end_of_UART1_Transmit_ISR:
 10975                           	callstack 0
 10976                           
 10977 ;; *************** function _UART1_rx_vect_isr *****************
 10978 ;; Defined at:
 10979 ;;		line 243 in file "mcc_generated_files/uart1.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;		None
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;		None
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10995 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10996 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10997 ;;Total ram usage:        3 bytes
 10998 ;; Hardware stack levels used: 1
 10999 ;; Hardware stack levels required when called: 7
 11000 ;; This function calls:
 11001 ;;		Absolute function
 11002 ;;		_UART1_Receive_ISR
 11003 ;; This function is called by:
 11004 ;;		Interrupt level 1
 11005 ;; This function uses a non-reentrant model
 11006 ;;
 11007                           
 11008                           	psect	text66
 11009  0037F8                     __ptext66:
 11010                           	callstack 0
 11011  0037F8                     _UART1_rx_vect_isr:
 11012                           	callstack 12
 11013                           
 11014                           ;incstack = 0
 11015  0037F8  006F FF60  F01A    	movff	status,??_UART1_rx_vect_isr
 11016  0037FE  006F FFE8  F01B    	movff	pclath,??_UART1_rx_vect_isr+1
 11017  003804  006F FFEC  F01C    	movff	pclatu,??_UART1_rx_vect_isr+2
 11018  00380A                     
 11019                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 11020  00380A  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 11021  00380C  103F               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 11022  00380E  B4D8               	btfsc	status,2,c
 11023  003810  EF0C  F01C         	goto	i1u427_21
 11024  003814  EF0E  F01C         	goto	i1u427_20
 11025  003818                     i1u427_21:
 11026  003818  EF1A  F01C         	goto	i1l330
 11027  00381C                     i1u427_20:
 11028  00381C                     
 11029                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 11030  00381C  D802               	call	i1u428_28
 11031  00381E  EF1A  F01C         	goto	i1u428_29
 11032  003822                     i1u428_28:
 11033  003822  0005               	push	
 11034  003824  6EFA               	movwf	pclath,c
 11035  003826  503E               	movf	_UART1_RxInterruptHandler^0,w,c
 11036  003828  6EFD               	movwf	tosl,c
 11037  00382A  503F               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 11038  00382C  6EFE               	movwf	tosh,c
 11039  00382E  6AFF               	clrf	tosu,c
 11040  003830  50FA               	movf	pclath,w,c
 11041  003832  0012               	return		;indir
 11042  003834                     i1u428_29:
 11043  003834                     i1l330:
 11044  003834  0060  F073  FFFB   	movff	??_UART1_rx_vect_isr+2,pclatu
 11045  00383A  0060  F06F  FFFA   	movff	??_UART1_rx_vect_isr+1,pclath
 11046  003840  0060  F06B  FFD8   	movff	??_UART1_rx_vect_isr,status
 11047  003846  0011               	retfie		f
 11048  003848                     __end_of_UART1_rx_vect_isr:
 11049                           	callstack 0
 11050                           
 11051 ;; *************** function _UART1_Receive_ISR *****************
 11052 ;; Defined at:
 11053 ;;		line 273 in file "mcc_generated_files/uart1.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;		None
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      void 
 11060 ;; Registers used:
 11061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11071 ;;Total ram usage:        0 bytes
 11072 ;; Hardware stack levels used: 1
 11073 ;; Hardware stack levels required when called: 6
 11074 ;; This function calls:
 11075 ;;		Absolute function
 11076 ;;		_UART1_DefaultErrorHandler
 11077 ;;		_UART1_DefaultFramingErrorHandler
 11078 ;;		_UART1_DefaultOverrunErrorHandler
 11079 ;;		_UART1_RxDataHandler
 11080 ;; This function is called by:
 11081 ;;		_UART1_Initialize
 11082 ;;		_UART1_rx_vect_isr
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text67
 11087  003286                     __ptext67:
 11088                           	callstack 0
 11089  003286                     _UART1_Receive_ISR:
 11090                           	callstack 12
 11091  003286                     
 11092                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 11093  003286  0EB4               	movlw	low _uart1RxStatusBuffer
 11094  003288  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11095  00328A  6ED9               	movwf	fsr2l,c
 11096  00328C  6ADA               	clrf	fsr2h,c
 11097  00328E  0E00               	movlw	high _uart1RxStatusBuffer
 11098  003290  22DA               	addwfc	fsr2h,f,c
 11099  003292  0E00               	movlw	0
 11100  003294  6EDF               	movwf	indf2,c
 11101  003296                     
 11102                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 11103  003296  013D               	movlb	61	; () banked
 11104  003298  A7F9               	btfss	249,3,b	;volatile
 11105  00329A  EF51  F019         	goto	i1u412_21
 11106  00329E  EF53  F019         	goto	i1u412_20
 11107  0032A2                     i1u412_21:
 11108  0032A2  EF67  F019         	goto	i1l5381
 11109  0032A6                     i1u412_20:
 11110  0032A6                     
 11111                           ; BSR set to: 61
 11112                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 11113  0032A6  0EB4               	movlw	low _uart1RxStatusBuffer
 11114  0032A8  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11115  0032AA  6ED9               	movwf	fsr2l,c
 11116  0032AC  6ADA               	clrf	fsr2h,c
 11117  0032AE  0E00               	movlw	high _uart1RxStatusBuffer
 11118  0032B0  22DA               	addwfc	fsr2h,f,c
 11119  0032B2  0100               	movlb	0	; () banked
 11120  0032B4  82DF               	bsf	indf2,1,c
 11121  0032B6                     
 11122                           ; BSR set to: 0
 11123                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 11124  0032B6  D802               	call	i1u413_28
 11125  0032B8  EF67  F019         	goto	i1u413_29
 11126  0032BC                     i1u413_28:
 11127  0032BC  0005               	push	
 11128  0032BE  6EFA               	movwf	pclath,c
 11129  0032C0  51FE               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 11130  0032C2  6EFD               	movwf	tosl,c
 11131  0032C4  51FF               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 11132  0032C6  6EFE               	movwf	tosh,c
 11133  0032C8  6AFF               	clrf	tosu,c
 11134  0032CA  50FA               	movf	pclath,w,c
 11135  0032CC  0012               	return		;indir
 11136  0032CE                     i1u413_29:
 11137  0032CE                     i1l5381:
 11138                           
 11139                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 11140  0032CE  013D               	movlb	61	; () banked
 11141  0032D0  A3F9               	btfss	249,1,b	;volatile
 11142  0032D2  EF6D  F019         	goto	i1u414_21
 11143  0032D6  EF6F  F019         	goto	i1u414_20
 11144  0032DA                     i1u414_21:
 11145  0032DA  EF83  F019         	goto	i1l5387
 11146  0032DE                     i1u414_20:
 11147  0032DE                     
 11148                           ; BSR set to: 61
 11149                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 11150  0032DE  0EB4               	movlw	low _uart1RxStatusBuffer
 11151  0032E0  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11152  0032E2  6ED9               	movwf	fsr2l,c
 11153  0032E4  6ADA               	clrf	fsr2h,c
 11154  0032E6  0E00               	movlw	high _uart1RxStatusBuffer
 11155  0032E8  22DA               	addwfc	fsr2h,f,c
 11156  0032EA  0100               	movlb	0	; () banked
 11157  0032EC  84DF               	bsf	indf2,2,c
 11158  0032EE                     
 11159                           ; BSR set to: 0
 11160                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 11161  0032EE  D802               	call	i1u415_28
 11162  0032F0  EF83  F019         	goto	i1u415_29
 11163  0032F4                     i1u415_28:
 11164  0032F4  0005               	push	
 11165  0032F6  6EFA               	movwf	pclath,c
 11166  0032F8  51FC               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 11167  0032FA  6EFD               	movwf	tosl,c
 11168  0032FC  51FD               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 11169  0032FE  6EFE               	movwf	tosh,c
 11170  003300  6AFF               	clrf	tosu,c
 11171  003302  50FA               	movf	pclath,w,c
 11172  003304  0012               	return		;indir
 11173  003306                     i1u415_29:
 11174  003306                     i1l5387:
 11175                           
 11176                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 11177  003306  0EB4               	movlw	low _uart1RxStatusBuffer
 11178  003308  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11179  00330A  6ED9               	movwf	fsr2l,c
 11180  00330C  6ADA               	clrf	fsr2h,c
 11181  00330E  0E00               	movlw	high _uart1RxStatusBuffer
 11182  003310  22DA               	addwfc	fsr2h,f,c
 11183  003312  50DF               	movf	indf2,w,c
 11184  003314  B4D8               	btfsc	status,2,c
 11185  003316  EF8F  F019         	goto	i1u416_21
 11186  00331A  EF91  F019         	goto	i1u416_20
 11187  00331E                     i1u416_21:
 11188  00331E  EFA0  F019         	goto	i1l5391
 11189  003322                     i1u416_20:
 11190  003322                     
 11191                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 11192  003322  D802               	call	i1u417_28
 11193  003324  EF9E  F019         	goto	i1u417_29
 11194  003328                     i1u417_28:
 11195  003328  0005               	push	
 11196  00332A  6EFA               	movwf	pclath,c
 11197  00332C  0100               	movlb	0	; () banked
 11198  00332E  51FA               	movf	_UART1_ErrorHandler& (0+255),w,b
 11199  003330  6EFD               	movwf	tosl,c
 11200  003332  51FB               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 11201  003334  6EFE               	movwf	tosh,c
 11202  003336  6AFF               	clrf	tosu,c
 11203  003338  50FA               	movf	pclath,w,c
 11204  00333A  0012               	return		;indir
 11205  00333C                     i1u417_29:
 11206                           
 11207                           ;mcc_generated_files/uart1.c: 290:     } else {
 11208  00333C  EFA2  F019         	goto	i1l343
 11209  003340                     i1l5391:
 11210                           
 11211                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 11212  003340  EC51  F01F         	call	_UART1_RxDataHandler	;wreg free
 11213  003344                     i1l343:
 11214  003344  0012               	return		;funcret
 11215  003346                     __end_of_UART1_Receive_ISR:
 11216                           	callstack 0
 11217                           
 11218 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 11219 ;; Defined at:
 11220 ;;		line 309 in file "mcc_generated_files/uart1.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;		None
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		None
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used: 1
 11240 ;; Hardware stack levels required when called: 4
 11241 ;; This function calls:
 11242 ;;		Nothing
 11243 ;; This function is called by:
 11244 ;;		_UART1_Initialize
 11245 ;;		_UART1_Receive_ISR
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text68
 11250  00410A                     __ptext68:
 11251                           	callstack 0
 11252  00410A                     _UART1_DefaultOverrunErrorHandler:
 11253                           	callstack 13
 11254  00410A  0012               	return		;funcret
 11255  00410C                     __end_of_UART1_DefaultOverrunErrorHandler:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 11259 ;; Defined at:
 11260 ;;		line 307 in file "mcc_generated_files/uart1.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;		None
 11263 ;; Auto vars:     Size  Location     Type
 11264 ;;		None
 11265 ;; Return value:  Size  Location     Type
 11266 ;;                  1    wreg      void 
 11267 ;; Registers used:
 11268 ;;		None
 11269 ;; Tracked objects:
 11270 ;;		On entry : 0/0
 11271 ;;		On exit  : 0/0
 11272 ;;		Unchanged: 0/0
 11273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;Total ram usage:        0 bytes
 11279 ;; Hardware stack levels used: 1
 11280 ;; Hardware stack levels required when called: 4
 11281 ;; This function calls:
 11282 ;;		Nothing
 11283 ;; This function is called by:
 11284 ;;		_UART1_Initialize
 11285 ;;		_UART1_Receive_ISR
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text69
 11290  00410C                     __ptext69:
 11291                           	callstack 0
 11292  00410C                     _UART1_DefaultFramingErrorHandler:
 11293                           	callstack 13
 11294  00410C  0012               	return		;funcret
 11295  00410E                     __end_of_UART1_DefaultFramingErrorHandler:
 11296                           	callstack 0
 11297                           
 11298 ;; *************** function _UART1_DefaultErrorHandler *****************
 11299 ;; Defined at:
 11300 ;;		line 311 in file "mcc_generated_files/uart1.c"
 11301 ;; Parameters:    Size  Location     Type
 11302 ;;		None
 11303 ;; Auto vars:     Size  Location     Type
 11304 ;;		None
 11305 ;; Return value:  Size  Location     Type
 11306 ;;                  1    wreg      void 
 11307 ;; Registers used:
 11308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11309 ;; Tracked objects:
 11310 ;;		On entry : 0/0
 11311 ;;		On exit  : 0/0
 11312 ;;		Unchanged: 0/0
 11313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11318 ;;Total ram usage:        0 bytes
 11319 ;; Hardware stack levels used: 1
 11320 ;; Hardware stack levels required when called: 5
 11321 ;; This function calls:
 11322 ;;		_UART1_RxDataHandler
 11323 ;; This function is called by:
 11324 ;;		_UART1_Initialize
 11325 ;;		_UART1_Receive_ISR
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329                           	psect	text70
 11330  0040FE                     __ptext70:
 11331                           	callstack 0
 11332  0040FE                     _UART1_DefaultErrorHandler:
 11333                           	callstack 12
 11334  0040FE                     
 11335                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 11336  0040FE  EC51  F01F         	call	_UART1_RxDataHandler	;wreg free
 11337  004102  0012               	return		;funcret
 11338  004104                     __end_of_UART1_DefaultErrorHandler:
 11339                           	callstack 0
 11340                           
 11341 ;; *************** function _UART1_RxDataHandler *****************
 11342 ;; Defined at:
 11343 ;;		line 297 in file "mcc_generated_files/uart1.c"
 11344 ;; Parameters:    Size  Location     Type
 11345 ;;		None
 11346 ;; Auto vars:     Size  Location     Type
 11347 ;;		None
 11348 ;; Return value:  Size  Location     Type
 11349 ;;                  1    wreg      void 
 11350 ;; Registers used:
 11351 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11352 ;; Tracked objects:
 11353 ;;		On entry : 0/0
 11354 ;;		On exit  : 0/0
 11355 ;;		Unchanged: 0/0
 11356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11361 ;;Total ram usage:        0 bytes
 11362 ;; Hardware stack levels used: 1
 11363 ;; Hardware stack levels required when called: 4
 11364 ;; This function calls:
 11365 ;;		Nothing
 11366 ;; This function is called by:
 11367 ;;		_UART1_Receive_ISR
 11368 ;;		_UART1_DefaultErrorHandler
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372                           	psect	text71
 11373  003EA2                     __ptext71:
 11374                           	callstack 0
 11375  003EA2                     _UART1_RxDataHandler:
 11376                           	callstack 13
 11377  003EA2                     
 11378                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 11379  003EA2  0EBC               	movlw	low _uart1RxBuffer
 11380  003EA4  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 11381  003EA6  6ED9               	movwf	fsr2l,c
 11382  003EA8  6ADA               	clrf	fsr2h,c
 11383  003EAA  0E00               	movlw	high _uart1RxBuffer
 11384  003EAC  22DA               	addwfc	fsr2h,f,c
 11385  003EAE  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 11386  003EB4  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 11387  003EB6                     
 11388                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 11389  003EB6  0E07               	movlw	7
 11390  003EB8  6431               	cpfsgt	_uart1RxHead^0,c	;volatile
 11391  003EBA  EF61  F01F         	goto	i1u283_21
 11392  003EBE  EF63  F01F         	goto	i1u283_20
 11393  003EC2                     i1u283_21:
 11394  003EC2  EF65  F01F         	goto	i1l4423
 11395  003EC6                     i1u283_20:
 11396  003EC6                     
 11397                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 11398  003EC6  0E00               	movlw	0
 11399  003EC8  6E31               	movwf	_uart1RxHead^0,c	;volatile
 11400  003ECA                     i1l4423:
 11401                           
 11402                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 11403  003ECA  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 11404  003ECC  0012               	return		;funcret
 11405  003ECE                     __end_of_UART1_RxDataHandler:
 11406                           	callstack 0
 11407                           
 11408 ;; *************** function _TMR4_ISR *****************
 11409 ;; Defined at:
 11410 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 11411 ;; Parameters:    Size  Location     Type
 11412 ;;		None
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;		None
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  1    wreg      void 
 11417 ;; Registers used:
 11418 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11426 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11428 ;;Total ram usage:        3 bytes
 11429 ;; Hardware stack levels used: 1
 11430 ;; Hardware stack levels required when called: 6
 11431 ;; This function calls:
 11432 ;;		_TMR4_CallBack
 11433 ;; This function is called by:
 11434 ;;		Interrupt level 1
 11435 ;; This function uses a non-reentrant model
 11436 ;;
 11437                           
 11438                           	psect	text72
 11439  003848                     __ptext72:
 11440                           	callstack 0
 11441  003848                     _TMR4_ISR:
 11442                           	callstack 13
 11443                           
 11444                           ;incstack = 0
 11445  003848  006F FF60  F01D    	movff	status,??_TMR4_ISR
 11446  00384E  006F FFE8  F01E    	movff	pclath,??_TMR4_ISR+1
 11447  003854  006F FFEC  F01F    	movff	pclatu,??_TMR4_ISR+2
 11448  00385A                     
 11449                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 11450  00385A  0139               	movlb	57	; () banked
 11451  00385C  91A7               	bcf	167,0,b	;volatile
 11452  00385E                     
 11453                           ; BSR set to: 57
 11454                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 11455  00385E  4A27               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 11456  003860  2A28               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 11457  003862  5028               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 11458  003864  E109               	bnz	i1u433_20
 11459  003866  0E0A               	movlw	10
 11460  003868  5C27               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 11461  00386A  A0D8               	btfss	status,0,c
 11462  00386C  EF3A  F01C         	goto	i1u433_21
 11463  003870  EF3C  F01C         	goto	i1u433_20
 11464  003874                     i1u433_21:
 11465  003874  EF42  F01C         	goto	i1l688
 11466  003878                     i1u433_20:
 11467  003878                     
 11468                           ; BSR set to: 57
 11469                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 11470  003878  EC0E  F01F         	call	_TMR4_CallBack	;wreg free
 11471  00387C                     
 11472                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 11473  00387C  0E00               	movlw	0
 11474  00387E  6E28               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 11475  003880  0E00               	movlw	0
 11476  003882  6E27               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 11477  003884                     i1l688:
 11478  003884  0060  F07F  FFFB   	movff	??_TMR4_ISR+2,pclatu
 11479  00388A  0060  F07B  FFFA   	movff	??_TMR4_ISR+1,pclath
 11480  003890  0060  F077  FFD8   	movff	??_TMR4_ISR,status
 11481  003896  0011               	retfie		f
 11482  003898                     __end_of_TMR4_ISR:
 11483                           	callstack 0
 11484                           
 11485 ;; *************** function _TMR4_CallBack *****************
 11486 ;; Defined at:
 11487 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;		None
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;Total ram usage:        0 bytes
 11506 ;; Hardware stack levels used: 1
 11507 ;; Hardware stack levels required when called: 5
 11508 ;; This function calls:
 11509 ;;		Absolute function
 11510 ;;		_TMR4_10msISR
 11511 ;;		_TMR4_DefaultInterruptHandler
 11512 ;; This function is called by:
 11513 ;;		_TMR4_ISR
 11514 ;; This function uses a non-reentrant model
 11515 ;;
 11516                           
 11517                           	psect	text73
 11518  003E1C                     __ptext73:
 11519                           	callstack 0
 11520  003E1C                     _TMR4_CallBack:
 11521                           	callstack 13
 11522  003E1C                     
 11523                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 11524  003E1C  0100               	movlb	0	; () banked
 11525  003E1E  51F2               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11526  003E20  11F3               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11527  003E22  B4D8               	btfsc	status,2,c
 11528  003E24  EF16  F01F         	goto	i1u421_21
 11529  003E28  EF18  F01F         	goto	i1u421_20
 11530  003E2C                     i1u421_21:
 11531  003E2C  EF24  F01F         	goto	i1l692
 11532  003E30                     i1u421_20:
 11533  003E30                     
 11534                           ; BSR set to: 0
 11535                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 11536  003E30  D802               	call	i1u422_28
 11537  003E32  EF24  F01F         	goto	i1u422_29
 11538  003E36                     i1u422_28:
 11539  003E36  0005               	push	
 11540  003E38  6EFA               	movwf	pclath,c
 11541  003E3A  51F2               	movf	_TMR4_InterruptHandler& (0+255),w,b
 11542  003E3C  6EFD               	movwf	tosl,c
 11543  003E3E  51F3               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 11544  003E40  6EFE               	movwf	tosh,c
 11545  003E42  6AFF               	clrf	tosu,c
 11546  003E44  50FA               	movf	pclath,w,c
 11547  003E46  0012               	return		;indir
 11548  003E48                     i1u422_29:
 11549  003E48                     i1l692:
 11550  003E48  0012               	return		;funcret
 11551  003E4A                     __end_of_TMR4_CallBack:
 11552                           	callstack 0
 11553                           
 11554 ;; *************** function _TMR4_10msISR *****************
 11555 ;; Defined at:
 11556 ;;		line 58 in file "main.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;		None
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;		None
 11561 ;; Return value:  Size  Location     Type
 11562 ;;                  1    wreg      void 
 11563 ;; Registers used:
 11564 ;;		status,2, status,0
 11565 ;; Tracked objects:
 11566 ;;		On entry : 0/0
 11567 ;;		On exit  : 0/0
 11568 ;;		Unchanged: 0/0
 11569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11574 ;;Total ram usage:        0 bytes
 11575 ;; Hardware stack levels used: 1
 11576 ;; Hardware stack levels required when called: 4
 11577 ;; This function calls:
 11578 ;;		Nothing
 11579 ;; This function is called by:
 11580 ;;		_main
 11581 ;;		_TMR4_CallBack
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text74
 11586  004104                     __ptext74:
 11587                           	callstack 0
 11588  004104                     _TMR4_10msISR:
 11589                           	callstack 13
 11590  004104                     
 11591                           ;main.c: 59:     ++cycle10ms;
 11592  004104  0100               	movlb	0	; () banked
 11593  004106  2BEB               	incf	_cycle10ms& (0+255),f,b
 11594  004108                     
 11595                           ; BSR set to: 0
 11596  004108  0012               	return		;funcret
 11597  00410A                     __end_of_TMR4_10msISR:
 11598                           	callstack 0
 11599                           
 11600 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 11601 ;; Defined at:
 11602 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 11603 ;; Parameters:    Size  Location     Type
 11604 ;;		None
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;		None
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		None
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11620 ;;Total ram usage:        0 bytes
 11621 ;; Hardware stack levels used: 1
 11622 ;; Hardware stack levels required when called: 4
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_TMR4_Initialize
 11627 ;;		_TMR4_CallBack
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           	psect	text75
 11632  00410E                     __ptext75:
 11633                           	callstack 0
 11634  00410E                     _TMR4_DefaultInterruptHandler:
 11635                           	callstack 13
 11636  00410E  0012               	return		;funcret
 11637  004110                     __end_of_TMR4_DefaultInterruptHandler:
 11638                           	callstack 0
 11639                           
 11640 ;; *************** function _Default_ISR *****************
 11641 ;; Defined at:
 11642 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;		None
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;		None
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		None
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11660 ;;Total ram usage:        0 bytes
 11661 ;; Hardware stack levels used: 1
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		Interrupt level 2
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           	psect	text76
 11670  004110                     __ptext76:
 11671                           	callstack 0
 11672  004110                     _Default_ISR:
 11673                           	callstack 15
 11674  004110  0011               	retfie		f
 11675  004112                     __end_of_Default_ISR:
 11676                           	callstack 0
 11677                           
 11678 ;; *************** function _CCP3_CaptureISR *****************
 11679 ;; Defined at:
 11680 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  module          2    4[COMRAM] struct CCPR3Reg_tag
 11685 ;; Return value:  Size  Location     Type
 11686 ;;                  1    wreg      void 
 11687 ;; Registers used:
 11688 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11689 ;; Tracked objects:
 11690 ;;		On entry : 0/0
 11691 ;;		On exit  : 0/0
 11692 ;;		Unchanged: 0/0
 11693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11696 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11697 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11698 ;;Total ram usage:        4 bytes
 11699 ;; Hardware stack levels used: 1
 11700 ;; Hardware stack levels required when called: 1
 11701 ;; This function calls:
 11702 ;;		Absolute function
 11703 ;;		_CCP3_DefaultCallBack
 11704 ;; This function is called by:
 11705 ;;		Interrupt level 2
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text77
 11710  0038E4                     __ptext77:
 11711                           	callstack 0
 11712  0038E4                     _CCP3_CaptureISR:
 11713                           	callstack 14
 11714                           
 11715                           ;incstack = 0
 11716  0038E4  006F FFE8  F003    	movff	pclath,??_CCP3_CaptureISR
 11717  0038EA  006F FFEC  F004    	movff	pclatu,??_CCP3_CaptureISR+1
 11718  0038F0                     
 11719                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 11720  0038F0  0139               	movlb	57	; () banked
 11721  0038F2  93A9               	bcf	169,1,b	;volatile
 11722                           
 11723                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 11724  0038F4  006F FDD0  F005    	movff	16244,CCP3_CaptureISR@module	;volatile
 11725                           
 11726                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 11727  0038FA  006F FDD4  F006    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 11728  003900                     
 11729                           ; BSR set to: 57
 11730                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 11731  003900  C005  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 11732  003904  C006  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 11733  003908  D802               	call	i2u429_48
 11734  00390A  EF91  F01C         	goto	i2u429_49
 11735  00390E                     i2u429_48:
 11736  00390E  0005               	push	
 11737  003910  6EFA               	movwf	pclath,c
 11738  003912  0100               	movlb	0	; () banked
 11739  003914  51F8               	movf	_CCP3_CallBack& (0+255),w,b
 11740  003916  6EFD               	movwf	tosl,c
 11741  003918  51F9               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 11742  00391A  6EFE               	movwf	tosh,c
 11743  00391C  6AFF               	clrf	tosu,c
 11744  00391E  50FA               	movf	pclath,w,c
 11745  003920  0012               	return		;indir
 11746  003922                     i2u429_49:
 11747  003922  0060  F013  FFFB   	movff	??_CCP3_CaptureISR+1,pclatu
 11748  003928  0060  F00F  FFFA   	movff	??_CCP3_CaptureISR,pclath
 11749  00392E  0011               	retfie		f
 11750  003930                     __end_of_CCP3_CaptureISR:
 11751                           	callstack 0
 11752                           
 11753 ;; *************** function _CCP3_DefaultCallBack *****************
 11754 ;; Defined at:
 11755 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;  capturedValu    2    0[COMRAM] unsigned short 
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;		None
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  1    wreg      void 
 11762 ;; Registers used:
 11763 ;;		wreg, status,2, status,0
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11773 ;;Total ram usage:        2 bytes
 11774 ;; Hardware stack levels used: 1
 11775 ;; This function calls:
 11776 ;;		Nothing
 11777 ;; This function is called by:
 11778 ;;		_CCP3_Initialize
 11779 ;;		_CCP3_CaptureISR
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           	psect	text78
 11784  003D60                     __ptext78:
 11785                           	callstack 0
 11786  003D60                     _CCP3_DefaultCallBack:
 11787                           	callstack 14
 11788  003D60                     
 11789                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 11790  003D60  AECD               	btfss	205,7,c	;volatile
 11791  003D62  EFB5  F01E         	goto	i2u418_41
 11792  003D66  EFB7  F01E         	goto	i2u418_40
 11793  003D6A                     i2u418_41:
 11794  003D6A  EFBD  F01E         	goto	i2l5397
 11795  003D6E                     i2u418_40:
 11796  003D6E                     
 11797                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 11798  003D6E  C001  F02B         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 11799  003D72  C002  F02C         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 11800                           
 11801                           ;mcc_generated_files/ccp3.c: 69:     } else {
 11802  003D76  EFC7  F01E         	goto	i2l438
 11803  003D7A                     i2l5397:
 11804                           
 11805                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 11806  003D7A  502B               	movf	_distLeftM^0,w,c
 11807  003D7C  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 11808  003D7E  0100               	movlb	0	; () banked
 11809  003D80  6FE8               	movwf	_distLeft& (0+255),b	;volatile
 11810  003D82  502C               	movf	(_distLeftM+1)^0,w,c
 11811  003D84  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 11812  003D86  6FE9               	movwf	(_distLeft+1)& (0+255),b	;volatile
 11813  003D88                     
 11814                           ; BSR set to: 0
 11815                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 11816  003D88  90D8               	bcf	status,0,c
 11817  003D8A  33E9               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 11818  003D8C  33E8               	rrcf	_distLeft& (0+255),f,b	;volatile
 11819  003D8E                     i2l438:
 11820  003D8E  0012               	return		;funcret
 11821  003D90                     __end_of_CCP3_DefaultCallBack:
 11822                           	callstack 0
 11823                           
 11824 ;; *************** function _CCP4_CaptureISR *****************
 11825 ;; Defined at:
 11826 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 11827 ;; Parameters:    Size  Location     Type
 11828 ;;		None
 11829 ;; Auto vars:     Size  Location     Type
 11830 ;;  module          2   10[COMRAM] struct CCPR4Reg_tag
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  1    wreg      void 
 11833 ;; Registers used:
 11834 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11842 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11844 ;;Total ram usage:        4 bytes
 11845 ;; Hardware stack levels used: 1
 11846 ;; Hardware stack levels required when called: 1
 11847 ;; This function calls:
 11848 ;;		Absolute function
 11849 ;;		_CCP4_DefaultCallBack
 11850 ;; This function is called by:
 11851 ;;		Interrupt level 2
 11852 ;; This function uses a non-reentrant model
 11853 ;;
 11854                           
 11855                           	psect	text79
 11856  003930                     __ptext79:
 11857                           	callstack 0
 11858  003930                     _CCP4_CaptureISR:
 11859                           	callstack 14
 11860                           
 11861                           ;incstack = 0
 11862  003930  006F FFE8  F009    	movff	pclath,??_CCP4_CaptureISR
 11863  003936  006F FFEC  F00A    	movff	pclatu,??_CCP4_CaptureISR+1
 11864  00393C                     
 11865                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 11866  00393C  0139               	movlb	57	; () banked
 11867  00393E  91AA               	bcf	170,0,b	;volatile
 11868                           
 11869                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 11870  003940  006F FDC0  F00B    	movff	16240,CCP4_CaptureISR@module	;volatile
 11871                           
 11872                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 11873  003946  006F FDC4  F00C    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 11874  00394C                     
 11875                           ; BSR set to: 57
 11876                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 11877  00394C  C00B  F007         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 11878  003950  C00C  F008         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 11879  003954  D802               	call	i2u430_48
 11880  003956  EFB7  F01C         	goto	i2u430_49
 11881  00395A                     i2u430_48:
 11882  00395A  0005               	push	
 11883  00395C  6EFA               	movwf	pclath,c
 11884  00395E  0100               	movlb	0	; () banked
 11885  003960  51F6               	movf	_CCP4_CallBack& (0+255),w,b
 11886  003962  6EFD               	movwf	tosl,c
 11887  003964  51F7               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 11888  003966  6EFE               	movwf	tosh,c
 11889  003968  6AFF               	clrf	tosu,c
 11890  00396A  50FA               	movf	pclath,w,c
 11891  00396C  0012               	return		;indir
 11892  00396E                     i2u430_49:
 11893  00396E  0060  F02B  FFFB   	movff	??_CCP4_CaptureISR+1,pclatu
 11894  003974  0060  F027  FFFA   	movff	??_CCP4_CaptureISR,pclath
 11895  00397A  0011               	retfie		f
 11896  00397C                     __end_of_CCP4_CaptureISR:
 11897                           	callstack 0
 11898                           
 11899 ;; *************** function _CCP4_DefaultCallBack *****************
 11900 ;; Defined at:
 11901 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  capturedValu    2    6[COMRAM] unsigned short 
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;                  1    wreg      void 
 11908 ;; Registers used:
 11909 ;;		wreg, status,2, status,0
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11919 ;;Total ram usage:        2 bytes
 11920 ;; Hardware stack levels used: 1
 11921 ;; This function calls:
 11922 ;;		Nothing
 11923 ;; This function is called by:
 11924 ;;		_CCP4_Initialize
 11925 ;;		_CCP4_CaptureISR
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929                           	psect	text80
 11930  003D90                     __ptext80:
 11931                           	callstack 0
 11932  003D90                     _CCP4_DefaultCallBack:
 11933                           	callstack 14
 11934  003D90                     
 11935                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 11936  003D90  ACCD               	btfss	205,6,c	;volatile
 11937  003D92  EFCD  F01E         	goto	i2u419_41
 11938  003D96  EFCF  F01E         	goto	i2u419_40
 11939  003D9A                     i2u419_41:
 11940  003D9A  EFD5  F01E         	goto	i2l5405
 11941  003D9E                     i2u419_40:
 11942  003D9E                     
 11943                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 11944  003D9E  C007  F029         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 11945  003DA2  C008  F02A         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 11946                           
 11947                           ;mcc_generated_files/ccp4.c: 70:     } else {
 11948  003DA6  EFDF  F01E         	goto	i2l476
 11949  003DAA                     i2l5405:
 11950                           
 11951                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 11952  003DAA  5029               	movf	_distRightM^0,w,c
 11953  003DAC  5C07               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 11954  003DAE  0100               	movlb	0	; () banked
 11955  003DB0  6FE6               	movwf	_distRight& (0+255),b	;volatile
 11956  003DB2  502A               	movf	(_distRightM+1)^0,w,c
 11957  003DB4  5808               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 11958  003DB6  6FE7               	movwf	(_distRight+1)& (0+255),b	;volatile
 11959  003DB8                     
 11960                           ; BSR set to: 0
 11961                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 11962  003DB8  90D8               	bcf	status,0,c
 11963  003DBA  33E7               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 11964  003DBC  33E6               	rrcf	_distRight& (0+255),f,b	;volatile
 11965  003DBE                     i2l476:
 11966  003DBE  0012               	return		;funcret
 11967  003DC0                     __end_of_CCP4_DefaultCallBack:
 11968                           	callstack 0
 11969                           
 11970 ;; *************** function _TMR5_GATE_ISR *****************
 11971 ;; Defined at:
 11972 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;		None
 11975 ;; Auto vars:     Size  Location     Type
 11976 ;;		None
 11977 ;; Return value:  Size  Location     Type
 11978 ;;                  1    wreg      void 
 11979 ;; Registers used:
 11980 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11981 ;; Tracked objects:
 11982 ;;		On entry : 0/0
 11983 ;;		On exit  : 0/0
 11984 ;;		Unchanged: 0/0
 11985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11988 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;Total ram usage:        2 bytes
 11991 ;; Hardware stack levels used: 1
 11992 ;; Hardware stack levels required when called: 3
 11993 ;; This function calls:
 11994 ;;		Absolute function
 11995 ;;		_TMR5_DefaultGateInterruptHandler
 11996 ;; This function is called by:
 11997 ;;		Interrupt level 2
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text81
 12002  003AA4                     __ptext81:
 12003                           	callstack 0
 12004  003AA4                     _TMR5_GATE_ISR:
 12005                           	callstack 12
 12006                           
 12007                           ;incstack = 0
 12008  003AA4  006F FFE8  F015    	movff	pclath,??_TMR5_GATE_ISR
 12009  003AAA  006F FFEC  F016    	movff	pclatu,??_TMR5_GATE_ISR+1
 12010  003AB0                     
 12011                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 12012  003AB0  0139               	movlb	57	; () banked
 12013  003AB2  9FA8               	bcf	168,7,b	;volatile
 12014  003AB4                     
 12015                           ; BSR set to: 57
 12016                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 12017  003AB4  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 12018  003AB6  1039               	iorwf	(_TMR5_GateInterruptHandler+1)^0,w,c
 12019  003AB8  B4D8               	btfsc	status,2,c
 12020  003ABA  EF61  F01D         	goto	i2u431_41
 12021  003ABE  EF63  F01D         	goto	i2u431_40
 12022  003AC2                     i2u431_41:
 12023  003AC2  EF6F  F01D         	goto	i2l552
 12024  003AC6                     i2u431_40:
 12025  003AC6                     
 12026                           ; BSR set to: 57
 12027                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 12028  003AC6  D802               	call	i2u432_48
 12029  003AC8  EF6F  F01D         	goto	i2u432_49
 12030  003ACC                     i2u432_48:
 12031  003ACC  0005               	push	
 12032  003ACE  6EFA               	movwf	pclath,c
 12033  003AD0  5038               	movf	_TMR5_GateInterruptHandler^0,w,c
 12034  003AD2  6EFD               	movwf	tosl,c
 12035  003AD4  5039               	movf	(_TMR5_GateInterruptHandler+1)^0,w,c
 12036  003AD6  6EFE               	movwf	tosh,c
 12037  003AD8  6AFF               	clrf	tosu,c
 12038  003ADA  50FA               	movf	pclath,w,c
 12039  003ADC  0012               	return		;indir
 12040  003ADE                     i2u432_49:
 12041  003ADE                     i2l552:
 12042  003ADE  0060  F05B  FFFB   	movff	??_TMR5_GATE_ISR+1,pclatu
 12043  003AE4  0060  F057  FFFA   	movff	??_TMR5_GATE_ISR,pclath
 12044  003AEA  0011               	retfie		f
 12045  003AEC                     __end_of_TMR5_GATE_ISR:
 12046                           	callstack 0
 12047                           
 12048 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 12049 ;; Defined at:
 12050 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 12051 ;; Parameters:    Size  Location     Type
 12052 ;;		None
 12053 ;; Auto vars:     Size  Location     Type
 12054 ;;		None
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  1    wreg      void 
 12057 ;; Registers used:
 12058 ;;		wreg, status,2, status,0, cstack
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;Total ram usage:        0 bytes
 12069 ;; Hardware stack levels used: 1
 12070 ;; Hardware stack levels required when called: 2
 12071 ;; This function calls:
 12072 ;;		_TMR5_ReadTimer
 12073 ;;		_TMR5_Reload
 12074 ;; This function is called by:
 12075 ;;		_TMR5_Initialize
 12076 ;;		_TMR5_GATE_ISR
 12077 ;; This function uses a non-reentrant model
 12078 ;;
 12079                           
 12080                           	psect	text82
 12081  003FDA                     __ptext82:
 12082                           	callstack 0
 12083  003FDA                     _TMR5_DefaultGateInterruptHandler:
 12084                           	callstack 12
 12085  003FDA                     
 12086                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 12087  003FDA  ECCB  F01F         	call	_TMR5_ReadTimer	;wreg free
 12088  003FDE  C00D  F0EE         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 12089  003FE2  C00E  F0EF         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 12090  003FE6                     
 12091                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 12092  003FE6  0100               	movlb	0	; () banked
 12093  003FE8  90D8               	bcf	status,0,c
 12094  003FEA  33EF               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 12095  003FEC  33EE               	rrcf	_distFront& (0+255),f,b	;volatile
 12096  003FEE                     
 12097                           ; BSR set to: 0
 12098                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 12099  003FEE  EC46  F020         	call	_TMR5_Reload	;wreg free
 12100  003FF2                     
 12101                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 12102  003FF2  0139               	movlb	57	; () banked
 12103  003FF4  9FA8               	bcf	168,7,b	;volatile
 12104  003FF6                     
 12105                           ; BSR set to: 57
 12106  003FF6  0012               	return		;funcret
 12107  003FF8                     __end_of_TMR5_DefaultGateInterruptHandler:
 12108                           	callstack 0
 12109                           
 12110 ;; *************** function _TMR5_Reload *****************
 12111 ;; Defined at:
 12112 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 12113 ;; Parameters:    Size  Location     Type
 12114 ;;		None
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;		None
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      void 
 12119 ;; Registers used:
 12120 ;;		wreg, status,2, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;Total ram usage:        0 bytes
 12131 ;; Hardware stack levels used: 1
 12132 ;; Hardware stack levels required when called: 1
 12133 ;; This function calls:
 12134 ;;		_TMR5_WriteTimer
 12135 ;; This function is called by:
 12136 ;;		_TMR5_DefaultGateInterruptHandler
 12137 ;; This function uses a non-reentrant model
 12138 ;;
 12139                           
 12140                           	psect	text83
 12141  00408C                     __ptext83:
 12142                           	callstack 0
 12143  00408C                     _TMR5_Reload:
 12144                           	callstack 12
 12145  00408C                     
 12146                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 12147  00408C  C03A  F00D         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 12148  004090  C03B  F00E         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 12149  004094  EC67  F01F         	call	_TMR5_WriteTimer	;wreg free
 12150  004098  0012               	return		;funcret
 12151  00409A                     __end_of_TMR5_Reload:
 12152                           	callstack 0
 12153                           
 12154 ;; *************** function _TMR5_WriteTimer *****************
 12155 ;; Defined at:
 12156 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;  timerVal        2   12[COMRAM] unsigned short 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;		None
 12161 ;; Return value:  Size  Location     Type
 12162 ;;                  1    wreg      void 
 12163 ;; Registers used:
 12164 ;;		wreg, status,2
 12165 ;; Tracked objects:
 12166 ;;		On entry : 0/0
 12167 ;;		On exit  : 0/0
 12168 ;;		Unchanged: 0/0
 12169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12174 ;;Total ram usage:        2 bytes
 12175 ;; Hardware stack levels used: 1
 12176 ;; This function calls:
 12177 ;;		Nothing
 12178 ;; This function is called by:
 12179 ;;		_TMR5_Reload
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text84
 12184  003ECE                     __ptext84:
 12185                           	callstack 0
 12186  003ECE                     _TMR5_WriteTimer:
 12187                           	callstack 12
 12188  003ECE                     
 12189                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 12190  003ECE  A49A               	btfss	154,2,c	;volatile
 12191  003ED0  EF6C  F01F         	goto	i2u284_41
 12192  003ED4  EF6E  F01F         	goto	i2u284_40
 12193  003ED8                     i2u284_41:
 12194  003ED8  EF77  F01F         	goto	i2l4441
 12195  003EDC                     i2u284_40:
 12196  003EDC                     
 12197                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 12198  003EDC  909A               	bcf	154,0,c	;volatile
 12199  003EDE                     
 12200                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 12201  003EDE  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12202  003EE0  6E99               	movwf	153,c	;volatile
 12203  003EE2                     
 12204                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 12205  003EE2  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12206  003EE8                     
 12207                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 12208  003EE8  809A               	bsf	154,0,c	;volatile
 12209                           
 12210                           ;mcc_generated_files/tmr5.c: 146:     }
 12211  003EEA  EF7C  F01F         	goto	i2l534
 12212  003EEE                     i2l4441:
 12213                           
 12214                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 12215  003EEE  500E               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 12216  003EF0  6E99               	movwf	153,c	;volatile
 12217  003EF2                     
 12218                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 12219  003EF2  0060  F037  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 12220  003EF8                     i2l534:
 12221  003EF8  0012               	return		;funcret
 12222  003EFA                     __end_of_TMR5_WriteTimer:
 12223                           	callstack 0
 12224                           
 12225 ;; *************** function _TMR5_ReadTimer *****************
 12226 ;; Defined at:
 12227 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 12228 ;; Parameters:    Size  Location     Type
 12229 ;;		None
 12230 ;; Auto vars:     Size  Location     Type
 12231 ;;  readVal         2   16[COMRAM] unsigned short 
 12232 ;;  readValLow      1   19[COMRAM] unsigned char 
 12233 ;;  readValHigh     1   18[COMRAM] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  2   12[COMRAM] unsigned short 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12246 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12247 ;;Total ram usage:        8 bytes
 12248 ;; Hardware stack levels used: 1
 12249 ;; This function calls:
 12250 ;;		Nothing
 12251 ;; This function is called by:
 12252 ;;		_TMR5_DefaultGateInterruptHandler
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text85
 12257  003F96                     __ptext85:
 12258                           	callstack 0
 12259  003F96                     _TMR5_ReadTimer:
 12260                           	callstack 13
 12261  003F96                     
 12262                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 12263  003F96  829A               	bsf	154,1,c	;volatile
 12264                           
 12265                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 12266  003F98  006F FE60  F014    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 12267                           
 12268                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 12269  003F9E  006F FE64  F013    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 12270  003FA4                     
 12271                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 12272  003FA4  5013               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 12273  003FA6  6E0F               	movwf	??_TMR5_ReadTimer^0,c
 12274  003FA8  5014               	movf	TMR5_ReadTimer@readValLow^0,w,c
 12275  003FAA  6E11               	movwf	TMR5_ReadTimer@readVal^0,c
 12276  003FAC  C00F  F012         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 12277  003FB0                     
 12278                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 12279  003FB0  C011  F00D         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 12280  003FB4  C012  F00E         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 12281  003FB8  0012               	return		;funcret
 12282  003FBA                     __end_of_TMR5_ReadTimer:
 12283                           	callstack 0
 12284                           
 12285 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 12286 ;; Defined at:
 12287 ;;		line 192 in file "mcc_generated_files/smt1.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;		None
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;		None
 12292 ;; Return value:  Size  Location     Type
 12293 ;;                  1    wreg      void 
 12294 ;; Registers used:
 12295 ;;		wreg, status,2, status,0
 12296 ;; Tracked objects:
 12297 ;;		On entry : 0/0
 12298 ;;		On exit  : 0/0
 12299 ;;		Unchanged: 0/0
 12300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12305 ;;Total ram usage:        0 bytes
 12306 ;; Hardware stack levels used: 1
 12307 ;; This function calls:
 12308 ;;		Nothing
 12309 ;; This function is called by:
 12310 ;;		Interrupt level 2
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           	psect	text86
 12315  003A10                     __ptext86:
 12316                           	callstack 0
 12317  003A10                     _SMT1_PR_ACQ_ISR:
 12318                           	callstack 15
 12319  003A10                     
 12320                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 12321  003A10  0139               	movlb	57	; () banked
 12322  003A12  9DA1               	bcf	161,6,b	;volatile
 12323  003A14                     
 12324                           ; BSR set to: 57
 12325                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 12326  003A14  013F               	movlb	63	; () banked
 12327  003A16  5115               	movf	21,w,b	;volatile
 12328  003A18  6E34               	movwf	_smtPeriod^0,c	;volatile
 12329  003A1A  5116               	movf	22,w,b	;volatile
 12330  003A1C  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 12331  003A1E  5117               	movf	23,w,b	;volatile
 12332  003A20  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 12333  003A22  6A37               	clrf	(_smtPeriod+3)^0,c	;volatile
 12334  003A24                     
 12335                           ; BSR set to: 63
 12336                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 12337  003A24  013C               	movlb	60	; () banked
 12338  003A26  AB60               	btfss	96,5,b	;volatile
 12339  003A28  EF18  F01D         	goto	i2u434_41
 12340  003A2C  EF1A  F01D         	goto	i2u434_40
 12341  003A30                     i2u434_41:
 12342  003A30  EF23  F01D         	goto	i2l5499
 12343  003A34                     i2u434_40:
 12344  003A34                     
 12345                           ; BSR set to: 60
 12346  003A34  0E01               	movlw	1
 12347  003A36  0100               	movlb	0	; () banked
 12348  003A38  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12349  003A3A  0E00               	movlw	0
 12350  003A3C  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12351  003A3E  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12352  003A40  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12353  003A42  EF2C  F01D         	goto	i2l856
 12354  003A46                     i2l5499:
 12355                           
 12356                           ; BSR set to: 60
 12357  003A46  0EFF               	movlw	255
 12358  003A48  0100               	movlb	0	; () banked
 12359  003A4A  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12360  003A4C  0EFF               	movlw	255
 12361  003A4E  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12362  003A50  0EFF               	movlw	255
 12363  003A52  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12364  003A54  0EFF               	movlw	255
 12365  003A56  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12366  003A58                     i2l856:
 12367                           
 12368                           ; BSR set to: 0
 12369  003A58  0011               	retfie		f
 12370  003A5A                     __end_of_SMT1_PR_ACQ_ISR:
 12371                           	callstack 0
 12372                           
 12373 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 12374 ;; Defined at:
 12375 ;;		line 203 in file "mcc_generated_files/smt1.c"
 12376 ;; Parameters:    Size  Location     Type
 12377 ;;		None
 12378 ;; Auto vars:     Size  Location     Type
 12379 ;;		None
 12380 ;; Return value:  Size  Location     Type
 12381 ;;                  1    wreg      void 
 12382 ;; Registers used:
 12383 ;;		wreg, status,2, status,0
 12384 ;; Tracked objects:
 12385 ;;		On entry : 0/0
 12386 ;;		On exit  : 0/0
 12387 ;;		Unchanged: 0/0
 12388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12393 ;;Total ram usage:        0 bytes
 12394 ;; Hardware stack levels used: 1
 12395 ;; This function calls:
 12396 ;;		Nothing
 12397 ;; This function is called by:
 12398 ;;		Interrupt level 2
 12399 ;; This function uses a non-reentrant model
 12400 ;;
 12401                           
 12402                           	psect	text87
 12403  003754                     __ptext87:
 12404                           	callstack 0
 12405  003754                     _SMT1_PW_ACQ_ISR:
 12406                           	callstack 15
 12407  003754                     
 12408                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 12409  003754  0139               	movlb	57	; () banked
 12410  003756  9FA1               	bcf	161,7,b	;volatile
 12411  003758                     
 12412                           ; BSR set to: 57
 12413                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 12414  003758  013F               	movlb	63	; () banked
 12415  00375A  5118               	movf	24,w,b	;volatile
 12416  00375C  0100               	movlb	0	; () banked
 12417  00375E  6FD0               	movwf	_smtDuty& (0+255),b	;volatile
 12418  003760  013F               	movlb	63	; () banked
 12419  003762  5119               	movf	25,w,b	;volatile
 12420  003764  0100               	movlb	0	; () banked
 12421  003766  6FD1               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12422  003768  013F               	movlb	63	; () banked
 12423  00376A  511A               	movf	26,w,b	;volatile
 12424  00376C  0100               	movlb	0	; () banked
 12425  00376E  6FD2               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12426  003770  6BD3               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 12427  003772                     
 12428                           ; BSR set to: 0
 12429                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 12430  003772  013C               	movlb	60	; () banked
 12431  003774  AB60               	btfss	96,5,b	;volatile
 12432  003776  EFBF  F01B         	goto	i2u435_41
 12433  00377A  EFC1  F01B         	goto	i2u435_40
 12434  00377E                     i2u435_41:
 12435  00377E  EFCA  F01B         	goto	i2l5509
 12436  003782                     i2u435_40:
 12437  003782                     
 12438                           ; BSR set to: 60
 12439  003782  0E01               	movlw	1
 12440  003784  0100               	movlb	0	; () banked
 12441  003786  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12442  003788  0E00               	movlw	0
 12443  00378A  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12444  00378C  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12445  00378E  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12446  003790  EFD3  F01B         	goto	i2l863
 12447  003794                     i2l5509:
 12448                           
 12449                           ; BSR set to: 60
 12450  003794  0EFF               	movlw	255
 12451  003796  0100               	movlb	0	; () banked
 12452  003798  27CC               	addwf	_smtWay& (0+255),f,b	;volatile
 12453  00379A  0EFF               	movlw	255
 12454  00379C  23CD               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 12455  00379E  0EFF               	movlw	255
 12456  0037A0  23CE               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 12457  0037A2  0EFF               	movlw	255
 12458  0037A4  23CF               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 12459  0037A6                     i2l863:
 12460                           
 12461                           ; BSR set to: 0
 12462  0037A6  0011               	retfie		f
 12463  0037A8                     __end_of_SMT1_PW_ACQ_ISR:
 12464                           	callstack 0
 12465                           
 12466 ;; *************** function _SMT1_Overflow_ISR *****************
 12467 ;; Defined at:
 12468 ;;		line 213 in file "mcc_generated_files/smt1.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;		None
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;		None
 12473 ;; Return value:  Size  Location     Type
 12474 ;;                  1    wreg      void 
 12475 ;; Registers used:
 12476 ;;		wreg, status,2
 12477 ;; Tracked objects:
 12478 ;;		On entry : 0/0
 12479 ;;		On exit  : 0/0
 12480 ;;		Unchanged: 0/0
 12481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12486 ;;Total ram usage:        0 bytes
 12487 ;; Hardware stack levels used: 1
 12488 ;; This function calls:
 12489 ;;		Nothing
 12490 ;; This function is called by:
 12491 ;;		Interrupt level 2
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text88
 12496  003F24                     __ptext88:
 12497                           	callstack 0
 12498  003F24                     _SMT1_Overflow_ISR:
 12499                           	callstack 15
 12500  003F24                     
 12501                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 12502  003F24  0139               	movlb	57	; () banked
 12503  003F26  9BA1               	bcf	161,5,b	;volatile
 12504  003F28                     
 12505                           ; BSR set to: 57
 12506                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 12507  003F28  0E00               	movlw	0
 12508  003F2A  6E34               	movwf	_smtPeriod^0,c	;volatile
 12509  003F2C  0E00               	movlw	0
 12510  003F2E  6E35               	movwf	(_smtPeriod+1)^0,c	;volatile
 12511  003F30  0E00               	movlw	0
 12512  003F32  6E36               	movwf	(_smtPeriod+2)^0,c	;volatile
 12513  003F34  0E00               	movlw	0
 12514  003F36  6E37               	movwf	(_smtPeriod+3)^0,c	;volatile
 12515                           
 12516                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 12517  003F38  0E00               	movlw	0
 12518  003F3A  0100               	movlb	0	; () banked
 12519  003F3C  6FD0               	movwf	_smtDuty& (0+255),b	;volatile
 12520  003F3E  0E00               	movlw	0
 12521  003F40  6FD1               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 12522  003F42  0E00               	movlw	0
 12523  003F44  6FD2               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 12524  003F46  0E00               	movlw	0
 12525  003F48  6FD3               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 12526  003F4A                     
 12527                           ; BSR set to: 0
 12528  003F4A  0011               	retfie		f
 12529  003F4C                     __end_of_SMT1_Overflow_ISR:
 12530                           	callstack 0
 12531                           
 12532                           ;
 12533                           ; Interrupt Vector Table @ 0x8
 12534                           ;
 12535                           
 12536                           	psect	ivt0x8
 12537  000008                     __pivt0x8:
 12538                           	callstack 0
 12539  000008                     ivt0x8_base:
 12540                           	callstack 0
 12541                           
 12542                           ; Vector 0 : SWINT
 12543  000008  1044               	dw	_Default_ISR shr (0+2)
 12544                           
 12545                           ; Vector 1 : HLVD
 12546  00000A  1044               	dw	_Default_ISR shr (0+2)
 12547                           
 12548                           ; Vector 2 : OSF
 12549  00000C  1044               	dw	_Default_ISR shr (0+2)
 12550                           
 12551                           ; Vector 3 : CSW
 12552  00000E  1044               	dw	_Default_ISR shr (0+2)
 12553                           
 12554                           ; Vector 4 : NVM
 12555  000010  1044               	dw	_Default_ISR shr (0+2)
 12556                           
 12557                           ; Vector 5 : SCAN
 12558  000012  1044               	dw	_Default_ISR shr (0+2)
 12559                           
 12560                           ; Vector 6 : CRC
 12561  000014  1044               	dw	_Default_ISR shr (0+2)
 12562                           
 12563                           ; Vector 7 : IOC
 12564  000016  1044               	dw	_Default_ISR shr (0+2)
 12565                           
 12566                           ; Vector 8 : INT0
 12567  000018  1044               	dw	_Default_ISR shr (0+2)
 12568                           
 12569                           ; Vector 9 : ZCD
 12570  00001A  1044               	dw	_Default_ISR shr (0+2)
 12571                           
 12572                           ; Vector 10 : AD
 12573  00001C  1044               	dw	_Default_ISR shr (0+2)
 12574                           
 12575                           ; Vector 11 : ADT
 12576  00001E  1044               	dw	_Default_ISR shr (0+2)
 12577                           
 12578                           ; Vector 12 : CMP1
 12579  000020  1044               	dw	_Default_ISR shr (0+2)
 12580                           
 12581                           ; Vector 13 : SMT1
 12582  000022  0FC9               	dw	_SMT1_Overflow_ISR shr (0+2)
 12583                           
 12584                           ; Vector 14 : SMT1PRA
 12585  000024  0E84               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 12586                           
 12587                           ; Vector 15 : SMT1PRW
 12588  000026  0DD5               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 12589                           
 12590                           ; Vector 16 : DMA1SCNT
 12591  000028  1044               	dw	_Default_ISR shr (0+2)
 12592                           
 12593                           ; Vector 17 : DMA1DCNT
 12594  00002A  1044               	dw	_Default_ISR shr (0+2)
 12595                           
 12596                           ; Vector 18 : DMA1OR
 12597  00002C  1044               	dw	_Default_ISR shr (0+2)
 12598                           
 12599                           ; Vector 19 : DMA1A
 12600  00002E  1044               	dw	_Default_ISR shr (0+2)
 12601                           
 12602                           ; Vector 20 : SPI1RX
 12603  000030  1044               	dw	_Default_ISR shr (0+2)
 12604                           
 12605                           ; Vector 21 : SPI1TX
 12606  000032  1044               	dw	_Default_ISR shr (0+2)
 12607                           
 12608                           ; Vector 22 : SPI1
 12609  000034  1044               	dw	_Default_ISR shr (0+2)
 12610                           
 12611                           ; Vector 23 : I2C1RX
 12612  000036  1044               	dw	_Default_ISR shr (0+2)
 12613                           
 12614                           ; Vector 24 : I2C1TX
 12615  000038  1044               	dw	_Default_ISR shr (0+2)
 12616                           
 12617                           ; Vector 25 : I2C1
 12618  00003A  1044               	dw	_Default_ISR shr (0+2)
 12619                           
 12620                           ; Vector 26 : I2C1E
 12621  00003C  1044               	dw	_Default_ISR shr (0+2)
 12622                           
 12623                           ; Vector 27 : U1RX
 12624  00003E  0DFE               	dw	_UART1_rx_vect_isr shr (0+2)
 12625                           
 12626                           ; Vector 28 : U1TX
 12627  000040  0DEA               	dw	_UART1_tx_vect_isr shr (0+2)
 12628                           
 12629                           ; Vector 29 : U1E
 12630  000042  1044               	dw	_Default_ISR shr (0+2)
 12631                           
 12632                           ; Vector 30 : U1
 12633  000044  1044               	dw	_Default_ISR shr (0+2)
 12634                           
 12635                           ; Vector 31 : TMR0
 12636  000046  1044               	dw	_Default_ISR shr (0+2)
 12637                           
 12638                           ; Vector 32 : TMR1
 12639  000048  1044               	dw	_Default_ISR shr (0+2)
 12640                           
 12641                           ; Vector 33 : TMR1G
 12642  00004A  1044               	dw	_Default_ISR shr (0+2)
 12643                           
 12644                           ; Vector 34 : TMR2
 12645  00004C  1044               	dw	_Default_ISR shr (0+2)
 12646                           
 12647                           ; Vector 35 : CCP1
 12648  00004E  1044               	dw	_Default_ISR shr (0+2)
 12649                           
 12650                           ; Vector 36 : Undefined
 12651  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 12652                           
 12653                           ; Vector 37 : NCO1
 12654  000052  1044               	dw	_Default_ISR shr (0+2)
 12655                           
 12656                           ; Vector 38 : CWG1
 12657  000054  1044               	dw	_Default_ISR shr (0+2)
 12658                           
 12659                           ; Vector 39 : CLC1
 12660  000056  1044               	dw	_Default_ISR shr (0+2)
 12661                           
 12662                           ; Vector 40 : INT1
 12663  000058  1044               	dw	_Default_ISR shr (0+2)
 12664                           
 12665                           ; Vector 41 : CMP2
 12666  00005A  1044               	dw	_Default_ISR shr (0+2)
 12667                           
 12668                           ; Vector 42 : DMA2SCNT
 12669  00005C  1044               	dw	_Default_ISR shr (0+2)
 12670                           
 12671                           ; Vector 43 : DMA2DCNT
 12672  00005E  1044               	dw	_Default_ISR shr (0+2)
 12673                           
 12674                           ; Vector 44 : DMA2OR
 12675  000060  1044               	dw	_Default_ISR shr (0+2)
 12676                           
 12677                           ; Vector 45 : DMA2A
 12678  000062  1044               	dw	_Default_ISR shr (0+2)
 12679                           
 12680                           ; Vector 46 : I2C2RX
 12681  000064  1044               	dw	_Default_ISR shr (0+2)
 12682                           
 12683                           ; Vector 47 : I2C2TX
 12684  000066  1044               	dw	_Default_ISR shr (0+2)
 12685                           
 12686                           ; Vector 48 : I2C2
 12687  000068  1044               	dw	_Default_ISR shr (0+2)
 12688                           
 12689                           ; Vector 49 : I2C2E
 12690  00006A  1044               	dw	_Default_ISR shr (0+2)
 12691                           
 12692                           ; Vector 50 : U2RX
 12693  00006C  1044               	dw	_Default_ISR shr (0+2)
 12694                           
 12695                           ; Vector 51 : U2TX
 12696  00006E  1044               	dw	_Default_ISR shr (0+2)
 12697                           
 12698                           ; Vector 52 : U2E
 12699  000070  1044               	dw	_Default_ISR shr (0+2)
 12700                           
 12701                           ; Vector 53 : U2
 12702  000072  1044               	dw	_Default_ISR shr (0+2)
 12703                           
 12704                           ; Vector 54 : TMR3
 12705  000074  1044               	dw	_Default_ISR shr (0+2)
 12706                           
 12707                           ; Vector 55 : TMR3G
 12708  000076  1044               	dw	_Default_ISR shr (0+2)
 12709                           
 12710                           ; Vector 56 : TMR4
 12711  000078  0E12               	dw	_TMR4_ISR shr (0+2)
 12712                           
 12713                           ; Vector 57 : CCP2
 12714  00007A  1044               	dw	_Default_ISR shr (0+2)
 12715                           
 12716                           ; Vector 58 : Undefined
 12717  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 12718                           
 12719                           ; Vector 59 : CWG2
 12720  00007E  1044               	dw	_Default_ISR shr (0+2)
 12721                           
 12722                           ; Vector 60 : CLC2
 12723  000080  1044               	dw	_Default_ISR shr (0+2)
 12724                           
 12725                           ; Vector 61 : INT2
 12726  000082  1044               	dw	_Default_ISR shr (0+2)
 12727                           
 12728                           ; Vector 62 : Undefined
 12729  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 12730                           
 12731                           ; Vector 63 : Undefined
 12732  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 12733                           
 12734                           ; Vector 64 : Undefined
 12735  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 12736                           
 12737                           ; Vector 65 : Undefined
 12738  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 12739                           
 12740                           ; Vector 66 : Undefined
 12741  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 12742                           
 12743                           ; Vector 67 : Undefined
 12744  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 12745                           
 12746                           ; Vector 68 : Undefined
 12747  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 12748                           
 12749                           ; Vector 69 : Undefined
 12750  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 12751                           
 12752                           ; Vector 70 : TMR5
 12753  000094  1044               	dw	_Default_ISR shr (0+2)
 12754                           
 12755                           ; Vector 71 : TMR5G
 12756  000096  0EA9               	dw	_TMR5_GATE_ISR shr (0+2)
 12757                           
 12758                           ; Vector 72 : TMR6
 12759  000098  1044               	dw	_Default_ISR shr (0+2)
 12760                           
 12761                           ; Vector 73 : CCP3
 12762  00009A  0E39               	dw	_CCP3_CaptureISR shr (0+2)
 12763                           
 12764                           ; Vector 74 : CWG3
 12765  00009C  1044               	dw	_Default_ISR shr (0+2)
 12766                           
 12767                           ; Vector 75 : CLC3
 12768  00009E  1044               	dw	_Default_ISR shr (0+2)
 12769                           
 12770                           ; Vector 76 : Undefined
 12771  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 12772                           
 12773                           ; Vector 77 : Undefined
 12774  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 12775                           
 12776                           ; Vector 78 : Undefined
 12777  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 12778                           
 12779                           ; Vector 79 : Undefined
 12780  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 12781                           
 12782                           ; Vector 80 : CCP4
 12783  0000A8  0E4C               	dw	_CCP4_CaptureISR shr (0+2)
 12784                           
 12785                           ; Vector 81 : CLC4
 12786  0000AA  1044               	dw	_Default_ISR shr (0+2)
 12787  0000AC                     ivt0x8_undefint:
 12788                           	callstack 0
 12789  0000AC  00FF               	reset	
 12790                           
 12791                           	psect	text89
 12792  000000                     __ptext89:
 12793                           	callstack 0
 12794  000000                     
 12795                           	psect	rparam
 12796  0000                     
 12797                           	psect	config
 12798                           
 12799                           ;Config register CONFIG1L @ 0x300000
 12800                           ;	External Oscillator Selection
 12801                           ;	FEXTOSC = OFF, Oscillator not enabled
 12802                           ;	Reset Oscillator Selection
 12803                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 12804  300000                     	org	3145728
 12805  300000  8C                 	db	140
 12806                           
 12807                           ;Config register CONFIG1H @ 0x300001
 12808                           ;	Clock out Enable bit
 12809                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 12810                           ;	PRLOCKED One-Way Set Enable bit
 12811                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 12812                           ;	Clock Switch Enable bit
 12813                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12814                           ;	Fail-Safe Clock Monitor Enable bit
 12815                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 12816  300001                     	org	3145729
 12817  300001  FF                 	db	255
 12818                           
 12819                           ;Config register CONFIG2L @ 0x300002
 12820                           ;	MCLR Enable bit
 12821                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 12822                           ;	Power-up timer selection bits
 12823                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 12824                           ;	Multi-vector enable bit
 12825                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 12826                           ;	IVTLOCK bit One-way set enable bit
 12827                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 12828                           ;	Low Power BOR Enable bit
 12829                           ;	LPBOREN = OFF, ULPBOR disabled
 12830                           ;	Brown-out Reset Enable bits
 12831                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 12832  300002                     	org	3145730
 12833  300002  FF                 	db	255
 12834                           
 12835                           ;Config register CONFIG2H @ 0x300003
 12836                           ;	Brown-out Reset Voltage Selection bits
 12837                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 12838                           ;	ZCD Disable bit
 12839                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 12840                           ;	PPSLOCK bit One-Way Set Enable bit
 12841                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 12842                           ;	Stack Full/Underflow Reset Enable bit
 12843                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12844                           ;	Debugger Enable bit
 12845                           ;	DEBUG = OFF, Background debugger disabled
 12846                           ;	Extended Instruction Set Enable bit
 12847                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 12848  300003                     	org	3145731
 12849  300003  FF                 	db	255
 12850                           
 12851                           ;Config register CONFIG3L @ 0x300004
 12852                           ;	WDT Period selection bits
 12853                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12854                           ;	WDT operating mode
 12855                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 12856  300004                     	org	3145732
 12857  300004  9F                 	db	159
 12858                           
 12859                           ;Config register CONFIG3H @ 0x300005
 12860                           ;	WDT Window Select bits
 12861                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 12862                           ;	WDT input clock selector
 12863                           ;	WDTCCS = SC, Software Control
 12864  300005                     	org	3145733
 12865  300005  FF                 	db	255
 12866                           
 12867                           ;Config register CONFIG4L @ 0x300006
 12868                           ;	Boot Block Size selection bits
 12869                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 12870                           ;	Boot Block enable bit
 12871                           ;	BBEN = OFF, Boot block disabled
 12872                           ;	Storage Area Flash enable bit
 12873                           ;	SAFEN = OFF, SAF disabled
 12874                           ;	Application Block write protection bit
 12875                           ;	WRTAPP = OFF, Application Block not write protected
 12876  300006                     	org	3145734
 12877  300006  FF                 	db	255
 12878                           
 12879                           ;Config register CONFIG4H @ 0x300007
 12880                           ;	Configuration Register Write Protection bit
 12881                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 12882                           ;	Boot Block Write Protection bit
 12883                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 12884                           ;	Data EEPROM Write Protection bit
 12885                           ;	WRTD = OFF, Data EEPROM not write-protected
 12886                           ;	SAF Write protection bit
 12887                           ;	WRTSAF = OFF, SAF not Write Protected
 12888                           ;	Low Voltage Programming Enable bit
 12889                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 12890  300007                     	org	3145735
 12891  300007  FF                 	db	255
 12892                           
 12893                           ;Config register CONFIG5L @ 0x300008
 12894                           ;	PFM and Data EEPROM Code Protection bit
 12895                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 12896  300008                     	org	3145736
 12897  300008  FF                 	db	255
 12898                           
 12899                           ;Config register CONFIG5H @ 0x300009
 12900                           ;	unspecified, using default values
 12901  300009                     	org	3145737
 12902  300009  FF                 	db	255
 12903                           tosu	equ	0x3FFF
 12904                           tosh	equ	0x3FFE
 12905                           tosl	equ	0x3FFD
 12906                           stkptr	equ	0x3FFC
 12907                           pclatu	equ	0x3FFB
 12908                           pclath	equ	0x3FFA
 12909                           pcl	equ	0x3FF9
 12910                           tblptru	equ	0x3FF8
 12911                           tblptrh	equ	0x3FF7
 12912                           tblptrl	equ	0x3FF6
 12913                           tablat	equ	0x3FF5
 12914                           prodh	equ	0x3FF4
 12915                           prodl	equ	0x3FF3
 12916                           indf0	equ	0x3FEF
 12917                           postinc0	equ	0x3FEE
 12918                           postdec0	equ	0x3FED
 12919                           preinc0	equ	0x3FEC
 12920                           plusw0	equ	0x3FEB
 12921                           fsr0h	equ	0x3FEA
 12922                           fsr0l	equ	0x3FE9
 12923                           wreg	equ	0x3FE8
 12924                           indf1	equ	0x3FE7
 12925                           postinc1	equ	0x3FE6
 12926                           postdec1	equ	0x3FE5
 12927                           preinc1	equ	0x3FE4
 12928                           plusw1	equ	0x3FE3
 12929                           fsr1h	equ	0x3FE2
 12930                           fsr1l	equ	0x3FE1
 12931                           bsr	equ	0x3FE0
 12932                           indf2	equ	0x3FDF
 12933                           postinc2	equ	0x3FDE
 12934                           postdec2	equ	0x3FDD
 12935                           preinc2	equ	0x3FDC
 12936                           plusw2	equ	0x3FDB
 12937                           fsr2h	equ	0x3FDA
 12938                           fsr2l	equ	0x3FD9
 12939                           status	equ	0x3FD8

Data Sizes:
    Strings     113
    Constant    0
    Data        0
    BSS         113
    Persistent  25
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      64
    BANK0           160     84     160
    BANK1           256     16      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3385$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3385$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_10(CODE[10]), STR_9(CODE[12]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[22]), STR_3(CODE[13]), 
		 -> STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _getBatteryVoltage->_ADCC_GetSingleConversion
    _dtoa->_pad
    _pad->_strlen
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _setSteering->_PWM5_LoadDutyValue
    _setSteering->_PWM6_LoadDutyValue
    _calcSpeed->___fltol
    _calcMotorPow->___fltol
    _calcMotorPow->_actSpeed
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _SYSTEM_Initialize->_TMR3_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _calcSteering->_setSteering
    _setSteering->___awdiv
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___flge->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getCurve->_printf
    _getBatteryVoltage->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37951
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   36804
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0    9104
                                             10 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0    8943
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6    8912
                                              2 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    7931
                                             78 BANK0      6     0      6
                                              0 BANK1      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    7458
                                             62 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             26 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             33 COMRAM     1     1      0
                                             16 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             32 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             16 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             31 COMRAM     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             31 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0    4456
                                             17 BANK0      4     4      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3242
                                              8 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    6340
                                             71 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2388
                                             47 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    6769
                                             71 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     946
                                              2 BANK0      4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             31 COMRAM     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     845
                                             31 COMRAM     2     0      2
                                             14 BANK0      2     2      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     805
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              8 BANK0     14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             31 COMRAM     2     2      0
                                             63 BANK0      8     4      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2693
                                             22 BANK0     25    17      8
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     985
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     446
                                             22 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                              0 BANK0      2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             31 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   3     3      0       0
                                             22 COMRAM     3     3      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   3     3      0       0
                                             25 COMRAM     3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            3     3      0       0
                                             28 COMRAM     3     3      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     4     4      0     144
                                              2 COMRAM     4     4      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     4     4      0     144
                                              8 COMRAM     4     4      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       2     2      0     233
                                             20 COMRAM     2     2      0
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                             12 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___xxtofl (ARG)
         ___awdiv (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _getCurve
       _printf
     _getReverse

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      85        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllll     181      0       0      83        0.0%
BITBIGSFRhhhhll    17E      0       0      53        0.0%
BITBIGSFRhhhhll    17A      0       0      54        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      30       7       18.8%
BITBIGSFRhhhhll     E3      0       0      50        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      40       1       67.4%
BITBIGSFRhhhhll     44      0       0      59        0.0%
BITBIGSFRhhhhll     3A      0       0      47        0.0%
BITBIGSFRhhhhll     34      0       0      67        0.0%
BITBIGSFRhhhhhh     28      0       0      36        0.0%
BITBIGSFRhhhhll     20      0       0      42        0.0%
BITBIGSFRhhhhll     20      0       0      70        0.0%
BITBIGSFRllhh       15      0       0      74        0.0%
BITBIGSFRhhhhll     12      0       0      48        0.0%
BITBIGSFRlh         11      0       0      73        0.0%
BITBIGSFRhhhhll      B      0       0      66        0.0%
BITBIGSFRhhhhll      A      0       0      41        0.0%
BITBIGSFRhhhhll      8      0       0      55        0.0%
BITBIGSFRllhlhl      6      0       0      77        0.0%
BITBIGSFRlllhhl      6      0       0      80        0.0%
BITBIGSFRhhhhll      6      0       0      57        0.0%
BITBIGSFRhhhhll      6      0       0      68        0.0%
BITBIGSFRhhhhhh      6      0       0      39        0.0%
BITBIGSFRhhhhll      5      0       0      58        0.0%
BITBIGSFRhhhhll      5      0       0      65        0.0%
BITBIGSFRhhhhll      5      0       0      63        0.0%
BITBIGSFRhhhhll      5      0       0      61        0.0%
BITBIGSFRhhhhhh      4      0       0      38        0.0%
BITBIGSFRhhhhll      4      0       0      60        0.0%
BITBIGSFRhhhhll      4      0       0      62        0.0%
BITBIGSFRhhhhll      4      0       0      64        0.0%
BITBIGSFRlllhll      3      0       0      81        0.0%
BITBIGSFRllhll       3      0       0      78        0.0%
BITBIGSFRhhhhhl      3      0       0      40        0.0%
BITBIGSFRllhlhl      2      0       0      76        0.0%
BITBIGSFRhhhhll      1      0       0      49        0.0%
BITBIGSFRllhlhl      1      0       0      75        0.0%
BITBIGSFRlllhhh      1      0       0      79        0.0%
BITBIGSFRhhhhll      1      0       0      44        0.0%
BITBIGSFRhhhhll      1      0       0      43        0.0%
BITBIGSFRhhhhll      1      0       0      46        0.0%
BITBIGSFRhhhhll      1      0       0      45        0.0%
BITBIGSFRllllh       1      0       0      82        0.0%
BITBIGSFRhhhhhh      1      0       0      37        0.0%
BITBIGSFRhhhhll      1      0       0      52        0.0%
BITBIGSFRhhhhll      1      0       0      51        0.0%
BITBIGSFRhhhhll      1      0       0      56        0.0%
BITBIGSFRhhhhll      1      0       0      69        0.0%
BITBIGSFRhhl         1      0       0      71        0.0%
BITBIGSFRhl          1      0       0      72        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     110      84        0.0%
DATA                 0      0     110       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jan 24 21:39:28 2024

                             _CCP4_Initialize 3DC0                        ??_CCP3_DefaultCallBack 0003  
                                          l72 408A                                            l75 3F94  
                                          l69 39C4                                  ___awdiv@sign 0065  
                           ??_TMR5_WriteTimer 000F                                           l312 36F6  
                                         l404 38E2                                           l308 36AE  
                                         l309 36C8                                           l318 40A2  
                                         l520 3A0E                                           l441 3E1A  
                                         l362 40C0                                           l371 40AC  
                                         l188 30F6                                           l284 33E8  
                                         l365 40D4                                           l359 40CA  
                                         l368 40B6                                           l712 3D2E  
                                         l449 40FC                                           l482 3DEC  
                                         l723 402A                                           l555 40DE  
                                         l644 3E74                                           l740 3CC2  
                                         l709 4042                                           l581 3C20  
                                         l726 3CF8                                           l479 40F2  
                                         l751 405A                                           l737 4072  
                                         l754 3C8C                                           l923 4012  
                                         l695 40E8                                           l795 3D5E  
                                         l893 3EA0                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 3B30                                           _pad 30F8  
                             _TMR2_Initialize 3FF8                CCP4_SetCallBack@customCallBack 0020  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 40EA                                  ___flmul@aexp 0083  
                                ___flmul@bexp 0088                            _UART1_Transmit_ISR 3AEC  
                                ___flmul@sign 0082                                  ___flmul@temp 008D  
                                ___flmul@prod 0089                       __end_of_CCP4_CaptureISR 397C  
                                ___fltol@exp1 0021                                          l1042 3752  
                                        l2010 23F8                                          l2003 2360  
                                        ?_abs 0070                                          l1212 351C  
                                        l1213 356A                                          l2006 24BC  
                                        l1054 3BBE                                          l2102 3B68  
                                        l1232 3F70                                          l1240 1EC8  
                                        l2017 2454                                          l1057 3BE8  
                                        l2105 3B70                                          l2026 3F22  
                                        l1307 265E                                          l2131 3BAC  
                                        l3101 30B4                                          l1229 3482  
                                        l2117 351A                                          l2125 3AA0  
                                        l2053 313E                                          l3103 30B6  
                                        l1327 20F6                                          l1336 2C2A  
                                        l1272 268E                                          l2056 3182  
                                        l2064 1A26                                          l1256 1ED8  
                                        l3105 30B8                                          l1345 302C  
                                        l1290 27F0                                          l2058 31BE  
                                        l2066 1A2E                                          l1266 3632  
                                        l3051 3898                                          l3107 4074  
                                        l3131 3D30                                          l1427 2D38  
                                        l2091 2304                               _timer3ReloadVal 00F4  
                                        l2084 1C6A                                          l3061 38C4  
                                        l3053 389A                                          l3141 3D58  
                                        l3133 3D4E                                          l1613 2F00  
                                        l1277 271A                                          l1294 24D4  
                                        l1462 297A                                          l3119 36F8  
                                        l3071 38D8                                          l3063 38CE  
                                        l3055 38A2                                          l3143 3D5A  
                                        l3135 3D50                                          l3151 400A  
                                        l1296 24F8                                          l3073 38DA  
                                        l3065 38D2                                          l3057 38AC  
                                        l3081 3F72                                          l3153 4044  
                                        l3145 4014                                          l3137 3D52  
                                        l1297 250C                                          l2097 3692  
                                        l1618 2F46                                          l1298 2534  
                                        l2098 369A                                          l3075 38DC  
                                        l3067 38D4                                          l3059 38C2  
                                        l3091 30A6                                          l3083 302E  
                                        l3139 3D56                                          l3147 3FF8  
                                        l5011 334A                                          l1299 2540  
                                        l1475 2AE0                                          l3165 3E76  
                                        l3077 38DE                                          l3069 38D6  
                                        l3093 30A8                                          l3085 304E  
                                        l3149 4004                                          l5021 3374  
                                        l5013 3356                                          l1645 2E40  
                                        l1902 144E                                          l3079 38E0  
                                        l3095 30AA                                          l3087 3050  
                                        l3175 405C                                          l3191 402C  
                                        l5031 3388                                          l5023 3378  
                                        l5015 3366                                          l1903 143C  
                                        l3097 30AC                                          l3089 3058  
                                        l5041 339C                                          l5033 338C  
                                        l5025 337C                                          l5017 336C  
                                        l5009 3346                                          l6001 3634  
                                        l3099 30B2                                          l4411 40B8  
                                        l5051 33E4                                          l5043 33A0  
                                        l5035 3390                                          l5027 3380  
                                        l5019 3370                                          l1579 3284  
                                        l6011 3BB6                                          l6003 363C  
                                        l4413 40CC                                          l4405 40AE  
                                        l5045 33A4                                          l5037 3394  
                                        l5029 3384                                          l6101 1544  
                                        l6021 33EA                                          l6013 3BBA  
                                        l6005 364A                                          l5141 35DE  
                                        l4407 40A4                                          l5047 33B0  
                                        l5039 3398                                          l6111 1584  
                                        l6103 1552                                          l6031 347A  
                                        l6023 33F4                                          l6015 3BBC  
                                        l6007 3670                                          l5151 3614  
                                        l5143 35E2                                          l5135 35AE  
                                        l4425 40F4                                          l4409 40C2  
                                        l5049 33BC                                          l6201 18AA  
                                        l6121 15B4                                          l6113 158A  
                                        l6105 1554                                          l6025 340A  
                                        l4601 119E                                          l6041 24BE  
                                        l6017 3BCC                                          l6009 3BB0  
                                        l5153 362A                                          l5145 35F2  
                                        l5137 35C6                                          l1962 15FC  
                                        l4427 40EA                                          l6211 1914  
                                        l6203 18B8                                          l1971 188E  
                                        l6131 15EC                                          l6123 15B6  
                                        l6115 159A                                          l6107 1564  
                                        l6027 341A                                          l4611 11B2  
                                        l4603 11A2                                          l6043 2514  
                                        l6051 25A2                                          l6035 3EFA  
                                        l5147 3608                                          l5139 35CC  
                                        l1972 187C                                          l1876 1264  
                                        l4445 40E0                                          l4429 40D6  
                                        l6221 196A                                          l6213 192E  
                                        l6205 18E2                                          l6141 1640  
                                        l6133 160C                                          l6125 15C6  
                                        l6117 15A0                                          l6109 1574  
                                        l6029 344C                                          l4701 1434  
                                        l1893 137E                                          l1885 1534  
                                        l4621 1210                                          l1877 1252  
                                        l4605 11A6                                          l4613 11B6  
                                        l4541 1092                                          l6061 260C  
                                        l6053 25C0                                          l6045 254C  
                                        l6037 3F04                                          l6301 1CD8  
                                        l5149 3610                                          l1966 1984  
                                        l1878 1218                                          ?_pad 0070  
                                        l6215 194A                                          l6223 1970  
                                        l6207 18E6                                          l6151 1698  
                                        l6143 164A                                          l6135 161C  
                                        l6127 15D6                                          l6119 15A6  
                                        l6231 231C                                          l4711 14B2  
                                        l4631 1246                                          l4623 1226  
                                        l4615 11BA                                          l4607 11AA  
                                        l4543 10A2                                          l4551 10CC  
                                        l4535 1074                                          l6063 2618  
                                        l6055 25CC                                          l6311 1D4A  
                                        l6303 1CF6                                          l6225 1974  
                                        l6217 195A                                          l6209 1900  
                                        l1969 1816                                          l6161 16E2  
                                        l6153 16A4                                          l6145 1664  
                                        l6129 15E6                                          l6241 239A  
                                        l6233 232A                                          l6081 2F82  
                                        l4721 14F8                                          l4705 145E  
                                        l4713 14B4                                          l4641 1296  
                                        l4633 1250                                          l4625 1232  
                                        l4617 11E4                                          l4609 11AE  
                                        l4561 10FC                                          l4553 10DC  
                                        l4545 10B2                                          l4537 1082  
                                        l6065 2634                                          l6057 25E8  
                                        l6049 2560                                          l6321 1DA6  
                                        l6313 1D68                                          l6305 1D08  
                                        l6219 1968                                          l1979 1946  
                                        l6171 1750                                          l6163 16F2  
                                        l6155 16B2                                          l6147 1670  
                                        l6139 1630                                          l6251 23EE  
                                        l6243 23A2                                          l6235 2370  
                                        l6091 2FDE                                          l6083 2F8A  
                                        l4731 1522                                          l4723 1506  
                                        l4715 14C4                                          l4707 146A  
                                        l4651 12D2                                          l4643 12A6  
                                        l4635 1272                                          l4627 1236  
                                        l4619 1200                                          l4571 113C  
                                        l4563 110A                                          l4555 10E2  
                                        l4547 10C2                                          l4539 1090  
                                        l6411 1EDA                                          l6067 263C  
                                        l6059 25F0                                          l6331 1DFC  
                                        l6323 1DAC                                          l6315 1D7A  
                                        l6307 1D26                                          l6501 2E82  
                                        l6181 17FC                                          l6173 1770  
                                        l6165 1710                                          l6157 16C2  
                                        l6149 168C                                          l4901 2E00  
                                        l6261 2464                                          l6253 242A  
                                        l6245 23AE                                          l6237 2386  
                                        l6229 230A                                          l6093 2FE6  
                                        l6085 2F96                                          l6077 2F48  
                                        l4733 1524                                          l4725 150C  
                                        l4717 14D4                                          l4709 1478  
                                        l4661 1318                                          l4653 12E0  
                                        l4645 12B4                                          l4637 1282  
                                        l4629 1244                                          l4581 1176  
                                        l4573 113E                                          l4565 110C  
                                        l4557 10F4                                          l4549 10C4  
                                        l6421 1F24                                          l6413 1EE8  
                                        l6069 264C                                          l5701 2826  
                                        l6333 1E12                                          l6325 1DBE  
                                        l6317 1D8C                                          l6309 1D3E  
                                        l6511 2EEE                                          l6503 2EB0  
                                        l6191 1838                                          l6183 1806  
                                        l6175 179A                                          l6167 1720  
                                        l6159 16D2                                          l4903 2E10  
                                        l6271 24AC                                          l6263 2468  
                                        l6255 2436                                          l6247 23E0  
                                        l6095 2FF2                                          l6079 2F66  
                                        l6087 2FA6                                          l4727 150E  
                                        l4719 14F4                                          l4671 1394  
                                        l4663 134C                                          l4655 12E2  
                                        l4647 12C2                                          l4591 118A  
                                        l4583 117A                                          l4567 111C  
                                        l4575 1146                                          l4559 10F6  
                                        l6431 1F74                                          l6423 1F30  
                                        l6415 1EFE                                          l5711 2868  
                                        l5703 282A                                          l6343 1E5E  
                                        l6335 1E2A                                          l6327 1DD0  
                                        l6319 1D94                                          l6281 39F8  
                                        l6521 398C                                          l6513 2F3E  
                                        l6505 2EC0                                          l6193 1846  
                                        l6185 1814                                          l6177 17D0  
                                        l6169 1740                                          l4905 2E20  
                                        l6265 248C                                          l6257 2444  
                                        l6249 23E2                                          l6089 2FC2  
                                        l6097 3014                                          l4729 1514  
                                        l4681 13D0                                          l4673 13A4  
                                        l4665 134E                                          l4657 12EC  
                                        l4649 12CE                                          l4593 118E  
                                        l4585 117E                                          l4577 1156  
                                        l4569 112C                                          l6441 2042  
                                        l6433 1F8A                                          l6425 1F4A  
                                        l6417 1F02                                          l6361 266E  
                                        l5721 28C2                                          l5713 2886  
                                        l5705 2838                                          l5801 1986  
                                        l6345 1E70                                          l6337 1E40  
                                        l6329 1DEA                                          l6353 1E8A  
                                        l6283 39FC                                          l6275 39C6  
                                        l6531 39A4                                          l6523 3990  
                                        l6515 2F44                                          l6507 2ECE  
                                        l6195 1874                                          l6187 1826  
                                        l6179 17DE                                          l6099 1536  
                                        l4907 2E30                                          l6267 249C  
                                        l6259 2462                                          l4691 13FC  
                                        l4683 13D2                                          l4667 135E  
                                        l4659 12F2                                          l4595 1192  
                                        l4587 1182                                          l4579 1168  
                                        l6435 1F8E                                          l6427 1F60  
                                        l6419 1F1C                                          l6451 205A  
                                        l6363 268E                                          l5723 28F0  
                                        l5715 288E                                          l5731 292A  
                                        l5707 2858                                          l5651 36DC  
                                        l5643 369E                                          l5811 1A00  
                                        l5803 19A6                                          l6291 3F5A  
                                        l6347 1E78                                          l6339 1E4C  
                                        l6285 39FE                                          l6277 39DA  
                                        l6533 39AC                                          l6525 3998  
                                        l6509 2EE0                                          l6189 1834  
                                        l6269 24AA                                          l4685 13E0  
                                        l4677 13B8                                          l4693 13FE  
                                        l4669 136E                                          l4597 1196  
                                        l4589 1186                                          l6461 20EE  
                                        l6445 204E                                          l6437 1FA4  
                                        l6429 1F68                                          l6453 20A4  
                                        l6701 26F4                                          l6365 26AA  
                                        l6373 26DE                                          l5733 293A  
                                        l5725 2910                                          l5717 28A2  
                                        l5709 285C                                          l5741 2980  
                                        l5653 36DE                                          l5645 369E  
                                        l5661 409C                                          l5821 1A5C  
                                        l5813 1A1A                                          l5805 19D0  
                                        l6293 1C6C                                          l6541 351C  
                                        l6287 3A0A                                          l6279 39DE  
                                        l6535 39B0                                          l6527 399C  
                                        l6519 397C                                          l6199 189E  
                                        l6471 2AFC                                          l4687 13E8  
                                        l4679 13C2                                          l4695 140C  
                                        l4599 119A                                          l6455 20C2  
                                        l6439 2036                                          l5911 3C58  
                                        l6703 27BA                                          l6391 2792  
                                        l6383 275A                                          l6375 271E  
                                        l6367 26B6                                          l6359 2660  
                                        l5735 295A                                          l5727 2912  
                                        l5719 28B0                                          l5751 29E2  
                                        l5743 2990                                          l5655 36EE  
                                        l5647 36BE                                          l5671 34D2  
                                        l5663 3484                                          l5831 1AFE  
                                        l5823 1A64                                          l5815 1A36  
                                        l5807 19F0                                          l6295 1C70  
                                        l6551 3594                                          l6543 3520  
                                        l4961 3E0A                                          l6537 39B8  
                                        l6529 39A0                                          l4881 2DA6  
                                        l4873 2D66                                          l5921 2C54  
                                        l5913 2C2C                                          l5905 3CFA  
                                        l6481 2BB6                                          l6473 2B08  
                                        l4697 1410                                          l4689 13EC  
                                        l6457 20CA                                          l6705 2574  
                                        l6385 276C                                          l6377 2732  
                                        l6369 26D2                                          l5729 2924  
                                        l5761 2A58                                          l5753 2A00  
                                        l5745 29B0                                          l5657 36F2  
                                        l5649 36CA                                          l5673 3508  
                                        l5665 3498                                          l5681 3A7A  
                                        l5841 1BBC                                          l5833 1B04  
                                        l5825 1A6E                                          l5817 1A48  
                                        l5809 19FE                                          l6289 3F4C  
                                        l6297 1CB4                                          l6553 3598  
                                        l6545 357A                                          l6561 3FBA  
                                        l4963 3E14                                          l4971 3E62  
                                        l6539 39BC                                          l4891 2DD6  
                                        l4883 2DB4                                          l4875 2D90  
                                        l4867 2D3A                                          l5931 2C9C  
                                        l5923 2C62                                          l5915 2C32  
                                        l5907 3CC4                                          l6491 2C0E  
                                        l6483 2BBA                                          l6475 2B86  
                                        l6467 2AE2                                          l4699 141E  
                                        l6459 20E6                                          l6707 206E  
                                        l6379 2746                                          l5771 2AC0  
                                        l5763 2A78                                          l5755 2A08  
                                        l5747 29B4                                          l5739 297C  
                                        l5659 36F4                                          l5667 34AA  
                                        l5683 3A80                                          l5691 3B9E  
                                        l5851 1C0A                                          l5843 1BD6  
                                        l5827 1A74                                          l5835 1B68  
                                        l5819 1A56                                          l6299 1CCC  
                                        l6555 359C                                          l6547 357E  
                                        l6563 3FBE                                          l4965 3E18  
                                        l4957 3DEE                                          l4981 3DDC  
                                        l4973 3E64                                          l4893 2DE0  
                                        l4877 2D92                                          l4869 2D52  
                                        l5941 2CE6                                          l5933 2CA4  
                                        l5925 2C72                                          l5917 2C40  
                                        l6493 2C16                                          l6485 2BCA  
                                        l6477 2B9A                                          l6469 2AFC  
                                        l5909 3C8E                                          l6389 2780  
                                        l6397 27A6                                          l5765 2A8A  
                                        l5757 2A1C                                          l5749 29C2  
                                        l5669 34B4                                          l5677 3A5A  
                                        l5685 3B72                                          l5781 312A  
                                        l5853 1C1C                                          l5837 1B84  
                                        l5845 1BE4                                          l5829 1AF8  
                                        l6557 35A0                                          l6549 3590  
                                        l6565 3FC0                                          l4959 3DFE  
                                        l4983 3DE6                                          l4991 3C02  
                                        l4975 3E70                                          l4967 3E4A  
                                        l4879 2DA2                                          l5951 2D18  
                                        l5943 2CF6                                          l5935 2CB0  
                                        l5927 2C76                                          l5919 2C50  
                                        l6495 2C22                                          l6487 2BE6  
                                        l6479 2BA2                                          l5695 27F2  
                                        l5759 2A2A                                          l5767 2A90  
                                        l5679 3A68                                          l5687 3B7E  
                                        l5791 3190                                          l5783 3136  
                                        l5775 30F8                                          l5855 1C28  
                                        l5847 1BF6                                          l5839 1BA2  
                                        l5871 214E                                          l5863 20F8  
                                        l6559 35A4                                          l6567 3FCE  
                                        l4985 3DEA                                          l4977 3DC0  
                                        l4993 3C1C                                          l4969 3E5E  
                                        l6497 2E42                                          l5961 31D4  
                                        l4889 2DCC                                          l5953 2D28  
                                        l5945 2CF8                                          l5937 2CBE  
                                        l5929 2C86                                          l6489 2BF2  
                                        l5697 27F8                                          l5769 2AA0  
                                        l5689 3B82                                          l5793 31A4  
                                        l5785 314A                                          l5777 3106  
                                        l5857 1C30                                          l5849 1C04  
                                        l5881 223E                                          l5873 217C  
                                        l5865 2126                                          l4979 3DD0  
                                        l4987 3BEA                                          l6499 2E72  
                                        l5971 31FA                                          l5963 31DC  
                                        l4899 2DF4                                          l5947 2D02  
                                        l5939 2CC8                                          l5699 2806  
                                        l5787 315E                                          l5779 311A  
                                        l5859 1C42                                          l5883 226C  
                                        l5891 22A0                                          l5875 21AA  
                                        l5867 2138                                          l4989 3BFE  
                                        l5981 3232                                          l5973 3202  
                                        l5965 31E0                                          l5957 31C0  
                                        l5949 2D08                                          l5797 3B30  
                                        l5789 3164                                          l5893 22B2  
                                        l5885 227E                                          l5877 2206  
                                        l5869 214A                                          l5991 325E  
                                        l5983 3238                                          l5975 3214  
                                        l5967 31EE                                          l5959 31C6  
                                        l5799 3B4C                                          l5887 2292  
                                        l5985 324E                                          l5977 321C  
                                        l5993 3264                                          l5969 31F6  
                                        l5897 22BE                                          l5995 3274  
                                        l5987 3256                                          l5979 3224  
                                        l5899 22EE                                          l6699 1EA2  
                                        l5997 327C                                          l5989 3258  
                                        STR_1 103E                                          STR_2 1001  
                                        STR_3 1025                                          STR_4 1001  
                                        STR_5 1017                                          STR_6 1069  
                                        STR_7 1049                                          STR_8 1054  
                                        STR_9 1032                                          u3000 110A  
                                        u3001 1106                                          u3010 111C  
                                        u3011 1118                                          u3100 1264  
                                        u3020 112C                                          u3101 1260  
                                        u3021 1128                                          _LATA 003FBA  
                                        u3110 1272                                          u3030 1168  
                                        _LATB 003FBB                                          u3111 126E  
                                        u3031 1164                                          _LATC 003FBC  
                                        u3200 13D0                                          u3120 1282  
                                        u3040 1176                                          _LATD 003FBD  
                                        u3201 13CC                                          u3121 127E  
                                        u3041 1172                                          _LATE 003FBE  
                                        u3210 13E0                                          u3130 12B4  
                                        u3050 11E4                                          u3211 13DC  
                                        u3131 12B0                                          u3051 11E0  
                                        u3300 14C4                                          u3220 13FC  
                                        u3140 12C2                                          u3060 11FC  
                                        u1525 38CC                                          u3301 14C0  
                                        u3221 13F8                                          u3141 12BE  
                                        u3061 11F6                                          u1526 38CE  
                                        u3310 14D4                                          u3230 140C  
                                        u3150 12E0                                          u3070 11FE  
                                        u3311 14D0                                          u3231 1408  
                                        u3151 12DC                                          u5000 340A  
                                        u3320 14F4                                          u3240 141E  
                                        u3160 1318                                          u3080 1226  
                                        u5001 3406                                          u3321 14F0  
                                        u3241 141A                                          u3161 1314  
                                        u3081 1222                                          u5010 341A  
                                        u3330 1506                                          u3250 1434  
                                        u3170 135E                                          u3090 1244  
                                        _T2PR 003FAB                                          u5011 3416  
                                        u3331 1502                                          u3251 1430  
                                        u3171 135A                                          u3091 1240  
                                        u5100 1552                                          u3340 1522  
                                        u3260 144A                                          u3180 1394  
                                        u5020 25C0                                          u5101 154E  
                                        u3341 151E                                          u3261 1446  
                                        u3181 1390                                          u5021 25BC  
                                        u5110 1564                                          u3270 145E  
                                        u3190 13A4                                          u5030 25E8  
                                        u5111 1560                                          u3271 145A  
                                        u3191 13A0                                          u5031 25E4  
                                        u5200 1834                                          u5120 1574  
                                        u3600 2E20                                          u3280 1478  
                                        u5040 260C                                          u4400 34AA  
                                        u5201 1830                                          u5121 1570  
                                        u3601 2E1C                                          u3281 1474  
                                        u5041 2608                                          u4401 34A6  
                                        u5210 1846                                          u5130 15B4  
                                        u3290 14B2                                          u5050 2634  
                                        u4410 34D2                                          _T4PR 003F9F  
                                        u5211 1842                                          u5131 15B0  
                                        u3291 14AE                                          u5051 2630  
                                        u4411 34CE                                          u5220 1874  
                                        u5140 15C6                                          u3540 2D52  
                                        u5300 232A                                          u5060 2F66  
                                        u4500 28F0                                          u4420 3508  
                                        u5221 1870                                          u5141 15C2  
                                        u3541 2D4E                                          u5301 2326  
                                        u5061 2F62                                          u4501 28EC  
                                        u4421 3504                                          u5230 188A  
                                        u5150 15D6                                          u3550 2D86  
                                        u5310 2386                                          u5070 2F82  
                                        u4510 293A                                          u4430 3AA0  
                                        u5231 1886                                          u5151 15D2  
                                        u5311 2382                                          u5071 2F7E  
                                        u4511 2936                                          u4431 3A9C  
                                        u5240 189E                                          u5160 160C  
                                        u3560 2DB4                                          u5320 23DC  
                                        u5080 2FC2                                          u4520 2990  
                                        u4360 36AE                                          u4440 3B9E  
                                        u4600 3182                                          u5400 1CCC  
                                        u5241 189A                                          u5161 1608  
                                        u3561 2DB0                                          u5321 23D8  
                                        u5081 2FBE                                          u4521 298C  
                                        u4361 36AA                                          u4441 3B9A  
                                        u4601 317E                                          u5401 1CC8  
                                        u5250 18B8                                          u5170 161C  
                                        u3570 2DC8                                          u5330 2426  
                                        u5090 2FDE                                          u4450 2806  
                                        u4530 29C2                                          u4370 36BE  
                                        u4610 3190                                          u5410 1D26  
                                        u5251 18B4                                          u5171 1618  
                                        u3571 2DC4                                          u3555 2D7C  
                                        u5331 2422                                          u5091 2FDA  
                                        u4451 2802                                          u4531 29BE  
                                        u4371 36BA                                          u4611 318C  
                                        u5411 1D22                                          u5260 1900  
                                        u5180 17BA                                          u3580 2DF0  
                                        u5340 2444                                          u5500 26AA  
                                        u4460 2838                                          u4540 2A00  
                                        u4620 3B4C                                          u4380 36EE  
                                        u4700 1B84                                          u5420 1D3E  
                                        u3820 35C6                                          _PMD0 0039C0  
                                        u5261 18FC                                          u3581 2DEC  
                                        u5341 2440                                          u5501 26A6  
                                        u4461 2834                                          u4541 29FC  
                                        u4621 3B48                                          u4381 36EA  
                                        u4701 1B80                                          u5421 1D3A  
                                        u3821 35C2                                          _PMD1 0039C1  
                                        u5270 192E                                          u5190 1814  
                                        u3590 2E10                                          u5350 2454  
                                        u5510 26D2                                          u4550 2A2A  
                                        u4390 3498                                          u4710 1BA2  
                                        u4630 19B8                                          u5430 1D8C  
                                        u3830 35DE                                          _PMD2 0039C2  
                                        u5271 192A                                          u5191 1810  
                                        u3591 2E0C                                          u5351 2450  
                                        u5511 26CE                                          u4471 2862  
                                        u4551 2A26                                          u4391 3494  
                                        u4711 1B9E                                          u4631 19B2  
                                        u5431 1D88                                          u3831 35DA  
                                        _PMD3 0039C3                                          u5280 1968  
                                        u5360 2462                                          u2960 1090  
                                        u5600 20C2                                          u5520 276C  
                                        u4480 2886                                          u4560 2A58  
                                        u4720 1BBC                                          u4640 19BA  
                                        u4800 21AA                                          u5440 1DBE  
                                        u3840 35F2                                          _PMD4 0039C4  
                                        u5281 1964                                          u5185 17B0  
                                        u5361 245E                                          u2961 108C  
                                        u5601 20BE                                          u5521 2768  
                                        u4481 2882                                          u4561 2A54  
                                        u4721 1BB8                                          u4801 21A6  
                                        u5441 1DBA                                          u3841 35EE  
                                        _PMD5 0039C5                                          u5370 249C  
                                        u5290 231C                                          u2970 10A2  
                                        u5610 20E6                                          u5530 2792  
                                        u4490 28B0                                          u4570 2AA0  
                                        u4730 1BD6                                          u4650 19D0  
                                        u4810 226C                                          u5450 1DD0  
                                        u3850 3608                                          _PMD6 0039C6  
                                        u5371 2498                                          u5291 2318  
                                        u2971 109E                                          u5611 20E2  
                                        u5531 278E                                          u4491 28AC  
                                        u4571 2A9C                                          u4731 1BD2  
                                        u4651 19CC                                          u4811 2268  
                                        u5451 1DCC                                          u3851 3604  
                                        _PMD7 0039C7                                          u5700 2F3E  
                                        u5380 24AA                                          u4900 2CE6  
                                        u5620 2B9A                                          u2980 10B2  
                                        u5540 1EFE                                          u4580 3106  
                                        u4740 1BE4                                          u4660 19FE  
                                        u5460 1DFC                                          u3860 362A  
                                        u5701 2F3A                                          u5381 24A6  
                                        u4901 2CE2                                          u5621 2B96  
                                        u2981 10AE                                          u5541 1EFA  
                                        u4581 3102                                          u4741 1BE0  
                                        u4661 19FA                                          u5461 1DF8  
                                        u3861 3626                                          u4910 2D18  
                                        u5630 2BB6                                          u2990 10F4  
                                        u5550 1F1C                                          u4590 312A  
                                        u4750 1BF6                                          u4670 1A1A  
                                        u5470 1E2A                                          u5390 1CB4  
                                        u5710 356A                                          u4911 2D14  
                                        u5631 2BB2                                          u2991 10F0  
                                        u5551 1F18                                          u4591 3126  
                                        u4751 1BF2                                          u4671 1A16  
                                        u5471 1E26                                          u5391 1CB0  
                                        u5711 3566                                          u4920 31D4  
                                        u5640 2BE6                                          u5560 1F4A  
                                        u4760 1C04                                          u4680 1A48  
                                        u5480 1E40                                          u5720 3590  
                                        u4921 31D0                                          u4825 3D20  
                                        u5641 2BE2                                          u5561 1F46  
                                        u4761 1C00                                          u4681 1A44  
                                        u5481 1E3C                                          u5721 358C  
                                        u4930 31EE                                          u5650 2C0E  
                                        u5570 1F60                                          u4770 1C1C  
                                        u4690 1A56                                          u5490 1E70  
                                        u4931 31EA                                          u4835 3CEA  
                                        u5651 2C0A                                          u5571 1F5C  
                                        u4771 1C18                                          u4691 1A52  
                                        u5491 1E6C                                          u5660 2E72  
                                        u4940 3214                                          u4860 2C40  
                                        u5580 1F8A                                          u4780 2126  
                                        u5661 2E6E                                          u4941 3210  
                                        u4861 2C3C                                          u5581 1F86  
                                        u4845 3CB4                                          u4781 2122  
                                        u5670 2EB0                                          u4950 3232  
                                        u4870 2C62                                          u5590 1FA4  
                                        u4790 217C                                          u5671 2EAC  
                                        u4951 322E                                          u4871 2C5E  
                                        u5591 1FA0                                          u4855 3C7E  
                                        u4791 2178                                          u5680 2ECE  
                                        u4960 324E                                          u4880 2C9C  
                                        u5681 2ECA                                          u4961 324A  
                                        u4881 2C98                                          u5690 2EEE  
                                        u4970 3274                                          u4890 2CBE  
                                        u5691 2EEA                                          u4971 3270  
                                        u4891 2CBA                                          u4980 3692  
                                        u4981 368E                                          u4990 3BCC  
                                        u4991 3BC8                                          _TMR2 003FAA  
                                        _TMR4 003F9E                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0070  
                                        _dbuf 0100                                          _main 3FBA  
                                        _dtoa 1986                                          _loop 351C  
                                        _prec 00D8                                          _nout 00D4  
                                        pad@i 0076                                          pad@p 0074  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 0078                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 003A  
                             _TMR3_Initialize 3BEA                               _PWM5_Initialize 405C  
                           ??_CLC3_Initialize 0020                 ??_UART1_SetTxInterruptHandler 0022  
                  ??_TMR4_SetInterruptHandler 0022                             _UART1_rx_vect_isr 37F8  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 3CC4  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0072  
                                       ??_pad 0022                          ??_UART1_Transmit_ISR 0017  
               __end_of_OSCILLATOR_Initialize 408C                                 ___fltol@sign1 0020  
                             __end_of___aldiv 2D3A                               __end_of___aodiv 297C  
                                       _ADACT 003EFE                                         _ADCAP 003EF5  
                     __end_of_CCP3_Initialize 3E1C                               __end_of___fladd 1536  
                                       ?_main 0001                                         ?_dtoa 007A  
                                       _ADCLK 003EFF                               __end_of___aomod 2AE2  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 3286  
                                       ?_loop 0001                                         STR_10 105F  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0009  
                             __end_of___flmul 1986                      TMR5_ReadTimer@readValLow 0014  
                             __end_of___fltol 2E42                               ___awdiv@divisor 0062  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P3H 003DF1                                         _U1P1L 003DEC  
                                       _T3CLK 003FA9                                         _U1P2L 003DEE  
                                       _T2CON 003FAC                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 3834                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 37E4  
                                       i1l333 3B2A                                         i1l350 410C  
                                       i1l343 3344                                         i1l336 3B2E  
                                       i1l353 410A                                         _U1TXB 003DEA  
                                       i1l347 3ECC                                         i1l356 4102  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 4110                                         i1l692 3E48  
                                       i2l534 3EF8                                         i2l438 3D8E  
                                       i2l446 3922                                         i2l552 3ADE  
                                       i1l688 3884                                         i2l529 3FB8  
                                       i2l537 4098                                         i1l698 410E  
                                       i2l476 3DBE                                         i2l558 3FF6  
                                       i2l487 396E                           ??_UART1_rx_vect_isr 001A  
                                       i2l863 37A6                                         i2l856 3A58  
                                       i2l868 3F4A                               ___awdiv@counter 0064  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00A0  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 4110  
                             _TMR4_Initialize 3E4A                               _PWM6_Initialize 4044  
                           _UART1_tx_vect_isr 37A8                              __end_of_TMR4_ISR 3898  
                     setSteering@steeringMode 006A                                         _delay 00EA  
                                       _flags 0023                                         _fputc 3484  
                                       _fputs 3A5A                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0070                                         _width 00D6  
                                       _putch 409A                                         dtoa@d 007C  
                                       dtoa@i 009C                                         dtoa@n 0094  
                                       dtoa@p 008E                                         dtoa@s 0092  
                                       dtoa@w 0090                              ?_SMT1_Initialize 0001  
                                       pclath 003FFA                                         pclatu 003FFB  
                                       tablat 003FF5                                   _BatteryVolt 00F0  
                                       status 003FD8           __end_of_UART1_SetRxInterruptHandler 40B8  
                 _UART1_SetRxInterruptHandler 40AE                       __end_of_CCP4_Initialize 3DEE  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 410E  
          ??_UART1_DefaultFramingErrorHandler 001A             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 410C                           ??_UART1_tx_vect_isr 0017  
                   __end_of_UART1_rx_vect_isr 3848                               _TMR5_Initialize 39C6  
                             _PWM7_Initialize 402C                               __initialization 3C22  
                       TMR5_ReadTimer@readVal 0011                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 3FDA                                  __end_of_dtoa 1C6C  
                                __end_of_loop 35AE                   ??_UART1_DefaultErrorHandler 001A  
                     __end_of_TMR2_Initialize 4014                                  ?_UART1_Write 0001  
                                      ??_main 0023                                        ??_dtoa 0084  
                                      ??_loop 0023                                 __activetblptr 000003  
                                _calcMotorPow 2AE2                     __end_of_UART1_tx_vect_isr 37F8  
                             _PWM8_Initialize 4014                              _UART1_Initialize 3346  
                                _calcSteering 2660                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0060  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 0069                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0060  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 3CC4  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RD1I2C 003A7B                                        _RC3I2C 003A6A  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1223 4108                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 4074                       __end_of_TMR3_Initialize 3C22  
                                      i1l4421 3EC6                                        i1l5053 40FE  
                                      i1l4423 3ECA                                        i1l4415 3EA2  
                                      i1l4417 3EB4                                        i1l4419 3EB6  
                                      i1l5431 3E1C                                        i1l5433 3E30  
                                      i1l5361 3AEC                                        i1l5371 3B24  
                                      i1l5363 3AFC                                        i1l5293 4104  
                                      i1l5381 32CE                                        i1l5373 3286  
                                      i1l5365 3B0E                                        i1l5461 37CC  
                                      i1l5391 3340                                        i1l5383 32DE  
                                      i1l5375 3296                                        i1l5463 380A  
                                      i1l5367 3B10                                        i1l5385 32EE  
                                      i1l5377 32A6                                        i1l5465 381C  
                                      i1l5369 3B20                                        i1l5483 385A  
                                      i1l5387 3306                                        i1l5379 32B6  
                                      i1l5459 37BA                                        i1l5485 385E  
                                      i1l5389 3322                                        i1l5487 3878  
                                      i1l5489 387C                                        i2l5055 3F96  
                                      i2l4431 3ECE                                        i2l5063 408C  
                                      i2l5057 3FA4                                        i2l4433 3EDC  
                                      i2l4441 3EEE                                        i2l5401 3D90  
                                      i2l5059 3FB0                                        i2l4443 3EF2  
                                      i2l4435 3EDE                                        i2l5411 3FE6  
                                      i2l5403 3D9E                                        i2l5501 3754  
                                      i2l4437 3EE2                                        i2l5413 3FEE  
                                      i2l5405 3DAA                                        i2l5511 3F24  
                                      i2l5503 3758                                        i2l4439 3EE8  
                                      i2l5415 3FF2                                        i2l5407 3DB8  
                                      i2l5513 3F28                                        i2l5505 3772  
                                      i2l5409 3FDA                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l5507 3782  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l5509 3794                                        _INLVLE 003A84  
                                      i2l5471 393C                                        i2l5473 394C  
                                      i2l5393 3D60                                        i2l5491 3A10  
                                      i2l5475 3AB0                                        i2l5395 3D6E  
                                      i2l5467 38F0                                        i2l5493 3A14  
                                      i2l5477 3AB4                                        i2l5397 3D7A  
                                      i2l5469 3900                                        i2l5495 3A24  
                                      i2l5479 3AC6                                        i2l5399 3D88  
                                      i2l5497 3A34                                        i2l5499 3A46  
                                ?_setSteering 0068                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 3484                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 40CC                              __end_of___xxtofl 24BE  
                         ?_PWM8_LoadDutyValue 0020                              __end_of_getCurve 1EDA  
                    __end_of_CCP3_SetCallBack 40FE                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 0120  
                                      ___flge 2E42                                     ??___aldiv 0020  
                                   ??___aodiv 0020                                     ??___fladd 0097  
                                   ??___aomod 0020                                     ??___awdiv 0020  
                                   ??___flmul 007E                                     ??___fltol 00A3  
                               _CCP3_CallBack 00F8                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 405C                       __end_of_TMR4_Initialize 3E76  
                                      clear_0 3C28                                        clear_1 3C34  
                                      clear_2 3C40                              ___awdiv@quotient 0066  
                                      _motPow 0025                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                                 _CCP4_CallBack 00F6  
                                      _smtWay 00CC                                        _printf 3EFA  
                                      pad@buf 0072                                        dtoa@fp 007A  
                            ?_CCP3_Initialize 0001                                        _strlen 3B72  
                        ??_PWM8_LoadDutyValue 0060                              __end_of_setMotor 302E  
                             _ADCC_Initialize 36F8          __end_of_TMR4_DefaultInterruptHandler 4110  
                _TMR4_DefaultInterruptHandler 410E                                        fputc@c 0060  
                              _PMD_Initialize 3F72                                        fputs@c 006D  
                                      fputs@i 006E                                        fputs@s 0069  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 3AEC  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8                              __end_of_vfprintf 369C  
                   ?_ADCC_GetSingleConversion 0020      TMR4_SetInterruptHandler@InterruptHandler 0020  
TMR5_SetGateInterruptHandler@InterruptHandler 0020   UART1_SetTxInterruptHandler@InterruptHandler 0020  
 UART1_SetRxInterruptHandler@InterruptHandler 0020          __end_of_UART1_SetOverrunErrorHandler 40C2  
                _UART1_SetOverrunErrorHandler 40B8                     _UART1_DefaultErrorHandler 40FE  
                           getCurve@deltaLeft 012C                                    ___flge@ff1 0076  
                                  ___flge@ff2 007A                       __end_of_PWM7_Initialize 4044  
                     __end_of_TMR5_Initialize 3A10                                  ___xxtofl@arg 0072  
                                ___xxtofl@exp 0071                             _SYSTEM_Initialize 397C  
                                ___xxtofl@val 0068                                    __accesstop 0060  
                     __end_of__initialization 3C52                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0068                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                                    ___fltol@f1 009F  
                             _TMR5_WriteTimer 3ECE                     calcMotorPow@setSpeedDelta 00A9  
                    __end_of_CCP4_SetCallBack 40F4                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 3E4A                           ??_SYSTEM_Initialize 0022  
                                   ?_TMR4_ISR 0001                                ivt0x8_undefint 00AC  
                               __end_of_fputc 351C                                 __end_of_fputs 3AA2  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 40A4  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 402C  
                      __end_of_PMD_Initialize 3F96                         CCP3_CaptureISR@module 0005  
              CCP3_SetCallBack@customCallBack 0020                     _UART1_FramingErrorHandler 00FE  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                                       ??_fputc 0064  
                   __end_of_SYSTEM_Initialize 39C6                                       ??_fputs 0022  
                             _CLC3_Initialize 3E76                                       ??_putch 0021  
                 PWM7_LoadDutyValue@dutyValue 0020                                    __pbssBANK0 00B4  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0020  
                      ?_UART1_SetErrorHandler 0020                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 0038  
                       _TMR4_InterruptHandler 00F2                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 0076                                    ??_TMR4_ISR 001D  
                     __end_of_ADCC_Initialize 3754                    __end_of_PWM6_LoadDutyValue 3C8E  
        __end_of_TMR5_SetGateInterruptHandler 40E0                  _TMR5_SetGateInterruptHandler 40D6  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       _ADFLTRL 003EE6  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 0122                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 3286                                    _getReverse 35AE  
                                     ?_strlen 0020                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0020                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 0068                            _PWM5_LoadDutyValue 3C8E  
                                  _distRightM 0029                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 20F8  
                                     _IVTLOCK 003FD4                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1TMR 003F12  
                                     _SMT1WIN 003F23                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                           ??_UART1_Receive_ISR 001A  
                     __end_of_TMR5_WriteTimer 3EFA                           ?_PWM5_LoadDutyValue 0020  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0020                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0062  
                                     __Lparam 0000                      __end_of_UART1_Initialize 33EA  
                                     ___aldiv 2C2C                                       ___aodiv 27F2  
                                     ___fladd 1074                                       ___aomod 297C  
                                     ___awdiv 31C0                                       ___flmul 1536  
                                     ___fltol 2D3A                     __end_of_UART1_Receive_ISR 3346  
                                   ?_vfprintf 00AE                          ??_PWM5_LoadDutyValue 0060  
                                __psmallconst 1000                                       __pcinit 3C22  
                   _TMR5_GateInterruptHandler 0038                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                 ?_TMR5_SetGateInterruptHandler 0020  
                                     __ptext0 3FBA                                       __ptext1 351C  
                                     __ptext2 35AE                                       __ptext3 1C6C  
                                     __ptext4 3F4C                                       __ptext5 3EFA  
                                     __ptext6 3634                                       __ptext7 20F8  
                                     __ptext8 1986                                       __ptext9 30F8  
                              ??_TMR4_10msISR 001D                                    ??_actSpeed 0022  
                     __end_of_CLC3_Initialize 3EA2                         _OSCILLATOR_Initialize 4074  
                                   _T2CONbits 003FAC                                    ??___xxtofl 006C  
                                   _T3CONbits 003FA6                              ___aldiv@dividend 0060  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0020  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0020                                     _IPR10bits 00398A  
                                     _smtDuty 00D0                                     _T4HLTbits 003FA1  
                                  ??_getCurve 012A                                     _PIE10bits 00399A  
                        end_of_initialization 3C52                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 001D                                     _PIR10bits 0039AA  
                                   _T4RSTbits 003FA3                                       fputc@fp 0062  
                           ??_SMT1_PR_ACQ_ISR 0017           __end_of_UART1_SetTxInterruptHandler 40AE  
                 _UART1_SetTxInterruptHandler 40A4                                       fputs@fp 006B  
              ??_UART1_SetOverrunErrorHandler 0022                                    ??_setMotor 0064  
                           __end_of_vfpfcnvrt 2306                             ?_CCP3_SetCallBack 0020  
                            ___aldiv@quotient 006A                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0017                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0022  
                                  ??_vfprintf 0023              __end_of_ADCC_GetSingleConversion 3BEA  
                           UART1_Write@txData 0020                           _UART1_RxDataHandler 3EA2  
                                     strlen@a 0060                                       strlen@s 0020  
                                 ?_getReverse 0001                                     _PORTDbits 003FCD  
                                 ___fladd@grs 009E                            getCurve@deltaRight 012E  
                               ___xxtofl@sign 0070                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 000D                          setSteering@steeringB 006F  
                        setSteering@steeringF 006D                       TMR5_WriteTimer@timerVal 000D  
                                 ___flmul@grs 0084             CCP4_DefaultCallBack@capturedValue 0007  
                           ?_CCP4_SetCallBack 0020                  __end_of_INTERRUPT_Initialize 38E4  
                              __end_of___flge 2F48                            ??_CCP4_SetCallBack 0022  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00A2  
                                 vfpfcnvrt@fp 009E                                   vfpfcnvrt@ll 00A6  
                      ?_OSCILLATOR_Initialize 0001                                __end_of_printf 3F24  
                            ?_CLC3_Initialize 0001                                __end_of_strlen 3BAE  
                              _TMR5_ReadTimer 3F96                           start_initialization 3C22  
              ??_TMR5_SetGateInterruptHandler 0022                                   __end_of_abs 3B72  
                                 __end_of_pad 31C0                       ??_UART1_SetErrorHandler 0022  
                       ??_UART1_RxDataHandler 001A                                   putch@txData 0021  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 00BC  
                                 _actMotorPow 00DA                                 _uart1TxBuffer 00C4  
                        __end_of_TMR4_10msISR 410A                                   vfprintf@fmt 00B0  
                                    ??___flge 007E                              ??_PMD_Initialize 0020  
                                _oldDistRight 00E2                    __end_of_PWM7_LoadDutyValue 3D30  
                           ??_SMT1_Initialize 0020                                      ??_printf 0023  
                                    ??_strlen 0022                        __end_of_TMR5_ReadTimer 3FBA  
                       CCP4_CaptureISR@module 000B                                     ___fladd@a 0093  
                                   ___fladd@b 008F                           calcMotorPow@addMPow 00AD  
                    _ADCC_GetSingleConversion 3BAE                   PWM5_LoadDutyValue@dutyValue 0020  
                       TMR4_ISR@CountCallBack 0027                                     ___flmul@a 007A  
                                   ___flmul@b 0076                                   __pbssCOMRAM 0023  
                          _UART1_ErrorHandler 00FA                                 __pcstackBANK0 0060  
                               __pcstackBANK1 0120                              ___aodiv@dividend 0060  
                          _PWM6_LoadDutyValue 3C58                      _UART1_RxInterruptHandler 003E  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 3D90  
                                   _calcSpeed 1EDA                           ?_PWM6_LoadDutyValue 0020  
                 PWM8_LoadDutyValue@dutyValue 0020                  fp__UART1_DefaultErrorHandler 0000  
                                _currentSpeed 00DE                  ?_UART1_SetRxInterruptHandler 0020  
                                   __pnvBANK0 00F0                            setMotor@motorPower 0062  
                      _PIN_MANAGER_Initialize 302E                                     _dtoa$3454 008C  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 40CC  
                _UART1_SetFramingErrorHandler 40C2                                      ?___aldiv 0060  
             ADCC_GetSingleConversion@channel 0022                                      ?___aodiv 0060  
                                    ?___fladd 008F                                      ?___aomod 0060  
            __end_of_TMR4_SetInterruptHandler 40EA                                      ?___awdiv 0060  
                            ___aodiv@quotient 0072             CCP3_DefaultCallBack@capturedValue 0001  
                           ??_CCP4_CaptureISR 0009                                      ?___flmul 0076  
                                    ?___fltol 009F                            ??_UART1_Initialize 0022  
                                   _distLeftM 002B                                     _distFront 00EE  
                            _uart1RxLastError 002E                                 ??_UART1_Write 0020  
                                   _distRight 00E6                          ??_PWM6_LoadDutyValue 0060  
                                   _cycle10ms 00EB                               ?_TMR5_ReadTimer 000D  
                               ?_calcMotorPow 0001                                   __smallconst 1000  
                                    _CLC3GLS0 003C66                                      _CLC3GLS1 003C67  
                                    _CLC3GLS2 003C68                                      _CLC3GLS3 003C69  
                                   _driveMode 00ED           fp__UART1_DefaultOverrunErrorHandler 0000  
    __end_of_UART1_DefaultOverrunErrorHandler 410C            ??_UART1_DefaultOverrunErrorHandler 001A  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 410A  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 3A10                                 ?_calcSteering 0001  
                               _TMR5_GATE_ISR 3AA4                                     _curveMode 00EC  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 3898                                 ??_setSteering 006B  
                             ___aldiv@divisor 0064                               _SMT1_PW_ACQ_ISR 3754  
                             ___aldiv@counter 0068         UART1_SetErrorHandler@interruptHandler 0020  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 3DC0  
                           ??_CCP3_Initialize 0022                                      _PIE1bits 003991  
                                    _IPR3bits 003983                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _PIE7bits 003997                                      _IPR9bits 003989  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u410_20 3AFC  
                                    i1u410_21 3AF8                                      i1u411_20 3B20  
                                    i1u411_21 3B1C                                      i1u412_20 32A6  
                                    i1u412_21 32A2                                      i1u421_20 3E30  
                                    i1u421_21 3E2C                                      i1u414_20 32DE  
                                    i1u413_28 32BC                                      i1u414_21 32DA  
                                    i1u413_29 32CE                                      i1u422_28 3E36  
                                    i1u422_29 3E48                                      i1u416_20 3322  
                                    i1u415_28 32F4                                      i1u416_21 331E  
                                    i1u415_29 3306                                      i1u433_20 3878  
                                    i1u425_20 37CC                                      i1u433_21 3874  
                                    i1u425_21 37C8                                      i1u417_28 3328  
                                    i1u417_29 333C                                      i1u283_20 3EC6  
                                    i1u427_20 381C                                      i1u426_28 37D2  
                                    i1u283_21 3EC2                                      i1u427_21 3818  
                                    i1u426_29 37E4                 ??_UART1_SetRxInterruptHandler 0022  
                                    i1u428_28 3822                                      i1u428_29 3834  
                                    i2u431_40 3AC6                                      i2u430_48 395A  
                                    i2u431_41 3AC2                                      i2u430_49 396E  
                                    i2u432_48 3ACC                                      i2u432_49 3ADE  
                                    _PIR1bits 0039A1                                      i2u434_40 3A34  
                                    i2u418_40 3D6E                                      i2u434_41 3A30  
                                    i2u418_41 3D6A                                      i2u435_40 3782  
                                    i2u419_40 3D9E                                      i2u435_41 377E  
                                    i2u419_41 3D9A                                      i2u284_40 3EDC  
                                    i2u284_41 3ED8                                      i2u429_48 390E  
                                    i2u429_49 3922                                      _PIR4bits 0039A4  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 3F24  
                                    _TMR4_ISR 3848                    __end_of_UART1_Transmit_ISR 3B30  
                               _TMR4_CallBack 3E1C                                     _smtPeriod 0034  
               ?_UART1_SetFramingErrorHandler 0020                                 ??_TMR5_Reload 000F  
                                   _vfpfcnvrt 20F8                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 3F4C                                  ??_getReverse 0020  
                              ??_calcMotorPow 00A7                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0022                                ??_calcSteering 0071  
                         ??_SMT1_Overflow_ISR 0017                     TMR5_ReadTimer@readValHigh 0013  
                              ?_TMR5_GATE_ISR 0001                           __end_of_UART1_Write 36F8  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                         ??_getBatteryVoltage 0023                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 0040                             ??_TMR2_Initialize 0020  
                                _uart1RxCount 002F                            __end_of_getReverse 3634  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 3F4C                           __end_of_setSteering 2660  
                                  vfprintf@ap 00B2                                      __Lrparam 0000  
                                  vfprintf@fp 00AE                                   _oldDistLeft 00E4  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 00AB  
                   __end_of_getBatteryVoltage 3F72                       ??_OSCILLATOR_Initialize 0020  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 3D60  
                     __end_of_SMT1_PR_ACQ_ISR 3A5A                                    ?_vfpfcnvrt 009E  
                             ___aodiv@divisor 0068                             ??_PWM5_Initialize 0020  
                           ??_TMR3_Initialize 0020                               ___aodiv@counter 0070  
                    _TMR4_SetInterruptHandler 40E0                                      _actSpeed 33EA  
                                _TMR4_10msISR 4104                                      ___xxtofl 2306  
                         __end_of_TMR5_Reload 409A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 37A8                                      _getCurve 1C6C  
                                    __ptext10 3B72                                      __ptext11 3A5A  
                                    __ptext20 24BE                                      __ptext12 3484  
                                    __ptext21 3C58                                      __ptext13 409A  
                                    __ptext30 2C2C                                      __ptext22 3C8E  
                                    __ptext14 369C                                      __ptext31 2306  
                                    __ptext23 1EDA                                      __ptext15 3B30  
                                    __ptext40 40B8                                      __ptext32 2D3A  
                                    __ptext24 1074                                      __ptext16 297C  
                                    __ptext41 40C2                                      __ptext33 1536  
                                    __ptext25 2AE2                                      __ptext17 27F2  
                                    __ptext50 4014                                      __ptext42 40CC  
                                    __ptext34 31C0                                      __ptext26 2F48  
                                    __ptext18 3BAE                                      __ptext51 402C  
                                    __ptext43 39C6                                      __ptext35 2E42  
                                    __ptext27 3CC4                                      __ptext19 2660  
                                    __ptext60 40EA                                      __ptext52 4044  
                                    __ptext44 40D6                                      __ptext36 397C  
                                    __ptext28 3CFA                                      __ptext61 3DEE  
                                    __ptext53 405C                                      __ptext45 3E4A  
                                    __ptext37 3346                                      __ptext29 33EA  
                                    __ptext70 40FE                                      __ptext62 40F4  
                                    __ptext54 3F72                                      __ptext46 40E0  
                                    __ptext38 40A4                                      __ptext71 3EA2  
                                    __ptext63 36F8                                      __ptext55 302E  
                                    __ptext47 3BEA                                      __ptext39 40AE  
                                    __ptext80 3D90                                      __ptext72 3848  
                                    __ptext64 37A8                                      __ptext56 4074  
                                    __ptext48 3FF8                                      __ptext81 3AA4  
                                    __ptext73 3E1C                                      __ptext65 3AEC  
                                    __ptext57 3898                                      __ptext49 3D30  
                                    __ptext82 3FDA                                      __ptext74 4104  
                                    __ptext66 37F8                                      __ptext58 3E76  
                                    __ptext83 408C                                      __ptext75 410E  
                                    __ptext67 3286                                      __ptext59 3DC0  
                                    __ptext84 3ECE                                      __ptext76 4110  
                                    __ptext68 410A                                      __ptext85 3F96  
                                    __ptext77 38E4                                      __ptext69 410C  
                                    __ptext86 3A10                                      __ptext78 3D60  
                                    __ptext87 3754                                      __ptext79 3930  
                                    __ptext88 3F24                                      __ptext89 0000  
                                    _distLeft 00E8                                   ??_calcSpeed 00A7  
               __end_of_UART1_SetErrorHandler 40D6                                    _T3GCONbits 003FA7  
                           ??_TMR4_Initialize 0022                             ??_PWM6_Initialize 0020  
                                    _oldSpeed 00DC                                    _T5GCONbits 003F9B  
                             _SMT1_Initialize 3D30                                   _IVTLOCKbits 003FD4  
                                    _setMotor 2F48                                      _setSpeed 00E0  
                   _UART1_OverrunErrorHandler 00FC  UART1_SetOverrunErrorHandler@interruptHandler 0020  
                                    isa$xinst 000000                    ??_ADCC_GetSingleConversion 0060  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 3634                                     printf@fmt 0122  
                  __end_of_PWM8_LoadDutyValue 3CFA                               _CCP3_CaptureISR 38E4  
                                 _UART1_Write 369C                         fp__UART1_Transmit_ISR 0000  
                           ??_PWM7_Initialize 0020                             ??_TMR5_Initialize 0060  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 3FF8  
          ??_TMR5_DefaultGateInterruptHandler 0015             ?_TMR5_DefaultGateInterruptHandler 0001  
            _TMR5_DefaultGateInterruptHandler 3FDA                              ___aomod@dividend 0060  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0022  
                                _reverseCount 002D                               ??_TMR5_GATE_ISR 0015  
                 __end_of_UART1_RxDataHandler 3ECE                                   _uart1RxHead 0031  
                        _CCP4_DefaultCallBack 3D90                                   _uart1TxHead 0033  
                                 _uart1RxTail 0030                                   _uart1TxTail 0032  
                      ??_INTERRUPT_Initialize 0020                            _PWM7_LoadDutyValue 3CFA  
                                    intlevel1 0000                                      intlevel2 0000  
                                 _setSteering 24BE                               _CCP4_CaptureISR 3930  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0020  
                         ?_PWM7_LoadDutyValue 0020                          __end_of_calcMotorPow 2C2C  
                             ??_TMR4_CallBack 001D                          __end_of_calcSteering 27F2  
                         _uart1RxStatusBuffer 00B4                                      printf@ap 0128  
                            ??_TMR5_ReadTimer 000F  UART1_SetFramingErrorHandler@interruptHandler 0020  
           __end_of_UART1_DefaultErrorHandler 4104                               ___aomod@divisor 0068  
                                 ??_vfpfcnvrt 00A4                               ___aomod@counter 0020  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 408C  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0060                                 actSpeed@speed 006E  
                       ?_CCP4_DefaultCallBack 0007                     calcMotorPow@oldSpeedDelta 00AB  
                            _CCP3_SetCallBack 40F4                                  ___aldiv@sign 0069  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 3DEE  
                 PWM6_LoadDutyValue@dutyValue 0020                             calcSteering@delta 0073  
                    _UART1_TxInterruptHandler 003C                                 ___fladd@signs 009B  
                         __end_of_Default_ISR 4112                       __end_of_SMT1_Initialize 3D60  
                                ___aodiv@sign 0071                __end_of_PIN_MANAGER_Initialize 30F8  
                           ??_ADCC_Initialize 0020                                  ___fladd@aexp 009C  
                                ___fladd@bexp 009D                  ?_UART1_SetTxInterruptHandler 0020  
                                ___aomod@sign 0021                       __end_of_CCP3_CaptureISR 3930  
