

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 15:26:09 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=4,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=4,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=4,class=CODE,delta=1
   122                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K42 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  005EB2                     __pidataBANK0:
   166                           	callstack 0
   167                           
   168                           ;initializer for _driveMode
   169  005EB2  01                 	db	1
   170                           
   171                           	psect	idataBANK1
   172  005EA8                     __pidataBANK1:
   173                           	callstack 0
   174                           
   175                           ;initializer for _middleOffSet
   176  005EA8  FFF1               	dw	65521
   177                           
   178                           	psect	nvCOMRAM
   179  00004C                     __pnvCOMRAM:
   180                           	callstack 0
   181  00004C                     _uart1TxBufferRemaining:
   182                           	callstack 0
   183  00004C                     	ds	1
   184                           
   185                           	psect	nvBANK1
   186  000184                     __pnvBANK1:
   187                           	callstack 0
   188  000184                     _TMR4_InterruptHandler:
   189                           	callstack 0
   190  000184                     	ds	2
   191  000186                     _timer3ReloadVal:
   192                           	callstack 0
   193  000186                     	ds	2
   194  000188                     _TMR5_GateInterruptHandler:
   195                           	callstack 0
   196  000188                     	ds	2
   197  00018A                     _timer5ReloadVal:
   198                           	callstack 0
   199  00018A                     	ds	2
   200  00018C                     _CCP4_CallBack:
   201                           	callstack 0
   202  00018C                     	ds	2
   203  00018E                     _CCP3_CallBack:
   204                           	callstack 0
   205  00018E                     	ds	2
   206  000190                     _UART1_ErrorHandler:
   207                           	callstack 0
   208  000190                     	ds	2
   209  000192                     _UART1_OverrunErrorHandler:
   210                           	callstack 0
   211  000192                     	ds	2
   212  000194                     _UART1_FramingErrorHandler:
   213                           	callstack 0
   214  000194                     	ds	2
   215  000196                     _UART1_TxInterruptHandler:
   216                           	callstack 0
   217  000196                     	ds	2
   218  000198                     _UART1_RxInterruptHandler:
   219                           	callstack 0
   220  000198                     	ds	2
   221  0000                     _PIR4bits	set	14756
   222  0000                     _PIR1bits	set	14753
   223  0000                     _PIE1bits	set	14737
   224  0000                     _PIE7bits	set	14743
   225  0000                     _PIR7bits	set	14759
   226  0000                     _PIR6bits	set	14758
   227  0000                     _PIE8bits	set	14744
   228  0000                     _PIR8bits	set	14760
   229  0000                     _PIE10bits	set	14746
   230  0000                     _PIR10bits	set	14762
   231  0000                     _PIE9bits	set	14745
   232  0000                     _PIR9bits	set	14761
   233  0000                     _IPR9bits	set	14729
   234  0000                     _IPR7bits	set	14727
   235  0000                     _IPR8bits	set	14728
   236  0000                     _IPR10bits	set	14730
   237  0000                     _IPR1bits	set	14721
   238  0000                     _IPR3bits	set	14723
   239  0000                     _PIE3bits	set	14739
   240  0000                     _PMD7	set	14791
   241  0000                     _PMD6	set	14790
   242  0000                     _PMD5	set	14789
   243  0000                     _PMD4	set	14788
   244  0000                     _PMD3	set	14787
   245  0000                     _PMD2	set	14786
   246  0000                     _PMD1	set	14785
   247  0000                     _PMD0	set	14784
   248  0000                     _OSCTUNE	set	14814
   249  0000                     _OSCFRQ	set	14815
   250  0000                     _OSCEN	set	14813
   251  0000                     _OSCCON3	set	14811
   252  0000                     _OSCCON1	set	14809
   253  0000                     _CCP4PPS	set	15056
   254  0000                     _SMT1SIGPPS	set	15058
   255  0000                     _CLCIN2PPS	set	15067
   256  0000                     _RB3PPS	set	14859
   257  0000                     _RA3PPS	set	14851
   258  0000                     _SMT1WINPPS	set	15057
   259  0000                     _CLCIN0PPS	set	15065
   260  0000                     _RA4PPS	set	14852
   261  0000                     _T5GPPS	set	15049
   262  0000                     _RA0PPS	set	14848
   263  0000                     _U1RXPPS	set	15077
   264  0000                     _RA1PPS	set	14849
   265  0000                     _CLCIN3PPS	set	15068
   266  0000                     _CCP3PPS	set	15055
   267  0000                     _INLVLE	set	14980
   268  0000                     _INLVLD	set	14964
   269  0000                     _INLVLC	set	14948
   270  0000                     _INLVLB	set	14932
   271  0000                     _INLVLA	set	14916
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _CLC3CON	set	15456
   299  0000                     _CLC3GLS3	set	15465
   300  0000                     _CLC3GLS2	set	15464
   301  0000                     _CLC3GLS1	set	15463
   302  0000                     _CLC3GLS0	set	15462
   303  0000                     _CLC3SEL3	set	15461
   304  0000                     _CLC3SEL2	set	15460
   305  0000                     _CLC3SEL1	set	15459
   306  0000                     _CLC3SEL0	set	15458
   307  0000                     _CLC3POL	set	15457
   308  0000                     _CLC3CONbits	set	15456
   309  0000                     _U1RXB	set	15848
   310  0000                     _U1TXB	set	15850
   311  0000                     _U1ERRIRbits	set	15865
   312  0000                     _U1ERRIE	set	15866
   313  0000                     _U1ERRIR	set	15865
   314  0000                     _U1UIR	set	15864
   315  0000                     _U1FIFO	set	15863
   316  0000                     _U1BRGH	set	15862
   317  0000                     _U1BRGL	set	15861
   318  0000                     _U1CON2	set	15860
   319  0000                     _U1CON1	set	15859
   320  0000                     _U1CON0	set	15858
   321  0000                     _U1P3H	set	15857
   322  0000                     _U1P3L	set	15856
   323  0000                     _U1P2H	set	15855
   324  0000                     _U1P2L	set	15854
   325  0000                     _U1P1H	set	15853
   326  0000                     _U1P1L	set	15852
   327  0000                     _ADCON1bits	set	16121
   328  0000                     _ADERRL	set	16098
   329  0000                     _ADERRH	set	16099
   330  0000                     _ADPREVL	set	16109
   331  0000                     _ADPREVH	set	16110
   332  0000                     _ADFLTRL	set	16102
   333  0000                     _ADFLTRH	set	16103
   334  0000                     _ADSTATbits	set	16124
   335  0000                     _ADACCL	set	16104
   336  0000                     _ADACCH	set	16105
   337  0000                     _ADCON2bits	set	16122
   338  0000                     _ADCNT	set	16107
   339  0000                     _ADCON3bits	set	16123
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _SMT1TMR	set	16146
   366  0000                     _SMT1CPR	set	16149
   367  0000                     _SMT1CPW	set	16152
   368  0000                     _SMT1PR	set	16155
   369  0000                     _SMT1STATbits	set	16160
   370  0000                     _SMT1CON0bits	set	16158
   371  0000                     _SMT1CON1bits	set	16159
   372  0000                     _SMT1PRL	set	16155
   373  0000                     _SMT1PRH	set	16156
   374  0000                     _SMT1PRU	set	16157
   375  0000                     _SMT1SIG	set	16162
   376  0000                     _SMT1WIN	set	16163
   377  0000                     _SMT1CLK	set	16161
   378  0000                     _SMT1STAT	set	16160
   379  0000                     _SMT1CON1	set	16159
   380  0000                     _SMT1CON0	set	16158
   381  0000                     _CCPTMRS1bits	set	16223
   382  0000                     _CCPTMRS0bits	set	16222
   383  0000                     _PORTBbits	set	16331
   384  0000                     _PR2	set	16299
   385  0000                     _TMR2	set	16298
   386  0000                     _T2CONbits	set	16300
   387  0000                     _T2RSTbits	set	16303
   388  0000                     _T2HLTbits	set	16301
   389  0000                     _T2CON	set	16300
   390  0000                     _T2TMR	set	16298
   391  0000                     _T2PR	set	16299
   392  0000                     _T2RST	set	16303
   393  0000                     _T2HLT	set	16301
   394  0000                     _T2CLKCON	set	16302
   395  0000                     _PWM6DCL	set	16232
   396  0000                     _PWM6DCH	set	16233
   397  0000                     _PWM6CON	set	16234
   398  0000                     _PWM5DCL	set	16236
   399  0000                     _PWM5DCH	set	16237
   400  0000                     _PWM5CON	set	16238
   401  0000                     _PWM8DCL	set	16224
   402  0000                     _PWM8DCH	set	16225
   403  0000                     _PWM8CON	set	16226
   404  0000                     _PWM7DCL	set	16228
   405  0000                     _PWM7DCH	set	16229
   406  0000                     _PWM7CON	set	16230
   407  0000                     _PR4	set	16287
   408  0000                     _TMR4	set	16286
   409  0000                     _T4CONbits	set	16288
   410  0000                     _T4RSTbits	set	16291
   411  0000                     _T4HLTbits	set	16289
   412  0000                     _T4CON	set	16288
   413  0000                     _T4TMR	set	16286
   414  0000                     _T4PR	set	16287
   415  0000                     _T4RST	set	16291
   416  0000                     _T4HLT	set	16289
   417  0000                     _T4CLKCON	set	16290
   418  0000                     _T3GCONbits	set	16295
   419  0000                     _T3CONbits	set	16294
   420  0000                     _T3CON	set	16294
   421  0000                     _TMR3L	set	16292
   422  0000                     _TMR3H	set	16293
   423  0000                     _T3CLK	set	16297
   424  0000                     _T3GATE	set	16296
   425  0000                     _T3GCON	set	16295
   426  0000                     _T5GCONbits	set	16283
   427  0000                     _T5CONbits	set	16282
   428  0000                     _T5CON	set	16282
   429  0000                     _TMR5L	set	16280
   430  0000                     _TMR5H	set	16281
   431  0000                     _T5CLK	set	16285
   432  0000                     _T5GATE	set	16284
   433  0000                     _T5GCON	set	16283
   434  0000                     _CCPR4L	set	16240
   435  0000                     _CCPR4H	set	16241
   436  0000                     _CCP4CAP	set	16243
   437  0000                     _CCP4CON	set	16242
   438  0000                     _CCPR3L	set	16244
   439  0000                     _CCPR3H	set	16245
   440  0000                     _CCP3CAP	set	16247
   441  0000                     _CCP3CON	set	16246
   442  0000                     _PORTDbits	set	16333
   443  0000                     _IVTBASEL	set	16341
   444  0000                     _IVTBASEH	set	16342
   445  0000                     _IVTBASEU	set	16343
   446  0000                     _IVTLOCKbits	set	16340
   447  0000                     _IVTLOCK	set	16340
   448  0000                     _INTCON0bits	set	16338
   449  0000                     _TRISD	set	16325
   450  0000                     _TRISC	set	16324
   451  0000                     _TRISB	set	16323
   452  0000                     _TRISA	set	16322
   453  0000                     _TRISE	set	16326
   454  0000                     _LATC	set	16316
   455  0000                     _LATB	set	16315
   456  0000                     _LATA	set	16314
   457  0000                     _LATD	set	16317
   458  0000                     _LATE	set	16318
   459  0000                     _GIE	set	130711
   460                           
   461                           	psect	smallconst
   462  001000                     __psmallconst:
   463                           	callstack 0
   464  001000  00                 	db	0
   465  001001                     STR_4:
   466                           
   467                           ; BSR set to: 1
   468  001001  73                 	db	115	;'s'
   469  001002  74                 	db	116	;'t'
   470  001003  61                 	db	97	;'a'
   471  001004  72                 	db	114	;'r'
   472  001005  41                 	db	65	;'A'
   473  001006  63                 	db	99	;'c'
   474  001007  63                 	db	99	;'c'
   475  001008  65                 	db	101	;'e'
   476  001009  6C                 	db	108	;'l'
   477  00100A  50                 	db	80	;'P'
   478  00100B  6F                 	db	111	;'o'
   479  00100C  77                 	db	119	;'w'
   480  00100D  65                 	db	101	;'e'
   481  00100E  72                 	db	114	;'r'
   482  00100F  3A                 	db	58	;':'
   483  001010  20                 	db	32
   484  001011  25                 	db	37
   485  001012  64                 	db	100	;'d'
   486  001013  0A                 	db	10
   487  001014  00                 	db	0
   488  001015                     STR_5:
   489                           
   490                           ; BSR set to: 1
   491  001015  54                 	db	84	;'T'
   492  001016  69                 	db	105	;'i'
   493  001017  6D                 	db	109	;'m'
   494  001018  65                 	db	101	;'e'
   495  001019  3A                 	db	58	;':'
   496  00101A  20                 	db	32
   497  00101B  25                 	db	37
   498  00101C  64                 	db	100	;'d'
   499  00101D  20                 	db	32
   500  00101E  20                 	db	32
   501  00101F  20                 	db	32
   502  001020  20                 	db	32
   503  001021  20                 	db	32
   504  001022  00                 	db	0
   505  001023                     STR_3:
   506                           
   507                           ; BSR set to: 1
   508  001023  61                 	db	97	;'a'
   509  001024  63                 	db	99	;'c'
   510  001025  74                 	db	116	;'t'
   511  001026  4D                 	db	77	;'M'
   512  001027  50                 	db	80	;'P'
   513  001028  6F                 	db	111	;'o'
   514  001029  77                 	db	119	;'w'
   515  00102A  3A                 	db	58	;':'
   516  00102B  20                 	db	32
   517  00102C  25                 	db	37
   518  00102D  64                 	db	100	;'d'
   519  00102E  0A                 	db	10
   520  00102F  00                 	db	0
   521  001030                     STR_7:
   522                           
   523                           ; BSR set to: 1
   524  001030  73                 	db	115	;'s'
   525  001031  74                 	db	116	;'t'
   526  001032  61                 	db	97	;'a'
   527  001033  79                 	db	121	;'y'
   528  001034  20                 	db	32
   529  001035  52                 	db	82	;'R'
   530  001036  69                 	db	105	;'i'
   531  001037  67                 	db	103	;'g'
   532  001038  68                 	db	104	;'h'
   533  001039  74                 	db	116	;'t'
   534  00103A  0A                 	db	10
   535  00103B  00                 	db	0
   536  00103C                     STR_1:
   537                           
   538                           ; BSR set to: 1
   539  00103C  42                 	db	66	;'B'
   540  00103D  61                 	db	97	;'a'
   541  00103E  74                 	db	116	;'t'
   542  00103F  74                 	db	116	;'t'
   543  001040  65                 	db	101	;'e'
   544  001041  72                 	db	114	;'r'
   545  001042  79                 	db	121	;'y'
   546  001043  20                 	db	32
   547  001044  4C                 	db	76	;'L'
   548  001045  6F                 	db	111	;'o'
   549  001046  77                 	db	119	;'w'
   550  001047  00                 	db	0
   551  001048                     STR_6:
   552                           
   553                           ; BSR set to: 1
   554  001048  73                 	db	115	;'s'
   555  001049  74                 	db	116	;'t'
   556  00104A  61                 	db	97	;'a'
   557  00104B  79                 	db	121	;'y'
   558  00104C  20                 	db	32
   559  00104D  4C                 	db	76	;'L'
   560  00104E  65                 	db	101	;'e'
   561  00104F  66                 	db	102	;'f'
   562  001050  74                 	db	116	;'t'
   563  001051  0A                 	db	10
   564  001052  00                 	db	0
   565  001053                     STR_2:
   566                           
   567                           ; BSR set to: 1
   568  001053  4D                 	db	77	;'M'
   569  001054  50                 	db	80	;'P'
   570  001055  6F                 	db	111	;'o'
   571  001056  77                 	db	119	;'w'
   572  001057  3A                 	db	58	;':'
   573  001058  20                 	db	32
   574  001059  25                 	db	37
   575  00105A  66                 	db	102	;'f'
   576  00105B  0A                 	db	10
   577  00105C  00                 	db	0
   578  00105D                     STR_8:
   579                           
   580                           ; BSR set to: 1
   581  00105D  49                 	db	73	;'I'
   582  00105E  4E                 	db	78	;'N'
   583  00105F  46                 	db	70	;'F'
   584  001060  00                 	db	0
   585  001061                     STR_12:
   586                           
   587                           ; BSR set to: 1
   588  001061  4E                 	db	78	;'N'
   589  001062  41                 	db	65	;'A'
   590  001063  4E                 	db	78	;'N'
   591  001064  00                 	db	0
   592  001065                     STR_9:
   593                           
   594                           ; BSR set to: 1
   595  001065  69                 	db	105	;'i'
   596  001066  6E                 	db	110	;'n'
   597  001067  66                 	db	102	;'f'
   598  001068  00                 	db	0
   599  001069                     STR_13:
   600                           
   601                           ; BSR set to: 1
   602  001069  6E                 	db	110	;'n'
   603  00106A  61                 	db	97	;'a'
   604  00106B  6E                 	db	110	;'n'
   605  00106C  00                 	db	0
   606  00106D                     STR_16:
   607                           
   608                           ; BSR set to: 1
   609  00106D  6C                 	db	108	;'l'
   610  00106E  66                 	db	102	;'f'
   611  00106F  00                 	db	0
   612  001070  00                 	db	0	; dummy byte at the end
   613  0000                     
   614                           ; #config settings
   615                           
   616                           	psect	cinit
   617  0053A8                     __pcinit:
   618                           	callstack 0
   619  0053A8                     start_initialization:
   620                           	callstack 0
   621  0053A8                     __initialization:
   622                           	callstack 0
   623                           
   624                           ; Initialize objects allocated to BANK1 (2 bytes)
   625                           ; load TBLPTR registers with __pidataBANK1
   626  0053A8  0EA8               	movlw	low __pidataBANK1
   627  0053AA  6EF6               	movwf	tblptrl,c
   628  0053AC  0E5E               	movlw	high __pidataBANK1
   629  0053AE  6EF7               	movwf	tblptrh,c
   630  0053B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   631  0053B2  6EF8               	movwf	tblptru,c
   632  0053B4  0009               	tblrd		*+	;fetch initializer
   633  0053B6  006F FFD4  F1AE    	movff	tablat,__pdataBANK1
   634  0053BC  0009               	tblrd		*+	;fetch initializer
   635  0053BE  006F FFD4  F1AF    	movff	tablat,__pdataBANK1+1
   636                           
   637                           ; Initialize objects allocated to BANK0 (1 bytes)
   638                           ; load TBLPTR registers with __pidataBANK0
   639  0053C4  0EB2               	movlw	low __pidataBANK0
   640  0053C6  6EF6               	movwf	tblptrl,c
   641  0053C8  0E5E               	movlw	high __pidataBANK0
   642  0053CA  6EF7               	movwf	tblptrh,c
   643  0053CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   644  0053CE  6EF8               	movwf	tblptru,c
   645  0053D0  0009               	tblrd		*+	;fetch initializer
   646  0053D2  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   647                           
   648                           ; Clear objects allocated to BANK1 (132 bytes)
   649  0053D8  EE00  F100         	lfsr	0,__pbssBANK1
   650  0053DC  0E84               	movlw	132
   651  0053DE                     clear_0:
   652  0053DE  6AEE               	clrf	postinc0,c
   653  0053E0  06E8               	decf	wreg,f,c
   654  0053E2  E1FD               	bnz	clear_0
   655                           
   656                           ; Clear objects allocated to BANK0 (25 bytes)
   657  0053E4  EE00  F0E5         	lfsr	0,__pbssBANK0
   658  0053E8  0E19               	movlw	25
   659  0053EA                     clear_1:
   660  0053EA  6AEE               	clrf	postinc0,c
   661  0053EC  06E8               	decf	wreg,f,c
   662  0053EE  E1FD               	bnz	clear_1
   663                           
   664                           ; Clear objects allocated to COMRAM (18 bytes)
   665  0053F0  EE00  F03A         	lfsr	0,__pbssCOMRAM
   666  0053F4  0E12               	movlw	18
   667  0053F6                     clear_2:
   668  0053F6  6AEE               	clrf	postinc0,c
   669  0053F8  06E8               	decf	wreg,f,c
   670  0053FA  E1FD               	bnz	clear_2
   671                           
   672                           ;
   673                           ; Setup IVTBASE
   674                           ;
   675  0053FC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   676  0053FE  6ED5               	movwf	213,c
   677  005400  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   678  005402  6ED6               	movwf	214,c
   679  005404  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   680  005406  6ED7               	movwf	215,c
   681  005408                     end_of_initialization:
   682                           	callstack 0
   683  005408                     __end_of__initialization:
   684                           	callstack 0
   685  005408  0100               	movlb	0
   686  00540A  EFA4  F02E         	goto	_main	;jump to C main() function
   687                           
   688                           	psect	bssCOMRAM
   689  00003A                     __pbssCOMRAM:
   690                           	callstack 0
   691  00003A                     _width:
   692                           	callstack 0
   693  00003A                     	ds	2
   694  00003C                     _prec:
   695                           	callstack 0
   696  00003C                     	ds	2
   697  00003E                     _flags:
   698                           	callstack 0
   699  00003E                     	ds	2
   700  000040                     TMR4_ISR@CountCallBack:
   701                           	callstack 0
   702  000040                     	ds	2
   703  000042                     _uart1RxLastError:
   704                           	callstack 0
   705  000042                     	ds	1
   706  000043                     _uart1RxCount:
   707                           	callstack 0
   708  000043                     	ds	1
   709  000044                     _uart1RxTail:
   710                           	callstack 0
   711  000044                     	ds	1
   712  000045                     _uart1RxHead:
   713                           	callstack 0
   714  000045                     	ds	1
   715  000046                     _uart1TxTail:
   716                           	callstack 0
   717  000046                     	ds	1
   718  000047                     _uart1TxHead:
   719                           	callstack 0
   720  000047                     	ds	1
   721  000048                     _smtPeriod:
   722                           	callstack 0
   723  000048                     	ds	4
   724                           
   725                           	psect	bssBANK0
   726  0000E5                     __pbssBANK0:
   727                           	callstack 0
   728  0000E5                     _BatteryVolt:
   729                           	callstack 0
   730  0000E5                     	ds	2
   731  0000E7                     _actMotorPow:
   732                           	callstack 0
   733  0000E7                     	ds	2
   734  0000E9                     _currentSpeed:
   735                           	callstack 0
   736  0000E9                     	ds	2
   737  0000EB                     _setSpeed:
   738                           	callstack 0
   739  0000EB                     	ds	2
   740  0000ED                     _oldDistRight:
   741                           	callstack 0
   742  0000ED                     	ds	2
   743  0000EF                     _oldDistLeft:
   744                           	callstack 0
   745  0000EF                     	ds	2
   746  0000F1                     _distRightM:
   747                           	callstack 0
   748  0000F1                     	ds	2
   749  0000F3                     _distRight:
   750                           	callstack 0
   751  0000F3                     	ds	2
   752  0000F5                     _distLeftM:
   753                           	callstack 0
   754  0000F5                     	ds	2
   755  0000F7                     _distLeft:
   756                           	callstack 0
   757  0000F7                     	ds	2
   758  0000F9                     _delay:
   759                           	callstack 0
   760  0000F9                     	ds	1
   761  0000FA                     _cycle10ms:
   762                           	callstack 0
   763  0000FA                     	ds	1
   764  0000FB                     _curveMode:
   765                           	callstack 0
   766  0000FB                     	ds	1
   767  0000FC                     _distFront:
   768                           	callstack 0
   769  0000FC                     	ds	2
   770                           
   771                           	psect	dataBANK0
   772  0000FE                     __pdataBANK0:
   773                           	callstack 0
   774  0000FE                     _driveMode:
   775                           	callstack 0
   776  0000FE                     	ds	1
   777                           
   778                           	psect	bssBANK1
   779  000100                     __pbssBANK1:
   780                           	callstack 0
   781  000100                     _uart1RxStatusBuffer:
   782                           	callstack 0
   783  000100                     	ds	8
   784  000108                     _uart1RxBuffer:
   785                           	callstack 0
   786  000108                     	ds	8
   787  000110                     _uart1TxBuffer:
   788                           	callstack 0
   789  000110                     	ds	8
   790  000118                     floorf@F527:
   791                           	callstack 0
   792  000118                     	ds	4
   793  00011C                     ___fpclassifyf@F465:
   794                           	callstack 0
   795  00011C                     	ds	4
   796  000120                     _smtWay:
   797                           	callstack 0
   798  000120                     	ds	4
   799  000124                     _smtDuty:
   800                           	callstack 0
   801  000124                     	ds	4
   802  000128                     _nout:
   803                           	callstack 0
   804  000128                     	ds	2
   805  00012A                     _reverseTime:
   806                           	callstack 0
   807  00012A                     	ds	2
   808  00012C                     _oldSpeed:
   809                           	callstack 0
   810  00012C                     	ds	2
   811  00012E                     _motPow:
   812                           	callstack 0
   813  00012E                     	ds	2
   814  000130                     _battCheckCount:
   815                           	callstack 0
   816  000130                     	ds	2
   817  000132                     _reverseCount:
   818                           	callstack 0
   819  000132                     	ds	2
   820  000134                     _dbuf:
   821                           	callstack 0
   822  000134                     	ds	80
   823                           
   824                           	psect	dataBANK1
   825  0001AE                     __pdataBANK1:
   826                           	callstack 0
   827  0001AE                     _middleOffSet:
   828                           	callstack 0
   829  0001AE                     	ds	2
   830                           
   831                           	psect	cstackBANK1
   832  00019A                     __pcstackBANK1:
   833                           	callstack 0
   834  00019A                     ?_vfprintf:
   835                           	callstack 0
   836  00019A                     vfprintf@fp:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x0
   840  00019A                     	ds	2
   841  00019C                     vfprintf@fmt:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x2
   845  00019C                     	ds	2
   846  00019E                     vfprintf@ap:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x4
   850  00019E                     	ds	2
   851  0001A0                     ?_printf:
   852                           	callstack 0
   853  0001A0                     printf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x6
   857  0001A0                     	ds	6
   858  0001A6                     printf@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0xC
   862  0001A6                     	ds	2
   863  0001A8                     ??_getCurve:
   864  0001A8                     startAccell@MPow:
   865                           	callstack 0
   866                           
   867                           ; 4 bytes @ 0xE
   868  0001A8                     	ds	2
   869  0001AA                     getCurve@deltaRight:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x10
   873  0001AA                     	ds	2
   874  0001AC                     getCurve@deltaLeft:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x12
   878  0001AC                     	ds	2
   879                           
   880                           	psect	cstackBANK0
   881  000060                     __pcstackBANK0:
   882                           	callstack 0
   883  000060                     ?_dtoa:
   884                           	callstack 0
   885  000060                     ___flmul@sign:
   886                           	callstack 0
   887  000060                     dtoa@fp:
   888                           	callstack 0
   889  000060                     floorf@m:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x0
   893  000060                     	ds	1
   894  000061                     ___flmul@aexp:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x1
   898  000061                     	ds	1
   899  000062                     ___flmul@grs:
   900                           	callstack 0
   901  000062                     dtoa@d:
   902                           	callstack 0
   903                           
   904                           ; 8 bytes @ 0x2
   905  000062                     	ds	2
   906  000064                     floorf@e:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x4
   910  000064                     	ds	2
   911  000066                     ___flmul@bexp:
   912                           	callstack 0
   913  000066                     floorf@u:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x6
   917  000066                     	ds	1
   918  000067                     ___flmul@prod:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x7
   922  000067                     	ds	3
   923  00006A                     _dtoa$3530:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0xA
   927  00006A                     	ds	1
   928  00006B                     ___flmul@temp:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xB
   932  00006B                     	ds	1
   933  00006C                     dtoa@p:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0xC
   937  00006C                     	ds	1
   938  00006D                     ?___fladd:
   939                           	callstack 0
   940  00006D                     ___flge@ff1:
   941                           	callstack 0
   942  00006D                     ___fladd@b:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0xD
   946  00006D                     	ds	1
   947  00006E                     dtoa@w:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0xE
   951  00006E                     	ds	2
   952  000070                     dtoa@s:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x10
   956  000070                     	ds	1
   957  000071                     ___flge@ff2:
   958                           	callstack 0
   959  000071                     ___fladd@a:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x11
   963  000071                     	ds	1
   964  000072                     dtoa@n:
   965                           	callstack 0
   966                           
   967                           ; 8 bytes @ 0x12
   968  000072                     	ds	3
   969  000075                     ___fladd@signs:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x15
   973  000075                     	ds	1
   974  000076                     ___fladd@aexp:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x16
   978  000076                     	ds	1
   979  000077                     ___fladd@bexp:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x17
   983  000077                     	ds	1
   984  000078                     ___fladd@grs:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x18
   988  000078                     	ds	1
   989  000079                     ?___flsub:
   990                           	callstack 0
   991  000079                     ?___fltol:
   992                           	callstack 0
   993  000079                     ___fltol@f1:
   994                           	callstack 0
   995  000079                     ___flsub@b:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0x19
   999  000079                     	ds	1
  1000  00007A                     dtoa@i:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x1A
  1004  00007A                     	ds	3
  1005  00007D                     ??___fltol:
  1006  00007D                     ___flsub@a:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x1D
  1010  00007D                     	ds	4
  1011  000081                     ___fltol@sign1:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x21
  1015  000081                     	ds	1
  1016  000082                     ___fltol@exp1:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x22
  1020  000082                     	ds	1
  1021  000083                     ??_calcSteering:
  1022  000083                     ??_calcSpeed:
  1023  000083                     ??_calcMotorPow:
  1024  000083                     ?_efgtoa:
  1025                           	callstack 0
  1026  000083                     efgtoa@fp:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x23
  1030  000083                     	ds	2
  1031  000085                     calcMotorPow@setSpeedDelta:
  1032                           	callstack 0
  1033  000085                     _calcSteering$4174:
  1034                           	callstack 0
  1035  000085                     efgtoa@f:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x25
  1039  000085                     	ds	2
  1040  000087                     calcSteering@delta:
  1041                           	callstack 0
  1042  000087                     calcSpeed@speed:
  1043                           	callstack 0
  1044  000087                     calcMotorPow@oldSpeedDelta:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x27
  1048  000087                     	ds	2
  1049  000089                     calcMotorPow@addMPow:
  1050                           	callstack 0
  1051  000089                     efgtoa@c:
  1052                           	callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x29
  1055  000089                     	ds	1
  1056  00008A                     ??_efgtoa:
  1057                           
  1058                           ; 1 bytes @ 0x2A
  1059  00008A                     	ds	5
  1060  00008F                     _efgtoa$3554:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x2F
  1064  00008F                     	ds	2
  1065  000091                     _efgtoa$3555:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x31
  1069  000091                     	ds	2
  1070  000093                     _efgtoa$3559:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x33
  1074  000093                     	ds	2
  1075  000095                     _efgtoa$3563:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x35
  1079  000095                     	ds	2
  1080  000097                     _efgtoa$3564:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x37
  1084  000097                     	ds	2
  1085  000099                     _efgtoa$3565:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x39
  1089  000099                     	ds	2
  1090  00009B                     efgtoa@t:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x3B
  1094  00009B                     	ds	2
  1095  00009D                     efgtoa@pp:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x3D
  1099  00009D                     	ds	2
  1100  00009F                     efgtoa@ne:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x3F
  1104  00009F                     	ds	2
  1105  0000A1                     efgtoa@m:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x41
  1109  0000A1                     	ds	2
  1110  0000A3                     efgtoa@ou:
  1111                           	callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x43
  1114  0000A3                     	ds	4
  1115  0000A7                     efgtoa@d:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x47
  1119  0000A7                     	ds	2
  1120  0000A9                     efgtoa@sign:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x49
  1124  0000A9                     	ds	2
  1125  0000AB                     efgtoa@p:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x4B
  1129  0000AB                     	ds	2
  1130  0000AD                     efgtoa@w:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x4D
  1134  0000AD                     	ds	2
  1135  0000AF                     efgtoa@nmode:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x4F
  1139  0000AF                     	ds	1
  1140  0000B0                     efgtoa@mode:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x50
  1144  0000B0                     	ds	1
  1145  0000B1                     efgtoa@h:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x51
  1149  0000B1                     	ds	4
  1150  0000B5                     efgtoa@l:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x55
  1154  0000B5                     	ds	4
  1155  0000B9                     efgtoa@i:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x59
  1159  0000B9                     	ds	2
  1160  0000BB                     efgtoa@g:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x5B
  1164  0000BB                     	ds	4
  1165  0000BF                     efgtoa@e:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x5F
  1169  0000BF                     	ds	2
  1170  0000C1                     efgtoa@n:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x61
  1174  0000C1                     	ds	2
  1175  0000C3                     efgtoa@u:
  1176                           	callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x63
  1179  0000C3                     	ds	4
  1180  0000C7                     ?_vfpfcnvrt:
  1181                           	callstack 0
  1182  0000C7                     vfpfcnvrt@fp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x67
  1186  0000C7                     	ds	2
  1187  0000C9                     vfpfcnvrt@fmt:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x69
  1191  0000C9                     	ds	2
  1192  0000CB                     vfpfcnvrt@ap:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x6B
  1196  0000CB                     	ds	2
  1197  0000CD                     ??_vfpfcnvrt:
  1198                           
  1199                           ; 1 bytes @ 0x6D
  1200  0000CD                     	ds	4
  1201  0000D1                     vfpfcnvrt@ll:
  1202                           	callstack 0
  1203                           
  1204                           ; 8 bytes @ 0x71
  1205  0000D1                     	ds	8
  1206  0000D9                     _vfpfcnvrt$3583:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x79
  1210  0000D9                     	ds	2
  1211  0000DB                     vfpfcnvrt@f:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0x7B
  1215  0000DB                     	ds	4
  1216  0000DF                     vfpfcnvrt@ct:
  1217                           	callstack 0
  1218                           
  1219                           ; 3 bytes @ 0x7F
  1220  0000DF                     	ds	3
  1221  0000E2                     vfpfcnvrt@c:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x82
  1225  0000E2                     	ds	1
  1226  0000E3                     vfprintf@cfmt:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x83
  1230  0000E3                     	ds	2
  1231                           
  1232                           	psect	cstackCOMRAM
  1233  000001                     __pcstackCOMRAM:
  1234                           	callstack 0
  1235  000001                     CCP3_DefaultCallBack@capturedValue:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x0
  1239  000001                     	ds	2
  1240  000003                     CCP3_CaptureISR@module:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0x2
  1244  000003                     	ds	2
  1245  000005                     CCP4_DefaultCallBack@capturedValue:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x4
  1249  000005                     	ds	2
  1250  000007                     CCP4_CaptureISR@module:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x6
  1254  000007                     	ds	2
  1255  000009                     ?_TMR5_ReadTimer:
  1256                           	callstack 0
  1257  000009                     TMR5_WriteTimer@timerVal:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x8
  1261  000009                     	ds	2
  1262  00000B                     ??_TMR5_ReadTimer:
  1263  00000B                     
  1264                           ; 1 bytes @ 0xA
  1265  00000B                     	ds	2
  1266  00000D                     TMR5_ReadTimer@readVal:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0xC
  1270  00000D                     	ds	2
  1271  00000F                     TMR5_ReadTimer@readValHigh:
  1272                           	callstack 0
  1273                           
  1274                           ; 1 bytes @ 0xE
  1275  00000F                     	ds	1
  1276  000010                     TMR5_ReadTimer@readValLow:
  1277                           	callstack 0
  1278                           
  1279                           ; 1 bytes @ 0xF
  1280  000010                     	ds	1
  1281  000011                     ??_UART1_tx_vect_isr:
  1282  000011                     
  1283                           ; 1 bytes @ 0x10
  1284  000011                     	ds	1
  1285  000012                     ??_UART1_rx_vect_isr:
  1286                           
  1287                           ; 1 bytes @ 0x11
  1288  000012                     	ds	1
  1289  000013                     ??_TMR4_ISR:
  1290                           
  1291                           ; 1 bytes @ 0x12
  1292  000013                     	ds	1
  1293  000014                     ??_TMR3_Initialize:
  1294  000014                     ?_strlen:
  1295                           	callstack 0
  1296  000014                     ?___fpclassifyf:
  1297                           	callstack 0
  1298  000014                     ?_isupper:
  1299                           	callstack 0
  1300  000014                     ?_strncmp:
  1301                           	callstack 0
  1302  000014                     ?_ADCC_GetSingleConversion:
  1303                           	callstack 0
  1304  000014                     ?___awdiv:
  1305                           	callstack 0
  1306  000014                     ?___awmod:
  1307                           	callstack 0
  1308  000014                     ?___fldiv:
  1309                           	callstack 0
  1310  000014                     ?___aldiv:
  1311                           	callstack 0
  1312  000014                     ?___flneg:
  1313                           	callstack 0
  1314  000014                     ?___aodiv:
  1315                           	callstack 0
  1316  000014                     ?___aomod:
  1317                           	callstack 0
  1318  000014                     UART1_Write@txData:
  1319                           	callstack 0
  1320  000014                     INTERRUPT_Initialize@state:
  1321                           	callstack 0
  1322  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1323                           	callstack 0
  1324  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1325                           	callstack 0
  1326  000014                     UART1_SetErrorHandler@interruptHandler:
  1327                           	callstack 0
  1328  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1329                           	callstack 0
  1330  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1331                           	callstack 0
  1332  000014                     CCP3_SetCallBack@customCallBack:
  1333                           	callstack 0
  1334  000014                     CCP4_SetCallBack@customCallBack:
  1335                           	callstack 0
  1336  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1337                           	callstack 0
  1338  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1339                           	callstack 0
  1340  000014                     PWM7_LoadDutyValue@dutyValue:
  1341                           	callstack 0
  1342  000014                     PWM8_LoadDutyValue@dutyValue:
  1343                           	callstack 0
  1344  000014                     PWM5_LoadDutyValue@dutyValue:
  1345                           	callstack 0
  1346  000014                     PWM6_LoadDutyValue@dutyValue:
  1347                           	callstack 0
  1348  000014                     ___awdiv@dividend:
  1349                           	callstack 0
  1350  000014                     ___awmod@dividend:
  1351                           	callstack 0
  1352  000014                     isupper@c:
  1353                           	callstack 0
  1354  000014                     strcpy@dest:
  1355                           	callstack 0
  1356  000014                     strlen@s:
  1357                           	callstack 0
  1358  000014                     strncmp@_l:
  1359                           	callstack 0
  1360  000014                     ___aldiv@dividend:
  1361                           	callstack 0
  1362  000014                     ___fleq@ff1:
  1363                           	callstack 0
  1364  000014                     ___flneg@f1:
  1365                           	callstack 0
  1366  000014                     ___fldiv@b:
  1367                           	callstack 0
  1368  000014                     ___fpclassifyf@x:
  1369                           	callstack 0
  1370  000014                     ___aodiv@dividend:
  1371                           	callstack 0
  1372  000014                     ___aomod@dividend:
  1373                           	callstack 0
  1374                           
  1375                           ; 8 bytes @ 0x13
  1376  000014                     	ds	1
  1377  000015                     putch@txData:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x14
  1381  000015                     	ds	1
  1382  000016                     ??_TMR5_Initialize:
  1383  000016                     ??_isupper:
  1384  000016                     ??_PWM7_LoadDutyValue:
  1385  000016                     ??_PWM8_LoadDutyValue:
  1386  000016                     ??_PWM5_LoadDutyValue:
  1387  000016                     ??_PWM6_LoadDutyValue:
  1388  000016                     ??_ADCC_GetSingleConversion:
  1389  000016                     ___awdiv@divisor:
  1390                           	callstack 0
  1391  000016                     ___awmod@divisor:
  1392                           	callstack 0
  1393  000016                     fputc@c:
  1394                           	callstack 0
  1395  000016                     strcpy@src:
  1396                           	callstack 0
  1397  000016                     strlen@a:
  1398                           	callstack 0
  1399  000016                     strncmp@_r:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x15
  1403  000016                     	ds	2
  1404  000018                     ??___fpclassifyf:
  1405  000018                     ??_strcpy:
  1406  000018                     ADCC_GetSingleConversion@channel:
  1407                           	callstack 0
  1408  000018                     ___awdiv@counter:
  1409                           	callstack 0
  1410  000018                     ___awmod@counter:
  1411                           	callstack 0
  1412  000018                     setMotor@motorPower:
  1413                           	callstack 0
  1414  000018                     fputc@fp:
  1415                           	callstack 0
  1416  000018                     strncmp@n:
  1417                           	callstack 0
  1418  000018                     ___aldiv@divisor:
  1419                           	callstack 0
  1420  000018                     ___fleq@ff2:
  1421                           	callstack 0
  1422  000018                     ___fldiv@a:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x17
  1426  000018                     	ds	1
  1427  000019                     ___awdiv@sign:
  1428                           	callstack 0
  1429  000019                     ___awmod@sign:
  1430                           	callstack 0
  1431                           
  1432                           ; 1 bytes @ 0x18
  1433  000019                     	ds	1
  1434  00001A                     ??_setMotor:
  1435  00001A                     ??_fputc:
  1436  00001A                     ??_strncmp:
  1437  00001A                     ?_tolower:
  1438                           	callstack 0
  1439  00001A                     ___awdiv@quotient:
  1440                           	callstack 0
  1441  00001A                     strcpy@s:
  1442                           	callstack 0
  1443  00001A                     tolower@c:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x19
  1447  00001A                     	ds	1
  1448  00001B                     strncmp@l:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x1A
  1452  00001B                     	ds	1
  1453  00001C                     ??___fldiv:
  1454  00001C                     ??_tolower:
  1455  00001C                     ??___fleq:
  1456  00001C                     ?___xxtofl:
  1457                           	callstack 0
  1458  00001C                     ___aldiv@counter:
  1459                           	callstack 0
  1460  00001C                     setSteering@steering:
  1461                           	callstack 0
  1462  00001C                     ___fpclassifyf@e:
  1463                           	callstack 0
  1464  00001C                     strcpy@d:
  1465                           	callstack 0
  1466  00001C                     ___xxtofl@val:
  1467                           	callstack 0
  1468  00001C                     ___aodiv@divisor:
  1469                           	callstack 0
  1470  00001C                     ___aomod@divisor:
  1471                           	callstack 0
  1472                           
  1473                           ; 8 bytes @ 0x1B
  1474  00001C                     	ds	1
  1475  00001D                     ___aldiv@sign:
  1476                           	callstack 0
  1477  00001D                     strncmp@r:
  1478                           	callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x1C
  1481  00001D                     	ds	1
  1482  00001E                     setSteering@steeringMode:
  1483                           	callstack 0
  1484  00001E                     ___aldiv@quotient:
  1485                           	callstack 0
  1486  00001E                     ___fpclassifyf@u:
  1487                           	callstack 0
  1488                           
  1489                           ; 4 bytes @ 0x1D
  1490  00001E                     	ds	1
  1491  00001F                     ??_setSteering:
  1492  00001F                     fputs@s:
  1493                           	callstack 0
  1494                           
  1495                           ; 2 bytes @ 0x1E
  1496  00001F                     	ds	1
  1497  000020                     ??___xxtofl:
  1498  000020                     _tolower$3676:
  1499                           	callstack 0
  1500  000020                     ___fldiv@rem:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x1F
  1504  000020                     	ds	1
  1505  000021                     setSteering@steeringF:
  1506                           	callstack 0
  1507  000021                     fputs@fp:
  1508                           	callstack 0
  1509                           
  1510                           ; 2 bytes @ 0x20
  1511  000021                     	ds	1
  1512  000022                     ?_actSpeed:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x21
  1516  000022                     	ds	1
  1517  000023                     fputs@c:
  1518                           	callstack 0
  1519  000023                     setSteering@steeringB:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x22
  1523  000023                     	ds	1
  1524  000024                     ___aodiv@counter:
  1525                           	callstack 0
  1526  000024                     ___aomod@counter:
  1527                           	callstack 0
  1528  000024                     ___fldiv@sign:
  1529                           	callstack 0
  1530  000024                     ___xxtofl@sign:
  1531                           	callstack 0
  1532  000024                     actSpeed@speed:
  1533                           	callstack 0
  1534  000024                     fputs@i:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x23
  1538  000024                     	ds	1
  1539  000025                     ___aodiv@sign:
  1540                           	callstack 0
  1541  000025                     ___aomod@sign:
  1542                           	callstack 0
  1543  000025                     ___xxtofl@exp:
  1544                           	callstack 0
  1545  000025                     ___fldiv@new_exp:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x24
  1549  000025                     	ds	1
  1550  000026                     ?_abs:
  1551                           	callstack 0
  1552  000026                     ?_pad:
  1553                           	callstack 0
  1554  000026                     pad@fp:
  1555                           	callstack 0
  1556  000026                     abs@a:
  1557                           	callstack 0
  1558  000026                     ___xxtofl@arg:
  1559                           	callstack 0
  1560  000026                     ___aodiv@quotient:
  1561                           	callstack 0
  1562                           
  1563                           ; 8 bytes @ 0x25
  1564  000026                     	ds	1
  1565  000027                     ___fldiv@grs:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x26
  1569  000027                     	ds	1
  1570  000028                     ??_abs:
  1571  000028                     pad@buf:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x27
  1575  000028                     	ds	2
  1576  00002A                     ?___flmul:
  1577                           	callstack 0
  1578  00002A                     pad@p:
  1579                           	callstack 0
  1580  00002A                     ___flmul@b:
  1581                           	callstack 0
  1582                           
  1583                           ; 4 bytes @ 0x29
  1584  00002A                     	ds	1
  1585  00002B                     ___fldiv@bexp:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x2A
  1589  00002B                     	ds	1
  1590  00002C                     ??_pad:
  1591  00002C                     ___fldiv@aexp:
  1592                           	callstack 0
  1593                           
  1594                           ; 1 bytes @ 0x2B
  1595  00002C                     	ds	1
  1596  00002D                     ?_floorf:
  1597                           	callstack 0
  1598  00002D                     pad@i:
  1599                           	callstack 0
  1600  00002D                     floorf@x:
  1601                           	callstack 0
  1602                           
  1603                           ; 4 bytes @ 0x2C
  1604  00002D                     	ds	1
  1605  00002E                     ___flmul@a:
  1606                           	callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x2D
  1609  00002E                     	ds	1
  1610  00002F                     pad@w:
  1611                           	callstack 0
  1612                           
  1613                           ; 2 bytes @ 0x2E
  1614  00002F                     	ds	2
  1615  000031                     ??_floorf:
  1616  000031                     ??_dtoa:
  1617                           
  1618                           ; 1 bytes @ 0x30
  1619  000031                     	ds	1
  1620  000032                     ??___flmul:
  1621                           
  1622                           ; 1 bytes @ 0x31
  1623  000032                     	ds	4
  1624  000036                     ??___fladd:
  1625  000036                     ??___flge:
  1626                           
  1627                           ; 1 bytes @ 0x35
  1628  000036                     	ds	4
  1629  00003A                     
  1630                           ; 1 bytes @ 0x39
  1631 ;;
  1632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1633 ;;
  1634 ;; *************** function _main *****************
  1635 ;; Defined at:
  1636 ;;		line 8 in file "main.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels required when called: 19
  1656 ;; This function calls:
  1657 ;;		_SYSTEM_Initialize
  1658 ;;		_TMR4_SetInterruptHandler
  1659 ;;		_loop
  1660 ;; This function is called by:
  1661 ;;		Startup code after reset
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text0
  1666  005D48                     __ptext0:
  1667                           	callstack 0
  1668  005D48                     _main:
  1669                           	callstack 12
  1670  005D48                     
  1671                           ;main.c: 9:     SYSTEM_Initialize();
  1672  005D48  ECE4  F02A         	call	_SYSTEM_Initialize	;wreg free
  1673  005D4C                     
  1674                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1675  005D4C  8ED2               	bsf	210,7,c	;volatile
  1676  005D4E                     
  1677                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1678  005D4E  8CD2               	bsf	210,6,c	;volatile
  1679                           
  1680                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1681  005D50  0EA2               	movlw	low _TMR4_10msISR
  1682  005D52  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1683  005D54  0E5E               	movlw	high _TMR4_10msISR
  1684  005D56  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1685  005D58  EC3F  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
  1686  005D5C                     l9186:
  1687                           
  1688                           ;main.c: 15:         loop();
  1689  005D5C  ECED  F021         	call	_loop	;wreg free
  1690  005D60  EFAE  F02E         	goto	l9186
  1691  005D64  EF57  F000         	goto	start
  1692  005D68                     __end_of_main:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _loop *****************
  1696 ;; Defined at:
  1697 ;;		line 19 in file "main.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 18
  1718 ;; This function calls:
  1719 ;;		___flge
  1720 ;;		___xxtofl
  1721 ;;		_calcMotorPow
  1722 ;;		_calcSpeed
  1723 ;;		_calcSteering
  1724 ;;		_checkBatt
  1725 ;;		_getBatteryVoltage
  1726 ;;		_getCurve
  1727 ;;		_getReverse
  1728 ;;		_printf
  1729 ;;		_setMotor
  1730 ;;		_setSteering
  1731 ;;		_startAccell
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text1
  1738  0043DA                     __ptext1:
  1739                           	callstack 0
  1740  0043DA                     _loop:
  1741                           	callstack 12
  1742  0043DA                     
  1743                           ;main.c: 20:     setMotor(0);
  1744  0043DA  0E00               	movlw	0
  1745  0043DC  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1746  0043DE  0E00               	movlw	0
  1747  0043E0  6E18               	movwf	setMotor@motorPower^0,c
  1748  0043E2  EC91  F025         	call	_setMotor	;wreg free
  1749                           
  1750                           ;main.c: 21:     setSteering(0, Front);
  1751  0043E6  0E00               	movlw	0
  1752  0043E8  6E1D               	movwf	(setSteering@steering+1)^0,c
  1753  0043EA  0E00               	movlw	0
  1754  0043EC  6E1C               	movwf	setSteering@steering^0,c
  1755  0043EE  0E03               	movlw	3
  1756  0043F0  6E1E               	movwf	setSteering@steeringMode^0,c
  1757  0043F2  EC40  F01E         	call	_setSteering	;wreg free
  1758  0043F6                     l1224:
  1759  0043F6  B8CB               	btfsc	203,4,c	;volatile
  1760  0043F8  EF00  F022         	goto	u10231
  1761  0043FC  EF02  F022         	goto	u10230
  1762  004400                     u10231:
  1763  004400  EFFB  F021         	goto	l1224
  1764  004404                     u10230:
  1765  004404                     l9136:
  1766  004404  0100               	movlb	0	; () banked
  1767  004406  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1768  004408  B4D8               	btfsc	status,2,c
  1769  00440A  EF09  F022         	goto	u10241
  1770  00440E  EF0B  F022         	goto	u10240
  1771  004412                     u10241:
  1772  004412  EF02  F022         	goto	l9136
  1773  004416                     u10240:
  1774  004416                     
  1775                           ; BSR set to: 0
  1776                           ;main.c: 26:         cycle10ms = 0;
  1777  004416  0E00               	movlw	0
  1778  004418  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1779  00441A                     
  1780                           ; BSR set to: 0
  1781                           ;main.c: 28:         getBatteryVoltage();
  1782  00441A  EC0D  F02F         	call	_getBatteryVoltage	;wreg free
  1783  00441E                     
  1784                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1785  00441E  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  1786  004422  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1787  004426  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1788  004428  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1789  00442A  0E00               	movlw	0
  1790  00442C  EC66  F01D         	call	___xxtofl
  1791  004430  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1792  004434  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1793  004438  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1794  00443C  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1795  004440  0E7B               	movlw	123
  1796  004442  0100               	movlb	0	; () banked
  1797  004444  6F71               	movwf	___flge@ff2& (0+255),b
  1798  004446  0E14               	movlw	20
  1799  004448  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1800  00444A  0E2E               	movlw	46
  1801  00444C  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1802  00444E  0E45               	movlw	69
  1803  004450  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1804  004452  EC15  F024         	call	___flge	;wreg free
  1805  004456  0100               	movlb	0	; () banked
  1806  004458  A0D8               	btfss	status,0,c
  1807  00445A  EF31  F022         	goto	u10251
  1808  00445E  EF33  F022         	goto	u10250
  1809  004462                     u10251:
  1810  004462  EF02  F022         	goto	l9136
  1811  004466                     u10250:
  1812  004466                     
  1813                           ; BSR set to: 0
  1814                           ;main.c: 31:     startAccell();
  1815  004466  ECD6  F01F         	call	_startAccell	;wreg free
  1816  00446A                     
  1817                           ;main.c: 32:     driveMode = Straight;
  1818  00446A  0E01               	movlw	1
  1819  00446C  0100               	movlb	0	; () banked
  1820  00446E  6FFE               	movwf	_driveMode& (0+255),b
  1821  004470                     
  1822                           ; BSR set to: 0
  1823                           ;main.c: 33:     curveMode = OutCurve;
  1824  004470  0E00               	movlw	0
  1825  004472  6FFB               	movwf	_curveMode& (0+255),b
  1826  004474                     
  1827                           ; BSR set to: 0
  1828                           ;main.c: 34:     oldDistLeft = distLeft;
  1829  004474  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  1830  004478  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1831  00447C                     
  1832                           ; BSR set to: 0
  1833                           ;main.c: 35:     oldDistRight = distRight;
  1834  00447C  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  1835  004480  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  1836  004484                     
  1837                           ; BSR set to: 0
  1838                           ;main.c: 36:     cycle10ms = 0;
  1839  004484  0E00               	movlw	0
  1840  004486  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1841  004488                     l9156:
  1842  004488  0100               	movlb	0	; () banked
  1843  00448A  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1844  00448C  B4D8               	btfsc	status,2,c
  1845  00448E  EF4B  F022         	goto	u10261
  1846  004492  EF4D  F022         	goto	u10260
  1847  004496                     u10261:
  1848  004496  EF44  F022         	goto	l9156
  1849  00449A                     u10260:
  1850  00449A                     
  1851                           ; BSR set to: 0
  1852                           ;main.c: 39:         cycle10ms = 0;
  1853  00449A  0E00               	movlw	0
  1854  00449C  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1855  00449E                     
  1856                           ; BSR set to: 0
  1857                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1858  00449E  BACB               	btfsc	203,5,c	;volatile
  1859  0044A0  EF54  F022         	goto	u10271
  1860  0044A4  EF56  F022         	goto	u10270
  1861  0044A8                     u10271:
  1862  0044A8  EF68  F022         	goto	l9166
  1863  0044AC                     u10270:
  1864  0044AC                     
  1865                           ; BSR set to: 0
  1866                           ;main.c: 42:             setSpeed = 0;
  1867  0044AC  0E00               	movlw	0
  1868  0044AE  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  1869  0044B0  0E00               	movlw	0
  1870  0044B2  6FEB               	movwf	_setSpeed& (0+255),b
  1871                           
  1872                           ;main.c: 43:             actMotorPow = 0;
  1873  0044B4  0E00               	movlw	0
  1874  0044B6  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1875  0044B8  0E00               	movlw	0
  1876  0044BA  6FE7               	movwf	_actMotorPow& (0+255),b
  1877  0044BC                     
  1878                           ; BSR set to: 0
  1879                           ;main.c: 44:             setSteering(0, Front);
  1880  0044BC  0E00               	movlw	0
  1881  0044BE  6E1D               	movwf	(setSteering@steering+1)^0,c
  1882  0044C0  0E00               	movlw	0
  1883  0044C2  6E1C               	movwf	setSteering@steering^0,c
  1884  0044C4  0E03               	movlw	3
  1885  0044C6  6E1E               	movwf	setSteering@steeringMode^0,c
  1886  0044C8  EC40  F01E         	call	_setSteering	;wreg free
  1887                           
  1888                           ;main.c: 45:             break;
  1889  0044CC  EF87  F022         	goto	l1240
  1890  0044D0                     l9166:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 48:         if (checkBatt()) {
  1894  0044D0  EC1E  F029         	call	_checkBatt	;wreg free
  1895  0044D4  0900               	iorlw	0
  1896  0044D6  B4D8               	btfsc	status,2,c
  1897  0044D8  EF70  F022         	goto	u10281
  1898  0044DC  EF72  F022         	goto	u10280
  1899  0044E0                     u10281:
  1900  0044E0  EF7B  F022         	goto	l9170
  1901  0044E4                     u10280:
  1902  0044E4                     
  1903                           ;main.c: 49:             printf("Battery Low");
  1904  0044E4  0E3C               	movlw	low STR_1
  1905  0044E6  0101               	movlb	1	; () banked
  1906  0044E8  6FA0               	movwf	printf@fmt& (0+255),b
  1907  0044EA  0E10               	movlw	high STR_1
  1908  0044EC  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1909  0044EE  EC58  F02E         	call	_printf	;wreg free
  1910                           
  1911                           ;main.c: 50:             break;
  1912  0044F2  EF87  F022         	goto	l1240
  1913  0044F6                     l9170:
  1914                           
  1915                           ;main.c: 53:         getCurve();
  1916  0044F6  ECEA  F018         	call	_getCurve	;wreg free
  1917  0044FA                     
  1918                           ;main.c: 54:         getReverse();
  1919  0044FA  EC92  F023         	call	_getReverse	;wreg free
  1920  0044FE                     
  1921                           ;main.c: 56:         calcSteering();
  1922  0044FE  EC3E  F01A         	call	_calcSteering	;wreg free
  1923  004502                     
  1924                           ;main.c: 57:         calcSpeed();
  1925  004502  EC61  F01C         	call	_calcSpeed	;wreg free
  1926  004506                     
  1927                           ;main.c: 58:         calcMotorPow();
  1928  004506  EC47  F021         	call	_calcMotorPow	;wreg free
  1929  00450A  EF44  F022         	goto	l9156
  1930  00450E                     l1240:
  1931  00450E  0012               	return		;funcret
  1932  004510                     __end_of_loop:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _startAccell *****************
  1936 ;; Defined at:
  1937 ;;		line 98 in file "main.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  MPow            4   14[BANK1 ] float 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 17
  1958 ;; This function calls:
  1959 ;;		___flge
  1960 ;;		___flmul
  1961 ;;		___fltol
  1962 ;;		___xxtofl
  1963 ;;		_calcSteering
  1964 ;;		_printf
  1965 ;;		_setMotor
  1966 ;;		_setSteering
  1967 ;; This function is called by:
  1968 ;;		_loop
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text2
  1973  003FAC                     __ptext2:
  1974                           	callstack 0
  1975  003FAC                     _startAccell:
  1976                           	callstack 12
  1977  003FAC                     
  1978                           ;main.c: 99:     setSteering(0, Front);
  1979  003FAC  0E00               	movlw	0
  1980  003FAE  6E1D               	movwf	(setSteering@steering+1)^0,c
  1981  003FB0  0E00               	movlw	0
  1982  003FB2  6E1C               	movwf	setSteering@steering^0,c
  1983  003FB4  0E03               	movlw	3
  1984  003FB6  6E1E               	movwf	setSteering@steeringMode^0,c
  1985  003FB8  EC40  F01E         	call	_setSteering	;wreg free
  1986  003FBC                     
  1987                           ;main.c: 100:     driveMode = Accel;
  1988  003FBC  0E00               	movlw	0
  1989  003FBE  0100               	movlb	0	; () banked
  1990  003FC0  6FFE               	movwf	_driveMode& (0+255),b
  1991  003FC2                     
  1992                           ; BSR set to: 0
  1993                           ;main.c: 102:     actMotorPow = (40);
  1994  003FC2  0E00               	movlw	0
  1995  003FC4  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1996  003FC6  0E28               	movlw	40
  1997  003FC8  6FE7               	movwf	_actMotorPow& (0+255),b
  1998                           
  1999                           ;main.c: 103:     float MPow = actMotorPow;
  2000  003FCA  C0E7  F01C         	movff	_actMotorPow,___xxtofl@val
  2001  003FCE  C0E8  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  2002  003FD2  0E00               	movlw	0
  2003  003FD4  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2004  003FD6  0EFF               	movlw	-1
  2005  003FD8  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2006  003FDA  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2007  003FDC  0E01               	movlw	1
  2008  003FDE  EC66  F01D         	call	___xxtofl
  2009  003FE2  C01C  F1A8         	movff	?___xxtofl,startAccell@MPow
  2010  003FE6  C01D  F1A9         	movff	?___xxtofl+1,startAccell@MPow+1
  2011  003FEA  C01E  F1AA         	movff	?___xxtofl+2,startAccell@MPow+2
  2012  003FEE  C01F  F1AB         	movff	?___xxtofl+3,startAccell@MPow+3
  2013  003FF2                     
  2014                           ;main.c: 104:         printf("MPow: %f\n",MPow);
  2015  003FF2  0E53               	movlw	low STR_2
  2016  003FF4  0101               	movlb	1	; () banked
  2017  003FF6  6FA0               	movwf	printf@fmt& (0+255),b
  2018  003FF8  0E10               	movlw	high STR_2
  2019  003FFA  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2020  003FFC  C1A8  F1A2         	movff	startAccell@MPow,?_printf+2
  2021  004000  C1A9  F1A3         	movff	startAccell@MPow+1,?_printf+3
  2022  004004  C1AA  F1A4         	movff	startAccell@MPow+2,?_printf+4
  2023  004008  C1AB  F1A5         	movff	startAccell@MPow+3,?_printf+5
  2024  00400C  EC58  F02E         	call	_printf	;wreg free
  2025                           
  2026                           ;main.c: 105:     while (MPow < (250)) {
  2027  004010  EF50  F020         	goto	l8932
  2028  004014                     l8918:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;main.c: 106:         MPow *= (1.1);
  2032  004014  C1A8  F02A         	movff	startAccell@MPow,___flmul@b
  2033  004018  C1A9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  2034  00401C  C1AA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  2035  004020  C1AB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  2036  004024  0ECD               	movlw	205
  2037  004026  6E2E               	movwf	___flmul@a^0,c
  2038  004028  0ECC               	movlw	204
  2039  00402A  6E2F               	movwf	(___flmul@a+1)^0,c
  2040  00402C  0E8C               	movlw	140
  2041  00402E  6E30               	movwf	(___flmul@a+2)^0,c
  2042  004030  0E3F               	movlw	63
  2043  004032  6E31               	movwf	(___flmul@a+3)^0,c
  2044  004034  EC82  F013         	call	___flmul	;wreg free
  2045  004038  C02A  F1A8         	movff	?___flmul,startAccell@MPow
  2046  00403C  C02B  F1A9         	movff	?___flmul+1,startAccell@MPow+1
  2047  004040  C02C  F1AA         	movff	?___flmul+2,startAccell@MPow+2
  2048  004044  C02D  F1AB         	movff	?___flmul+3,startAccell@MPow+3
  2049  004048                     
  2050                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  2051  004048  C1A8  F079         	movff	startAccell@MPow,___fltol@f1
  2052  00404C  C1A9  F07A         	movff	startAccell@MPow+1,___fltol@f1+1
  2053  004050  C1AA  F07B         	movff	startAccell@MPow+2,___fltol@f1+2
  2054  004054  C1AB  F07C         	movff	startAccell@MPow+3,___fltol@f1+3
  2055  004058  EC0E  F023         	call	___fltol	;wreg free
  2056  00405C  C079  F0E7         	movff	?___fltol,_actMotorPow
  2057  004060  C07A  F0E8         	movff	?___fltol+1,_actMotorPow+1
  2058  004064                     
  2059                           ;main.c: 108:         setMotor(actMotorPow);
  2060  004064  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2061  004068  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2062  00406C  EC91  F025         	call	_setMotor	;wreg free
  2063  004070                     
  2064                           ;main.c: 109:         printf("actMPow: %d\n",actMotorPow);
  2065  004070  0E23               	movlw	low STR_3
  2066  004072  0101               	movlb	1	; () banked
  2067  004074  6FA0               	movwf	printf@fmt& (0+255),b
  2068  004076  0E10               	movlw	high STR_3
  2069  004078  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2070  00407A  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2071  00407E  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2072  004082  EC58  F02E         	call	_printf	;wreg free
  2073  004086                     
  2074                           ;main.c: 110:         calcSteering();
  2075  004086  EC3E  F01A         	call	_calcSteering	;wreg free
  2076  00408A                     
  2077                           ;main.c: 112:         cycle10ms = 0;
  2078  00408A  0E00               	movlw	0
  2079  00408C  0100               	movlb	0	; () banked
  2080  00408E  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2081  004090                     l8930:
  2082                           
  2083                           ; BSR set to: 0
  2084  004090  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2085  004092  B4D8               	btfsc	status,2,c
  2086  004094  EF4E  F020         	goto	u9901
  2087  004098  EF50  F020         	goto	u9900
  2088  00409C                     u9901:
  2089  00409C  EF48  F020         	goto	l8930
  2090  0040A0                     u9900:
  2091  0040A0                     l8932:
  2092                           
  2093                           ;main.c: 105:     while (MPow < (250)) {
  2094  0040A0  C1A8  F06D         	movff	startAccell@MPow,___flge@ff1
  2095  0040A4  C1A9  F06E         	movff	startAccell@MPow+1,___flge@ff1+1
  2096  0040A8  C1AA  F06F         	movff	startAccell@MPow+2,___flge@ff1+2
  2097  0040AC  C1AB  F070         	movff	startAccell@MPow+3,___flge@ff1+3
  2098  0040B0  0E00               	movlw	0
  2099  0040B2  0100               	movlb	0	; () banked
  2100  0040B4  6F71               	movwf	___flge@ff2& (0+255),b
  2101  0040B6  0E00               	movlw	0
  2102  0040B8  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2103  0040BA  0E7A               	movlw	122
  2104  0040BC  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2105  0040BE  0E43               	movlw	67
  2106  0040C0  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2107  0040C2  EC15  F024         	call	___flge	;wreg free
  2108  0040C6  0100               	movlb	0	; () banked
  2109  0040C8  A0D8               	btfss	status,0,c
  2110  0040CA  EF69  F020         	goto	u9911
  2111  0040CE  EF6B  F020         	goto	u9910
  2112  0040D2                     u9911:
  2113  0040D2  EF0A  F020         	goto	l8918
  2114  0040D6                     u9910:
  2115  0040D6                     
  2116                           ; BSR set to: 0
  2117                           ;main.c: 116:     actMotorPow = (250);
  2118  0040D6  0E00               	movlw	0
  2119  0040D8  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  2120  0040DA  0EFA               	movlw	250
  2121  0040DC  6FE7               	movwf	_actMotorPow& (0+255),b
  2122  0040DE                     
  2123                           ; BSR set to: 0
  2124                           ;main.c: 117:     setMotor(actMotorPow);
  2125  0040DE  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2126  0040E2  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2127  0040E6  EC91  F025         	call	_setMotor	;wreg free
  2128  0040EA                     
  2129                           ;main.c: 118:     printf("starAccelPower: %d\n", actMotorPow);
  2130  0040EA  0E01               	movlw	low STR_4
  2131  0040EC  0101               	movlb	1	; () banked
  2132  0040EE  6FA0               	movwf	printf@fmt& (0+255),b
  2133  0040F0  0E10               	movlw	high STR_4
  2134  0040F2  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2135  0040F4  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2136  0040F8  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2137  0040FC  EC58  F02E         	call	_printf	;wreg free
  2138  004100                     
  2139                           ;main.c: 120:     cycle10ms = 0;
  2140  004100  0E00               	movlw	0
  2141  004102  0100               	movlb	0	; () banked
  2142  004104  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2143                           
  2144                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2145  004106  EF87  F020         	goto	l8944
  2146  00410A                     l8942:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 122:         calcSteering();
  2150  00410A  EC3E  F01A         	call	_calcSteering	;wreg free
  2151  00410E                     l8944:
  2152                           
  2153                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2154  00410E  0E1D               	movlw	29
  2155  004110  0100               	movlb	0	; () banked
  2156  004112  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2157  004114  EF8E  F020         	goto	u9921
  2158  004118  EF90  F020         	goto	u9920
  2159  00411C                     u9921:
  2160  00411C  EF85  F020         	goto	l8942
  2161  004120                     u9920:
  2162  004120                     
  2163                           ; BSR set to: 0
  2164                           ;main.c: 124:     driveMode = Straight;
  2165  004120  0E01               	movlw	1
  2166  004122  6FFE               	movwf	_driveMode& (0+255),b
  2167  004124                     
  2168                           ; BSR set to: 0
  2169                           ;main.c: 125:     calcSteering();
  2170  004124  EC3E  F01A         	call	_calcSteering	;wreg free
  2171  004128  0012               	return		;funcret
  2172  00412A                     __end_of_startAccell:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _calcSteering *****************
  2176 ;; Defined at:
  2177 ;;		line 233 in file "main.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  delta           2   39[BANK0 ] short 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;Total ram usage:        6 bytes
  2196 ;; Hardware stack levels used: 1
  2197 ;; Hardware stack levels required when called: 10
  2198 ;; This function calls:
  2199 ;;		___awdiv
  2200 ;;		___flmul
  2201 ;;		___fltol
  2202 ;;		___xxtofl
  2203 ;;		_setSteering
  2204 ;; This function is called by:
  2205 ;;		_loop
  2206 ;;		_startAccell
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text3
  2211  00347C                     __ptext3:
  2212                           	callstack 0
  2213  00347C                     _calcSteering:
  2214                           	callstack 18
  2215  00347C                     
  2216                           ;main.c: 234:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  2217  00347C  0EF3               	movlw	243
  2218  00347E  6E2E               	movwf	___flmul@a^0,c
  2219  003480  0E04               	movlw	4
  2220  003482  6E2F               	movwf	(___flmul@a+1)^0,c
  2221  003484  0EB5               	movlw	181
  2222  003486  6E30               	movwf	(___flmul@a+2)^0,c
  2223  003488  0E3F               	movlw	63
  2224  00348A  6E31               	movwf	(___flmul@a+3)^0,c
  2225  00348C  C1AE  F01C         	movff	_middleOffSet,___xxtofl@val
  2226  003490  C1AF  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  2227  003494  0E00               	movlw	0
  2228  003496  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2229  003498  0EFF               	movlw	-1
  2230  00349A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2231  00349C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2232  00349E  0E01               	movlw	1
  2233  0034A0  EC66  F01D         	call	___xxtofl
  2234  0034A4  C01C  F02A         	movff	?___xxtofl,___flmul@b
  2235  0034A8  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  2236  0034AC  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  2237  0034B0  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  2238  0034B4  EC82  F013         	call	___flmul	;wreg free
  2239  0034B8  C02A  F079         	movff	?___flmul,___fltol@f1
  2240  0034BC  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
  2241  0034C0  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
  2242  0034C4  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
  2243  0034C8  EC0E  F023         	call	___fltol	;wreg free
  2244  0034CC  C0F3  F083         	movff	_distRight,??_calcSteering	;volatile
  2245  0034D0  C0F4  F084         	movff	_distRight+1,??_calcSteering+1	;volatile
  2246  0034D4  0100               	movlb	0	; () banked
  2247  0034D6  1F83               	comf	??_calcSteering& (0+255),f,b
  2248  0034D8  1F84               	comf	(??_calcSteering+1)& (0+255),f,b
  2249  0034DA  4B83               	infsnz	??_calcSteering& (0+255),f,b
  2250  0034DC  2B84               	incf	(??_calcSteering+1)& (0+255),f,b
  2251  0034DE  5179               	movf	?___fltol& (0+255),w,b
  2252  0034E0  5F83               	subwf	??_calcSteering& (0+255),f,b
  2253  0034E2  517A               	movf	(?___fltol+1)& (0+255),w,b
  2254  0034E4  5B84               	subwfb	(??_calcSteering+1)& (0+255),f,b
  2255  0034E6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2256  0034E8  2583               	addwf	??_calcSteering& (0+255),w,b
  2257  0034EA  6F87               	movwf	calcSteering@delta& (0+255),b
  2258  0034EC  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2259  0034EE  2184               	addwfc	(??_calcSteering+1)& (0+255),w,b
  2260  0034F0  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2261                           
  2262                           ;main.c: 238:     switch (driveMode) {
  2263  0034F2  EFA3  F01A         	goto	l8870
  2264  0034F6                     l1319:
  2265  0034F6                     l8860:
  2266                           
  2267                           ; BSR set to: 0
  2268                           ;main.c: 244:             if (delta > (25)) {
  2269  0034F6  BF88               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  2270  0034F8  EF87  F01A         	goto	u9861
  2271  0034FC  5188               	movf	(calcSteering@delta+1)& (0+255),w,b
  2272  0034FE  E109               	bnz	u9860
  2273  003500  0E1A               	movlw	26
  2274  003502  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2275  003504  A0D8               	btfss	status,0,c
  2276  003506  EF87  F01A         	goto	u9861
  2277  00350A  EF89  F01A         	goto	u9860
  2278  00350E                     u9861:
  2279  00350E  EF8F  F01A         	goto	l8864
  2280  003512                     u9860:
  2281  003512                     
  2282                           ; BSR set to: 0
  2283                           ;main.c: 245:                 delta = (25);
  2284  003512  0E00               	movlw	0
  2285  003514  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2286  003516  0E19               	movlw	25
  2287  003518  6F87               	movwf	calcSteering@delta& (0+255),b
  2288                           
  2289                           ;main.c: 246:             } else if (delta < -(25)) {
  2290  00351A  EF2C  F01B         	goto	l8896
  2291  00351E                     l8864:
  2292                           
  2293                           ; BSR set to: 0
  2294  00351E  AF88               	btfss	(calcSteering@delta+1)& (0+255),7,b
  2295  003520  EF9B  F01A         	goto	u9871
  2296  003524  0EE7               	movlw	231
  2297  003526  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2298  003528  0EFF               	movlw	255
  2299  00352A  5988               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  2300  00352C  B0D8               	btfsc	status,0,c
  2301  00352E  EF9B  F01A         	goto	u9871
  2302  003532  EF9D  F01A         	goto	u9870
  2303  003536                     u9871:
  2304  003536  EFC4  F01A         	goto	l1324
  2305  00353A                     u9870:
  2306  00353A                     
  2307                           ; BSR set to: 0
  2308                           ;main.c: 247:                 delta = -(25);
  2309  00353A  0EFF               	movlw	255
  2310  00353C  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2311  00353E  0EE7               	movlw	231
  2312  003540  6F87               	movwf	calcSteering@delta& (0+255),b
  2313  003542  EF2C  F01B         	goto	l8896
  2314  003546                     l8870:
  2315                           
  2316                           ; BSR set to: 0
  2317  003546  51FE               	movf	_driveMode& (0+255),w,b
  2318  003548  6F83               	movwf	??_calcSteering& (0+255),b
  2319  00354A  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2320                           
  2321                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2322                           ; Switch size 1, requested type "simple"
  2323                           ; Number of cases is 1, Range of values is 0 to 0
  2324                           ; switch strategies available:
  2325                           ; Name         Instructions Cycles
  2326                           ; simple_byte            4     3 (average)
  2327                           ;	Chosen strategy is simple_byte
  2328  00354C  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2329  00354E  0A00               	xorlw	0	; case 0
  2330  003550  B4D8               	btfsc	status,2,c
  2331  003552  EFAD  F01A         	goto	l9308
  2332  003556  EF2C  F01B         	goto	l8896
  2333  00355A                     l9308:
  2334                           
  2335                           ; BSR set to: 0
  2336                           ; Switch size 1, requested type "simple"
  2337                           ; Number of cases is 5, Range of values is 0 to 6
  2338                           ; switch strategies available:
  2339                           ; Name         Instructions Cycles
  2340                           ; simple_byte           16     9 (average)
  2341                           ;	Chosen strategy is simple_byte
  2342  00355A  5183               	movf	??_calcSteering& (0+255),w,b
  2343  00355C  0A00               	xorlw	0	; case 0
  2344  00355E  B4D8               	btfsc	status,2,c
  2345  003560  EF7B  F01A         	goto	l1319
  2346  003564  0A01               	xorlw	1	; case 1
  2347  003566  B4D8               	btfsc	status,2,c
  2348  003568  EF7B  F01A         	goto	l8860
  2349  00356C  0A03               	xorlw	3	; case 2
  2350  00356E  B4D8               	btfsc	status,2,c
  2351  003570  EF7B  F01A         	goto	l8860
  2352  003574  0A07               	xorlw	7	; case 5
  2353  003576  B4D8               	btfsc	status,2,c
  2354  003578  EF7B  F01A         	goto	l8860
  2355  00357C  0A03               	xorlw	3	; case 6
  2356  00357E  B4D8               	btfsc	status,2,c
  2357  003580  EF7B  F01A         	goto	l8860
  2358  003584  EF2C  F01B         	goto	l8896
  2359  003588                     l1324:
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;main.c: 254:     switch (driveMode) {
  2363  003588  EF2C  F01B         	goto	l8896
  2364  00358C                     l8872:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;main.c: 256:             setSteering(delta, Ratio);
  2368  00358C  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2369  003590  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2370  003594  0E02               	movlw	2
  2371  003596  6E1E               	movwf	setSteering@steeringMode^0,c
  2372  003598  EC40  F01E         	call	_setSteering	;wreg free
  2373                           
  2374                           ;main.c: 257:             break;
  2375  00359C  EF55  F01B         	goto	l1339
  2376  0035A0                     l8874:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;main.c: 259:             setSteering(delta, Front);
  2380  0035A0  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2381  0035A4  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2382  0035A8  0E03               	movlw	3
  2383  0035AA  6E1E               	movwf	setSteering@steeringMode^0,c
  2384  0035AC  EC40  F01E         	call	_setSteering	;wreg free
  2385                           
  2386                           ;main.c: 260:             break;
  2387  0035B0  EF55  F01B         	goto	l1339
  2388  0035B4                     l8876:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;main.c: 262:             setSteering(delta / (2), Front);
  2392  0035B4  C087  F014         	movff	calcSteering@delta,___awdiv@dividend
  2393  0035B8  C088  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  2394  0035BC  0E00               	movlw	0
  2395  0035BE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2396  0035C0  0E02               	movlw	2
  2397  0035C2  6E16               	movwf	___awdiv@divisor^0,c
  2398  0035C4  EC67  F026         	call	___awdiv	;wreg free
  2399  0035C8  C014  F085         	movff	?___awdiv,_calcSteering$4174
  2400  0035CC  C015  F086         	movff	?___awdiv+1,_calcSteering$4174+1
  2401                           
  2402                           ;main.c: 262:             setSteering(delta / (2), Front);
  2403  0035D0  C085  F01C         	movff	_calcSteering$4174,setSteering@steering
  2404  0035D4  C086  F01D         	movff	_calcSteering$4174+1,setSteering@steering+1
  2405  0035D8  0E03               	movlw	3
  2406  0035DA  6E1E               	movwf	setSteering@steeringMode^0,c
  2407  0035DC  EC40  F01E         	call	_setSteering	;wreg free
  2408                           
  2409                           ;main.c: 264:             break;
  2410  0035E0  EF55  F01B         	goto	l1339
  2411  0035E4                     l8878:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 266:             setSteering(-(60), Inverted);
  2415  0035E4  0EFF               	movlw	255
  2416  0035E6  6E1D               	movwf	(setSteering@steering+1)^0,c
  2417  0035E8  0EC4               	movlw	196
  2418  0035EA  6E1C               	movwf	setSteering@steering^0,c
  2419  0035EC  0E00               	movlw	0
  2420  0035EE  6E1E               	movwf	setSteering@steeringMode^0,c
  2421  0035F0  EC40  F01E         	call	_setSteering	;wreg free
  2422                           
  2423                           ;main.c: 267:             break;
  2424  0035F4  EF55  F01B         	goto	l1339
  2425  0035F8                     l8880:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 269:             setSteering((60), Inverted);
  2429  0035F8  0E00               	movlw	0
  2430  0035FA  6E1D               	movwf	(setSteering@steering+1)^0,c
  2431  0035FC  0E3C               	movlw	60
  2432  0035FE  6E1C               	movwf	setSteering@steering^0,c
  2433  003600  0E00               	movlw	0
  2434  003602  6E1E               	movwf	setSteering@steeringMode^0,c
  2435  003604  EC40  F01E         	call	_setSteering	;wreg free
  2436                           
  2437                           ;main.c: 270:             break;
  2438  003608  EF55  F01B         	goto	l1339
  2439  00360C                     l8882:
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 272:             if (curveMode == InCurve) {
  2443  00360C  0E02               	movlw	2
  2444  00360E  19FB               	xorwf	_curveMode& (0+255),w,b
  2445  003610  A4D8               	btfss	status,2,c
  2446  003612  EF0D  F01B         	goto	u9881
  2447  003616  EF0F  F01B         	goto	u9880
  2448  00361A                     u9881:
  2449  00361A  EFC6  F01A         	goto	l8872
  2450  00361E                     u9880:
  2451  00361E                     
  2452                           ; BSR set to: 0
  2453                           ;main.c: 273:                 setSteering((60), Ratio);
  2454  00361E  0E00               	movlw	0
  2455  003620  6E1D               	movwf	(setSteering@steering+1)^0,c
  2456  003622  0E3C               	movlw	60
  2457  003624  6E1C               	movwf	setSteering@steering^0,c
  2458  003626  0E02               	movlw	2
  2459  003628  6E1E               	movwf	setSteering@steeringMode^0,c
  2460  00362A  EC40  F01E         	call	_setSteering	;wreg free
  2461                           
  2462                           ;main.c: 274:             } else {
  2463  00362E  EF55  F01B         	goto	l1339
  2464  003632                     l8888:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;main.c: 279:             if (curveMode == InCurve) {
  2468  003632  0E02               	movlw	2
  2469  003634  19FB               	xorwf	_curveMode& (0+255),w,b
  2470  003636  A4D8               	btfss	status,2,c
  2471  003638  EF20  F01B         	goto	u9891
  2472  00363C  EF22  F01B         	goto	u9890
  2473  003640                     u9891:
  2474  003640  EFC6  F01A         	goto	l8872
  2475  003644                     u9890:
  2476  003644                     
  2477                           ; BSR set to: 0
  2478                           ;main.c: 280:                 setSteering(-(60), Ratio);
  2479  003644  0EFF               	movlw	255
  2480  003646  6E1D               	movwf	(setSteering@steering+1)^0,c
  2481  003648  0EC4               	movlw	196
  2482  00364A  6E1C               	movwf	setSteering@steering^0,c
  2483  00364C  0E02               	movlw	2
  2484  00364E  6E1E               	movwf	setSteering@steeringMode^0,c
  2485  003650  EC40  F01E         	call	_setSteering	;wreg free
  2486                           
  2487                           ;main.c: 281:             } else {
  2488  003654  EF55  F01B         	goto	l1339
  2489  003658                     l8896:
  2490                           
  2491                           ; BSR set to: 0
  2492  003658  51FE               	movf	_driveMode& (0+255),w,b
  2493  00365A  6F83               	movwf	??_calcSteering& (0+255),b
  2494  00365C  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2495                           
  2496                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2497                           ; Switch size 1, requested type "simple"
  2498                           ; Number of cases is 1, Range of values is 0 to 0
  2499                           ; switch strategies available:
  2500                           ; Name         Instructions Cycles
  2501                           ; simple_byte            4     3 (average)
  2502                           ;	Chosen strategy is simple_byte
  2503  00365E  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2504  003660  0A00               	xorlw	0	; case 0
  2505  003662  B4D8               	btfsc	status,2,c
  2506  003664  EF36  F01B         	goto	l9310
  2507  003668  EF55  F01B         	goto	l1339
  2508  00366C                     l9310:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ; Switch size 1, requested type "simple"
  2512                           ; Number of cases is 7, Range of values is 0 to 6
  2513                           ; switch strategies available:
  2514                           ; Name         Instructions Cycles
  2515                           ; simple_byte           22    12 (average)
  2516                           ;	Chosen strategy is simple_byte
  2517  00366C  5183               	movf	??_calcSteering& (0+255),w,b
  2518  00366E  0A00               	xorlw	0	; case 0
  2519  003670  B4D8               	btfsc	status,2,c
  2520  003672  EFDA  F01A         	goto	l8876
  2521  003676  0A01               	xorlw	1	; case 1
  2522  003678  B4D8               	btfsc	status,2,c
  2523  00367A  EFD0  F01A         	goto	l8874
  2524  00367E  0A03               	xorlw	3	; case 2
  2525  003680  B4D8               	btfsc	status,2,c
  2526  003682  EFC6  F01A         	goto	l8872
  2527  003686  0A01               	xorlw	1	; case 3
  2528  003688  B4D8               	btfsc	status,2,c
  2529  00368A  EFF2  F01A         	goto	l8878
  2530  00368E  0A07               	xorlw	7	; case 4
  2531  003690  B4D8               	btfsc	status,2,c
  2532  003692  EFFC  F01A         	goto	l8880
  2533  003696  0A01               	xorlw	1	; case 5
  2534  003698  B4D8               	btfsc	status,2,c
  2535  00369A  EF06  F01B         	goto	l8882
  2536  00369E  0A03               	xorlw	3	; case 6
  2537  0036A0  B4D8               	btfsc	status,2,c
  2538  0036A2  EF19  F01B         	goto	l8888
  2539  0036A6  EF55  F01B         	goto	l1339
  2540  0036AA                     l1339:
  2541  0036AA  0012               	return		;funcret
  2542  0036AC                     __end_of_calcSteering:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _getReverse *****************
  2546 ;; Defined at:
  2547 ;;		line 199 in file "main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 8
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_loop
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text4
  2576  004724                     __ptext4:
  2577                           	callstack 0
  2578  004724                     _getReverse:
  2579                           	callstack 21
  2580  004724                     
  2581                           ;main.c: 200:     if (distFront < (15)) {
  2582  004724  0100               	movlb	0	; () banked
  2583  004726  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2584  004728  E107               	bnz	u6661
  2585  00472A  0E0F               	movlw	15
  2586  00472C  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2587  00472E  B0D8               	btfsc	status,0,c
  2588  004730  EF9C  F023         	goto	u6661
  2589  004734  EF9E  F023         	goto	u6660
  2590  004738                     u6661:
  2591  004738  EFA3  F023         	goto	l6916
  2592  00473C                     u6660:
  2593  00473C                     
  2594                           ; BSR set to: 0
  2595                           ;main.c: 201:         ++reverseCount;
  2596  00473C  0101               	movlb	1	; () banked
  2597  00473E  4B32               	infsnz	_reverseCount& (0+255),f,b
  2598  004740  2B33               	incf	(_reverseCount+1)& (0+255),f,b
  2599                           
  2600                           ;main.c: 202:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2601  004742  EFBA  F023         	goto	l6922
  2602  004746                     l6916:
  2603                           
  2604                           ; BSR set to: 0
  2605  004746  0E03               	movlw	3
  2606  004748  19FE               	xorwf	_driveMode& (0+255),w,b
  2607  00474A  B4D8               	btfsc	status,2,c
  2608  00474C  EFAA  F023         	goto	u6671
  2609  004750  EFAC  F023         	goto	u6670
  2610  004754                     u6671:
  2611  004754  EFBA  F023         	goto	l6922
  2612  004758                     u6670:
  2613  004758                     
  2614                           ; BSR set to: 0
  2615  004758  0E04               	movlw	4
  2616  00475A  19FE               	xorwf	_driveMode& (0+255),w,b
  2617  00475C  B4D8               	btfsc	status,2,c
  2618  00475E  EFB3  F023         	goto	u6681
  2619  004762  EFB5  F023         	goto	u6680
  2620  004766                     u6681:
  2621  004766  EFBA  F023         	goto	l6922
  2622  00476A                     u6680:
  2623  00476A                     
  2624                           ; BSR set to: 0
  2625                           ;main.c: 203:         reverseCount = 0;
  2626  00476A  0E00               	movlw	0
  2627  00476C  0101               	movlb	1	; () banked
  2628  00476E  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2629  004770  0E00               	movlw	0
  2630  004772  6F32               	movwf	_reverseCount& (0+255),b
  2631  004774                     l6922:
  2632                           
  2633                           ;main.c: 206:     if (reverseCount > (50)) {
  2634  004774  0101               	movlb	1	; () banked
  2635  004776  5133               	movf	(_reverseCount+1)& (0+255),w,b
  2636  004778  E109               	bnz	u6690
  2637  00477A  0E33               	movlw	51
  2638  00477C  5D32               	subwf	_reverseCount& (0+255),w,b
  2639  00477E  A0D8               	btfss	status,0,c
  2640  004780  EFC4  F023         	goto	u6691
  2641  004784  EFC6  F023         	goto	u6690
  2642  004788                     u6691:
  2643  004788  EF14  F024         	goto	l1312
  2644  00478C                     u6690:
  2645  00478C                     
  2646                           ; BSR set to: 1
  2647                           ;main.c: 207:         ++reverseTime;
  2648  00478C  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2649  00478E  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2650  004790                     
  2651                           ; BSR set to: 1
  2652                           ;main.c: 209:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2653  004790  0E03               	movlw	3
  2654  004792  0100               	movlb	0	; () banked
  2655  004794  19FE               	xorwf	_driveMode& (0+255),w,b
  2656  004796  B4D8               	btfsc	status,2,c
  2657  004798  EFD0  F023         	goto	u6701
  2658  00479C  EFD2  F023         	goto	u6700
  2659  0047A0                     u6701:
  2660  0047A0  EFEC  F023         	goto	l6936
  2661  0047A4                     u6700:
  2662  0047A4                     
  2663                           ; BSR set to: 0
  2664  0047A4  0E04               	movlw	4
  2665  0047A6  19FE               	xorwf	_driveMode& (0+255),w,b
  2666  0047A8  B4D8               	btfsc	status,2,c
  2667  0047AA  EFD9  F023         	goto	u6711
  2668  0047AE  EFDB  F023         	goto	u6710
  2669  0047B2                     u6711:
  2670  0047B2  EFEC  F023         	goto	l6936
  2671  0047B6                     u6710:
  2672  0047B6                     
  2673                           ; BSR set to: 0
  2674                           ;main.c: 210:             if (distLeft > distRight) {
  2675  0047B6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2676  0047B8  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2677  0047BA  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2678  0047BC  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2679  0047BE  B0D8               	btfsc	status,0,c
  2680  0047C0  EFE4  F023         	goto	u6721
  2681  0047C4  EFE6  F023         	goto	u6720
  2682  0047C8                     u6721:
  2683  0047C8  EFEA  F023         	goto	l6934
  2684  0047CC                     u6720:
  2685  0047CC                     
  2686                           ; BSR set to: 0
  2687                           ;main.c: 212:                 driveMode = ReverseRight;
  2688  0047CC  0E03               	movlw	3
  2689  0047CE  6FFE               	movwf	_driveMode& (0+255),b
  2690                           
  2691                           ;main.c: 213:             } else {
  2692  0047D0  EFEC  F023         	goto	l6936
  2693  0047D4                     l6934:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;main.c: 215:                 driveMode = ReverseLeft;
  2697  0047D4  0E04               	movlw	4
  2698  0047D6  6FFE               	movwf	_driveMode& (0+255),b
  2699  0047D8                     l6936:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;main.c: 219:         if (distFront > (35) || reverseTime > (300)) {
  2703  0047D8  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2704  0047DA  E107               	bnz	u6731
  2705  0047DC  0E24               	movlw	36
  2706  0047DE  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2707  0047E0  B0D8               	btfsc	status,0,c
  2708  0047E2  EFF5  F023         	goto	u6731
  2709  0047E6  EFF7  F023         	goto	u6730
  2710  0047EA                     u6731:
  2711  0047EA  EF08  F024         	goto	l6940
  2712  0047EE                     u6730:
  2713  0047EE                     
  2714                           ; BSR set to: 0
  2715  0047EE  0101               	movlb	1	; () banked
  2716  0047F0  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2717  0047F2  EF04  F024         	goto	u6741
  2718  0047F6  0E2D               	movlw	45
  2719  0047F8  5D2A               	subwf	_reverseTime& (0+255),w,b
  2720  0047FA  0E01               	movlw	1
  2721  0047FC  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2722  0047FE  A0D8               	btfss	status,0,c
  2723  004800  EF04  F024         	goto	u6741
  2724  004804  EF06  F024         	goto	u6740
  2725  004808                     u6741:
  2726  004808  EF14  F024         	goto	l1312
  2727  00480C                     u6740:
  2728  00480C  EF08  F024         	goto	l6942
  2729  004810                     l6940:
  2730  004810                     l6942:
  2731                           
  2732                           ;main.c: 222:                 driveMode = Straight;
  2733  004810  0E01               	movlw	1
  2734  004812  0100               	movlb	0	; () banked
  2735  004814  6FFE               	movwf	_driveMode& (0+255),b
  2736  004816                     
  2737                           ; BSR set to: 0
  2738                           ;main.c: 227:             reverseCount = 0;
  2739  004816  0E00               	movlw	0
  2740  004818  0101               	movlb	1	; () banked
  2741  00481A  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2742  00481C  0E00               	movlw	0
  2743  00481E  6F32               	movwf	_reverseCount& (0+255),b
  2744                           
  2745                           ;main.c: 228:             reverseTime = 0;
  2746  004820  0E00               	movlw	0
  2747  004822  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2748  004824  0E00               	movlw	0
  2749  004826  6F2A               	movwf	_reverseTime& (0+255),b
  2750  004828                     l1312:
  2751                           
  2752                           ; BSR set to: 1
  2753  004828  0012               	return		;funcret
  2754  00482A                     __end_of_getReverse:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _getCurve *****************
  2758 ;; Defined at:
  2759 ;;		line 128 in file "main.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  deltaLeft       2   18[BANK1 ] short 
  2764 ;;  deltaRight      2   16[BANK1 ] short 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;Total ram usage:        6 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 17
  2781 ;; This function calls:
  2782 ;;		_printf
  2783 ;; This function is called by:
  2784 ;;		_loop
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	text5
  2789  0031D4                     __ptext5:
  2790                           	callstack 0
  2791  0031D4                     _getCurve:
  2792                           	callstack 12
  2793  0031D4                     
  2794                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2795  0031D4  0100               	movlb	0	; () banked
  2796  0031D6  51EF               	movf	_oldDistLeft& (0+255),w,b
  2797  0031D8  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2798  0031DA  0101               	movlb	1	; () banked
  2799  0031DC  6FAC               	movwf	getCurve@deltaLeft& (0+255),b
  2800  0031DE  0100               	movlb	0	; () banked
  2801  0031E0  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2802  0031E2  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2803  0031E4  0101               	movlb	1	; () banked
  2804  0031E6  6FAD               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2805                           
  2806                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2807  0031E8  0100               	movlb	0	; () banked
  2808  0031EA  51ED               	movf	_oldDistRight& (0+255),w,b
  2809  0031EC  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2810  0031EE  0101               	movlb	1	; () banked
  2811  0031F0  6FAA               	movwf	getCurve@deltaRight& (0+255),b
  2812  0031F2  0100               	movlb	0	; () banked
  2813  0031F4  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2814  0031F6  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2815  0031F8  0101               	movlb	1	; () banked
  2816  0031FA  6FAB               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2817                           
  2818                           ;main.c: 132:     switch (curveMode) {
  2819  0031FC  EF16  F01A         	goto	l9042
  2820  003200                     l8974:
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2824  003200  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2825  003202  EF0C  F019         	goto	u9951
  2826  003206  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2827  003208  E109               	bnz	u9950
  2828  00320A  0E1F               	movlw	31
  2829  00320C  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2830  00320E  A0D8               	btfss	status,0,c
  2831  003210  EF0C  F019         	goto	u9951
  2832  003214  EF0E  F019         	goto	u9950
  2833  003218                     u9951:
  2834  003218  EF30  F019         	goto	l8982
  2835  00321C                     u9950:
  2836  00321C                     
  2837                           ; BSR set to: 1
  2838  00321C  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2839  00321E  EF1C  F019         	goto	u9960
  2840  003222  0E2C               	movlw	44
  2841  003224  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2842  003226  0E01               	movlw	1
  2843  003228  59AD               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2844  00322A  B0D8               	btfsc	status,0,c
  2845  00322C  EF1A  F019         	goto	u9961
  2846  003230  EF1C  F019         	goto	u9960
  2847  003234                     u9961:
  2848  003234  EF30  F019         	goto	l8982
  2849  003238                     u9960:
  2850  003238                     
  2851                           ; BSR set to: 1
  2852  003238  0100               	movlb	0	; () banked
  2853  00323A  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2854  00323C  E107               	bnz	u9971
  2855  00323E  0E7D               	movlw	125
  2856  003240  5DEF               	subwf	_oldDistLeft& (0+255),w,b
  2857  003242  B0D8               	btfsc	status,0,c
  2858  003244  EF26  F019         	goto	u9971
  2859  003248  EF28  F019         	goto	u9970
  2860  00324C                     u9971:
  2861  00324C  EF30  F019         	goto	l8982
  2862  003250                     u9970:
  2863  003250                     
  2864                           ; BSR set to: 0
  2865                           ;main.c: 135:                 delay = 0;
  2866  003250  0E00               	movlw	0
  2867  003252  6FF9               	movwf	_delay& (0+255),b
  2868                           
  2869                           ;main.c: 136:                 curveMode = BeforeCurve;
  2870  003254  0E01               	movlw	1
  2871  003256  6FFB               	movwf	_curveMode& (0+255),b
  2872                           
  2873                           ;main.c: 137:                 driveMode = CurveLeft;
  2874  003258  0E05               	movlw	5
  2875  00325A  6FFE               	movwf	_driveMode& (0+255),b
  2876                           
  2877                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2878  00325C  EF35  F01A         	goto	l1277
  2879  003260                     l8982:
  2880  003260  0101               	movlb	1	; () banked
  2881  003262  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2882  003264  EF3D  F019         	goto	u9981
  2883  003268  51AB               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2884  00326A  E109               	bnz	u9980
  2885  00326C  0E1F               	movlw	31
  2886  00326E  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2887  003270  A0D8               	btfss	status,0,c
  2888  003272  EF3D  F019         	goto	u9981
  2889  003276  EF3F  F019         	goto	u9980
  2890  00327A                     u9981:
  2891  00327A  EF35  F01A         	goto	l1277
  2892  00327E                     u9980:
  2893  00327E                     
  2894                           ; BSR set to: 1
  2895  00327E  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2896  003280  EF4D  F019         	goto	u9990
  2897  003284  0E2C               	movlw	44
  2898  003286  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2899  003288  0E01               	movlw	1
  2900  00328A  59AB               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2901  00328C  B0D8               	btfsc	status,0,c
  2902  00328E  EF4B  F019         	goto	u9991
  2903  003292  EF4D  F019         	goto	u9990
  2904  003296                     u9991:
  2905  003296  EF35  F01A         	goto	l1277
  2906  00329A                     u9990:
  2907  00329A                     
  2908                           ; BSR set to: 1
  2909  00329A  0100               	movlb	0	; () banked
  2910  00329C  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2911  00329E  E107               	bnz	u10001
  2912  0032A0  0E7D               	movlw	125
  2913  0032A2  5DED               	subwf	_oldDistRight& (0+255),w,b
  2914  0032A4  B0D8               	btfsc	status,0,c
  2915  0032A6  EF57  F019         	goto	u10001
  2916  0032AA  EF59  F019         	goto	u10000
  2917  0032AE                     u10001:
  2918  0032AE  EF35  F01A         	goto	l1277
  2919  0032B2                     u10000:
  2920  0032B2                     
  2921                           ; BSR set to: 0
  2922                           ;main.c: 141:                 delay = 0;
  2923  0032B2  0E00               	movlw	0
  2924  0032B4  6FF9               	movwf	_delay& (0+255),b
  2925                           
  2926                           ;main.c: 142:                 curveMode = BeforeCurve;
  2927  0032B6  0E01               	movlw	1
  2928  0032B8  6FFB               	movwf	_curveMode& (0+255),b
  2929                           
  2930                           ;main.c: 143:                 driveMode = CurveRight;
  2931  0032BA  0E06               	movlw	6
  2932  0032BC  6FFE               	movwf	_driveMode& (0+255),b
  2933  0032BE  EF35  F01A         	goto	l1277
  2934  0032C2                     l8990:
  2935                           
  2936                           ; BSR set to: 1
  2937                           ;main.c: 150:             if (delay >= (20)) {
  2938  0032C2  0E13               	movlw	19
  2939  0032C4  0100               	movlb	0	; () banked
  2940  0032C6  65F9               	cpfsgt	_delay& (0+255),b
  2941  0032C8  EF68  F019         	goto	u10011
  2942  0032CC  EF6A  F019         	goto	u10010
  2943  0032D0                     u10011:
  2944  0032D0  EF70  F019         	goto	l8994
  2945  0032D4                     u10010:
  2946  0032D4                     
  2947                           ; BSR set to: 0
  2948                           ;main.c: 151:                 delay = 0;
  2949  0032D4  0E00               	movlw	0
  2950  0032D6  6FF9               	movwf	_delay& (0+255),b
  2951                           
  2952                           ;main.c: 152:                 curveMode = InCurve;
  2953  0032D8  0E02               	movlw	2
  2954  0032DA  6FFB               	movwf	_curveMode& (0+255),b
  2955                           
  2956                           ;main.c: 154:             } else {
  2957  0032DC  EF35  F01A         	goto	l1277
  2958  0032E0                     l8994:
  2959                           
  2960                           ;main.c: 155:                 ++delay;
  2961  0032E0  0100               	movlb	0	; () banked
  2962  0032E2  2BF9               	incf	_delay& (0+255),f,b
  2963  0032E4  EF35  F01A         	goto	l1277
  2964  0032E8                     l8996:
  2965                           
  2966                           ; BSR set to: 1
  2967                           ;main.c: 159:             if (delay >= (25)) {
  2968  0032E8  0E18               	movlw	24
  2969  0032EA  0100               	movlb	0	; () banked
  2970  0032EC  65F9               	cpfsgt	_delay& (0+255),b
  2971  0032EE  EF7B  F019         	goto	u10021
  2972  0032F2  EF7D  F019         	goto	u10020
  2973  0032F6                     u10021:
  2974  0032F6  EF70  F019         	goto	l8994
  2975  0032FA                     u10020:
  2976  0032FA                     
  2977                           ; BSR set to: 0
  2978                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (150)) {
  2979  0032FA  0E05               	movlw	5
  2980  0032FC  19FE               	xorwf	_driveMode& (0+255),w,b
  2981  0032FE  A4D8               	btfss	status,2,c
  2982  003300  EF84  F019         	goto	u10031
  2983  003304  EF86  F019         	goto	u10030
  2984  003308                     u10031:
  2985  003308  EF91  F019         	goto	l9002
  2986  00330C                     u10030:
  2987  00330C                     
  2988                           ; BSR set to: 0
  2989  00330C  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2990  00330E  E109               	bnz	u10040
  2991  003310  0E2D               	movlw	45
  2992  003312  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2993  003314  A0D8               	btfss	status,0,c
  2994  003316  EF8F  F019         	goto	u10041
  2995  00331A  EF91  F019         	goto	u10040
  2996  00331E                     u10041:
  2997  00331E  EFB0  F019         	goto	l9008
  2998  003322                     u10040:
  2999  003322                     l9002:
  3000                           
  3001                           ; BSR set to: 0
  3002  003322  0E06               	movlw	6
  3003  003324  19FE               	xorwf	_driveMode& (0+255),w,b
  3004  003326  A4D8               	btfss	status,2,c
  3005  003328  EF98  F019         	goto	u10051
  3006  00332C  EF9A  F019         	goto	u10050
  3007  003330                     u10051:
  3008  003330  EFA5  F019         	goto	l9006
  3009  003334                     u10050:
  3010  003334                     
  3011                           ; BSR set to: 0
  3012  003334  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3013  003336  E109               	bnz	u10060
  3014  003338  0E2D               	movlw	45
  3015  00333A  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  3016  00333C  A0D8               	btfss	status,0,c
  3017  00333E  EFA3  F019         	goto	u10061
  3018  003342  EFA5  F019         	goto	u10060
  3019  003346                     u10061:
  3020  003346  EFB0  F019         	goto	l9008
  3021  00334A                     u10060:
  3022  00334A                     l9006:
  3023                           
  3024                           ; BSR set to: 0
  3025  00334A  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  3026  00334C  E109               	bnz	u10070
  3027  00334E  0E97               	movlw	151
  3028  003350  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  3029  003352  A0D8               	btfss	status,0,c
  3030  003354  EFAE  F019         	goto	u10071
  3031  003358  EFB0  F019         	goto	u10070
  3032  00335C                     u10071:
  3033  00335C  EFE6  F019         	goto	l9026
  3034  003360                     u10070:
  3035  003360                     l9008:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;main.c: 161:                     printf("Time: %d     ", delay);
  3039  003360  0E15               	movlw	low STR_5
  3040  003362  0101               	movlb	1	; () banked
  3041  003364  6FA0               	movwf	printf@fmt& (0+255),b
  3042  003366  0E10               	movlw	high STR_5
  3043  003368  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3044  00336A  C0F9  F1A2         	movff	_delay,?_printf+2
  3045  00336E  6BA3               	clrf	(?_printf+3)& (0+255),b
  3046  003370  EC58  F02E         	call	_printf	;wreg free
  3047  003374                     
  3048                           ;main.c: 162:                     if (delay >= 70) {
  3049  003374  0E45               	movlw	69
  3050  003376  0100               	movlb	0	; () banked
  3051  003378  65F9               	cpfsgt	_delay& (0+255),b
  3052  00337A  EFC1  F019         	goto	u10081
  3053  00337E  EFC3  F019         	goto	u10080
  3054  003382                     u10081:
  3055  003382  EFD1  F019         	goto	l9016
  3056  003386                     u10080:
  3057  003386                     
  3058                           ; BSR set to: 0
  3059                           ;main.c: 163:                         printf("stay Left\n");
  3060  003386  0E48               	movlw	low STR_6
  3061  003388  0101               	movlb	1	; () banked
  3062  00338A  6FA0               	movwf	printf@fmt& (0+255),b
  3063  00338C  0E10               	movlw	high STR_6
  3064  00338E  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3065  003390  EC58  F02E         	call	_printf	;wreg free
  3066  003394                     
  3067                           ;main.c: 164:                         middleOffSet = -15;
  3068  003394  0EFF               	movlw	255
  3069  003396  0101               	movlb	1	; () banked
  3070  003398  6FAF               	movwf	(_middleOffSet+1)& (0+255),b
  3071  00339A  0EF1               	movlw	241
  3072  00339C  6FAE               	movwf	_middleOffSet& (0+255),b
  3073                           
  3074                           ;main.c: 165:                     } else {
  3075  00339E  EFDD  F019         	goto	l9020
  3076  0033A2                     l9016:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;main.c: 166:                         printf("stay Right\n");
  3080  0033A2  0E30               	movlw	low STR_7
  3081  0033A4  0101               	movlb	1	; () banked
  3082  0033A6  6FA0               	movwf	printf@fmt& (0+255),b
  3083  0033A8  0E10               	movlw	high STR_7
  3084  0033AA  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3085  0033AC  EC58  F02E         	call	_printf	;wreg free
  3086  0033B0                     
  3087                           ;main.c: 167:                         middleOffSet = 15;
  3088  0033B0  0E00               	movlw	0
  3089  0033B2  0101               	movlb	1	; () banked
  3090  0033B4  6FAF               	movwf	(_middleOffSet+1)& (0+255),b
  3091  0033B6  0E0F               	movlw	15
  3092  0033B8  6FAE               	movwf	_middleOffSet& (0+255),b
  3093  0033BA                     l9020:
  3094                           
  3095                           ; BSR set to: 1
  3096                           ;main.c: 170:                     delay = 0;
  3097  0033BA  0E00               	movlw	0
  3098  0033BC  0100               	movlb	0	; () banked
  3099  0033BE  6FF9               	movwf	_delay& (0+255),b
  3100  0033C0                     
  3101                           ; BSR set to: 0
  3102                           ;main.c: 171:                     curveMode = AfterCurve;
  3103  0033C0  0E03               	movlw	3
  3104  0033C2  6FFB               	movwf	_curveMode& (0+255),b
  3105  0033C4                     
  3106                           ; BSR set to: 0
  3107                           ;main.c: 172:                     driveMode = Straight;
  3108  0033C4  0E01               	movlw	1
  3109  0033C6  6FFE               	movwf	_driveMode& (0+255),b
  3110                           
  3111                           ;main.c: 175:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  3112  0033C8  EF70  F019         	goto	l8994
  3113  0033CC                     l9026:
  3114                           
  3115                           ; BSR set to: 0
  3116  0033CC  0E06               	movlw	6
  3117  0033CE  19FE               	xorwf	_driveMode& (0+255),w,b
  3118  0033D0  A4D8               	btfss	status,2,c
  3119  0033D2  EFED  F019         	goto	u10091
  3120  0033D6  EFEF  F019         	goto	u10090
  3121  0033DA                     u10091:
  3122  0033DA  EF70  F019         	goto	l8994
  3123  0033DE                     u10090:
  3124  0033DE                     
  3125                           ; BSR set to: 0
  3126  0033DE  0101               	movlb	1	; () banked
  3127  0033E0  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  3128  0033E2  EFFC  F019         	goto	u10101
  3129  0033E6  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  3130  0033E8  E109               	bnz	u10100
  3131  0033EA  0E1F               	movlw	31
  3132  0033EC  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  3133  0033EE  A0D8               	btfss	status,0,c
  3134  0033F0  EFFC  F019         	goto	u10101
  3135  0033F4  EFFE  F019         	goto	u10100
  3136  0033F8                     u10101:
  3137  0033F8  EF70  F019         	goto	l8994
  3138  0033FC                     u10100:
  3139  0033FC                     
  3140                           ; BSR set to: 1
  3141                           ;main.c: 177:                     delay = 0;
  3142  0033FC  0E00               	movlw	0
  3143  0033FE  0100               	movlb	0	; () banked
  3144  003400  6FF9               	movwf	_delay& (0+255),b
  3145                           
  3146                           ;main.c: 178:                     curveMode = BeforeCurve;
  3147  003402  0E01               	movlw	1
  3148  003404  6FFB               	movwf	_curveMode& (0+255),b
  3149                           
  3150                           ;main.c: 179:                     driveMode = CurveLeft;
  3151  003406  0E05               	movlw	5
  3152  003408  6FFE               	movwf	_driveMode& (0+255),b
  3153  00340A  EF70  F019         	goto	l8994
  3154  00340E                     l9034:
  3155                           
  3156                           ; BSR set to: 1
  3157                           ;main.c: 186:             if (delay >= (1)) {
  3158  00340E  0100               	movlb	0	; () banked
  3159  003410  51F9               	movf	_delay& (0+255),w,b
  3160  003412  B4D8               	btfsc	status,2,c
  3161  003414  EF0E  F01A         	goto	u10111
  3162  003418  EF10  F01A         	goto	u10110
  3163  00341C                     u10111:
  3164  00341C  EF70  F019         	goto	l8994
  3165  003420                     u10110:
  3166  003420                     
  3167                           ; BSR set to: 0
  3168                           ;main.c: 187:                 delay = 0;
  3169  003420  0E00               	movlw	0
  3170  003422  6FF9               	movwf	_delay& (0+255),b
  3171                           
  3172                           ;main.c: 188:                 curveMode = OutCurve;
  3173  003424  0E00               	movlw	0
  3174  003426  6FFB               	movwf	_curveMode& (0+255),b
  3175                           
  3176                           ;main.c: 190:             } else {
  3177  003428  EF35  F01A         	goto	l1277
  3178  00342C                     l9042:
  3179                           
  3180                           ; BSR set to: 1
  3181  00342C  0100               	movlb	0	; () banked
  3182  00342E  51FB               	movf	_curveMode& (0+255),w,b
  3183  003430  0101               	movlb	1	; () banked
  3184  003432  6FA8               	movwf	??_getCurve& (0+255),b
  3185  003434  6BA9               	clrf	(??_getCurve+1)& (0+255),b
  3186                           
  3187                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 1, Range of values is 0 to 0
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte            4     3 (average)
  3193                           ;	Chosen strategy is simple_byte
  3194  003436  51A9               	movf	(??_getCurve+1)& (0+255),w,b
  3195  003438  0A00               	xorlw	0	; case 0
  3196  00343A  B4D8               	btfsc	status,2,c
  3197  00343C  EF22  F01A         	goto	l9312
  3198  003440  EF35  F01A         	goto	l1277
  3199  003444                     l9312:
  3200                           
  3201                           ; BSR set to: 1
  3202                           ; Switch size 1, requested type "simple"
  3203                           ; Number of cases is 4, Range of values is 0 to 3
  3204                           ; switch strategies available:
  3205                           ; Name         Instructions Cycles
  3206                           ; simple_byte           13     7 (average)
  3207                           ;	Chosen strategy is simple_byte
  3208  003444  51A8               	movf	??_getCurve& (0+255),w,b
  3209  003446  0A00               	xorlw	0	; case 0
  3210  003448  B4D8               	btfsc	status,2,c
  3211  00344A  EF00  F019         	goto	l8974
  3212  00344E  0A01               	xorlw	1	; case 1
  3213  003450  B4D8               	btfsc	status,2,c
  3214  003452  EF61  F019         	goto	l8990
  3215  003456  0A03               	xorlw	3	; case 2
  3216  003458  B4D8               	btfsc	status,2,c
  3217  00345A  EF74  F019         	goto	l8996
  3218  00345E  0A01               	xorlw	1	; case 3
  3219  003460  B4D8               	btfsc	status,2,c
  3220  003462  EF07  F01A         	goto	l9034
  3221  003466  EF35  F01A         	goto	l1277
  3222  00346A                     l1277:
  3223                           
  3224                           ;main.c: 195:     oldDistLeft = distLeft;
  3225  00346A  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  3226  00346E  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3227                           
  3228                           ;main.c: 196:     oldDistRight = distRight;
  3229  003472  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  3230  003476  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  3231  00347A  0012               	return		;funcret
  3232  00347C                     __end_of_getCurve:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _printf *****************
  3236 ;; Defined at:
  3237 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  3240 ;;		 -> STR_7(12), STR_6(11), STR_5(14), STR_4(20), 
  3241 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;  ap              2   12[BANK1 ] PTR void [1]
  3244 ;;		 -> ?_printf(2), 
  3245 ;;  ret             2    0        int 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  2    6[BANK1 ] int 
  3248 ;; Registers used:
  3249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3255 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3256 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;Total ram usage:        8 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 16
  3262 ;; This function calls:
  3263 ;;		_vfprintf
  3264 ;; This function is called by:
  3265 ;;		_loop
  3266 ;;		_startAccell
  3267 ;;		_getCurve
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text6
  3272  005CB0                     __ptext6:
  3273                           	callstack 0
  3274  005CB0                     _printf:
  3275                           	callstack 12
  3276  005CB0  0EA2               	movlw	low (?_printf+2)
  3277  005CB2  0101               	movlb	1	; () banked
  3278  005CB4  6FA6               	movwf	printf@ap& (0+255),b
  3279  005CB6  0E01               	movlw	high (?_printf+2)
  3280  005CB8  6FA7               	movwf	(printf@ap+1)& (0+255),b
  3281  005CBA                     
  3282                           ; BSR set to: 1
  3283  005CBA  0E00               	movlw	0
  3284  005CBC  6F9A               	movwf	vfprintf@fp& (0+255),b
  3285  005CBE  0E00               	movlw	0
  3286  005CC0  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  3287  005CC2  C1A0  F19C         	movff	printf@fmt,vfprintf@fmt
  3288  005CC6  C1A1  F19D         	movff	printf@fmt+1,vfprintf@fmt+1
  3289  005CCA  0EA6               	movlw	low printf@ap
  3290  005CCC  6F9E               	movwf	vfprintf@ap& (0+255),b
  3291  005CCE  0E01               	movlw	high printf@ap
  3292  005CD0  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  3293  005CD2  EC67  F029         	call	_vfprintf	;wreg free
  3294  005CD6  0012               	return		;funcret
  3295  005CD8                     __end_of_printf:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _vfprintf *****************
  3299 ;; Defined at:
  3300 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3303 ;;		 -> NULL(0), 
  3304 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3305 ;;		 -> STR_7(12), STR_6(11), STR_5(14), STR_4(20), 
  3306 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3307 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3308 ;;		 -> printf@ap(2), 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3311 ;;		 -> STR_7(12), STR_6(11), STR_5(14), STR_4(20), 
  3312 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  2    0[BANK1 ] int 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        8 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 15
  3329 ;; This function calls:
  3330 ;;		_vfpfcnvrt
  3331 ;; This function is called by:
  3332 ;;		_printf
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text7
  3337  0052CE                     __ptext7:
  3338                           	callstack 0
  3339  0052CE                     _vfprintf:
  3340                           	callstack 12
  3341  0052CE                     
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3343  0052CE  C19C  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3344  0052D2  C19D  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3345  0052D6                     
  3346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3347  0052D6  0E00               	movlw	0
  3348  0052D8  0101               	movlb	1	; () banked
  3349  0052DA  6F29               	movwf	(_nout+1)& (0+255),b
  3350  0052DC  0E00               	movlw	0
  3351  0052DE  6F28               	movwf	_nout& (0+255),b
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3354  0052E0  EF89  F029         	goto	l8828
  3355  0052E4                     l8826:
  3356                           
  3357                           ; BSR set to: 1
  3358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3359  0052E4  C19A  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3360  0052E8  C19B  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3361  0052EC  0EE3               	movlw	low vfprintf@cfmt
  3362  0052EE  0100               	movlb	0	; () banked
  3363  0052F0  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3364  0052F2  0E00               	movlw	high vfprintf@cfmt
  3365  0052F4  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3366  0052F6  C19E  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3367  0052FA  C19F  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3368  0052FE  EC90  F00E         	call	_vfpfcnvrt	;wreg free
  3369  005302  0100               	movlb	0	; () banked
  3370  005304  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3371  005306  0101               	movlb	1	; () banked
  3372  005308  2728               	addwf	_nout& (0+255),f,b
  3373  00530A  0100               	movlb	0	; () banked
  3374  00530C  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3375  00530E  0101               	movlb	1	; () banked
  3376  005310  2329               	addwfc	(_nout+1)& (0+255),f,b
  3377  005312                     l8828:
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3381  005312  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3382  005318  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3383  00531E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3384  00531E  6AF8               	clrf	tblptru,c
  3385  005320                     	endif
  3386  005320                     	if	0	;tblptru may be non-zero
  3387  005320                     	endif
  3388  005320  0008               	tblrd		*
  3389  005322  50F5               	movf	tablat,w,c
  3390  005324  0900               	iorlw	0
  3391  005326  A4D8               	btfss	status,2,c
  3392  005328  EF98  F029         	goto	u9811
  3393  00532C  EF9A  F029         	goto	u9810
  3394  005330                     u9811:
  3395  005330  EF72  F029         	goto	l8826
  3396  005334                     u9810:
  3397  005334                     
  3398                           ; BSR set to: 1
  3399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3400  005334  C128  F19A         	movff	_nout,?_vfprintf
  3401  005338  C129  F19B         	movff	_nout+1,?_vfprintf+1
  3402  00533C                     
  3403                           ; BSR set to: 1
  3404  00533C  0012               	return		;funcret
  3405  00533E                     __end_of_vfprintf:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _vfpfcnvrt *****************
  3409 ;; Defined at:
  3410 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3413 ;;		 -> NULL(0), 
  3414 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3415 ;;		 -> vfprintf@cfmt(2), 
  3416 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3417 ;;		 -> printf@ap(2), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  ll              8  113[BANK0 ] long long 
  3420 ;;  llu             8    0        unsigned long long 
  3421 ;;  f               4  123[BANK0 ] unsigned long long 
  3422 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3423 ;;  vp              3    0        PTR void 
  3424 ;;  cp              3    0        PTR unsigned char 
  3425 ;;  i               2    0        int 
  3426 ;;  done            2    0        int 
  3427 ;;  c               1  130[BANK0 ] unsigned char 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2  103[BANK0 ] int 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3437 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;Total ram usage:       28 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 14
  3444 ;; This function calls:
  3445 ;;		_dtoa
  3446 ;;		_efgtoa
  3447 ;;		_fputc
  3448 ;;		_isupper
  3449 ;;		_strncmp
  3450 ;;		_tolower
  3451 ;; This function is called by:
  3452 ;;		_vfprintf
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text8
  3457  001D20                     __ptext8:
  3458                           	callstack 0
  3459  001D20                     _vfpfcnvrt:
  3460                           	callstack 12
  3461  001D20                     
  3462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3463  001D20  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3464  001D26  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3465  001D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3466  001D32  006F FF77 FFF7     	movff	postdec2,tblptrh
  3467  001D38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3468  001D38  6AF8               	clrf	tblptru,c
  3469  001D3A                     	endif
  3470  001D3A                     	if	0	;tblptru may be non-zero
  3471  001D3A                     	endif
  3472  001D3A  0008               	tblrd		*
  3473  001D3C  50F5               	movf	tablat,w,c
  3474  001D3E  0A25               	xorlw	37
  3475  001D40  A4D8               	btfss	status,2,c
  3476  001D42  EFA5  F00E         	goto	u9541
  3477  001D46  EFA7  F00E         	goto	u9540
  3478  001D4A                     u9541:
  3479  001D4A  EFFE  F010         	goto	l8724
  3480  001D4E                     u9540:
  3481  001D4E                     
  3482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3483  001D4E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3484  001D54  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3485  001D5A  2ADE               	incf	postinc2,f,c
  3486  001D5C  0E00               	movlw	0
  3487  001D5E  22DD               	addwfc	postdec2,f,c
  3488  001D60                     
  3489                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3490  001D60  0E00               	movlw	0
  3491  001D62  6E3B               	movwf	(_width+1)^0,c
  3492  001D64  0E00               	movlw	0
  3493  001D66  6E3A               	movwf	_width^0,c
  3494  001D68  C03A  F03E         	movff	_width,_flags
  3495  001D6C  C03B  F03F         	movff	_width+1,_flags+1
  3496  001D70                     
  3497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3498  001D70  683C               	setf	_prec^0,c
  3499  001D72  683D               	setf	(_prec+1)^0,c
  3500  001D74                     
  3501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3502  001D74  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3503  001D7A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3504  001D80  006F FF7B FFF6     	movff	postinc2,tblptrl
  3505  001D86  006F FF77 FFF7     	movff	postdec2,tblptrh
  3506  001D8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3507  001D8C  6AF8               	clrf	tblptru,c
  3508  001D8E                     	endif
  3509  001D8E                     	if	0	;tblptru may be non-zero
  3510  001D8E                     	endif
  3511  001D8E  0008               	tblrd		*
  3512  001D90  50F5               	movf	tablat,w,c
  3513  001D92  6E1A               	movwf	tolower@c^0,c
  3514  001D94  6A1B               	clrf	(tolower@c+1)^0,c
  3515  001D96  EC07  F02A         	call	_tolower	;wreg free
  3516  001D9A  501A               	movf	?_tolower^0,w,c
  3517  001D9C  0100               	movlb	0	; () banked
  3518  001D9E  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3519  001DA0                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3522  001DA0  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3523  001DA2  B4D8               	btfsc	status,2,c
  3524  001DA4  EFD6  F00E         	goto	u9551
  3525  001DA8  EFD8  F00E         	goto	u9550
  3526  001DAC                     u9551:
  3527  001DAC  EF20  F00F         	goto	l8670
  3528  001DB0                     u9550:
  3529  001DB0                     
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3532  001DB0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3533  001DB6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3534  001DBC  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3535  001DC2  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3536  001DC8  0E01               	movlw	1
  3537  001DCA  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3538  001DCC  0E00               	movlw	0
  3539  001DCE  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3540  001DD0  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3541  001DD6  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3542  001DDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3543  001DDC  6AF8               	clrf	tblptru,c
  3544  001DDE                     	endif
  3545  001DDE                     	if	0	;tblptru may be non-zero
  3546  001DDE                     	endif
  3547  001DDE  0008               	tblrd		*
  3548  001DE0  50F5               	movf	tablat,w,c
  3549  001DE2  6E1A               	movwf	tolower@c^0,c
  3550  001DE4  6A1B               	clrf	(tolower@c+1)^0,c
  3551  001DE6  EC07  F02A         	call	_tolower	;wreg free
  3552  001DEA  501A               	movf	?_tolower^0,w,c
  3553  001DEC  0100               	movlb	0	; () banked
  3554  001DEE  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3555  001DF0                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3558  001DF0  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3559  001DF2  B4D8               	btfsc	status,2,c
  3560  001DF4  EFFE  F00E         	goto	u9561
  3561  001DF8  EF00  F00F         	goto	u9560
  3562  001DFC                     u9561:
  3563  001DFC  EF20  F00F         	goto	l8670
  3564  001E00                     u9560:
  3565  001E00                     
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3568  001E00  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3569  001E06  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3570  001E0C  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3571  001E12  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3572  001E18  0E02               	movlw	2
  3573  001E1A  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3574  001E1C  0E00               	movlw	0
  3575  001E1E  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3576  001E20  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3577  001E26  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3578  001E2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3579  001E2C  6AF8               	clrf	tblptru,c
  3580  001E2E                     	endif
  3581  001E2E                     	if	0	;tblptru may be non-zero
  3582  001E2E                     	endif
  3583  001E2E  0008               	tblrd		*
  3584  001E30  50F5               	movf	tablat,w,c
  3585  001E32  6E1A               	movwf	tolower@c^0,c
  3586  001E34  6A1B               	clrf	(tolower@c+1)^0,c
  3587  001E36  EC07  F02A         	call	_tolower	;wreg free
  3588  001E3A  501A               	movf	?_tolower^0,w,c
  3589  001E3C  0100               	movlb	0	; () banked
  3590  001E3E  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3591  001E40                     l8670:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3595  001E40  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3596  001E46  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3597  001E4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3598  001E52  006F FF77 FFF7     	movff	postdec2,tblptrh
  3599  001E58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3600  001E58  6AF8               	clrf	tblptru,c
  3601  001E5A                     	endif
  3602  001E5A                     	if	0	;tblptru may be non-zero
  3603  001E5A                     	endif
  3604  001E5A  0008               	tblrd		*
  3605  001E5C  50F5               	movf	tablat,w,c
  3606  001E5E  0A64               	xorlw	100
  3607  001E60  B4D8               	btfsc	status,2,c
  3608  001E62  EF35  F00F         	goto	u9571
  3609  001E66  EF37  F00F         	goto	u9570
  3610  001E6A                     u9571:
  3611  001E6A  EF4E  F00F         	goto	l8674
  3612  001E6E                     u9570:
  3613  001E6E                     
  3614                           ; BSR set to: 0
  3615  001E6E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3616  001E74  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3617  001E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3618  001E80  006F FF77 FFF7     	movff	postdec2,tblptrh
  3619  001E86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3620  001E86  6AF8               	clrf	tblptru,c
  3621  001E88                     	endif
  3622  001E88                     	if	0	;tblptru may be non-zero
  3623  001E88                     	endif
  3624  001E88  0008               	tblrd		*
  3625  001E8A  50F5               	movf	tablat,w,c
  3626  001E8C  0A69               	xorlw	105
  3627  001E8E  A4D8               	btfss	status,2,c
  3628  001E90  EF4C  F00F         	goto	u9581
  3629  001E94  EF4E  F00F         	goto	u9580
  3630  001E98                     u9581:
  3631  001E98  EF98  F00F         	goto	l8680
  3632  001E9C                     u9580:
  3633  001E9C                     l8674:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3637  001E9C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3638  001EA2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3639  001EA8  2ADE               	incf	postinc2,f,c
  3640  001EAA  0E00               	movlw	0
  3641  001EAC  22DD               	addwfc	postdec2,f,c
  3642                           
  3643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3644  001EAE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3645  001EB4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3646  001EBA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3647  001EC0  0E02               	movlw	2
  3648  001EC2  26DE               	addwf	postinc2,f,c
  3649  001EC4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3650  001ECA  0E00               	movlw	0
  3651  001ECC  22DD               	addwfc	postdec2,f,c
  3652  001ECE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3653  001ED4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3654  001EDA  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3655  001EE0  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3656  001EE6  0E00               	movlw	0
  3657  001EE8  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3658  001EEA  0EFF               	movlw	-1
  3659  001EEC  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3660  001EEE  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3661  001EF0  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3662  001EF2  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3663  001EF4  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3664  001EF6  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3665  001EF8                     
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3668  001EF8  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3669  001EFC  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3670  001F00  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3671  001F04  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3672  001F08  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3673  001F0C  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3674  001F10  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3675  001F14  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3676  001F18  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3677  001F1C  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3678  001F20  EC77  F017         	call	_dtoa	;wreg free
  3679  001F24  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3680  001F28  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3681  001F2C  EF20  F011         	goto	l2248
  3682  001F30                     l8680:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3686  001F30  0E66               	movlw	102
  3687  001F32  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3688  001F34  A4D8               	btfss	status,2,c
  3689  001F36  EF9F  F00F         	goto	u9591
  3690  001F3A  EFA1  F00F         	goto	u9590
  3691  001F3E                     u9591:
  3692  001F3E  EFF3  F00F         	goto	l8692
  3693  001F42                     u9590:
  3694  001F42                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3697  001F42  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3698  001F48  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3699  001F4E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3700  001F54  006F FF77 FFF7     	movff	postdec2,tblptrh
  3701  001F5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3702  001F5A  6AF8               	clrf	tblptru,c
  3703  001F5C                     	endif
  3704  001F5C                     	if	0	;tblptru may be non-zero
  3705  001F5C                     	endif
  3706  001F5C  0008               	tblrd		*
  3707  001F5E  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3708  001F64                     
  3709                           ; BSR set to: 0
  3710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3711  001F64  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3712  001F6A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3713  001F70  2ADE               	incf	postinc2,f,c
  3714  001F72  0E00               	movlw	0
  3715  001F74  22DD               	addwfc	postdec2,f,c
  3716  001F76                     
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3719  001F76  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3720  001F7C  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3721  001F82  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3722  001F88  0E04               	movlw	4
  3723  001F8A  26DE               	addwf	postinc2,f,c
  3724  001F8C  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3725  001F92  0E00               	movlw	0
  3726  001F94  22DD               	addwfc	postdec2,f,c
  3727  001F96  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3728  001F9C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3729  001FA2  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3730  001FA8  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3731  001FAE  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3732  001FB4  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3733  001FBA                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3736  001FBA  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3737  001FBE  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3738  001FC2  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3739  001FC6  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3740  001FCA  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3741  001FCE  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3742  001FD2  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3743  001FD6  EC39  F008         	call	_efgtoa	;wreg free
  3744  001FDA  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3745  001FDE  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3746  001FE2  EF20  F011         	goto	l2248
  3747  001FE6                     l8692:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3751  001FE6  0EDF               	movlw	low vfpfcnvrt@ct
  3752  001FE8  6E14               	movwf	strncmp@_l^0,c
  3753  001FEA  0E00               	movlw	high vfpfcnvrt@ct
  3754  001FEC  6E15               	movwf	(strncmp@_l+1)^0,c
  3755  001FEE  0E6D               	movlw	low STR_16
  3756  001FF0  6E16               	movwf	strncmp@_r^0,c
  3757  001FF2  0E10               	movlw	high STR_16
  3758  001FF4  6E17               	movwf	(strncmp@_r+1)^0,c
  3759  001FF6  0E00               	movlw	0
  3760  001FF8  6E19               	movwf	(strncmp@n+1)^0,c
  3761  001FFA  0E02               	movlw	2
  3762  001FFC  6E18               	movwf	strncmp@n^0,c
  3763  001FFE  EC17  F025         	call	_strncmp	;wreg free
  3764  002002  5014               	movf	?_strncmp^0,w,c
  3765  002004  1015               	iorwf	(?_strncmp+1)^0,w,c
  3766  002006  A4D8               	btfss	status,2,c
  3767  002008  EF08  F010         	goto	u9601
  3768  00200C  EF0A  F010         	goto	u9600
  3769  002010                     u9601:
  3770  002010  EFBD  F010         	goto	l8708
  3771  002014                     u9600:
  3772  002014                     
  3773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3774  002014  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3775  00201A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3776  002020  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3777  002026  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3778  00202C  0E01               	movlw	1
  3779  00202E  0100               	movlb	0	; () banked
  3780  002030  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3781  002032  0E00               	movlw	0
  3782  002034  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3783  002036  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3784  00203C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3785  002042                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3786  002042  6AF8               	clrf	tblptru,c
  3787  002044                     	endif
  3788  002044                     	if	0	;tblptru may be non-zero
  3789  002044                     	endif
  3790  002044  0008               	tblrd		*
  3791  002046  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3792  00204C  0EBF               	movlw	191
  3793  00204E  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3794  002050  0EFF               	movlw	255
  3795  002052  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3796  002054  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3797  00205A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3798  002060  006F FF7B FFF6     	movff	postinc2,tblptrl
  3799  002066  006F FF77 FFF7     	movff	postdec2,tblptrh
  3800  00206C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3801  00206C  6AF8               	clrf	tblptru,c
  3802  00206E                     	endif
  3803  00206E                     	if	0	;tblptru may be non-zero
  3804  00206E                     	endif
  3805  00206E  0008               	tblrd		*
  3806  002070  50F5               	movf	tablat,w,c
  3807  002072  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3808  002074  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3809  002076  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3810  002078  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3811  00207A  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3812  00207C  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3813  00207E  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3814  002080  E10A               	bnz	u9610
  3815  002082  0E1A               	movlw	26
  3816  002084  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3817  002086  A0D8               	btfss	status,0,c
  3818  002088  EF48  F010         	goto	u9611
  3819  00208C  EF4B  F010         	goto	u9610
  3820  002090                     u9611:
  3821  002090  0E01               	movlw	1
  3822  002092  EF4C  F010         	goto	u9620
  3823  002096                     u9610:
  3824  002096  0E00               	movlw	0
  3825  002098                     u9620:
  3826  002098  6FD9               	movwf	_vfpfcnvrt$3583& (0+255),b
  3827  00209A  6BDA               	clrf	(_vfpfcnvrt$3583+1)& (0+255),b
  3828  00209C                     
  3829                           ; BSR set to: 0
  3830  00209C  51D9               	movf	_vfpfcnvrt$3583& (0+255),w,b
  3831  00209E  11DA               	iorwf	(_vfpfcnvrt$3583+1)& (0+255),w,b
  3832  0020A0  B4D8               	btfsc	status,2,c
  3833  0020A2  EF55  F010         	goto	u9631
  3834  0020A6  EF57  F010         	goto	u9630
  3835  0020AA                     u9631:
  3836  0020AA  EF7B  F010         	goto	l8702
  3837  0020AE                     u9630:
  3838  0020AE                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3841  0020AE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3842  0020B4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3843  0020BA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3844  0020C0  0E04               	movlw	4
  3845  0020C2  26DE               	addwf	postinc2,f,c
  3846  0020C4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3847  0020CA  0E00               	movlw	0
  3848  0020CC  22DD               	addwfc	postdec2,f,c
  3849  0020CE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3850  0020D4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3851  0020DA  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3852  0020E0  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3853  0020E6  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3854  0020EC  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3855                           
  3856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3857  0020F2  EF9D  F010         	goto	l2256
  3858  0020F6                     l8702:
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3862  0020F6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3863  0020FC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3864  002102  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3865  002108  0E04               	movlw	4
  3866  00210A  26DE               	addwf	postinc2,f,c
  3867  00210C  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3868  002112  0E00               	movlw	0
  3869  002114  22DD               	addwfc	postdec2,f,c
  3870  002116  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3871  00211C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3872  002122  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3873  002128  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3874  00212E  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3875  002134  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3876  00213A                     l2256:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3880  00213A  0E02               	movlw	2
  3881  00213C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3882  002142  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3883  002148  26DE               	addwf	postinc2,f,c
  3884  00214A  0E00               	movlw	0
  3885  00214C  22DD               	addwfc	postdec2,f,c
  3886  00214E                     
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3889  00214E  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3890  002152  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3891  002156  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3892  00215A  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3893  00215E  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3894  002162  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3895  002166  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3896  00216A  EC39  F008         	call	_efgtoa	;wreg free
  3897  00216E  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3898  002172  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3899  002176  EF20  F011         	goto	l2248
  3900  00217A                     l8708:
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3903  00217A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3904  002180  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3905  002186  006F FF7B FFF6     	movff	postinc2,tblptrl
  3906  00218C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3907  002192                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3908  002192  6AF8               	clrf	tblptru,c
  3909  002194                     	endif
  3910  002194                     	if	0	;tblptru may be non-zero
  3911  002194                     	endif
  3912  002194  0008               	tblrd		*
  3913  002196  50F5               	movf	tablat,w,c
  3914  002198  0A25               	xorlw	37
  3915  00219A  A4D8               	btfss	status,2,c
  3916  00219C  EFD2  F010         	goto	u9641
  3917  0021A0  EFD4  F010         	goto	u9640
  3918  0021A4                     u9641:
  3919  0021A4  EFEE  F010         	goto	l8718
  3920  0021A8                     u9640:
  3921  0021A8                     
  3922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3923  0021A8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3924  0021AE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3925  0021B4  2ADE               	incf	postinc2,f,c
  3926  0021B6  0E00               	movlw	0
  3927  0021B8  22DD               	addwfc	postdec2,f,c
  3928  0021BA                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3930  0021BA  0E00               	movlw	0
  3931  0021BC  6E17               	movwf	(fputc@c+1)^0,c
  3932  0021BE  0E25               	movlw	37
  3933  0021C0  6E16               	movwf	fputc@c^0,c
  3934  0021C2  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3935  0021C6  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3936  0021CA  EC89  F028         	call	_fputc	;wreg free
  3937  0021CE                     l8714:
  3938                           
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3940  0021CE  0E00               	movlw	0
  3941  0021D0  0100               	movlb	0	; () banked
  3942  0021D2  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3943  0021D4  0E01               	movlw	1
  3944  0021D6  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3945  0021D8  EF20  F011         	goto	l2248
  3946  0021DC                     l8718:
  3947                           
  3948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3949  0021DC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3950  0021E2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3951  0021E8  2ADE               	incf	postinc2,f,c
  3952  0021EA  0E00               	movlw	0
  3953  0021EC  22DD               	addwfc	postdec2,f,c
  3954  0021EE                     
  3955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3956  0021EE  0E00               	movlw	0
  3957  0021F0  0100               	movlb	0	; () banked
  3958  0021F2  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3959  0021F4  0E00               	movlw	0
  3960  0021F6  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3961  0021F8  EF20  F011         	goto	l2248
  3962  0021FC                     l8724:
  3963                           
  3964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3965  0021FC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3966  002202  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3967  002208  006F FF7B FFF6     	movff	postinc2,tblptrl
  3968  00220E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3969  002214                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3970  002214  6AF8               	clrf	tblptru,c
  3971  002216                     	endif
  3972  002216                     	if	0	;tblptru may be non-zero
  3973  002216                     	endif
  3974  002216  0008               	tblrd		*
  3975  002218  50F5               	movf	tablat,w,c
  3976  00221A  6E16               	movwf	fputc@c^0,c
  3977  00221C  6A17               	clrf	(fputc@c+1)^0,c
  3978  00221E  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3979  002222  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3980  002226  EC89  F028         	call	_fputc	;wreg free
  3981  00222A                     
  3982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3983  00222A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3984  002230  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3985  002236  2ADE               	incf	postinc2,f,c
  3986  002238  0E00               	movlw	0
  3987  00223A  22DD               	addwfc	postdec2,f,c
  3988  00223C  EFE7  F010         	goto	l8714
  3989  002240                     l2248:
  3990  002240  0012               	return		;funcret
  3991  002242                     __end_of_vfpfcnvrt:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _strncmp *****************
  3995 ;; Defined at:
  3996 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3999 ;;		 -> vfpfcnvrt@ct(3), 
  4000 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4001 ;;		 -> STR_18(3), 
  4002 ;;  n               2   23[COMRAM] unsigned int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4005 ;;		 -> STR_18(3), 
  4006 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4007 ;;		 -> vfpfcnvrt@ct(3), 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2   19[COMRAM] int 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:       11 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 8
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_vfpfcnvrt
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text9
  4032  004A2E                     __ptext9:
  4033                           	callstack 0
  4034  004A2E                     _strncmp:
  4035                           	callstack 17
  4036  004A2E  C014  F01B         	movff	strncmp@_l,strncmp@l
  4037  004A32  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4038  004A36  C016  F01D         	movff	strncmp@_r,strncmp@r
  4039  004A3A  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4040  004A3E  0618               	decf	strncmp@n^0,f,c
  4041  004A40  A0D8               	btfss	status,0,c
  4042  004A42  0619               	decf	(strncmp@n+1)^0,f,c
  4043  004A44  2818               	incf	strncmp@n^0,w,c
  4044  004A46  E106               	bnz	u9471
  4045  004A48  2819               	incf	(strncmp@n+1)^0,w,c
  4046  004A4A  A4D8               	btfss	status,2,c
  4047  004A4C  EF2A  F025         	goto	u9471
  4048  004A50  EF2C  F025         	goto	u9470
  4049  004A54                     u9471:
  4050  004A54  EF39  F025         	goto	l8636
  4051  004A58                     u9470:
  4052  004A58  0E00               	movlw	0
  4053  004A5A  6E15               	movwf	(?_strncmp+1)^0,c
  4054  004A5C  0E00               	movlw	0
  4055  004A5E  6E14               	movwf	?_strncmp^0,c
  4056  004A60  EF90  F025         	goto	l2336
  4057  004A64                     l8634:
  4058  004A64  4A1B               	infsnz	strncmp@l^0,f,c
  4059  004A66  2A1C               	incf	(strncmp@l+1)^0,f,c
  4060  004A68  4A1D               	infsnz	strncmp@r^0,f,c
  4061  004A6A  2A1E               	incf	(strncmp@r+1)^0,f,c
  4062  004A6C  0618               	decf	strncmp@n^0,f,c
  4063  004A6E  A0D8               	btfss	status,0,c
  4064  004A70  0619               	decf	(strncmp@n+1)^0,f,c
  4065  004A72                     l8636:
  4066  004A72  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4067  004A78  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4068  004A7E  50DF               	movf	indf2,w,c
  4069  004A80  B4D8               	btfsc	status,2,c
  4070  004A82  EF45  F025         	goto	u9481
  4071  004A86  EF47  F025         	goto	u9480
  4072  004A8A                     u9481:
  4073  004A8A  EF7A  F025         	goto	l8644
  4074  004A8E                     u9480:
  4075  004A8E  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4076  004A94  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4077  004A9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4078  004A9A  6AF8               	clrf	tblptru,c
  4079  004A9C                     	endif
  4080  004A9C                     	if	0	;tblptru may be non-zero
  4081  004A9C                     	endif
  4082  004A9C  0008               	tblrd		*
  4083  004A9E  50F5               	movf	tablat,w,c
  4084  004AA0  0900               	iorlw	0
  4085  004AA2  B4D8               	btfsc	status,2,c
  4086  004AA4  EF56  F025         	goto	u9491
  4087  004AA8  EF58  F025         	goto	u9490
  4088  004AAC                     u9491:
  4089  004AAC  EF7A  F025         	goto	l8644
  4090  004AB0                     u9490:
  4091  004AB0  5018               	movf	strncmp@n^0,w,c
  4092  004AB2  1019               	iorwf	(strncmp@n+1)^0,w,c
  4093  004AB4  B4D8               	btfsc	status,2,c
  4094  004AB6  EF5F  F025         	goto	u9501
  4095  004ABA  EF61  F025         	goto	u9500
  4096  004ABE                     u9501:
  4097  004ABE  EF7A  F025         	goto	l8644
  4098  004AC2                     u9500:
  4099  004AC2  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4100  004AC8  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4101  004ACE  50DF               	movf	indf2,w,c
  4102  004AD0  6E1A               	movwf	??_strncmp^0,c
  4103  004AD2  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4104  004AD8  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4105  004ADE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4106  004ADE  6AF8               	clrf	tblptru,c
  4107  004AE0                     	endif
  4108  004AE0                     	if	0	;tblptru may be non-zero
  4109  004AE0                     	endif
  4110  004AE0  0008               	tblrd		*
  4111  004AE2  50F5               	movf	tablat,w,c
  4112  004AE4  181A               	xorwf	??_strncmp^0,w,c
  4113  004AE6  B4D8               	btfsc	status,2,c
  4114  004AE8  EF78  F025         	goto	u9511
  4115  004AEC  EF7A  F025         	goto	u9510
  4116  004AF0                     u9511:
  4117  004AF0  EF32  F025         	goto	l8634
  4118  004AF4                     u9510:
  4119  004AF4                     l8644:
  4120  004AF4  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4121  004AFA  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4122  004B00  50DF               	movf	indf2,w,c
  4123  004B02  6E1A               	movwf	??_strncmp^0,c
  4124  004B04  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4125  004B0A  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4126  004B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4127  004B10  6AF8               	clrf	tblptru,c
  4128  004B12                     	endif
  4129  004B12                     	if	0	;tblptru may be non-zero
  4130  004B12                     	endif
  4131  004B12  0008               	tblrd		*
  4132  004B14  50F5               	movf	tablat,w,c
  4133  004B16  5C1A               	subwf	??_strncmp^0,w,c
  4134  004B18  6E14               	movwf	?_strncmp^0,c
  4135  004B1A  6A15               	clrf	(?_strncmp+1)^0,c
  4136  004B1C  A0D8               	btfss	status,0,c
  4137  004B1E  0615               	decf	(?_strncmp+1)^0,f,c
  4138  004B20                     l2336:
  4139  004B20  0012               	return		;funcret
  4140  004B22                     __end_of_strncmp:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _efgtoa *****************
  4144 ;; Defined at:
  4145 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4148 ;;		 -> NULL(0), 
  4149 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4150 ;;  c               1   41[BANK0 ] unsigned char 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  u               4   99[BANK0 ] unsigned char 
  4153 ;;  g               4   91[BANK0 ] unsigned char 
  4154 ;;  l               4   85[BANK0 ] unsigned char 
  4155 ;;  h               4   81[BANK0 ] unsigned char 
  4156 ;;  ou              4   67[BANK0 ] unsigned char 
  4157 ;;  n               2   97[BANK0 ] int 
  4158 ;;  e               2   95[BANK0 ] int 
  4159 ;;  i               2   89[BANK0 ] int 
  4160 ;;  w               2   77[BANK0 ] int 
  4161 ;;  p               2   75[BANK0 ] int 
  4162 ;;  sign            2   73[BANK0 ] int 
  4163 ;;  d               2   71[BANK0 ] int 
  4164 ;;  m               2   65[BANK0 ] int 
  4165 ;;  ne              2   63[BANK0 ] int 
  4166 ;;  pp              2   61[BANK0 ] int 
  4167 ;;  t               2   59[BANK0 ] int 
  4168 ;;  mode            1   80[BANK0 ] unsigned char 
  4169 ;;  nmode           1   79[BANK0 ] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  2   35[BANK0 ] int 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4179 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:       68 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 13
  4186 ;; This function calls:
  4187 ;;		___awdiv
  4188 ;;		___awmod
  4189 ;;		___fladd
  4190 ;;		___fldiv
  4191 ;;		___fleq
  4192 ;;		___flge
  4193 ;;		___flmul
  4194 ;;		___flneg
  4195 ;;		___flsub
  4196 ;;		___fltol
  4197 ;;		___fpclassifyf
  4198 ;;		_floorf
  4199 ;;		_isupper
  4200 ;;		_pad
  4201 ;;		_strcpy
  4202 ;;		_tolower
  4203 ;; This function is called by:
  4204 ;;		_vfpfcnvrt
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text10
  4209  001072                     __ptext10:
  4210                           	callstack 0
  4211  001072                     _efgtoa:
  4212                           	callstack 12
  4213  001072                     
  4214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4215  001072  0E00               	movlw	0
  4216  001074  0100               	movlb	0	; () banked
  4217  001076  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4218  001078  0E00               	movlw	0
  4219  00107A  6FA9               	movwf	efgtoa@sign& (0+255),b
  4220  00107C                     
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4223  00107C  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4224  001080  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4225  001084  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4226  001088  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4227  00108C                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4230  00108C  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4231  00108E  EF4D  F008         	goto	u8930
  4232  001092  EF4B  F008         	goto	u8931
  4233  001096                     u8931:
  4234  001096  EF63  F008         	goto	l8330
  4235  00109A                     u8930:
  4236  00109A                     
  4237                           ; BSR set to: 0
  4238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4239  00109A  0E00               	movlw	0
  4240  00109C  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4241  00109E  0E01               	movlw	1
  4242  0010A0  6FA9               	movwf	efgtoa@sign& (0+255),b
  4243  0010A2                     
  4244                           ; BSR set to: 0
  4245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4246  0010A2  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4247  0010A6  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4248  0010AA  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4249  0010AE  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4250  0010B2  EC4F  F02C         	call	___flneg	;wreg free
  4251  0010B6  C014  F0BB         	movff	?___flneg,efgtoa@g
  4252  0010BA  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4253  0010BE  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4254  0010C2  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4255  0010C6                     l8330:
  4256                           
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4258  0010C6  0E00               	movlw	0
  4259  0010C8  0100               	movlb	0	; () banked
  4260  0010CA  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4261  0010CC  0E00               	movlw	0
  4262  0010CE  6FC1               	movwf	efgtoa@n& (0+255),b
  4263  0010D0                     
  4264                           ; BSR set to: 0
  4265                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4266  0010D0  C03A  F0AD         	movff	_width,efgtoa@w
  4267  0010D4  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4268  0010D8                     
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4271  0010D8  51A9               	movf	efgtoa@sign& (0+255),w,b
  4272  0010DA  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4273  0010DC  A4D8               	btfss	status,2,c
  4274  0010DE  EF73  F008         	goto	u8941
  4275  0010E2  EF75  F008         	goto	u8940
  4276  0010E6                     u8941:
  4277  0010E6  EF7C  F008         	goto	l8338
  4278  0010EA                     u8940:
  4279  0010EA                     
  4280                           ; BSR set to: 0
  4281  0010EA  A43E               	btfss	_flags^0,2,c
  4282  0010EC  EF7A  F008         	goto	u8951
  4283  0010F0  EF7C  F008         	goto	u8950
  4284  0010F4                     u8951:
  4285  0010F4  EF96  F008         	goto	l8350
  4286  0010F8                     u8950:
  4287  0010F8                     l8338:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4291  0010F8  51A9               	movf	efgtoa@sign& (0+255),w,b
  4292  0010FA  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4293  0010FC  A4D8               	btfss	status,2,c
  4294  0010FE  EF83  F008         	goto	u8961
  4295  001102  EF85  F008         	goto	u8960
  4296  001106                     u8961:
  4297  001106  EF8B  F008         	goto	l8342
  4298  00110A                     u8960:
  4299  00110A                     
  4300                           ; BSR set to: 0
  4301  00110A  0E00               	movlw	0
  4302  00110C  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4303  00110E  0E2B               	movlw	43
  4304  001110  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4305  001112  EF8F  F008         	goto	l8344
  4306  001116                     l8342:
  4307                           
  4308                           ; BSR set to: 0
  4309  001116  0E00               	movlw	0
  4310  001118  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4311  00111A  0E2D               	movlw	45
  4312  00111C  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4313  00111E                     l8344:
  4314                           
  4315                           ; BSR set to: 0
  4316  00111E  C08F  F134         	movff	_efgtoa$3554,_dbuf
  4317  001122                     
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4320  001122  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4321  001124  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4322  001126                     
  4323                           ; BSR set to: 0
  4324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4325  001126  07AD               	decf	efgtoa@w& (0+255),f,b
  4326  001128  A0D8               	btfss	status,0,c
  4327  00112A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4328  00112C                     l8350:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4332  00112C  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4333  001130  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4334  001134  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4335  001138  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4336  00113C  EC98  F024         	call	___fpclassifyf	;wreg free
  4337  001140  0414               	decf	?___fpclassifyf^0,w,c
  4338  001142  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4339  001144  A4D8               	btfss	status,2,c
  4340  001146  EFA7  F008         	goto	u8971
  4341  00114A  EFA9  F008         	goto	u8970
  4342  00114E                     u8971:
  4343  00114E  EF00  F009         	goto	l8368
  4344  001152                     u8970:
  4345  001152  0EBF               	movlw	191
  4346  001154  0100               	movlb	0	; () banked
  4347  001156  6F8A               	movwf	??_efgtoa& (0+255),b
  4348  001158  0EFF               	movlw	255
  4349  00115A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4350  00115C  5189               	movf	efgtoa@c& (0+255),w,b
  4351  00115E  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4352  001160  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4353  001162  518A               	movf	??_efgtoa& (0+255),w,b
  4354  001164  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4355  001166  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4356  001168  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4357  00116A  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4358  00116C  E10A               	bnz	u8980
  4359  00116E  0E1A               	movlw	26
  4360  001170  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4361  001172  A0D8               	btfss	status,0,c
  4362  001174  EFBE  F008         	goto	u8981
  4363  001178  EFC1  F008         	goto	u8980
  4364  00117C                     u8981:
  4365  00117C  0E01               	movlw	1
  4366  00117E  EFC2  F008         	goto	u8990
  4367  001182                     u8980:
  4368  001182  0E00               	movlw	0
  4369  001184                     u8990:
  4370  001184  6F91               	movwf	_efgtoa$3555& (0+255),b
  4371  001186  6B92               	clrf	(_efgtoa$3555+1)& (0+255),b
  4372  001188                     
  4373                           ; BSR set to: 0
  4374  001188  5191               	movf	_efgtoa$3555& (0+255),w,b
  4375  00118A  1192               	iorwf	(_efgtoa$3555+1)& (0+255),w,b
  4376  00118C  B4D8               	btfsc	status,2,c
  4377  00118E  EFCB  F008         	goto	u9001
  4378  001192  EFCD  F008         	goto	u9000
  4379  001196                     u9001:
  4380  001196  EFDB  F008         	goto	l8360
  4381  00119A                     u9000:
  4382  00119A                     
  4383                           ; BSR set to: 0
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4385  00119A  0E34               	movlw	low _dbuf
  4386  00119C  25C1               	addwf	efgtoa@n& (0+255),w,b
  4387  00119E  6E14               	movwf	strcpy@dest^0,c
  4388  0011A0  0E01               	movlw	high _dbuf
  4389  0011A2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4390  0011A4  6E15               	movwf	(strcpy@dest+1)^0,c
  4391  0011A6  0E5D               	movlw	low STR_8
  4392  0011A8  6E16               	movwf	strcpy@src^0,c
  4393  0011AA  0E10               	movlw	high STR_8
  4394  0011AC  6E17               	movwf	(strcpy@src+1)^0,c
  4395  0011AE  EC9F  F029         	call	_strcpy	;wreg free
  4396                           
  4397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4398  0011B2  EFE7  F008         	goto	l8362
  4399  0011B6                     l8360:
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4403  0011B6  0E34               	movlw	low _dbuf
  4404  0011B8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4405  0011BA  6E14               	movwf	strcpy@dest^0,c
  4406  0011BC  0E01               	movlw	high _dbuf
  4407  0011BE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4408  0011C0  6E15               	movwf	(strcpy@dest+1)^0,c
  4409  0011C2  0E65               	movlw	low STR_9
  4410  0011C4  6E16               	movwf	strcpy@src^0,c
  4411  0011C6  0E10               	movlw	high STR_9
  4412  0011C8  6E17               	movwf	(strcpy@src+1)^0,c
  4413  0011CA  EC9F  F029         	call	_strcpy	;wreg free
  4414  0011CE                     l8362:
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4417  0011CE  0100               	movlb	0	; () banked
  4418  0011D0  0EFD               	movlw	253
  4419  0011D2  27AD               	addwf	efgtoa@w& (0+255),f,b
  4420  0011D4  0EFF               	movlw	255
  4421  0011D6  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4422  0011D8                     
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4425  0011D8  C083  F026         	movff	efgtoa@fp,pad@fp
  4426  0011DC  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4427  0011E0  0E34               	movlw	low _dbuf
  4428  0011E2  6E28               	movwf	pad@buf^0,c
  4429  0011E4  0E01               	movlw	high _dbuf
  4430  0011E6  6E29               	movwf	(pad@buf+1)^0,c
  4431  0011E8  C0AD  F02A         	movff	efgtoa@w,pad@p
  4432  0011EC  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4433  0011F0  ECC9  F026         	call	_pad	;wreg free
  4434  0011F4  C026  F083         	movff	?_pad,?_efgtoa
  4435  0011F8  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4436  0011FC  EF8F  F00E         	goto	l2164
  4437  001200                     l8368:
  4438                           
  4439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4440  001200  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4441  001204  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4442  001208  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4443  00120C  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4444  001210  EC98  F024         	call	___fpclassifyf	;wreg free
  4445  001214  5014               	movf	?___fpclassifyf^0,w,c
  4446  001216  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4447  001218  A4D8               	btfss	status,2,c
  4448  00121A  EF11  F009         	goto	u9011
  4449  00121E  EF13  F009         	goto	u9010
  4450  001222                     u9011:
  4451  001222  EF6A  F009         	goto	l8386
  4452  001226                     u9010:
  4453  001226  0EBF               	movlw	191
  4454  001228  0100               	movlb	0	; () banked
  4455  00122A  6F8A               	movwf	??_efgtoa& (0+255),b
  4456  00122C  0EFF               	movlw	255
  4457  00122E  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4458  001230  5189               	movf	efgtoa@c& (0+255),w,b
  4459  001232  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4460  001234  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4461  001236  518A               	movf	??_efgtoa& (0+255),w,b
  4462  001238  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4463  00123A  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4464  00123C  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4465  00123E  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4466  001240  E10A               	bnz	u9020
  4467  001242  0E1A               	movlw	26
  4468  001244  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4469  001246  A0D8               	btfss	status,0,c
  4470  001248  EF28  F009         	goto	u9021
  4471  00124C  EF2B  F009         	goto	u9020
  4472  001250                     u9021:
  4473  001250  0E01               	movlw	1
  4474  001252  EF2C  F009         	goto	u9030
  4475  001256                     u9020:
  4476  001256  0E00               	movlw	0
  4477  001258                     u9030:
  4478  001258  6F93               	movwf	_efgtoa$3559& (0+255),b
  4479  00125A  6B94               	clrf	(_efgtoa$3559+1)& (0+255),b
  4480  00125C                     
  4481                           ; BSR set to: 0
  4482  00125C  5193               	movf	_efgtoa$3559& (0+255),w,b
  4483  00125E  1194               	iorwf	(_efgtoa$3559+1)& (0+255),w,b
  4484  001260  B4D8               	btfsc	status,2,c
  4485  001262  EF35  F009         	goto	u9041
  4486  001266  EF37  F009         	goto	u9040
  4487  00126A                     u9041:
  4488  00126A  EF45  F009         	goto	l8378
  4489  00126E                     u9040:
  4490  00126E                     
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4493  00126E  0E34               	movlw	low _dbuf
  4494  001270  25C1               	addwf	efgtoa@n& (0+255),w,b
  4495  001272  6E14               	movwf	strcpy@dest^0,c
  4496  001274  0E01               	movlw	high _dbuf
  4497  001276  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4498  001278  6E15               	movwf	(strcpy@dest+1)^0,c
  4499  00127A  0E61               	movlw	low STR_12
  4500  00127C  6E16               	movwf	strcpy@src^0,c
  4501  00127E  0E10               	movlw	high STR_12
  4502  001280  6E17               	movwf	(strcpy@src+1)^0,c
  4503  001282  EC9F  F029         	call	_strcpy	;wreg free
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4506  001286  EF51  F009         	goto	l8380
  4507  00128A                     l8378:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4511  00128A  0E34               	movlw	low _dbuf
  4512  00128C  25C1               	addwf	efgtoa@n& (0+255),w,b
  4513  00128E  6E14               	movwf	strcpy@dest^0,c
  4514  001290  0E01               	movlw	high _dbuf
  4515  001292  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4516  001294  6E15               	movwf	(strcpy@dest+1)^0,c
  4517  001296  0E69               	movlw	low STR_13
  4518  001298  6E16               	movwf	strcpy@src^0,c
  4519  00129A  0E10               	movlw	high STR_13
  4520  00129C  6E17               	movwf	(strcpy@src+1)^0,c
  4521  00129E  EC9F  F029         	call	_strcpy	;wreg free
  4522  0012A2                     l8380:
  4523                           
  4524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4525  0012A2  0100               	movlb	0	; () banked
  4526  0012A4  0EFD               	movlw	253
  4527  0012A6  27AD               	addwf	efgtoa@w& (0+255),f,b
  4528  0012A8  0EFF               	movlw	255
  4529  0012AA  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4530  0012AC                     
  4531                           ; BSR set to: 0
  4532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4533  0012AC  C083  F026         	movff	efgtoa@fp,pad@fp
  4534  0012B0  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4535  0012B4  0E34               	movlw	low _dbuf
  4536  0012B6  6E28               	movwf	pad@buf^0,c
  4537  0012B8  0E01               	movlw	high _dbuf
  4538  0012BA  6E29               	movwf	(pad@buf+1)^0,c
  4539  0012BC  C0AD  F02A         	movff	efgtoa@w,pad@p
  4540  0012C0  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4541  0012C4  ECC9  F026         	call	_pad	;wreg free
  4542  0012C8  C026  F083         	movff	?_pad,?_efgtoa
  4543  0012CC  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4544  0012D0  EF8F  F00E         	goto	l2164
  4545  0012D4                     l8386:
  4546                           
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4548  0012D4  0E00               	movlw	0
  4549  0012D6  0100               	movlb	0	; () banked
  4550  0012D8  6FC3               	movwf	efgtoa@u& (0+255),b
  4551  0012DA  0E00               	movlw	0
  4552  0012DC  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4553  0012DE  0E80               	movlw	128
  4554  0012E0  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4555  0012E2  0E3F               	movlw	63
  4556  0012E4  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4557                           
  4558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4559  0012E6  0E00               	movlw	0
  4560  0012E8  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4561  0012EA  0E00               	movlw	0
  4562  0012EC  6FBF               	movwf	efgtoa@e& (0+255),b
  4563  0012EE                     
  4564                           ; BSR set to: 0
  4565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4566  0012EE  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4567  0012F2  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4568  0012F6  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4569  0012FA  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4570  0012FE  0E00               	movlw	0
  4571  001300  6E18               	movwf	___fleq@ff2^0,c
  4572  001302  0E00               	movlw	0
  4573  001304  6E19               	movwf	(___fleq@ff2+1)^0,c
  4574  001306  0E00               	movlw	0
  4575  001308  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4576  00130A  0E00               	movlw	0
  4577  00130C  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4578  00130E  ECE2  F027         	call	___fleq	;wreg free
  4579  001312  B0D8               	btfsc	status,0,c
  4580  001314  EF8E  F009         	goto	u9051
  4581  001318  EF90  F009         	goto	u9050
  4582  00131C                     u9051:
  4583  00131C  EF15  F00A         	goto	l8404
  4584  001320                     u9050:
  4585  001320  EFAF  F009         	goto	l8396
  4586  001324                     l8392:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4590  001324  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4591  001328  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4592  00132C  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4593  001330  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4594  001334  0E00               	movlw	0
  4595  001336  6E2E               	movwf	___flmul@a^0,c
  4596  001338  0E00               	movlw	0
  4597  00133A  6E2F               	movwf	(___flmul@a+1)^0,c
  4598  00133C  0E20               	movlw	32
  4599  00133E  6E30               	movwf	(___flmul@a+2)^0,c
  4600  001340  0E41               	movlw	65
  4601  001342  6E31               	movwf	(___flmul@a+3)^0,c
  4602  001344  EC82  F013         	call	___flmul	;wreg free
  4603  001348  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4604  00134C  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4605  001350  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4606  001354  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4607  001358                     
  4608                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4609  001358  0100               	movlb	0	; () banked
  4610  00135A  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4611  00135C  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4612  00135E                     l8396:
  4613                           
  4614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4615  00135E  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4616  001362  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4617  001366  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4618  00136A  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4619  00136E  0E00               	movlw	0
  4620  001370  6E2E               	movwf	___flmul@a^0,c
  4621  001372  0E00               	movlw	0
  4622  001374  6E2F               	movwf	(___flmul@a+1)^0,c
  4623  001376  0E20               	movlw	32
  4624  001378  6E30               	movwf	(___flmul@a+2)^0,c
  4625  00137A  0E41               	movlw	65
  4626  00137C  6E31               	movwf	(___flmul@a+3)^0,c
  4627  00137E  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4628  001382  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4629  001386  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4630  00138A  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4631  00138E  EC82  F013         	call	___flmul	;wreg free
  4632  001392  C02A  F071         	movff	?___flmul,___flge@ff2
  4633  001396  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4634  00139A  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4635  00139E  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4636  0013A2  EC15  F024         	call	___flge	;wreg free
  4637  0013A6  0100               	movlb	0	; () banked
  4638  0013A8  B0D8               	btfsc	status,0,c
  4639  0013AA  EFD9  F009         	goto	u9061
  4640  0013AE  EFDB  F009         	goto	u9060
  4641  0013B2                     u9061:
  4642  0013B2  EF92  F009         	goto	l8392
  4643  0013B6                     u9060:
  4644  0013B6  EFFB  F009         	goto	l8402
  4645  0013BA                     l8398:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4649  0013BA  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4650  0013BE  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4651  0013C2  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4652  0013C6  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4653  0013CA  0E00               	movlw	0
  4654  0013CC  6E18               	movwf	___fldiv@a^0,c
  4655  0013CE  0E00               	movlw	0
  4656  0013D0  6E19               	movwf	(___fldiv@a+1)^0,c
  4657  0013D2  0E20               	movlw	32
  4658  0013D4  6E1A               	movwf	(___fldiv@a+2)^0,c
  4659  0013D6  0E41               	movlw	65
  4660  0013D8  6E1B               	movwf	(___fldiv@a+3)^0,c
  4661  0013DA  ECAA  F015         	call	___fldiv	;wreg free
  4662  0013DE  C014  F0C3         	movff	?___fldiv,efgtoa@u
  4663  0013E2  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4664  0013E6  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4665  0013EA  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4666  0013EE                     
  4667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4668  0013EE  0100               	movlb	0	; () banked
  4669  0013F0  07BF               	decf	efgtoa@e& (0+255),f,b
  4670  0013F2  A0D8               	btfss	status,0,c
  4671  0013F4  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4672  0013F6                     l8402:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4676  0013F6  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4677  0013FA  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4678  0013FE  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4679  001402  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4680  001406  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4681  00140A  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4682  00140E  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4683  001412  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4684  001416  EC15  F024         	call	___flge	;wreg free
  4685  00141A  0100               	movlb	0	; () banked
  4686  00141C  A0D8               	btfss	status,0,c
  4687  00141E  EF13  F00A         	goto	u9071
  4688  001422  EF15  F00A         	goto	u9070
  4689  001426                     u9071:
  4690  001426  EFDD  F009         	goto	l8398
  4691  00142A                     u9070:
  4692  00142A                     l8404:
  4693                           
  4694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4695  00142A  C089  F01A         	movff	efgtoa@c,tolower@c
  4696  00142E  6A1B               	clrf	(tolower@c+1)^0,c
  4697  001430  EC07  F02A         	call	_tolower	;wreg free
  4698  001434  501A               	movf	?_tolower^0,w,c
  4699  001436  0100               	movlb	0	; () banked
  4700  001438  6FB0               	movwf	efgtoa@mode& (0+255),b
  4701  00143A                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4704  00143A  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4705  00143E                     
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4708  00143E  0E67               	movlw	103
  4709  001440  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4710  001442  A4D8               	btfss	status,2,c
  4711  001444  EF26  F00A         	goto	u9081
  4712  001448  EF28  F00A         	goto	u9080
  4713  00144C                     u9081:
  4714  00144C  EF4E  F00A         	goto	l8418
  4715  001450                     u9080:
  4716  001450                     
  4717                           ; BSR set to: 0
  4718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4719  001450  503C               	movf	_prec^0,w,c
  4720  001452  103D               	iorwf	(_prec+1)^0,w,c
  4721  001454  A4D8               	btfss	status,2,c
  4722  001456  EF2F  F00A         	goto	u9091
  4723  00145A  EF31  F00A         	goto	u9090
  4724  00145E                     u9091:
  4725  00145E  EF35  F00A         	goto	l8414
  4726  001462                     u9090:
  4727  001462                     
  4728                           ; BSR set to: 0
  4729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4730  001462  0E00               	movlw	0
  4731  001464  6E3D               	movwf	(_prec+1)^0,c
  4732  001466  0E01               	movlw	1
  4733  001468  6E3C               	movwf	_prec^0,c
  4734  00146A                     l8414:
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4738  00146A  BE3D               	btfsc	(_prec+1)^0,7,c
  4739  00146C  EF42  F00A         	goto	u9100
  4740  001470  503D               	movf	(_prec+1)^0,w,c
  4741  001472  E106               	bnz	u9101
  4742  001474  043C               	decf	_prec^0,w,c
  4743  001476  B0D8               	btfsc	status,0,c
  4744  001478  EF40  F00A         	goto	u9101
  4745  00147C  EF42  F00A         	goto	u9100
  4746  001480                     u9101:
  4747  001480  EF48  F00A         	goto	l2182
  4748  001484                     u9100:
  4749  001484                     l8416:
  4750                           
  4751                           ; BSR set to: 0
  4752  001484  0E00               	movlw	0
  4753  001486  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4754  001488  0E06               	movlw	6
  4755  00148A  6FAB               	movwf	efgtoa@p& (0+255),b
  4756  00148C  EF57  F00A         	goto	l8424
  4757  001490                     l2182:
  4758                           
  4759                           ; BSR set to: 0
  4760  001490  C03C  F0AB         	movff	_prec,efgtoa@p
  4761  001494  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  4762  001498  EF57  F00A         	goto	l8424
  4763  00149C                     l8418:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4767  00149C  BE3D               	btfsc	(_prec+1)^0,7,c
  4768  00149E  EF53  F00A         	goto	u9111
  4769  0014A2  EF55  F00A         	goto	u9110
  4770  0014A6                     u9111:
  4771  0014A6  EF42  F00A         	goto	l8416
  4772  0014AA                     u9110:
  4773  0014AA  EF48  F00A         	goto	l2182
  4774  0014AE                     l8424:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4778  0014AE  0E67               	movlw	103
  4779  0014B0  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4780  0014B2  A4D8               	btfss	status,2,c
  4781  0014B4  EF5E  F00A         	goto	u9121
  4782  0014B8  EF60  F00A         	goto	u9120
  4783  0014BC                     u9121:
  4784  0014BC  EF8F  F00A         	goto	l8434
  4785  0014C0                     u9120:
  4786  0014C0                     
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4789  0014C0  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4790  0014C2  EF6E  F00A         	goto	u9130
  4791  0014C6  0EFC               	movlw	252
  4792  0014C8  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4793  0014CA  0EFF               	movlw	255
  4794  0014CC  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4795  0014CE  A0D8               	btfss	status,0,c
  4796  0014D0  EF6C  F00A         	goto	u9131
  4797  0014D4  EF6E  F00A         	goto	u9130
  4798  0014D8                     u9131:
  4799  0014D8  EF8D  F00A         	goto	l8432
  4800  0014DC                     u9130:
  4801  0014DC                     
  4802                           ; BSR set to: 0
  4803  0014DC  0EFF               	movlw	255
  4804  0014DE  6F8A               	movwf	??_efgtoa& (0+255),b
  4805  0014E0  0EFF               	movlw	255
  4806  0014E2  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4807  0014E4  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4808  0014E8  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4809  0014EC  518A               	movf	??_efgtoa& (0+255),w,b
  4810  0014EE  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4811  0014F0  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4812  0014F2  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4813  0014F4  51BF               	movf	efgtoa@e& (0+255),w,b
  4814  0014F6  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4815  0014F8  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4816  0014FA  0A80               	xorlw	128
  4817  0014FC  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4818  0014FE  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4819  001500  0A80               	xorlw	128
  4820  001502  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4821  001504  A0D8               	btfss	status,0,c
  4822  001506  EF87  F00A         	goto	u9141
  4823  00150A  EF89  F00A         	goto	u9140
  4824  00150E                     u9141:
  4825  00150E  EF8D  F00A         	goto	l8432
  4826  001512                     u9140:
  4827  001512                     
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4830  001512  0E66               	movlw	102
  4831  001514  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4832                           
  4833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4834  001516  EF8F  F00A         	goto	l8434
  4835  00151A                     l8432:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4839  00151A  0E65               	movlw	101
  4840  00151C  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4841  00151E                     l8434:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4845  00151E  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4846  001522  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4847  001526                     
  4848                           ; BSR set to: 0
  4849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4850  001526  0E67               	movlw	103
  4851  001528  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4852  00152A  A4D8               	btfss	status,2,c
  4853  00152C  EF9A  F00A         	goto	u9151
  4854  001530  EF9C  F00A         	goto	u9150
  4855  001534                     u9151:
  4856  001534  EFAC  F00A         	goto	l8442
  4857  001538                     u9150:
  4858  001538                     
  4859                           ; BSR set to: 0
  4860  001538  0E66               	movlw	102
  4861  00153A  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4862  00153C  A4D8               	btfss	status,2,c
  4863  00153E  EFA3  F00A         	goto	u9161
  4864  001542  EFA5  F00A         	goto	u9160
  4865  001546                     u9161:
  4866  001546  EFAE  F00A         	goto	l8444
  4867  00154A                     u9160:
  4868  00154A                     
  4869                           ; BSR set to: 0
  4870  00154A  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4871  00154C  EFAC  F00A         	goto	u9170
  4872  001550  EFAA  F00A         	goto	u9171
  4873  001554                     u9171:
  4874  001554  EFAE  F00A         	goto	l8444
  4875  001558                     u9170:
  4876  001558                     l8442:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4880  001558  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4881  00155A  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4882  00155C                     l8444:
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4886  00155C  0E66               	movlw	102
  4887  00155E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4888  001560  A4D8               	btfss	status,2,c
  4889  001562  EFB5  F00A         	goto	u9181
  4890  001566  EFB7  F00A         	goto	u9180
  4891  00156A                     u9181:
  4892  00156A  EFD7  F00A         	goto	l8454
  4893  00156E                     u9180:
  4894  00156E                     
  4895                           ; BSR set to: 0
  4896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4897  00156E  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4898  001570  EFBE  F00A         	goto	u9190
  4899  001574  EFBC  F00A         	goto	u9191
  4900  001578                     u9191:
  4901  001578  EFCA  F00A         	goto	l8450
  4902  00157C                     u9190:
  4903  00157C                     
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4906  00157C  0E00               	movlw	0
  4907  00157E  6FC3               	movwf	efgtoa@u& (0+255),b
  4908  001580  0E00               	movlw	0
  4909  001582  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4910  001584  0E80               	movlw	128
  4911  001586  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4912  001588  0E3F               	movlw	63
  4913  00158A  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4916  00158C  0E00               	movlw	0
  4917  00158E  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4918  001590  0E00               	movlw	0
  4919  001592  6FBF               	movwf	efgtoa@e& (0+255),b
  4920  001594                     l8450:
  4921                           
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4924  001594  0E67               	movlw	103
  4925  001596  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4926  001598  B4D8               	btfsc	status,2,c
  4927  00159A  EFD1  F00A         	goto	u9201
  4928  00159E  EFD3  F00A         	goto	u9200
  4929  0015A2                     u9201:
  4930  0015A2  EFD7  F00A         	goto	l8454
  4931  0015A6                     u9200:
  4932  0015A6                     
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4935  0015A6  51BF               	movf	efgtoa@e& (0+255),w,b
  4936  0015A8  27A1               	addwf	efgtoa@m& (0+255),f,b
  4937  0015AA  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4938  0015AC  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4939  0015AE                     l8454:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4943  0015AE  0E00               	movlw	0
  4944  0015B0  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4945  0015B2  0E00               	movlw	0
  4946  0015B4  6FB9               	movwf	efgtoa@i& (0+255),b
  4947  0015B6                     
  4948                           ; BSR set to: 0
  4949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4950  0015B6  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4951  0015BA  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4952  0015BE  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4953  0015C2  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4954  0015C6                     
  4955                           ; BSR set to: 0
  4956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4957  0015C6  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4958  0015CA  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4959  0015CE  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4960  0015D2  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4963  0015D6  EF68  F00B         	goto	l8468
  4964  0015DA                     l8460:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4968  0015DA  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  4969  0015DE  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  4970  0015E2  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  4971  0015E6  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  4972  0015EA  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  4973  0015EE  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  4974  0015F2  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  4975  0015F6  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  4976  0015FA  ECAA  F015         	call	___fldiv	;wreg free
  4977  0015FE  C014  F02D         	movff	?___fldiv,floorf@x
  4978  001602  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  4979  001606  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  4980  00160A  C017  F030         	movff	?___fldiv+3,floorf@x+3
  4981  00160E  EC56  F01B         	call	_floorf	;wreg free
  4982  001612  C02D  F0B5         	movff	?_floorf,efgtoa@l
  4983  001616  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4984  00161A  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4985  00161E  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4986                           
  4987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4988  001622  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4989  001626  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4990  00162A  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4991  00162E  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4992  001632  EC0E  F023         	call	___fltol	;wreg free
  4993  001636  C079  F0A7         	movff	?___fltol,efgtoa@d
  4994  00163A  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4995  00163E                     
  4996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4997  00163E  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4998  001642  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4999  001646  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5000  00164A  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5001  00164E  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5002  001652  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5003  001656  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5004  00165A  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5005  00165E  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5006  001662  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5007  001666  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5008  00166A  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5009  00166E  EC82  F013         	call	___flmul	;wreg free
  5010  001672  C02A  F07D         	movff	?___flmul,___flsub@a
  5011  001676  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5012  00167A  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5013  00167E  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5014  001682  EC53  F02B         	call	___flsub	;wreg free
  5015  001686  C079  F0B1         	movff	?___flsub,efgtoa@h
  5016  00168A  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5017  00168E  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5018  001692  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5019  001696                     
  5020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5021  001696  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5022  00169A  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5023  00169E  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5024  0016A2  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5025  0016A6  0E00               	movlw	0
  5026  0016A8  6E18               	movwf	___fldiv@a^0,c
  5027  0016AA  0E00               	movlw	0
  5028  0016AC  6E19               	movwf	(___fldiv@a+1)^0,c
  5029  0016AE  0E20               	movlw	32
  5030  0016B0  6E1A               	movwf	(___fldiv@a+2)^0,c
  5031  0016B2  0E41               	movlw	65
  5032  0016B4  6E1B               	movwf	(___fldiv@a+3)^0,c
  5033  0016B6  ECAA  F015         	call	___fldiv	;wreg free
  5034  0016BA  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5035  0016BE  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5036  0016C2  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5037  0016C6  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5038  0016CA                     
  5039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5040  0016CA  0100               	movlb	0	; () banked
  5041  0016CC  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5042  0016CE  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5043  0016D0                     l8468:
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5047  0016D0  51A1               	movf	efgtoa@m& (0+255),w,b
  5048  0016D2  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5049  0016D4  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5050  0016D6  0A80               	xorlw	128
  5051  0016D8  6F8A               	movwf	??_efgtoa& (0+255),b
  5052  0016DA  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5053  0016DC  0A80               	xorlw	128
  5054  0016DE  598A               	subwfb	??_efgtoa& (0+255),w,b
  5055  0016E0  A0D8               	btfss	status,0,c
  5056  0016E2  EF75  F00B         	goto	u9211
  5057  0016E6  EF77  F00B         	goto	u9210
  5058  0016EA                     u9211:
  5059  0016EA  EFED  F00A         	goto	l8460
  5060  0016EE                     u9210:
  5061  0016EE                     
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5064  0016EE  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5065  0016F2  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5066  0016F6  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5067  0016FA  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5068  0016FE  0E00               	movlw	0
  5069  001700  6E2E               	movwf	___flmul@a^0,c
  5070  001702  0E00               	movlw	0
  5071  001704  6E2F               	movwf	(___flmul@a+1)^0,c
  5072  001706  0EA0               	movlw	160
  5073  001708  6E30               	movwf	(___flmul@a+2)^0,c
  5074  00170A  0E40               	movlw	64
  5075  00170C  6E31               	movwf	(___flmul@a+3)^0,c
  5076  00170E  EC82  F013         	call	___flmul	;wreg free
  5077  001712  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5078  001716  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5079  00171A  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5080  00171E  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5081  001722                     
  5082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5083  001722  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5084  001726  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5085  00172A  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5086  00172E  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5087  001732  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5088  001736  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5089  00173A  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5090  00173E  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5091  001742  EC15  F024         	call	___flge	;wreg free
  5092  001746  0100               	movlb	0	; () banked
  5093  001748  B0D8               	btfsc	status,0,c
  5094  00174A  EFA9  F00B         	goto	u9221
  5095  00174E  EFAB  F00B         	goto	u9220
  5096  001752                     u9221:
  5097  001752  EFB5  F00B         	goto	l8476
  5098  001756                     u9220:
  5099  001756                     
  5100                           ; BSR set to: 0
  5101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5102  001756  0E00               	movlw	0
  5103  001758  6FB5               	movwf	efgtoa@l& (0+255),b
  5104  00175A  0E00               	movlw	0
  5105  00175C  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5106  00175E  0E00               	movlw	0
  5107  001760  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5108  001762  0E00               	movlw	0
  5109  001764  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5110                           
  5111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5112  001766  EFDE  F00B         	goto	l8482
  5113  00176A                     l8476:
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5117  00176A  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5118  00176E  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5119  001772  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5120  001776  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5121  00177A  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5122  00177E  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5123  001782  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5124  001786  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5125  00178A  ECE2  F027         	call	___fleq	;wreg free
  5126  00178E  A0D8               	btfss	status,0,c
  5127  001790  EFCC  F00B         	goto	u9231
  5128  001794  EFCE  F00B         	goto	u9230
  5129  001798                     u9231:
  5130  001798  EFDE  F00B         	goto	l8482
  5131  00179C                     u9230:
  5132  00179C  0100               	movlb	0	; () banked
  5133  00179E  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5134  0017A0  EFD4  F00B         	goto	u9241
  5135  0017A4  EFD6  F00B         	goto	u9240
  5136  0017A8                     u9241:
  5137  0017A8  EFDE  F00B         	goto	l8482
  5138  0017AC                     u9240:
  5139  0017AC                     
  5140                           ; BSR set to: 0
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5142  0017AC  0E00               	movlw	0
  5143  0017AE  6FB5               	movwf	efgtoa@l& (0+255),b
  5144  0017B0  0E00               	movlw	0
  5145  0017B2  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5146  0017B4  0E00               	movlw	0
  5147  0017B6  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5148  0017B8  0E00               	movlw	0
  5149  0017BA  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5150  0017BC                     l8482:
  5151                           
  5152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5153  0017BC  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5154  0017C0  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5155  0017C4  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5156  0017C8  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5157  0017CC  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5158  0017D0  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5159  0017D4  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5160  0017D8  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5161  0017DC  EC21  F011         	call	___fladd	;wreg free
  5162  0017E0  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5163  0017E4  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5164  0017E8  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5165  0017EC  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5166  0017F0                     
  5167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5168  0017F0  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5169  0017F4  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5170  0017F8  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5171  0017FC  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5172  001800  0E00               	movlw	0
  5173  001802  6E2E               	movwf	___flmul@a^0,c
  5174  001804  0E00               	movlw	0
  5175  001806  6E2F               	movwf	(___flmul@a+1)^0,c
  5176  001808  0E20               	movlw	32
  5177  00180A  6E30               	movwf	(___flmul@a+2)^0,c
  5178  00180C  0E41               	movlw	65
  5179  00180E  6E31               	movwf	(___flmul@a+3)^0,c
  5180  001810  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5181  001814  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5182  001818  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5183  00181C  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5184  001820  EC82  F013         	call	___flmul	;wreg free
  5185  001824  C02A  F071         	movff	?___flmul,___flge@ff2
  5186  001828  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5187  00182C  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5188  001830  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5189  001834  EC15  F024         	call	___flge	;wreg free
  5190  001838  0100               	movlb	0	; () banked
  5191  00183A  A0D8               	btfss	status,0,c
  5192  00183C  EF22  F00C         	goto	u9251
  5193  001840  EF24  F00C         	goto	u9250
  5194  001844                     u9251:
  5195  001844  EF4C  F00C         	goto	l8494
  5196  001848                     u9250:
  5197  001848                     
  5198                           ; BSR set to: 0
  5199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5200  001848  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5201  00184A  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5202  00184C                     
  5203                           ; BSR set to: 0
  5204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5205  00184C  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5206  001850  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5207  001854  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5208  001858  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5209  00185C  0E00               	movlw	0
  5210  00185E  6E2E               	movwf	___flmul@a^0,c
  5211  001860  0E00               	movlw	0
  5212  001862  6E2F               	movwf	(___flmul@a+1)^0,c
  5213  001864  0E20               	movlw	32
  5214  001866  6E30               	movwf	(___flmul@a+2)^0,c
  5215  001868  0E41               	movlw	65
  5216  00186A  6E31               	movwf	(___flmul@a+3)^0,c
  5217  00186C  EC82  F013         	call	___flmul	;wreg free
  5218  001870  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5219  001874  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5220  001878  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5221  00187C  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5222  001880                     
  5223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5224  001880  0E66               	movlw	102
  5225  001882  0100               	movlb	0	; () banked
  5226  001884  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5227  001886  A4D8               	btfss	status,2,c
  5228  001888  EF48  F00C         	goto	u9261
  5229  00188C  EF4A  F00C         	goto	u9260
  5230  001890                     u9261:
  5231  001890  EF4C  F00C         	goto	l8494
  5232  001894                     u9260:
  5233  001894                     
  5234                           ; BSR set to: 0
  5235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5236  001894  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5237  001896  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5238  001898                     l8494:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5242  001898  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5243  00189C  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5244  0018A0  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5245  0018A4  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5246  0018A8                     
  5247                           ; BSR set to: 0
  5248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5249  0018A8  0E65               	movlw	101
  5250  0018AA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5251  0018AC  B4D8               	btfsc	status,2,c
  5252  0018AE  EF5B  F00C         	goto	u9271
  5253  0018B2  EF5D  F00C         	goto	u9270
  5254  0018B6                     u9271:
  5255  0018B6  EF63  F00C         	goto	l8500
  5256  0018BA                     u9270:
  5257  0018BA                     
  5258                           ; BSR set to: 0
  5259  0018BA  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5260  0018BE  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5261  0018C2  EF67  F00C         	goto	l2210
  5262  0018C6                     l8500:
  5263                           
  5264                           ; BSR set to: 0
  5265  0018C6  0E00               	movlw	0
  5266  0018C8  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5267  0018CA  0E00               	movlw	0
  5268  0018CC  6F9F               	movwf	efgtoa@ne& (0+255),b
  5269  0018CE                     l2210:
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5273  0018CE  0E00               	movlw	0
  5274  0018D0  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5275  0018D2  0E00               	movlw	0
  5276  0018D4  6F9D               	movwf	efgtoa@pp& (0+255),b
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5279  0018D6  0E00               	movlw	0
  5280  0018D8  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5281  0018DA  0E00               	movlw	0
  5282  0018DC  6F9B               	movwf	efgtoa@t& (0+255),b
  5283                           
  5284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5285  0018DE  0E00               	movlw	0
  5286  0018E0  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5287  0018E2  0E00               	movlw	0
  5288  0018E4  6FB9               	movwf	efgtoa@i& (0+255),b
  5289                           
  5290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5291  0018E6  EF63  F00D         	goto	l8550
  5292  0018EA                     l8502:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5296  0018EA  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  5297  0018EE  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  5298  0018F2  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  5299  0018F6  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  5300  0018FA  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  5301  0018FE  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  5302  001902  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  5303  001906  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  5304  00190A  ECAA  F015         	call	___fldiv	;wreg free
  5305  00190E  C014  F02D         	movff	?___fldiv,floorf@x
  5306  001912  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  5307  001916  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  5308  00191A  C017  F030         	movff	?___fldiv+3,floorf@x+3
  5309  00191E  EC56  F01B         	call	_floorf	;wreg free
  5310  001922  C02D  F0B5         	movff	?_floorf,efgtoa@l
  5311  001926  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5312  00192A  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5313  00192E  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5314                           
  5315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5316  001932  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5317  001936  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5318  00193A  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5319  00193E  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5320  001942  EC0E  F023         	call	___fltol	;wreg free
  5321  001946  C079  F0A7         	movff	?___fltol,efgtoa@d
  5322  00194A  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5323  00194E                     
  5324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5325  00194E  B83E               	btfsc	_flags^0,4,c
  5326  001950  EFAC  F00C         	goto	u9281
  5327  001954  EFAE  F00C         	goto	u9280
  5328  001958                     u9281:
  5329  001958  EFCC  F00C         	goto	l8514
  5330  00195C                     u9280:
  5331  00195C  0100               	movlb	0	; () banked
  5332  00195E  51A7               	movf	efgtoa@d& (0+255),w,b
  5333  001960  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5334  001962  A4D8               	btfss	status,2,c
  5335  001964  EFB6  F00C         	goto	u9291
  5336  001968  EFB8  F00C         	goto	u9290
  5337  00196C                     u9291:
  5338  00196C  EFCC  F00C         	goto	l8514
  5339  001970                     u9290:
  5340  001970                     
  5341                           ; BSR set to: 0
  5342  001970  0E67               	movlw	103
  5343  001972  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5344  001974  A4D8               	btfss	status,2,c
  5345  001976  EFBF  F00C         	goto	u9301
  5346  00197A  EFC1  F00C         	goto	u9300
  5347  00197E                     u9301:
  5348  00197E  EFCC  F00C         	goto	l8514
  5349  001982                     u9300:
  5350  001982                     
  5351                           ; BSR set to: 0
  5352  001982  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5353  001984  EFC8  F00C         	goto	u9310
  5354  001988  EFC6  F00C         	goto	u9311
  5355  00198C                     u9311:
  5356  00198C  EFCC  F00C         	goto	l8514
  5357  001990                     u9310:
  5358  001990                     
  5359                           ; BSR set to: 0
  5360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5361  001990  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5362  001992  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5365  001994  EF17  F00D         	goto	l8542
  5366  001998                     l8514:
  5367                           
  5368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5369  001998  0100               	movlb	0	; () banked
  5370  00199A  519D               	movf	efgtoa@pp& (0+255),w,b
  5371  00199C  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5372  00199E  A4D8               	btfss	status,2,c
  5373  0019A0  EFD4  F00C         	goto	u9321
  5374  0019A4  EFD6  F00C         	goto	u9320
  5375  0019A8                     u9321:
  5376  0019A8  EF00  F00D         	goto	l8534
  5377  0019AC                     u9320:
  5378  0019AC                     
  5379                           ; BSR set to: 0
  5380  0019AC  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5381  0019AE  EFDD  F00C         	goto	u9330
  5382  0019B2  EFDB  F00C         	goto	u9331
  5383  0019B6                     u9331:
  5384  0019B6  EF00  F00D         	goto	l8534
  5385  0019BA                     u9330:
  5386  0019BA                     
  5387                           ; BSR set to: 0
  5388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5389  0019BA  0E34               	movlw	low _dbuf
  5390  0019BC  25C1               	addwf	efgtoa@n& (0+255),w,b
  5391  0019BE  6ED9               	movwf	fsr2l,c
  5392  0019C0  0E01               	movlw	high _dbuf
  5393  0019C2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5394  0019C4  6EDA               	movwf	fsr2h,c
  5395  0019C6  0E2E               	movlw	46
  5396  0019C8  6EDF               	movwf	indf2,c
  5397  0019CA                     
  5398                           ; BSR set to: 0
  5399  0019CA  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5400  0019CC  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5401  0019CE                     
  5402                           ; BSR set to: 0
  5403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5404  0019CE  07AD               	decf	efgtoa@w& (0+255),f,b
  5405  0019D0  A0D8               	btfss	status,0,c
  5406  0019D2  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5407  0019D4                     
  5408                           ; BSR set to: 0
  5409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5410  0019D4  0E00               	movlw	0
  5411  0019D6  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5412  0019D8  0E01               	movlw	1
  5413  0019DA  6F9D               	movwf	efgtoa@pp& (0+255),b
  5414  0019DC  EF00  F00D         	goto	l8534
  5415  0019E0                     l8526:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5419  0019E0  0E34               	movlw	low _dbuf
  5420  0019E2  25C1               	addwf	efgtoa@n& (0+255),w,b
  5421  0019E4  6ED9               	movwf	fsr2l,c
  5422  0019E6  0E01               	movlw	high _dbuf
  5423  0019E8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5424  0019EA  6EDA               	movwf	fsr2h,c
  5425  0019EC  0E30               	movlw	48
  5426  0019EE  6EDF               	movwf	indf2,c
  5427  0019F0                     
  5428                           ; BSR set to: 0
  5429  0019F0  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5430  0019F2  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5431  0019F4                     
  5432                           ; BSR set to: 0
  5433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5434  0019F4  07AD               	decf	efgtoa@w& (0+255),f,b
  5435  0019F6  A0D8               	btfss	status,0,c
  5436  0019F8  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5437  0019FA                     
  5438                           ; BSR set to: 0
  5439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5440  0019FA  079B               	decf	efgtoa@t& (0+255),f,b
  5441  0019FC  A0D8               	btfss	status,0,c
  5442  0019FE  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5443  001A00                     l8534:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5447  001A00  519B               	movf	efgtoa@t& (0+255),w,b
  5448  001A02  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5449  001A04  A4D8               	btfss	status,2,c
  5450  001A06  EF07  F00D         	goto	u9341
  5451  001A0A  EF09  F00D         	goto	u9340
  5452  001A0E                     u9341:
  5453  001A0E  EFF0  F00C         	goto	l8526
  5454  001A12                     u9340:
  5455  001A12                     
  5456                           ; BSR set to: 0
  5457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5458  001A12  0E34               	movlw	low _dbuf
  5459  001A14  25C1               	addwf	efgtoa@n& (0+255),w,b
  5460  001A16  6ED9               	movwf	fsr2l,c
  5461  001A18  0E01               	movlw	high _dbuf
  5462  001A1A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5463  001A1C  6EDA               	movwf	fsr2h,c
  5464  001A1E  51A7               	movf	efgtoa@d& (0+255),w,b
  5465  001A20  0F30               	addlw	48
  5466  001A22  6EDF               	movwf	indf2,c
  5467  001A24                     
  5468                           ; BSR set to: 0
  5469  001A24  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5470  001A26  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5471  001A28                     
  5472                           ; BSR set to: 0
  5473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5474  001A28  07AD               	decf	efgtoa@w& (0+255),f,b
  5475  001A2A  A0D8               	btfss	status,0,c
  5476  001A2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5477  001A2E                     l8542:
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5481  001A2E  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5482  001A32  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5483  001A36  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5484  001A3A  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5485  001A3E  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5486  001A42  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5487  001A46  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5488  001A4A  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5489  001A4E  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5490  001A52  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5491  001A56  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5492  001A5A  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5493  001A5E  EC82  F013         	call	___flmul	;wreg free
  5494  001A62  C02A  F07D         	movff	?___flmul,___flsub@a
  5495  001A66  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5496  001A6A  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5497  001A6E  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5498  001A72  EC53  F02B         	call	___flsub	;wreg free
  5499  001A76  C079  F0B1         	movff	?___flsub,efgtoa@h
  5500  001A7A  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5501  001A7E  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5502  001A82  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5503  001A86                     
  5504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5505  001A86  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5506  001A8A  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5507  001A8E  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5508  001A92  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5509  001A96  0E00               	movlw	0
  5510  001A98  6E18               	movwf	___fldiv@a^0,c
  5511  001A9A  0E00               	movlw	0
  5512  001A9C  6E19               	movwf	(___fldiv@a+1)^0,c
  5513  001A9E  0E20               	movlw	32
  5514  001AA0  6E1A               	movwf	(___fldiv@a+2)^0,c
  5515  001AA2  0E41               	movlw	65
  5516  001AA4  6E1B               	movwf	(___fldiv@a+3)^0,c
  5517  001AA6  ECAA  F015         	call	___fldiv	;wreg free
  5518  001AAA  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5519  001AAE  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5520  001AB2  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5521  001AB6  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5522  001ABA                     
  5523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5524  001ABA  0100               	movlb	0	; () banked
  5525  001ABC  079F               	decf	efgtoa@ne& (0+255),f,b
  5526  001ABE  A0D8               	btfss	status,0,c
  5527  001AC0  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5528  001AC2                     
  5529                           ; BSR set to: 0
  5530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5531  001AC2  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5532  001AC4  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5533  001AC6                     l8550:
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5537  001AC6  51A1               	movf	efgtoa@m& (0+255),w,b
  5538  001AC8  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5539  001ACA  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5540  001ACC  0A80               	xorlw	128
  5541  001ACE  6F8A               	movwf	??_efgtoa& (0+255),b
  5542  001AD0  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5543  001AD2  0A80               	xorlw	128
  5544  001AD4  598A               	subwfb	??_efgtoa& (0+255),w,b
  5545  001AD6  B0D8               	btfsc	status,0,c
  5546  001AD8  EF70  F00D         	goto	u9351
  5547  001ADC  EF72  F00D         	goto	u9350
  5548  001AE0                     u9351:
  5549  001AE0  EF80  F00D         	goto	l8554
  5550  001AE4                     u9350:
  5551  001AE4                     
  5552                           ; BSR set to: 0
  5553  001AE4  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5554  001AE6  EF7E  F00D         	goto	u9361
  5555  001AEA  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5556  001AEC  E109               	bnz	u9360
  5557  001AEE  0E4B               	movlw	75
  5558  001AF0  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5559  001AF2  A0D8               	btfss	status,0,c
  5560  001AF4  EF7E  F00D         	goto	u9361
  5561  001AF8  EF80  F00D         	goto	u9360
  5562  001AFC                     u9361:
  5563  001AFC  EF75  F00C         	goto	l8502
  5564  001B00                     u9360:
  5565  001B00                     l8554:
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5569  001B00  519D               	movf	efgtoa@pp& (0+255),w,b
  5570  001B02  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5571  001B04  A4D8               	btfss	status,2,c
  5572  001B06  EF87  F00D         	goto	u9371
  5573  001B0A  EF89  F00D         	goto	u9370
  5574  001B0E                     u9371:
  5575  001B0E  EF9A  F00D         	goto	l8562
  5576  001B12                     u9370:
  5577  001B12                     
  5578                           ; BSR set to: 0
  5579  001B12  A83E               	btfss	_flags^0,4,c
  5580  001B14  EF8E  F00D         	goto	u9381
  5581  001B18  EF90  F00D         	goto	u9380
  5582  001B1C                     u9381:
  5583  001B1C  EF9A  F00D         	goto	l8562
  5584  001B20                     u9380:
  5585  001B20                     
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5588  001B20  0E34               	movlw	low _dbuf
  5589  001B22  25C1               	addwf	efgtoa@n& (0+255),w,b
  5590  001B24  6ED9               	movwf	fsr2l,c
  5591  001B26  0E01               	movlw	high _dbuf
  5592  001B28  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5593  001B2A  6EDA               	movwf	fsr2h,c
  5594  001B2C  0E2E               	movlw	46
  5595  001B2E  6EDF               	movwf	indf2,c
  5596  001B30                     
  5597                           ; BSR set to: 0
  5598  001B30  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5599  001B32  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5600  001B34                     l8562:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5604  001B34  0E34               	movlw	low _dbuf
  5605  001B36  25C1               	addwf	efgtoa@n& (0+255),w,b
  5606  001B38  6ED9               	movwf	fsr2l,c
  5607  001B3A  0E01               	movlw	high _dbuf
  5608  001B3C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5609  001B3E  6EDA               	movwf	fsr2h,c
  5610  001B40  0E00               	movlw	0
  5611  001B42  6EDF               	movwf	indf2,c
  5612  001B44                     
  5613                           ; BSR set to: 0
  5614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5615  001B44  0E65               	movlw	101
  5616  001B46  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5617  001B48  A4D8               	btfss	status,2,c
  5618  001B4A  EFA9  F00D         	goto	u9391
  5619  001B4E  EFAB  F00D         	goto	u9390
  5620  001B52                     u9391:
  5621  001B52  EF7D  F00E         	goto	l8624
  5622  001B56                     u9390:
  5623  001B56                     
  5624                           ; BSR set to: 0
  5625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5626  001B56  0E00               	movlw	0
  5627  001B58  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5628  001B5A  0E4F               	movlw	79
  5629  001B5C  6FB9               	movwf	efgtoa@i& (0+255),b
  5630  001B5E                     
  5631                           ; BSR set to: 0
  5632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5633  001B5E  0E34               	movlw	low _dbuf
  5634  001B60  25B9               	addwf	efgtoa@i& (0+255),w,b
  5635  001B62  6ED9               	movwf	fsr2l,c
  5636  001B64  0E01               	movlw	high _dbuf
  5637  001B66  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5638  001B68  6EDA               	movwf	fsr2h,c
  5639  001B6A  0E00               	movlw	0
  5640  001B6C  6EDF               	movwf	indf2,c
  5641  001B6E                     
  5642                           ; BSR set to: 0
  5643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5644  001B6E  0E00               	movlw	0
  5645  001B70  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5646  001B72  0E00               	movlw	0
  5647  001B74  6FA9               	movwf	efgtoa@sign& (0+255),b
  5648  001B76                     
  5649                           ; BSR set to: 0
  5650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5651  001B76  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5652  001B78  EFC2  F00D         	goto	u9400
  5653  001B7C  EFC0  F00D         	goto	u9401
  5654  001B80                     u9401:
  5655  001B80  EFCA  F00D         	goto	l8578
  5656  001B84                     u9400:
  5657  001B84                     
  5658                           ; BSR set to: 0
  5659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5660  001B84  0E00               	movlw	0
  5661  001B86  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5662  001B88  0E01               	movlw	1
  5663  001B8A  6FA9               	movwf	efgtoa@sign& (0+255),b
  5664  001B8C                     
  5665                           ; BSR set to: 0
  5666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5667  001B8C  6DBF               	negf	efgtoa@e& (0+255),b
  5668  001B8E  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5669  001B90  B0D8               	btfsc	status,0,c
  5670  001B92  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5671  001B94                     l8578:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5675  001B94  0E00               	movlw	0
  5676  001B96  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5677  001B98  0E02               	movlw	2
  5678  001B9A  6FAB               	movwf	efgtoa@p& (0+255),b
  5679                           
  5680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5681  001B9C  EFFB  F00D         	goto	l8590
  5682  001BA0                     l8580:
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5686  001BA0  07B9               	decf	efgtoa@i& (0+255),f,b
  5687  001BA2  A0D8               	btfss	status,0,c
  5688  001BA4  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5689  001BA6                     
  5690                           ; BSR set to: 0
  5691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5692  001BA6  0E34               	movlw	low _dbuf
  5693  001BA8  25B9               	addwf	efgtoa@i& (0+255),w,b
  5694  001BAA  6ED9               	movwf	fsr2l,c
  5695  001BAC  0E01               	movlw	high _dbuf
  5696  001BAE  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5697  001BB0  6EDA               	movwf	fsr2h,c
  5698  001BB2  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5699  001BB6  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5700  001BBA  0E00               	movlw	0
  5701  001BBC  6E17               	movwf	(___awmod@divisor+1)^0,c
  5702  001BBE  0E0A               	movlw	10
  5703  001BC0  6E16               	movwf	___awmod@divisor^0,c
  5704  001BC2  EC8A  F027         	call	___awmod	;wreg free
  5705  001BC6  5014               	movf	?___awmod^0,w,c
  5706  001BC8  0F30               	addlw	48
  5707  001BCA  6EDF               	movwf	indf2,c
  5708  001BCC                     
  5709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5710  001BCC  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5711  001BD0  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5712  001BD4  0E00               	movlw	0
  5713  001BD6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5714  001BD8  0E0A               	movlw	10
  5715  001BDA  6E16               	movwf	___awdiv@divisor^0,c
  5716  001BDC  EC67  F026         	call	___awdiv	;wreg free
  5717  001BE0  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5718  001BE4  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5719  001BE8                     
  5720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5721  001BE8  0100               	movlb	0	; () banked
  5722  001BEA  07AB               	decf	efgtoa@p& (0+255),f,b
  5723  001BEC  A0D8               	btfss	status,0,c
  5724  001BEE  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5725  001BF0                     
  5726                           ; BSR set to: 0
  5727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5728  001BF0  07AD               	decf	efgtoa@w& (0+255),f,b
  5729  001BF2  A0D8               	btfss	status,0,c
  5730  001BF4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5731  001BF6                     l8590:
  5732                           
  5733                           ; BSR set to: 0
  5734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5735  001BF6  51BF               	movf	efgtoa@e& (0+255),w,b
  5736  001BF8  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5737  001BFA  A4D8               	btfss	status,2,c
  5738  001BFC  EF02  F00E         	goto	u9411
  5739  001C00  EF04  F00E         	goto	u9410
  5740  001C04                     u9411:
  5741  001C04  EFD0  F00D         	goto	l8580
  5742  001C08                     u9410:
  5743  001C08                     
  5744                           ; BSR set to: 0
  5745  001C08  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5746  001C0A  EF11  F00E         	goto	u9420
  5747  001C0E  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5748  001C10  E106               	bnz	u9421
  5749  001C12  05AB               	decf	efgtoa@p& (0+255),w,b
  5750  001C14  B0D8               	btfsc	status,0,c
  5751  001C16  EF0F  F00E         	goto	u9421
  5752  001C1A  EF11  F00E         	goto	u9420
  5753  001C1E                     u9421:
  5754  001C1E  EFD0  F00D         	goto	l8580
  5755  001C22                     u9420:
  5756  001C22                     
  5757                           ; BSR set to: 0
  5758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5759  001C22  07B9               	decf	efgtoa@i& (0+255),f,b
  5760  001C24  A0D8               	btfss	status,0,c
  5761  001C26  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5762  001C28                     
  5763                           ; BSR set to: 0
  5764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5765  001C28  51A9               	movf	efgtoa@sign& (0+255),w,b
  5766  001C2A  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5767  001C2C  A4D8               	btfss	status,2,c
  5768  001C2E  EF1B  F00E         	goto	u9431
  5769  001C32  EF1D  F00E         	goto	u9430
  5770  001C36                     u9431:
  5771  001C36  EF23  F00E         	goto	l8600
  5772  001C3A                     u9430:
  5773  001C3A                     
  5774                           ; BSR set to: 0
  5775  001C3A  0E00               	movlw	0
  5776  001C3C  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5777  001C3E  0E2B               	movlw	43
  5778  001C40  6F95               	movwf	_efgtoa$3563& (0+255),b
  5779  001C42  EF27  F00E         	goto	l8602
  5780  001C46                     l8600:
  5781                           
  5782                           ; BSR set to: 0
  5783  001C46  0E00               	movlw	0
  5784  001C48  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5785  001C4A  0E2D               	movlw	45
  5786  001C4C  6F95               	movwf	_efgtoa$3563& (0+255),b
  5787  001C4E                     l8602:
  5788                           
  5789                           ; BSR set to: 0
  5790  001C4E  0E34               	movlw	low _dbuf
  5791  001C50  25B9               	addwf	efgtoa@i& (0+255),w,b
  5792  001C52  6ED9               	movwf	fsr2l,c
  5793  001C54  0E01               	movlw	high _dbuf
  5794  001C56  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5795  001C58  6EDA               	movwf	fsr2h,c
  5796  001C5A  0060  F257  FFDF   	movff	_efgtoa$3563,indf2
  5797  001C60                     
  5798                           ; BSR set to: 0
  5799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5800  001C60  07AD               	decf	efgtoa@w& (0+255),f,b
  5801  001C62  A0D8               	btfss	status,0,c
  5802  001C64  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5803  001C66                     
  5804                           ; BSR set to: 0
  5805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5806  001C66  07B9               	decf	efgtoa@i& (0+255),f,b
  5807  001C68  A0D8               	btfss	status,0,c
  5808  001C6A  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5809  001C6C                     
  5810                           ; BSR set to: 0
  5811  001C6C  0EBF               	movlw	191
  5812  001C6E  6F8A               	movwf	??_efgtoa& (0+255),b
  5813  001C70  0EFF               	movlw	255
  5814  001C72  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5815  001C74  5189               	movf	efgtoa@c& (0+255),w,b
  5816  001C76  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5817  001C78  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5818  001C7A  518A               	movf	??_efgtoa& (0+255),w,b
  5819  001C7C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5820  001C7E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5821  001C80  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5822  001C82  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5823  001C84  E10A               	bnz	u9440
  5824  001C86  0E1A               	movlw	26
  5825  001C88  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5826  001C8A  A0D8               	btfss	status,0,c
  5827  001C8C  EF4A  F00E         	goto	u9441
  5828  001C90  EF4D  F00E         	goto	u9440
  5829  001C94                     u9441:
  5830  001C94  0E01               	movlw	1
  5831  001C96  EF4E  F00E         	goto	u9450
  5832  001C9A                     u9440:
  5833  001C9A  0E00               	movlw	0
  5834  001C9C                     u9450:
  5835  001C9C  6F99               	movwf	_efgtoa$3565& (0+255),b
  5836  001C9E  6B9A               	clrf	(_efgtoa$3565+1)& (0+255),b
  5837  001CA0                     
  5838                           ; BSR set to: 0
  5839  001CA0  5199               	movf	_efgtoa$3565& (0+255),w,b
  5840  001CA2  119A               	iorwf	(_efgtoa$3565+1)& (0+255),w,b
  5841  001CA4  A4D8               	btfss	status,2,c
  5842  001CA6  EF57  F00E         	goto	u9461
  5843  001CAA  EF59  F00E         	goto	u9460
  5844  001CAE                     u9461:
  5845  001CAE  EF5F  F00E         	goto	l8616
  5846  001CB2                     u9460:
  5847  001CB2                     
  5848                           ; BSR set to: 0
  5849  001CB2  0E00               	movlw	0
  5850  001CB4  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5851  001CB6  0E65               	movlw	101
  5852  001CB8  6F97               	movwf	_efgtoa$3564& (0+255),b
  5853  001CBA  EF63  F00E         	goto	l8618
  5854  001CBE                     l8616:
  5855                           
  5856                           ; BSR set to: 0
  5857  001CBE  0E00               	movlw	0
  5858  001CC0  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5859  001CC2  0E45               	movlw	69
  5860  001CC4  6F97               	movwf	_efgtoa$3564& (0+255),b
  5861  001CC6                     l8618:
  5862                           
  5863                           ; BSR set to: 0
  5864  001CC6  0E34               	movlw	low _dbuf
  5865  001CC8  25B9               	addwf	efgtoa@i& (0+255),w,b
  5866  001CCA  6ED9               	movwf	fsr2l,c
  5867  001CCC  0E01               	movlw	high _dbuf
  5868  001CCE  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5869  001CD0  6EDA               	movwf	fsr2h,c
  5870  001CD2  0060  F25F  FFDF   	movff	_efgtoa$3564,indf2
  5871  001CD8                     
  5872                           ; BSR set to: 0
  5873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5874  001CD8  07AD               	decf	efgtoa@w& (0+255),f,b
  5875  001CDA  A0D8               	btfss	status,0,c
  5876  001CDC  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5877  001CDE                     
  5878                           ; BSR set to: 0
  5879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5880  001CDE  0E34               	movlw	low _dbuf
  5881  001CE0  25C1               	addwf	efgtoa@n& (0+255),w,b
  5882  001CE2  6E14               	movwf	strcpy@dest^0,c
  5883  001CE4  0E01               	movlw	high _dbuf
  5884  001CE6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5885  001CE8  6E15               	movwf	(strcpy@dest+1)^0,c
  5886  001CEA  0E34               	movlw	low _dbuf
  5887  001CEC  25B9               	addwf	efgtoa@i& (0+255),w,b
  5888  001CEE  6E16               	movwf	strcpy@src^0,c
  5889  001CF0  0E01               	movlw	high _dbuf
  5890  001CF2  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5891  001CF4  6E17               	movwf	(strcpy@src+1)^0,c
  5892  001CF6  EC9F  F029         	call	_strcpy	;wreg free
  5893  001CFA                     l8624:
  5894                           
  5895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5896  001CFA  C083  F026         	movff	efgtoa@fp,pad@fp
  5897  001CFE  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5898  001D02  0E34               	movlw	low _dbuf
  5899  001D04  6E28               	movwf	pad@buf^0,c
  5900  001D06  0E01               	movlw	high _dbuf
  5901  001D08  6E29               	movwf	(pad@buf+1)^0,c
  5902  001D0A  C0AD  F02A         	movff	efgtoa@w,pad@p
  5903  001D0E  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5904  001D12  ECC9  F026         	call	_pad	;wreg free
  5905  001D16  C026  F083         	movff	?_pad,?_efgtoa
  5906  001D1A  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5907  001D1E                     l2164:
  5908  001D1E  0012               	return		;funcret
  5909  001D20                     __end_of_efgtoa:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _tolower *****************
  5913 ;; Defined at:
  5914 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  c               2   25[COMRAM] int 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  2   25[COMRAM] int 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2, status,0
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:        8 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 9
  5935 ;; This function calls:
  5936 ;;		_isupper
  5937 ;; This function is called by:
  5938 ;;		_efgtoa
  5939 ;;		_vfpfcnvrt
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text11
  5944  00540E                     __ptext11:
  5945                           	callstack 0
  5946  00540E                     _tolower:
  5947                           	callstack 16
  5948  00540E  0EBF               	movlw	191
  5949  005410  6E1C               	movwf	??_tolower^0,c
  5950  005412  0EFF               	movlw	255
  5951  005414  6E1D               	movwf	(??_tolower+1)^0,c
  5952  005416  C01A  F01E         	movff	tolower@c,??_tolower+2
  5953  00541A  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5954  00541E  501C               	movf	??_tolower^0,w,c
  5955  005420  261E               	addwf	(??_tolower+2)^0,f,c
  5956  005422  501D               	movf	(??_tolower+1)^0,w,c
  5957  005424  221F               	addwfc	(??_tolower+3)^0,f,c
  5958  005426  501F               	movf	(??_tolower+3)^0,w,c
  5959  005428  E10A               	bnz	u8650
  5960  00542A  0E1A               	movlw	26
  5961  00542C  5C1E               	subwf	(??_tolower+2)^0,w,c
  5962  00542E  A0D8               	btfss	status,0,c
  5963  005430  EF1C  F02A         	goto	u8651
  5964  005434  EF1F  F02A         	goto	u8650
  5965  005438                     u8651:
  5966  005438  0E01               	movlw	1
  5967  00543A  EF20  F02A         	goto	u8660
  5968  00543E                     u8650:
  5969  00543E  0E00               	movlw	0
  5970  005440                     u8660:
  5971  005440  6E20               	movwf	_tolower$3676^0,c
  5972  005442  6A21               	clrf	(_tolower$3676+1)^0,c
  5973  005444  5020               	movf	_tolower$3676^0,w,c
  5974  005446  1021               	iorwf	(_tolower$3676+1)^0,w,c
  5975  005448  B4D8               	btfsc	status,2,c
  5976  00544A  EF29  F02A         	goto	u8671
  5977  00544E  EF2B  F02A         	goto	u8670
  5978  005452                     u8671:
  5979  005452  EF32  F02A         	goto	l2346
  5980  005456                     u8670:
  5981  005456  0E20               	movlw	32
  5982  005458  101A               	iorwf	tolower@c^0,w,c
  5983  00545A  6E1A               	movwf	?_tolower^0,c
  5984  00545C  501B               	movf	(tolower@c+1)^0,w,c
  5985  00545E  6E1B               	movwf	(?_tolower+1)^0,c
  5986  005460  EF36  F02A         	goto	l2351
  5987  005464                     l2346:
  5988  005464  C01A  F01A         	movff	tolower@c,?_tolower
  5989  005468  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5990  00546C                     l2351:
  5991  00546C  0012               	return		;funcret
  5992  00546E                     __end_of_tolower:
  5993                           	callstack 0
  5994                           
  5995 ;; *************** function _isupper *****************
  5996 ;; Defined at:
  5997 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;  c               2   19[COMRAM] int 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  2   19[COMRAM] int 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;Total ram usage:        6 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; Hardware stack levels required when called: 8
  6018 ;; This function calls:
  6019 ;;		Nothing
  6020 ;; This function is called by:
  6021 ;;		_efgtoa
  6022 ;;		_vfpfcnvrt
  6023 ;;		_tolower
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text12
  6028  005866                     __ptext12:
  6029                           	callstack 0
  6030  005866                     _isupper:
  6031                           	callstack 16
  6032  005866  0EBF               	movlw	191
  6033  005868  6E16               	movwf	??_isupper^0,c
  6034  00586A  0EFF               	movlw	255
  6035  00586C  6E17               	movwf	(??_isupper+1)^0,c
  6036  00586E  C014  F018         	movff	isupper@c,??_isupper+2
  6037  005872  C015  F019         	movff	isupper@c+1,??_isupper+3
  6038  005876  5016               	movf	??_isupper^0,w,c
  6039  005878  2618               	addwf	(??_isupper+2)^0,f,c
  6040  00587A  5017               	movf	(??_isupper+1)^0,w,c
  6041  00587C  2219               	addwfc	(??_isupper+3)^0,f,c
  6042  00587E  5019               	movf	(??_isupper+3)^0,w,c
  6043  005880  E10A               	bnz	u7660
  6044  005882  0E1A               	movlw	26
  6045  005884  5C18               	subwf	(??_isupper+2)^0,w,c
  6046  005886  A0D8               	btfss	status,0,c
  6047  005888  EF48  F02C         	goto	u7661
  6048  00588C  EF4B  F02C         	goto	u7660
  6049  005890                     u7661:
  6050  005890  0E01               	movlw	1
  6051  005892  EF4C  F02C         	goto	u7670
  6052  005896                     u7660:
  6053  005896  0E00               	movlw	0
  6054  005898                     u7670:
  6055  005898  6E14               	movwf	?_isupper^0,c
  6056  00589A  6A15               	clrf	(?_isupper+1)^0,c
  6057  00589C  0012               	return		;funcret
  6058  00589E                     __end_of_isupper:
  6059                           	callstack 0
  6060                           
  6061 ;; *************** function _strcpy *****************
  6062 ;; Defined at:
  6063 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6066 ;;		 -> dbuf(80), 
  6067 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6068 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6069 ;;		 -> dbuf(80), 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  d               2   27[COMRAM] PTR unsigned char 
  6072 ;;		 -> dbuf(80), 
  6073 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6074 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6075 ;;		 -> dbuf(80), 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  2   19[COMRAM] PTR unsigned char 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:       10 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 8
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_efgtoa
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text13
  6100  00533E                     __ptext13:
  6101                           	callstack 0
  6102  00533E                     _strcpy:
  6103                           	callstack 16
  6104  00533E  C016  F01A         	movff	strcpy@src,strcpy@s
  6105  005342  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6106  005346  C014  F01C         	movff	strcpy@dest,strcpy@d
  6107  00534A  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6108  00534E                     l8218:
  6109  00534E  501A               	movf	strcpy@s^0,w,c
  6110  005350  6E18               	movwf	??_strcpy^0,c
  6111  005352  501B               	movf	(strcpy@s+1)^0,w,c
  6112  005354  6E19               	movwf	(??_strcpy+1)^0,c
  6113  005356  4A1A               	infsnz	strcpy@s^0,f,c
  6114  005358  2A1B               	incf	(strcpy@s+1)^0,f,c
  6115  00535A  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6116  005360  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6117  005366  0E00               	movlw	low (__smallconst shr (0+16))
  6118  005368  6EF8               	movwf	tblptru,c
  6119  00536A  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6120  005370  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6121  005376  4A1C               	infsnz	strcpy@d^0,f,c
  6122  005378  2A1D               	incf	(strcpy@d+1)^0,f,c
  6123  00537A  0E0F               	movlw	(high __ramtop+-1)
  6124  00537C  64F7               	cpfsgt	tblptrh,c
  6125  00537E  D003               	bra	u8637
  6126  005380  0008               	tblrd		*
  6127  005382  50F5               	movf	tablat,w,c
  6128  005384  D007               	bra	u8630
  6129  005386                     u8637:
  6130  005386  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6131  00538C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6132  005392  50E7               	movf	indf1,w,c
  6133  005394                     u8630:
  6134  005394  6EDF               	movwf	indf2,c
  6135  005396  50DF               	movf	indf2,w,c
  6136  005398  A4D8               	btfss	status,2,c
  6137  00539A  EFD1  F029         	goto	u8641
  6138  00539E  EFD3  F029         	goto	u8640
  6139  0053A2                     u8641:
  6140  0053A2  EFA7  F029         	goto	l8218
  6141  0053A6                     u8640:
  6142  0053A6  0012               	return		;funcret
  6143  0053A8                     __end_of_strcpy:
  6144                           	callstack 0
  6145                           
  6146 ;; *************** function _floorf *****************
  6147 ;; Defined at:
  6148 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6149 ;; Parameters:    Size  Location     Type
  6150 ;;  x               4   44[COMRAM] float 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  u               4    6[BANK0 ] struct .
  6153 ;;  m               4    0[BANK0 ] unsigned long 
  6154 ;;  e               2    4[BANK0 ] int 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  4   44[COMRAM] float 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;Total ram usage:       20 bytes
  6169 ;; Hardware stack levels used: 1
  6170 ;; Hardware stack levels required when called: 8
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_efgtoa
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text14
  6179  0036AC                     __ptext14:
  6180                           	callstack 0
  6181  0036AC                     _floorf:
  6182                           	callstack 16
  6183  0036AC  C118  F066         	movff	floorf@F527,floorf@u
  6184  0036B0  C119  F067         	movff	floorf@F527+1,floorf@u+1
  6185  0036B4  C11A  F068         	movff	floorf@F527+2,floorf@u+2
  6186  0036B8  C11B  F069         	movff	floorf@F527+3,floorf@u+3
  6187  0036BC  C02D  F066         	movff	floorf@x,floorf@u
  6188  0036C0  C02E  F067         	movff	floorf@x+1,floorf@u+1
  6189  0036C4  C02F  F068         	movff	floorf@x+2,floorf@u+2
  6190  0036C8  C030  F069         	movff	floorf@x+3,floorf@u+3
  6191  0036CC  0E81               	movlw	129
  6192  0036CE  6E31               	movwf	??_floorf^0,c
  6193  0036D0  0EFF               	movlw	255
  6194  0036D2  6E32               	movwf	(??_floorf+1)^0,c
  6195  0036D4  C066  F033         	movff	floorf@u,??_floorf+2
  6196  0036D8  C067  F034         	movff	floorf@u+1,??_floorf+3
  6197  0036DC  C068  F035         	movff	floorf@u+2,??_floorf+4
  6198  0036E0  C069  F036         	movff	floorf@u+3,??_floorf+5
  6199  0036E4  0E18               	movlw	24
  6200  0036E6  EF7A  F01B         	goto	u8680
  6201  0036EA                     u8685:
  6202  0036EA  90D8               	bcf	status,0,c
  6203  0036EC  3236               	rrcf	(??_floorf+5)^0,f,c
  6204  0036EE  3235               	rrcf	(??_floorf+4)^0,f,c
  6205  0036F0  3234               	rrcf	(??_floorf+3)^0,f,c
  6206  0036F2  3233               	rrcf	(??_floorf+2)^0,f,c
  6207  0036F4                     u8680:
  6208  0036F4  2EE8               	decfsz	wreg,f,c
  6209  0036F6  EF75  F01B         	goto	u8685
  6210  0036FA  5033               	movf	(??_floorf+2)^0,w,c
  6211  0036FC  2431               	addwf	??_floorf^0,w,c
  6212  0036FE  0100               	movlb	0	; () banked
  6213  003700  6F64               	movwf	floorf@e& (0+255),b
  6214  003702  0E00               	movlw	0
  6215  003704  2032               	addwfc	(??_floorf+1)^0,w,c
  6216  003706  6F65               	movwf	(floorf@e+1)& (0+255),b
  6217  003708  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6218  00370A  EF90  F01B         	goto	u8691
  6219  00370E  5165               	movf	(floorf@e+1)& (0+255),w,b
  6220  003710  E109               	bnz	u8690
  6221  003712  0E17               	movlw	23
  6222  003714  5D64               	subwf	floorf@e& (0+255),w,b
  6223  003716  A0D8               	btfss	status,0,c
  6224  003718  EF90  F01B         	goto	u8691
  6225  00371C  EF92  F01B         	goto	u8690
  6226  003720                     u8691:
  6227  003720  EF9C  F01B         	goto	l8236
  6228  003724                     u8690:
  6229  003724                     l8234:
  6230                           
  6231                           ; BSR set to: 0
  6232  003724  C02D  F02D         	movff	floorf@x,?_floorf
  6233  003728  C02E  F02E         	movff	floorf@x+1,?_floorf+1
  6234  00372C  C02F  F02F         	movff	floorf@x+2,?_floorf+2
  6235  003730  C030  F030         	movff	floorf@x+3,?_floorf+3
  6236  003734  EF60  F01C         	goto	l2287
  6237  003738                     l8236:
  6238                           
  6239                           ; BSR set to: 0
  6240  003738  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6241  00373A  EFA1  F01B         	goto	u8701
  6242  00373E  EFA3  F01B         	goto	u8700
  6243  003742                     u8701:
  6244  003742  EF14  F01C         	goto	l8246
  6245  003746                     u8700:
  6246  003746                     
  6247                           ; BSR set to: 0
  6248  003746  C064  F031         	movff	floorf@e,??_floorf
  6249  00374A  0EFF               	movlw	255
  6250  00374C  6E32               	movwf	(??_floorf+1)^0,c
  6251  00374E  0EFF               	movlw	255
  6252  003750  6E33               	movwf	(??_floorf+2)^0,c
  6253  003752  0E7F               	movlw	127
  6254  003754  6E34               	movwf	(??_floorf+3)^0,c
  6255  003756  0E00               	movlw	0
  6256  003758  6E35               	movwf	(??_floorf+4)^0,c
  6257  00375A                     u8715:
  6258  00375A  6631               	tstfsz	??_floorf^0,c
  6259  00375C  EFB2  F01B         	goto	u8716
  6260  003760  EFBA  F01B         	goto	u8717
  6261  003764                     u8716:
  6262  003764  3435               	rlcf	(??_floorf+4)^0,w,c
  6263  003766  3235               	rrcf	(??_floorf+4)^0,f,c
  6264  003768  3234               	rrcf	(??_floorf+3)^0,f,c
  6265  00376A  3233               	rrcf	(??_floorf+2)^0,f,c
  6266  00376C  3232               	rrcf	(??_floorf+1)^0,f,c
  6267  00376E  2E31               	decfsz	??_floorf^0,f,c
  6268  003770  EFAD  F01B         	goto	u8715
  6269  003774                     u8717:
  6270  003774  C032  F060         	movff	??_floorf+1,floorf@m
  6271  003778  C033  F061         	movff	??_floorf+2,floorf@m+1
  6272  00377C  C034  F062         	movff	??_floorf+3,floorf@m+2
  6273  003780  C035  F063         	movff	??_floorf+4,floorf@m+3
  6274  003784  0100               	movlb	0	; () banked
  6275  003786  5160               	movf	floorf@m& (0+255),w,b
  6276  003788  1566               	andwf	floorf@u& (0+255),w,b
  6277  00378A  6E31               	movwf	??_floorf^0,c
  6278  00378C  5161               	movf	(floorf@m+1)& (0+255),w,b
  6279  00378E  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6280  003790  6E32               	movwf	(??_floorf+1)^0,c
  6281  003792  5162               	movf	(floorf@m+2)& (0+255),w,b
  6282  003794  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6283  003796  6E33               	movwf	(??_floorf+2)^0,c
  6284  003798  5163               	movf	(floorf@m+3)& (0+255),w,b
  6285  00379A  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6286  00379C  6E34               	movwf	(??_floorf+3)^0,c
  6287  00379E  5031               	movf	??_floorf^0,w,c
  6288  0037A0  1032               	iorwf	(??_floorf+1)^0,w,c
  6289  0037A2  1033               	iorwf	(??_floorf+2)^0,w,c
  6290  0037A4  1034               	iorwf	(??_floorf+3)^0,w,c
  6291  0037A6  A4D8               	btfss	status,2,c
  6292  0037A8  EFD8  F01B         	goto	u8721
  6293  0037AC  EFDA  F01B         	goto	u8720
  6294  0037B0                     u8721:
  6295  0037B0  EFDC  F01B         	goto	l8242
  6296  0037B4                     u8720:
  6297  0037B4  EF92  F01B         	goto	l8234
  6298  0037B8                     l8242:
  6299                           
  6300                           ; BSR set to: 0
  6301  0037B8  C066  F031         	movff	floorf@u,??_floorf
  6302  0037BC  C067  F032         	movff	floorf@u+1,??_floorf+1
  6303  0037C0  C068  F033         	movff	floorf@u+2,??_floorf+2
  6304  0037C4  C069  F034         	movff	floorf@u+3,??_floorf+3
  6305  0037C8  0E20               	movlw	32
  6306  0037CA  EFEC  F01B         	goto	u8730
  6307  0037CE                     u8735:
  6308  0037CE  90D8               	bcf	status,0,c
  6309  0037D0  3234               	rrcf	(??_floorf+3)^0,f,c
  6310  0037D2  3233               	rrcf	(??_floorf+2)^0,f,c
  6311  0037D4  3232               	rrcf	(??_floorf+1)^0,f,c
  6312  0037D6  3231               	rrcf	??_floorf^0,f,c
  6313  0037D8                     u8730:
  6314  0037D8  2EE8               	decfsz	wreg,f,c
  6315  0037DA  EFE7  F01B         	goto	u8735
  6316  0037DE  5031               	movf	??_floorf^0,w,c
  6317  0037E0  1032               	iorwf	(??_floorf+1)^0,w,c
  6318  0037E2  1033               	iorwf	(??_floorf+2)^0,w,c
  6319  0037E4  1034               	iorwf	(??_floorf+3)^0,w,c
  6320  0037E6  B4D8               	btfsc	status,2,c
  6321  0037E8  EFF8  F01B         	goto	u8741
  6322  0037EC  EFFA  F01B         	goto	u8740
  6323  0037F0                     u8741:
  6324  0037F0  EF02  F01C         	goto	l2290
  6325  0037F4                     u8740:
  6326  0037F4                     
  6327                           ; BSR set to: 0
  6328  0037F4  5160               	movf	floorf@m& (0+255),w,b
  6329  0037F6  2766               	addwf	floorf@u& (0+255),f,b
  6330  0037F8  5161               	movf	(floorf@m+1)& (0+255),w,b
  6331  0037FA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6332  0037FC  5162               	movf	(floorf@m+2)& (0+255),w,b
  6333  0037FE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6334  003800  5163               	movf	(floorf@m+3)& (0+255),w,b
  6335  003802  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6336  003804                     l2290:
  6337                           
  6338                           ; BSR set to: 0
  6339  003804  1D60               	comf	floorf@m& (0+255),w,b
  6340  003806  6E31               	movwf	??_floorf^0,c
  6341  003808  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6342  00380A  6E32               	movwf	(??_floorf+1)^0,c
  6343  00380C  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6344  00380E  6E33               	movwf	(??_floorf+2)^0,c
  6345  003810  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6346  003812  6E34               	movwf	(??_floorf+3)^0,c
  6347  003814  5031               	movf	??_floorf^0,w,c
  6348  003816  1766               	andwf	floorf@u& (0+255),f,b
  6349  003818  5032               	movf	(??_floorf+1)^0,w,c
  6350  00381A  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6351  00381C  5033               	movf	(??_floorf+2)^0,w,c
  6352  00381E  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6353  003820  5034               	movf	(??_floorf+3)^0,w,c
  6354  003822  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6355  003824  EF58  F01C         	goto	l8254
  6356  003828                     l8246:
  6357                           
  6358                           ; BSR set to: 0
  6359  003828  C066  F031         	movff	floorf@u,??_floorf
  6360  00382C  C067  F032         	movff	floorf@u+1,??_floorf+1
  6361  003830  C068  F033         	movff	floorf@u+2,??_floorf+2
  6362  003834  C069  F034         	movff	floorf@u+3,??_floorf+3
  6363  003838  0E20               	movlw	32
  6364  00383A  EF24  F01C         	goto	u8750
  6365  00383E                     u8755:
  6366  00383E  90D8               	bcf	status,0,c
  6367  003840  3234               	rrcf	(??_floorf+3)^0,f,c
  6368  003842  3233               	rrcf	(??_floorf+2)^0,f,c
  6369  003844  3232               	rrcf	(??_floorf+1)^0,f,c
  6370  003846  3231               	rrcf	??_floorf^0,f,c
  6371  003848                     u8750:
  6372  003848  2EE8               	decfsz	wreg,f,c
  6373  00384A  EF1F  F01C         	goto	u8755
  6374  00384E  5031               	movf	??_floorf^0,w,c
  6375  003850  1032               	iorwf	(??_floorf+1)^0,w,c
  6376  003852  1033               	iorwf	(??_floorf+2)^0,w,c
  6377  003854  1034               	iorwf	(??_floorf+3)^0,w,c
  6378  003856  A4D8               	btfss	status,2,c
  6379  003858  EF30  F01C         	goto	u8761
  6380  00385C  EF32  F01C         	goto	u8760
  6381  003860                     u8761:
  6382  003860  EF3C  F01C         	goto	l8250
  6383  003864                     u8760:
  6384  003864                     
  6385                           ; BSR set to: 0
  6386  003864  0E00               	movlw	0
  6387  003866  6F66               	movwf	floorf@u& (0+255),b
  6388  003868  0E00               	movlw	0
  6389  00386A  6F67               	movwf	(floorf@u+1)& (0+255),b
  6390  00386C  0E00               	movlw	0
  6391  00386E  6F68               	movwf	(floorf@u+2)& (0+255),b
  6392  003870  0E00               	movlw	0
  6393  003872  6F69               	movwf	(floorf@u+3)& (0+255),b
  6394  003874  EF58  F01C         	goto	l8254
  6395  003878                     l8250:
  6396                           
  6397                           ; BSR set to: 0
  6398  003878  90D8               	bcf	status,0,c
  6399  00387A  3566               	rlcf	floorf@u& (0+255),w,b
  6400  00387C  6E31               	movwf	??_floorf^0,c
  6401  00387E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6402  003880  6E32               	movwf	(??_floorf+1)^0,c
  6403  003882  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6404  003884  6E33               	movwf	(??_floorf+2)^0,c
  6405  003886  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6406  003888  6E34               	movwf	(??_floorf+3)^0,c
  6407  00388A  5031               	movf	??_floorf^0,w,c
  6408  00388C  1032               	iorwf	(??_floorf+1)^0,w,c
  6409  00388E  1033               	iorwf	(??_floorf+2)^0,w,c
  6410  003890  1034               	iorwf	(??_floorf+3)^0,w,c
  6411  003892  B4D8               	btfsc	status,2,c
  6412  003894  EF4E  F01C         	goto	u8771
  6413  003898  EF50  F01C         	goto	u8770
  6414  00389C                     u8771:
  6415  00389C  EF58  F01C         	goto	l8254
  6416  0038A0                     u8770:
  6417  0038A0                     
  6418                           ; BSR set to: 0
  6419  0038A0  0E00               	movlw	0
  6420  0038A2  6F66               	movwf	floorf@u& (0+255),b
  6421  0038A4  0E00               	movlw	0
  6422  0038A6  6F67               	movwf	(floorf@u+1)& (0+255),b
  6423  0038A8  0E80               	movlw	128
  6424  0038AA  6F68               	movwf	(floorf@u+2)& (0+255),b
  6425  0038AC  0EBF               	movlw	191
  6426  0038AE  6F69               	movwf	(floorf@u+3)& (0+255),b
  6427  0038B0                     l8254:
  6428                           
  6429                           ; BSR set to: 0
  6430  0038B0  C066  F02D         	movff	floorf@u,?_floorf
  6431  0038B4  C067  F02E         	movff	floorf@u+1,?_floorf+1
  6432  0038B8  C068  F02F         	movff	floorf@u+2,?_floorf+2
  6433  0038BC  C069  F030         	movff	floorf@u+3,?_floorf+3
  6434  0038C0                     l2287:
  6435                           
  6436                           ; BSR set to: 0
  6437  0038C0  0012               	return		;funcret
  6438  0038C2                     __end_of_floorf:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function ___fpclassifyf *****************
  6442 ;; Defined at:
  6443 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  x               4   19[COMRAM] float 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  u               4   29[COMRAM] struct .
  6448 ;;  e               2   27[COMRAM] int 
  6449 ;; Return value:  Size  Location     Type
  6450 ;;                  2   19[COMRAM] int 
  6451 ;; Registers used:
  6452 ;;		wreg, status,2, status,0
  6453 ;; Tracked objects:
  6454 ;;		On entry : 0/0
  6455 ;;		On exit  : 0/0
  6456 ;;		Unchanged: 0/0
  6457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;Total ram usage:       14 bytes
  6463 ;; Hardware stack levels used: 1
  6464 ;; Hardware stack levels required when called: 8
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_efgtoa
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text15
  6473  004930                     __ptext15:
  6474                           	callstack 0
  6475  004930                     ___fpclassifyf:
  6476                           	callstack 16
  6477  004930  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6478  004934  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6479  004938  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6480  00493C  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6481  004940  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6482  004944  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6483  004948  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6484  00494C  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6485  004950  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6486  004954  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6487  004958  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6488  00495C  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6489  004960  0E18               	movlw	24
  6490  004962  EFB8  F024         	goto	u8560
  6491  004966                     u8565:
  6492  004966  90D8               	bcf	status,0,c
  6493  004968  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6494  00496A  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6495  00496C  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6496  00496E  3218               	rrcf	??___fpclassifyf^0,f,c
  6497  004970                     u8560:
  6498  004970  2EE8               	decfsz	wreg,f,c
  6499  004972  EFB3  F024         	goto	u8565
  6500  004976  5018               	movf	??___fpclassifyf^0,w,c
  6501  004978  6E1C               	movwf	___fpclassifyf@e^0,c
  6502  00497A  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6503  00497C  501C               	movf	___fpclassifyf@e^0,w,c
  6504  00497E  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6505  004980  A4D8               	btfss	status,2,c
  6506  004982  EFC5  F024         	goto	u8571
  6507  004986  EFC7  F024         	goto	u8570
  6508  00498A                     u8571:
  6509  00498A  EFE7  F024         	goto	l8206
  6510  00498E                     u8570:
  6511  00498E  90D8               	bcf	status,0,c
  6512  004990  341E               	rlcf	___fpclassifyf@u^0,w,c
  6513  004992  6E18               	movwf	??___fpclassifyf^0,c
  6514  004994  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6515  004996  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6516  004998  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6517  00499A  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6518  00499C  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6519  00499E  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6520  0049A0  5018               	movf	??___fpclassifyf^0,w,c
  6521  0049A2  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6522  0049A4  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6523  0049A6  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6524  0049A8  A4D8               	btfss	status,2,c
  6525  0049AA  EFD9  F024         	goto	u8581
  6526  0049AE  EFDB  F024         	goto	u8580
  6527  0049B2                     u8581:
  6528  0049B2  EFE1  F024         	goto	l8202
  6529  0049B6                     u8580:
  6530  0049B6  0E00               	movlw	0
  6531  0049B8  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6532  0049BA  0E02               	movlw	2
  6533  0049BC  6E14               	movwf	?___fpclassifyf^0,c
  6534  0049BE  EF16  F025         	goto	l2273
  6535  0049C2                     l8202:
  6536  0049C2  0E00               	movlw	0
  6537  0049C4  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6538  0049C6  0E03               	movlw	3
  6539  0049C8  6E14               	movwf	?___fpclassifyf^0,c
  6540  0049CA  EF16  F025         	goto	l2273
  6541  0049CE                     l8206:
  6542  0049CE  281C               	incf	___fpclassifyf@e^0,w,c
  6543  0049D0  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6544  0049D2  A4D8               	btfss	status,2,c
  6545  0049D4  EFEE  F024         	goto	u8591
  6546  0049D8  EFF0  F024         	goto	u8590
  6547  0049DC                     u8591:
  6548  0049DC  EF12  F025         	goto	l8212
  6549  0049E0                     u8590:
  6550  0049E0  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6551  0049E4  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6552  0049E8  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6553  0049EC  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6554  0049F0  0E09               	movlw	9
  6555  0049F2                     u8605:
  6556  0049F2  90D8               	bcf	status,0,c
  6557  0049F4  3618               	rlcf	??___fpclassifyf^0,f,c
  6558  0049F6  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6559  0049F8  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6560  0049FA  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6561  0049FC  2EE8               	decfsz	wreg,f,c
  6562  0049FE  EFF9  F024         	goto	u8605
  6563  004A02  5018               	movf	??___fpclassifyf^0,w,c
  6564  004A04  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6565  004A06  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6566  004A08  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6567  004A0A  B4D8               	btfsc	status,2,c
  6568  004A0C  EF0A  F025         	goto	u8611
  6569  004A10  EF0D  F025         	goto	u8610
  6570  004A14                     u8611:
  6571  004A14  0E01               	movlw	1
  6572  004A16  EF0E  F025         	goto	u8620
  6573  004A1A                     u8610:
  6574  004A1A  0E00               	movlw	0
  6575  004A1C                     u8620:
  6576  004A1C  6E14               	movwf	?___fpclassifyf^0,c
  6577  004A1E  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6578  004A20  EF16  F025         	goto	l2273
  6579  004A24                     l8212:
  6580  004A24  0E00               	movlw	0
  6581  004A26  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6582  004A28  0E04               	movlw	4
  6583  004A2A  6E14               	movwf	?___fpclassifyf^0,c
  6584  004A2C                     l2273:
  6585  004A2C  0012               	return		;funcret
  6586  004A2E                     __end_of___fpclassifyf:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function ___flsub *****************
  6590 ;; Defined at:
  6591 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  b               4   25[BANK0 ] int 
  6594 ;;  a               4   29[BANK0 ] int 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;		None
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  4   25[BANK0 ] int 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6606 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;Total ram usage:        8 bytes
  6611 ;; Hardware stack levels used: 1
  6612 ;; Hardware stack levels required when called: 9
  6613 ;; This function calls:
  6614 ;;		___fladd
  6615 ;; This function is called by:
  6616 ;;		_efgtoa
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text16
  6621  0056A6                     __ptext16:
  6622                           	callstack 0
  6623  0056A6                     ___flsub:
  6624                           	callstack 15
  6625  0056A6  0E00               	movlw	0
  6626  0056A8  0100               	movlb	0	; () banked
  6627  0056AA  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6628  0056AC  0E00               	movlw	0
  6629  0056AE  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6630  0056B0  0E00               	movlw	0
  6631  0056B2  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6632  0056B4  0E80               	movlw	128
  6633  0056B6  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6634  0056B8                     
  6635                           ; BSR set to: 0
  6636  0056B8  C079  F06D         	movff	___flsub@b,___fladd@b
  6637  0056BC  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6638  0056C0  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6639  0056C4  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6640  0056C8  C07D  F071         	movff	___flsub@a,___fladd@a
  6641  0056CC  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6642  0056D0  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6643  0056D4  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6644  0056D8  EC21  F011         	call	___fladd	;wreg free
  6645  0056DC  C06D  F079         	movff	?___fladd,?___flsub
  6646  0056E0  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6647  0056E4  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6648  0056E8  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6649  0056EC  0012               	return		;funcret
  6650  0056EE                     __end_of___flsub:
  6651                           	callstack 0
  6652                           
  6653 ;; *************** function ___flneg *****************
  6654 ;; Defined at:
  6655 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  f1              4   19[COMRAM] int 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  4   19[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6669 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;Total ram usage:        4 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; Hardware stack levels required when called: 8
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_efgtoa
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text17
  6684  00589E                     __ptext17:
  6685                           	callstack 0
  6686  00589E                     ___flneg:
  6687                           	callstack 16
  6688  00589E  5014               	movf	___flneg@f1^0,w,c
  6689  0058A0  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6690  0058A2  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6691  0058A4  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6692  0058A6  B4D8               	btfsc	status,2,c
  6693  0058A8  EF58  F02C         	goto	u8431
  6694  0058AC  EF5A  F02C         	goto	u8430
  6695  0058B0                     u8431:
  6696  0058B0  EF62  F02C         	goto	l8120
  6697  0058B4                     u8430:
  6698  0058B4  0E00               	movlw	0
  6699  0058B6  1A14               	xorwf	___flneg@f1^0,f,c
  6700  0058B8  0E00               	movlw	0
  6701  0058BA  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6702  0058BC  0E00               	movlw	0
  6703  0058BE  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6704  0058C0  0E80               	movlw	128
  6705  0058C2  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6706  0058C4                     l8120:
  6707  0058C4  C014  F014         	movff	___flneg@f1,?___flneg
  6708  0058C8  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6709  0058CC  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6710  0058D0  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6711  0058D4  0012               	return		;funcret
  6712  0058D6                     __end_of___flneg:
  6713                           	callstack 0
  6714                           
  6715 ;; *************** function ___fleq *****************
  6716 ;; Defined at:
  6717 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  ff1             4   19[COMRAM] int 
  6720 ;;  ff2             4   23[COMRAM] int 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;		None
  6723 ;; Return value:  Size  Location     Type
  6724 ;;		None               void
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6732 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;Total ram usage:       12 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 8
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_efgtoa
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text18
  6747  004FC4                     __ptext18:
  6748                           	callstack 0
  6749  004FC4                     ___fleq:
  6750                           	callstack 16
  6751  004FC4  0E00               	movlw	0
  6752  004FC6  1414               	andwf	___fleq@ff1^0,w,c
  6753  004FC8  6E1C               	movwf	??___fleq^0,c
  6754  004FCA  0E00               	movlw	0
  6755  004FCC  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6756  004FCE  6E1D               	movwf	(??___fleq+1)^0,c
  6757  004FD0  0E80               	movlw	128
  6758  004FD2  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6759  004FD4  6E1E               	movwf	(??___fleq+2)^0,c
  6760  004FD6  0E7F               	movlw	127
  6761  004FD8  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6762  004FDA  6E1F               	movwf	(??___fleq+3)^0,c
  6763  004FDC  501C               	movf	??___fleq^0,w,c
  6764  004FDE  101D               	iorwf	(??___fleq+1)^0,w,c
  6765  004FE0  101E               	iorwf	(??___fleq+2)^0,w,c
  6766  004FE2  101F               	iorwf	(??___fleq+3)^0,w,c
  6767  004FE4  A4D8               	btfss	status,2,c
  6768  004FE6  EFF7  F027         	goto	u8351
  6769  004FEA  EFF9  F027         	goto	u8350
  6770  004FEE                     u8351:
  6771  004FEE  EF01  F028         	goto	l8082
  6772  004FF2                     u8350:
  6773  004FF2  0E00               	movlw	0
  6774  004FF4  6E14               	movwf	___fleq@ff1^0,c
  6775  004FF6  0E00               	movlw	0
  6776  004FF8  6E15               	movwf	(___fleq@ff1+1)^0,c
  6777  004FFA  0E00               	movlw	0
  6778  004FFC  6E16               	movwf	(___fleq@ff1+2)^0,c
  6779  004FFE  0E00               	movlw	0
  6780  005000  6E17               	movwf	(___fleq@ff1+3)^0,c
  6781  005002                     l8082:
  6782  005002  0E00               	movlw	0
  6783  005004  1418               	andwf	___fleq@ff2^0,w,c
  6784  005006  6E1C               	movwf	??___fleq^0,c
  6785  005008  0E00               	movlw	0
  6786  00500A  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6787  00500C  6E1D               	movwf	(??___fleq+1)^0,c
  6788  00500E  0E80               	movlw	128
  6789  005010  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6790  005012  6E1E               	movwf	(??___fleq+2)^0,c
  6791  005014  0E7F               	movlw	127
  6792  005016  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6793  005018  6E1F               	movwf	(??___fleq+3)^0,c
  6794  00501A  501C               	movf	??___fleq^0,w,c
  6795  00501C  101D               	iorwf	(??___fleq+1)^0,w,c
  6796  00501E  101E               	iorwf	(??___fleq+2)^0,w,c
  6797  005020  101F               	iorwf	(??___fleq+3)^0,w,c
  6798  005022  A4D8               	btfss	status,2,c
  6799  005024  EF16  F028         	goto	u8361
  6800  005028  EF18  F028         	goto	u8360
  6801  00502C                     u8361:
  6802  00502C  EF20  F028         	goto	l8086
  6803  005030                     u8360:
  6804  005030  0E00               	movlw	0
  6805  005032  6E18               	movwf	___fleq@ff2^0,c
  6806  005034  0E00               	movlw	0
  6807  005036  6E19               	movwf	(___fleq@ff2+1)^0,c
  6808  005038  0E00               	movlw	0
  6809  00503A  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6810  00503C  0E00               	movlw	0
  6811  00503E  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6812  005040                     l8086:
  6813  005040  5018               	movf	___fleq@ff2^0,w,c
  6814  005042  1814               	xorwf	___fleq@ff1^0,w,c
  6815  005044  E10F               	bnz	u8370
  6816  005046  5019               	movf	(___fleq@ff2+1)^0,w,c
  6817  005048  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6818  00504A  E10C               	bnz	u8370
  6819  00504C  501A               	movf	(___fleq@ff2+2)^0,w,c
  6820  00504E  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6821  005050  E109               	bnz	u8370
  6822  005052  501B               	movf	(___fleq@ff2+3)^0,w,c
  6823  005054  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6824  005056  B4D8               	btfsc	status,2,c
  6825  005058  EF30  F028         	goto	u8371
  6826  00505C  EF32  F028         	goto	u8370
  6827  005060                     u8371:
  6828  005060  EF35  F028         	goto	l8090
  6829  005064                     u8370:
  6830  005064  90D8               	bcf	status,0,c
  6831  005066  EF36  F028         	goto	l1657
  6832  00506A                     l8090:
  6833  00506A  80D8               	bsf	status,0,c
  6834  00506C                     l1657:
  6835  00506C  0012               	return		;funcret
  6836  00506E                     __end_of___fleq:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function ___fldiv *****************
  6840 ;; Defined at:
  6841 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  b               4   19[COMRAM] int 
  6844 ;;  a               4   23[COMRAM] int 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  grs             4   38[COMRAM] unsigned long 
  6847 ;;  rem             4   31[COMRAM] unsigned long 
  6848 ;;  new_exp         2   36[COMRAM] short 
  6849 ;;  aexp            1   43[COMRAM] unsigned char 
  6850 ;;  bexp            1   42[COMRAM] unsigned char 
  6851 ;;  sign            1   35[COMRAM] unsigned char 
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  4   19[COMRAM] unsigned char 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2, status,0
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6861 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;Total ram usage:       25 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; Hardware stack levels required when called: 8
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_efgtoa
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text19
  6876  002B54                     __ptext19:
  6877                           	callstack 0
  6878  002B54                     ___fldiv:
  6879                           	callstack 16
  6880  002B54  5017               	movf	(___fldiv@b+3)^0,w,c
  6881  002B56  0B80               	andlw	128
  6882  002B58  6E24               	movwf	___fldiv@sign^0,c
  6883  002B5A  5017               	movf	(___fldiv@b+3)^0,w,c
  6884  002B5C  2417               	addwf	(___fldiv@b+3)^0,w,c
  6885  002B5E  6E2B               	movwf	___fldiv@bexp^0,c
  6886  002B60  AE16               	btfss	(___fldiv@b+2)^0,7,c
  6887  002B62  EFB5  F015         	goto	u7811
  6888  002B66  EFB7  F015         	goto	u7810
  6889  002B6A                     u7811:
  6890  002B6A  EFB8  F015         	goto	l7730
  6891  002B6E                     u7810:
  6892  002B6E  802B               	bsf	___fldiv@bexp^0,0,c
  6893  002B70                     l7730:
  6894  002B70  502B               	movf	___fldiv@bexp^0,w,c
  6895  002B72  B4D8               	btfsc	status,2,c
  6896  002B74  EFBE  F015         	goto	u7821
  6897  002B78  EFC0  F015         	goto	u7820
  6898  002B7C                     u7821:
  6899  002B7C  EFD5  F015         	goto	l7740
  6900  002B80                     u7820:
  6901  002B80  282B               	incf	___fldiv@bexp^0,w,c
  6902  002B82  A4D8               	btfss	status,2,c
  6903  002B84  EFC6  F015         	goto	u7831
  6904  002B88  EFC8  F015         	goto	u7830
  6905  002B8C                     u7831:
  6906  002B8C  EFD0  F015         	goto	l7736
  6907  002B90                     u7830:
  6908  002B90  0E00               	movlw	0
  6909  002B92  6E14               	movwf	___fldiv@b^0,c
  6910  002B94  0E00               	movlw	0
  6911  002B96  6E15               	movwf	(___fldiv@b+1)^0,c
  6912  002B98  0E00               	movlw	0
  6913  002B9A  6E16               	movwf	(___fldiv@b+2)^0,c
  6914  002B9C  0E00               	movlw	0
  6915  002B9E  6E17               	movwf	(___fldiv@b+3)^0,c
  6916  002BA0                     l7736:
  6917  002BA0  8E16               	bsf	(___fldiv@b+2)^0,7,c
  6918  002BA2  0E00               	movlw	0
  6919  002BA4  6E17               	movwf	(___fldiv@b+3)^0,c
  6920  002BA6  EFDD  F015         	goto	l7742
  6921  002BAA                     l7740:
  6922  002BAA  0E00               	movlw	0
  6923  002BAC  6E14               	movwf	___fldiv@b^0,c
  6924  002BAE  0E00               	movlw	0
  6925  002BB0  6E15               	movwf	(___fldiv@b+1)^0,c
  6926  002BB2  0E00               	movlw	0
  6927  002BB4  6E16               	movwf	(___fldiv@b+2)^0,c
  6928  002BB6  0E00               	movlw	0
  6929  002BB8  6E17               	movwf	(___fldiv@b+3)^0,c
  6930  002BBA                     l7742:
  6931  002BBA  501B               	movf	(___fldiv@a+3)^0,w,c
  6932  002BBC  0B80               	andlw	128
  6933  002BBE  1A24               	xorwf	___fldiv@sign^0,f,c
  6934  002BC0  501B               	movf	(___fldiv@a+3)^0,w,c
  6935  002BC2  241B               	addwf	(___fldiv@a+3)^0,w,c
  6936  002BC4  6E2C               	movwf	___fldiv@aexp^0,c
  6937  002BC6  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  6938  002BC8  EFE8  F015         	goto	u7841
  6939  002BCC  EFEA  F015         	goto	u7840
  6940  002BD0                     u7841:
  6941  002BD0  EFEB  F015         	goto	l7750
  6942  002BD4                     u7840:
  6943  002BD4  802C               	bsf	___fldiv@aexp^0,0,c
  6944  002BD6                     l7750:
  6945  002BD6  502C               	movf	___fldiv@aexp^0,w,c
  6946  002BD8  B4D8               	btfsc	status,2,c
  6947  002BDA  EFF1  F015         	goto	u7851
  6948  002BDE  EFF3  F015         	goto	u7850
  6949  002BE2                     u7851:
  6950  002BE2  EF08  F016         	goto	l7760
  6951  002BE6                     u7850:
  6952  002BE6  282C               	incf	___fldiv@aexp^0,w,c
  6953  002BE8  A4D8               	btfss	status,2,c
  6954  002BEA  EFF9  F015         	goto	u7861
  6955  002BEE  EFFB  F015         	goto	u7860
  6956  002BF2                     u7861:
  6957  002BF2  EF03  F016         	goto	l7756
  6958  002BF6                     u7860:
  6959  002BF6  0E00               	movlw	0
  6960  002BF8  6E18               	movwf	___fldiv@a^0,c
  6961  002BFA  0E00               	movlw	0
  6962  002BFC  6E19               	movwf	(___fldiv@a+1)^0,c
  6963  002BFE  0E00               	movlw	0
  6964  002C00  6E1A               	movwf	(___fldiv@a+2)^0,c
  6965  002C02  0E00               	movlw	0
  6966  002C04  6E1B               	movwf	(___fldiv@a+3)^0,c
  6967  002C06                     l7756:
  6968  002C06  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  6969  002C08  0E00               	movlw	0
  6970  002C0A  6E1B               	movwf	(___fldiv@a+3)^0,c
  6971  002C0C  EF10  F016         	goto	l7762
  6972  002C10                     l7760:
  6973  002C10  0E00               	movlw	0
  6974  002C12  6E18               	movwf	___fldiv@a^0,c
  6975  002C14  0E00               	movlw	0
  6976  002C16  6E19               	movwf	(___fldiv@a+1)^0,c
  6977  002C18  0E00               	movlw	0
  6978  002C1A  6E1A               	movwf	(___fldiv@a+2)^0,c
  6979  002C1C  0E00               	movlw	0
  6980  002C1E  6E1B               	movwf	(___fldiv@a+3)^0,c
  6981  002C20                     l7762:
  6982  002C20  5018               	movf	___fldiv@a^0,w,c
  6983  002C22  1019               	iorwf	(___fldiv@a+1)^0,w,c
  6984  002C24  101A               	iorwf	(___fldiv@a+2)^0,w,c
  6985  002C26  101B               	iorwf	(___fldiv@a+3)^0,w,c
  6986  002C28  A4D8               	btfss	status,2,c
  6987  002C2A  EF19  F016         	goto	u7871
  6988  002C2E  EF1B  F016         	goto	u7870
  6989  002C32                     u7871:
  6990  002C32  EF33  F016         	goto	l7774
  6991  002C36                     u7870:
  6992  002C36  0E00               	movlw	0
  6993  002C38  6E14               	movwf	___fldiv@b^0,c
  6994  002C3A  0E00               	movlw	0
  6995  002C3C  6E15               	movwf	(___fldiv@b+1)^0,c
  6996  002C3E  0E00               	movlw	0
  6997  002C40  6E16               	movwf	(___fldiv@b+2)^0,c
  6998  002C42  0E00               	movlw	0
  6999  002C44  6E17               	movwf	(___fldiv@b+3)^0,c
  7000  002C46  0E80               	movlw	128
  7001  002C48  1216               	iorwf	(___fldiv@b+2)^0,f,c
  7002  002C4A  0E7F               	movlw	127
  7003  002C4C  1217               	iorwf	(___fldiv@b+3)^0,f,c
  7004  002C4E                     l7768:
  7005  002C4E  5024               	movf	___fldiv@sign^0,w,c
  7006  002C50  1217               	iorwf	(___fldiv@b+3)^0,f,c
  7007  002C52  C014  F014         	movff	___fldiv@b,?___fldiv
  7008  002C56  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  7009  002C5A  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  7010  002C5E  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  7011  002C62  EF76  F017         	goto	l1980
  7012  002C66                     l7774:
  7013  002C66  502B               	movf	___fldiv@bexp^0,w,c
  7014  002C68  A4D8               	btfss	status,2,c
  7015  002C6A  EF39  F016         	goto	u7881
  7016  002C6E  EF3B  F016         	goto	u7880
  7017  002C72                     u7881:
  7018  002C72  EF45  F016         	goto	l7782
  7019  002C76                     u7880:
  7020  002C76  0E00               	movlw	0
  7021  002C78  6E14               	movwf	?___fldiv^0,c
  7022  002C7A  0E00               	movlw	0
  7023  002C7C  6E15               	movwf	(?___fldiv+1)^0,c
  7024  002C7E  0E00               	movlw	0
  7025  002C80  6E16               	movwf	(?___fldiv+2)^0,c
  7026  002C82  0E00               	movlw	0
  7027  002C84  6E17               	movwf	(?___fldiv+3)^0,c
  7028  002C86  EF76  F017         	goto	l1980
  7029  002C8A                     l7782:
  7030  002C8A  502C               	movf	___fldiv@aexp^0,w,c
  7031  002C8C  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  7032  002C90  6A1D               	clrf	(??___fldiv+1)^0,c
  7033  002C92  5E1C               	subwf	??___fldiv^0,f,c
  7034  002C94  0E00               	movlw	0
  7035  002C96  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  7036  002C98  0E7F               	movlw	127
  7037  002C9A  241C               	addwf	??___fldiv^0,w,c
  7038  002C9C  6E25               	movwf	___fldiv@new_exp^0,c
  7039  002C9E  0E00               	movlw	0
  7040  002CA0  201D               	addwfc	(??___fldiv+1)^0,w,c
  7041  002CA2  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7042  002CA4  C014  F020         	movff	___fldiv@b,___fldiv@rem
  7043  002CA8  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  7044  002CAC  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  7045  002CB0  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  7046  002CB4  0E00               	movlw	0
  7047  002CB6  6E14               	movwf	___fldiv@b^0,c
  7048  002CB8  0E00               	movlw	0
  7049  002CBA  6E15               	movwf	(___fldiv@b+1)^0,c
  7050  002CBC  0E00               	movlw	0
  7051  002CBE  6E16               	movwf	(___fldiv@b+2)^0,c
  7052  002CC0  0E00               	movlw	0
  7053  002CC2  6E17               	movwf	(___fldiv@b+3)^0,c
  7054  002CC4  0E00               	movlw	0
  7055  002CC6  6E27               	movwf	___fldiv@grs^0,c
  7056  002CC8  0E00               	movlw	0
  7057  002CCA  6E28               	movwf	(___fldiv@grs+1)^0,c
  7058  002CCC  0E00               	movlw	0
  7059  002CCE  6E29               	movwf	(___fldiv@grs+2)^0,c
  7060  002CD0  0E00               	movlw	0
  7061  002CD2  6E2A               	movwf	(___fldiv@grs+3)^0,c
  7062  002CD4  0E00               	movlw	0
  7063  002CD6  6E2C               	movwf	___fldiv@aexp^0,c
  7064  002CD8  EFA6  F016         	goto	l1982
  7065  002CDC                     l7792:
  7066  002CDC  502C               	movf	___fldiv@aexp^0,w,c
  7067  002CDE  B4D8               	btfsc	status,2,c
  7068  002CE0  EF74  F016         	goto	u7891
  7069  002CE4  EF76  F016         	goto	u7890
  7070  002CE8                     u7891:
  7071  002CE8  EF8D  F016         	goto	l7800
  7072  002CEC                     u7890:
  7073  002CEC  90D8               	bcf	status,0,c
  7074  002CEE  3620               	rlcf	___fldiv@rem^0,f,c
  7075  002CF0  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  7076  002CF2  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  7077  002CF4  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  7078  002CF6  90D8               	bcf	status,0,c
  7079  002CF8  3614               	rlcf	___fldiv@b^0,f,c
  7080  002CFA  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7081  002CFC  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7082  002CFE  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7083  002D00  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7084  002D02  EF85  F016         	goto	u7901
  7085  002D06  EF87  F016         	goto	u7900
  7086  002D0A                     u7901:
  7087  002D0A  EF88  F016         	goto	l1985
  7088  002D0E                     u7900:
  7089  002D0E  8014               	bsf	___fldiv@b^0,0,c
  7090  002D10                     l1985:
  7091  002D10  90D8               	bcf	status,0,c
  7092  002D12  3627               	rlcf	___fldiv@grs^0,f,c
  7093  002D14  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7094  002D16  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7095  002D18  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7096  002D1A                     l7800:
  7097  002D1A  5018               	movf	___fldiv@a^0,w,c
  7098  002D1C  5C20               	subwf	___fldiv@rem^0,w,c
  7099  002D1E  5019               	movf	(___fldiv@a+1)^0,w,c
  7100  002D20  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  7101  002D22  501A               	movf	(___fldiv@a+2)^0,w,c
  7102  002D24  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  7103  002D26  501B               	movf	(___fldiv@a+3)^0,w,c
  7104  002D28  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  7105  002D2A  A0D8               	btfss	status,0,c
  7106  002D2C  EF9A  F016         	goto	u7911
  7107  002D30  EF9C  F016         	goto	u7910
  7108  002D34                     u7911:
  7109  002D34  EFA5  F016         	goto	l7806
  7110  002D38                     u7910:
  7111  002D38  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  7112  002D3A  5018               	movf	___fldiv@a^0,w,c
  7113  002D3C  5E20               	subwf	___fldiv@rem^0,f,c
  7114  002D3E  5019               	movf	(___fldiv@a+1)^0,w,c
  7115  002D40  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  7116  002D42  501A               	movf	(___fldiv@a+2)^0,w,c
  7117  002D44  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  7118  002D46  501B               	movf	(___fldiv@a+3)^0,w,c
  7119  002D48  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  7120  002D4A                     l7806:
  7121  002D4A  2A2C               	incf	___fldiv@aexp^0,f,c
  7122  002D4C                     l1982:
  7123  002D4C  0E19               	movlw	25
  7124  002D4E  642C               	cpfsgt	___fldiv@aexp^0,c
  7125  002D50  EFAC  F016         	goto	u7921
  7126  002D54  EFAE  F016         	goto	u7920
  7127  002D58                     u7921:
  7128  002D58  EF6E  F016         	goto	l7792
  7129  002D5C                     u7920:
  7130  002D5C  5020               	movf	___fldiv@rem^0,w,c
  7131  002D5E  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  7132  002D60  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  7133  002D62  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  7134  002D64  B4D8               	btfsc	status,2,c
  7135  002D66  EFB7  F016         	goto	u7931
  7136  002D6A  EFB9  F016         	goto	u7930
  7137  002D6E                     u7931:
  7138  002D6E  EFD1  F016         	goto	l7818
  7139  002D72                     u7930:
  7140  002D72  8027               	bsf	___fldiv@grs^0,0,c
  7141  002D74  EFD1  F016         	goto	l7818
  7142  002D78                     l7812:
  7143  002D78  90D8               	bcf	status,0,c
  7144  002D7A  3614               	rlcf	___fldiv@b^0,f,c
  7145  002D7C  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7146  002D7E  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7147  002D80  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7148  002D82  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7149  002D84  EFC6  F016         	goto	u7941
  7150  002D88  EFC8  F016         	goto	u7940
  7151  002D8C                     u7941:
  7152  002D8C  EFC9  F016         	goto	l1991
  7153  002D90                     u7940:
  7154  002D90  8014               	bsf	___fldiv@b^0,0,c
  7155  002D92                     l1991:
  7156  002D92  90D8               	bcf	status,0,c
  7157  002D94  3627               	rlcf	___fldiv@grs^0,f,c
  7158  002D96  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7159  002D98  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7160  002D9A  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7161  002D9C  0625               	decf	___fldiv@new_exp^0,f,c
  7162  002D9E  A0D8               	btfss	status,0,c
  7163  002DA0  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  7164  002DA2                     l7818:
  7165  002DA2  AE16               	btfss	(___fldiv@b+2)^0,7,c
  7166  002DA4  EFD6  F016         	goto	u7951
  7167  002DA8  EFD8  F016         	goto	u7950
  7168  002DAC                     u7951:
  7169  002DAC  EFBC  F016         	goto	l7812
  7170  002DB0                     u7950:
  7171  002DB0  0E00               	movlw	0
  7172  002DB2  6E2C               	movwf	___fldiv@aexp^0,c
  7173  002DB4  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7174  002DB6  EFDF  F016         	goto	u7961
  7175  002DBA  EFE1  F016         	goto	u7960
  7176  002DBE                     u7961:
  7177  002DBE  EF05  F017         	goto	l1993
  7178  002DC2                     u7960:
  7179  002DC2  0EFF               	movlw	255
  7180  002DC4  1427               	andwf	___fldiv@grs^0,w,c
  7181  002DC6  6E1C               	movwf	??___fldiv^0,c
  7182  002DC8  0EFF               	movlw	255
  7183  002DCA  1428               	andwf	(___fldiv@grs+1)^0,w,c
  7184  002DCC  6E1D               	movwf	(??___fldiv+1)^0,c
  7185  002DCE  0EFF               	movlw	255
  7186  002DD0  1429               	andwf	(___fldiv@grs+2)^0,w,c
  7187  002DD2  6E1E               	movwf	(??___fldiv+2)^0,c
  7188  002DD4  0E7F               	movlw	127
  7189  002DD6  142A               	andwf	(___fldiv@grs+3)^0,w,c
  7190  002DD8  6E1F               	movwf	(??___fldiv+3)^0,c
  7191  002DDA  501C               	movf	??___fldiv^0,w,c
  7192  002DDC  101D               	iorwf	(??___fldiv+1)^0,w,c
  7193  002DDE  101E               	iorwf	(??___fldiv+2)^0,w,c
  7194  002DE0  101F               	iorwf	(??___fldiv+3)^0,w,c
  7195  002DE2  B4D8               	btfsc	status,2,c
  7196  002DE4  EFF6  F016         	goto	u7971
  7197  002DE8  EFF8  F016         	goto	u7970
  7198  002DEC                     u7971:
  7199  002DEC  EFFC  F016         	goto	l1994
  7200  002DF0                     u7970:
  7201  002DF0                     l7826:
  7202  002DF0  0E01               	movlw	1
  7203  002DF2  6E2C               	movwf	___fldiv@aexp^0,c
  7204  002DF4  EF05  F017         	goto	l1993
  7205  002DF8                     l1994:
  7206  002DF8  A014               	btfss	___fldiv@b^0,0,c
  7207  002DFA  EF01  F017         	goto	u7981
  7208  002DFE  EF03  F017         	goto	u7980
  7209  002E02                     u7981:
  7210  002E02  EF05  F017         	goto	l1993
  7211  002E06                     u7980:
  7212  002E06  EFF8  F016         	goto	l7826
  7213  002E0A                     l1993:
  7214  002E0A  502C               	movf	___fldiv@aexp^0,w,c
  7215  002E0C  B4D8               	btfsc	status,2,c
  7216  002E0E  EF0B  F017         	goto	u7991
  7217  002E12  EF0D  F017         	goto	u7990
  7218  002E16                     u7991:
  7219  002E16  EF31  F017         	goto	l7838
  7220  002E1A                     u7990:
  7221  002E1A  0E01               	movlw	1
  7222  002E1C  2614               	addwf	___fldiv@b^0,f,c
  7223  002E1E  0E00               	movlw	0
  7224  002E20  2215               	addwfc	(___fldiv@b+1)^0,f,c
  7225  002E22  2216               	addwfc	(___fldiv@b+2)^0,f,c
  7226  002E24  2217               	addwfc	(___fldiv@b+3)^0,f,c
  7227  002E26  A017               	btfss	(___fldiv@b+3)^0,0,c
  7228  002E28  EF18  F017         	goto	u8001
  7229  002E2C  EF1A  F017         	goto	u8000
  7230  002E30                     u8001:
  7231  002E30  EF31  F017         	goto	l7838
  7232  002E34                     u8000:
  7233  002E34  C014  F01C         	movff	___fldiv@b,??___fldiv
  7234  002E38  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  7235  002E3C  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  7236  002E40  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  7237  002E44  341F               	rlcf	(??___fldiv+3)^0,w,c
  7238  002E46  321F               	rrcf	(??___fldiv+3)^0,f,c
  7239  002E48  321E               	rrcf	(??___fldiv+2)^0,f,c
  7240  002E4A  321D               	rrcf	(??___fldiv+1)^0,f,c
  7241  002E4C  321C               	rrcf	??___fldiv^0,f,c
  7242  002E4E  C01C  F014         	movff	??___fldiv,___fldiv@b
  7243  002E52  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  7244  002E56  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  7245  002E5A  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  7246  002E5E  4A25               	infsnz	___fldiv@new_exp^0,f,c
  7247  002E60  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  7248  002E62                     l7838:
  7249  002E62  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7250  002E64  EF3C  F017         	goto	u8011
  7251  002E68  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7252  002E6A  E108               	bnz	u8010
  7253  002E6C  2825               	incf	___fldiv@new_exp^0,w,c
  7254  002E6E  A0D8               	btfss	status,0,c
  7255  002E70  EF3C  F017         	goto	u8011
  7256  002E74  EF3E  F017         	goto	u8010
  7257  002E78                     u8011:
  7258  002E78  EF49  F017         	goto	l7842
  7259  002E7C                     u8010:
  7260  002E7C  0E00               	movlw	0
  7261  002E7E  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7262  002E80  6825               	setf	___fldiv@new_exp^0,c
  7263  002E82  0E00               	movlw	0
  7264  002E84  6E14               	movwf	___fldiv@b^0,c
  7265  002E86  0E00               	movlw	0
  7266  002E88  6E15               	movwf	(___fldiv@b+1)^0,c
  7267  002E8A  0E00               	movlw	0
  7268  002E8C  6E16               	movwf	(___fldiv@b+2)^0,c
  7269  002E8E  0E00               	movlw	0
  7270  002E90  6E17               	movwf	(___fldiv@b+3)^0,c
  7271  002E92                     l7842:
  7272  002E92  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7273  002E94  EF56  F017         	goto	u8020
  7274  002E98  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7275  002E9A  E106               	bnz	u8021
  7276  002E9C  0425               	decf	___fldiv@new_exp^0,w,c
  7277  002E9E  B0D8               	btfsc	status,0,c
  7278  002EA0  EF54  F017         	goto	u8021
  7279  002EA4  EF56  F017         	goto	u8020
  7280  002EA8                     u8021:
  7281  002EA8  EF64  F017         	goto	l7846
  7282  002EAC                     u8020:
  7283  002EAC  0E00               	movlw	0
  7284  002EAE  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7285  002EB0  0E00               	movlw	0
  7286  002EB2  6E25               	movwf	___fldiv@new_exp^0,c
  7287  002EB4  0E00               	movlw	0
  7288  002EB6  6E14               	movwf	___fldiv@b^0,c
  7289  002EB8  0E00               	movlw	0
  7290  002EBA  6E15               	movwf	(___fldiv@b+1)^0,c
  7291  002EBC  0E00               	movlw	0
  7292  002EBE  6E16               	movwf	(___fldiv@b+2)^0,c
  7293  002EC0  0E00               	movlw	0
  7294  002EC2  6E17               	movwf	(___fldiv@b+3)^0,c
  7295  002EC4  0E00               	movlw	0
  7296  002EC6  6E24               	movwf	___fldiv@sign^0,c
  7297  002EC8                     l7846:
  7298  002EC8  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  7299  002ECC  A02B               	btfss	___fldiv@bexp^0,0,c
  7300  002ECE  EF6B  F017         	goto	u8031
  7301  002ED2  EF6D  F017         	goto	u8030
  7302  002ED6                     u8031:
  7303  002ED6  EF70  F017         	goto	l7852
  7304  002EDA                     u8030:
  7305  002EDA  8E16               	bsf	(___fldiv@b+2)^0,7,c
  7306  002EDC  EF71  F017         	goto	l7854
  7307  002EE0                     l7852:
  7308  002EE0  9E16               	bcf	(___fldiv@b+2)^0,7,c
  7309  002EE2                     l7854:
  7310  002EE2  90D8               	bcf	status,0,c
  7311  002EE4  302B               	rrcf	___fldiv@bexp^0,w,c
  7312  002EE6  6E17               	movwf	(___fldiv@b+3)^0,c
  7313  002EE8  EF27  F016         	goto	l7768
  7314  002EEC                     l1980:
  7315  002EEC  0012               	return		;funcret
  7316  002EEE                     __end_of___fldiv:
  7317                           	callstack 0
  7318                           
  7319 ;; *************** function ___awmod *****************
  7320 ;; Defined at:
  7321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7322 ;; Parameters:    Size  Location     Type
  7323 ;;  dividend        2   19[COMRAM] int 
  7324 ;;  divisor         2   21[COMRAM] int 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  sign            1   24[COMRAM] unsigned char 
  7327 ;;  counter         1   23[COMRAM] unsigned char 
  7328 ;; Return value:  Size  Location     Type
  7329 ;;                  2   19[COMRAM] int 
  7330 ;; Registers used:
  7331 ;;		wreg, status,2, status,0
  7332 ;; Tracked objects:
  7333 ;;		On entry : 0/0
  7334 ;;		On exit  : 0/0
  7335 ;;		Unchanged: 0/0
  7336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;Total ram usage:        6 bytes
  7342 ;; Hardware stack levels used: 1
  7343 ;; Hardware stack levels required when called: 8
  7344 ;; This function calls:
  7345 ;;		Nothing
  7346 ;; This function is called by:
  7347 ;;		_efgtoa
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text20
  7352  004F14                     __ptext20:
  7353                           	callstack 0
  7354  004F14                     ___awmod:
  7355                           	callstack 16
  7356  004F14  0E00               	movlw	0
  7357  004F16  6E19               	movwf	___awmod@sign^0,c
  7358  004F18  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7359  004F1A  EF93  F027         	goto	u8290
  7360  004F1E  EF91  F027         	goto	u8291
  7361  004F22                     u8291:
  7362  004F22  EF99  F027         	goto	l8050
  7363  004F26                     u8290:
  7364  004F26  6C14               	negf	___awmod@dividend^0,c
  7365  004F28  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7366  004F2A  B0D8               	btfsc	status,0,c
  7367  004F2C  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7368  004F2E  0E01               	movlw	1
  7369  004F30  6E19               	movwf	___awmod@sign^0,c
  7370  004F32                     l8050:
  7371  004F32  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7372  004F34  EFA0  F027         	goto	u8300
  7373  004F38  EF9E  F027         	goto	u8301
  7374  004F3C                     u8301:
  7375  004F3C  EFA4  F027         	goto	l8054
  7376  004F40                     u8300:
  7377  004F40  6C16               	negf	___awmod@divisor^0,c
  7378  004F42  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7379  004F44  B0D8               	btfsc	status,0,c
  7380  004F46  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7381  004F48                     l8054:
  7382  004F48  5016               	movf	___awmod@divisor^0,w,c
  7383  004F4A  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7384  004F4C  B4D8               	btfsc	status,2,c
  7385  004F4E  EFAB  F027         	goto	u8311
  7386  004F52  EFAD  F027         	goto	u8310
  7387  004F56                     u8311:
  7388  004F56  EFD1  F027         	goto	l8070
  7389  004F5A                     u8310:
  7390  004F5A  0E01               	movlw	1
  7391  004F5C  6E18               	movwf	___awmod@counter^0,c
  7392  004F5E  EFB5  F027         	goto	l8060
  7393  004F62                     l8058:
  7394  004F62  90D8               	bcf	status,0,c
  7395  004F64  3616               	rlcf	___awmod@divisor^0,f,c
  7396  004F66  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7397  004F68  2A18               	incf	___awmod@counter^0,f,c
  7398  004F6A                     l8060:
  7399  004F6A  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7400  004F6C  EFBA  F027         	goto	u8321
  7401  004F70  EFBC  F027         	goto	u8320
  7402  004F74                     u8321:
  7403  004F74  EFB1  F027         	goto	l8058
  7404  004F78                     u8320:
  7405  004F78                     l8062:
  7406  004F78  5016               	movf	___awmod@divisor^0,w,c
  7407  004F7A  5C14               	subwf	___awmod@dividend^0,w,c
  7408  004F7C  5017               	movf	(___awmod@divisor+1)^0,w,c
  7409  004F7E  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7410  004F80  A0D8               	btfss	status,0,c
  7411  004F82  EFC5  F027         	goto	u8331
  7412  004F86  EFC7  F027         	goto	u8330
  7413  004F8A                     u8331:
  7414  004F8A  EFCB  F027         	goto	l8066
  7415  004F8E                     u8330:
  7416  004F8E  5016               	movf	___awmod@divisor^0,w,c
  7417  004F90  5E14               	subwf	___awmod@dividend^0,f,c
  7418  004F92  5017               	movf	(___awmod@divisor+1)^0,w,c
  7419  004F94  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7420  004F96                     l8066:
  7421  004F96  90D8               	bcf	status,0,c
  7422  004F98  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7423  004F9A  3216               	rrcf	___awmod@divisor^0,f,c
  7424  004F9C  2E18               	decfsz	___awmod@counter^0,f,c
  7425  004F9E  EFBC  F027         	goto	l8062
  7426  004FA2                     l8070:
  7427  004FA2  5019               	movf	___awmod@sign^0,w,c
  7428  004FA4  B4D8               	btfsc	status,2,c
  7429  004FA6  EFD7  F027         	goto	u8341
  7430  004FAA  EFD9  F027         	goto	u8340
  7431  004FAE                     u8341:
  7432  004FAE  EFDD  F027         	goto	l8074
  7433  004FB2                     u8340:
  7434  004FB2  6C14               	negf	___awmod@dividend^0,c
  7435  004FB4  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7436  004FB6  B0D8               	btfsc	status,0,c
  7437  004FB8  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7438  004FBA                     l8074:
  7439  004FBA  C014  F014         	movff	___awmod@dividend,?___awmod
  7440  004FBE  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7441  004FC2  0012               	return		;funcret
  7442  004FC4                     __end_of___awmod:
  7443                           	callstack 0
  7444                           
  7445 ;; *************** function _dtoa *****************
  7446 ;; Defined at:
  7447 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7450 ;;		 -> NULL(0), 
  7451 ;;  d               8    2[BANK0 ] long long 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  n               8   18[BANK0 ] long long 
  7454 ;;  i               2   26[BANK0 ] int 
  7455 ;;  s               2   16[BANK0 ] int 
  7456 ;;  w               2   14[BANK0 ] int 
  7457 ;;  p               2   12[BANK0 ] int 
  7458 ;; Return value:  Size  Location     Type
  7459 ;;                  2    0[BANK0 ] int 
  7460 ;; Registers used:
  7461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7462 ;; Tracked objects:
  7463 ;;		On entry : 0/0
  7464 ;;		On exit  : 0/0
  7465 ;;		Unchanged: 0/0
  7466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7467 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;Total ram usage:       36 bytes
  7472 ;; Hardware stack levels used: 1
  7473 ;; Hardware stack levels required when called: 13
  7474 ;; This function calls:
  7475 ;;		___aodiv
  7476 ;;		___aomod
  7477 ;;		_abs
  7478 ;;		_pad
  7479 ;; This function is called by:
  7480 ;;		_vfpfcnvrt
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text21
  7485  002EEE                     __ptext21:
  7486                           	callstack 0
  7487  002EEE                     _dtoa:
  7488                           	callstack 12
  7489  002EEE                     
  7490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7491  002EEE  C062  F072         	movff	dtoa@d,dtoa@n
  7492  002EF2  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7493  002EF6  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7494  002EFA  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7495  002EFE  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7496  002F02  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7497  002F06  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7498  002F0A  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7499  002F0E                     
  7500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7501  002F0E  0100               	movlb	0	; () banked
  7502  002F10  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7503  002F12  EF8D  F017         	goto	u8781
  7504  002F16  EF90  F017         	goto	u8780
  7505  002F1A                     u8781:
  7506  002F1A  0E01               	movlw	1
  7507  002F1C  EF91  F017         	goto	u8790
  7508  002F20                     u8780:
  7509  002F20  0E00               	movlw	0
  7510  002F22                     u8790:
  7511  002F22  6F70               	movwf	dtoa@s& (0+255),b
  7512  002F24  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7515  002F26  5170               	movf	dtoa@s& (0+255),w,b
  7516  002F28  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7517  002F2A  B4D8               	btfsc	status,2,c
  7518  002F2C  EF9A  F017         	goto	u8801
  7519  002F30  EF9C  F017         	goto	u8800
  7520  002F34                     u8801:
  7521  002F34  EFAC  F017         	goto	l8264
  7522  002F38                     u8800:
  7523  002F38                     
  7524                           ; BSR set to: 0
  7525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7526  002F38  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7527  002F3A  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7528  002F3C  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7529  002F3E  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7530  002F40  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7531  002F42  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7532  002F44  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7533  002F46  6D72               	negf	dtoa@n& (0+255),b
  7534  002F48  0E00               	movlw	0
  7535  002F4A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7536  002F4C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7537  002F4E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7538  002F50  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7539  002F52  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7540  002F54  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7541  002F56  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7542  002F58                     l8264:
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7546  002F58  BE3D               	btfsc	(_prec+1)^0,7,c
  7547  002F5A  EFB1  F017         	goto	u8811
  7548  002F5E  EFB3  F017         	goto	u8810
  7549  002F62                     u8811:
  7550  002F62  EFB4  F017         	goto	l8268
  7551  002F66                     u8810:
  7552  002F66                     
  7553                           ; BSR set to: 0
  7554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7555  002F66  923E               	bcf	_flags^0,1,c
  7556  002F68                     l8268:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7560  002F68  BE3D               	btfsc	(_prec+1)^0,7,c
  7561  002F6A  EFC1  F017         	goto	u8820
  7562  002F6E  503D               	movf	(_prec+1)^0,w,c
  7563  002F70  E106               	bnz	u8821
  7564  002F72  043C               	decf	_prec^0,w,c
  7565  002F74  B0D8               	btfsc	status,0,c
  7566  002F76  EFBF  F017         	goto	u8821
  7567  002F7A  EFC1  F017         	goto	u8820
  7568  002F7E                     u8821:
  7569  002F7E  EFC7  F017         	goto	l2126
  7570  002F82                     u8820:
  7571  002F82                     
  7572                           ; BSR set to: 0
  7573  002F82  0E00               	movlw	0
  7574  002F84  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7575  002F86  0E01               	movlw	1
  7576  002F88  6F6C               	movwf	dtoa@p& (0+255),b
  7577  002F8A  EFCB  F017         	goto	l2128
  7578  002F8E                     l2126:
  7579                           
  7580                           ; BSR set to: 0
  7581  002F8E  C03C  F06C         	movff	_prec,dtoa@p
  7582  002F92  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7583  002F96                     l2128:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7587  002F96  C03A  F06E         	movff	_width,dtoa@w
  7588  002F9A  C03B  F06F         	movff	_width+1,dtoa@w+1
  7589  002F9E                     
  7590                           ; BSR set to: 0
  7591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7592  002F9E  5170               	movf	dtoa@s& (0+255),w,b
  7593  002FA0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7594  002FA2  A4D8               	btfss	status,2,c
  7595  002FA4  EFD6  F017         	goto	u8831
  7596  002FA8  EFD8  F017         	goto	u8830
  7597  002FAC                     u8831:
  7598  002FAC  EFDF  F017         	goto	l8276
  7599  002FB0                     u8830:
  7600  002FB0                     
  7601                           ; BSR set to: 0
  7602  002FB0  A43E               	btfss	_flags^0,2,c
  7603  002FB2  EFDD  F017         	goto	u8841
  7604  002FB6  EFDF  F017         	goto	u8840
  7605  002FBA                     u8841:
  7606  002FBA  EFE2  F017         	goto	l8278
  7607  002FBE                     u8840:
  7608  002FBE                     l8276:
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7612  002FBE  076E               	decf	dtoa@w& (0+255),f,b
  7613  002FC0  A0D8               	btfss	status,0,c
  7614  002FC2  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7615  002FC4                     l8278:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7619  002FC4  0E00               	movlw	0
  7620  002FC6  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7621  002FC8  0E4F               	movlw	79
  7622  002FCA  6F7A               	movwf	dtoa@i& (0+255),b
  7623  002FCC                     
  7624                           ; BSR set to: 0
  7625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7626  002FCC  0E00               	movlw	0
  7627  002FCE  0101               	movlb	1	; () banked
  7628  002FD0  6F83               	movwf	(_dbuf+79)& (0+255),b
  7629                           
  7630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7631  002FD2  EF68  F018         	goto	l8292
  7632  002FD6                     l8282:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7636  002FD6  077A               	decf	dtoa@i& (0+255),f,b
  7637  002FD8  A0D8               	btfss	status,0,c
  7638  002FDA  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7639  002FDC                     
  7640                           ; BSR set to: 0
  7641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7642  002FDC  0E34               	movlw	low _dbuf
  7643  002FDE  257A               	addwf	dtoa@i& (0+255),w,b
  7644  002FE0  6ED9               	movwf	fsr2l,c
  7645  002FE2  0E01               	movlw	high _dbuf
  7646  002FE4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7647  002FE6  6EDA               	movwf	fsr2h,c
  7648  002FE8  C072  F014         	movff	dtoa@n,___aomod@dividend
  7649  002FEC  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7650  002FF0  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7651  002FF4  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7652  002FF8  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7653  002FFC  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7654  003000  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7655  003004  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7656  003008  0E0A               	movlw	10
  7657  00300A  6E1C               	movwf	___aomod@divisor^0,c
  7658  00300C  0E00               	movlw	0
  7659  00300E  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7660  003010  0E00               	movlw	0
  7661  003012  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7662  003014  0E00               	movlw	0
  7663  003016  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7664  003018  0E00               	movlw	0
  7665  00301A  6E20               	movwf	(___aomod@divisor+4)^0,c
  7666  00301C  0E00               	movlw	0
  7667  00301E  6E21               	movwf	(___aomod@divisor+5)^0,c
  7668  003020  0E00               	movlw	0
  7669  003022  6E22               	movwf	(___aomod@divisor+6)^0,c
  7670  003024  0E00               	movlw	0
  7671  003026  6E23               	movwf	(___aomod@divisor+7)^0,c
  7672  003028  EC95  F020         	call	___aomod	;wreg free
  7673  00302C  C014  F031         	movff	?___aomod,??_dtoa
  7674  003030  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7675  003034  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7676  003038  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7677  00303C  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7678  003040  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7679  003044  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7680  003048  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7681  00304C  C031  F026         	movff	??_dtoa,abs@a
  7682  003050  C033  F027         	movff	??_dtoa+2,abs@a+1
  7683  003054  ECBB  F02B         	call	_abs	;wreg free
  7684  003058  5026               	movf	?_abs^0,w,c
  7685  00305A  0F30               	addlw	48
  7686  00305C  6EDF               	movwf	indf2,c
  7687  00305E                     
  7688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7689  00305E  0100               	movlb	0	; () banked
  7690  003060  076C               	decf	dtoa@p& (0+255),f,b
  7691  003062  A0D8               	btfss	status,0,c
  7692  003064  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7693  003066                     
  7694                           ; BSR set to: 0
  7695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7696  003066  076E               	decf	dtoa@w& (0+255),f,b
  7697  003068  A0D8               	btfss	status,0,c
  7698  00306A  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7699  00306C                     
  7700                           ; BSR set to: 0
  7701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7702  00306C  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7703  003070  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7704  003074  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7705  003078  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7706  00307C  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7707  003080  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7708  003084  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7709  003088  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7710  00308C  0E0A               	movlw	10
  7711  00308E  6E1C               	movwf	___aodiv@divisor^0,c
  7712  003090  0E00               	movlw	0
  7713  003092  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7714  003094  0E00               	movlw	0
  7715  003096  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7716  003098  0E00               	movlw	0
  7717  00309A  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7718  00309C  0E00               	movlw	0
  7719  00309E  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7720  0030A0  0E00               	movlw	0
  7721  0030A2  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7722  0030A4  0E00               	movlw	0
  7723  0030A6  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7724  0030A8  0E00               	movlw	0
  7725  0030AA  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7726  0030AC  EC12  F01F         	call	___aodiv	;wreg free
  7727  0030B0  C014  F072         	movff	?___aodiv,dtoa@n
  7728  0030B4  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7729  0030B8  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7730  0030BC  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7731  0030C0  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7732  0030C4  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7733  0030C8  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7734  0030CC  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7735  0030D0                     l8292:
  7736                           
  7737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7738  0030D0  0100               	movlb	0	; () banked
  7739  0030D2  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7740  0030D4  EF74  F018         	goto	u8851
  7741  0030D8  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7742  0030DA  E108               	bnz	u8850
  7743  0030DC  057A               	decf	dtoa@i& (0+255),w,b
  7744  0030DE  A0D8               	btfss	status,0,c
  7745  0030E0  EF74  F018         	goto	u8851
  7746  0030E4  EF76  F018         	goto	u8850
  7747  0030E8                     u8851:
  7748  0030E8  EFA6  F018         	goto	l8302
  7749  0030EC                     u8850:
  7750  0030EC                     
  7751                           ; BSR set to: 0
  7752  0030EC  5172               	movf	dtoa@n& (0+255),w,b
  7753  0030EE  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7754  0030F0  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7755  0030F2  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7756  0030F4  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7757  0030F6  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7758  0030F8  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7759  0030FA  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7760  0030FC  A4D8               	btfss	status,2,c
  7761  0030FE  EF83  F018         	goto	u8861
  7762  003102  EF85  F018         	goto	u8860
  7763  003106                     u8861:
  7764  003106  EFEB  F017         	goto	l8282
  7765  00310A                     u8860:
  7766  00310A                     
  7767                           ; BSR set to: 0
  7768  00310A  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7769  00310C  EF92  F018         	goto	u8870
  7770  003110  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7771  003112  E106               	bnz	u8871
  7772  003114  056C               	decf	dtoa@p& (0+255),w,b
  7773  003116  B0D8               	btfsc	status,0,c
  7774  003118  EF90  F018         	goto	u8871
  7775  00311C  EF92  F018         	goto	u8870
  7776  003120                     u8871:
  7777  003120  EFEB  F017         	goto	l8282
  7778  003124                     u8870:
  7779  003124                     
  7780                           ; BSR set to: 0
  7781  003124  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7782  003126  EF9D  F018         	goto	u8881
  7783  00312A  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7784  00312C  E108               	bnz	u8880
  7785  00312E  056E               	decf	dtoa@w& (0+255),w,b
  7786  003130  A0D8               	btfss	status,0,c
  7787  003132  EF9D  F018         	goto	u8881
  7788  003136  EF9F  F018         	goto	u8880
  7789  00313A                     u8881:
  7790  00313A  EFA6  F018         	goto	l8302
  7791  00313E                     u8880:
  7792  00313E                     
  7793                           ; BSR set to: 0
  7794  00313E  B23E               	btfsc	_flags^0,1,c
  7795  003140  EFA4  F018         	goto	u8891
  7796  003144  EFA6  F018         	goto	u8890
  7797  003148                     u8891:
  7798  003148  EFEB  F017         	goto	l8282
  7799  00314C                     u8890:
  7800  00314C                     l8302:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7804  00314C  5170               	movf	dtoa@s& (0+255),w,b
  7805  00314E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7806  003150  A4D8               	btfss	status,2,c
  7807  003152  EFAD  F018         	goto	u8901
  7808  003156  EFAF  F018         	goto	u8900
  7809  00315A                     u8901:
  7810  00315A  EFB6  F018         	goto	l8306
  7811  00315E                     u8900:
  7812  00315E                     
  7813                           ; BSR set to: 0
  7814  00315E  A43E               	btfss	_flags^0,2,c
  7815  003160  EFB4  F018         	goto	u8911
  7816  003164  EFB6  F018         	goto	u8910
  7817  003168                     u8911:
  7818  003168  EFD5  F018         	goto	l8316
  7819  00316C                     u8910:
  7820  00316C                     l8306:
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7824  00316C  077A               	decf	dtoa@i& (0+255),f,b
  7825  00316E  A0D8               	btfss	status,0,c
  7826  003170  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7827  003172                     
  7828                           ; BSR set to: 0
  7829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7830  003172  5170               	movf	dtoa@s& (0+255),w,b
  7831  003174  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7832  003176  A4D8               	btfss	status,2,c
  7833  003178  EFC0  F018         	goto	u8921
  7834  00317C  EFC2  F018         	goto	u8920
  7835  003180                     u8921:
  7836  003180  EFC8  F018         	goto	l8312
  7837  003184                     u8920:
  7838  003184                     
  7839                           ; BSR set to: 0
  7840  003184  0E00               	movlw	0
  7841  003186  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7842  003188  0E2B               	movlw	43
  7843  00318A  6F6A               	movwf	_dtoa$3530& (0+255),b
  7844  00318C  EFCC  F018         	goto	l8314
  7845  003190                     l8312:
  7846                           
  7847                           ; BSR set to: 0
  7848  003190  0E00               	movlw	0
  7849  003192  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7850  003194  0E2D               	movlw	45
  7851  003196  6F6A               	movwf	_dtoa$3530& (0+255),b
  7852  003198                     l8314:
  7853                           
  7854                           ; BSR set to: 0
  7855  003198  0E34               	movlw	low _dbuf
  7856  00319A  257A               	addwf	dtoa@i& (0+255),w,b
  7857  00319C  6ED9               	movwf	fsr2l,c
  7858  00319E  0E01               	movlw	high _dbuf
  7859  0031A0  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7860  0031A2  6EDA               	movwf	fsr2h,c
  7861  0031A4  0060  F1AB  FFDF   	movff	_dtoa$3530,indf2
  7862  0031AA                     l8316:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7866  0031AA  C060  F026         	movff	dtoa@fp,pad@fp
  7867  0031AE  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7868  0031B2  0E34               	movlw	low _dbuf
  7869  0031B4  257A               	addwf	dtoa@i& (0+255),w,b
  7870  0031B6  6E28               	movwf	pad@buf^0,c
  7871  0031B8  0E01               	movlw	high _dbuf
  7872  0031BA  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7873  0031BC  6E29               	movwf	(pad@buf+1)^0,c
  7874  0031BE  C06E  F02A         	movff	dtoa@w,pad@p
  7875  0031C2  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7876  0031C6  ECC9  F026         	call	_pad	;wreg free
  7877  0031CA  C026  F060         	movff	?_pad,?_dtoa
  7878  0031CE  C027  F061         	movff	?_pad+1,?_dtoa+1
  7879  0031D2  0012               	return		;funcret
  7880  0031D4                     __end_of_dtoa:
  7881                           	callstack 0
  7882                           
  7883 ;; *************** function _pad *****************
  7884 ;; Defined at:
  7885 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7888 ;;		 -> NULL(0), 
  7889 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7890 ;;		 -> dbuf(80), 
  7891 ;;  p               2   41[COMRAM] int 
  7892 ;; Auto vars:     Size  Location     Type
  7893 ;;  w               2   46[COMRAM] int 
  7894 ;;  i               2   44[COMRAM] int 
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  2   37[COMRAM] int 
  7897 ;; Registers used:
  7898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;Total ram usage:       11 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; Hardware stack levels required when called: 12
  7911 ;; This function calls:
  7912 ;;		_fputc
  7913 ;;		_fputs
  7914 ;;		_strlen
  7915 ;; This function is called by:
  7916 ;;		_dtoa
  7917 ;;		_efgtoa
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text22
  7922  004D92                     __ptext22:
  7923                           	callstack 0
  7924  004D92                     _pad:
  7925                           	callstack 12
  7926  004D92                     
  7927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7928  004D92  A03E               	btfss	_flags^0,0,c
  7929  004D94  EFCE  F026         	goto	u8511
  7930  004D98  EFD0  F026         	goto	u8510
  7931  004D9C                     u8511:
  7932  004D9C  EFDA  F026         	goto	l8172
  7933  004DA0                     u8510:
  7934  004DA0                     
  7935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7936  004DA0  C028  F01F         	movff	pad@buf,fputs@s
  7937  004DA4  C029  F020         	movff	pad@buf+1,fputs@s+1
  7938  004DA8  C026  F021         	movff	pad@fp,fputs@fp
  7939  004DAC  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7940  004DB0  EC77  F02B         	call	_fputs	;wreg free
  7941  004DB4                     l8172:
  7942                           
  7943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7944  004DB4  BE2B               	btfsc	(pad@p+1)^0,7,c
  7945  004DB6  EFDF  F026         	goto	u8521
  7946  004DBA  EFE1  F026         	goto	u8520
  7947  004DBE                     u8521:
  7948  004DBE  EFE7  F026         	goto	l8176
  7949  004DC2                     u8520:
  7950  004DC2  C02A  F02F         	movff	pad@p,pad@w
  7951  004DC6  C02B  F030         	movff	pad@p+1,pad@w+1
  7952  004DCA  EFEB  F026         	goto	l2115
  7953  004DCE                     l8176:
  7954  004DCE  0E00               	movlw	0
  7955  004DD0  6E30               	movwf	(pad@w+1)^0,c
  7956  004DD2  0E00               	movlw	0
  7957  004DD4  6E2F               	movwf	pad@w^0,c
  7958  004DD6                     l2115:
  7959                           
  7960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7961  004DD6  0E00               	movlw	0
  7962  004DD8  6E2E               	movwf	(pad@i+1)^0,c
  7963  004DDA  0E00               	movlw	0
  7964  004DDC  6E2D               	movwf	pad@i^0,c
  7965                           
  7966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7967  004DDE  EFFD  F026         	goto	l8182
  7968  004DE2                     l8178:
  7969                           
  7970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7971  004DE2  0E00               	movlw	0
  7972  004DE4  6E17               	movwf	(fputc@c+1)^0,c
  7973  004DE6  0E20               	movlw	32
  7974  004DE8  6E16               	movwf	fputc@c^0,c
  7975  004DEA  C026  F018         	movff	pad@fp,fputc@fp
  7976  004DEE  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7977  004DF2  EC89  F028         	call	_fputc	;wreg free
  7978  004DF6                     
  7979                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7980  004DF6  4A2D               	infsnz	pad@i^0,f,c
  7981  004DF8  2A2E               	incf	(pad@i+1)^0,f,c
  7982  004DFA                     l8182:
  7983                           
  7984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7985  004DFA  502F               	movf	pad@w^0,w,c
  7986  004DFC  5C2D               	subwf	pad@i^0,w,c
  7987  004DFE  502E               	movf	(pad@i+1)^0,w,c
  7988  004E00  0A80               	xorlw	128
  7989  004E02  6E2C               	movwf	??_pad^0,c
  7990  004E04  5030               	movf	(pad@w+1)^0,w,c
  7991  004E06  0A80               	xorlw	128
  7992  004E08  582C               	subwfb	??_pad^0,w,c
  7993  004E0A  A0D8               	btfss	status,0,c
  7994  004E0C  EF0A  F027         	goto	u8531
  7995  004E10  EF0C  F027         	goto	u8530
  7996  004E14                     u8531:
  7997  004E14  EFF1  F026         	goto	l8178
  7998  004E18                     u8530:
  7999  004E18                     
  8000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8001  004E18  B03E               	btfsc	_flags^0,0,c
  8002  004E1A  EF11  F027         	goto	u8541
  8003  004E1E  EF13  F027         	goto	u8540
  8004  004E22                     u8541:
  8005  004E22  EF1D  F027         	goto	l8186
  8006  004E26                     u8540:
  8007  004E26                     
  8008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8009  004E26  C028  F01F         	movff	pad@buf,fputs@s
  8010  004E2A  C029  F020         	movff	pad@buf+1,fputs@s+1
  8011  004E2E  C026  F021         	movff	pad@fp,fputs@fp
  8012  004E32  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8013  004E36  EC77  F02B         	call	_fputs	;wreg free
  8014  004E3A                     l8186:
  8015                           
  8016                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8017  004E3A  C028  F014         	movff	pad@buf,strlen@s
  8018  004E3E  C029  F015         	movff	pad@buf+1,strlen@s+1
  8019  004E42  ECDB  F02B         	call	_strlen	;wreg free
  8020  004E46  502F               	movf	pad@w^0,w,c
  8021  004E48  2414               	addwf	?_strlen^0,w,c
  8022  004E4A  6E26               	movwf	?_pad^0,c
  8023  004E4C  5030               	movf	(pad@w+1)^0,w,c
  8024  004E4E  2015               	addwfc	(?_strlen+1)^0,w,c
  8025  004E50  6E27               	movwf	(?_pad+1)^0,c
  8026  004E52  0012               	return		;funcret
  8027  004E54                     __end_of_pad:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function _strlen *****************
  8031 ;; Defined at:
  8032 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8035 ;;		 -> dbuf(80), 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  a               2   21[COMRAM] PTR const unsigned char 
  8038 ;;		 -> dbuf(80), 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  2   19[COMRAM] unsigned int 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;Total ram usage:        4 bytes
  8053 ;; Hardware stack levels used: 1
  8054 ;; Hardware stack levels required when called: 8
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_pad
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text23
  8063  0057B6                     __ptext23:
  8064                           	callstack 0
  8065  0057B6                     _strlen:
  8066                           	callstack 15
  8067  0057B6  C014  F016         	movff	strlen@s,strlen@a
  8068  0057BA  C015  F017         	movff	strlen@s+1,strlen@a+1
  8069  0057BE  EFE3  F02B         	goto	l7634
  8070  0057C2                     l7632:
  8071  0057C2  4A14               	infsnz	strlen@s^0,f,c
  8072  0057C4  2A15               	incf	(strlen@s+1)^0,f,c
  8073  0057C6                     l7634:
  8074  0057C6  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8075  0057CC  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8076  0057D2  50DF               	movf	indf2,w,c
  8077  0057D4  A4D8               	btfss	status,2,c
  8078  0057D6  EFEF  F02B         	goto	u7651
  8079  0057DA  EFF1  F02B         	goto	u7650
  8080  0057DE                     u7651:
  8081  0057DE  EFE1  F02B         	goto	l7632
  8082  0057E2                     u7650:
  8083  0057E2  5016               	movf	strlen@a^0,w,c
  8084  0057E4  5C14               	subwf	strlen@s^0,w,c
  8085  0057E6  6E14               	movwf	?_strlen^0,c
  8086  0057E8  5017               	movf	(strlen@a+1)^0,w,c
  8087  0057EA  5815               	subwfb	(strlen@s+1)^0,w,c
  8088  0057EC  6E15               	movwf	(?_strlen+1)^0,c
  8089  0057EE  0012               	return		;funcret
  8090  0057F0                     __end_of_strlen:
  8091                           	callstack 0
  8092                           
  8093 ;; *************** function _fputs *****************
  8094 ;; Defined at:
  8095 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8098 ;;		 -> dbuf(80), 
  8099 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8100 ;;		 -> NULL(0), 
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  i               2   35[COMRAM] int 
  8103 ;;  c               1   34[COMRAM] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  2   30[COMRAM] int 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;Total ram usage:        7 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; Hardware stack levels required when called: 11
  8120 ;; This function calls:
  8121 ;;		_fputc
  8122 ;; This function is called by:
  8123 ;;		_pad
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text24
  8128  0056EE                     __ptext24:
  8129                           	callstack 0
  8130  0056EE                     _fputs:
  8131                           	callstack 12
  8132  0056EE  0E00               	movlw	0
  8133  0056F0  6E25               	movwf	(fputs@i+1)^0,c
  8134  0056F2  0E00               	movlw	0
  8135  0056F4  6E24               	movwf	fputs@i^0,c
  8136  0056F6  EF88  F02B         	goto	l7628
  8137  0056FA                     l7624:
  8138  0056FA  C023  F016         	movff	fputs@c,fputc@c
  8139  0056FE  6A17               	clrf	(fputc@c+1)^0,c
  8140  005700  C021  F018         	movff	fputs@fp,fputc@fp
  8141  005704  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8142  005708  EC89  F028         	call	_fputc	;wreg free
  8143  00570C  4A24               	infsnz	fputs@i^0,f,c
  8144  00570E  2A25               	incf	(fputs@i+1)^0,f,c
  8145  005710                     l7628:
  8146  005710  5024               	movf	fputs@i^0,w,c
  8147  005712  241F               	addwf	fputs@s^0,w,c
  8148  005714  6ED9               	movwf	fsr2l,c
  8149  005716  5025               	movf	(fputs@i+1)^0,w,c
  8150  005718  2020               	addwfc	(fputs@s+1)^0,w,c
  8151  00571A  6EDA               	movwf	fsr2h,c
  8152  00571C  50DF               	movf	indf2,w,c
  8153  00571E  6E23               	movwf	fputs@c^0,c
  8154  005720  5023               	movf	fputs@c^0,w,c
  8155  005722  A4D8               	btfss	status,2,c
  8156  005724  EF96  F02B         	goto	u7641
  8157  005728  EF98  F02B         	goto	u7640
  8158  00572C                     u7641:
  8159  00572C  EF7D  F02B         	goto	l7624
  8160  005730                     u7640:
  8161  005730  0012               	return		;funcret
  8162  005732                     __end_of_fputs:
  8163                           	callstack 0
  8164                           
  8165 ;; *************** function _fputc *****************
  8166 ;; Defined at:
  8167 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8168 ;; Parameters:    Size  Location     Type
  8169 ;;  c               2   21[COMRAM] int 
  8170 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8171 ;;		 -> NULL(0), 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  2   21[COMRAM] int 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;Total ram usage:        9 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 10
  8190 ;; This function calls:
  8191 ;;		_putch
  8192 ;; This function is called by:
  8193 ;;		_pad
  8194 ;;		_vfpfcnvrt
  8195 ;;		_fputs
  8196 ;; This function uses a non-reentrant model
  8197 ;;
  8198                           
  8199                           	psect	text25
  8200  005112                     __ptext25:
  8201                           	callstack 0
  8202  005112                     _fputc:
  8203                           	callstack 15
  8204  005112  5018               	movf	fputc@fp^0,w,c
  8205  005114  1019               	iorwf	(fputc@fp+1)^0,w,c
  8206  005116  B4D8               	btfsc	status,2,c
  8207  005118  EF90  F028         	goto	u7211
  8208  00511C  EF92  F028         	goto	u7210
  8209  005120                     u7211:
  8210  005120  EF9B  F028         	goto	l7410
  8211  005124                     u7210:
  8212  005124  5018               	movf	fputc@fp^0,w,c
  8213  005126  1019               	iorwf	(fputc@fp+1)^0,w,c
  8214  005128  A4D8               	btfss	status,2,c
  8215  00512A  EF99  F028         	goto	u7221
  8216  00512E  EF9B  F028         	goto	u7220
  8217  005132                     u7221:
  8218  005132  EFA0  F028         	goto	l7412
  8219  005136                     u7220:
  8220  005136                     l7410:
  8221  005136  5016               	movf	fputc@c^0,w,c
  8222  005138  EC1C  F02F         	call	_putch
  8223  00513C  EFD3  F028         	goto	l2312
  8224  005140                     l7412:
  8225  005140  EE20 F004          	lfsr	2,4
  8226  005144  5018               	movf	fputc@fp^0,w,c
  8227  005146  26D9               	addwf	fsr2l,f,c
  8228  005148  5019               	movf	(fputc@fp+1)^0,w,c
  8229  00514A  22DA               	addwfc	fsr2h,f,c
  8230  00514C  50DE               	movf	postinc2,w,c
  8231  00514E  10DE               	iorwf	postinc2,w,c
  8232  005150  B4D8               	btfsc	status,2,c
  8233  005152  EFAD  F028         	goto	u7231
  8234  005156  EFAF  F028         	goto	u7230
  8235  00515A                     u7231:
  8236  00515A  EFCA  F028         	goto	l7416
  8237  00515E                     u7230:
  8238  00515E  EE20 F004          	lfsr	2,4
  8239  005162  5018               	movf	fputc@fp^0,w,c
  8240  005164  26D9               	addwf	fsr2l,f,c
  8241  005166  5019               	movf	(fputc@fp+1)^0,w,c
  8242  005168  22DA               	addwfc	fsr2h,f,c
  8243  00516A  EE10 F002          	lfsr	1,2
  8244  00516E  5018               	movf	fputc@fp^0,w,c
  8245  005170  26E1               	addwf	fsr1l,f,c
  8246  005172  5019               	movf	(fputc@fp+1)^0,w,c
  8247  005174  22E2               	addwfc	fsr1h,f,c
  8248  005176  50DE               	movf	postinc2,w,c
  8249  005178  5CE6               	subwf	postinc1,w,c
  8250  00517A  50E6               	movf	postinc1,w,c
  8251  00517C  0A80               	xorlw	128
  8252  00517E  6E1E               	movwf	(??_fputc+4)^0,c
  8253  005180  50DE               	movf	postinc2,w,c
  8254  005182  0A80               	xorlw	128
  8255  005184  581E               	subwfb	(??_fputc+4)^0,w,c
  8256  005186  B0D8               	btfsc	status,0,c
  8257  005188  EFC8  F028         	goto	u7241
  8258  00518C  EFCA  F028         	goto	u7240
  8259  005190                     u7241:
  8260  005190  EFD3  F028         	goto	l2312
  8261  005194                     u7240:
  8262  005194                     l7416:
  8263  005194  EE20 F002          	lfsr	2,2
  8264  005198  5018               	movf	fputc@fp^0,w,c
  8265  00519A  26D9               	addwf	fsr2l,f,c
  8266  00519C  5019               	movf	(fputc@fp+1)^0,w,c
  8267  00519E  22DA               	addwfc	fsr2h,f,c
  8268  0051A0  2ADE               	incf	postinc2,f,c
  8269  0051A2  0E00               	movlw	0
  8270  0051A4  22DD               	addwfc	postdec2,f,c
  8271  0051A6                     l2312:
  8272  0051A6  0012               	return		;funcret
  8273  0051A8                     __end_of_fputc:
  8274                           	callstack 0
  8275                           
  8276 ;; *************** function _putch *****************
  8277 ;; Defined at:
  8278 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  txData          1    wreg     unsigned char 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  txData          1   20[COMRAM] unsigned char 
  8283 ;; Return value:  Size  Location     Type
  8284 ;;                  1    wreg      void 
  8285 ;; Registers used:
  8286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8287 ;; Tracked objects:
  8288 ;;		On entry : 0/0
  8289 ;;		On exit  : 0/0
  8290 ;;		Unchanged: 0/0
  8291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;Total ram usage:        1 bytes
  8297 ;; Hardware stack levels used: 1
  8298 ;; Hardware stack levels required when called: 9
  8299 ;; This function calls:
  8300 ;;		_UART1_Write
  8301 ;; This function is called by:
  8302 ;;		_fputc
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text26
  8307  005E38                     __ptext26:
  8308                           	callstack 0
  8309  005E38                     _putch:
  8310                           	callstack 15
  8311                           
  8312                           ;incstack = 0
  8313                           ;putch@txData stored from wreg
  8314  005E38  6E15               	movwf	putch@txData^0,c
  8315  005E3A                     
  8316                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8317  005E3A  5015               	movf	putch@txData^0,w,c
  8318  005E3C  EC37  F02A         	call	_UART1_Write
  8319  005E40  0012               	return		;funcret
  8320  005E42                     __end_of_putch:
  8321                           	callstack 0
  8322                           
  8323 ;; *************** function _UART1_Write *****************
  8324 ;; Defined at:
  8325 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  txData          1    wreg     unsigned char 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  txData          1   19[COMRAM] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;Total ram usage:        1 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 8
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_putch
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text27
  8354  00546E                     __ptext27:
  8355                           	callstack 0
  8356  00546E                     _UART1_Write:
  8357                           	callstack 15
  8358                           
  8359                           ;incstack = 0
  8360                           ;UART1_Write@txData stored from wreg
  8361  00546E  6E14               	movwf	UART1_Write@txData^0,c
  8362  005470                     l7388:
  8363                           
  8364                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8365  005470  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8366  005472  B4D8               	btfsc	status,2,c
  8367  005474  EF3E  F02A         	goto	u7181
  8368  005478  EF40  F02A         	goto	u7180
  8369  00547C                     u7181:
  8370  00547C  EF38  F02A         	goto	l7388
  8371  005480                     u7180:
  8372  005480                     
  8373                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8374  005480  0139               	movlb	57	; () banked
  8375  005482  B993               	btfsc	147,4,b	;volatile
  8376  005484  EF46  F02A         	goto	u7191
  8377  005488  EF48  F02A         	goto	u7190
  8378  00548C                     u7191:
  8379  00548C  EF4D  F02A         	goto	l309
  8380  005490                     u7190:
  8381  005490                     
  8382                           ; BSR set to: 57
  8383                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8384  005490  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8385                           
  8386                           ;mcc_generated_files/uart1.c: 211:     }
  8387  005496  EF63  F02A         	goto	l7402
  8388  00549A                     l309:
  8389                           
  8390                           ; BSR set to: 57
  8391                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8392  00549A  9993               	bcf	147,4,b	;volatile
  8393  00549C                     
  8394                           ; BSR set to: 57
  8395                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8396  00549C  0E10               	movlw	low _uart1TxBuffer
  8397  00549E  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8398  0054A0  6ED9               	movwf	fsr2l,c
  8399  0054A2  6ADA               	clrf	fsr2h,c
  8400  0054A4  0E01               	movlw	high _uart1TxBuffer
  8401  0054A6  22DA               	addwfc	fsr2h,f,c
  8402  0054A8  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8403  0054AE                     
  8404                           ; BSR set to: 57
  8405  0054AE  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8406  0054B0                     
  8407                           ; BSR set to: 57
  8408                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8409  0054B0  0E07               	movlw	7
  8410  0054B2  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8411  0054B4  EF5E  F02A         	goto	u7201
  8412  0054B8  EF60  F02A         	goto	u7200
  8413  0054BC                     u7201:
  8414  0054BC  EF62  F02A         	goto	l7400
  8415  0054C0                     u7200:
  8416  0054C0                     
  8417                           ; BSR set to: 57
  8418                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8419  0054C0  0E00               	movlw	0
  8420  0054C2  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8421  0054C4                     l7400:
  8422                           
  8423                           ; BSR set to: 57
  8424                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8425  0054C4  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8426  0054C6                     l7402:
  8427                           
  8428                           ; BSR set to: 57
  8429                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8430  0054C6  8993               	bsf	147,4,b	;volatile
  8431  0054C8                     
  8432                           ; BSR set to: 57
  8433  0054C8  0012               	return		;funcret
  8434  0054CA                     __end_of_UART1_Write:
  8435                           	callstack 0
  8436                           
  8437 ;; *************** function _abs *****************
  8438 ;; Defined at:
  8439 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  a               2   37[COMRAM] int 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;		None
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  2   37[COMRAM] int 
  8446 ;; Registers used:
  8447 ;;		wreg, status,2, status,0
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;Total ram usage:        4 bytes
  8458 ;; Hardware stack levels used: 1
  8459 ;; Hardware stack levels required when called: 8
  8460 ;; This function calls:
  8461 ;;		Nothing
  8462 ;; This function is called by:
  8463 ;;		_dtoa
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text28
  8468  005776                     __ptext28:
  8469                           	callstack 0
  8470  005776                     _abs:
  8471                           	callstack 16
  8472  005776  BE27               	btfsc	(abs@a+1)^0,7,c
  8473  005778  EFC8  F02B         	goto	u8550
  8474  00577C  5027               	movf	(abs@a+1)^0,w,c
  8475  00577E  E106               	bnz	u8551
  8476  005780  0426               	decf	abs@a^0,w,c
  8477  005782  B0D8               	btfsc	status,0,c
  8478  005784  EFC6  F02B         	goto	u8551
  8479  005788  EFC8  F02B         	goto	u8550
  8480  00578C                     u8551:
  8481  00578C  EFD6  F02B         	goto	l2278
  8482  005790                     u8550:
  8483  005790  C026  F028         	movff	abs@a,??_abs
  8484  005794  C027  F029         	movff	abs@a+1,??_abs+1
  8485  005798  1E28               	comf	??_abs^0,f,c
  8486  00579A  1E29               	comf	(??_abs+1)^0,f,c
  8487  00579C  4A28               	infsnz	??_abs^0,f,c
  8488  00579E  2A29               	incf	(??_abs+1)^0,f,c
  8489  0057A0  C028  F026         	movff	??_abs,?_abs
  8490  0057A4  C029  F027         	movff	??_abs+1,?_abs+1
  8491  0057A8  EFDA  F02B         	goto	l2281
  8492  0057AC                     l2278:
  8493  0057AC  C026  F026         	movff	abs@a,?_abs
  8494  0057B0  C027  F027         	movff	abs@a+1,?_abs+1
  8495  0057B4                     l2281:
  8496  0057B4  0012               	return		;funcret
  8497  0057B6                     __end_of_abs:
  8498                           	callstack 0
  8499                           
  8500 ;; *************** function ___aomod *****************
  8501 ;; Defined at:
  8502 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8503 ;; Parameters:    Size  Location     Type
  8504 ;;  dividend        8   19[COMRAM] long long 
  8505 ;;  divisor         8   27[COMRAM] long long 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  sign            1   36[COMRAM] unsigned char 
  8508 ;;  counter         1   35[COMRAM] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  8   19[COMRAM] long long 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8518 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;Total ram usage:       18 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 8
  8525 ;; This function calls:
  8526 ;;		Nothing
  8527 ;; This function is called by:
  8528 ;;		_dtoa
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text29
  8533  00412A                     __ptext29:
  8534                           	callstack 0
  8535  00412A                     ___aomod:
  8536                           	callstack 16
  8537  00412A  0E00               	movlw	0
  8538  00412C  6E25               	movwf	___aomod@sign^0,c
  8539  00412E  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8540  004130  EF9E  F020         	goto	u7750
  8541  004134  EF9C  F020         	goto	u7751
  8542  004138                     u7751:
  8543  004138  EFB0  F020         	goto	l7696
  8544  00413C                     u7750:
  8545  00413C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8546  00413E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8547  004140  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8548  004142  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8549  004144  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8550  004146  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8551  004148  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8552  00414A  6C14               	negf	___aomod@dividend^0,c
  8553  00414C  0E00               	movlw	0
  8554  00414E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8555  004150  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8556  004152  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8557  004154  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8558  004156  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8559  004158  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8560  00415A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8561  00415C  0E01               	movlw	1
  8562  00415E  6E25               	movwf	___aomod@sign^0,c
  8563  004160                     l7696:
  8564  004160  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8565  004162  EFB7  F020         	goto	u7760
  8566  004166  EFB5  F020         	goto	u7761
  8567  00416A                     u7761:
  8568  00416A  EFC7  F020         	goto	l7700
  8569  00416E                     u7760:
  8570  00416E  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8571  004170  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8572  004172  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8573  004174  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8574  004176  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8575  004178  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8576  00417A  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8577  00417C  6C1C               	negf	___aomod@divisor^0,c
  8578  00417E  0E00               	movlw	0
  8579  004180  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8580  004182  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8581  004184  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8582  004186  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8583  004188  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8584  00418A  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8585  00418C  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8586  00418E                     l7700:
  8587  00418E  501C               	movf	___aomod@divisor^0,w,c
  8588  004190  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8589  004192  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8590  004194  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8591  004196  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8592  004198  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8593  00419A  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8594  00419C  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8595  00419E  B4D8               	btfsc	status,2,c
  8596  0041A0  EFD4  F020         	goto	u7771
  8597  0041A4  EFD6  F020         	goto	u7770
  8598  0041A8                     u7771:
  8599  0041A8  EF1E  F021         	goto	l7716
  8600  0041AC                     u7770:
  8601  0041AC  0E01               	movlw	1
  8602  0041AE  6E24               	movwf	___aomod@counter^0,c
  8603  0041B0  EFE4  F020         	goto	l7706
  8604  0041B4                     l7704:
  8605  0041B4  90D8               	bcf	status,0,c
  8606  0041B6  361C               	rlcf	___aomod@divisor^0,f,c
  8607  0041B8  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8608  0041BA  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8609  0041BC  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8610  0041BE  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8611  0041C0  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8612  0041C2  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8613  0041C4  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8614  0041C6  2A24               	incf	___aomod@counter^0,f,c
  8615  0041C8                     l7706:
  8616  0041C8  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8617  0041CA  EFE9  F020         	goto	u7781
  8618  0041CE  EFEB  F020         	goto	u7780
  8619  0041D2                     u7781:
  8620  0041D2  EFDA  F020         	goto	l7704
  8621  0041D6                     u7780:
  8622  0041D6                     l7708:
  8623  0041D6  501C               	movf	___aomod@divisor^0,w,c
  8624  0041D8  5C14               	subwf	___aomod@dividend^0,w,c
  8625  0041DA  501D               	movf	(___aomod@divisor+1)^0,w,c
  8626  0041DC  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8627  0041DE  501E               	movf	(___aomod@divisor+2)^0,w,c
  8628  0041E0  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8629  0041E2  501F               	movf	(___aomod@divisor+3)^0,w,c
  8630  0041E4  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8631  0041E6  5020               	movf	(___aomod@divisor+4)^0,w,c
  8632  0041E8  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8633  0041EA  5021               	movf	(___aomod@divisor+5)^0,w,c
  8634  0041EC  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8635  0041EE  5022               	movf	(___aomod@divisor+6)^0,w,c
  8636  0041F0  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8637  0041F2  5023               	movf	(___aomod@divisor+7)^0,w,c
  8638  0041F4  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8639  0041F6  A0D8               	btfss	status,0,c
  8640  0041F8  EF00  F021         	goto	u7791
  8641  0041FC  EF02  F021         	goto	u7790
  8642  004200                     u7791:
  8643  004200  EF12  F021         	goto	l7712
  8644  004204                     u7790:
  8645  004204  501C               	movf	___aomod@divisor^0,w,c
  8646  004206  5E14               	subwf	___aomod@dividend^0,f,c
  8647  004208  501D               	movf	(___aomod@divisor+1)^0,w,c
  8648  00420A  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8649  00420C  501E               	movf	(___aomod@divisor+2)^0,w,c
  8650  00420E  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8651  004210  501F               	movf	(___aomod@divisor+3)^0,w,c
  8652  004212  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8653  004214  5020               	movf	(___aomod@divisor+4)^0,w,c
  8654  004216  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8655  004218  5021               	movf	(___aomod@divisor+5)^0,w,c
  8656  00421A  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8657  00421C  5022               	movf	(___aomod@divisor+6)^0,w,c
  8658  00421E  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8659  004220  5023               	movf	(___aomod@divisor+7)^0,w,c
  8660  004222  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8661  004224                     l7712:
  8662  004224  90D8               	bcf	status,0,c
  8663  004226  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8664  004228  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8665  00422A  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8666  00422C  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8667  00422E  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8668  004230  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8669  004232  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8670  004234  321C               	rrcf	___aomod@divisor^0,f,c
  8671  004236  2E24               	decfsz	___aomod@counter^0,f,c
  8672  004238  EFEB  F020         	goto	l7708
  8673  00423C                     l7716:
  8674  00423C  5025               	movf	___aomod@sign^0,w,c
  8675  00423E  B4D8               	btfsc	status,2,c
  8676  004240  EF24  F021         	goto	u7801
  8677  004244  EF26  F021         	goto	u7800
  8678  004248                     u7801:
  8679  004248  EF36  F021         	goto	l7720
  8680  00424C                     u7800:
  8681  00424C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8682  00424E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8683  004250  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8684  004252  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8685  004254  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8686  004256  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8687  004258  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8688  00425A  6C14               	negf	___aomod@dividend^0,c
  8689  00425C  0E00               	movlw	0
  8690  00425E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8691  004260  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8692  004262  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8693  004264  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8694  004266  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8695  004268  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8696  00426A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8697  00426C                     l7720:
  8698  00426C  C014  F014         	movff	___aomod@dividend,?___aomod
  8699  004270  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8700  004274  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8701  004278  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8702  00427C  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8703  004280  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8704  004284  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8705  004288  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8706  00428C  0012               	return		;funcret
  8707  00428E                     __end_of___aomod:
  8708                           	callstack 0
  8709                           
  8710 ;; *************** function ___aodiv *****************
  8711 ;; Defined at:
  8712 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;  dividend        8   19[COMRAM] long long 
  8715 ;;  divisor         8   27[COMRAM] long long 
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;  quotient        8   37[COMRAM] long long 
  8718 ;;  sign            1   36[COMRAM] unsigned char 
  8719 ;;  counter         1   35[COMRAM] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  8   19[COMRAM] long long 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8729 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8730 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;Total ram usage:       26 bytes
  8734 ;; Hardware stack levels used: 1
  8735 ;; Hardware stack levels required when called: 8
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_dtoa
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text30
  8744  003E24                     __ptext30:
  8745                           	callstack 0
  8746  003E24                     ___aodiv:
  8747                           	callstack 16
  8748  003E24  0E00               	movlw	0
  8749  003E26  6E25               	movwf	___aodiv@sign^0,c
  8750  003E28  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8751  003E2A  EF1B  F01F         	goto	u7680
  8752  003E2E  EF19  F01F         	goto	u7681
  8753  003E32                     u7681:
  8754  003E32  EF2D  F01F         	goto	l7652
  8755  003E36                     u7680:
  8756  003E36  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8757  003E38  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8758  003E3A  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8759  003E3C  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8760  003E3E  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8761  003E40  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8762  003E42  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8763  003E44  6C1C               	negf	___aodiv@divisor^0,c
  8764  003E46  0E00               	movlw	0
  8765  003E48  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8766  003E4A  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8767  003E4C  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8768  003E4E  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8769  003E50  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8770  003E52  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8771  003E54  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8772  003E56  0E01               	movlw	1
  8773  003E58  6E25               	movwf	___aodiv@sign^0,c
  8774  003E5A                     l7652:
  8775  003E5A  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8776  003E5C  EF34  F01F         	goto	u7690
  8777  003E60  EF32  F01F         	goto	u7691
  8778  003E64                     u7691:
  8779  003E64  EF46  F01F         	goto	l7658
  8780  003E68                     u7690:
  8781  003E68  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8782  003E6A  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8783  003E6C  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8784  003E6E  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8785  003E70  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8786  003E72  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8787  003E74  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8788  003E76  6C14               	negf	___aodiv@dividend^0,c
  8789  003E78  0E00               	movlw	0
  8790  003E7A  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8791  003E7C  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8792  003E7E  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8793  003E80  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8794  003E82  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8795  003E84  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8796  003E86  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8797  003E88  0E01               	movlw	1
  8798  003E8A  1A25               	xorwf	___aodiv@sign^0,f,c
  8799  003E8C                     l7658:
  8800  003E8C  EE20  F026         	lfsr	2,___aodiv@quotient
  8801  003E90  0E07               	movlw	7
  8802  003E92                     u7701:
  8803  003E92  6ADE               	clrf	postinc2,c
  8804  003E94  06E8               	decf	wreg,f,c
  8805  003E96  E2FD               	bc	u7701
  8806  003E98  501C               	movf	___aodiv@divisor^0,w,c
  8807  003E9A  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8808  003E9C  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8809  003E9E  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8810  003EA0  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8811  003EA2  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8812  003EA4  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8813  003EA6  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8814  003EA8  B4D8               	btfsc	status,2,c
  8815  003EAA  EF59  F01F         	goto	u7711
  8816  003EAE  EF5B  F01F         	goto	u7710
  8817  003EB2                     u7711:
  8818  003EB2  EFAD  F01F         	goto	l7680
  8819  003EB6                     u7710:
  8820  003EB6  0E01               	movlw	1
  8821  003EB8  6E24               	movwf	___aodiv@counter^0,c
  8822  003EBA  EF69  F01F         	goto	l7666
  8823  003EBE                     l7664:
  8824  003EBE  90D8               	bcf	status,0,c
  8825  003EC0  361C               	rlcf	___aodiv@divisor^0,f,c
  8826  003EC2  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8827  003EC4  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8828  003EC6  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8829  003EC8  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8830  003ECA  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8831  003ECC  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8832  003ECE  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8833  003ED0  2A24               	incf	___aodiv@counter^0,f,c
  8834  003ED2                     l7666:
  8835  003ED2  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8836  003ED4  EF6E  F01F         	goto	u7721
  8837  003ED8  EF70  F01F         	goto	u7720
  8838  003EDC                     u7721:
  8839  003EDC  EF5F  F01F         	goto	l7664
  8840  003EE0                     u7720:
  8841  003EE0                     l7668:
  8842  003EE0  90D8               	bcf	status,0,c
  8843  003EE2  3626               	rlcf	___aodiv@quotient^0,f,c
  8844  003EE4  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8845  003EE6  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8846  003EE8  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8847  003EEA  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8848  003EEC  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8849  003EEE  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8850  003EF0  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8851  003EF2  501C               	movf	___aodiv@divisor^0,w,c
  8852  003EF4  5C14               	subwf	___aodiv@dividend^0,w,c
  8853  003EF6  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8854  003EF8  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8855  003EFA  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8856  003EFC  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8857  003EFE  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8858  003F00  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8859  003F02  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8860  003F04  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8861  003F06  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8862  003F08  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8863  003F0A  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8864  003F0C  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8865  003F0E  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8866  003F10  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8867  003F12  A0D8               	btfss	status,0,c
  8868  003F14  EF8E  F01F         	goto	u7731
  8869  003F18  EF90  F01F         	goto	u7730
  8870  003F1C                     u7731:
  8871  003F1C  EFA1  F01F         	goto	l7676
  8872  003F20                     u7730:
  8873  003F20  501C               	movf	___aodiv@divisor^0,w,c
  8874  003F22  5E14               	subwf	___aodiv@dividend^0,f,c
  8875  003F24  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8876  003F26  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8877  003F28  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8878  003F2A  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8879  003F2C  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8880  003F2E  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8881  003F30  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8882  003F32  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8883  003F34  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8884  003F36  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8885  003F38  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8886  003F3A  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8887  003F3C  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8888  003F3E  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8889  003F40  8026               	bsf	___aodiv@quotient^0,0,c
  8890  003F42                     l7676:
  8891  003F42  90D8               	bcf	status,0,c
  8892  003F44  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8893  003F46  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8894  003F48  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8895  003F4A  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8896  003F4C  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8897  003F4E  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8898  003F50  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8899  003F52  321C               	rrcf	___aodiv@divisor^0,f,c
  8900  003F54  2E24               	decfsz	___aodiv@counter^0,f,c
  8901  003F56  EF70  F01F         	goto	l7668
  8902  003F5A                     l7680:
  8903  003F5A  5025               	movf	___aodiv@sign^0,w,c
  8904  003F5C  B4D8               	btfsc	status,2,c
  8905  003F5E  EFB3  F01F         	goto	u7741
  8906  003F62  EFB5  F01F         	goto	u7740
  8907  003F66                     u7741:
  8908  003F66  EFC5  F01F         	goto	l7684
  8909  003F6A                     u7740:
  8910  003F6A  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8911  003F6C  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8912  003F6E  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8913  003F70  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8914  003F72  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8915  003F74  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8916  003F76  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8917  003F78  6C26               	negf	___aodiv@quotient^0,c
  8918  003F7A  0E00               	movlw	0
  8919  003F7C  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8920  003F7E  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8921  003F80  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8922  003F82  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8923  003F84  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8924  003F86  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8925  003F88  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8926  003F8A                     l7684:
  8927  003F8A  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8928  003F8E  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8929  003F92  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8930  003F96  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8931  003F9A  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8932  003F9E  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8933  003FA2  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8934  003FA6  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8935  003FAA  0012               	return		;funcret
  8936  003FAC                     __end_of___aodiv:
  8937                           	callstack 0
  8938                           
  8939 ;; *************** function _checkBatt *****************
  8940 ;; Defined at:
  8941 ;;		line 83 in file "main.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;		None
  8944 ;; Auto vars:     Size  Location     Type
  8945 ;;		None
  8946 ;; Return value:  Size  Location     Type
  8947 ;;                  1    wreg      _Bool 
  8948 ;; Registers used:
  8949 ;;		wreg, status,2, status,0, cstack
  8950 ;; Tracked objects:
  8951 ;;		On entry : 0/0
  8952 ;;		On exit  : 0/0
  8953 ;;		Unchanged: 0/0
  8954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;Total ram usage:        0 bytes
  8960 ;; Hardware stack levels used: 1
  8961 ;; Hardware stack levels required when called: 10
  8962 ;; This function calls:
  8963 ;;		___flge
  8964 ;;		___xxtofl
  8965 ;;		_getBatteryVoltage
  8966 ;;		_setSteering
  8967 ;; This function is called by:
  8968 ;;		_loop
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text31
  8973  00523C                     __ptext31:
  8974                           	callstack 0
  8975  00523C                     _checkBatt:
  8976                           	callstack 19
  8977  00523C                     
  8978                           ;main.c: 84:     ++battCheckCount;
  8979  00523C  0101               	movlb	1	; () banked
  8980  00523E  4B30               	infsnz	_battCheckCount& (0+255),f,b
  8981  005240  2B31               	incf	(_battCheckCount+1)& (0+255),f,b
  8982  005242                     
  8983                           ; BSR set to: 1
  8984                           ;main.c: 85:     if (battCheckCount > (500)) {
  8985  005242  0EF5               	movlw	245
  8986  005244  5D30               	subwf	_battCheckCount& (0+255),w,b
  8987  005246  0E01               	movlw	1
  8988  005248  5931               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8989  00524A  A0D8               	btfss	status,0,c
  8990  00524C  EF2A  F029         	goto	u9931
  8991  005250  EF2C  F029         	goto	u9930
  8992  005254                     u9931:
  8993  005254  EF65  F029         	goto	l8968
  8994  005258                     u9930:
  8995  005258                     
  8996                           ; BSR set to: 1
  8997                           ;main.c: 86:         battCheckCount = 0;
  8998  005258  0E00               	movlw	0
  8999  00525A  6F31               	movwf	(_battCheckCount+1)& (0+255),b
  9000  00525C  0E00               	movlw	0
  9001  00525E  6F30               	movwf	_battCheckCount& (0+255),b
  9002  005260                     
  9003                           ; BSR set to: 1
  9004                           ;main.c: 87:         getBatteryVoltage();
  9005  005260  EC0D  F02F         	call	_getBatteryVoltage	;wreg free
  9006  005264                     
  9007                           ;main.c: 89:         if (BatteryVolt < (6.8) * 409.6f) {
  9008  005264  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  9009  005268  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  9010  00526C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9011  00526E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9012  005270  0E00               	movlw	0
  9013  005272  EC66  F01D         	call	___xxtofl
  9014  005276  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  9015  00527A  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  9016  00527E  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  9017  005282  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  9018  005286  0E7B               	movlw	123
  9019  005288  0100               	movlb	0	; () banked
  9020  00528A  6F71               	movwf	___flge@ff2& (0+255),b
  9021  00528C  0E14               	movlw	20
  9022  00528E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9023  005290  0E2E               	movlw	46
  9024  005292  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9025  005294  0E45               	movlw	69
  9026  005296  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9027  005298  EC15  F024         	call	___flge	;wreg free
  9028  00529C  0100               	movlb	0	; () banked
  9029  00529E  B0D8               	btfsc	status,0,c
  9030  0052A0  EF54  F029         	goto	u9941
  9031  0052A4  EF56  F029         	goto	u9940
  9032  0052A8                     u9941:
  9033  0052A8  EF65  F029         	goto	l8968
  9034  0052AC                     u9940:
  9035  0052AC                     
  9036                           ; BSR set to: 0
  9037                           ;main.c: 90:             setSpeed = 0;
  9038  0052AC  0E00               	movlw	0
  9039  0052AE  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  9040  0052B0  0E00               	movlw	0
  9041  0052B2  6FEB               	movwf	_setSpeed& (0+255),b
  9042  0052B4                     
  9043                           ; BSR set to: 0
  9044                           ;main.c: 91:             setSteering(0, Front);
  9045  0052B4  0E00               	movlw	0
  9046  0052B6  6E1D               	movwf	(setSteering@steering+1)^0,c
  9047  0052B8  0E00               	movlw	0
  9048  0052BA  6E1C               	movwf	setSteering@steering^0,c
  9049  0052BC  0E03               	movlw	3
  9050  0052BE  6E1E               	movwf	setSteering@steeringMode^0,c
  9051  0052C0  EC40  F01E         	call	_setSteering	;wreg free
  9052  0052C4                     
  9053                           ;main.c: 92:             return 1;
  9054  0052C4  0E01               	movlw	1
  9055  0052C6  EF66  F029         	goto	l1257
  9056  0052CA                     l8968:
  9057                           
  9058                           ;main.c: 95:     return 0;
  9059  0052CA  0E00               	movlw	0
  9060  0052CC                     l1257:
  9061  0052CC  0012               	return		;funcret
  9062  0052CE                     __end_of_checkBatt:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function _setSteering *****************
  9066 ;; Defined at:
  9067 ;;		line 396 in file "main.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  steering        2   27[COMRAM] short 
  9070 ;;  steeringMode    1   29[COMRAM] enum E17304
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  steeringB       2   34[COMRAM] short 
  9073 ;;  steeringF       2   32[COMRAM] short 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0, cstack
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9083 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;Total ram usage:        9 bytes
  9088 ;; Hardware stack levels used: 1
  9089 ;; Hardware stack levels required when called: 9
  9090 ;; This function calls:
  9091 ;;		_PWM5_LoadDutyValue
  9092 ;;		_PWM6_LoadDutyValue
  9093 ;;		___awdiv
  9094 ;; This function is called by:
  9095 ;;		_loop
  9096 ;;		_checkBatt
  9097 ;;		_startAccell
  9098 ;;		_calcSteering
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text32
  9103  003C80                     __ptext32:
  9104                           	callstack 0
  9105  003C80                     _setSteering:
  9106                           	callstack 19
  9107  003C80  0E00               	movlw	0
  9108  003C82  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9109  003C84  0E00               	movlw	0
  9110  003C86  6E23               	movwf	setSteering@steeringB^0,c
  9111                           
  9112                           ;main.c: 398:     switch (steeringMode) {
  9113  003C88  EF94  F01E         	goto	l8750
  9114  003C8C                     l1382:
  9115                           
  9116                           ;main.c: 400:             steeringF = (+steering);
  9117  003C8C  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9118  003C90  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9119                           
  9120                           ;main.c: 401:             steeringB = -steering;
  9121  003C94  C01C  F01F         	movff	setSteering@steering,??_setSteering
  9122  003C98  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  9123  003C9C  1E1F               	comf	??_setSteering^0,f,c
  9124  003C9E  1E20               	comf	(??_setSteering+1)^0,f,c
  9125  003CA0  4A1F               	infsnz	??_setSteering^0,f,c
  9126  003CA2  2A20               	incf	(??_setSteering+1)^0,f,c
  9127  003CA4  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  9128  003CA8  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  9129                           
  9130                           ;main.c: 402:             break;
  9131  003CAC  EFB5  F01E         	goto	l8752
  9132  003CB0                     l1384:
  9133                           
  9134                           ;main.c: 404:             steeringF = (+steering);
  9135  003CB0  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9136  003CB4  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9137                           
  9138                           ;main.c: 405:             steeringB = (+steering);
  9139  003CB8  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9140  003CBC  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9141                           
  9142                           ;main.c: 406:             break;
  9143  003CC0  EFB5  F01E         	goto	l8752
  9144  003CC4                     l1385:
  9145                           
  9146                           ;main.c: 408:             steeringF = (+steering);
  9147  003CC4  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9148  003CC8  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9149  003CCC                     
  9150                           ;main.c: 409:             steeringB = (-steering / (2));
  9151  003CCC  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  9152  003CD0  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  9153  003CD4  0EFF               	movlw	255
  9154  003CD6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  9155  003CD8  0EFE               	movlw	254
  9156  003CDA  6E16               	movwf	___awdiv@divisor^0,c
  9157  003CDC  EC67  F026         	call	___awdiv	;wreg free
  9158  003CE0  C014  F023         	movff	?___awdiv,setSteering@steeringB
  9159  003CE4  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  9160                           
  9161                           ;main.c: 410:             break;
  9162  003CE8  EFB5  F01E         	goto	l8752
  9163  003CEC                     l1386:
  9164                           
  9165                           ;main.c: 412:             steeringF = (+steering);
  9166  003CEC  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9167  003CF0  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9168  003CF4                     
  9169                           ;main.c: 413:             steeringB = 0;
  9170  003CF4  0E00               	movlw	0
  9171  003CF6  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9172  003CF8  0E00               	movlw	0
  9173  003CFA  6E23               	movwf	setSteering@steeringB^0,c
  9174                           
  9175                           ;main.c: 414:             break;
  9176  003CFC  EFB5  F01E         	goto	l8752
  9177  003D00                     l8742:
  9178                           
  9179                           ;main.c: 416:             steeringF = 0;
  9180  003D00  0E00               	movlw	0
  9181  003D02  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9182  003D04  0E00               	movlw	0
  9183  003D06  6E21               	movwf	setSteering@steeringF^0,c
  9184  003D08                     
  9185                           ;main.c: 417:             steeringB = (+steering);
  9186  003D08  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9187  003D0C  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9188                           
  9189                           ;main.c: 418:             break;
  9190  003D10  EFB5  F01E         	goto	l8752
  9191  003D14                     l8746:
  9192                           
  9193                           ;main.c: 420:             steeringF = 0;
  9194  003D14  0E00               	movlw	0
  9195  003D16  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9196  003D18  0E00               	movlw	0
  9197  003D1A  6E21               	movwf	setSteering@steeringF^0,c
  9198                           
  9199                           ;main.c: 421:             steeringB = 0;
  9200  003D1C  0E00               	movlw	0
  9201  003D1E  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9202  003D20  0E00               	movlw	0
  9203  003D22  6E23               	movwf	setSteering@steeringB^0,c
  9204                           
  9205                           ;main.c: 422:             break;
  9206  003D24  EFB5  F01E         	goto	l8752
  9207  003D28                     l8750:
  9208  003D28  501E               	movf	setSteering@steeringMode^0,w,c
  9209  003D2A  6E1F               	movwf	??_setSteering^0,c
  9210  003D2C  6A20               	clrf	(??_setSteering+1)^0,c
  9211                           
  9212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9213                           ; Switch size 1, requested type "simple"
  9214                           ; Number of cases is 1, Range of values is 0 to 0
  9215                           ; switch strategies available:
  9216                           ; Name         Instructions Cycles
  9217                           ; simple_byte            4     3 (average)
  9218                           ;	Chosen strategy is simple_byte
  9219  003D2E  5020               	movf	(??_setSteering+1)^0,w,c
  9220  003D30  0A00               	xorlw	0	; case 0
  9221  003D32  B4D8               	btfsc	status,2,c
  9222  003D34  EF9E  F01E         	goto	l9314
  9223  003D38  EF8A  F01E         	goto	l8746
  9224  003D3C                     l9314:
  9225                           
  9226                           ; Switch size 1, requested type "simple"
  9227                           ; Number of cases is 5, Range of values is 0 to 4
  9228                           ; switch strategies available:
  9229                           ; Name         Instructions Cycles
  9230                           ; simple_byte           16     9 (average)
  9231                           ;	Chosen strategy is simple_byte
  9232  003D3C  501F               	movf	??_setSteering^0,w,c
  9233  003D3E  0A00               	xorlw	0	; case 0
  9234  003D40  B4D8               	btfsc	status,2,c
  9235  003D42  EF46  F01E         	goto	l1382
  9236  003D46  0A01               	xorlw	1	; case 1
  9237  003D48  B4D8               	btfsc	status,2,c
  9238  003D4A  EF58  F01E         	goto	l1384
  9239  003D4E  0A03               	xorlw	3	; case 2
  9240  003D50  B4D8               	btfsc	status,2,c
  9241  003D52  EF62  F01E         	goto	l1385
  9242  003D56  0A01               	xorlw	1	; case 3
  9243  003D58  B4D8               	btfsc	status,2,c
  9244  003D5A  EF76  F01E         	goto	l1386
  9245  003D5E  0A07               	xorlw	7	; case 4
  9246  003D60  B4D8               	btfsc	status,2,c
  9247  003D62  EF80  F01E         	goto	l8742
  9248  003D66  EF8A  F01E         	goto	l8746
  9249  003D6A                     l8752:
  9250                           
  9251                           ;main.c: 425:     if (steeringF > ((65))) {
  9252  003D6A  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  9253  003D6C  EFC1  F01E         	goto	u9671
  9254  003D70  5022               	movf	(setSteering@steeringF+1)^0,w,c
  9255  003D72  E109               	bnz	u9670
  9256  003D74  0E42               	movlw	66
  9257  003D76  5C21               	subwf	setSteering@steeringF^0,w,c
  9258  003D78  A0D8               	btfss	status,0,c
  9259  003D7A  EFC1  F01E         	goto	u9671
  9260  003D7E  EFC3  F01E         	goto	u9670
  9261  003D82                     u9671:
  9262  003D82  EFC9  F01E         	goto	l8756
  9263  003D86                     u9670:
  9264  003D86                     
  9265                           ;main.c: 426:         steeringF = ((65));
  9266  003D86  0E00               	movlw	0
  9267  003D88  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9268  003D8A  0E41               	movlw	65
  9269  003D8C  6E21               	movwf	setSteering@steeringF^0,c
  9270                           
  9271                           ;main.c: 427:     } else if (steeringF < (-(65))) {
  9272  003D8E  EFDB  F01E         	goto	l8760
  9273  003D92                     l8756:
  9274  003D92  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  9275  003D94  EFD5  F01E         	goto	u9681
  9276  003D98  0EBF               	movlw	191
  9277  003D9A  5C21               	subwf	setSteering@steeringF^0,w,c
  9278  003D9C  0EFF               	movlw	255
  9279  003D9E  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  9280  003DA0  B0D8               	btfsc	status,0,c
  9281  003DA2  EFD5  F01E         	goto	u9681
  9282  003DA6  EFD7  F01E         	goto	u9680
  9283  003DAA                     u9681:
  9284  003DAA  EFDB  F01E         	goto	l8760
  9285  003DAE                     u9680:
  9286  003DAE                     
  9287                           ;main.c: 428:         steeringF = (-(65));
  9288  003DAE  0EFF               	movlw	255
  9289  003DB0  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9290  003DB2  0EBF               	movlw	191
  9291  003DB4  6E21               	movwf	setSteering@steeringF^0,c
  9292  003DB6                     l8760:
  9293                           
  9294                           ;main.c: 431:     if (steeringB > ((40))) {
  9295  003DB6  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  9296  003DB8  EFE7  F01E         	goto	u9691
  9297  003DBC  5024               	movf	(setSteering@steeringB+1)^0,w,c
  9298  003DBE  E109               	bnz	u9690
  9299  003DC0  0E29               	movlw	41
  9300  003DC2  5C23               	subwf	setSteering@steeringB^0,w,c
  9301  003DC4  A0D8               	btfss	status,0,c
  9302  003DC6  EFE7  F01E         	goto	u9691
  9303  003DCA  EFE9  F01E         	goto	u9690
  9304  003DCE                     u9691:
  9305  003DCE  EFEF  F01E         	goto	l8764
  9306  003DD2                     u9690:
  9307  003DD2                     
  9308                           ;main.c: 432:         steeringB = ((40));
  9309  003DD2  0E00               	movlw	0
  9310  003DD4  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9311  003DD6  0E28               	movlw	40
  9312  003DD8  6E23               	movwf	setSteering@steeringB^0,c
  9313                           
  9314                           ;main.c: 433:     } else if (steeringB < (-(40))) {
  9315  003DDA  EF01  F01F         	goto	l8768
  9316  003DDE                     l8764:
  9317  003DDE  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  9318  003DE0  EFFB  F01E         	goto	u9701
  9319  003DE4  0ED8               	movlw	216
  9320  003DE6  5C23               	subwf	setSteering@steeringB^0,w,c
  9321  003DE8  0EFF               	movlw	255
  9322  003DEA  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  9323  003DEC  B0D8               	btfsc	status,0,c
  9324  003DEE  EFFB  F01E         	goto	u9701
  9325  003DF2  EFFD  F01E         	goto	u9700
  9326  003DF6                     u9701:
  9327  003DF6  EF01  F01F         	goto	l8768
  9328  003DFA                     u9700:
  9329  003DFA                     
  9330                           ;main.c: 434:         steeringB = (-(40));
  9331  003DFA  0EFF               	movlw	255
  9332  003DFC  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9333  003DFE  0ED8               	movlw	216
  9334  003E00  6E23               	movwf	setSteering@steeringB^0,c
  9335  003E02                     l8768:
  9336                           
  9337                           ;main.c: 438:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9338  003E02  0E60               	movlw	96
  9339  003E04  2421               	addwf	setSteering@steeringF^0,w,c
  9340  003E06  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9341  003E08  0E01               	movlw	1
  9342  003E0A  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  9343  003E0C  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9344  003E0E  ECA4  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9345  003E12                     
  9346                           ;main.c: 439:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9347  003E12  0E65               	movlw	101
  9348  003E14  2423               	addwf	setSteering@steeringB^0,w,c
  9349  003E16  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9350  003E18  0E01               	movlw	1
  9351  003E1A  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  9352  003E1C  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9353  003E1E  ECBE  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9354  003E22  0012               	return		;funcret
  9355  003E24                     __end_of_setSteering:
  9356                           	callstack 0
  9357                           
  9358 ;; *************** function _PWM6_LoadDutyValue *****************
  9359 ;; Defined at:
  9360 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;Total ram usage:        4 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; Hardware stack levels required when called: 8
  9381 ;; This function calls:
  9382 ;;		Nothing
  9383 ;; This function is called by:
  9384 ;;		_setSteering
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388                           	psect	text33
  9389  005948                     __ptext33:
  9390                           	callstack 0
  9391  005948                     _PWM6_LoadDutyValue:
  9392                           	callstack 19
  9393  005948                     
  9394                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9395  005948  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9396  00594C  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9397  005950  90D8               	bcf	status,0,c
  9398  005952  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9399  005954  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9400  005956  90D8               	bcf	status,0,c
  9401  005958  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9402  00595A  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9403  00595C  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9404  00595E  6E69               	movwf	105,c	;volatile
  9405                           
  9406                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9407  005960  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9408  005964  0E03               	movlw	3
  9409  005966  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9410  005968  0E06               	movlw	6
  9411  00596A  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9412  00596C                     u9535:
  9413  00596C  90D8               	bcf	status,0,c
  9414  00596E  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9415  005970  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9416  005972  EFB6  F02C         	goto	u9535
  9417  005976  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9418  005978  6E68               	movwf	104,c	;volatile
  9419  00597A  0012               	return		;funcret
  9420  00597C                     __end_of_PWM6_LoadDutyValue:
  9421                           	callstack 0
  9422                           
  9423 ;; *************** function _PWM5_LoadDutyValue *****************
  9424 ;; Defined at:
  9425 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;		None
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  1    wreg      void 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;Total ram usage:        4 bytes
  9444 ;; Hardware stack levels used: 1
  9445 ;; Hardware stack levels required when called: 8
  9446 ;; This function calls:
  9447 ;;		Nothing
  9448 ;; This function is called by:
  9449 ;;		_setSteering
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text34
  9454  00597C                     __ptext34:
  9455                           	callstack 0
  9456  00597C                     _PWM5_LoadDutyValue:
  9457                           	callstack 19
  9458  00597C                     
  9459                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9460  00597C  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9461  005980  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9462  005984  90D8               	bcf	status,0,c
  9463  005986  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9464  005988  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9465  00598A  90D8               	bcf	status,0,c
  9466  00598C  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9467  00598E  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9468  005990  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9469  005992  6E6D               	movwf	109,c	;volatile
  9470                           
  9471                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9472  005994  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9473  005998  0E03               	movlw	3
  9474  00599A  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9475  00599C  0E06               	movlw	6
  9476  00599E  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9477  0059A0                     u9525:
  9478  0059A0  90D8               	bcf	status,0,c
  9479  0059A2  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9480  0059A4  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9481  0059A6  EFD0  F02C         	goto	u9525
  9482  0059AA  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9483  0059AC  6E6C               	movwf	108,c	;volatile
  9484  0059AE  0012               	return		;funcret
  9485  0059B0                     __end_of_PWM5_LoadDutyValue:
  9486                           	callstack 0
  9487                           
  9488 ;; *************** function _getBatteryVoltage *****************
  9489 ;; Defined at:
  9490 ;;		line 78 in file "main.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;Total ram usage:        0 bytes
  9509 ;; Hardware stack levels used: 1
  9510 ;; Hardware stack levels required when called: 9
  9511 ;; This function calls:
  9512 ;;		_ADCC_GetSingleConversion
  9513 ;; This function is called by:
  9514 ;;		_loop
  9515 ;;		_checkBatt
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text35
  9520  005E1A                     __ptext35:
  9521                           	callstack 0
  9522  005E1A                     _getBatteryVoltage:
  9523                           	callstack 20
  9524  005E1A                     
  9525                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9526  005E1A  0E22               	movlw	34
  9527  005E1C  EC40  F02D         	call	_ADCC_GetSingleConversion
  9528  005E20  C014  F0E5         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9529  005E24  C015  F0E6         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9530  005E28  0012               	return		;funcret
  9531  005E2A                     __end_of_getBatteryVoltage:
  9532                           	callstack 0
  9533                           
  9534 ;; *************** function _ADCC_GetSingleConversion *****************
  9535 ;; Defined at:
  9536 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9537 ;; Parameters:    Size  Location     Type
  9538 ;;  channel         1    wreg     enum E16058
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  channel         1   23[COMRAM] enum E16058
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  2   19[COMRAM] unsigned short 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0
  9545 ;; Tracked objects:
  9546 ;;		On entry : 0/0
  9547 ;;		On exit  : 0/0
  9548 ;;		Unchanged: 0/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;Total ram usage:        5 bytes
  9555 ;; Hardware stack levels used: 1
  9556 ;; Hardware stack levels required when called: 8
  9557 ;; This function calls:
  9558 ;;		Nothing
  9559 ;; This function is called by:
  9560 ;;		_getBatteryVoltage
  9561 ;; This function uses a non-reentrant model
  9562 ;;
  9563                           
  9564                           	psect	text36
  9565  005A80                     __ptext36:
  9566                           	callstack 0
  9567  005A80                     _ADCC_GetSingleConversion:
  9568                           	callstack 20
  9569                           
  9570                           ;incstack = 0
  9571                           ;ADCC_GetSingleConversion@channel stored from wreg
  9572  005A80  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9573  005A82                     
  9574                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9575  005A82  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9576  005A88                     
  9577                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9578  005A88  013E               	movlb	62	; () banked
  9579  005A8A  8FF8               	bsf	248,7,b	;volatile
  9580  005A8C                     
  9581                           ; BSR set to: 62
  9582                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9583  005A8C  9DF8               	bcf	248,6,b	;volatile
  9584  005A8E                     
  9585                           ; BSR set to: 62
  9586                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9587  005A8E  81F8               	bsf	248,0,b	;volatile
  9588  005A90                     l1054:
  9589                           
  9590                           ; BSR set to: 62
  9591                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9592  005A90  B1F8               	btfsc	248,0,b	;volatile
  9593  005A92  EF4D  F02D         	goto	u6101
  9594  005A96  EF4F  F02D         	goto	u6100
  9595  005A9A                     u6101:
  9596  005A9A  EF48  F02D         	goto	l1054
  9597  005A9E                     u6100:
  9598  005A9E                     
  9599                           ; BSR set to: 62
  9600                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9601  005A9E  51F0               	movf	240,w,b	;volatile
  9602  005AA0  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9603  005AA2  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9604  005AA4  51EF               	movf	239,w,b	;volatile
  9605  005AA6  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9606  005AA8  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9607  005AAA  0E00               	movlw	0
  9608  005AAC  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9609  005AAE  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9610  005AB0                     
  9611                           ; BSR set to: 62
  9612  005AB0  0012               	return		;funcret
  9613  005AB2                     __end_of_ADCC_GetSingleConversion:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function ___flge *****************
  9617 ;; Defined at:
  9618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  ff1             4   13[BANK0 ] unsigned short 
  9621 ;;  ff2             4   17[BANK0 ] unsigned short 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;		None
  9624 ;; Return value:  Size  Location     Type
  9625 ;;		None               void
  9626 ;; Registers used:
  9627 ;;		wreg, status,2, status,0
  9628 ;; Tracked objects:
  9629 ;;		On entry : 0/0
  9630 ;;		On exit  : 0/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;Total ram usage:       12 bytes
  9638 ;; Hardware stack levels used: 1
  9639 ;; Hardware stack levels required when called: 8
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_loop
  9644 ;;		_checkBatt
  9645 ;;		_startAccell
  9646 ;;		_efgtoa
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           	psect	text37
  9651  00482A                     __ptext37:
  9652                           	callstack 0
  9653  00482A                     ___flge:
  9654                           	callstack 16
  9655  00482A  0E00               	movlw	0
  9656  00482C  0100               	movlb	0	; () banked
  9657  00482E  156D               	andwf	___flge@ff1& (0+255),w,b
  9658  004830  6E36               	movwf	??___flge^0,c
  9659  004832  0E00               	movlw	0
  9660  004834  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9661  004836  6E37               	movwf	(??___flge+1)^0,c
  9662  004838  0E80               	movlw	128
  9663  00483A  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9664  00483C  6E38               	movwf	(??___flge+2)^0,c
  9665  00483E  0E7F               	movlw	127
  9666  004840  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9667  004842  6E39               	movwf	(??___flge+3)^0,c
  9668  004844  5036               	movf	??___flge^0,w,c
  9669  004846  1037               	iorwf	(??___flge+1)^0,w,c
  9670  004848  1038               	iorwf	(??___flge+2)^0,w,c
  9671  00484A  1039               	iorwf	(??___flge+3)^0,w,c
  9672  00484C  A4D8               	btfss	status,2,c
  9673  00484E  EF2B  F024         	goto	u8381
  9674  004852  EF2D  F024         	goto	u8380
  9675  004856                     u8381:
  9676  004856  EF35  F024         	goto	l8098
  9677  00485A                     u8380:
  9678  00485A                     
  9679                           ; BSR set to: 0
  9680  00485A  0E00               	movlw	0
  9681  00485C  6F6D               	movwf	___flge@ff1& (0+255),b
  9682  00485E  0E00               	movlw	0
  9683  004860  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9684  004862  0E00               	movlw	0
  9685  004864  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9686  004866  0E00               	movlw	0
  9687  004868  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9688  00486A                     l8098:
  9689                           
  9690                           ; BSR set to: 0
  9691  00486A  0E00               	movlw	0
  9692  00486C  1571               	andwf	___flge@ff2& (0+255),w,b
  9693  00486E  6E36               	movwf	??___flge^0,c
  9694  004870  0E00               	movlw	0
  9695  004872  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9696  004874  6E37               	movwf	(??___flge+1)^0,c
  9697  004876  0E80               	movlw	128
  9698  004878  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9699  00487A  6E38               	movwf	(??___flge+2)^0,c
  9700  00487C  0E7F               	movlw	127
  9701  00487E  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9702  004880  6E39               	movwf	(??___flge+3)^0,c
  9703  004882  5036               	movf	??___flge^0,w,c
  9704  004884  1037               	iorwf	(??___flge+1)^0,w,c
  9705  004886  1038               	iorwf	(??___flge+2)^0,w,c
  9706  004888  1039               	iorwf	(??___flge+3)^0,w,c
  9707  00488A  A4D8               	btfss	status,2,c
  9708  00488C  EF4A  F024         	goto	u8391
  9709  004890  EF4C  F024         	goto	u8390
  9710  004894                     u8391:
  9711  004894  EF54  F024         	goto	l8102
  9712  004898                     u8390:
  9713  004898                     
  9714                           ; BSR set to: 0
  9715  004898  0E00               	movlw	0
  9716  00489A  6F71               	movwf	___flge@ff2& (0+255),b
  9717  00489C  0E00               	movlw	0
  9718  00489E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9719  0048A0  0E00               	movlw	0
  9720  0048A2  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9721  0048A4  0E00               	movlw	0
  9722  0048A6  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9723  0048A8                     l8102:
  9724                           
  9725                           ; BSR set to: 0
  9726  0048A8  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9727  0048AA  EF59  F024         	goto	u8401
  9728  0048AE  EF5B  F024         	goto	u8400
  9729  0048B2                     u8401:
  9730  0048B2  EF64  F024         	goto	l8106
  9731  0048B6                     u8400:
  9732  0048B6                     
  9733                           ; BSR set to: 0
  9734  0048B6  6D6D               	negf	___flge@ff1& (0+255),b
  9735  0048B8  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9736  0048BA  B0D8               	btfsc	status,0,c
  9737  0048BC  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9738  0048BE  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9739  0048C0  B0D8               	btfsc	status,0,c
  9740  0048C2  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9741  0048C4  0E80               	movlw	128
  9742  0048C6  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9743  0048C8                     l8106:
  9744                           
  9745                           ; BSR set to: 0
  9746  0048C8  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9747  0048CA  EF69  F024         	goto	u8411
  9748  0048CE  EF6B  F024         	goto	u8410
  9749  0048D2                     u8411:
  9750  0048D2  EF74  F024         	goto	l1663
  9751  0048D6                     u8410:
  9752  0048D6                     
  9753                           ; BSR set to: 0
  9754  0048D6  6D71               	negf	___flge@ff2& (0+255),b
  9755  0048D8  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9756  0048DA  B0D8               	btfsc	status,0,c
  9757  0048DC  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9758  0048DE  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9759  0048E0  B0D8               	btfsc	status,0,c
  9760  0048E2  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9761  0048E4  0E80               	movlw	128
  9762  0048E6  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9763  0048E8                     l1663:
  9764                           
  9765                           ; BSR set to: 0
  9766  0048E8  0E00               	movlw	0
  9767  0048EA  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9768  0048EC  0E00               	movlw	0
  9769  0048EE  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9770  0048F0  0E00               	movlw	0
  9771  0048F2  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9772  0048F4  0E80               	movlw	128
  9773  0048F6  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9774  0048F8  0E00               	movlw	0
  9775  0048FA  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9776  0048FC  0E00               	movlw	0
  9777  0048FE  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9778  004900  0E00               	movlw	0
  9779  004902  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9780  004904  0E80               	movlw	128
  9781  004906  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9782  004908  5171               	movf	___flge@ff2& (0+255),w,b
  9783  00490A  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9784  00490C  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9785  00490E  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9786  004910  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9787  004912  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9788  004914  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9789  004916  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9790  004918  B0D8               	btfsc	status,0,c
  9791  00491A  EF91  F024         	goto	u8421
  9792  00491E  EF93  F024         	goto	u8420
  9793  004922                     u8421:
  9794  004922  EF96  F024         	goto	l8112
  9795  004926                     u8420:
  9796  004926                     
  9797                           ; BSR set to: 0
  9798  004926  90D8               	bcf	status,0,c
  9799  004928  EF97  F024         	goto	l1668
  9800  00492C                     l8112:
  9801                           
  9802                           ; BSR set to: 0
  9803  00492C  80D8               	bsf	status,0,c
  9804  00492E                     l1668:
  9805                           
  9806                           ; BSR set to: 0
  9807  00492E  0012               	return		;funcret
  9808  004930                     __end_of___flge:
  9809                           	callstack 0
  9810                           
  9811 ;; *************** function _calcSpeed *****************
  9812 ;; Defined at:
  9813 ;;		line 288 in file "main.c"
  9814 ;; Parameters:    Size  Location     Type
  9815 ;;		None
  9816 ;; Auto vars:     Size  Location     Type
  9817 ;;  speed           2   39[BANK0 ] short 
  9818 ;; Return value:  Size  Location     Type
  9819 ;;                  1    wreg      void 
  9820 ;; Registers used:
  9821 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9822 ;; Tracked objects:
  9823 ;;		On entry : 0/0
  9824 ;;		On exit  : 0/0
  9825 ;;		Unchanged: 0/0
  9826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9828 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;Total ram usage:        6 bytes
  9832 ;; Hardware stack levels used: 1
  9833 ;; Hardware stack levels required when called: 9
  9834 ;; This function calls:
  9835 ;;		___fladd
  9836 ;;		___flmul
  9837 ;;		___fltol
  9838 ;;		___xxtofl
  9839 ;; This function is called by:
  9840 ;;		_loop
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           
  9844                           	psect	text38
  9845  0038C2                     __ptext38:
  9846                           	callstack 0
  9847  0038C2                     _calcSpeed:
  9848                           	callstack 20
  9849  0038C2                     
  9850                           ;main.c: 289:     int16_t speed = 0;
  9851  0038C2  0E00               	movlw	0
  9852  0038C4  0100               	movlb	0	; () banked
  9853  0038C6  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9854  0038C8  0E00               	movlw	0
  9855  0038CA  6F87               	movwf	calcSpeed@speed& (0+255),b
  9856                           
  9857                           ;main.c: 291:     switch (driveMode) {
  9858  0038CC  EF17  F01D         	goto	l9086
  9859  0038D0                     l9050:
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;main.c: 293:             if (distFront > (30)) {
  9863  0038D0  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9864  0038D2  E109               	bnz	u10120
  9865  0038D4  0E1F               	movlw	31
  9866  0038D6  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9867  0038D8  A0D8               	btfss	status,0,c
  9868  0038DA  EF71  F01C         	goto	u10121
  9869  0038DE  EF73  F01C         	goto	u10120
  9870  0038E2                     u10121:
  9871  0038E2  EF75  F01C         	goto	l9054
  9872  0038E6                     u10120:
  9873  0038E6                     
  9874                           ; BSR set to: 0
  9875                           ;main.c: 294:                 driveMode = Straight;
  9876  0038E6  0E01               	movlw	1
  9877  0038E8  6FFE               	movwf	_driveMode& (0+255),b
  9878  0038EA                     l9054:
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;main.c: 296:             if (setSpeed > (100)) {
  9882  0038EA  BFEC               	btfsc	(_setSpeed+1)& (0+255),7,b
  9883  0038EC  EF81  F01C         	goto	u10131
  9884  0038F0  51EC               	movf	(_setSpeed+1)& (0+255),w,b
  9885  0038F2  E109               	bnz	u10130
  9886  0038F4  0E65               	movlw	101
  9887  0038F6  5DEB               	subwf	_setSpeed& (0+255),w,b
  9888  0038F8  A0D8               	btfss	status,0,c
  9889  0038FA  EF81  F01C         	goto	u10131
  9890  0038FE  EF83  F01C         	goto	u10130
  9891  003902                     u10131:
  9892  003902  EF9E  F01C         	goto	l9064
  9893  003906                     u10130:
  9894  003906                     
  9895                           ; BSR set to: 0
  9896                           ;main.c: 297:                     speed = setSpeed;
  9897  003906  C0EB  F087         	movff	_setSpeed,calcSpeed@speed
  9898  00390A  C0EC  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9899  00390E                     
  9900                           ; BSR set to: 0
  9901                           ;main.c: 298:                 if (distFront < (15)) {
  9902  00390E  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9903  003910  E107               	bnz	u10141
  9904  003912  0E0F               	movlw	15
  9905  003914  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9906  003916  B0D8               	btfsc	status,0,c
  9907  003918  EF90  F01C         	goto	u10141
  9908  00391C  EF92  F01C         	goto	u10140
  9909  003920                     u10141:
  9910  003920  EF98  F01C         	goto	l9062
  9911  003924                     u10140:
  9912  003924                     
  9913                           ; BSR set to: 0
  9914                           ;main.c: 299:                     speed -= 4;
  9915  003924  0EFC               	movlw	252
  9916  003926  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9917  003928  0EFF               	movlw	255
  9918  00392A  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9919                           
  9920                           ;main.c: 300:                 } else {
  9921  00392C  EF3C  F01D         	goto	l9088
  9922  003930                     l9062:
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;main.c: 301:                     speed -= 2;
  9926  003930  0EFE               	movlw	254
  9927  003932  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9928  003934  0EFF               	movlw	255
  9929  003936  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9930  003938  EF3C  F01D         	goto	l9088
  9931  00393C                     l9064:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;main.c: 304:                 speed = (100);
  9935  00393C  0E00               	movlw	0
  9936  00393E  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9937  003940  0E64               	movlw	100
  9938  003942  6F87               	movwf	calcSpeed@speed& (0+255),b
  9939  003944  EF3C  F01D         	goto	l9088
  9940  003948                     l9066:
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;main.c: 308:             if (distFront < (30)) {
  9944  003948  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9945  00394A  E107               	bnz	u10151
  9946  00394C  0E1E               	movlw	30
  9947  00394E  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9948  003950  B0D8               	btfsc	status,0,c
  9949  003952  EFAD  F01C         	goto	u10151
  9950  003956  EFAF  F01C         	goto	u10150
  9951  00395A                     u10151:
  9952  00395A  EFB1  F01C         	goto	l9070
  9953  00395E                     u10150:
  9954  00395E                     
  9955                           ; BSR set to: 0
  9956                           ;main.c: 309:                 driveMode = Brake;
  9957  00395E  0E02               	movlw	2
  9958  003960  6FFE               	movwf	_driveMode& (0+255),b
  9959  003962                     l9070:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;main.c: 312:             if (distFront >= (150)) {
  9963  003962  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9964  003964  E109               	bnz	u10160
  9965  003966  0E96               	movlw	150
  9966  003968  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9967  00396A  A0D8               	btfss	status,0,c
  9968  00396C  EFBA  F01C         	goto	u10161
  9969  003970  EFBC  F01C         	goto	u10160
  9970  003974                     u10161:
  9971  003974  EF05  F01D         	goto	l9074
  9972  003978                     u10160:
  9973  003978                     
  9974                           ; BSR set to: 0
  9975                           ;main.c: 313:                 speed = (int16_t) ((0.7) * (distFront - (150)) + (275));
  9976  003978  0E00               	movlw	0
  9977  00397A  6F71               	movwf	___fladd@a& (0+255),b
  9978  00397C  0E80               	movlw	128
  9979  00397E  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9980  003980  0E89               	movlw	137
  9981  003982  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9982  003984  0E43               	movlw	67
  9983  003986  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9984  003988  0E33               	movlw	51
  9985  00398A  6E2E               	movwf	___flmul@a^0,c
  9986  00398C  0E33               	movlw	51
  9987  00398E  6E2F               	movwf	(___flmul@a+1)^0,c
  9988  003990  0E33               	movlw	51
  9989  003992  6E30               	movwf	(___flmul@a+2)^0,c
  9990  003994  0E3F               	movlw	63
  9991  003996  6E31               	movwf	(___flmul@a+3)^0,c
  9992  003998  0E6A               	movlw	106
  9993  00399A  6F83               	movwf	??_calcSpeed& (0+255),b
  9994  00399C  0EFF               	movlw	255
  9995  00399E  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9996  0039A0  C0FC  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9997  0039A4  C0FD  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
  9998  0039A8  5183               	movf	??_calcSpeed& (0+255),w,b
  9999  0039AA  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10000  0039AC  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10001  0039AE  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10002  0039B0  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10003  0039B4  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10004  0039B8  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10005  0039BA  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10006  0039BC  0E00               	movlw	0
 10007  0039BE  EC66  F01D         	call	___xxtofl
 10008  0039C2  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10009  0039C6  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10010  0039CA  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10011  0039CE  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10012  0039D2  EC82  F013         	call	___flmul	;wreg free
 10013  0039D6  C02A  F06D         	movff	?___flmul,___fladd@b
 10014  0039DA  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10015  0039DE  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10016  0039E2  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10017  0039E6  EC21  F011         	call	___fladd	;wreg free
 10018  0039EA  C06D  F079         	movff	?___fladd,___fltol@f1
 10019  0039EE  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10020  0039F2  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10021  0039F6  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10022  0039FA  EC0E  F023         	call	___fltol	;wreg free
 10023  0039FE  C079  F087         	movff	?___fltol,calcSpeed@speed
 10024  003A02  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10025                           
 10026                           ;main.c: 314:             } else {
 10027  003A06  EF3C  F01D         	goto	l9088
 10028  003A0A                     l9074:
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;main.c: 315:                 speed = (275);
 10032  003A0A  0E01               	movlw	1
 10033  003A0C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10034  003A0E  0E13               	movlw	19
 10035  003A10  6F87               	movwf	calcSpeed@speed& (0+255),b
 10036  003A12  EF3C  F01D         	goto	l9088
 10037  003A16                     l9076:
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;main.c: 320:             speed = (-125);
 10041  003A16  0EFF               	movlw	255
 10042  003A18  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10043  003A1A  0E83               	movlw	131
 10044  003A1C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10045                           
 10046                           ;main.c: 321:             break;
 10047  003A1E  EF3C  F01D         	goto	l9088
 10048  003A22                     l9080:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;main.c: 326:             speed = (200);
 10052  003A22  0E00               	movlw	0
 10053  003A24  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10054  003A26  0EC8               	movlw	200
 10055  003A28  6F87               	movwf	calcSpeed@speed& (0+255),b
 10056                           
 10057                           ;main.c: 327:             break;
 10058  003A2A  EF3C  F01D         	goto	l9088
 10059  003A2E                     l9086:
 10060                           
 10061                           ; BSR set to: 0
 10062  003A2E  51FE               	movf	_driveMode& (0+255),w,b
 10063  003A30  6F83               	movwf	??_calcSpeed& (0+255),b
 10064  003A32  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10065                           
 10066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10067                           ; Switch size 1, requested type "simple"
 10068                           ; Number of cases is 1, Range of values is 0 to 0
 10069                           ; switch strategies available:
 10070                           ; Name         Instructions Cycles
 10071                           ; simple_byte            4     3 (average)
 10072                           ;	Chosen strategy is simple_byte
 10073  003A34  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10074  003A36  0A00               	xorlw	0	; case 0
 10075  003A38  B4D8               	btfsc	status,2,c
 10076  003A3A  EF21  F01D         	goto	l9316
 10077  003A3E  EF3C  F01D         	goto	l9088
 10078  003A42                     l9316:
 10079                           
 10080                           ; BSR set to: 0
 10081                           ; Switch size 1, requested type "simple"
 10082                           ; Number of cases is 6, Range of values is 1 to 6
 10083                           ; switch strategies available:
 10084                           ; Name         Instructions Cycles
 10085                           ; simple_byte           19    10 (average)
 10086                           ;	Chosen strategy is simple_byte
 10087  003A42  5183               	movf	??_calcSpeed& (0+255),w,b
 10088  003A44  0A01               	xorlw	1	; case 1
 10089  003A46  B4D8               	btfsc	status,2,c
 10090  003A48  EFA4  F01C         	goto	l9066
 10091  003A4C  0A03               	xorlw	3	; case 2
 10092  003A4E  B4D8               	btfsc	status,2,c
 10093  003A50  EF68  F01C         	goto	l9050
 10094  003A54  0A01               	xorlw	1	; case 3
 10095  003A56  B4D8               	btfsc	status,2,c
 10096  003A58  EF0B  F01D         	goto	l9076
 10097  003A5C  0A07               	xorlw	7	; case 4
 10098  003A5E  B4D8               	btfsc	status,2,c
 10099  003A60  EF0B  F01D         	goto	l9076
 10100  003A64  0A01               	xorlw	1	; case 5
 10101  003A66  B4D8               	btfsc	status,2,c
 10102  003A68  EF11  F01D         	goto	l9080
 10103  003A6C  0A03               	xorlw	3	; case 6
 10104  003A6E  B4D8               	btfsc	status,2,c
 10105  003A70  EF11  F01D         	goto	l9080
 10106  003A74  EF3C  F01D         	goto	l9088
 10107  003A78                     l9088:
 10108                           
 10109                           ;main.c: 333:     if (speed > (400)) {
 10110  003A78  0100               	movlb	0	; () banked
 10111  003A7A  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10112  003A7C  EF49  F01D         	goto	u10171
 10113  003A80  0E91               	movlw	145
 10114  003A82  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10115  003A84  0E01               	movlw	1
 10116  003A86  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10117  003A88  A0D8               	btfss	status,0,c
 10118  003A8A  EF49  F01D         	goto	u10171
 10119  003A8E  EF4B  F01D         	goto	u10170
 10120  003A92                     u10171:
 10121  003A92  EF4F  F01D         	goto	l9092
 10122  003A96                     u10170:
 10123  003A96                     
 10124                           ; BSR set to: 0
 10125                           ;main.c: 334:         speed = (400);
 10126  003A96  0E01               	movlw	1
 10127  003A98  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10128  003A9A  0E90               	movlw	144
 10129  003A9C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10130  003A9E                     l9092:
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;main.c: 336:     if (speed < (-250)) {
 10134  003A9E  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10135  003AA0  EF5B  F01D         	goto	u10181
 10136  003AA4  0E06               	movlw	6
 10137  003AA6  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10138  003AA8  0EFF               	movlw	255
 10139  003AAA  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10140  003AAC  B0D8               	btfsc	status,0,c
 10141  003AAE  EF5B  F01D         	goto	u10181
 10142  003AB2  EF5D  F01D         	goto	u10180
 10143  003AB6                     u10181:
 10144  003AB6  EF61  F01D         	goto	l9096
 10145  003ABA                     u10180:
 10146  003ABA                     
 10147                           ; BSR set to: 0
 10148                           ;main.c: 337:         speed = (-250);
 10149  003ABA  0EFF               	movlw	255
 10150  003ABC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10151  003ABE  0E06               	movlw	6
 10152  003AC0  6F87               	movwf	calcSpeed@speed& (0+255),b
 10153  003AC2                     l9096:
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;main.c: 339:     setSpeed = speed;
 10157  003AC2  C087  F0EB         	movff	calcSpeed@speed,_setSpeed
 10158  003AC6  C088  F0EC         	movff	calcSpeed@speed+1,_setSpeed+1
 10159  003ACA                     
 10160                           ; BSR set to: 0
 10161  003ACA  0012               	return		;funcret
 10162  003ACC                     __end_of_calcSpeed:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function ___fladd *****************
 10166 ;; Defined at:
 10167 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  b               4   13[BANK0 ] void 
 10170 ;;  a               4   17[BANK0 ] void 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  grs             1   24[BANK0 ] unsigned char 
 10173 ;;  bexp            1   23[BANK0 ] unsigned char 
 10174 ;;  aexp            1   22[BANK0 ] unsigned char 
 10175 ;;  signs           1   21[BANK0 ] unsigned char 
 10176 ;; Return value:  Size  Location     Type
 10177 ;;                  4   13[BANK0 ] unsigned char 
 10178 ;; Registers used:
 10179 ;;		wreg, status,2, status,0
 10180 ;; Tracked objects:
 10181 ;;		On entry : 0/0
 10182 ;;		On exit  : 0/0
 10183 ;;		Unchanged: 0/0
 10184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10185 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10186 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10187 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;Total ram usage:       16 bytes
 10190 ;; Hardware stack levels used: 1
 10191 ;; Hardware stack levels required when called: 8
 10192 ;; This function calls:
 10193 ;;		Nothing
 10194 ;; This function is called by:
 10195 ;;		_calcSpeed
 10196 ;;		___flsub
 10197 ;;		_efgtoa
 10198 ;; This function uses a non-reentrant model
 10199 ;;
 10200                           
 10201                           	psect	text39
 10202  002242                     __ptext39:
 10203                           	callstack 0
 10204  002242                     ___fladd:
 10205                           	callstack 15
 10206  002242  0100               	movlb	0	; () banked
 10207  002244  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10208  002246  0B80               	andlw	128
 10209  002248  6F75               	movwf	___fladd@signs& (0+255),b
 10210  00224A  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10211  00224C  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10212  00224E  6F77               	movwf	___fladd@bexp& (0+255),b
 10213  002250                     
 10214                           ; BSR set to: 0
 10215  002250  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10216  002252  EF2D  F011         	goto	u7251
 10217  002256  EF2F  F011         	goto	u7250
 10218  00225A                     u7251:
 10219  00225A  EF30  F011         	goto	l7426
 10220  00225E                     u7250:
 10221  00225E                     
 10222                           ; BSR set to: 0
 10223  00225E  8177               	bsf	___fladd@bexp& (0+255),0,b
 10224  002260                     l7426:
 10225                           
 10226                           ; BSR set to: 0
 10227  002260  5177               	movf	___fladd@bexp& (0+255),w,b
 10228  002262  B4D8               	btfsc	status,2,c
 10229  002264  EF36  F011         	goto	u7261
 10230  002268  EF38  F011         	goto	u7260
 10231  00226C                     u7261:
 10232  00226C  EF4D  F011         	goto	l7436
 10233  002270                     u7260:
 10234  002270                     
 10235                           ; BSR set to: 0
 10236  002270  2977               	incf	___fladd@bexp& (0+255),w,b
 10237  002272  A4D8               	btfss	status,2,c
 10238  002274  EF3E  F011         	goto	u7271
 10239  002278  EF40  F011         	goto	u7270
 10240  00227C                     u7271:
 10241  00227C  EF48  F011         	goto	l7432
 10242  002280                     u7270:
 10243  002280                     
 10244                           ; BSR set to: 0
 10245  002280  0E00               	movlw	0
 10246  002282  6F6D               	movwf	___fladd@b& (0+255),b
 10247  002284  0E00               	movlw	0
 10248  002286  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10249  002288  0E00               	movlw	0
 10250  00228A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10251  00228C  0E00               	movlw	0
 10252  00228E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10253  002290                     l7432:
 10254                           
 10255                           ; BSR set to: 0
 10256  002290  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10257  002292                     
 10258                           ; BSR set to: 0
 10259  002292  0E00               	movlw	0
 10260  002294  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10261  002296  EF55  F011         	goto	l7438
 10262  00229A                     l7436:
 10263                           
 10264                           ; BSR set to: 0
 10265  00229A  0E00               	movlw	0
 10266  00229C  6F6D               	movwf	___fladd@b& (0+255),b
 10267  00229E  0E00               	movlw	0
 10268  0022A0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10269  0022A2  0E00               	movlw	0
 10270  0022A4  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10271  0022A6  0E00               	movlw	0
 10272  0022A8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10273  0022AA                     l7438:
 10274                           
 10275                           ; BSR set to: 0
 10276  0022AA  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10277  0022AC  0B80               	andlw	128
 10278  0022AE  6F76               	movwf	___fladd@aexp& (0+255),b
 10279  0022B0                     
 10280                           ; BSR set to: 0
 10281  0022B0  5175               	movf	___fladd@signs& (0+255),w,b
 10282  0022B2  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10283  0022B4  B4D8               	btfsc	status,2,c
 10284  0022B6  EF5F  F011         	goto	u7281
 10285  0022BA  EF61  F011         	goto	u7280
 10286  0022BE                     u7281:
 10287  0022BE  EF62  F011         	goto	l7444
 10288  0022C2                     u7280:
 10289  0022C2                     
 10290                           ; BSR set to: 0
 10291  0022C2  8D75               	bsf	___fladd@signs& (0+255),6,b
 10292  0022C4                     l7444:
 10293                           
 10294                           ; BSR set to: 0
 10295  0022C4  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10296  0022C6  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10297  0022C8  6F76               	movwf	___fladd@aexp& (0+255),b
 10298  0022CA                     
 10299                           ; BSR set to: 0
 10300  0022CA  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10301  0022CC  EF6A  F011         	goto	u7291
 10302  0022D0  EF6C  F011         	goto	u7290
 10303  0022D4                     u7291:
 10304  0022D4  EF6D  F011         	goto	l7450
 10305  0022D8                     u7290:
 10306  0022D8                     
 10307                           ; BSR set to: 0
 10308  0022D8  8176               	bsf	___fladd@aexp& (0+255),0,b
 10309  0022DA                     l7450:
 10310                           
 10311                           ; BSR set to: 0
 10312  0022DA  5176               	movf	___fladd@aexp& (0+255),w,b
 10313  0022DC  B4D8               	btfsc	status,2,c
 10314  0022DE  EF73  F011         	goto	u7301
 10315  0022E2  EF75  F011         	goto	u7300
 10316  0022E6                     u7301:
 10317  0022E6  EF8A  F011         	goto	l7460
 10318  0022EA                     u7300:
 10319  0022EA                     
 10320                           ; BSR set to: 0
 10321  0022EA  2976               	incf	___fladd@aexp& (0+255),w,b
 10322  0022EC  A4D8               	btfss	status,2,c
 10323  0022EE  EF7B  F011         	goto	u7311
 10324  0022F2  EF7D  F011         	goto	u7310
 10325  0022F6                     u7311:
 10326  0022F6  EF85  F011         	goto	l7456
 10327  0022FA                     u7310:
 10328  0022FA                     
 10329                           ; BSR set to: 0
 10330  0022FA  0E00               	movlw	0
 10331  0022FC  6F71               	movwf	___fladd@a& (0+255),b
 10332  0022FE  0E00               	movlw	0
 10333  002300  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10334  002302  0E00               	movlw	0
 10335  002304  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10336  002306  0E00               	movlw	0
 10337  002308  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10338  00230A                     l7456:
 10339                           
 10340                           ; BSR set to: 0
 10341  00230A  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10342  00230C                     
 10343                           ; BSR set to: 0
 10344  00230C  0E00               	movlw	0
 10345  00230E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10346  002310  EF92  F011         	goto	l7462
 10347  002314                     l7460:
 10348                           
 10349                           ; BSR set to: 0
 10350  002314  0E00               	movlw	0
 10351  002316  6F71               	movwf	___fladd@a& (0+255),b
 10352  002318  0E00               	movlw	0
 10353  00231A  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10354  00231C  0E00               	movlw	0
 10355  00231E  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10356  002320  0E00               	movlw	0
 10357  002322  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10358  002324                     l7462:
 10359                           
 10360                           ; BSR set to: 0
 10361  002324  5177               	movf	___fladd@bexp& (0+255),w,b
 10362  002326  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10363  002328  B0D8               	btfsc	status,0,c
 10364  00232A  EF99  F011         	goto	u7321
 10365  00232E  EF9B  F011         	goto	u7320
 10366  002332                     u7321:
 10367  002332  EFC2  F011         	goto	l7498
 10368  002336                     u7320:
 10369  002336                     
 10370                           ; BSR set to: 0
 10371  002336  AD75               	btfss	___fladd@signs& (0+255),6,b
 10372  002338  EFA0  F011         	goto	u7331
 10373  00233C  EFA2  F011         	goto	u7330
 10374  002340                     u7331:
 10375  002340  EFA4  F011         	goto	l7468
 10376  002344                     u7330:
 10377  002344                     
 10378                           ; BSR set to: 0
 10379  002344  0E80               	movlw	128
 10380  002346  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10381  002348                     l7468:
 10382                           
 10383                           ; BSR set to: 0
 10384  002348  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10385  00234C                     
 10386                           ; BSR set to: 0
 10387  00234C  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10388  002350                     
 10389                           ; BSR set to: 0
 10390  002350  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10391  002354                     
 10392                           ; BSR set to: 0
 10393  002354  C06D  F078         	movff	___fladd@b,___fladd@grs
 10394  002358                     
 10395                           ; BSR set to: 0
 10396  002358  C071  F06D         	movff	___fladd@a,___fladd@b
 10397  00235C                     
 10398                           ; BSR set to: 0
 10399  00235C  C078  F071         	movff	___fladd@grs,___fladd@a
 10400  002360                     
 10401                           ; BSR set to: 0
 10402  002360  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10403  002364                     
 10404                           ; BSR set to: 0
 10405  002364  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10406  002368                     
 10407                           ; BSR set to: 0
 10408  002368  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10409  00236C                     
 10410                           ; BSR set to: 0
 10411  00236C  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10412  002370                     
 10413                           ; BSR set to: 0
 10414  002370  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10415  002374                     
 10416                           ; BSR set to: 0
 10417  002374  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10418  002378                     
 10419                           ; BSR set to: 0
 10420  002378  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10421  00237C                     
 10422                           ; BSR set to: 0
 10423  00237C  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10424  002380                     
 10425                           ; BSR set to: 0
 10426  002380  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10427  002384                     l7498:
 10428                           
 10429                           ; BSR set to: 0
 10430  002384  0E00               	movlw	0
 10431  002386  6F78               	movwf	___fladd@grs& (0+255),b
 10432  002388                     
 10433                           ; BSR set to: 0
 10434  002388  5177               	movf	___fladd@bexp& (0+255),w,b
 10435  00238A  C076  F036         	movff	___fladd@aexp,??___fladd
 10436  00238E  6A37               	clrf	(??___fladd+1)^0,c
 10437  002390  5E36               	subwf	??___fladd^0,f,c
 10438  002392  0E00               	movlw	0
 10439  002394  5A37               	subwfb	(??___fladd+1)^0,f,c
 10440  002396  BE37               	btfsc	(??___fladd+1)^0,7,c
 10441  002398  EFD7  F011         	goto	u7341
 10442  00239C  5037               	movf	(??___fladd+1)^0,w,c
 10443  00239E  E109               	bnz	u7340
 10444  0023A0  0E1A               	movlw	26
 10445  0023A2  5C36               	subwf	??___fladd^0,w,c
 10446  0023A4  A0D8               	btfss	status,0,c
 10447  0023A6  EFD7  F011         	goto	u7341
 10448  0023AA  EFD9  F011         	goto	u7340
 10449  0023AE                     u7341:
 10450  0023AE  EF10  F012         	goto	l1927
 10451  0023B2                     u7340:
 10452  0023B2                     
 10453                           ; BSR set to: 0
 10454  0023B2  516D               	movf	___fladd@b& (0+255),w,b
 10455  0023B4  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10456  0023B6  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10457  0023B8  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10458  0023BA  A4D8               	btfss	status,2,c
 10459  0023BC  EFE2  F011         	goto	u7351
 10460  0023C0  EFE5  F011         	goto	u7350
 10461  0023C4                     u7351:
 10462  0023C4  0E01               	movlw	1
 10463  0023C6  EFE6  F011         	goto	u7360
 10464  0023CA                     u7350:
 10465  0023CA  0E00               	movlw	0
 10466  0023CC                     u7360:
 10467  0023CC  6F78               	movwf	___fladd@grs& (0+255),b
 10468  0023CE                     
 10469                           ; BSR set to: 0
 10470  0023CE  0E00               	movlw	0
 10471  0023D0  6F6D               	movwf	___fladd@b& (0+255),b
 10472  0023D2  0E00               	movlw	0
 10473  0023D4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10474  0023D6  0E00               	movlw	0
 10475  0023D8  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10476  0023DA  0E00               	movlw	0
 10477  0023DC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10478  0023DE                     
 10479                           ; BSR set to: 0
 10480  0023DE  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10481  0023E2  EF19  F012         	goto	l1926
 10482  0023E6                     l1928:
 10483                           
 10484                           ; BSR set to: 0
 10485  0023E6  A178               	btfss	___fladd@grs& (0+255),0,b
 10486  0023E8  EFF8  F011         	goto	u7371
 10487  0023EC  EFFA  F011         	goto	u7370
 10488  0023F0                     u7371:
 10489  0023F0  EF00  F012         	goto	l7510
 10490  0023F4                     u7370:
 10491  0023F4                     
 10492                           ; BSR set to: 0
 10493  0023F4  90D8               	bcf	status,0,c
 10494  0023F6  3178               	rrcf	___fladd@grs& (0+255),w,b
 10495  0023F8  0901               	iorlw	1
 10496  0023FA  6F78               	movwf	___fladd@grs& (0+255),b
 10497  0023FC  EF02  F012         	goto	l7512
 10498  002400                     l7510:
 10499                           
 10500                           ; BSR set to: 0
 10501  002400  90D8               	bcf	status,0,c
 10502  002402  3378               	rrcf	___fladd@grs& (0+255),f,b
 10503  002404                     l7512:
 10504                           
 10505                           ; BSR set to: 0
 10506  002404  A16D               	btfss	___fladd@b& (0+255),0,b
 10507  002406  EF07  F012         	goto	u7381
 10508  00240A  EF09  F012         	goto	u7380
 10509  00240E                     u7381:
 10510  00240E  EF0A  F012         	goto	l7516
 10511  002412                     u7380:
 10512  002412                     
 10513                           ; BSR set to: 0
 10514  002412  8F78               	bsf	___fladd@grs& (0+255),7,b
 10515  002414                     l7516:
 10516                           
 10517                           ; BSR set to: 0
 10518  002414  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10519  002416  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10520  002418  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10521  00241A  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10522  00241C  336D               	rrcf	___fladd@b& (0+255),f,b
 10523  00241E                     
 10524                           ; BSR set to: 0
 10525  00241E  2B77               	incf	___fladd@bexp& (0+255),f,b
 10526  002420                     l1927:
 10527                           
 10528                           ; BSR set to: 0
 10529  002420  5176               	movf	___fladd@aexp& (0+255),w,b
 10530  002422  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10531  002424  A0D8               	btfss	status,0,c
 10532  002426  EF17  F012         	goto	u7391
 10533  00242A  EF19  F012         	goto	u7390
 10534  00242E                     u7391:
 10535  00242E  EFF3  F011         	goto	l1928
 10536  002432                     u7390:
 10537  002432                     l1926:
 10538                           
 10539                           ; BSR set to: 0
 10540  002432  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10541  002434  EF1E  F012         	goto	u7401
 10542  002438  EF20  F012         	goto	u7400
 10543  00243C                     u7401:
 10544  00243C  EF60  F012         	goto	l7544
 10545  002440                     u7400:
 10546  002440                     
 10547                           ; BSR set to: 0
 10548  002440  5177               	movf	___fladd@bexp& (0+255),w,b
 10549  002442  A4D8               	btfss	status,2,c
 10550  002444  EF26  F012         	goto	u7411
 10551  002448  EF28  F012         	goto	u7410
 10552  00244C                     u7411:
 10553  00244C  EF32  F012         	goto	l7526
 10554  002450                     u7410:
 10555  002450                     
 10556                           ; BSR set to: 0
 10557  002450  0E00               	movlw	0
 10558  002452  6F6D               	movwf	?___fladd& (0+255),b
 10559  002454  0E00               	movlw	0
 10560  002456  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10561  002458  0E00               	movlw	0
 10562  00245A  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10563  00245C  0E00               	movlw	0
 10564  00245E  6F70               	movwf	(?___fladd+3)& (0+255),b
 10565  002460  EF81  F013         	goto	l1935
 10566  002464                     l7526:
 10567                           
 10568                           ; BSR set to: 0
 10569  002464  5171               	movf	___fladd@a& (0+255),w,b
 10570  002466  276D               	addwf	___fladd@b& (0+255),f,b
 10571  002468  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10572  00246A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10573  00246C  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10574  00246E  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10575  002470  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10576  002472  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10577  002474                     
 10578                           ; BSR set to: 0
 10579  002474  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10580  002476  EF3F  F012         	goto	u7421
 10581  00247A  EF41  F012         	goto	u7420
 10582  00247E                     u7421:
 10583  00247E  EFED  F012         	goto	l7580
 10584  002482                     u7420:
 10585  002482                     
 10586                           ; BSR set to: 0
 10587  002482  A178               	btfss	___fladd@grs& (0+255),0,b
 10588  002484  EF46  F012         	goto	u7431
 10589  002488  EF48  F012         	goto	u7430
 10590  00248C                     u7431:
 10591  00248C  EF4E  F012         	goto	l7534
 10592  002490                     u7430:
 10593  002490                     
 10594                           ; BSR set to: 0
 10595  002490  90D8               	bcf	status,0,c
 10596  002492  3178               	rrcf	___fladd@grs& (0+255),w,b
 10597  002494  0901               	iorlw	1
 10598  002496  6F78               	movwf	___fladd@grs& (0+255),b
 10599  002498  EF50  F012         	goto	l7536
 10600  00249C                     l7534:
 10601                           
 10602                           ; BSR set to: 0
 10603  00249C  90D8               	bcf	status,0,c
 10604  00249E  3378               	rrcf	___fladd@grs& (0+255),f,b
 10605  0024A0                     l7536:
 10606                           
 10607                           ; BSR set to: 0
 10608  0024A0  A16D               	btfss	___fladd@b& (0+255),0,b
 10609  0024A2  EF55  F012         	goto	u7441
 10610  0024A6  EF57  F012         	goto	u7440
 10611  0024AA                     u7441:
 10612  0024AA  EF58  F012         	goto	l7540
 10613  0024AE                     u7440:
 10614  0024AE                     
 10615                           ; BSR set to: 0
 10616  0024AE  8F78               	bsf	___fladd@grs& (0+255),7,b
 10617  0024B0                     l7540:
 10618                           
 10619                           ; BSR set to: 0
 10620  0024B0  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10621  0024B2  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10622  0024B4  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10623  0024B6  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10624  0024B8  336D               	rrcf	___fladd@b& (0+255),f,b
 10625  0024BA                     
 10626                           ; BSR set to: 0
 10627  0024BA  2B77               	incf	___fladd@bexp& (0+255),f,b
 10628  0024BC  EFED  F012         	goto	l7580
 10629  0024C0                     l7544:
 10630                           
 10631                           ; BSR set to: 0
 10632  0024C0  5171               	movf	___fladd@a& (0+255),w,b
 10633  0024C2  5D6D               	subwf	___fladd@b& (0+255),w,b
 10634  0024C4  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10635  0024C6  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10636  0024C8  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10637  0024CA  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10638  0024CC  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10639  0024CE  0A80               	xorlw	128
 10640  0024D0  6E36               	movwf	??___fladd^0,c
 10641  0024D2  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10642  0024D4  0A80               	xorlw	128
 10643  0024D6  5836               	subwfb	??___fladd^0,w,c
 10644  0024D8  B0D8               	btfsc	status,0,c
 10645  0024DA  EF71  F012         	goto	u7451
 10646  0024DE  EF73  F012         	goto	u7450
 10647  0024E2                     u7451:
 10648  0024E2  EF9E  F012         	goto	l7554
 10649  0024E6                     u7450:
 10650  0024E6                     
 10651                           ; BSR set to: 0
 10652  0024E6  516D               	movf	___fladd@b& (0+255),w,b
 10653  0024E8  5D71               	subwf	___fladd@a& (0+255),w,b
 10654  0024EA  6E36               	movwf	??___fladd^0,c
 10655  0024EC  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10656  0024EE  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10657  0024F0  6E37               	movwf	(??___fladd+1)^0,c
 10658  0024F2  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10659  0024F4  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10660  0024F6  6E38               	movwf	(??___fladd+2)^0,c
 10661  0024F8  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10662  0024FA  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10663  0024FC  6E39               	movwf	(??___fladd+3)^0,c
 10664  0024FE  0EFF               	movlw	255
 10665  002500  2436               	addwf	??___fladd^0,w,c
 10666  002502  6F6D               	movwf	___fladd@b& (0+255),b
 10667  002504  0EFF               	movlw	255
 10668  002506  2037               	addwfc	(??___fladd+1)^0,w,c
 10669  002508  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10670  00250A  0EFF               	movlw	255
 10671  00250C  2038               	addwfc	(??___fladd+2)^0,w,c
 10672  00250E  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10673  002510  0EFF               	movlw	255
 10674  002512  2039               	addwfc	(??___fladd+3)^0,w,c
 10675  002514  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10676  002516  0E80               	movlw	128
 10677  002518  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10678  00251A                     
 10679                           ; BSR set to: 0
 10680  00251A  6D78               	negf	___fladd@grs& (0+255),b
 10681  00251C                     
 10682                           ; BSR set to: 0
 10683  00251C  5178               	movf	___fladd@grs& (0+255),w,b
 10684  00251E  A4D8               	btfss	status,2,c
 10685  002520  EF94  F012         	goto	u7461
 10686  002524  EF96  F012         	goto	u7460
 10687  002528                     u7461:
 10688  002528  EFA6  F012         	goto	l1943
 10689  00252C                     u7460:
 10690  00252C                     
 10691                           ; BSR set to: 0
 10692  00252C  0E01               	movlw	1
 10693  00252E  276D               	addwf	___fladd@b& (0+255),f,b
 10694  002530  0E00               	movlw	0
 10695  002532  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10696  002534  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10697  002536  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10698  002538  EFA6  F012         	goto	l1943
 10699  00253C                     l7554:
 10700                           
 10701                           ; BSR set to: 0
 10702  00253C  5171               	movf	___fladd@a& (0+255),w,b
 10703  00253E  5F6D               	subwf	___fladd@b& (0+255),f,b
 10704  002540  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10705  002542  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10706  002544  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10707  002546  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10708  002548  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10709  00254A  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10710  00254C                     l1943:
 10711                           
 10712                           ; BSR set to: 0
 10713  00254C  516D               	movf	___fladd@b& (0+255),w,b
 10714  00254E  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10715  002550  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10716  002552  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10717  002554  A4D8               	btfss	status,2,c
 10718  002556  EFAF  F012         	goto	u7471
 10719  00255A  EFB1  F012         	goto	u7470
 10720  00255E                     u7471:
 10721  00255E  EFE6  F012         	goto	l7578
 10722  002562                     u7470:
 10723  002562                     
 10724                           ; BSR set to: 0
 10725  002562  5178               	movf	___fladd@grs& (0+255),w,b
 10726  002564  A4D8               	btfss	status,2,c
 10727  002566  EFB7  F012         	goto	u7481
 10728  00256A  EFB9  F012         	goto	u7480
 10729  00256E                     u7481:
 10730  00256E  EFE6  F012         	goto	l7578
 10731  002572                     u7480:
 10732  002572                     
 10733                           ; BSR set to: 0
 10734  002572  0E00               	movlw	0
 10735  002574  6F6D               	movwf	?___fladd& (0+255),b
 10736  002576  0E00               	movlw	0
 10737  002578  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10738  00257A  0E00               	movlw	0
 10739  00257C  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10740  00257E  0E00               	movlw	0
 10741  002580  6F70               	movwf	(?___fladd+3)& (0+255),b
 10742  002582  EF81  F013         	goto	l1935
 10743  002586                     l7562:
 10744                           
 10745                           ; BSR set to: 0
 10746  002586  90D8               	bcf	status,0,c
 10747  002588  376D               	rlcf	___fladd@b& (0+255),f,b
 10748  00258A  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10749  00258C  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10750  00258E  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10751  002590                     
 10752                           ; BSR set to: 0
 10753  002590  AF78               	btfss	___fladd@grs& (0+255),7,b
 10754  002592  EFCD  F012         	goto	u7491
 10755  002596  EFCF  F012         	goto	u7490
 10756  00259A                     u7491:
 10757  00259A  EFD0  F012         	goto	l7568
 10758  00259E                     u7490:
 10759  00259E                     
 10760                           ; BSR set to: 0
 10761  00259E  816D               	bsf	___fladd@b& (0+255),0,b
 10762  0025A0                     l7568:
 10763                           
 10764                           ; BSR set to: 0
 10765  0025A0  A178               	btfss	___fladd@grs& (0+255),0,b
 10766  0025A2  EFD5  F012         	goto	u7501
 10767  0025A6  EFD7  F012         	goto	u7500
 10768  0025AA                     u7501:
 10769  0025AA  EFDB  F012         	goto	l7572
 10770  0025AE                     u7500:
 10771  0025AE                     
 10772                           ; BSR set to: 0
 10773  0025AE  80D8               	bsf	status,0,c
 10774  0025B0  3778               	rlcf	___fladd@grs& (0+255),f,b
 10775  0025B2  EFDD  F012         	goto	l7574
 10776  0025B6                     l7572:
 10777                           
 10778                           ; BSR set to: 0
 10779  0025B6  90D8               	bcf	status,0,c
 10780  0025B8  3778               	rlcf	___fladd@grs& (0+255),f,b
 10781  0025BA                     l7574:
 10782                           
 10783                           ; BSR set to: 0
 10784  0025BA  5177               	movf	___fladd@bexp& (0+255),w,b
 10785  0025BC  B4D8               	btfsc	status,2,c
 10786  0025BE  EFE3  F012         	goto	u7511
 10787  0025C2  EFE5  F012         	goto	u7510
 10788  0025C6                     u7511:
 10789  0025C6  EFE6  F012         	goto	l7578
 10790  0025CA                     u7510:
 10791  0025CA                     
 10792                           ; BSR set to: 0
 10793  0025CA  0777               	decf	___fladd@bexp& (0+255),f,b
 10794  0025CC                     l7578:
 10795                           
 10796                           ; BSR set to: 0
 10797  0025CC  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10798  0025CE  EFEB  F012         	goto	u7521
 10799  0025D2  EFED  F012         	goto	u7520
 10800  0025D6                     u7521:
 10801  0025D6  EFC3  F012         	goto	l7562
 10802  0025DA                     u7520:
 10803  0025DA                     l7580:
 10804                           
 10805                           ; BSR set to: 0
 10806  0025DA  0E00               	movlw	0
 10807  0025DC  6F76               	movwf	___fladd@aexp& (0+255),b
 10808  0025DE                     
 10809                           ; BSR set to: 0
 10810  0025DE  AF78               	btfss	___fladd@grs& (0+255),7,b
 10811  0025E0  EFF4  F012         	goto	u7531
 10812  0025E4  EFF6  F012         	goto	u7530
 10813  0025E8                     u7531:
 10814  0025E8  EF0E  F013         	goto	l1952
 10815  0025EC                     u7530:
 10816  0025EC                     
 10817                           ; BSR set to: 0
 10818  0025EC  C078  F036         	movff	___fladd@grs,??___fladd
 10819  0025F0  0E7F               	movlw	127
 10820  0025F2  1636               	andwf	??___fladd^0,f,c
 10821  0025F4  B4D8               	btfsc	status,2,c
 10822  0025F6  EFFF  F012         	goto	u7541
 10823  0025FA  EF01  F013         	goto	u7540
 10824  0025FE                     u7541:
 10825  0025FE  EF05  F013         	goto	l1953
 10826  002602                     u7540:
 10827  002602                     l7586:
 10828                           
 10829                           ; BSR set to: 0
 10830  002602  0E01               	movlw	1
 10831  002604  6F76               	movwf	___fladd@aexp& (0+255),b
 10832  002606  EF0E  F013         	goto	l1952
 10833  00260A                     l1953:
 10834                           
 10835                           ; BSR set to: 0
 10836  00260A  A16D               	btfss	___fladd@b& (0+255),0,b
 10837  00260C  EF0A  F013         	goto	u7551
 10838  002610  EF0C  F013         	goto	u7550
 10839  002614                     u7551:
 10840  002614  EF0E  F013         	goto	l1952
 10841  002618                     u7550:
 10842  002618  EF01  F013         	goto	l7586
 10843  00261C                     l1952:
 10844                           
 10845                           ; BSR set to: 0
 10846  00261C  5176               	movf	___fladd@aexp& (0+255),w,b
 10847  00261E  B4D8               	btfsc	status,2,c
 10848  002620  EF14  F013         	goto	u7561
 10849  002624  EF16  F013         	goto	u7560
 10850  002628                     u7561:
 10851  002628  EF41  F013         	goto	l7598
 10852  00262C                     u7560:
 10853  00262C                     
 10854                           ; BSR set to: 0
 10855  00262C  0E01               	movlw	1
 10856  00262E  276D               	addwf	___fladd@b& (0+255),f,b
 10857  002630  0E00               	movlw	0
 10858  002632  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10859  002634  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10860  002636  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10861  002638                     
 10862                           ; BSR set to: 0
 10863  002638  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10864  00263A  EF21  F013         	goto	u7571
 10865  00263E  EF23  F013         	goto	u7570
 10866  002642                     u7571:
 10867  002642  EF41  F013         	goto	l7598
 10868  002646                     u7570:
 10869  002646                     
 10870                           ; BSR set to: 0
 10871  002646  C06D  F036         	movff	___fladd@b,??___fladd
 10872  00264A  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10873  00264E  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10874  002652  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10875  002656  3439               	rlcf	(??___fladd+3)^0,w,c
 10876  002658  3239               	rrcf	(??___fladd+3)^0,f,c
 10877  00265A  3238               	rrcf	(??___fladd+2)^0,f,c
 10878  00265C  3237               	rrcf	(??___fladd+1)^0,f,c
 10879  00265E  3236               	rrcf	??___fladd^0,f,c
 10880  002660  C036  F06D         	movff	??___fladd,___fladd@b
 10881  002664  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10882  002668  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10883  00266C  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10884  002670  2977               	incf	___fladd@bexp& (0+255),w,b
 10885  002672  B4D8               	btfsc	status,2,c
 10886  002674  EF3E  F013         	goto	u7581
 10887  002678  EF40  F013         	goto	u7580
 10888  00267C                     u7581:
 10889  00267C  EF41  F013         	goto	l7598
 10890  002680                     u7580:
 10891  002680                     
 10892                           ; BSR set to: 0
 10893  002680  2B77               	incf	___fladd@bexp& (0+255),f,b
 10894  002682                     l7598:
 10895                           
 10896                           ; BSR set to: 0
 10897  002682  2977               	incf	___fladd@bexp& (0+255),w,b
 10898  002684  B4D8               	btfsc	status,2,c
 10899  002686  EF47  F013         	goto	u7591
 10900  00268A  EF49  F013         	goto	u7590
 10901  00268E                     u7591:
 10902  00268E  EF51  F013         	goto	l7602
 10903  002692                     u7590:
 10904  002692                     
 10905                           ; BSR set to: 0
 10906  002692  5177               	movf	___fladd@bexp& (0+255),w,b
 10907  002694  A4D8               	btfss	status,2,c
 10908  002696  EF4F  F013         	goto	u7601
 10909  00269A  EF51  F013         	goto	u7600
 10910  00269E                     u7601:
 10911  00269E  EF63  F013         	goto	l7606
 10912  0026A2                     u7600:
 10913  0026A2                     l7602:
 10914                           
 10915                           ; BSR set to: 0
 10916  0026A2  0E00               	movlw	0
 10917  0026A4  6F6D               	movwf	___fladd@b& (0+255),b
 10918  0026A6  0E00               	movlw	0
 10919  0026A8  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10920  0026AA  0E00               	movlw	0
 10921  0026AC  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10922  0026AE  0E00               	movlw	0
 10923  0026B0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10924  0026B2  5177               	movf	___fladd@bexp& (0+255),w,b
 10925  0026B4  A4D8               	btfss	status,2,c
 10926  0026B6  EF5F  F013         	goto	u7611
 10927  0026BA  EF61  F013         	goto	u7610
 10928  0026BE                     u7611:
 10929  0026BE  EF63  F013         	goto	l7606
 10930  0026C2                     u7610:
 10931  0026C2                     
 10932                           ; BSR set to: 0
 10933  0026C2  0E00               	movlw	0
 10934  0026C4  6F75               	movwf	___fladd@signs& (0+255),b
 10935  0026C6                     l7606:
 10936                           
 10937                           ; BSR set to: 0
 10938  0026C6  A177               	btfss	___fladd@bexp& (0+255),0,b
 10939  0026C8  EF68  F013         	goto	u7621
 10940  0026CC  EF6A  F013         	goto	u7620
 10941  0026D0                     u7621:
 10942  0026D0  EF6D  F013         	goto	l7610
 10943  0026D4                     u7620:
 10944  0026D4                     
 10945                           ; BSR set to: 0
 10946  0026D4  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10947  0026D6  EF6E  F013         	goto	l7612
 10948  0026DA                     l7610:
 10949                           
 10950                           ; BSR set to: 0
 10951  0026DA  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10952  0026DC                     l7612:
 10953                           
 10954                           ; BSR set to: 0
 10955  0026DC  90D8               	bcf	status,0,c
 10956  0026DE  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10957  0026E0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10958  0026E2                     
 10959                           ; BSR set to: 0
 10960  0026E2  AF75               	btfss	___fladd@signs& (0+255),7,b
 10961  0026E4  EF76  F013         	goto	u7631
 10962  0026E8  EF78  F013         	goto	u7630
 10963  0026EC                     u7631:
 10964  0026EC  EF79  F013         	goto	l7618
 10965  0026F0                     u7630:
 10966  0026F0                     
 10967                           ; BSR set to: 0
 10968  0026F0  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10969  0026F2                     l7618:
 10970                           
 10971                           ; BSR set to: 0
 10972  0026F2  C06D  F06D         	movff	___fladd@b,?___fladd
 10973  0026F6  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10974  0026FA  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10975  0026FE  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10976  002702                     l1935:
 10977                           
 10978                           ; BSR set to: 0
 10979  002702  0012               	return		;funcret
 10980  002704                     __end_of___fladd:
 10981                           	callstack 0
 10982                           
 10983 ;; *************** function _calcMotorPow *****************
 10984 ;; Defined at:
 10985 ;;		line 342 in file "main.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;		None
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10990 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10991 ;;  addMPow         1   41[BANK0 ] char 
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;Total ram usage:        7 bytes
 11006 ;; Hardware stack levels used: 1
 11007 ;; Hardware stack levels required when called: 10
 11008 ;; This function calls:
 11009 ;;		___awdiv
 11010 ;;		___flmul
 11011 ;;		___fltol
 11012 ;;		___xxtofl
 11013 ;;		_actSpeed
 11014 ;;		_setMotor
 11015 ;; This function is called by:
 11016 ;;		_loop
 11017 ;; This function uses a non-reentrant model
 11018 ;;
 11019                           
 11020                           	psect	text40
 11021  00428E                     __ptext40:
 11022                           	callstack 0
 11023  00428E                     _calcMotorPow:
 11024                           	callstack 19
 11025  00428E                     
 11026                           ;main.c: 343:     currentSpeed = actSpeed();
 11027  00428E  ECD4  F028         	call	_actSpeed	;wreg free
 11028  004292  C022  F0E9         	movff	?_actSpeed,_currentSpeed
 11029  004296  C023  F0EA         	movff	?_actSpeed+1,_currentSpeed+1
 11030  00429A                     
 11031                           ;main.c: 345:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11032  00429A  0100               	movlb	0	; () banked
 11033  00429C  51E9               	movf	_currentSpeed& (0+255),w,b
 11034  00429E  5DEB               	subwf	_setSpeed& (0+255),w,b
 11035  0042A0  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11036  0042A2  51EA               	movf	(_currentSpeed+1)& (0+255),w,b
 11037  0042A4  59EC               	subwfb	(_setSpeed+1)& (0+255),w,b
 11038  0042A6  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11039  0042A8                     
 11040                           ; BSR set to: 0
 11041                           ;main.c: 346:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11042  0042A8  0101               	movlb	1	; () banked
 11043  0042AA  512C               	movf	_oldSpeed& (0+255),w,b
 11044  0042AC  0100               	movlb	0	; () banked
 11045  0042AE  5DE9               	subwf	_currentSpeed& (0+255),w,b
 11046  0042B0  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11047  0042B2  0101               	movlb	1	; () banked
 11048  0042B4  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11049  0042B6  0100               	movlb	0	; () banked
 11050  0042B8  59EA               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11051  0042BA  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11052  0042BC                     
 11053                           ; BSR set to: 0
 11054                           ;main.c: 352:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11055  0042BC  0E0A               	movlw	10
 11056  0042BE  6E2E               	movwf	___flmul@a^0,c
 11057  0042C0  0ED7               	movlw	215
 11058  0042C2  6E2F               	movwf	(___flmul@a+1)^0,c
 11059  0042C4  0EA3               	movlw	163
 11060  0042C6  6E30               	movwf	(___flmul@a+2)^0,c
 11061  0042C8  0E3C               	movlw	60
 11062  0042CA  6E31               	movwf	(___flmul@a+3)^0,c
 11063  0042CC  0E00               	movlw	0
 11064  0042CE  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11065  0042D0  0E02               	movlw	2
 11066  0042D2  6E16               	movwf	___awdiv@divisor^0,c
 11067  0042D4  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11068  0042D8  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11069  0042DC  EC67  F026         	call	___awdiv	;wreg free
 11070  0042E0  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11071  0042E4  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11072  0042E8  5014               	movf	?___awdiv^0,w,c
 11073  0042EA  0100               	movlb	0	; () banked
 11074  0042EC  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11075  0042EE  5015               	movf	(?___awdiv+1)^0,w,c
 11076  0042F0  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11077  0042F2  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11078  0042F6  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11079  0042FA  0E00               	movlw	0
 11080  0042FC  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11081  0042FE  0EFF               	movlw	-1
 11082  004300  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11083  004302  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11084  004304  0E01               	movlw	1
 11085  004306  EC66  F01D         	call	___xxtofl
 11086  00430A  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11087  00430E  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11088  004312  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11089  004316  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11090  00431A  EC82  F013         	call	___flmul	;wreg free
 11091  00431E  C02A  F079         	movff	?___flmul,___fltol@f1
 11092  004322  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11093  004326  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11094  00432A  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11095  00432E  EC0E  F023         	call	___fltol	;wreg free
 11096  004332  0100               	movlb	0	; () banked
 11097  004334  5179               	movf	?___fltol& (0+255),w,b
 11098  004336  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11099  004338                     
 11100                           ; BSR set to: 0
 11101                           ;main.c: 354:     if (addMPow > (5)) {
 11102  004338  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11103  00433A  0A80               	xorlw	128
 11104  00433C  0F7A               	addlw	-134
 11105  00433E  A0D8               	btfss	status,0,c
 11106  004340  EFA4  F021         	goto	u10191
 11107  004344  EFA6  F021         	goto	u10190
 11108  004348                     u10191:
 11109  004348  EFAA  F021         	goto	l9116
 11110  00434C                     u10190:
 11111  00434C                     
 11112                           ; BSR set to: 0
 11113                           ;main.c: 355:         addMPow = (5);
 11114  00434C  0E05               	movlw	5
 11115  00434E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11116                           
 11117                           ;main.c: 356:     } else if (addMPow < -(5)) {
 11118  004350  EFB6  F021         	goto	l9120
 11119  004354                     l9116:
 11120                           
 11121                           ; BSR set to: 0
 11122  004354  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11123  004356  0A80               	xorlw	128
 11124  004358  0F85               	addlw	133
 11125  00435A  B0D8               	btfsc	status,0,c
 11126  00435C  EFB2  F021         	goto	u10201
 11127  004360  EFB4  F021         	goto	u10200
 11128  004364                     u10201:
 11129  004364  EFB6  F021         	goto	l9120
 11130  004368                     u10200:
 11131  004368                     
 11132                           ; BSR set to: 0
 11133                           ;main.c: 357:         addMPow = -(5);
 11134  004368  0EFB               	movlw	251
 11135  00436A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11136  00436C                     l9120:
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;main.c: 360:     actMotorPow += addMPow;
 11140  00436C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11141  00436E  27E7               	addwf	_actMotorPow& (0+255),f,b
 11142  004370  0E00               	movlw	0
 11143  004372  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11144  004374  0EFF               	movlw	255
 11145  004376  23E8               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11146  004378                     
 11147                           ; BSR set to: 0
 11148                           ;main.c: 362:     if (actMotorPow > (700)) {
 11149  004378  BFE8               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11150  00437A  EFC8  F021         	goto	u10211
 11151  00437E  0EBD               	movlw	189
 11152  004380  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11153  004382  0E02               	movlw	2
 11154  004384  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11155  004386  A0D8               	btfss	status,0,c
 11156  004388  EFC8  F021         	goto	u10211
 11157  00438C  EFCA  F021         	goto	u10210
 11158  004390                     u10211:
 11159  004390  EFD0  F021         	goto	l9126
 11160  004394                     u10210:
 11161  004394                     
 11162                           ; BSR set to: 0
 11163                           ;main.c: 363:         actMotorPow = (700);
 11164  004394  0E02               	movlw	2
 11165  004396  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11166  004398  0EBC               	movlw	188
 11167  00439A  6FE7               	movwf	_actMotorPow& (0+255),b
 11168                           
 11169                           ;main.c: 364:     } else if (actMotorPow < (-400)) {
 11170  00439C  EFE2  F021         	goto	l9130
 11171  0043A0                     l9126:
 11172                           
 11173                           ; BSR set to: 0
 11174  0043A0  AFE8               	btfss	(_actMotorPow+1)& (0+255),7,b
 11175  0043A2  EFDC  F021         	goto	u10221
 11176  0043A6  0E70               	movlw	112
 11177  0043A8  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11178  0043AA  0EFE               	movlw	254
 11179  0043AC  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11180  0043AE  B0D8               	btfsc	status,0,c
 11181  0043B0  EFDC  F021         	goto	u10221
 11182  0043B4  EFDE  F021         	goto	u10220
 11183  0043B8                     u10221:
 11184  0043B8  EFE2  F021         	goto	l9130
 11185  0043BC                     u10220:
 11186  0043BC                     
 11187                           ; BSR set to: 0
 11188                           ;main.c: 365:         actMotorPow = (-400);
 11189  0043BC  0EFE               	movlw	254
 11190  0043BE  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11191  0043C0  0E70               	movlw	112
 11192  0043C2  6FE7               	movwf	_actMotorPow& (0+255),b
 11193  0043C4                     l9130:
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;main.c: 368:     setMotor(actMotorPow);
 11197  0043C4  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
 11198  0043C8  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11199  0043CC  EC91  F025         	call	_setMotor	;wreg free
 11200  0043D0                     
 11201                           ;main.c: 370:     oldSpeed = currentSpeed;
 11202  0043D0  C0E9  F12C         	movff	_currentSpeed,_oldSpeed
 11203  0043D4  C0EA  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11204  0043D8  0012               	return		;funcret
 11205  0043DA                     __end_of_calcMotorPow:
 11206                           	callstack 0
 11207                           
 11208 ;; *************** function _setMotor *****************
 11209 ;; Defined at:
 11210 ;;		line 373 in file "main.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  motorPower      2   23[COMRAM] short 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;		None
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  1    wreg      void 
 11217 ;; Registers used:
 11218 ;;		wreg, status,2, status,0, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;Total ram usage:        4 bytes
 11229 ;; Hardware stack levels used: 1
 11230 ;; Hardware stack levels required when called: 9
 11231 ;; This function calls:
 11232 ;;		_PWM7_LoadDutyValue
 11233 ;;		_PWM8_LoadDutyValue
 11234 ;; This function is called by:
 11235 ;;		_loop
 11236 ;;		_startAccell
 11237 ;;		_calcMotorPow
 11238 ;; This function uses a non-reentrant model
 11239 ;;
 11240                           
 11241                           	psect	text41
 11242  004B22                     __ptext41:
 11243                           	callstack 0
 11244  004B22                     _setMotor:
 11245                           	callstack 19
 11246  004B22                     
 11247                           ;main.c: 374:     if (motorPower >= (40)) {
 11248  004B22  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11249  004B24  EF9D  F025         	goto	u9821
 11250  004B28  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11251  004B2A  E109               	bnz	u9820
 11252  004B2C  0E28               	movlw	40
 11253  004B2E  5C18               	subwf	setMotor@motorPower^0,w,c
 11254  004B30  A0D8               	btfss	status,0,c
 11255  004B32  EF9D  F025         	goto	u9821
 11256  004B36  EF9F  F025         	goto	u9820
 11257  004B3A                     u9821:
 11258  004B3A  EFBF  F025         	goto	l8840
 11259  004B3E                     u9820:
 11260  004B3E                     
 11261                           ;main.c: 375:         if (motorPower > (700)) {
 11262  004B3E  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11263  004B40  EFAB  F025         	goto	u9831
 11264  004B44  0EBD               	movlw	189
 11265  004B46  5C18               	subwf	setMotor@motorPower^0,w,c
 11266  004B48  0E02               	movlw	2
 11267  004B4A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11268  004B4C  A0D8               	btfss	status,0,c
 11269  004B4E  EFAB  F025         	goto	u9831
 11270  004B52  EFAD  F025         	goto	u9830
 11271  004B56                     u9831:
 11272  004B56  EFB1  F025         	goto	l8836
 11273  004B5A                     u9830:
 11274  004B5A                     
 11275                           ;main.c: 376:             motorPower = (700);
 11276  004B5A  0E02               	movlw	2
 11277  004B5C  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11278  004B5E  0EBC               	movlw	188
 11279  004B60  6E18               	movwf	setMotor@motorPower^0,c
 11280  004B62                     l8836:
 11281                           
 11282                           ;main.c: 378:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11283  004B62  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11284  004B66  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11285  004B6A  ECF2  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11286  004B6E                     
 11287                           ;main.c: 379:         PWM8_LoadDutyValue(0);
 11288  004B6E  0E00               	movlw	0
 11289  004B70  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11290  004B72  0E00               	movlw	0
 11291  004B74  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11292  004B76  ECD8  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11293                           
 11294                           ;main.c: 380:     } else if (motorPower <= -(40)) {
 11295  004B7A  EF01  F026         	goto	l1378
 11296  004B7E                     l8840:
 11297  004B7E  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11298  004B80  EFCB  F025         	goto	u9841
 11299  004B84  0ED9               	movlw	217
 11300  004B86  5C18               	subwf	setMotor@motorPower^0,w,c
 11301  004B88  0EFF               	movlw	255
 11302  004B8A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11303  004B8C  B0D8               	btfsc	status,0,c
 11304  004B8E  EFCB  F025         	goto	u9841
 11305  004B92  EFCD  F025         	goto	u9840
 11306  004B96                     u9841:
 11307  004B96  EFF5  F025         	goto	l8850
 11308  004B9A                     u9840:
 11309  004B9A                     
 11310                           ;main.c: 381:         if (motorPower < (-400)) {
 11311  004B9A  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11312  004B9C  EFD9  F025         	goto	u9851
 11313  004BA0  0E70               	movlw	112
 11314  004BA2  5C18               	subwf	setMotor@motorPower^0,w,c
 11315  004BA4  0EFE               	movlw	254
 11316  004BA6  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11317  004BA8  B0D8               	btfsc	status,0,c
 11318  004BAA  EFD9  F025         	goto	u9851
 11319  004BAE  EFDB  F025         	goto	u9850
 11320  004BB2                     u9851:
 11321  004BB2  EFDF  F025         	goto	l8846
 11322  004BB6                     u9850:
 11323  004BB6                     
 11324                           ;main.c: 382:             motorPower = (-400);
 11325  004BB6  0EFE               	movlw	254
 11326  004BB8  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11327  004BBA  0E70               	movlw	112
 11328  004BBC  6E18               	movwf	setMotor@motorPower^0,c
 11329  004BBE                     l8846:
 11330                           
 11331                           ;main.c: 384:         PWM7_LoadDutyValue(0);
 11332  004BBE  0E00               	movlw	0
 11333  004BC0  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11334  004BC2  0E00               	movlw	0
 11335  004BC4  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11336  004BC6  ECF2  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11337  004BCA                     
 11338                           ;main.c: 385:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11339  004BCA  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11340  004BCE  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11341  004BD2  1E1A               	comf	??_setMotor^0,f,c
 11342  004BD4  1E1B               	comf	(??_setMotor+1)^0,f,c
 11343  004BD6  4A1A               	infsnz	??_setMotor^0,f,c
 11344  004BD8  2A1B               	incf	(??_setMotor+1)^0,f,c
 11345  004BDA  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11346  004BDE  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11347  004BE2  ECD8  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11348                           
 11349                           ;main.c: 386:     } else {
 11350  004BE6  EF01  F026         	goto	l1378
 11351  004BEA                     l8850:
 11352                           
 11353                           ;main.c: 388:         PWM7_LoadDutyValue(0);
 11354  004BEA  0E00               	movlw	0
 11355  004BEC  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11356  004BEE  0E00               	movlw	0
 11357  004BF0  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11358  004BF2  ECF2  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11359                           
 11360                           ;main.c: 389:         PWM8_LoadDutyValue(0);
 11361  004BF6  0E00               	movlw	0
 11362  004BF8  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11363  004BFA  0E00               	movlw	0
 11364  004BFC  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11365  004BFE  ECD8  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11366  004C02                     l1378:
 11367  004C02  0012               	return		;funcret
 11368  004C04                     __end_of_setMotor:
 11369                           	callstack 0
 11370                           
 11371 ;; *************** function _PWM8_LoadDutyValue *****************
 11372 ;; Defined at:
 11373 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      void 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;Total ram usage:        4 bytes
 11392 ;; Hardware stack levels used: 1
 11393 ;; Hardware stack levels required when called: 8
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_setMotor
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text42
 11402  0059B0                     __ptext42:
 11403                           	callstack 0
 11404  0059B0                     _PWM8_LoadDutyValue:
 11405                           	callstack 19
 11406  0059B0                     
 11407                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11408  0059B0  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11409  0059B4  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11410  0059B8  90D8               	bcf	status,0,c
 11411  0059BA  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11412  0059BC  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11413  0059BE  90D8               	bcf	status,0,c
 11414  0059C0  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11415  0059C2  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11416  0059C4  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11417  0059C6  6E61               	movwf	97,c	;volatile
 11418                           
 11419                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11420  0059C8  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11421  0059CC  0E03               	movlw	3
 11422  0059CE  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11423  0059D0  0E06               	movlw	6
 11424  0059D2  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11425  0059D4                     u9665:
 11426  0059D4  90D8               	bcf	status,0,c
 11427  0059D6  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11428  0059D8  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11429  0059DA  EFEA  F02C         	goto	u9665
 11430  0059DE  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11431  0059E0  6E60               	movwf	96,c	;volatile
 11432  0059E2  0012               	return		;funcret
 11433  0059E4                     __end_of_PWM8_LoadDutyValue:
 11434                           	callstack 0
 11435                           
 11436 ;; *************** function _PWM7_LoadDutyValue *****************
 11437 ;; Defined at:
 11438 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;Total ram usage:        4 bytes
 11457 ;; Hardware stack levels used: 1
 11458 ;; Hardware stack levels required when called: 8
 11459 ;; This function calls:
 11460 ;;		Nothing
 11461 ;; This function is called by:
 11462 ;;		_setMotor
 11463 ;; This function uses a non-reentrant model
 11464 ;;
 11465                           
 11466                           	psect	text43
 11467  0059E4                     __ptext43:
 11468                           	callstack 0
 11469  0059E4                     _PWM7_LoadDutyValue:
 11470                           	callstack 19
 11471  0059E4                     
 11472                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11473  0059E4  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11474  0059E8  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11475  0059EC  90D8               	bcf	status,0,c
 11476  0059EE  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11477  0059F0  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11478  0059F2  90D8               	bcf	status,0,c
 11479  0059F4  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11480  0059F6  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11481  0059F8  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11482  0059FA  6E65               	movwf	101,c	;volatile
 11483                           
 11484                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11485  0059FC  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11486  005A00  0E03               	movlw	3
 11487  005A02  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11488  005A04  0E06               	movlw	6
 11489  005A06  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11490  005A08                     u9655:
 11491  005A08  90D8               	bcf	status,0,c
 11492  005A0A  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11493  005A0C  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11494  005A0E  EF04  F02D         	goto	u9655
 11495  005A12  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11496  005A14  6E64               	movwf	100,c	;volatile
 11497  005A16  0012               	return		;funcret
 11498  005A18                     __end_of_PWM7_LoadDutyValue:
 11499                           	callstack 0
 11500                           
 11501 ;; *************** function _actSpeed *****************
 11502 ;; Defined at:
 11503 ;;		line 66 in file "main.c"
 11504 ;; Parameters:    Size  Location     Type
 11505 ;;		None
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  speed           2   35[COMRAM] short 
 11508 ;; Return value:  Size  Location     Type
 11509 ;;                  2   33[COMRAM] short 
 11510 ;; Registers used:
 11511 ;;		wreg, status,2, status,0, cstack
 11512 ;; Tracked objects:
 11513 ;;		On entry : 0/0
 11514 ;;		On exit  : 0/0
 11515 ;;		Unchanged: 0/0
 11516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;Total ram usage:        4 bytes
 11522 ;; Hardware stack levels used: 1
 11523 ;; Hardware stack levels required when called: 9
 11524 ;; This function calls:
 11525 ;;		___aldiv
 11526 ;; This function is called by:
 11527 ;;		_calcMotorPow
 11528 ;; This function uses a non-reentrant model
 11529 ;;
 11530                           
 11531                           	psect	text44
 11532  0051A8                     __ptext44:
 11533                           	callstack 0
 11534  0051A8                     _actSpeed:
 11535                           	callstack 19
 11536  0051A8                     
 11537                           ;main.c: 67:     int16_t speed = 0;
 11538  0051A8  0E00               	movlw	0
 11539  0051AA  6E25               	movwf	(actSpeed@speed+1)^0,c
 11540  0051AC  0E00               	movlw	0
 11541  0051AE  6E24               	movwf	actSpeed@speed^0,c
 11542  0051B0                     
 11543                           ;main.c: 68:     if (smtPeriod) {
 11544  0051B0  5048               	movf	_smtPeriod^0,w,c	;volatile
 11545  0051B2  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11546  0051B4  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11547  0051B6  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11548  0051B8  B4D8               	btfsc	status,2,c
 11549  0051BA  EFE1  F028         	goto	u6421
 11550  0051BE  EFE3  F028         	goto	u6420
 11551  0051C2                     u6421:
 11552  0051C2  EF19  F029         	goto	l6662
 11553  0051C6                     u6420:
 11554  0051C6                     
 11555                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
 11556  0051C6  013C               	movlb	60	; () banked
 11557  0051C8  AB60               	btfss	96,5,b	;volatile
 11558  0051CA  EFE9  F028         	goto	u6431
 11559  0051CE  EFEB  F028         	goto	u6430
 11560  0051D2                     u6431:
 11561  0051D2  EF03  F029         	goto	l6660
 11562  0051D6                     u6430:
 11563  0051D6                     
 11564                           ; BSR set to: 60
 11565                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11566  0051D6  0E20               	movlw	32
 11567  0051D8  6E14               	movwf	___aldiv@dividend^0,c
 11568  0051DA  0EA1               	movlw	161
 11569  0051DC  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11570  0051DE  0E07               	movlw	7
 11571  0051E0  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11572  0051E2  0E00               	movlw	0
 11573  0051E4  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11574  0051E6  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11575  0051EA  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11576  0051EE  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11577  0051F2  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11578  0051F6  EC88  F022         	call	___aldiv	;wreg free
 11579  0051FA  C014  F024         	movff	?___aldiv,actSpeed@speed
 11580  0051FE  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11581                           
 11582                           ;main.c: 71:         } else {
 11583  005202  EF19  F029         	goto	l6662
 11584  005206                     l6660:
 11585                           
 11586                           ; BSR set to: 60
 11587                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11588  005206  0EE0               	movlw	224
 11589  005208  6E14               	movwf	___aldiv@dividend^0,c
 11590  00520A  0E5E               	movlw	94
 11591  00520C  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11592  00520E  0EF8               	movlw	248
 11593  005210  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11594  005212  0EFF               	movlw	255
 11595  005214  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11596  005216  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11597  00521A  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11598  00521E  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11599  005222  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11600  005226  EC88  F022         	call	___aldiv	;wreg free
 11601  00522A  C014  F024         	movff	?___aldiv,actSpeed@speed
 11602  00522E  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11603  005232                     l6662:
 11604                           
 11605                           ;main.c: 75:     return speed;
 11606  005232  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11607  005236  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11608  00523A  0012               	return		;funcret
 11609  00523C                     __end_of_actSpeed:
 11610                           	callstack 0
 11611                           
 11612 ;; *************** function ___aldiv *****************
 11613 ;; Defined at:
 11614 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11615 ;; Parameters:    Size  Location     Type
 11616 ;;  dividend        4   19[COMRAM] long 
 11617 ;;  divisor         4   23[COMRAM] long 
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;  quotient        4   29[COMRAM] long 
 11620 ;;  sign            1   28[COMRAM] unsigned char 
 11621 ;;  counter         1   27[COMRAM] unsigned char 
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  4   19[COMRAM] long 
 11624 ;; Registers used:
 11625 ;;		wreg, status,2, status,0
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11631 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;Total ram usage:       14 bytes
 11636 ;; Hardware stack levels used: 1
 11637 ;; Hardware stack levels required when called: 8
 11638 ;; This function calls:
 11639 ;;		Nothing
 11640 ;; This function is called by:
 11641 ;;		_actSpeed
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text45
 11646  004510                     __ptext45:
 11647                           	callstack 0
 11648  004510                     ___aldiv:
 11649                           	callstack 19
 11650  004510  0E00               	movlw	0
 11651  004512  6E1D               	movwf	___aldiv@sign^0,c
 11652  004514  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11653  004516  EF91  F022         	goto	u6150
 11654  00451A  EF8F  F022         	goto	u6151
 11655  00451E                     u6151:
 11656  00451E  EF9B  F022         	goto	l6438
 11657  004522                     u6150:
 11658  004522  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11659  004524  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11660  004526  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11661  004528  6C18               	negf	___aldiv@divisor^0,c
 11662  00452A  0E00               	movlw	0
 11663  00452C  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11664  00452E  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11665  004530  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11666  004532  0E01               	movlw	1
 11667  004534  6E1D               	movwf	___aldiv@sign^0,c
 11668  004536                     l6438:
 11669  004536  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11670  004538  EFA2  F022         	goto	u6160
 11671  00453C  EFA0  F022         	goto	u6161
 11672  004540                     u6161:
 11673  004540  EFAC  F022         	goto	l6444
 11674  004544                     u6160:
 11675  004544  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11676  004546  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11677  004548  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11678  00454A  6C14               	negf	___aldiv@dividend^0,c
 11679  00454C  0E00               	movlw	0
 11680  00454E  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11681  004550  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11682  004552  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11683  004554  0E01               	movlw	1
 11684  004556  1A1D               	xorwf	___aldiv@sign^0,f,c
 11685  004558                     l6444:
 11686  004558  0E00               	movlw	0
 11687  00455A  6E1E               	movwf	___aldiv@quotient^0,c
 11688  00455C  0E00               	movlw	0
 11689  00455E  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11690  004560  0E00               	movlw	0
 11691  004562  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11692  004564  0E00               	movlw	0
 11693  004566  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11694  004568  5018               	movf	___aldiv@divisor^0,w,c
 11695  00456A  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11696  00456C  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11697  00456E  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11698  004570  B4D8               	btfsc	status,2,c
 11699  004572  EFBD  F022         	goto	u6171
 11700  004576  EFBF  F022         	goto	u6170
 11701  00457A                     u6171:
 11702  00457A  EFF5  F022         	goto	l6466
 11703  00457E                     u6170:
 11704  00457E  0E01               	movlw	1
 11705  004580  6E1C               	movwf	___aldiv@counter^0,c
 11706  004582  EFC9  F022         	goto	l6452
 11707  004586                     l6450:
 11708  004586  90D8               	bcf	status,0,c
 11709  004588  3618               	rlcf	___aldiv@divisor^0,f,c
 11710  00458A  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11711  00458C  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11712  00458E  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11713  004590  2A1C               	incf	___aldiv@counter^0,f,c
 11714  004592                     l6452:
 11715  004592  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11716  004594  EFCE  F022         	goto	u6181
 11717  004598  EFD0  F022         	goto	u6180
 11718  00459C                     u6181:
 11719  00459C  EFC3  F022         	goto	l6450
 11720  0045A0                     u6180:
 11721  0045A0                     l6454:
 11722  0045A0  90D8               	bcf	status,0,c
 11723  0045A2  361E               	rlcf	___aldiv@quotient^0,f,c
 11724  0045A4  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11725  0045A6  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11726  0045A8  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11727  0045AA  5018               	movf	___aldiv@divisor^0,w,c
 11728  0045AC  5C14               	subwf	___aldiv@dividend^0,w,c
 11729  0045AE  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11730  0045B0  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11731  0045B2  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11732  0045B4  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11733  0045B6  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11734  0045B8  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11735  0045BA  A0D8               	btfss	status,0,c
 11736  0045BC  EFE2  F022         	goto	u6191
 11737  0045C0  EFE4  F022         	goto	u6190
 11738  0045C4                     u6191:
 11739  0045C4  EFED  F022         	goto	l6462
 11740  0045C8                     u6190:
 11741  0045C8  5018               	movf	___aldiv@divisor^0,w,c
 11742  0045CA  5E14               	subwf	___aldiv@dividend^0,f,c
 11743  0045CC  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11744  0045CE  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11745  0045D0  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11746  0045D2  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11747  0045D4  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11748  0045D6  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11749  0045D8  801E               	bsf	___aldiv@quotient^0,0,c
 11750  0045DA                     l6462:
 11751  0045DA  90D8               	bcf	status,0,c
 11752  0045DC  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11753  0045DE  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11754  0045E0  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11755  0045E2  3218               	rrcf	___aldiv@divisor^0,f,c
 11756  0045E4  2E1C               	decfsz	___aldiv@counter^0,f,c
 11757  0045E6  EFD0  F022         	goto	l6454
 11758  0045EA                     l6466:
 11759  0045EA  501D               	movf	___aldiv@sign^0,w,c
 11760  0045EC  B4D8               	btfsc	status,2,c
 11761  0045EE  EFFB  F022         	goto	u6201
 11762  0045F2  EFFD  F022         	goto	u6200
 11763  0045F6                     u6201:
 11764  0045F6  EF05  F023         	goto	l6470
 11765  0045FA                     u6200:
 11766  0045FA  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11767  0045FC  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11768  0045FE  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11769  004600  6C1E               	negf	___aldiv@quotient^0,c
 11770  004602  0E00               	movlw	0
 11771  004604  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11772  004606  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11773  004608  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11774  00460A                     l6470:
 11775  00460A  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11776  00460E  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11777  004612  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11778  004616  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11779  00461A  0012               	return		;funcret
 11780  00461C                     __end_of___aldiv:
 11781                           	callstack 0
 11782                           
 11783 ;; *************** function ___xxtofl *****************
 11784 ;; Defined at:
 11785 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  sign            1    wreg     unsigned char 
 11788 ;;  val             4   27[COMRAM] long 
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;  sign            1   35[COMRAM] unsigned char 
 11791 ;;  arg             4   37[COMRAM] unsigned long 
 11792 ;;  exp             1   36[COMRAM] unsigned char 
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  4   27[COMRAM] unsigned char 
 11795 ;; Registers used:
 11796 ;;		wreg, status,2, status,0
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11805 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11806 ;;Total ram usage:       14 bytes
 11807 ;; Hardware stack levels used: 1
 11808 ;; Hardware stack levels required when called: 8
 11809 ;; This function calls:
 11810 ;;		Nothing
 11811 ;; This function is called by:
 11812 ;;		_loop
 11813 ;;		_checkBatt
 11814 ;;		_startAccell
 11815 ;;		_calcSteering
 11816 ;;		_calcSpeed
 11817 ;;		_calcMotorPow
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text46
 11822  003ACC                     __ptext46:
 11823                           	callstack 0
 11824  003ACC                     ___xxtofl:
 11825                           	callstack 19
 11826                           
 11827                           ;incstack = 0
 11828                           ;___xxtofl@sign stored from wreg
 11829  003ACC  6E24               	movwf	___xxtofl@sign^0,c
 11830  003ACE  5024               	movf	___xxtofl@sign^0,w,c
 11831  003AD0  B4D8               	btfsc	status,2,c
 11832  003AD2  EF6D  F01D         	goto	u9711
 11833  003AD6  EF6F  F01D         	goto	u9710
 11834  003ADA                     u9711:
 11835  003ADA  EF91  F01D         	goto	l2053
 11836  003ADE                     u9710:
 11837  003ADE  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11838  003AE0  EF76  F01D         	goto	u9720
 11839  003AE4  EF74  F01D         	goto	u9721
 11840  003AE8                     u9721:
 11841  003AE8  EF91  F01D         	goto	l2053
 11842  003AEC                     u9720:
 11843  003AEC  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11844  003AF0  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11845  003AF4  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11846  003AF8  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11847  003AFC  1E20               	comf	??___xxtofl^0,f,c
 11848  003AFE  1E21               	comf	(??___xxtofl+1)^0,f,c
 11849  003B00  1E22               	comf	(??___xxtofl+2)^0,f,c
 11850  003B02  1E23               	comf	(??___xxtofl+3)^0,f,c
 11851  003B04  2A20               	incf	??___xxtofl^0,f,c
 11852  003B06  0E00               	movlw	0
 11853  003B08  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11854  003B0A  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11855  003B0C  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11856  003B0E  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11857  003B12  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11858  003B16  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11859  003B1A  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11860  003B1E  EF99  F01D         	goto	l8782
 11861  003B22                     l2053:
 11862  003B22  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11863  003B26  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11864  003B2A  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11865  003B2E  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11866  003B32                     l8782:
 11867  003B32  501C               	movf	___xxtofl@val^0,w,c
 11868  003B34  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11869  003B36  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11870  003B38  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11871  003B3A  A4D8               	btfss	status,2,c
 11872  003B3C  EFA2  F01D         	goto	u9731
 11873  003B40  EFA4  F01D         	goto	u9730
 11874  003B44                     u9731:
 11875  003B44  EFAE  F01D         	goto	l8788
 11876  003B48                     u9730:
 11877  003B48  0E00               	movlw	0
 11878  003B4A  6E1C               	movwf	?___xxtofl^0,c
 11879  003B4C  0E00               	movlw	0
 11880  003B4E  6E1D               	movwf	(?___xxtofl+1)^0,c
 11881  003B50  0E00               	movlw	0
 11882  003B52  6E1E               	movwf	(?___xxtofl+2)^0,c
 11883  003B54  0E00               	movlw	0
 11884  003B56  6E1F               	movwf	(?___xxtofl+3)^0,c
 11885  003B58  EF3F  F01E         	goto	l2056
 11886  003B5C                     l8788:
 11887  003B5C  0E96               	movlw	150
 11888  003B5E  6E25               	movwf	___xxtofl@exp^0,c
 11889  003B60  EFB8  F01D         	goto	l8792
 11890  003B64                     l8790:
 11891  003B64  2A25               	incf	___xxtofl@exp^0,f,c
 11892  003B66  90D8               	bcf	status,0,c
 11893  003B68  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11894  003B6A  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11895  003B6C  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11896  003B6E  3226               	rrcf	___xxtofl@arg^0,f,c
 11897  003B70                     l8792:
 11898  003B70  0E00               	movlw	0
 11899  003B72  1426               	andwf	___xxtofl@arg^0,w,c
 11900  003B74  6E20               	movwf	??___xxtofl^0,c
 11901  003B76  0E00               	movlw	0
 11902  003B78  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11903  003B7A  6E21               	movwf	(??___xxtofl+1)^0,c
 11904  003B7C  0E00               	movlw	0
 11905  003B7E  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11906  003B80  6E22               	movwf	(??___xxtofl+2)^0,c
 11907  003B82  0EFE               	movlw	254
 11908  003B84  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11909  003B86  6E23               	movwf	(??___xxtofl+3)^0,c
 11910  003B88  5020               	movf	??___xxtofl^0,w,c
 11911  003B8A  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11912  003B8C  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11913  003B8E  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11914  003B90  A4D8               	btfss	status,2,c
 11915  003B92  EFCD  F01D         	goto	u9741
 11916  003B96  EFCF  F01D         	goto	u9740
 11917  003B9A                     u9741:
 11918  003B9A  EFB2  F01D         	goto	l8790
 11919  003B9E                     u9740:
 11920  003B9E  EFDD  F01D         	goto	l2060
 11921  003BA2                     l8794:
 11922  003BA2  2A25               	incf	___xxtofl@exp^0,f,c
 11923  003BA4  0E01               	movlw	1
 11924  003BA6  2626               	addwf	___xxtofl@arg^0,f,c
 11925  003BA8  0E00               	movlw	0
 11926  003BAA  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11927  003BAC  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11928  003BAE  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11929  003BB0  90D8               	bcf	status,0,c
 11930  003BB2  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11931  003BB4  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11932  003BB6  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11933  003BB8  3226               	rrcf	___xxtofl@arg^0,f,c
 11934  003BBA                     l2060:
 11935  003BBA  0E00               	movlw	0
 11936  003BBC  1426               	andwf	___xxtofl@arg^0,w,c
 11937  003BBE  6E20               	movwf	??___xxtofl^0,c
 11938  003BC0  0E00               	movlw	0
 11939  003BC2  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11940  003BC4  6E21               	movwf	(??___xxtofl+1)^0,c
 11941  003BC6  0E00               	movlw	0
 11942  003BC8  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11943  003BCA  6E22               	movwf	(??___xxtofl+2)^0,c
 11944  003BCC  0EFF               	movlw	255
 11945  003BCE  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11946  003BD0  6E23               	movwf	(??___xxtofl+3)^0,c
 11947  003BD2  5020               	movf	??___xxtofl^0,w,c
 11948  003BD4  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11949  003BD6  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11950  003BD8  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11951  003BDA  A4D8               	btfss	status,2,c
 11952  003BDC  EFF2  F01D         	goto	u9751
 11953  003BE0  EFF4  F01D         	goto	u9750
 11954  003BE4                     u9751:
 11955  003BE4  EFD1  F01D         	goto	l8794
 11956  003BE8                     u9750:
 11957  003BE8  EFFC  F01D         	goto	l8802
 11958  003BEC                     l8800:
 11959  003BEC  0625               	decf	___xxtofl@exp^0,f,c
 11960  003BEE  90D8               	bcf	status,0,c
 11961  003BF0  3626               	rlcf	___xxtofl@arg^0,f,c
 11962  003BF2  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11963  003BF4  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11964  003BF6  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11965  003BF8                     l8802:
 11966  003BF8  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11967  003BFA  EF01  F01E         	goto	u9761
 11968  003BFE  EF03  F01E         	goto	u9760
 11969  003C02                     u9761:
 11970  003C02  EF0B  F01E         	goto	l2067
 11971  003C06                     u9760:
 11972  003C06  0E02               	movlw	2
 11973  003C08  6025               	cpfslt	___xxtofl@exp^0,c
 11974  003C0A  EF09  F01E         	goto	u9771
 11975  003C0E  EF0B  F01E         	goto	u9770
 11976  003C12                     u9771:
 11977  003C12  EFF6  F01D         	goto	l8800
 11978  003C16                     u9770:
 11979  003C16                     l2067:
 11980  003C16  B025               	btfsc	___xxtofl@exp^0,0,c
 11981  003C18  EF10  F01E         	goto	u9781
 11982  003C1C  EF12  F01E         	goto	u9780
 11983  003C20                     u9781:
 11984  003C20  EF13  F01E         	goto	l8808
 11985  003C24                     u9780:
 11986  003C24  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11987  003C26                     l8808:
 11988  003C26  90D8               	bcf	status,0,c
 11989  003C28  3225               	rrcf	___xxtofl@exp^0,f,c
 11990  003C2A  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11991  003C2E  6A21               	clrf	(??___xxtofl+1)^0,c
 11992  003C30  6A22               	clrf	(??___xxtofl+2)^0,c
 11993  003C32  6A23               	clrf	(??___xxtofl+3)^0,c
 11994  003C34  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11995  003C38  6A22               	clrf	(??___xxtofl+2)^0,c
 11996  003C3A  6A21               	clrf	(??___xxtofl+1)^0,c
 11997  003C3C  6A20               	clrf	??___xxtofl^0,c
 11998  003C3E  5020               	movf	??___xxtofl^0,w,c
 11999  003C40  1226               	iorwf	___xxtofl@arg^0,f,c
 12000  003C42  5021               	movf	(??___xxtofl+1)^0,w,c
 12001  003C44  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12002  003C46  5022               	movf	(??___xxtofl+2)^0,w,c
 12003  003C48  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12004  003C4A  5023               	movf	(??___xxtofl+3)^0,w,c
 12005  003C4C  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12006  003C4E  5024               	movf	___xxtofl@sign^0,w,c
 12007  003C50  B4D8               	btfsc	status,2,c
 12008  003C52  EF2D  F01E         	goto	u9791
 12009  003C56  EF2F  F01E         	goto	u9790
 12010  003C5A                     u9791:
 12011  003C5A  EF37  F01E         	goto	l8818
 12012  003C5E                     u9790:
 12013  003C5E  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12014  003C60  EF36  F01E         	goto	u9800
 12015  003C64  EF34  F01E         	goto	u9801
 12016  003C68                     u9801:
 12017  003C68  EF37  F01E         	goto	l8818
 12018  003C6C                     u9800:
 12019  003C6C  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12020  003C6E                     l8818:
 12021  003C6E  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12022  003C72  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12023  003C76  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12024  003C7A  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12025  003C7E                     l2056:
 12026  003C7E  0012               	return		;funcret
 12027  003C80                     __end_of___xxtofl:
 12028                           	callstack 0
 12029                           
 12030 ;; *************** function ___fltol *****************
 12031 ;; Defined at:
 12032 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;  f1              4   25[BANK0 ] unsigned char 
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  exp1            1   34[BANK0 ] unsigned char 
 12037 ;;  sign1           1   33[BANK0 ] unsigned char 
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  4   25[BANK0 ] long 
 12040 ;; Registers used:
 12041 ;;		wreg, status,2, status,0
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12047 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12048 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12049 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;Total ram usage:       10 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 8
 12054 ;; This function calls:
 12055 ;;		Nothing
 12056 ;; This function is called by:
 12057 ;;		_startAccell
 12058 ;;		_calcSteering
 12059 ;;		_calcSpeed
 12060 ;;		_calcMotorPow
 12061 ;;		_efgtoa
 12062 ;; This function uses a non-reentrant model
 12063 ;;
 12064                           
 12065                           	psect	text47
 12066  00461C                     __ptext47:
 12067                           	callstack 0
 12068  00461C                     ___fltol:
 12069                           	callstack 16
 12070  00461C  0100               	movlb	0	; () banked
 12071  00461E  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12072  004620  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12073  004622  6F82               	movwf	___fltol@exp1& (0+255),b
 12074  004624  5182               	movf	___fltol@exp1& (0+255),w,b
 12075  004626  A4D8               	btfss	status,2,c
 12076  004628  EF18  F023         	goto	u8441
 12077  00462C  EF1A  F023         	goto	u8440
 12078  004630                     u8441:
 12079  004630  EF24  F023         	goto	l8130
 12080  004634                     u8440:
 12081  004634                     l8126:
 12082                           
 12083                           ; BSR set to: 0
 12084  004634  0E00               	movlw	0
 12085  004636  6F79               	movwf	?___fltol& (0+255),b
 12086  004638  0E00               	movlw	0
 12087  00463A  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12088  00463C  0E00               	movlw	0
 12089  00463E  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12090  004640  0E00               	movlw	0
 12091  004642  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12092  004644  EF91  F023         	goto	l1695
 12093  004648                     l8130:
 12094                           
 12095                           ; BSR set to: 0
 12096  004648  C079  F07D         	movff	___fltol@f1,??___fltol
 12097  00464C  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12098  004650  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12099  004654  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12100  004658  0E20               	movlw	32
 12101  00465A  EF34  F023         	goto	u8450
 12102  00465E                     u8455:
 12103  00465E  90D8               	bcf	status,0,c
 12104  004660  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12105  004662  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12106  004664  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12107  004666  337D               	rrcf	??___fltol& (0+255),f,b
 12108  004668                     u8450:
 12109  004668  2EE8               	decfsz	wreg,f,c
 12110  00466A  EF2F  F023         	goto	u8455
 12111  00466E  517D               	movf	??___fltol& (0+255),w,b
 12112  004670  6F81               	movwf	___fltol@sign1& (0+255),b
 12113  004672                     
 12114                           ; BSR set to: 0
 12115  004672  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12116  004674                     
 12117                           ; BSR set to: 0
 12118  004674  0EFF               	movlw	255
 12119  004676  1779               	andwf	___fltol@f1& (0+255),f,b
 12120  004678  0EFF               	movlw	255
 12121  00467A  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12122  00467C  0EFF               	movlw	255
 12123  00467E  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12124  004680  0E00               	movlw	0
 12125  004682  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12126  004684                     
 12127                           ; BSR set to: 0
 12128  004684  0E96               	movlw	150
 12129  004686  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12130  004688                     
 12131                           ; BSR set to: 0
 12132  004688  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12133  00468A  EF4B  F023         	goto	u8460
 12134  00468E  EF49  F023         	goto	u8461
 12135  004692                     u8461:
 12136  004692  EF61  F023         	goto	l8150
 12137  004696                     u8460:
 12138  004696                     
 12139                           ; BSR set to: 0
 12140  004696  5182               	movf	___fltol@exp1& (0+255),w,b
 12141  004698  0A80               	xorlw	128
 12142  00469A  0F97               	addlw	151
 12143  00469C  B0D8               	btfsc	status,0,c
 12144  00469E  EF53  F023         	goto	u8471
 12145  0046A2  EF55  F023         	goto	u8470
 12146  0046A6                     u8471:
 12147  0046A6  EF57  F023         	goto	l8146
 12148  0046AA                     u8470:
 12149  0046AA  EF1A  F023         	goto	l8126
 12150  0046AE                     l8146:
 12151                           
 12152                           ; BSR set to: 0
 12153  0046AE  90D8               	bcf	status,0,c
 12154  0046B0  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12155  0046B2  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12156  0046B4  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12157  0046B6  3379               	rrcf	___fltol@f1& (0+255),f,b
 12158  0046B8                     
 12159                           ; BSR set to: 0
 12160  0046B8  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12161  0046BA  EF57  F023         	goto	l8146
 12162  0046BE  EF79  F023         	goto	l8160
 12163  0046C2                     l8150:
 12164                           
 12165                           ; BSR set to: 0
 12166  0046C2  0E1F               	movlw	31
 12167  0046C4  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12168  0046C6  EF67  F023         	goto	u8481
 12169  0046CA  EF69  F023         	goto	u8480
 12170  0046CE                     u8481:
 12171  0046CE  EF71  F023         	goto	l8158
 12172  0046D2                     u8480:
 12173  0046D2  EF1A  F023         	goto	l8126
 12174  0046D6                     l8156:
 12175                           
 12176                           ; BSR set to: 0
 12177  0046D6  90D8               	bcf	status,0,c
 12178  0046D8  3779               	rlcf	___fltol@f1& (0+255),f,b
 12179  0046DA  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12180  0046DC  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12181  0046DE  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12182  0046E0  0782               	decf	___fltol@exp1& (0+255),f,b
 12183  0046E2                     l8158:
 12184                           
 12185                           ; BSR set to: 0
 12186  0046E2  5182               	movf	___fltol@exp1& (0+255),w,b
 12187  0046E4  A4D8               	btfss	status,2,c
 12188  0046E6  EF77  F023         	goto	u8491
 12189  0046EA  EF79  F023         	goto	u8490
 12190  0046EE                     u8491:
 12191  0046EE  EF6B  F023         	goto	l8156
 12192  0046F2                     u8490:
 12193  0046F2                     l8160:
 12194                           
 12195                           ; BSR set to: 0
 12196  0046F2  5181               	movf	___fltol@sign1& (0+255),w,b
 12197  0046F4  B4D8               	btfsc	status,2,c
 12198  0046F6  EF7F  F023         	goto	u8501
 12199  0046FA  EF81  F023         	goto	u8500
 12200  0046FE                     u8501:
 12201  0046FE  EF89  F023         	goto	l8164
 12202  004702                     u8500:
 12203  004702                     
 12204                           ; BSR set to: 0
 12205  004702  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12206  004704  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12207  004706  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12208  004708  6D79               	negf	___fltol@f1& (0+255),b
 12209  00470A  0E00               	movlw	0
 12210  00470C  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12211  00470E  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12212  004710  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12213  004712                     l8164:
 12214                           
 12215                           ; BSR set to: 0
 12216  004712  C079  F079         	movff	___fltol@f1,?___fltol
 12217  004716  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12218  00471A  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12219  00471E  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12220  004722                     l1695:
 12221                           
 12222                           ; BSR set to: 0
 12223  004722  0012               	return		;funcret
 12224  004724                     __end_of___fltol:
 12225                           	callstack 0
 12226                           
 12227 ;; *************** function ___flmul *****************
 12228 ;; Defined at:
 12229 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  b               4   41[COMRAM] long 
 12232 ;;  a               4   45[COMRAM] long 
 12233 ;; Auto vars:     Size  Location     Type
 12234 ;;  prod            4    7[BANK0 ] struct .
 12235 ;;  grs             4    2[BANK0 ] unsigned long 
 12236 ;;  temp            2   11[BANK0 ] struct .
 12237 ;;  bexp            1    6[BANK0 ] unsigned char 
 12238 ;;  aexp            1    1[BANK0 ] unsigned char 
 12239 ;;  sign            1    0[BANK0 ] unsigned char 
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  4   41[COMRAM] unsigned char 
 12242 ;; Registers used:
 12243 ;;		wreg, status,2, status,0, prodl, prodh
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12249 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12250 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12251 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;Total ram usage:       25 bytes
 12254 ;; Hardware stack levels used: 1
 12255 ;; Hardware stack levels required when called: 8
 12256 ;; This function calls:
 12257 ;;		Nothing
 12258 ;; This function is called by:
 12259 ;;		_startAccell
 12260 ;;		_calcSteering
 12261 ;;		_calcSpeed
 12262 ;;		_calcMotorPow
 12263 ;;		_efgtoa
 12264 ;; This function uses a non-reentrant model
 12265 ;;
 12266                           
 12267                           	psect	text48
 12268  002704                     __ptext48:
 12269                           	callstack 0
 12270  002704                     ___flmul:
 12271                           	callstack 16
 12272  002704  502D               	movf	(___flmul@b+3)^0,w,c
 12273  002706  0B80               	andlw	128
 12274  002708  0100               	movlb	0	; () banked
 12275  00270A  6F60               	movwf	___flmul@sign& (0+255),b
 12276  00270C  502D               	movf	(___flmul@b+3)^0,w,c
 12277  00270E  242D               	addwf	(___flmul@b+3)^0,w,c
 12278  002710  6F66               	movwf	___flmul@bexp& (0+255),b
 12279  002712                     
 12280                           ; BSR set to: 0
 12281  002712  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12282  002714  EF8E  F013         	goto	u8041
 12283  002718  EF90  F013         	goto	u8040
 12284  00271C                     u8041:
 12285  00271C  EF91  F013         	goto	l7868
 12286  002720                     u8040:
 12287  002720                     
 12288                           ; BSR set to: 0
 12289  002720  8166               	bsf	___flmul@bexp& (0+255),0,b
 12290  002722                     l7868:
 12291                           
 12292                           ; BSR set to: 0
 12293  002722  5166               	movf	___flmul@bexp& (0+255),w,b
 12294  002724  B4D8               	btfsc	status,2,c
 12295  002726  EF97  F013         	goto	u8051
 12296  00272A  EF99  F013         	goto	u8050
 12297  00272E                     u8051:
 12298  00272E  EFAC  F013         	goto	l7876
 12299  002732                     u8050:
 12300  002732                     
 12301                           ; BSR set to: 0
 12302  002732  2966               	incf	___flmul@bexp& (0+255),w,b
 12303  002734  A4D8               	btfss	status,2,c
 12304  002736  EF9F  F013         	goto	u8061
 12305  00273A  EFA1  F013         	goto	u8060
 12306  00273E                     u8061:
 12307  00273E  EFA9  F013         	goto	l7874
 12308  002742                     u8060:
 12309  002742                     
 12310                           ; BSR set to: 0
 12311  002742  0E00               	movlw	0
 12312  002744  6E2A               	movwf	___flmul@b^0,c
 12313  002746  0E00               	movlw	0
 12314  002748  6E2B               	movwf	(___flmul@b+1)^0,c
 12315  00274A  0E00               	movlw	0
 12316  00274C  6E2C               	movwf	(___flmul@b+2)^0,c
 12317  00274E  0E00               	movlw	0
 12318  002750  6E2D               	movwf	(___flmul@b+3)^0,c
 12319  002752                     l7874:
 12320                           
 12321                           ; BSR set to: 0
 12322  002752  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12323  002754  EFB4  F013         	goto	l7878
 12324  002758                     l7876:
 12325                           
 12326                           ; BSR set to: 0
 12327  002758  0E00               	movlw	0
 12328  00275A  6E2A               	movwf	___flmul@b^0,c
 12329  00275C  0E00               	movlw	0
 12330  00275E  6E2B               	movwf	(___flmul@b+1)^0,c
 12331  002760  0E00               	movlw	0
 12332  002762  6E2C               	movwf	(___flmul@b+2)^0,c
 12333  002764  0E00               	movlw	0
 12334  002766  6E2D               	movwf	(___flmul@b+3)^0,c
 12335  002768                     l7878:
 12336                           
 12337                           ; BSR set to: 0
 12338  002768  5031               	movf	(___flmul@a+3)^0,w,c
 12339  00276A  0B80               	andlw	128
 12340  00276C  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12341  00276E                     
 12342                           ; BSR set to: 0
 12343  00276E  5031               	movf	(___flmul@a+3)^0,w,c
 12344  002770  2431               	addwf	(___flmul@a+3)^0,w,c
 12345  002772  6F61               	movwf	___flmul@aexp& (0+255),b
 12346  002774                     
 12347                           ; BSR set to: 0
 12348  002774  AE30               	btfss	(___flmul@a+2)^0,7,c
 12349  002776  EFBF  F013         	goto	u8071
 12350  00277A  EFC1  F013         	goto	u8070
 12351  00277E                     u8071:
 12352  00277E  EFC2  F013         	goto	l7886
 12353  002782                     u8070:
 12354  002782                     
 12355                           ; BSR set to: 0
 12356  002782  8161               	bsf	___flmul@aexp& (0+255),0,b
 12357  002784                     l7886:
 12358                           
 12359                           ; BSR set to: 0
 12360  002784  5161               	movf	___flmul@aexp& (0+255),w,b
 12361  002786  B4D8               	btfsc	status,2,c
 12362  002788  EFC8  F013         	goto	u8081
 12363  00278C  EFCA  F013         	goto	u8080
 12364  002790                     u8081:
 12365  002790  EFDD  F013         	goto	l7894
 12366  002794                     u8080:
 12367  002794                     
 12368                           ; BSR set to: 0
 12369  002794  2961               	incf	___flmul@aexp& (0+255),w,b
 12370  002796  A4D8               	btfss	status,2,c
 12371  002798  EFD0  F013         	goto	u8091
 12372  00279C  EFD2  F013         	goto	u8090
 12373  0027A0                     u8091:
 12374  0027A0  EFDA  F013         	goto	l7892
 12375  0027A4                     u8090:
 12376  0027A4                     
 12377                           ; BSR set to: 0
 12378  0027A4  0E00               	movlw	0
 12379  0027A6  6E2E               	movwf	___flmul@a^0,c
 12380  0027A8  0E00               	movlw	0
 12381  0027AA  6E2F               	movwf	(___flmul@a+1)^0,c
 12382  0027AC  0E00               	movlw	0
 12383  0027AE  6E30               	movwf	(___flmul@a+2)^0,c
 12384  0027B0  0E00               	movlw	0
 12385  0027B2  6E31               	movwf	(___flmul@a+3)^0,c
 12386  0027B4                     l7892:
 12387                           
 12388                           ; BSR set to: 0
 12389  0027B4  8E30               	bsf	(___flmul@a+2)^0,7,c
 12390  0027B6  EFE5  F013         	goto	l2012
 12391  0027BA                     l7894:
 12392                           
 12393                           ; BSR set to: 0
 12394  0027BA  0E00               	movlw	0
 12395  0027BC  6E2E               	movwf	___flmul@a^0,c
 12396  0027BE  0E00               	movlw	0
 12397  0027C0  6E2F               	movwf	(___flmul@a+1)^0,c
 12398  0027C2  0E00               	movlw	0
 12399  0027C4  6E30               	movwf	(___flmul@a+2)^0,c
 12400  0027C6  0E00               	movlw	0
 12401  0027C8  6E31               	movwf	(___flmul@a+3)^0,c
 12402  0027CA                     l2012:
 12403                           
 12404                           ; BSR set to: 0
 12405  0027CA  5161               	movf	___flmul@aexp& (0+255),w,b
 12406  0027CC  B4D8               	btfsc	status,2,c
 12407  0027CE  EFEB  F013         	goto	u8101
 12408  0027D2  EFED  F013         	goto	u8100
 12409  0027D6                     u8101:
 12410  0027D6  EFF5  F013         	goto	l7898
 12411  0027DA                     u8100:
 12412  0027DA                     
 12413                           ; BSR set to: 0
 12414  0027DA  5166               	movf	___flmul@bexp& (0+255),w,b
 12415  0027DC  A4D8               	btfss	status,2,c
 12416  0027DE  EFF3  F013         	goto	u8111
 12417  0027E2  EFF5  F013         	goto	u8110
 12418  0027E6                     u8111:
 12419  0027E6  EFFF  F013         	goto	l7902
 12420  0027EA                     u8110:
 12421  0027EA                     l7898:
 12422                           
 12423                           ; BSR set to: 0
 12424  0027EA  0E00               	movlw	0
 12425  0027EC  6E2A               	movwf	?___flmul^0,c
 12426  0027EE  0E00               	movlw	0
 12427  0027F0  6E2B               	movwf	(?___flmul+1)^0,c
 12428  0027F2  0E00               	movlw	0
 12429  0027F4  6E2C               	movwf	(?___flmul+2)^0,c
 12430  0027F6  0E00               	movlw	0
 12431  0027F8  6E2D               	movwf	(?___flmul+3)^0,c
 12432  0027FA  EFA9  F015         	goto	l2016
 12433  0027FE                     l7902:
 12434                           
 12435                           ; BSR set to: 0
 12436  0027FE  5030               	movf	(___flmul@a+2)^0,w,c
 12437  002800  022A               	mulwf	___flmul@b^0,c
 12438  002802  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12439  002808  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12440  00280E                     
 12441                           ; BSR set to: 0
 12442  00280E  516B               	movf	___flmul@temp& (0+255),w,b
 12443  002810  6F62               	movwf	___flmul@grs& (0+255),b
 12444  002812  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12445  002814  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12446  002816  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12447  002818                     
 12448                           ; BSR set to: 0
 12449  002818  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12450  00281A  6F67               	movwf	___flmul@prod& (0+255),b
 12451  00281C  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12452  00281E  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12453  002820  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12454  002822  502F               	movf	(___flmul@a+1)^0,w,c
 12455  002824  022B               	mulwf	(___flmul@b+1)^0,c
 12456  002826  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12457  00282C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12458  002832                     
 12459                           ; BSR set to: 0
 12460  002832  516B               	movf	___flmul@temp& (0+255),w,b
 12461  002834  2762               	addwf	___flmul@grs& (0+255),f,b
 12462  002836  0E00               	movlw	0
 12463  002838  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12464  00283A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12465  00283C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12466  00283E                     
 12467                           ; BSR set to: 0
 12468  00283E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12469  002840  2767               	addwf	___flmul@prod& (0+255),f,b
 12470  002842  0E00               	movlw	0
 12471  002844  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12472  002846  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12473  002848  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12474  00284A  502E               	movf	___flmul@a^0,w,c
 12475  00284C  022C               	mulwf	(___flmul@b+2)^0,c
 12476  00284E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12477  002854  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12478  00285A                     
 12479                           ; BSR set to: 0
 12480  00285A  516B               	movf	___flmul@temp& (0+255),w,b
 12481  00285C  2762               	addwf	___flmul@grs& (0+255),f,b
 12482  00285E  0E00               	movlw	0
 12483  002860  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12484  002862  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12485  002864  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12486  002866                     
 12487                           ; BSR set to: 0
 12488  002866  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12489  002868  2767               	addwf	___flmul@prod& (0+255),f,b
 12490  00286A  0E00               	movlw	0
 12491  00286C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12492  00286E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12493  002870  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12494  002872                     
 12495                           ; BSR set to: 0
 12496  002872  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12497  002876  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12498  00287A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12499  00287E  6B62               	clrf	___flmul@grs& (0+255),b
 12500  002880                     
 12501                           ; BSR set to: 0
 12502  002880  502E               	movf	___flmul@a^0,w,c
 12503  002882  022B               	mulwf	(___flmul@b+1)^0,c
 12504  002884  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12505  00288A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12506  002890                     
 12507                           ; BSR set to: 0
 12508  002890  516B               	movf	___flmul@temp& (0+255),w,b
 12509  002892  2762               	addwf	___flmul@grs& (0+255),f,b
 12510  002894  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12511  002896  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12512  002898  0E00               	movlw	0
 12513  00289A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12514  00289C  0E00               	movlw	0
 12515  00289E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12516  0028A0                     
 12517                           ; BSR set to: 0
 12518  0028A0  502F               	movf	(___flmul@a+1)^0,w,c
 12519  0028A2  022A               	mulwf	___flmul@b^0,c
 12520  0028A4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12521  0028AA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12522  0028B0                     
 12523                           ; BSR set to: 0
 12524  0028B0  516B               	movf	___flmul@temp& (0+255),w,b
 12525  0028B2  2762               	addwf	___flmul@grs& (0+255),f,b
 12526  0028B4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12527  0028B6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12528  0028B8  0E00               	movlw	0
 12529  0028BA  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12530  0028BC  0E00               	movlw	0
 12531  0028BE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12532  0028C0                     
 12533                           ; BSR set to: 0
 12534  0028C0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12535  0028C4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12536  0028C8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12537  0028CC  6B62               	clrf	___flmul@grs& (0+255),b
 12538  0028CE  502E               	movf	___flmul@a^0,w,c
 12539  0028D0  022A               	mulwf	___flmul@b^0,c
 12540  0028D2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12541  0028D8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12542  0028DE                     
 12543                           ; BSR set to: 0
 12544  0028DE  516B               	movf	___flmul@temp& (0+255),w,b
 12545  0028E0  2762               	addwf	___flmul@grs& (0+255),f,b
 12546  0028E2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12547  0028E4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12548  0028E6  0E00               	movlw	0
 12549  0028E8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12550  0028EA  0E00               	movlw	0
 12551  0028EC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12552  0028EE                     
 12553                           ; BSR set to: 0
 12554  0028EE  5030               	movf	(___flmul@a+2)^0,w,c
 12555  0028F0  022B               	mulwf	(___flmul@b+1)^0,c
 12556  0028F2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12557  0028F8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12558  0028FE  516B               	movf	___flmul@temp& (0+255),w,b
 12559  002900  2767               	addwf	___flmul@prod& (0+255),f,b
 12560  002902  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12561  002904  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12562  002906  0E00               	movlw	0
 12563  002908  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12564  00290A  0E00               	movlw	0
 12565  00290C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12566  00290E                     
 12567                           ; BSR set to: 0
 12568  00290E  502F               	movf	(___flmul@a+1)^0,w,c
 12569  002910  022C               	mulwf	(___flmul@b+2)^0,c
 12570  002912  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12571  002918  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12572  00291E                     
 12573                           ; BSR set to: 0
 12574  00291E  516B               	movf	___flmul@temp& (0+255),w,b
 12575  002920  2767               	addwf	___flmul@prod& (0+255),f,b
 12576  002922  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12577  002924  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12578  002926  0E00               	movlw	0
 12579  002928  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12580  00292A  0E00               	movlw	0
 12581  00292C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12582  00292E  5030               	movf	(___flmul@a+2)^0,w,c
 12583  002930  022C               	mulwf	(___flmul@b+2)^0,c
 12584  002932  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12585  002938  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12586  00293E                     
 12587                           ; BSR set to: 0
 12588  00293E  516B               	movf	___flmul@temp& (0+255),w,b
 12589  002940  6E32               	movwf	??___flmul^0,c
 12590  002942  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12591  002944  6E33               	movwf	(??___flmul+1)^0,c
 12592  002946  6A34               	clrf	(??___flmul+2)^0,c
 12593  002948  6A35               	clrf	(??___flmul+3)^0,c
 12594  00294A  C034  F035         	movff	??___flmul+2,??___flmul+3
 12595  00294E  C033  F034         	movff	??___flmul+1,??___flmul+2
 12596  002952  C032  F033         	movff	??___flmul,??___flmul+1
 12597  002956  6A32               	clrf	??___flmul^0,c
 12598  002958  5032               	movf	??___flmul^0,w,c
 12599  00295A  2767               	addwf	___flmul@prod& (0+255),f,b
 12600  00295C  5033               	movf	(??___flmul+1)^0,w,c
 12601  00295E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12602  002960  5034               	movf	(??___flmul+2)^0,w,c
 12603  002962  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12604  002964  5035               	movf	(??___flmul+3)^0,w,c
 12605  002966  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12606  002968                     
 12607                           ; BSR set to: 0
 12608  002968  C062  F032         	movff	___flmul@grs,??___flmul
 12609  00296C  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12610  002970  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12611  002974  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12612  002978  0E19               	movlw	25
 12613  00297A  EFC4  F014         	goto	u8120
 12614  00297E                     u8125:
 12615  00297E  90D8               	bcf	status,0,c
 12616  002980  3235               	rrcf	(??___flmul+3)^0,f,c
 12617  002982  3234               	rrcf	(??___flmul+2)^0,f,c
 12618  002984  3233               	rrcf	(??___flmul+1)^0,f,c
 12619  002986  3232               	rrcf	??___flmul^0,f,c
 12620  002988                     u8120:
 12621  002988  2EE8               	decfsz	wreg,f,c
 12622  00298A  EFBF  F014         	goto	u8125
 12623  00298E  5032               	movf	??___flmul^0,w,c
 12624  002990  2767               	addwf	___flmul@prod& (0+255),f,b
 12625  002992  5033               	movf	(??___flmul+1)^0,w,c
 12626  002994  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12627  002996  5034               	movf	(??___flmul+2)^0,w,c
 12628  002998  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12629  00299A  5035               	movf	(??___flmul+3)^0,w,c
 12630  00299C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12631  00299E                     
 12632                           ; BSR set to: 0
 12633  00299E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12634  0029A2  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12635  0029A6  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12636  0029AA  6B62               	clrf	___flmul@grs& (0+255),b
 12637  0029AC                     
 12638                           ; BSR set to: 0
 12639  0029AC  5161               	movf	___flmul@aexp& (0+255),w,b
 12640  0029AE  C066  F032         	movff	___flmul@bexp,??___flmul
 12641  0029B2  6A33               	clrf	(??___flmul+1)^0,c
 12642  0029B4  2632               	addwf	??___flmul^0,f,c
 12643  0029B6  0E00               	movlw	0
 12644  0029B8  2233               	addwfc	(??___flmul+1)^0,f,c
 12645  0029BA  0E82               	movlw	130
 12646  0029BC  2432               	addwf	??___flmul^0,w,c
 12647  0029BE  6F6B               	movwf	___flmul@temp& (0+255),b
 12648  0029C0  0EFF               	movlw	255
 12649  0029C2  2033               	addwfc	(??___flmul+1)^0,w,c
 12650  0029C4  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12651  0029C6  EFFA  F014         	goto	l7950
 12652  0029CA                     l7944:
 12653                           
 12654                           ; BSR set to: 0
 12655  0029CA  90D8               	bcf	status,0,c
 12656  0029CC  3767               	rlcf	___flmul@prod& (0+255),f,b
 12657  0029CE  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12658  0029D0  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12659  0029D2  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12660  0029D4                     
 12661                           ; BSR set to: 0
 12662  0029D4  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12663  0029D6  EFEF  F014         	goto	u8131
 12664  0029DA  EFF1  F014         	goto	u8130
 12665  0029DE                     u8131:
 12666  0029DE  EFF2  F014         	goto	l2019
 12667  0029E2                     u8130:
 12668  0029E2                     
 12669                           ; BSR set to: 0
 12670  0029E2  8167               	bsf	___flmul@prod& (0+255),0,b
 12671  0029E4                     l2019:
 12672                           
 12673                           ; BSR set to: 0
 12674  0029E4  90D8               	bcf	status,0,c
 12675  0029E6  3762               	rlcf	___flmul@grs& (0+255),f,b
 12676  0029E8  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12677  0029EA  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12678  0029EC  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12679  0029EE  076B               	decf	___flmul@temp& (0+255),f,b
 12680  0029F0  A0D8               	btfss	status,0,c
 12681  0029F2  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12682  0029F4                     l7950:
 12683                           
 12684                           ; BSR set to: 0
 12685  0029F4  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12686  0029F6  EFFF  F014         	goto	u8141
 12687  0029FA  EF01  F015         	goto	u8140
 12688  0029FE                     u8141:
 12689  0029FE  EFE5  F014         	goto	l7944
 12690  002A02                     u8140:
 12691  002A02                     
 12692                           ; BSR set to: 0
 12693  002A02  0E00               	movlw	0
 12694  002A04  6F61               	movwf	___flmul@aexp& (0+255),b
 12695  002A06                     
 12696                           ; BSR set to: 0
 12697  002A06  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12698  002A08  EF08  F015         	goto	u8151
 12699  002A0C  EF0A  F015         	goto	u8150
 12700  002A10                     u8151:
 12701  002A10  EF2E  F015         	goto	l2021
 12702  002A14                     u8150:
 12703  002A14                     
 12704                           ; BSR set to: 0
 12705  002A14  0EFF               	movlw	255
 12706  002A16  1562               	andwf	___flmul@grs& (0+255),w,b
 12707  002A18  6E32               	movwf	??___flmul^0,c
 12708  002A1A  0EFF               	movlw	255
 12709  002A1C  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12710  002A1E  6E33               	movwf	(??___flmul+1)^0,c
 12711  002A20  0EFF               	movlw	255
 12712  002A22  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12713  002A24  6E34               	movwf	(??___flmul+2)^0,c
 12714  002A26  0E7F               	movlw	127
 12715  002A28  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12716  002A2A  6E35               	movwf	(??___flmul+3)^0,c
 12717  002A2C  5032               	movf	??___flmul^0,w,c
 12718  002A2E  1033               	iorwf	(??___flmul+1)^0,w,c
 12719  002A30  1034               	iorwf	(??___flmul+2)^0,w,c
 12720  002A32  1035               	iorwf	(??___flmul+3)^0,w,c
 12721  002A34  B4D8               	btfsc	status,2,c
 12722  002A36  EF1F  F015         	goto	u8161
 12723  002A3A  EF21  F015         	goto	u8160
 12724  002A3E                     u8161:
 12725  002A3E  EF25  F015         	goto	l2022
 12726  002A42                     u8160:
 12727  002A42                     l7958:
 12728                           
 12729                           ; BSR set to: 0
 12730  002A42  0E01               	movlw	1
 12731  002A44  6F61               	movwf	___flmul@aexp& (0+255),b
 12732  002A46  EF2E  F015         	goto	l2021
 12733  002A4A                     l2022:
 12734                           
 12735                           ; BSR set to: 0
 12736  002A4A  A167               	btfss	___flmul@prod& (0+255),0,b
 12737  002A4C  EF2A  F015         	goto	u8171
 12738  002A50  EF2C  F015         	goto	u8170
 12739  002A54                     u8171:
 12740  002A54  EF2E  F015         	goto	l2021
 12741  002A58                     u8170:
 12742  002A58  EF21  F015         	goto	l7958
 12743  002A5C                     l2021:
 12744                           
 12745                           ; BSR set to: 0
 12746  002A5C  5161               	movf	___flmul@aexp& (0+255),w,b
 12747  002A5E  B4D8               	btfsc	status,2,c
 12748  002A60  EF34  F015         	goto	u8181
 12749  002A64  EF36  F015         	goto	u8180
 12750  002A68                     u8181:
 12751  002A68  EF5A  F015         	goto	l7970
 12752  002A6C                     u8180:
 12753  002A6C                     
 12754                           ; BSR set to: 0
 12755  002A6C  0E01               	movlw	1
 12756  002A6E  2767               	addwf	___flmul@prod& (0+255),f,b
 12757  002A70  0E00               	movlw	0
 12758  002A72  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12759  002A74  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12760  002A76  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12761  002A78                     
 12762                           ; BSR set to: 0
 12763  002A78  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12764  002A7A  EF41  F015         	goto	u8191
 12765  002A7E  EF43  F015         	goto	u8190
 12766  002A82                     u8191:
 12767  002A82  EF5A  F015         	goto	l7970
 12768  002A86                     u8190:
 12769  002A86                     
 12770                           ; BSR set to: 0
 12771  002A86  C067  F032         	movff	___flmul@prod,??___flmul
 12772  002A8A  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12773  002A8E  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12774  002A92  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12775  002A96  3435               	rlcf	(??___flmul+3)^0,w,c
 12776  002A98  3235               	rrcf	(??___flmul+3)^0,f,c
 12777  002A9A  3234               	rrcf	(??___flmul+2)^0,f,c
 12778  002A9C  3233               	rrcf	(??___flmul+1)^0,f,c
 12779  002A9E  3232               	rrcf	??___flmul^0,f,c
 12780  002AA0  C032  F067         	movff	??___flmul,___flmul@prod
 12781  002AA4  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12782  002AA8  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12783  002AAC  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12784  002AB0                     
 12785                           ; BSR set to: 0
 12786  002AB0  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12787  002AB2  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12788  002AB4                     l7970:
 12789                           
 12790                           ; BSR set to: 0
 12791  002AB4  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12792  002AB6  EF65  F015         	goto	u8201
 12793  002ABA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12794  002ABC  E108               	bnz	u8200
 12795  002ABE  296B               	incf	___flmul@temp& (0+255),w,b
 12796  002AC0  A0D8               	btfss	status,0,c
 12797  002AC2  EF65  F015         	goto	u8201
 12798  002AC6  EF67  F015         	goto	u8200
 12799  002ACA                     u8201:
 12800  002ACA  EF71  F015         	goto	l7974
 12801  002ACE                     u8200:
 12802  002ACE                     
 12803                           ; BSR set to: 0
 12804  002ACE  0E00               	movlw	0
 12805  002AD0  6F67               	movwf	___flmul@prod& (0+255),b
 12806  002AD2  0E00               	movlw	0
 12807  002AD4  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12808  002AD6  0E80               	movlw	128
 12809  002AD8  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12810  002ADA  0E7F               	movlw	127
 12811  002ADC  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12812  002ADE  EF9F  F015         	goto	l7986
 12813  002AE2                     l7974:
 12814                           
 12815                           ; BSR set to: 0
 12816  002AE2  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12817  002AE4  EF7E  F015         	goto	u8210
 12818  002AE8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12819  002AEA  E106               	bnz	u8211
 12820  002AEC  056B               	decf	___flmul@temp& (0+255),w,b
 12821  002AEE  B0D8               	btfsc	status,0,c
 12822  002AF0  EF7C  F015         	goto	u8211
 12823  002AF4  EF7E  F015         	goto	u8210
 12824  002AF8                     u8211:
 12825  002AF8  EF8A  F015         	goto	l2029
 12826  002AFC                     u8210:
 12827  002AFC                     
 12828                           ; BSR set to: 0
 12829  002AFC  0E00               	movlw	0
 12830  002AFE  6F67               	movwf	___flmul@prod& (0+255),b
 12831  002B00  0E00               	movlw	0
 12832  002B02  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12833  002B04  0E00               	movlw	0
 12834  002B06  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12835  002B08  0E00               	movlw	0
 12836  002B0A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12837  002B0C  0E00               	movlw	0
 12838  002B0E  6F60               	movwf	___flmul@sign& (0+255),b
 12839  002B10  EF9F  F015         	goto	l7986
 12840  002B14                     l2029:
 12841                           
 12842                           ; BSR set to: 0
 12843  002B14  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12844  002B18                     
 12845                           ; BSR set to: 0
 12846  002B18  0EFF               	movlw	255
 12847  002B1A  1767               	andwf	___flmul@prod& (0+255),f,b
 12848  002B1C  0EFF               	movlw	255
 12849  002B1E  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12850  002B20  0E7F               	movlw	127
 12851  002B22  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12852  002B24  0E00               	movlw	0
 12853  002B26  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12854  002B28                     
 12855                           ; BSR set to: 0
 12856  002B28  A166               	btfss	___flmul@bexp& (0+255),0,b
 12857  002B2A  EF99  F015         	goto	u8221
 12858  002B2E  EF9B  F015         	goto	u8220
 12859  002B32                     u8221:
 12860  002B32  EF9C  F015         	goto	l7984
 12861  002B36                     u8220:
 12862  002B36                     
 12863                           ; BSR set to: 0
 12864  002B36  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12865  002B38                     l7984:
 12866                           
 12867                           ; BSR set to: 0
 12868  002B38  90D8               	bcf	status,0,c
 12869  002B3A  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12870  002B3C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12871  002B3E                     l7986:
 12872                           
 12873                           ; BSR set to: 0
 12874  002B3E  5160               	movf	___flmul@sign& (0+255),w,b
 12875  002B40  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12876  002B42                     
 12877                           ; BSR set to: 0
 12878  002B42  C067  F02A         	movff	___flmul@prod,?___flmul
 12879  002B46  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12880  002B4A  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12881  002B4E  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12882  002B52                     l2016:
 12883                           
 12884                           ; BSR set to: 0
 12885  002B52  0012               	return		;funcret
 12886  002B54                     __end_of___flmul:
 12887                           	callstack 0
 12888                           
 12889 ;; *************** function ___awdiv *****************
 12890 ;; Defined at:
 12891 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12892 ;; Parameters:    Size  Location     Type
 12893 ;;  dividend        2   19[COMRAM] int 
 12894 ;;  divisor         2   21[COMRAM] int 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;  quotient        2   25[COMRAM] int 
 12897 ;;  sign            1   24[COMRAM] unsigned char 
 12898 ;;  counter         1   23[COMRAM] unsigned char 
 12899 ;; Return value:  Size  Location     Type
 12900 ;;                  2   19[COMRAM] int 
 12901 ;; Registers used:
 12902 ;;		wreg, status,2, status,0
 12903 ;; Tracked objects:
 12904 ;;		On entry : 0/0
 12905 ;;		On exit  : 0/0
 12906 ;;		Unchanged: 0/0
 12907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12909 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12911 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12912 ;;Total ram usage:        8 bytes
 12913 ;; Hardware stack levels used: 1
 12914 ;; Hardware stack levels required when called: 8
 12915 ;; This function calls:
 12916 ;;		Nothing
 12917 ;; This function is called by:
 12918 ;;		_calcSteering
 12919 ;;		_calcMotorPow
 12920 ;;		_setSteering
 12921 ;;		_efgtoa
 12922 ;; This function uses a non-reentrant model
 12923 ;;
 12924                           
 12925                           	psect	text49
 12926  004CCE                     __ptext49:
 12927                           	callstack 0
 12928  004CCE                     ___awdiv:
 12929                           	callstack 19
 12930  004CCE  0E00               	movlw	0
 12931  004CD0  6E19               	movwf	___awdiv@sign^0,c
 12932  004CD2  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12933  004CD4  EF70  F026         	goto	u8230
 12934  004CD8  EF6E  F026         	goto	u8231
 12935  004CDC                     u8231:
 12936  004CDC  EF76  F026         	goto	l8006
 12937  004CE0                     u8230:
 12938  004CE0  6C16               	negf	___awdiv@divisor^0,c
 12939  004CE2  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12940  004CE4  B0D8               	btfsc	status,0,c
 12941  004CE6  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12942  004CE8  0E01               	movlw	1
 12943  004CEA  6E19               	movwf	___awdiv@sign^0,c
 12944  004CEC                     l8006:
 12945  004CEC  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12946  004CEE  EF7D  F026         	goto	u8240
 12947  004CF2  EF7B  F026         	goto	u8241
 12948  004CF6                     u8241:
 12949  004CF6  EF83  F026         	goto	l8012
 12950  004CFA                     u8240:
 12951  004CFA  6C14               	negf	___awdiv@dividend^0,c
 12952  004CFC  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12953  004CFE  B0D8               	btfsc	status,0,c
 12954  004D00  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12955  004D02  0E01               	movlw	1
 12956  004D04  1A19               	xorwf	___awdiv@sign^0,f,c
 12957  004D06                     l8012:
 12958  004D06  0E00               	movlw	0
 12959  004D08  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12960  004D0A  0E00               	movlw	0
 12961  004D0C  6E1A               	movwf	___awdiv@quotient^0,c
 12962  004D0E  5016               	movf	___awdiv@divisor^0,w,c
 12963  004D10  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12964  004D12  B4D8               	btfsc	status,2,c
 12965  004D14  EF8E  F026         	goto	u8251
 12966  004D18  EF90  F026         	goto	u8250
 12967  004D1C                     u8251:
 12968  004D1C  EFB8  F026         	goto	l8034
 12969  004D20                     u8250:
 12970  004D20  0E01               	movlw	1
 12971  004D22  6E18               	movwf	___awdiv@counter^0,c
 12972  004D24  EF98  F026         	goto	l8020
 12973  004D28                     l8018:
 12974  004D28  90D8               	bcf	status,0,c
 12975  004D2A  3616               	rlcf	___awdiv@divisor^0,f,c
 12976  004D2C  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12977  004D2E  2A18               	incf	___awdiv@counter^0,f,c
 12978  004D30                     l8020:
 12979  004D30  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12980  004D32  EF9D  F026         	goto	u8261
 12981  004D36  EF9F  F026         	goto	u8260
 12982  004D3A                     u8261:
 12983  004D3A  EF94  F026         	goto	l8018
 12984  004D3E                     u8260:
 12985  004D3E                     l8022:
 12986  004D3E  90D8               	bcf	status,0,c
 12987  004D40  361A               	rlcf	___awdiv@quotient^0,f,c
 12988  004D42  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12989  004D44  5016               	movf	___awdiv@divisor^0,w,c
 12990  004D46  5C14               	subwf	___awdiv@dividend^0,w,c
 12991  004D48  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12992  004D4A  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12993  004D4C  A0D8               	btfss	status,0,c
 12994  004D4E  EFAB  F026         	goto	u8271
 12995  004D52  EFAD  F026         	goto	u8270
 12996  004D56                     u8271:
 12997  004D56  EFB2  F026         	goto	l8030
 12998  004D5A                     u8270:
 12999  004D5A  5016               	movf	___awdiv@divisor^0,w,c
 13000  004D5C  5E14               	subwf	___awdiv@dividend^0,f,c
 13001  004D5E  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13002  004D60  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13003  004D62  801A               	bsf	___awdiv@quotient^0,0,c
 13004  004D64                     l8030:
 13005  004D64  90D8               	bcf	status,0,c
 13006  004D66  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13007  004D68  3216               	rrcf	___awdiv@divisor^0,f,c
 13008  004D6A  2E18               	decfsz	___awdiv@counter^0,f,c
 13009  004D6C  EF9F  F026         	goto	l8022
 13010  004D70                     l8034:
 13011  004D70  5019               	movf	___awdiv@sign^0,w,c
 13012  004D72  B4D8               	btfsc	status,2,c
 13013  004D74  EFBE  F026         	goto	u8281
 13014  004D78  EFC0  F026         	goto	u8280
 13015  004D7C                     u8281:
 13016  004D7C  EFC4  F026         	goto	l8038
 13017  004D80                     u8280:
 13018  004D80  6C1A               	negf	___awdiv@quotient^0,c
 13019  004D82  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13020  004D84  B0D8               	btfsc	status,0,c
 13021  004D86  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13022  004D88                     l8038:
 13023  004D88  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13024  004D8C  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13025  004D90  0012               	return		;funcret
 13026  004D92                     __end_of___awdiv:
 13027                           	callstack 0
 13028                           
 13029 ;; *************** function _SYSTEM_Initialize *****************
 13030 ;; Defined at:
 13031 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;		None
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;		None
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  1    wreg      void 
 13038 ;; Registers used:
 13039 ;;		wreg, status,2, status,0, cstack
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13049 ;;Total ram usage:        0 bytes
 13050 ;; Hardware stack levels used: 1
 13051 ;; Hardware stack levels required when called: 10
 13052 ;; This function calls:
 13053 ;;		_ADCC_Initialize
 13054 ;;		_CCP3_Initialize
 13055 ;;		_CCP4_Initialize
 13056 ;;		_CLC3_Initialize
 13057 ;;		_INTERRUPT_Initialize
 13058 ;;		_OSCILLATOR_Initialize
 13059 ;;		_PIN_MANAGER_Initialize
 13060 ;;		_PMD_Initialize
 13061 ;;		_PWM5_Initialize
 13062 ;;		_PWM6_Initialize
 13063 ;;		_PWM7_Initialize
 13064 ;;		_PWM8_Initialize
 13065 ;;		_SMT1_Initialize
 13066 ;;		_TMR2_Initialize
 13067 ;;		_TMR3_Initialize
 13068 ;;		_TMR4_Initialize
 13069 ;;		_TMR5_Initialize
 13070 ;;		_UART1_Initialize
 13071 ;; This function is called by:
 13072 ;;		_main
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           	psect	text50
 13077  0055C8                     __ptext50:
 13078                           	callstack 0
 13079  0055C8                     _SYSTEM_Initialize:
 13080                           	callstack 20
 13081  0055C8                     
 13082                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13083  0055C8  ECBE  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13084                           
 13085                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13086  0055CC  EC80  F02E         	call	_PMD_Initialize	;wreg free
 13087                           
 13088                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13089  0055D0  EC02  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 13090                           
 13091                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13092  0055D4  EC01  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 13093  0055D8                     
 13094                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13095  0055D8  ECD2  F02D         	call	_CCP3_Initialize	;wreg free
 13096  0055DC                     
 13097                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13098  0055DC  EC65  F02A         	call	_ADCC_Initialize	;wreg free
 13099                           
 13100                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13101  0055E0  EC00  F02E         	call	_TMR4_Initialize	;wreg free
 13102  0055E4                     
 13103                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13104  0055E4  EC73  F02D         	call	_SMT1_Initialize	;wreg free
 13105  0055E8                     
 13106                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13107  0055E8  ECD1  F02E         	call	_PWM8_Initialize	;wreg free
 13108  0055EC                     
 13109                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13110  0055EC  ECC3  F02E         	call	_TMR2_Initialize	;wreg free
 13111  0055F0                     
 13112                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13113  0055F0  ECE9  F02E         	call	_PWM6_Initialize	;wreg free
 13114                           
 13115                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13116  0055F4  ECBB  F02D         	call	_CCP4_Initialize	;wreg free
 13117  0055F8                     
 13118                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13119  0055F8  EC16  F02E         	call	_CLC3_Initialize	;wreg free
 13120  0055FC                     
 13121                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13122  0055FC  EC6B  F02C         	call	_TMR3_Initialize	;wreg free
 13123                           
 13124                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13125  005600  ECF5  F02E         	call	_PWM5_Initialize	;wreg free
 13126  005604                     
 13127                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13128  005604  EC09  F02B         	call	_TMR5_Initialize	;wreg free
 13129  005608                     
 13130                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13131  005608  ECDD  F02E         	call	_PWM7_Initialize	;wreg free
 13132                           
 13133                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13134  00560C  EC37  F028         	call	_UART1_Initialize	;wreg free
 13135  005610  0012               	return		;funcret
 13136  005612                     __end_of_SYSTEM_Initialize:
 13137                           	callstack 0
 13138                           
 13139 ;; *************** function _UART1_Initialize *****************
 13140 ;; Defined at:
 13141 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;		None
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      void 
 13148 ;; Registers used:
 13149 ;;		wreg, status,2, status,0, cstack
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;Total ram usage:        0 bytes
 13160 ;; Hardware stack levels used: 1
 13161 ;; Hardware stack levels required when called: 9
 13162 ;; This function calls:
 13163 ;;		_UART1_SetErrorHandler
 13164 ;;		_UART1_SetFramingErrorHandler
 13165 ;;		_UART1_SetOverrunErrorHandler
 13166 ;;		_UART1_SetRxInterruptHandler
 13167 ;;		_UART1_SetTxInterruptHandler
 13168 ;; This function is called by:
 13169 ;;		_SYSTEM_Initialize
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text51
 13174  00506E                     __ptext51:
 13175                           	callstack 0
 13176  00506E                     _UART1_Initialize:
 13177                           	callstack 20
 13178  00506E                     
 13179                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13180  00506E  0139               	movlb	57	; () banked
 13181  005070  9793               	bcf	147,3,b	;volatile
 13182  005072                     
 13183                           ; BSR set to: 57
 13184                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13185  005072  0E54               	movlw	low _UART1_Receive_ISR
 13186  005074  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13187  005076  0E4E               	movlw	high _UART1_Receive_ISR
 13188  005078  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13189  00507A  EC26  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13190  00507E                     
 13191                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13192  00507E  0139               	movlb	57	; () banked
 13193  005080  9993               	bcf	147,4,b	;volatile
 13194                           
 13195                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13196  005082  0E32               	movlw	low _UART1_Transmit_ISR
 13197  005084  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13198  005086  0E57               	movlw	high _UART1_Transmit_ISR
 13199  005088  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13200  00508A  EC21  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13201  00508E                     
 13202                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13203  00508E  0E00               	movlw	0
 13204  005090  013D               	movlb	61	; () banked
 13205  005092  6FEC               	movwf	236,b	;volatile
 13206  005094                     
 13207                           ; BSR set to: 61
 13208                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13209  005094  0E00               	movlw	0
 13210  005096  6FED               	movwf	237,b	;volatile
 13211  005098                     
 13212                           ; BSR set to: 61
 13213                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13214  005098  0E00               	movlw	0
 13215  00509A  6FEE               	movwf	238,b	;volatile
 13216  00509C                     
 13217                           ; BSR set to: 61
 13218                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13219  00509C  0E00               	movlw	0
 13220  00509E  6FEF               	movwf	239,b	;volatile
 13221  0050A0                     
 13222                           ; BSR set to: 61
 13223                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13224  0050A0  0E00               	movlw	0
 13225  0050A2  6FF0               	movwf	240,b	;volatile
 13226  0050A4                     
 13227                           ; BSR set to: 61
 13228                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13229  0050A4  0E00               	movlw	0
 13230  0050A6  6FF1               	movwf	241,b	;volatile
 13231  0050A8                     
 13232                           ; BSR set to: 61
 13233                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13234  0050A8  0EB0               	movlw	176
 13235  0050AA  6FF2               	movwf	242,b	;volatile
 13236  0050AC                     
 13237                           ; BSR set to: 61
 13238                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13239  0050AC  0E80               	movlw	128
 13240  0050AE  6FF3               	movwf	243,b	;volatile
 13241  0050B0                     
 13242                           ; BSR set to: 61
 13243                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13244  0050B0  0E00               	movlw	0
 13245  0050B2  6FF4               	movwf	244,b	;volatile
 13246  0050B4                     
 13247                           ; BSR set to: 61
 13248                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13249  0050B4  0E8A               	movlw	138
 13250  0050B6  6FF5               	movwf	245,b	;volatile
 13251  0050B8                     
 13252                           ; BSR set to: 61
 13253                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13254  0050B8  0E00               	movlw	0
 13255  0050BA  6FF6               	movwf	246,b	;volatile
 13256  0050BC                     
 13257                           ; BSR set to: 61
 13258                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13259  0050BC  0E00               	movlw	0
 13260  0050BE  6FF7               	movwf	247,b	;volatile
 13261  0050C0                     
 13262                           ; BSR set to: 61
 13263                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13264  0050C0  0E00               	movlw	0
 13265  0050C2  6FF8               	movwf	248,b	;volatile
 13266  0050C4                     
 13267                           ; BSR set to: 61
 13268                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13269  0050C4  0E00               	movlw	0
 13270  0050C6  6FF9               	movwf	249,b	;volatile
 13271  0050C8                     
 13272                           ; BSR set to: 61
 13273                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13274  0050C8  0E00               	movlw	0
 13275  0050CA  6FFA               	movwf	250,b	;volatile
 13276  0050CC                     
 13277                           ; BSR set to: 61
 13278                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13279  0050CC  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
 13280  0050CE  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13281  0050D0  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 13282  0050D2  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13283  0050D4  EC30  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 13284  0050D8                     
 13285                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13286  0050D8  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
 13287  0050DA  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13288  0050DC  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 13289  0050DE  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13290  0050E0  EC2B  F02F         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13291  0050E4                     
 13292                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13293  0050E4  0E9C               	movlw	low _UART1_DefaultErrorHandler
 13294  0050E6  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13295  0050E8  0E5E               	movlw	high _UART1_DefaultErrorHandler
 13296  0050EA  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13297  0050EC  EC35  F02F         	call	_UART1_SetErrorHandler	;wreg free
 13298                           
 13299                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13300  0050F0  0E00               	movlw	0
 13301  0050F2  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13302                           
 13303                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13304  0050F4  0E00               	movlw	0
 13305  0050F6  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13306                           
 13307                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13308  0050F8  0E00               	movlw	0
 13309  0050FA  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13310                           
 13311                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13312  0050FC  0E08               	movlw	8
 13313  0050FE  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13314                           
 13315                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13316  005100  0E00               	movlw	0
 13317  005102  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13318                           
 13319                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13320  005104  0E00               	movlw	0
 13321  005106  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13322                           
 13323                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13324  005108  0E00               	movlw	0
 13325  00510A  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13326  00510C                     
 13327                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13328  00510C  0139               	movlb	57	; () banked
 13329  00510E  8793               	bsf	147,3,b	;volatile
 13330  005110                     
 13331                           ; BSR set to: 57
 13332  005110  0012               	return		;funcret
 13333  005112                     __end_of_UART1_Initialize:
 13334                           	callstack 0
 13335                           
 13336 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13337 ;; Defined at:
 13338 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13339 ;; Parameters:    Size  Location     Type
 13340 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13341 ;;		 -> UART1_Transmit_ISR(1), 
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, status,2, status,0
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;Total ram usage:        2 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; Hardware stack levels required when called: 8
 13360 ;; This function calls:
 13361 ;;		Nothing
 13362 ;; This function is called by:
 13363 ;;		_UART1_Initialize
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           	psect	text52
 13368  005E42                     __ptext52:
 13369                           	callstack 0
 13370  005E42                     _UART1_SetTxInterruptHandler:
 13371                           	callstack 20
 13372  005E42                     
 13373                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13374  005E42  C014  F196         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13375  005E46  C015  F197         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13376  005E4A  0012               	return		;funcret
 13377  005E4C                     __end_of_UART1_SetTxInterruptHandler:
 13378                           	callstack 0
 13379                           
 13380 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13381 ;; Defined at:
 13382 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13385 ;;		 -> UART1_Receive_ISR(1), 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;                  1    wreg      void 
 13390 ;; Registers used:
 13391 ;;		wreg, status,2, status,0
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13401 ;;Total ram usage:        2 bytes
 13402 ;; Hardware stack levels used: 1
 13403 ;; Hardware stack levels required when called: 8
 13404 ;; This function calls:
 13405 ;;		Nothing
 13406 ;; This function is called by:
 13407 ;;		_UART1_Initialize
 13408 ;; This function uses a non-reentrant model
 13409 ;;
 13410                           
 13411                           	psect	text53
 13412  005E4C                     __ptext53:
 13413                           	callstack 0
 13414  005E4C                     _UART1_SetRxInterruptHandler:
 13415                           	callstack 20
 13416  005E4C                     
 13417                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13418  005E4C  C014  F198         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13419  005E50  C015  F199         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13420  005E54  0012               	return		;funcret
 13421  005E56                     __end_of_UART1_SetRxInterruptHandler:
 13422                           	callstack 0
 13423                           
 13424 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13425 ;; Defined at:
 13426 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13429 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;		None
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, status,2, status,0
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13445 ;;Total ram usage:        2 bytes
 13446 ;; Hardware stack levels used: 1
 13447 ;; Hardware stack levels required when called: 8
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_UART1_Initialize
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           
 13455                           	psect	text54
 13456  005E56                     __ptext54:
 13457                           	callstack 0
 13458  005E56                     _UART1_SetOverrunErrorHandler:
 13459                           	callstack 20
 13460  005E56                     
 13461                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13462  005E56  C014  F192         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13463  005E5A  C015  F193         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13464  005E5E  0012               	return		;funcret
 13465  005E60                     __end_of_UART1_SetOverrunErrorHandler:
 13466                           	callstack 0
 13467                           
 13468 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13469 ;; Defined at:
 13470 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13473 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13474 ;; Auto vars:     Size  Location     Type
 13475 ;;		None
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  1    wreg      void 
 13478 ;; Registers used:
 13479 ;;		wreg, status,2, status,0
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;Total ram usage:        2 bytes
 13490 ;; Hardware stack levels used: 1
 13491 ;; Hardware stack levels required when called: 8
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		_UART1_Initialize
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text55
 13500  005E60                     __ptext55:
 13501                           	callstack 0
 13502  005E60                     _UART1_SetFramingErrorHandler:
 13503                           	callstack 20
 13504  005E60                     
 13505                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13506  005E60  C014  F194         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13507  005E64  C015  F195         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13508  005E68  0012               	return		;funcret
 13509  005E6A                     __end_of_UART1_SetFramingErrorHandler:
 13510                           	callstack 0
 13511                           
 13512 ;; *************** function _UART1_SetErrorHandler *****************
 13513 ;; Defined at:
 13514 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13515 ;; Parameters:    Size  Location     Type
 13516 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13517 ;;		 -> UART1_DefaultErrorHandler(1), 
 13518 ;; Auto vars:     Size  Location     Type
 13519 ;;		None
 13520 ;; Return value:  Size  Location     Type
 13521 ;;                  1    wreg      void 
 13522 ;; Registers used:
 13523 ;;		wreg, status,2, status,0
 13524 ;; Tracked objects:
 13525 ;;		On entry : 0/0
 13526 ;;		On exit  : 0/0
 13527 ;;		Unchanged: 0/0
 13528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;Total ram usage:        2 bytes
 13534 ;; Hardware stack levels used: 1
 13535 ;; Hardware stack levels required when called: 8
 13536 ;; This function calls:
 13537 ;;		Nothing
 13538 ;; This function is called by:
 13539 ;;		_UART1_Initialize
 13540 ;; This function uses a non-reentrant model
 13541 ;;
 13542                           
 13543                           	psect	text56
 13544  005E6A                     __ptext56:
 13545                           	callstack 0
 13546  005E6A                     _UART1_SetErrorHandler:
 13547                           	callstack 20
 13548  005E6A                     
 13549                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13550  005E6A  C014  F190         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13551  005E6E  C015  F191         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13552  005E72  0012               	return		;funcret
 13553  005E74                     __end_of_UART1_SetErrorHandler:
 13554                           	callstack 0
 13555                           
 13556 ;; *************** function _TMR5_Initialize *****************
 13557 ;; Defined at:
 13558 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;		None
 13561 ;; Auto vars:     Size  Location     Type
 13562 ;;		None
 13563 ;; Return value:  Size  Location     Type
 13564 ;;                  1    wreg      void 
 13565 ;; Registers used:
 13566 ;;		wreg, status,2, status,0, cstack
 13567 ;; Tracked objects:
 13568 ;;		On entry : 0/0
 13569 ;;		On exit  : 0/0
 13570 ;;		Unchanged: 0/0
 13571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13576 ;;Total ram usage:        2 bytes
 13577 ;; Hardware stack levels used: 1
 13578 ;; Hardware stack levels required when called: 9
 13579 ;; This function calls:
 13580 ;;		_TMR5_SetGateInterruptHandler
 13581 ;; This function is called by:
 13582 ;;		_SYSTEM_Initialize
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           	psect	text57
 13587  005612                     __ptext57:
 13588                           	callstack 0
 13589  005612                     _TMR5_Initialize:
 13590                           	callstack 20
 13591  005612                     
 13592                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13593  005612  0EC0               	movlw	192
 13594  005614  6E9B               	movwf	155,c	;volatile
 13595                           
 13596                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13597  005616  0E00               	movlw	0
 13598  005618  6E9C               	movwf	156,c	;volatile
 13599                           
 13600                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13601  00561A  0E05               	movlw	5
 13602  00561C  6E9D               	movwf	157,c	;volatile
 13603                           
 13604                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13605  00561E  0E00               	movlw	0
 13606  005620  6E99               	movwf	153,c	;volatile
 13607                           
 13608                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13609  005622  0E00               	movlw	0
 13610  005624  6E98               	movwf	152,c	;volatile
 13611  005626                     
 13612                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13613  005626  0139               	movlb	57	; () banked
 13614  005628  9DA8               	bcf	168,6,b	;volatile
 13615  00562A                     
 13616                           ; BSR set to: 57
 13617                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13618  00562A  5098               	movf	152,w,c	;volatile
 13619  00562C  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13620  005632  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13621  005634  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13622  005638  6A16               	clrf	??_TMR5_Initialize^0,c
 13623  00563A  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13624  00563C  0101               	movlb	1	; () banked
 13625  00563E  6F8A               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13626  005640  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13627  005642  6F8B               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13628  005644                     
 13629                           ; BSR set to: 1
 13630                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13631  005644  0139               	movlb	57	; () banked
 13632  005646  9FA8               	bcf	168,7,b	;volatile
 13633  005648                     
 13634                           ; BSR set to: 57
 13635                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13636  005648  8F98               	bsf	152,7,b	;volatile
 13637  00564A                     
 13638                           ; BSR set to: 57
 13639                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13640  00564A  0E68               	movlw	low _TMR5_DefaultGateInterruptHandler
 13641  00564C  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13642  00564E  0E5D               	movlw	high _TMR5_DefaultGateInterruptHandler
 13643  005650  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13644  005652  EC3A  F02F         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13645  005656                     
 13646                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13647  005656  0E03               	movlw	3
 13648  005658  6E9A               	movwf	154,c	;volatile
 13649  00565A  0012               	return		;funcret
 13650  00565C                     __end_of_TMR5_Initialize:
 13651                           	callstack 0
 13652                           
 13653 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13654 ;; Defined at:
 13655 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13656 ;; Parameters:    Size  Location     Type
 13657 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13658 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;		None
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  1    wreg      void 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2, status,0
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13674 ;;Total ram usage:        2 bytes
 13675 ;; Hardware stack levels used: 1
 13676 ;; Hardware stack levels required when called: 8
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_TMR5_Initialize
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text58
 13685  005E74                     __ptext58:
 13686                           	callstack 0
 13687  005E74                     _TMR5_SetGateInterruptHandler:
 13688                           	callstack 20
 13689  005E74                     
 13690                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13691  005E74  C014  F188         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13692  005E78  C015  F189         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13693  005E7C  0012               	return		;funcret
 13694  005E7E                     __end_of_TMR5_SetGateInterruptHandler:
 13695                           	callstack 0
 13696                           
 13697 ;; *************** function _TMR4_Initialize *****************
 13698 ;; Defined at:
 13699 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;		None
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;		None
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      void 
 13706 ;; Registers used:
 13707 ;;		wreg, status,2, status,0, cstack
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;Total ram usage:        0 bytes
 13718 ;; Hardware stack levels used: 1
 13719 ;; Hardware stack levels required when called: 9
 13720 ;; This function calls:
 13721 ;;		_TMR4_SetInterruptHandler
 13722 ;; This function is called by:
 13723 ;;		_SYSTEM_Initialize
 13724 ;; This function uses a non-reentrant model
 13725 ;;
 13726                           
 13727                           	psect	text59
 13728  005C00                     __ptext59:
 13729                           	callstack 0
 13730  005C00                     _TMR4_Initialize:
 13731                           	callstack 20
 13732  005C00                     
 13733                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13734  005C00  0E01               	movlw	1
 13735  005C02  6EA2               	movwf	162,c	;volatile
 13736                           
 13737                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13738  005C04  0E00               	movlw	0
 13739  005C06  6EA1               	movwf	161,c	;volatile
 13740                           
 13741                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13742  005C08  0E00               	movlw	0
 13743  005C0A  6EA3               	movwf	163,c	;volatile
 13744                           
 13745                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13746  005C0C  0EF9               	movlw	249
 13747  005C0E  6E9F               	movwf	159,c	;volatile
 13748                           
 13749                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13750  005C10  0E00               	movlw	0
 13751  005C12  6E9E               	movwf	158,c	;volatile
 13752  005C14                     
 13753                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13754  005C14  0139               	movlb	57	; () banked
 13755  005C16  91A7               	bcf	167,0,b	;volatile
 13756  005C18                     
 13757                           ; BSR set to: 57
 13758                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13759  005C18  8197               	bsf	151,0,b	;volatile
 13760  005C1A                     
 13761                           ; BSR set to: 57
 13762                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13763  005C1A  0EAE               	movlw	low _TMR4_DefaultInterruptHandler
 13764  005C1C  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13765  005C1E  0E5E               	movlw	high _TMR4_DefaultInterruptHandler
 13766  005C20  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13767  005C22  EC3F  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
 13768  005C26                     
 13769                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13770  005C26  0EE0               	movlw	224
 13771  005C28  6EA0               	movwf	160,c	;volatile
 13772  005C2A  0012               	return		;funcret
 13773  005C2C                     __end_of_TMR4_Initialize:
 13774                           	callstack 0
 13775                           
 13776 ;; *************** function _TMR4_SetInterruptHandler *****************
 13777 ;; Defined at:
 13778 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13779 ;; Parameters:    Size  Location     Type
 13780 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13781 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;		None
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  1    wreg      void 
 13786 ;; Registers used:
 13787 ;;		wreg, status,2, status,0
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;Total ram usage:        2 bytes
 13798 ;; Hardware stack levels used: 1
 13799 ;; Hardware stack levels required when called: 8
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_TMR4_Initialize
 13804 ;;		_main
 13805 ;; This function uses a non-reentrant model
 13806 ;;
 13807                           
 13808                           	psect	text60
 13809  005E7E                     __ptext60:
 13810                           	callstack 0
 13811  005E7E                     _TMR4_SetInterruptHandler:
 13812                           	callstack 22
 13813  005E7E                     
 13814                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13815  005E7E  C014  F184         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13816  005E82  C015  F185         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13817  005E86  0012               	return		;funcret
 13818  005E88                     __end_of_TMR4_SetInterruptHandler:
 13819                           	callstack 0
 13820                           
 13821 ;; *************** function _TMR3_Initialize *****************
 13822 ;; Defined at:
 13823 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;		None
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;		None
 13828 ;; Return value:  Size  Location     Type
 13829 ;;                  1    wreg      void 
 13830 ;; Registers used:
 13831 ;;		wreg, status,2, status,0
 13832 ;; Tracked objects:
 13833 ;;		On entry : 0/0
 13834 ;;		On exit  : 0/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13841 ;;Total ram usage:        2 bytes
 13842 ;; Hardware stack levels used: 1
 13843 ;; Hardware stack levels required when called: 8
 13844 ;; This function calls:
 13845 ;;		Nothing
 13846 ;; This function is called by:
 13847 ;;		_SYSTEM_Initialize
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851                           	psect	text61
 13852  0058D6                     __ptext61:
 13853                           	callstack 0
 13854  0058D6                     _TMR3_Initialize:
 13855                           	callstack 21
 13856  0058D6                     
 13857                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13858  0058D6  0E00               	movlw	0
 13859  0058D8  6EA7               	movwf	167,c	;volatile
 13860                           
 13861                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13862  0058DA  0E00               	movlw	0
 13863  0058DC  6EA8               	movwf	168,c	;volatile
 13864                           
 13865                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13866  0058DE  0E05               	movlw	5
 13867  0058E0  6EA9               	movwf	169,c	;volatile
 13868                           
 13869                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13870  0058E2  0E00               	movlw	0
 13871  0058E4  6EA5               	movwf	165,c	;volatile
 13872                           
 13873                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13874  0058E6  0E00               	movlw	0
 13875  0058E8  6EA4               	movwf	164,c	;volatile
 13876  0058EA                     
 13877                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13878  0058EA  0139               	movlb	57	; () banked
 13879  0058EC  9DA6               	bcf	166,6,b	;volatile
 13880  0058EE                     
 13881                           ; BSR set to: 57
 13882                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13883  0058EE  50A4               	movf	164,w,c	;volatile
 13884  0058F0  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13885  0058F6  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13886  0058F8  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13887  0058FC  6A14               	clrf	??_TMR3_Initialize^0,c
 13888  0058FE  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13889  005900  0101               	movlb	1	; () banked
 13890  005902  6F86               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13891  005904  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13892  005906  6F87               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13893  005908                     
 13894                           ; BSR set to: 1
 13895                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13896  005908  0E01               	movlw	1
 13897  00590A  6EA6               	movwf	166,c	;volatile
 13898  00590C                     
 13899                           ; BSR set to: 1
 13900  00590C  0012               	return		;funcret
 13901  00590E                     __end_of_TMR3_Initialize:
 13902                           	callstack 0
 13903                           
 13904 ;; *************** function _TMR2_Initialize *****************
 13905 ;; Defined at:
 13906 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;		None
 13909 ;; Auto vars:     Size  Location     Type
 13910 ;;		None
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      void 
 13913 ;; Registers used:
 13914 ;;		wreg, status,2
 13915 ;; Tracked objects:
 13916 ;;		On entry : 0/0
 13917 ;;		On exit  : 0/0
 13918 ;;		Unchanged: 0/0
 13919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;Total ram usage:        0 bytes
 13925 ;; Hardware stack levels used: 1
 13926 ;; Hardware stack levels required when called: 8
 13927 ;; This function calls:
 13928 ;;		Nothing
 13929 ;; This function is called by:
 13930 ;;		_SYSTEM_Initialize
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text62
 13935  005D86                     __ptext62:
 13936                           	callstack 0
 13937  005D86                     _TMR2_Initialize:
 13938                           	callstack 21
 13939  005D86                     
 13940                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13941  005D86  0E05               	movlw	5
 13942  005D88  6EAE               	movwf	174,c	;volatile
 13943                           
 13944                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13945  005D8A  0E00               	movlw	0
 13946  005D8C  6EAD               	movwf	173,c	;volatile
 13947                           
 13948                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13949  005D8E  0E00               	movlw	0
 13950  005D90  6EAF               	movwf	175,c	;volatile
 13951  005D92                     
 13952                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13953  005D92  68AB               	setf	171,c	;volatile
 13954                           
 13955                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13956  005D94  0E00               	movlw	0
 13957  005D96  6EAA               	movwf	170,c	;volatile
 13958  005D98                     
 13959                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13960  005D98  0139               	movlb	57	; () banked
 13961  005D9A  95A4               	bcf	164,2,b	;volatile
 13962                           
 13963                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13964  005D9C  0EB0               	movlw	176
 13965  005D9E  6EAC               	movwf	172,c	;volatile
 13966  005DA0                     
 13967                           ; BSR set to: 57
 13968  005DA0  0012               	return		;funcret
 13969  005DA2                     __end_of_TMR2_Initialize:
 13970                           	callstack 0
 13971                           
 13972 ;; *************** function _SMT1_Initialize *****************
 13973 ;; Defined at:
 13974 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13975 ;; Parameters:    Size  Location     Type
 13976 ;;		None
 13977 ;; Auto vars:     Size  Location     Type
 13978 ;;		None
 13979 ;; Return value:  Size  Location     Type
 13980 ;;                  1    wreg      void 
 13981 ;; Registers used:
 13982 ;;		wreg, status,2
 13983 ;; Tracked objects:
 13984 ;;		On entry : 0/0
 13985 ;;		On exit  : 0/0
 13986 ;;		Unchanged: 0/0
 13987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;Total ram usage:        0 bytes
 13993 ;; Hardware stack levels used: 1
 13994 ;; Hardware stack levels required when called: 8
 13995 ;; This function calls:
 13996 ;;		Nothing
 13997 ;; This function is called by:
 13998 ;;		_SYSTEM_Initialize
 13999 ;; This function uses a non-reentrant model
 14000 ;;
 14001                           
 14002                           	psect	text63
 14003  005AE6                     __ptext63:
 14004                           	callstack 0
 14005  005AE6                     _SMT1_Initialize:
 14006                           	callstack 21
 14007  005AE6                     
 14008                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14009  005AE6  0E80               	movlw	128
 14010  005AE8  013F               	movlb	63	; () banked
 14011  005AEA  6F1E               	movwf	30,b	;volatile
 14012                           
 14013                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14014  005AEC  0E42               	movlw	66
 14015  005AEE  6F1F               	movwf	31,b	;volatile
 14016                           
 14017                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14018  005AF0  0E00               	movlw	0
 14019  005AF2  6F20               	movwf	32,b	;volatile
 14020                           
 14021                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14022  005AF4  0E04               	movlw	4
 14023  005AF6  6F21               	movwf	33,b	;volatile
 14024                           
 14025                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14026  005AF8  0E00               	movlw	0
 14027  005AFA  6F23               	movwf	35,b	;volatile
 14028                           
 14029                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14030  005AFC  0E00               	movlw	0
 14031  005AFE  6F22               	movwf	34,b	;volatile
 14032                           
 14033                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14034  005B00  0E01               	movlw	1
 14035  005B02  6F1D               	movwf	29,b	;volatile
 14036  005B04                     
 14037                           ; BSR set to: 63
 14038                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14039  005B04  691C               	setf	28,b	;volatile
 14040  005B06                     
 14041                           ; BSR set to: 63
 14042                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14043  005B06  691B               	setf	27,b	;volatile
 14044  005B08                     
 14045                           ; BSR set to: 63
 14046                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14047  005B08  0139               	movlb	57	; () banked
 14048  005B0A  8B91               	bsf	145,5,b	;volatile
 14049  005B0C                     
 14050                           ; BSR set to: 57
 14051                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14052  005B0C  8F91               	bsf	145,7,b	;volatile
 14053  005B0E                     
 14054                           ; BSR set to: 57
 14055                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14056  005B0E  8D91               	bsf	145,6,b	;volatile
 14057  005B10                     
 14058                           ; BSR set to: 57
 14059                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14060  005B10  013F               	movlb	63	; () banked
 14061  005B12  8F1F               	bsf	31,7,b	;volatile
 14062  005B14                     
 14063                           ; BSR set to: 63
 14064  005B14  0012               	return		;funcret
 14065  005B16                     __end_of_SMT1_Initialize:
 14066                           	callstack 0
 14067                           
 14068 ;; *************** function _PWM8_Initialize *****************
 14069 ;; Defined at:
 14070 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14071 ;; Parameters:    Size  Location     Type
 14072 ;;		None
 14073 ;; Auto vars:     Size  Location     Type
 14074 ;;		None
 14075 ;; Return value:  Size  Location     Type
 14076 ;;                  1    wreg      void 
 14077 ;; Registers used:
 14078 ;;		wreg, status,2
 14079 ;; Tracked objects:
 14080 ;;		On entry : 0/0
 14081 ;;		On exit  : 0/0
 14082 ;;		Unchanged: 0/0
 14083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;Total ram usage:        0 bytes
 14089 ;; Hardware stack levels used: 1
 14090 ;; Hardware stack levels required when called: 8
 14091 ;; This function calls:
 14092 ;;		Nothing
 14093 ;; This function is called by:
 14094 ;;		_SYSTEM_Initialize
 14095 ;; This function uses a non-reentrant model
 14096 ;;
 14097                           
 14098                           	psect	text64
 14099  005DA2                     __ptext64:
 14100                           	callstack 0
 14101  005DA2                     _PWM8_Initialize:
 14102                           	callstack 21
 14103  005DA2                     
 14104                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14105  005DA2  0E80               	movlw	128
 14106  005DA4  6E62               	movwf	98,c	;volatile
 14107                           
 14108                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14109  005DA6  0E00               	movlw	0
 14110  005DA8  6E61               	movwf	97,c	;volatile
 14111                           
 14112                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14113  005DAA  0E00               	movlw	0
 14114  005DAC  6E60               	movwf	96,c	;volatile
 14115                           
 14116                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14117  005DAE  013F               	movlb	63	; () banked
 14118  005DB0  515F               	movf	95,w,b	;volatile
 14119  005DB2  0B3F               	andlw	-193
 14120  005DB4  0980               	iorlw	128
 14121  005DB6  6F5F               	movwf	95,b	;volatile
 14122  005DB8                     
 14123                           ; BSR set to: 63
 14124  005DB8  0012               	return		;funcret
 14125  005DBA                     __end_of_PWM8_Initialize:
 14126                           	callstack 0
 14127                           
 14128 ;; *************** function _PWM7_Initialize *****************
 14129 ;; Defined at:
 14130 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;		None
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;		None
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  1    wreg      void 
 14137 ;; Registers used:
 14138 ;;		wreg, status,2
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/0
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14148 ;;Total ram usage:        0 bytes
 14149 ;; Hardware stack levels used: 1
 14150 ;; Hardware stack levels required when called: 8
 14151 ;; This function calls:
 14152 ;;		Nothing
 14153 ;; This function is called by:
 14154 ;;		_SYSTEM_Initialize
 14155 ;; This function uses a non-reentrant model
 14156 ;;
 14157                           
 14158                           	psect	text65
 14159  005DBA                     __ptext65:
 14160                           	callstack 0
 14161  005DBA                     _PWM7_Initialize:
 14162                           	callstack 21
 14163  005DBA                     
 14164                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14165  005DBA  0E80               	movlw	128
 14166  005DBC  6E66               	movwf	102,c	;volatile
 14167                           
 14168                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14169  005DBE  0E00               	movlw	0
 14170  005DC0  6E65               	movwf	101,c	;volatile
 14171                           
 14172                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14173  005DC2  0E00               	movlw	0
 14174  005DC4  6E64               	movwf	100,c	;volatile
 14175                           
 14176                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14177  005DC6  013F               	movlb	63	; () banked
 14178  005DC8  515F               	movf	95,w,b	;volatile
 14179  005DCA  0BCF               	andlw	-49
 14180  005DCC  0920               	iorlw	32
 14181  005DCE  6F5F               	movwf	95,b	;volatile
 14182  005DD0                     
 14183                           ; BSR set to: 63
 14184  005DD0  0012               	return		;funcret
 14185  005DD2                     __end_of_PWM7_Initialize:
 14186                           	callstack 0
 14187                           
 14188 ;; *************** function _PWM6_Initialize *****************
 14189 ;; Defined at:
 14190 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14191 ;; Parameters:    Size  Location     Type
 14192 ;;		None
 14193 ;; Auto vars:     Size  Location     Type
 14194 ;;		None
 14195 ;; Return value:  Size  Location     Type
 14196 ;;                  1    wreg      void 
 14197 ;; Registers used:
 14198 ;;		wreg, status,2
 14199 ;; Tracked objects:
 14200 ;;		On entry : 0/0
 14201 ;;		On exit  : 0/0
 14202 ;;		Unchanged: 0/0
 14203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;Total ram usage:        0 bytes
 14209 ;; Hardware stack levels used: 1
 14210 ;; Hardware stack levels required when called: 8
 14211 ;; This function calls:
 14212 ;;		Nothing
 14213 ;; This function is called by:
 14214 ;;		_SYSTEM_Initialize
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	text66
 14219  005DD2                     __ptext66:
 14220                           	callstack 0
 14221  005DD2                     _PWM6_Initialize:
 14222                           	callstack 21
 14223  005DD2                     
 14224                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14225  005DD2  0E80               	movlw	128
 14226  005DD4  6E6A               	movwf	106,c	;volatile
 14227                           
 14228                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14229  005DD6  0E59               	movlw	89
 14230  005DD8  6E69               	movwf	105,c	;volatile
 14231                           
 14232                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14233  005DDA  0E40               	movlw	64
 14234  005DDC  6E68               	movwf	104,c	;volatile
 14235                           
 14236                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14237  005DDE  013F               	movlb	63	; () banked
 14238  005DE0  515F               	movf	95,w,b	;volatile
 14239  005DE2  0BF3               	andlw	-13
 14240  005DE4  0904               	iorlw	4
 14241  005DE6  6F5F               	movwf	95,b	;volatile
 14242  005DE8                     
 14243                           ; BSR set to: 63
 14244  005DE8  0012               	return		;funcret
 14245  005DEA                     __end_of_PWM6_Initialize:
 14246                           	callstack 0
 14247                           
 14248 ;; *************** function _PWM5_Initialize *****************
 14249 ;; Defined at:
 14250 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;		None
 14253 ;; Auto vars:     Size  Location     Type
 14254 ;;		None
 14255 ;; Return value:  Size  Location     Type
 14256 ;;                  1    wreg      void 
 14257 ;; Registers used:
 14258 ;;		wreg, status,2
 14259 ;; Tracked objects:
 14260 ;;		On entry : 0/0
 14261 ;;		On exit  : 0/0
 14262 ;;		Unchanged: 0/0
 14263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14268 ;;Total ram usage:        0 bytes
 14269 ;; Hardware stack levels used: 1
 14270 ;; Hardware stack levels required when called: 8
 14271 ;; This function calls:
 14272 ;;		Nothing
 14273 ;; This function is called by:
 14274 ;;		_SYSTEM_Initialize
 14275 ;; This function uses a non-reentrant model
 14276 ;;
 14277                           
 14278                           	psect	text67
 14279  005DEA                     __ptext67:
 14280                           	callstack 0
 14281  005DEA                     _PWM5_Initialize:
 14282                           	callstack 21
 14283  005DEA                     
 14284                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14285  005DEA  0E80               	movlw	128
 14286  005DEC  6E6E               	movwf	110,c	;volatile
 14287                           
 14288                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14289  005DEE  0E59               	movlw	89
 14290  005DF0  6E6D               	movwf	109,c	;volatile
 14291                           
 14292                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14293  005DF2  0E40               	movlw	64
 14294  005DF4  6E6C               	movwf	108,c	;volatile
 14295                           
 14296                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14297  005DF6  013F               	movlb	63	; () banked
 14298  005DF8  515F               	movf	95,w,b	;volatile
 14299  005DFA  0BFC               	andlw	-4
 14300  005DFC  0901               	iorlw	1
 14301  005DFE  6F5F               	movwf	95,b	;volatile
 14302  005E00                     
 14303                           ; BSR set to: 63
 14304  005E00  0012               	return		;funcret
 14305  005E02                     __end_of_PWM5_Initialize:
 14306                           	callstack 0
 14307                           
 14308 ;; *************** function _PMD_Initialize *****************
 14309 ;; Defined at:
 14310 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;		None
 14313 ;; Auto vars:     Size  Location     Type
 14314 ;;		None
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  1    wreg      void 
 14317 ;; Registers used:
 14318 ;;		wreg, status,2
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;Total ram usage:        0 bytes
 14329 ;; Hardware stack levels used: 1
 14330 ;; Hardware stack levels required when called: 8
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_SYSTEM_Initialize
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text68
 14339  005D00                     __ptext68:
 14340                           	callstack 0
 14341  005D00                     _PMD_Initialize:
 14342                           	callstack 21
 14343  005D00                     
 14344                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14345  005D00  0E00               	movlw	0
 14346  005D02  0139               	movlb	57	; () banked
 14347  005D04  6FC0               	movwf	192,b	;volatile
 14348                           
 14349                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14350  005D06  0E00               	movlw	0
 14351  005D08  6FC1               	movwf	193,b	;volatile
 14352                           
 14353                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14354  005D0A  0E00               	movlw	0
 14355  005D0C  6FC2               	movwf	194,b	;volatile
 14356                           
 14357                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14358  005D0E  0E00               	movlw	0
 14359  005D10  6FC3               	movwf	195,b	;volatile
 14360                           
 14361                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14362  005D12  0E00               	movlw	0
 14363  005D14  6FC4               	movwf	196,b	;volatile
 14364                           
 14365                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14366  005D16  0E00               	movlw	0
 14367  005D18  6FC5               	movwf	197,b	;volatile
 14368                           
 14369                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14370  005D1A  0E00               	movlw	0
 14371  005D1C  6FC6               	movwf	198,b	;volatile
 14372                           
 14373                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14374  005D1E  0E00               	movlw	0
 14375  005D20  6FC7               	movwf	199,b	;volatile
 14376  005D22                     
 14377                           ; BSR set to: 57
 14378  005D22  0012               	return		;funcret
 14379  005D24                     __end_of_PMD_Initialize:
 14380                           	callstack 0
 14381                           
 14382 ;; *************** function _PIN_MANAGER_Initialize *****************
 14383 ;; Defined at:
 14384 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14385 ;; Parameters:    Size  Location     Type
 14386 ;;		None
 14387 ;; Auto vars:     Size  Location     Type
 14388 ;;		None
 14389 ;; Return value:  Size  Location     Type
 14390 ;;                  1    wreg      void 
 14391 ;; Registers used:
 14392 ;;		wreg, status,2
 14393 ;; Tracked objects:
 14394 ;;		On entry : 0/0
 14395 ;;		On exit  : 0/0
 14396 ;;		Unchanged: 0/0
 14397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14402 ;;Total ram usage:        0 bytes
 14403 ;; Hardware stack levels used: 1
 14404 ;; Hardware stack levels required when called: 8
 14405 ;; This function calls:
 14406 ;;		Nothing
 14407 ;; This function is called by:
 14408 ;;		_SYSTEM_Initialize
 14409 ;; This function uses a non-reentrant model
 14410 ;;
 14411                           
 14412                           	psect	text69
 14413  004C04                     __ptext69:
 14414                           	callstack 0
 14415  004C04                     _PIN_MANAGER_Initialize:
 14416                           	callstack 21
 14417  004C04                     
 14418                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14419  004C04  0E00               	movlw	0
 14420  004C06  6EBE               	movwf	190,c	;volatile
 14421                           
 14422                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14423  004C08  0E00               	movlw	0
 14424  004C0A  6EBD               	movwf	189,c	;volatile
 14425                           
 14426                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14427  004C0C  0E24               	movlw	36
 14428  004C0E  6EBA               	movwf	186,c	;volatile
 14429                           
 14430                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14431  004C10  0E00               	movlw	0
 14432  004C12  6EBB               	movwf	187,c	;volatile
 14433                           
 14434                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14435  004C14  0E00               	movlw	0
 14436  004C16  6EBC               	movwf	188,c	;volatile
 14437                           
 14438                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14439  004C18  0E07               	movlw	7
 14440  004C1A  6EC6               	movwf	198,c	;volatile
 14441                           
 14442                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14443  004C1C  0EC0               	movlw	192
 14444  004C1E  6EC2               	movwf	194,c	;volatile
 14445                           
 14446                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14447  004C20  0EF7               	movlw	247
 14448  004C22  6EC3               	movwf	195,c	;volatile
 14449  004C24                     
 14450                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14451  004C24  68C4               	setf	196,c	;volatile
 14452  004C26                     
 14453                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14454  004C26  68C5               	setf	197,c	;volatile
 14455                           
 14456                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14457  004C28  0E1F               	movlw	31
 14458  004C2A  013A               	movlb	58	; () banked
 14459  004C2C  6F70               	movwf	112,b	;volatile
 14460  004C2E                     
 14461                           ; BSR set to: 58
 14462                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14463  004C2E  6960               	setf	96,b	;volatile
 14464                           
 14465                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14466  004C30  0EC0               	movlw	192
 14467  004C32  6F50               	movwf	80,b	;volatile
 14468                           
 14469                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14470  004C34  0E07               	movlw	7
 14471  004C36  6F80               	movwf	128,b	;volatile
 14472                           
 14473                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14474  004C38  0E7F               	movlw	127
 14475  004C3A  6F40               	movwf	64,b	;volatile
 14476                           
 14477                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14478  004C3C  0E00               	movlw	0
 14479  004C3E  6F71               	movwf	113,b	;volatile
 14480                           
 14481                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14482  004C40  0E00               	movlw	0
 14483  004C42  6F81               	movwf	129,b	;volatile
 14484                           
 14485                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14486  004C44  0E00               	movlw	0
 14487  004C46  6F51               	movwf	81,b	;volatile
 14488                           
 14489                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14490  004C48  0E00               	movlw	0
 14491  004C4A  6F41               	movwf	65,b	;volatile
 14492                           
 14493                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14494  004C4C  0E00               	movlw	0
 14495  004C4E  6F61               	movwf	97,b	;volatile
 14496                           
 14497                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14498  004C50  0E00               	movlw	0
 14499  004C52  6F5A               	movwf	90,b	;volatile
 14500                           
 14501                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14502  004C54  0E00               	movlw	0
 14503  004C56  6F5B               	movwf	91,b	;volatile
 14504                           
 14505                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14506  004C58  0E00               	movlw	0
 14507  004C5A  6F6A               	movwf	106,b	;volatile
 14508                           
 14509                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14510  004C5C  0E00               	movlw	0
 14511  004C5E  6F6B               	movwf	107,b	;volatile
 14512                           
 14513                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14514  004C60  0E00               	movlw	0
 14515  004C62  6F7A               	movwf	122,b	;volatile
 14516                           
 14517                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14518  004C64  0E00               	movlw	0
 14519  004C66  6F7B               	movwf	123,b	;volatile
 14520                           
 14521                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14522  004C68  0E00               	movlw	0
 14523  004C6A  6F82               	movwf	130,b	;volatile
 14524                           
 14525                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14526  004C6C  0E00               	movlw	0
 14527  004C6E  6F42               	movwf	66,b	;volatile
 14528                           
 14529                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14530  004C70  0E00               	movlw	0
 14531  004C72  6F52               	movwf	82,b	;volatile
 14532                           
 14533                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14534  004C74  0E00               	movlw	0
 14535  004C76  6F62               	movwf	98,b	;volatile
 14536                           
 14537                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14538  004C78  0E00               	movlw	0
 14539  004C7A  6F72               	movwf	114,b	;volatile
 14540  004C7C                     
 14541                           ; BSR set to: 58
 14542                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14543  004C7C  6943               	setf	67,b	;volatile
 14544  004C7E                     
 14545                           ; BSR set to: 58
 14546                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14547  004C7E  6953               	setf	83,b	;volatile
 14548  004C80                     
 14549                           ; BSR set to: 58
 14550                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14551  004C80  6963               	setf	99,b	;volatile
 14552  004C82                     
 14553                           ; BSR set to: 58
 14554                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14555  004C82  6973               	setf	115,b	;volatile
 14556                           
 14557                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14558  004C84  0E07               	movlw	7
 14559  004C86  6F83               	movwf	131,b	;volatile
 14560  004C88                     
 14561                           ; BSR set to: 58
 14562                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14563  004C88  6944               	setf	68,b	;volatile
 14564  004C8A                     
 14565                           ; BSR set to: 58
 14566                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14567  004C8A  6954               	setf	84,b	;volatile
 14568  004C8C                     
 14569                           ; BSR set to: 58
 14570                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14571  004C8C  6964               	setf	100,b	;volatile
 14572  004C8E                     
 14573                           ; BSR set to: 58
 14574                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14575  004C8E  6974               	setf	116,b	;volatile
 14576                           
 14577                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14578  004C90  0E0F               	movlw	15
 14579  004C92  6F84               	movwf	132,b	;volatile
 14580                           
 14581                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14582  004C94  0E1F               	movlw	31
 14583  004C96  6FCF               	movwf	207,b	;volatile
 14584                           
 14585                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14586  004C98  0E09               	movlw	9
 14587  004C9A  6FDC               	movwf	220,b	;volatile
 14588                           
 14589                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14590  004C9C  0E0E               	movlw	14
 14591  004C9E  6F01               	movwf	1,b	;volatile
 14592                           
 14593                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14594  004CA0  0E0A               	movlw	10
 14595  004CA2  6FE5               	movwf	229,b	;volatile
 14596                           
 14597                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14598  004CA4  0E0D               	movlw	13
 14599  004CA6  6F00               	movwf	0,b	;volatile
 14600                           
 14601                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14602  004CA8  0E1D               	movlw	29
 14603  004CAA  6FC9               	movwf	201,b	;volatile
 14604                           
 14605                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14606  004CAC  0E10               	movlw	16
 14607  004CAE  6F04               	movwf	4,b	;volatile
 14608                           
 14609                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14610  004CB0  0E07               	movlw	7
 14611  004CB2  6FD9               	movwf	217,b	;volatile
 14612                           
 14613                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14614  004CB4  0E09               	movlw	9
 14615  004CB6  6FD1               	movwf	209,b	;volatile
 14616                           
 14617                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14618  004CB8  0E0F               	movlw	15
 14619  004CBA  6F03               	movwf	3,b	;volatile
 14620                           
 14621                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14622  004CBC  0E13               	movlw	19
 14623  004CBE  6F0B               	movwf	11,b	;volatile
 14624                           
 14625                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14626  004CC0  0E08               	movlw	8
 14627  004CC2  6FDB               	movwf	219,b	;volatile
 14628                           
 14629                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14630  004CC4  0E08               	movlw	8
 14631  004CC6  6FD2               	movwf	210,b	;volatile
 14632                           
 14633                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14634  004CC8  0E1E               	movlw	30
 14635  004CCA  6FD0               	movwf	208,b	;volatile
 14636  004CCC                     
 14637                           ; BSR set to: 58
 14638  004CCC  0012               	return		;funcret
 14639  004CCE                     __end_of_PIN_MANAGER_Initialize:
 14640                           	callstack 0
 14641                           
 14642 ;; *************** function _OSCILLATOR_Initialize *****************
 14643 ;; Defined at:
 14644 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14645 ;; Parameters:    Size  Location     Type
 14646 ;;		None
 14647 ;; Auto vars:     Size  Location     Type
 14648 ;;		None
 14649 ;; Return value:  Size  Location     Type
 14650 ;;                  1    wreg      void 
 14651 ;; Registers used:
 14652 ;;		wreg, status,2
 14653 ;; Tracked objects:
 14654 ;;		On entry : 0/0
 14655 ;;		On exit  : 0/0
 14656 ;;		Unchanged: 0/0
 14657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14662 ;;Total ram usage:        0 bytes
 14663 ;; Hardware stack levels used: 1
 14664 ;; Hardware stack levels required when called: 8
 14665 ;; This function calls:
 14666 ;;		Nothing
 14667 ;; This function is called by:
 14668 ;;		_SYSTEM_Initialize
 14669 ;; This function uses a non-reentrant model
 14670 ;;
 14671                           
 14672                           	psect	text70
 14673  005E02                     __ptext70:
 14674                           	callstack 0
 14675  005E02                     _OSCILLATOR_Initialize:
 14676                           	callstack 21
 14677  005E02                     
 14678                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14679  005E02  0E60               	movlw	96
 14680  005E04  0139               	movlb	57	; () banked
 14681  005E06  6FD9               	movwf	217,b	;volatile
 14682                           
 14683                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14684  005E08  0E00               	movlw	0
 14685  005E0A  6FDB               	movwf	219,b	;volatile
 14686                           
 14687                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14688  005E0C  0E00               	movlw	0
 14689  005E0E  6FDD               	movwf	221,b	;volatile
 14690                           
 14691                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14692  005E10  0E08               	movlw	8
 14693  005E12  6FDF               	movwf	223,b	;volatile
 14694                           
 14695                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14696  005E14  0E00               	movlw	0
 14697  005E16  6FDE               	movwf	222,b	;volatile
 14698  005E18                     
 14699                           ; BSR set to: 57
 14700  005E18  0012               	return		;funcret
 14701  005E1A                     __end_of_OSCILLATOR_Initialize:
 14702                           	callstack 0
 14703                           
 14704 ;; *************** function _INTERRUPT_Initialize *****************
 14705 ;; Defined at:
 14706 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;  state           1   19[COMRAM] _Bool 
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      void 
 14713 ;; Registers used:
 14714 ;;		wreg, status,2
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;Total ram usage:        1 bytes
 14725 ;; Hardware stack levels used: 1
 14726 ;; Hardware stack levels required when called: 8
 14727 ;; This function calls:
 14728 ;;		Nothing
 14729 ;; This function is called by:
 14730 ;;		_SYSTEM_Initialize
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734                           	psect	text71
 14735  00557C                     __ptext71:
 14736                           	callstack 0
 14737  00557C                     _INTERRUPT_Initialize:
 14738                           	callstack 21
 14739  00557C                     
 14740                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14741  00557C  8AD2               	bsf	210,5,c	;volatile
 14742  00557E                     
 14743                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14744  00557E  0E00               	movlw	0
 14745  005580  BED2               	btfsc	16338,7,c	;volatile
 14746  005582  0E01               	movlw	1
 14747  005584  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14748  005586                     
 14749                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14750  005586  9ED2               	bcf	16338,7,c	;volatile
 14751                           
 14752                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14753  005588  0E55               	movlw	85
 14754  00558A  6ED4               	movwf	212,c	;volatile
 14755                           
 14756                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14757  00558C  0EAA               	movlw	170
 14758  00558E  6ED4               	movwf	212,c	;volatile
 14759  005590                     
 14760                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14761  005590  90D4               	bcf	212,0,c	;volatile
 14762                           
 14763                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14764  005592  0E00               	movlw	0
 14765  005594  6ED7               	movwf	215,c	;volatile
 14766                           
 14767                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14768  005596  0E00               	movlw	0
 14769  005598  6ED6               	movwf	214,c	;volatile
 14770                           
 14771                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14772  00559A  0E08               	movlw	8
 14773  00559C  6ED5               	movwf	213,c	;volatile
 14774                           
 14775                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14776  00559E  0E55               	movlw	85
 14777  0055A0  6ED4               	movwf	212,c	;volatile
 14778                           
 14779                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14780  0055A2  0EAA               	movlw	170
 14781  0055A4  6ED4               	movwf	212,c	;volatile
 14782  0055A6                     
 14783                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14784  0055A6  80D4               	bsf	212,0,c	;volatile
 14785  0055A8                     
 14786                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14787  0055A8  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14788  0055AA  D002               	bra	u2845
 14789  0055AC  9ED2               	bcf	16338,7,c	;volatile
 14790  0055AE  D001               	bra	u2846
 14791  0055B0                     u2845:
 14792  0055B0  8ED2               	bsf	16338,7,c	;volatile
 14793  0055B2                     u2846:
 14794  0055B2                     
 14795                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14796  0055B2  0139               	movlb	57	; () banked
 14797  0055B4  9983               	bcf	131,4,b	;volatile
 14798  0055B6                     
 14799                           ; BSR set to: 57
 14800                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14801  0055B6  9783               	bcf	131,3,b	;volatile
 14802  0055B8                     
 14803                           ; BSR set to: 57
 14804                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14805  0055B8  8F81               	bsf	129,7,b	;volatile
 14806  0055BA                     
 14807                           ; BSR set to: 57
 14808                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14809  0055BA  8B81               	bsf	129,5,b	;volatile
 14810  0055BC                     
 14811                           ; BSR set to: 57
 14812                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14813  0055BC  8D81               	bsf	129,6,b	;volatile
 14814  0055BE                     
 14815                           ; BSR set to: 57
 14816                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14817  0055BE  818A               	bsf	138,0,b	;volatile
 14818  0055C0                     
 14819                           ; BSR set to: 57
 14820                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14821  0055C0  8F88               	bsf	136,7,b	;volatile
 14822  0055C2                     
 14823                           ; BSR set to: 57
 14824                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14825  0055C2  9187               	bcf	135,0,b	;volatile
 14826  0055C4                     
 14827                           ; BSR set to: 57
 14828                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14829  0055C4  8389               	bsf	137,1,b	;volatile
 14830  0055C6                     
 14831                           ; BSR set to: 57
 14832  0055C6  0012               	return		;funcret
 14833  0055C8                     __end_of_INTERRUPT_Initialize:
 14834                           	callstack 0
 14835                           
 14836 ;; *************** function _CLC3_Initialize *****************
 14837 ;; Defined at:
 14838 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14839 ;; Parameters:    Size  Location     Type
 14840 ;;		None
 14841 ;; Auto vars:     Size  Location     Type
 14842 ;;		None
 14843 ;; Return value:  Size  Location     Type
 14844 ;;                  1    wreg      void 
 14845 ;; Registers used:
 14846 ;;		wreg, status,2
 14847 ;; Tracked objects:
 14848 ;;		On entry : 0/0
 14849 ;;		On exit  : 0/0
 14850 ;;		Unchanged: 0/0
 14851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14856 ;;Total ram usage:        0 bytes
 14857 ;; Hardware stack levels used: 1
 14858 ;; Hardware stack levels required when called: 8
 14859 ;; This function calls:
 14860 ;;		Nothing
 14861 ;; This function is called by:
 14862 ;;		_SYSTEM_Initialize
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           	psect	text72
 14867  005C2C                     __ptext72:
 14868                           	callstack 0
 14869  005C2C                     _CLC3_Initialize:
 14870                           	callstack 21
 14871  005C2C                     
 14872                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14873  005C2C  0E00               	movlw	0
 14874  005C2E  013C               	movlb	60	; () banked
 14875  005C30  6F61               	movwf	97,b	;volatile
 14876                           
 14877                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14878  005C32  0E03               	movlw	3
 14879  005C34  6F62               	movwf	98,b	;volatile
 14880                           
 14881                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14882  005C36  0E02               	movlw	2
 14883  005C38  6F63               	movwf	99,b	;volatile
 14884                           
 14885                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14886  005C3A  0E00               	movlw	0
 14887  005C3C  6F64               	movwf	100,b	;volatile
 14888                           
 14889                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14890  005C3E  0E00               	movlw	0
 14891  005C40  6F65               	movwf	101,b	;volatile
 14892                           
 14893                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14894  005C42  0E02               	movlw	2
 14895  005C44  6F66               	movwf	102,b	;volatile
 14896                           
 14897                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14898  005C46  0E08               	movlw	8
 14899  005C48  6F67               	movwf	103,b	;volatile
 14900                           
 14901                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14902  005C4A  0E00               	movlw	0
 14903  005C4C  6F68               	movwf	104,b	;volatile
 14904                           
 14905                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14906  005C4E  0E00               	movlw	0
 14907  005C50  6F69               	movwf	105,b	;volatile
 14908                           
 14909                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14910  005C52  0E85               	movlw	133
 14911  005C54  6F60               	movwf	96,b	;volatile
 14912  005C56                     
 14913                           ; BSR set to: 60
 14914  005C56  0012               	return		;funcret
 14915  005C58                     __end_of_CLC3_Initialize:
 14916                           	callstack 0
 14917                           
 14918 ;; *************** function _CCP4_Initialize *****************
 14919 ;; Defined at:
 14920 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14921 ;; Parameters:    Size  Location     Type
 14922 ;;		None
 14923 ;; Auto vars:     Size  Location     Type
 14924 ;;		None
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      void 
 14927 ;; Registers used:
 14928 ;;		wreg, status,2, status,0, cstack
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/0
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14938 ;;Total ram usage:        0 bytes
 14939 ;; Hardware stack levels used: 1
 14940 ;; Hardware stack levels required when called: 9
 14941 ;; This function calls:
 14942 ;;		_CCP4_SetCallBack
 14943 ;; This function is called by:
 14944 ;;		_SYSTEM_Initialize
 14945 ;; This function uses a non-reentrant model
 14946 ;;
 14947                           
 14948                           	psect	text73
 14949  005B76                     __ptext73:
 14950                           	callstack 0
 14951  005B76                     _CCP4_Initialize:
 14952                           	callstack 20
 14953  005B76                     
 14954                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14955  005B76  0E83               	movlw	131
 14956  005B78  6E72               	movwf	114,c	;volatile
 14957                           
 14958                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14959  005B7A  0E00               	movlw	0
 14960  005B7C  6E73               	movwf	115,c	;volatile
 14961                           
 14962                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14963  005B7E  0E00               	movlw	0
 14964  005B80  6E71               	movwf	113,c	;volatile
 14965                           
 14966                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14967  005B82  0E00               	movlw	0
 14968  005B84  6E70               	movwf	112,c	;volatile
 14969  005B86                     
 14970                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14971  005B86  0E46               	movlw	low _CCP4_DefaultCallBack
 14972  005B88  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14973  005B8A  0E5B               	movlw	high _CCP4_DefaultCallBack
 14974  005B8C  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14975  005B8E  EC44  F02F         	call	_CCP4_SetCallBack	;wreg free
 14976  005B92                     
 14977                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14978  005B92  013F               	movlb	63	; () banked
 14979  005B94  515E               	movf	94,w,b	;volatile
 14980  005B96  0B3F               	andlw	-193
 14981  005B98  0980               	iorlw	128
 14982  005B9A  6F5E               	movwf	94,b	;volatile
 14983  005B9C                     
 14984                           ; BSR set to: 63
 14985                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14986  005B9C  0139               	movlb	57	; () banked
 14987  005B9E  91AA               	bcf	170,0,b	;volatile
 14988  005BA0                     
 14989                           ; BSR set to: 57
 14990                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14991  005BA0  819A               	bsf	154,0,b	;volatile
 14992  005BA2                     
 14993                           ; BSR set to: 57
 14994  005BA2  0012               	return		;funcret
 14995  005BA4                     __end_of_CCP4_Initialize:
 14996                           	callstack 0
 14997                           
 14998 ;; *************** function _CCP4_SetCallBack *****************
 14999 ;; Defined at:
 15000 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15001 ;; Parameters:    Size  Location     Type
 15002 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15003 ;;		 -> CCP4_DefaultCallBack(1), 
 15004 ;; Auto vars:     Size  Location     Type
 15005 ;;		None
 15006 ;; Return value:  Size  Location     Type
 15007 ;;                  1    wreg      void 
 15008 ;; Registers used:
 15009 ;;		wreg, status,2, status,0
 15010 ;; Tracked objects:
 15011 ;;		On entry : 0/0
 15012 ;;		On exit  : 0/0
 15013 ;;		Unchanged: 0/0
 15014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15019 ;;Total ram usage:        2 bytes
 15020 ;; Hardware stack levels used: 1
 15021 ;; Hardware stack levels required when called: 8
 15022 ;; This function calls:
 15023 ;;		Nothing
 15024 ;; This function is called by:
 15025 ;;		_CCP4_Initialize
 15026 ;; This function uses a non-reentrant model
 15027 ;;
 15028                           
 15029                           	psect	text74
 15030  005E88                     __ptext74:
 15031                           	callstack 0
 15032  005E88                     _CCP4_SetCallBack:
 15033                           	callstack 20
 15034  005E88                     
 15035                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15036  005E88  C014  F18C         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15037  005E8C  C015  F18D         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15038  005E90  0012               	return		;funcret
 15039  005E92                     __end_of_CCP4_SetCallBack:
 15040                           	callstack 0
 15041                           
 15042 ;; *************** function _CCP3_Initialize *****************
 15043 ;; Defined at:
 15044 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;		None
 15047 ;; Auto vars:     Size  Location     Type
 15048 ;;		None
 15049 ;; Return value:  Size  Location     Type
 15050 ;;                  1    wreg      void 
 15051 ;; Registers used:
 15052 ;;		wreg, status,2, status,0, cstack
 15053 ;; Tracked objects:
 15054 ;;		On entry : 0/0
 15055 ;;		On exit  : 0/0
 15056 ;;		Unchanged: 0/0
 15057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;Total ram usage:        0 bytes
 15063 ;; Hardware stack levels used: 1
 15064 ;; Hardware stack levels required when called: 9
 15065 ;; This function calls:
 15066 ;;		_CCP3_SetCallBack
 15067 ;; This function is called by:
 15068 ;;		_SYSTEM_Initialize
 15069 ;; This function uses a non-reentrant model
 15070 ;;
 15071                           
 15072                           	psect	text75
 15073  005BA4                     __ptext75:
 15074                           	callstack 0
 15075  005BA4                     _CCP3_Initialize:
 15076                           	callstack 20
 15077  005BA4                     
 15078                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15079  005BA4  0E83               	movlw	131
 15080  005BA6  6E76               	movwf	118,c	;volatile
 15081                           
 15082                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15083  005BA8  0E00               	movlw	0
 15084  005BAA  6E77               	movwf	119,c	;volatile
 15085                           
 15086                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15087  005BAC  0E00               	movlw	0
 15088  005BAE  6E75               	movwf	117,c	;volatile
 15089                           
 15090                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15091  005BB0  0E00               	movlw	0
 15092  005BB2  6E74               	movwf	116,c	;volatile
 15093  005BB4                     
 15094                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15095  005BB4  0E16               	movlw	low _CCP3_DefaultCallBack
 15096  005BB6  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15097  005BB8  0E5B               	movlw	high _CCP3_DefaultCallBack
 15098  005BBA  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15099  005BBC  EC49  F02F         	call	_CCP3_SetCallBack	;wreg free
 15100  005BC0                     
 15101                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15102  005BC0  013F               	movlb	63	; () banked
 15103  005BC2  515E               	movf	94,w,b	;volatile
 15104  005BC4  0BCF               	andlw	-49
 15105  005BC6  0920               	iorlw	32
 15106  005BC8  6F5E               	movwf	94,b	;volatile
 15107  005BCA                     
 15108                           ; BSR set to: 63
 15109                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15110  005BCA  0139               	movlb	57	; () banked
 15111  005BCC  93A9               	bcf	169,1,b	;volatile
 15112  005BCE                     
 15113                           ; BSR set to: 57
 15114                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15115  005BCE  8399               	bsf	153,1,b	;volatile
 15116  005BD0                     
 15117                           ; BSR set to: 57
 15118  005BD0  0012               	return		;funcret
 15119  005BD2                     __end_of_CCP3_Initialize:
 15120                           	callstack 0
 15121                           
 15122 ;; *************** function _CCP3_SetCallBack *****************
 15123 ;; Defined at:
 15124 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15127 ;;		 -> CCP3_DefaultCallBack(1), 
 15128 ;; Auto vars:     Size  Location     Type
 15129 ;;		None
 15130 ;; Return value:  Size  Location     Type
 15131 ;;                  1    wreg      void 
 15132 ;; Registers used:
 15133 ;;		wreg, status,2, status,0
 15134 ;; Tracked objects:
 15135 ;;		On entry : 0/0
 15136 ;;		On exit  : 0/0
 15137 ;;		Unchanged: 0/0
 15138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15143 ;;Total ram usage:        2 bytes
 15144 ;; Hardware stack levels used: 1
 15145 ;; Hardware stack levels required when called: 8
 15146 ;; This function calls:
 15147 ;;		Nothing
 15148 ;; This function is called by:
 15149 ;;		_CCP3_Initialize
 15150 ;; This function uses a non-reentrant model
 15151 ;;
 15152                           
 15153                           	psect	text76
 15154  005E92                     __ptext76:
 15155                           	callstack 0
 15156  005E92                     _CCP3_SetCallBack:
 15157                           	callstack 20
 15158  005E92                     
 15159                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15160  005E92  C014  F18E         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15161  005E96  C015  F18F         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15162  005E9A  0012               	return		;funcret
 15163  005E9C                     __end_of_CCP3_SetCallBack:
 15164                           	callstack 0
 15165                           
 15166 ;; *************** function _ADCC_Initialize *****************
 15167 ;; Defined at:
 15168 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15169 ;; Parameters:    Size  Location     Type
 15170 ;;		None
 15171 ;; Auto vars:     Size  Location     Type
 15172 ;;		None
 15173 ;; Return value:  Size  Location     Type
 15174 ;;                  1    wreg      void 
 15175 ;; Registers used:
 15176 ;;		wreg, status,2
 15177 ;; Tracked objects:
 15178 ;;		On entry : 0/0
 15179 ;;		On exit  : 0/0
 15180 ;;		Unchanged: 0/0
 15181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15186 ;;Total ram usage:        0 bytes
 15187 ;; Hardware stack levels used: 1
 15188 ;; Hardware stack levels required when called: 8
 15189 ;; This function calls:
 15190 ;;		Nothing
 15191 ;; This function is called by:
 15192 ;;		_SYSTEM_Initialize
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196                           	psect	text77
 15197  0054CA                     __ptext77:
 15198                           	callstack 0
 15199  0054CA                     _ADCC_Initialize:
 15200                           	callstack 21
 15201  0054CA                     
 15202                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15203  0054CA  0E00               	movlw	0
 15204  0054CC  013E               	movlb	62	; () banked
 15205  0054CE  6FDE               	movwf	222,b	;volatile
 15206                           
 15207                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15208  0054D0  0E00               	movlw	0
 15209  0054D2  6FDF               	movwf	223,b	;volatile
 15210                           
 15211                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15212  0054D4  0E00               	movlw	0
 15213  0054D6  6FE0               	movwf	224,b	;volatile
 15214                           
 15215                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15216  0054D8  0E00               	movlw	0
 15217  0054DA  6FE1               	movwf	225,b	;volatile
 15218                           
 15219                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15220  0054DC  0E00               	movlw	0
 15221  0054DE  6FE4               	movwf	228,b	;volatile
 15222                           
 15223                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15224  0054E0  0E00               	movlw	0
 15225  0054E2  6FE5               	movwf	229,b	;volatile
 15226                           
 15227                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15228  0054E4  0E00               	movlw	0
 15229  0054E6  6FEA               	movwf	234,b	;volatile
 15230                           
 15231                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15232  0054E8  0E00               	movlw	0
 15233  0054EA  6FEC               	movwf	236,b	;volatile
 15234                           
 15235                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15236  0054EC  0E00               	movlw	0
 15237  0054EE  6FF1               	movwf	241,b	;volatile
 15238                           
 15239                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15240  0054F0  0E58               	movlw	88
 15241  0054F2  6FF3               	movwf	243,b	;volatile
 15242                           
 15243                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15244  0054F4  0E02               	movlw	2
 15245  0054F6  6FF4               	movwf	244,b	;volatile
 15246                           
 15247                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15248  0054F8  0E00               	movlw	0
 15249  0054FA  6FF5               	movwf	245,b	;volatile
 15250                           
 15251                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15252  0054FC  0E00               	movlw	0
 15253  0054FE  6FF6               	movwf	246,b	;volatile
 15254                           
 15255                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15256  005500  0E00               	movlw	0
 15257  005502  6FF7               	movwf	247,b	;volatile
 15258                           
 15259                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15260  005504  0E00               	movlw	0
 15261  005506  6FF9               	movwf	249,b	;volatile
 15262                           
 15263                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15264  005508  0E00               	movlw	0
 15265  00550A  6FFA               	movwf	250,b	;volatile
 15266                           
 15267                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15268  00550C  0E00               	movlw	0
 15269  00550E  6FFB               	movwf	251,b	;volatile
 15270                           
 15271                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15272  005510  0E00               	movlw	0
 15273  005512  6FFC               	movwf	252,b	;volatile
 15274                           
 15275                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15276  005514  0E00               	movlw	0
 15277  005516  6FFD               	movwf	253,b	;volatile
 15278                           
 15279                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15280  005518  0E00               	movlw	0
 15281  00551A  6FFE               	movwf	254,b	;volatile
 15282                           
 15283                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15284  00551C  0E1F               	movlw	31
 15285  00551E  6FFF               	movwf	255,b	;volatile
 15286                           
 15287                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15288  005520  0E84               	movlw	132
 15289  005522  6FF8               	movwf	248,b	;volatile
 15290  005524                     
 15291                           ; BSR set to: 62
 15292  005524  0012               	return		;funcret
 15293  005526                     __end_of_ADCC_Initialize:
 15294                           	callstack 0
 15295                           
 15296 ;; *************** function _UART1_tx_vect_isr *****************
 15297 ;; Defined at:
 15298 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15299 ;; Parameters:    Size  Location     Type
 15300 ;;		None
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;		None
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  1    wreg      void 
 15305 ;; Registers used:
 15306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15314 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15316 ;;Total ram usage:        1 bytes
 15317 ;; Hardware stack levels used: 1
 15318 ;; Hardware stack levels required when called: 5
 15319 ;; This function calls:
 15320 ;;		Absolute function
 15321 ;;		_UART1_Transmit_ISR
 15322 ;; This function is called by:
 15323 ;;		Interrupt level 1
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           
 15327                           	psect	text78
 15328  0057F0                     __ptext78:
 15329                           	callstack 0
 15330  0057F0                     _UART1_tx_vect_isr:
 15331                           	callstack 14
 15332                           
 15333                           ; BSR set to: 62
 15334                           ;incstack = 0
 15335  0057F0  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15336  0057F6                     
 15337                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15338  0057F6  0101               	movlb	1	; () banked
 15339  0057F8  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15340  0057FA  1197               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15341  0057FC  B4D8               	btfsc	status,2,c
 15342  0057FE  EF03  F02C         	goto	i1u707_21
 15343  005802  EF05  F02C         	goto	i1u707_20
 15344  005806                     i1u707_21:
 15345  005806  EF11  F02C         	goto	i1l324
 15346  00580A                     i1u707_20:
 15347  00580A                     
 15348                           ; BSR set to: 1
 15349                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15350  00580A  D802               	call	i1u708_28
 15351  00580C  EF11  F02C         	goto	i1u708_29
 15352  005810                     i1u708_28:
 15353  005810  0005               	push	
 15354  005812  6EFA               	movwf	pclath,c
 15355  005814  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15356  005816  6EFD               	movwf	tosl,c
 15357  005818  5197               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15358  00581A  6EFE               	movwf	tosh,c
 15359  00581C  6AFF               	clrf	tosu,c
 15360  00581E  50FA               	movf	pclath,w,c
 15361  005820  0012               	return		;indir
 15362  005822                     i1u708_29:
 15363  005822                     i1l324:
 15364  005822  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15365  005828  0011               	retfie		f
 15366  00582A                     __end_of_UART1_tx_vect_isr:
 15367                           	callstack 0
 15368                           
 15369 ;; *************** function _UART1_Transmit_ISR *****************
 15370 ;; Defined at:
 15371 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15372 ;; Parameters:    Size  Location     Type
 15373 ;;		None
 15374 ;; Auto vars:     Size  Location     Type
 15375 ;;		None
 15376 ;; Return value:  Size  Location     Type
 15377 ;;                  1    wreg      void 
 15378 ;; Registers used:
 15379 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15380 ;; Tracked objects:
 15381 ;;		On entry : 0/0
 15382 ;;		On exit  : 0/0
 15383 ;;		Unchanged: 0/0
 15384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15389 ;;Total ram usage:        0 bytes
 15390 ;; Hardware stack levels used: 1
 15391 ;; Hardware stack levels required when called: 4
 15392 ;; This function calls:
 15393 ;;		Nothing
 15394 ;; This function is called by:
 15395 ;;		_UART1_Initialize
 15396 ;;		_UART1_tx_vect_isr
 15397 ;; This function uses a non-reentrant model
 15398 ;;
 15399                           
 15400                           	psect	text79
 15401  005732                     __ptext79:
 15402                           	callstack 0
 15403  005732                     _UART1_Transmit_ISR:
 15404                           	callstack 14
 15405  005732                     
 15406                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15407  005732  0E08               	movlw	8
 15408  005734  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15409  005736  EF9F  F02B         	goto	i1u688_21
 15410  00573A  EFA1  F02B         	goto	i1u688_20
 15411  00573E                     i1u688_21:
 15412  00573E  EFB8  F02B         	goto	i1l333
 15413  005742                     i1u688_20:
 15414  005742                     
 15415                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15416  005742  0E10               	movlw	low _uart1TxBuffer
 15417  005744  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15418  005746  6ED9               	movwf	fsr2l,c
 15419  005748  6ADA               	clrf	fsr2h,c
 15420  00574A  0E01               	movlw	high _uart1TxBuffer
 15421  00574C  22DA               	addwfc	fsr2h,f,c
 15422  00574E  50DF               	movf	indf2,w,c
 15423  005750  013D               	movlb	61	; () banked
 15424  005752  6FEA               	movwf	234,b	;volatile
 15425  005754                     
 15426                           ; BSR set to: 61
 15427  005754  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15428  005756                     
 15429                           ; BSR set to: 61
 15430                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15431  005756  0E07               	movlw	7
 15432  005758  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15433  00575A  EFB1  F02B         	goto	i1u689_21
 15434  00575E  EFB3  F02B         	goto	i1u689_20
 15435  005762                     i1u689_21:
 15436  005762  EFB5  F02B         	goto	i1l7088
 15437  005766                     i1u689_20:
 15438  005766                     
 15439                           ; BSR set to: 61
 15440                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15441  005766  0E00               	movlw	0
 15442  005768  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15443  00576A                     i1l7088:
 15444                           
 15445                           ; BSR set to: 61
 15446                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15447  00576A  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15448                           
 15449                           ;mcc_generated_files/uart1.c: 264:     }
 15450  00576C  EFBA  F02B         	goto	i1l336
 15451  005770                     i1l333:
 15452                           
 15453                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15454  005770  0139               	movlb	57	; () banked
 15455  005772  9993               	bcf	147,4,b	;volatile
 15456  005774                     i1l336:
 15457  005774  0012               	return		;funcret
 15458  005776                     __end_of_UART1_Transmit_ISR:
 15459                           	callstack 0
 15460                           
 15461 ;; *************** function _UART1_rx_vect_isr *****************
 15462 ;; Defined at:
 15463 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15464 ;; Parameters:    Size  Location     Type
 15465 ;;		None
 15466 ;; Auto vars:     Size  Location     Type
 15467 ;;		None
 15468 ;; Return value:  Size  Location     Type
 15469 ;;                  1    wreg      void 
 15470 ;; Registers used:
 15471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15472 ;; Tracked objects:
 15473 ;;		On entry : 0/0
 15474 ;;		On exit  : 0/0
 15475 ;;		Unchanged: 0/0
 15476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;Total ram usage:        1 bytes
 15482 ;; Hardware stack levels used: 1
 15483 ;; Hardware stack levels required when called: 7
 15484 ;; This function calls:
 15485 ;;		Absolute function
 15486 ;;		_UART1_Receive_ISR
 15487 ;; This function is called by:
 15488 ;;		Interrupt level 1
 15489 ;; This function uses a non-reentrant model
 15490 ;;
 15491                           
 15492                           	psect	text80
 15493  00582C                     __ptext80:
 15494                           	callstack 0
 15495  00582C                     _UART1_rx_vect_isr:
 15496                           	callstack 12
 15497                           
 15498                           ;incstack = 0
 15499  00582C  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15500  005832                     
 15501                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15502  005832  0101               	movlb	1	; () banked
 15503  005834  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15504  005836  1199               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15505  005838  B4D8               	btfsc	status,2,c
 15506  00583A  EF21  F02C         	goto	i1u709_21
 15507  00583E  EF23  F02C         	goto	i1u709_20
 15508  005842                     i1u709_21:
 15509  005842  EF2F  F02C         	goto	i1l330
 15510  005846                     i1u709_20:
 15511  005846                     
 15512                           ; BSR set to: 1
 15513                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15514  005846  D802               	call	i1u710_28
 15515  005848  EF2F  F02C         	goto	i1u710_29
 15516  00584C                     i1u710_28:
 15517  00584C  0005               	push	
 15518  00584E  6EFA               	movwf	pclath,c
 15519  005850  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15520  005852  6EFD               	movwf	tosl,c
 15521  005854  5199               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15522  005856  6EFE               	movwf	tosh,c
 15523  005858  6AFF               	clrf	tosu,c
 15524  00585A  50FA               	movf	pclath,w,c
 15525  00585C  0012               	return		;indir
 15526  00585E                     i1u710_29:
 15527  00585E                     i1l330:
 15528  00585E  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15529  005864  0011               	retfie		f
 15530  005866                     __end_of_UART1_rx_vect_isr:
 15531                           	callstack 0
 15532                           
 15533 ;; *************** function _UART1_Receive_ISR *****************
 15534 ;; Defined at:
 15535 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;		None
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;		None
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      void 
 15542 ;; Registers used:
 15543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;Total ram usage:        0 bytes
 15554 ;; Hardware stack levels used: 1
 15555 ;; Hardware stack levels required when called: 6
 15556 ;; This function calls:
 15557 ;;		Absolute function
 15558 ;;		_UART1_DefaultErrorHandler
 15559 ;;		_UART1_DefaultFramingErrorHandler
 15560 ;;		_UART1_DefaultOverrunErrorHandler
 15561 ;;		_UART1_RxDataHandler
 15562 ;; This function is called by:
 15563 ;;		_UART1_Initialize
 15564 ;;		_UART1_rx_vect_isr
 15565 ;; This function uses a non-reentrant model
 15566 ;;
 15567                           
 15568                           	psect	text81
 15569  004E54                     __ptext81:
 15570                           	callstack 0
 15571  004E54                     _UART1_Receive_ISR:
 15572                           	callstack 12
 15573  004E54                     
 15574                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15575  004E54  0E00               	movlw	low _uart1RxStatusBuffer
 15576  004E56  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15577  004E58  6ED9               	movwf	fsr2l,c
 15578  004E5A  6ADA               	clrf	fsr2h,c
 15579  004E5C  0E01               	movlw	high _uart1RxStatusBuffer
 15580  004E5E  22DA               	addwfc	fsr2h,f,c
 15581  004E60  0E00               	movlw	0
 15582  004E62  6EDF               	movwf	indf2,c
 15583  004E64                     
 15584                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15585  004E64  013D               	movlb	61	; () banked
 15586  004E66  A7F9               	btfss	249,3,b	;volatile
 15587  004E68  EF38  F027         	goto	i1u690_21
 15588  004E6C  EF3A  F027         	goto	i1u690_20
 15589  004E70                     i1u690_21:
 15590  004E70  EF4E  F027         	goto	i1l7098
 15591  004E74                     i1u690_20:
 15592  004E74                     
 15593                           ; BSR set to: 61
 15594                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15595  004E74  0E00               	movlw	low _uart1RxStatusBuffer
 15596  004E76  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15597  004E78  6ED9               	movwf	fsr2l,c
 15598  004E7A  6ADA               	clrf	fsr2h,c
 15599  004E7C  0E01               	movlw	high _uart1RxStatusBuffer
 15600  004E7E  22DA               	addwfc	fsr2h,f,c
 15601  004E80  0101               	movlb	1	; () banked
 15602  004E82  82DF               	bsf	indf2,1,c
 15603  004E84                     
 15604                           ; BSR set to: 1
 15605                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15606  004E84  D802               	call	i1u691_28
 15607  004E86  EF4E  F027         	goto	i1u691_29
 15608  004E8A                     i1u691_28:
 15609  004E8A  0005               	push	
 15610  004E8C  6EFA               	movwf	pclath,c
 15611  004E8E  5194               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15612  004E90  6EFD               	movwf	tosl,c
 15613  004E92  5195               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15614  004E94  6EFE               	movwf	tosh,c
 15615  004E96  6AFF               	clrf	tosu,c
 15616  004E98  50FA               	movf	pclath,w,c
 15617  004E9A  0012               	return		;indir
 15618  004E9C                     i1u691_29:
 15619  004E9C                     i1l7098:
 15620                           
 15621                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15622  004E9C  013D               	movlb	61	; () banked
 15623  004E9E  A3F9               	btfss	249,1,b	;volatile
 15624  004EA0  EF54  F027         	goto	i1u692_21
 15625  004EA4  EF56  F027         	goto	i1u692_20
 15626  004EA8                     i1u692_21:
 15627  004EA8  EF6A  F027         	goto	i1l7104
 15628  004EAC                     i1u692_20:
 15629  004EAC                     
 15630                           ; BSR set to: 61
 15631                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15632  004EAC  0E00               	movlw	low _uart1RxStatusBuffer
 15633  004EAE  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15634  004EB0  6ED9               	movwf	fsr2l,c
 15635  004EB2  6ADA               	clrf	fsr2h,c
 15636  004EB4  0E01               	movlw	high _uart1RxStatusBuffer
 15637  004EB6  22DA               	addwfc	fsr2h,f,c
 15638  004EB8  0101               	movlb	1	; () banked
 15639  004EBA  84DF               	bsf	indf2,2,c
 15640  004EBC                     
 15641                           ; BSR set to: 1
 15642                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15643  004EBC  D802               	call	i1u693_28
 15644  004EBE  EF6A  F027         	goto	i1u693_29
 15645  004EC2                     i1u693_28:
 15646  004EC2  0005               	push	
 15647  004EC4  6EFA               	movwf	pclath,c
 15648  004EC6  5192               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15649  004EC8  6EFD               	movwf	tosl,c
 15650  004ECA  5193               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15651  004ECC  6EFE               	movwf	tosh,c
 15652  004ECE  6AFF               	clrf	tosu,c
 15653  004ED0  50FA               	movf	pclath,w,c
 15654  004ED2  0012               	return		;indir
 15655  004ED4                     i1u693_29:
 15656  004ED4                     i1l7104:
 15657                           
 15658                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15659  004ED4  0E00               	movlw	low _uart1RxStatusBuffer
 15660  004ED6  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15661  004ED8  6ED9               	movwf	fsr2l,c
 15662  004EDA  6ADA               	clrf	fsr2h,c
 15663  004EDC  0E01               	movlw	high _uart1RxStatusBuffer
 15664  004EDE  22DA               	addwfc	fsr2h,f,c
 15665  004EE0  50DF               	movf	indf2,w,c
 15666  004EE2  B4D8               	btfsc	status,2,c
 15667  004EE4  EF76  F027         	goto	i1u694_21
 15668  004EE8  EF78  F027         	goto	i1u694_20
 15669  004EEC                     i1u694_21:
 15670  004EEC  EF87  F027         	goto	i1l7108
 15671  004EF0                     i1u694_20:
 15672  004EF0                     
 15673                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15674  004EF0  D802               	call	i1u695_28
 15675  004EF2  EF85  F027         	goto	i1u695_29
 15676  004EF6                     i1u695_28:
 15677  004EF6  0005               	push	
 15678  004EF8  6EFA               	movwf	pclath,c
 15679  004EFA  0101               	movlb	1	; () banked
 15680  004EFC  5190               	movf	_UART1_ErrorHandler& (0+255),w,b
 15681  004EFE  6EFD               	movwf	tosl,c
 15682  004F00  5191               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15683  004F02  6EFE               	movwf	tosh,c
 15684  004F04  6AFF               	clrf	tosu,c
 15685  004F06  50FA               	movf	pclath,w,c
 15686  004F08  0012               	return		;indir
 15687  004F0A                     i1u695_29:
 15688                           
 15689                           ;mcc_generated_files/uart1.c: 290:     } else {
 15690  004F0A  EF89  F027         	goto	i1l343
 15691  004F0E                     i1l7108:
 15692                           
 15693                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15694  004F0E  EC2C  F02E         	call	_UART1_RxDataHandler	;wreg free
 15695  004F12                     i1l343:
 15696  004F12  0012               	return		;funcret
 15697  004F14                     __end_of_UART1_Receive_ISR:
 15698                           	callstack 0
 15699                           
 15700 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15701 ;; Defined at:
 15702 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15703 ;; Parameters:    Size  Location     Type
 15704 ;;		None
 15705 ;; Auto vars:     Size  Location     Type
 15706 ;;		None
 15707 ;; Return value:  Size  Location     Type
 15708 ;;                  1    wreg      void 
 15709 ;; Registers used:
 15710 ;;		None
 15711 ;; Tracked objects:
 15712 ;;		On entry : 0/0
 15713 ;;		On exit  : 0/0
 15714 ;;		Unchanged: 0/0
 15715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15720 ;;Total ram usage:        0 bytes
 15721 ;; Hardware stack levels used: 1
 15722 ;; Hardware stack levels required when called: 4
 15723 ;; This function calls:
 15724 ;;		Nothing
 15725 ;; This function is called by:
 15726 ;;		_UART1_Initialize
 15727 ;;		_UART1_Receive_ISR
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           	psect	text82
 15732  005EAA                     __ptext82:
 15733                           	callstack 0
 15734  005EAA                     _UART1_DefaultOverrunErrorHandler:
 15735                           	callstack 13
 15736  005EAA  0012               	return		;funcret
 15737  005EAC                     __end_of_UART1_DefaultOverrunErrorHandler:
 15738                           	callstack 0
 15739                           
 15740 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15741 ;; Defined at:
 15742 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15743 ;; Parameters:    Size  Location     Type
 15744 ;;		None
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;		None
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      void 
 15749 ;; Registers used:
 15750 ;;		None
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15760 ;;Total ram usage:        0 bytes
 15761 ;; Hardware stack levels used: 1
 15762 ;; Hardware stack levels required when called: 4
 15763 ;; This function calls:
 15764 ;;		Nothing
 15765 ;; This function is called by:
 15766 ;;		_UART1_Initialize
 15767 ;;		_UART1_Receive_ISR
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           	psect	text83
 15772  005EAC                     __ptext83:
 15773                           	callstack 0
 15774  005EAC                     _UART1_DefaultFramingErrorHandler:
 15775                           	callstack 13
 15776  005EAC  0012               	return		;funcret
 15777  005EAE                     __end_of_UART1_DefaultFramingErrorHandler:
 15778                           	callstack 0
 15779                           
 15780 ;; *************** function _UART1_DefaultErrorHandler *****************
 15781 ;; Defined at:
 15782 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15783 ;; Parameters:    Size  Location     Type
 15784 ;;		None
 15785 ;; Auto vars:     Size  Location     Type
 15786 ;;		None
 15787 ;; Return value:  Size  Location     Type
 15788 ;;                  1    wreg      void 
 15789 ;; Registers used:
 15790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15791 ;; Tracked objects:
 15792 ;;		On entry : 0/0
 15793 ;;		On exit  : 0/0
 15794 ;;		Unchanged: 0/0
 15795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;Total ram usage:        0 bytes
 15801 ;; Hardware stack levels used: 1
 15802 ;; Hardware stack levels required when called: 5
 15803 ;; This function calls:
 15804 ;;		_UART1_RxDataHandler
 15805 ;; This function is called by:
 15806 ;;		_UART1_Initialize
 15807 ;;		_UART1_Receive_ISR
 15808 ;; This function uses a non-reentrant model
 15809 ;;
 15810                           
 15811                           	psect	text84
 15812  005E9C                     __ptext84:
 15813                           	callstack 0
 15814  005E9C                     _UART1_DefaultErrorHandler:
 15815                           	callstack 12
 15816  005E9C                     
 15817                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15818  005E9C  EC2C  F02E         	call	_UART1_RxDataHandler	;wreg free
 15819  005EA0  0012               	return		;funcret
 15820  005EA2                     __end_of_UART1_DefaultErrorHandler:
 15821                           	callstack 0
 15822                           
 15823 ;; *************** function _UART1_RxDataHandler *****************
 15824 ;; Defined at:
 15825 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;		None
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15843 ;;Total ram usage:        0 bytes
 15844 ;; Hardware stack levels used: 1
 15845 ;; Hardware stack levels required when called: 4
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_UART1_Receive_ISR
 15850 ;;		_UART1_DefaultErrorHandler
 15851 ;; This function uses a non-reentrant model
 15852 ;;
 15853                           
 15854                           	psect	text85
 15855  005C58                     __ptext85:
 15856                           	callstack 0
 15857  005C58                     _UART1_RxDataHandler:
 15858                           	callstack 13
 15859  005C58                     
 15860                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15861  005C58  0E08               	movlw	low _uart1RxBuffer
 15862  005C5A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15863  005C5C  6ED9               	movwf	fsr2l,c
 15864  005C5E  6ADA               	clrf	fsr2h,c
 15865  005C60  0E01               	movlw	high _uart1RxBuffer
 15866  005C62  22DA               	addwfc	fsr2h,f,c
 15867  005C64  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15868  005C6A  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15869  005C6C                     
 15870                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15871  005C6C  0E07               	movlw	7
 15872  005C6E  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15873  005C70  EF3C  F02E         	goto	i1u632_21
 15874  005C74  EF3E  F02E         	goto	i1u632_20
 15875  005C78                     i1u632_21:
 15876  005C78  EF40  F02E         	goto	i1l6546
 15877  005C7C                     i1u632_20:
 15878  005C7C                     
 15879                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15880  005C7C  0E00               	movlw	0
 15881  005C7E  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15882  005C80                     i1l6546:
 15883                           
 15884                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15885  005C80  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15886  005C82  0012               	return		;funcret
 15887  005C84                     __end_of_UART1_RxDataHandler:
 15888                           	callstack 0
 15889                           
 15890 ;; *************** function _TMR4_ISR *****************
 15891 ;; Defined at:
 15892 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15893 ;; Parameters:    Size  Location     Type
 15894 ;;		None
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;		None
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  1    wreg      void 
 15899 ;; Registers used:
 15900 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15901 ;; Tracked objects:
 15902 ;;		On entry : 0/0
 15903 ;;		On exit  : 0/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;Total ram usage:        1 bytes
 15911 ;; Hardware stack levels used: 1
 15912 ;; Hardware stack levels required when called: 6
 15913 ;; This function calls:
 15914 ;;		_TMR4_CallBack
 15915 ;; This function is called by:
 15916 ;;		Interrupt level 1
 15917 ;; This function uses a non-reentrant model
 15918 ;;
 15919                           
 15920                           	psect	text86
 15921  005910                     __ptext86:
 15922                           	callstack 0
 15923  005910                     _TMR4_ISR:
 15924                           	callstack 13
 15925                           
 15926                           ;incstack = 0
 15927  005910  006F FF60  F013    	movff	status,??_TMR4_ISR
 15928  005916                     
 15929                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15930  005916  0139               	movlb	57	; () banked
 15931  005918  91A7               	bcf	167,0,b	;volatile
 15932  00591A                     
 15933                           ; BSR set to: 57
 15934                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15935  00591A  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 15936  00591C  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 15937  00591E  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 15938  005920  E109               	bnz	i1u715_20
 15939  005922  0E0A               	movlw	10
 15940  005924  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 15941  005926  A0D8               	btfss	status,0,c
 15942  005928  EF98  F02C         	goto	i1u715_21
 15943  00592C  EF9A  F02C         	goto	i1u715_20
 15944  005930                     i1u715_21:
 15945  005930  EFA0  F02C         	goto	i1l688
 15946  005934                     i1u715_20:
 15947  005934                     
 15948                           ; BSR set to: 57
 15949                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15950  005934  ECE9  F02D         	call	_TMR4_CallBack	;wreg free
 15951  005938                     
 15952                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15953  005938  0E00               	movlw	0
 15954  00593A  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 15955  00593C  0E00               	movlw	0
 15956  00593E  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 15957  005940                     i1l688:
 15958  005940  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15959  005946  0011               	retfie		f
 15960  005948                     __end_of_TMR4_ISR:
 15961                           	callstack 0
 15962                           
 15963 ;; *************** function _TMR4_CallBack *****************
 15964 ;; Defined at:
 15965 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;		None
 15968 ;; Auto vars:     Size  Location     Type
 15969 ;;		None
 15970 ;; Return value:  Size  Location     Type
 15971 ;;                  1    wreg      void 
 15972 ;; Registers used:
 15973 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15974 ;; Tracked objects:
 15975 ;;		On entry : 0/0
 15976 ;;		On exit  : 0/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15983 ;;Total ram usage:        0 bytes
 15984 ;; Hardware stack levels used: 1
 15985 ;; Hardware stack levels required when called: 5
 15986 ;; This function calls:
 15987 ;;		Absolute function
 15988 ;;		_TMR4_10msISR
 15989 ;;		_TMR4_DefaultInterruptHandler
 15990 ;; This function is called by:
 15991 ;;		_TMR4_ISR
 15992 ;; This function uses a non-reentrant model
 15993 ;;
 15994                           
 15995                           	psect	text87
 15996  005BD2                     __ptext87:
 15997                           	callstack 0
 15998  005BD2                     _TMR4_CallBack:
 15999                           	callstack 13
 16000  005BD2                     
 16001                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16002  005BD2  0101               	movlb	1	; () banked
 16003  005BD4  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16004  005BD6  1185               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16005  005BD8  B4D8               	btfsc	status,2,c
 16006  005BDA  EFF1  F02D         	goto	i1u699_21
 16007  005BDE  EFF3  F02D         	goto	i1u699_20
 16008  005BE2                     i1u699_21:
 16009  005BE2  EFFF  F02D         	goto	i1l692
 16010  005BE6                     i1u699_20:
 16011  005BE6                     
 16012                           ; BSR set to: 1
 16013                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16014  005BE6  D802               	call	i1u700_28
 16015  005BE8  EFFF  F02D         	goto	i1u700_29
 16016  005BEC                     i1u700_28:
 16017  005BEC  0005               	push	
 16018  005BEE  6EFA               	movwf	pclath,c
 16019  005BF0  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16020  005BF2  6EFD               	movwf	tosl,c
 16021  005BF4  5185               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16022  005BF6  6EFE               	movwf	tosh,c
 16023  005BF8  6AFF               	clrf	tosu,c
 16024  005BFA  50FA               	movf	pclath,w,c
 16025  005BFC  0012               	return		;indir
 16026  005BFE                     i1u700_29:
 16027  005BFE                     i1l692:
 16028  005BFE  0012               	return		;funcret
 16029  005C00                     __end_of_TMR4_CallBack:
 16030                           	callstack 0
 16031                           
 16032 ;; *************** function _TMR4_10msISR *****************
 16033 ;; Defined at:
 16034 ;;		line 62 in file "main.c"
 16035 ;; Parameters:    Size  Location     Type
 16036 ;;		None
 16037 ;; Auto vars:     Size  Location     Type
 16038 ;;		None
 16039 ;; Return value:  Size  Location     Type
 16040 ;;                  1    wreg      void 
 16041 ;; Registers used:
 16042 ;;		status,2, status,0
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/0
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16052 ;;Total ram usage:        0 bytes
 16053 ;; Hardware stack levels used: 1
 16054 ;; Hardware stack levels required when called: 4
 16055 ;; This function calls:
 16056 ;;		Nothing
 16057 ;; This function is called by:
 16058 ;;		_main
 16059 ;;		_TMR4_CallBack
 16060 ;; This function uses a non-reentrant model
 16061 ;;
 16062                           
 16063                           	psect	text88
 16064  005EA2                     __ptext88:
 16065                           	callstack 0
 16066  005EA2                     _TMR4_10msISR:
 16067                           	callstack 13
 16068  005EA2                     
 16069                           ;main.c: 63:     ++cycle10ms;
 16070  005EA2  0100               	movlb	0	; () banked
 16071  005EA4  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16072  005EA6                     
 16073                           ; BSR set to: 0
 16074  005EA6  0012               	return		;funcret
 16075  005EA8                     __end_of_TMR4_10msISR:
 16076                           	callstack 0
 16077                           
 16078 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16079 ;; Defined at:
 16080 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;		None
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;		None
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  1    wreg      void 
 16087 ;; Registers used:
 16088 ;;		None
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16098 ;;Total ram usage:        0 bytes
 16099 ;; Hardware stack levels used: 1
 16100 ;; Hardware stack levels required when called: 4
 16101 ;; This function calls:
 16102 ;;		Nothing
 16103 ;; This function is called by:
 16104 ;;		_TMR4_Initialize
 16105 ;;		_TMR4_CallBack
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text89
 16110  005EAE                     __ptext89:
 16111                           	callstack 0
 16112  005EAE                     _TMR4_DefaultInterruptHandler:
 16113                           	callstack 13
 16114  005EAE  0012               	return		;funcret
 16115  005EB0                     __end_of_TMR4_DefaultInterruptHandler:
 16116                           	callstack 0
 16117                           
 16118 ;; *************** function _Default_ISR *****************
 16119 ;; Defined at:
 16120 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16121 ;; Parameters:    Size  Location     Type
 16122 ;;		None
 16123 ;; Auto vars:     Size  Location     Type
 16124 ;;		None
 16125 ;; Return value:  Size  Location     Type
 16126 ;;                  1    wreg      void 
 16127 ;; Registers used:
 16128 ;;		None
 16129 ;; Tracked objects:
 16130 ;;		On entry : 0/0
 16131 ;;		On exit  : 0/0
 16132 ;;		Unchanged: 0/0
 16133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16138 ;;Total ram usage:        0 bytes
 16139 ;; Hardware stack levels used: 1
 16140 ;; This function calls:
 16141 ;;		Nothing
 16142 ;; This function is called by:
 16143 ;;		Interrupt level 2
 16144 ;; This function uses a non-reentrant model
 16145 ;;
 16146                           
 16147                           	psect	text90
 16148  005EB0                     __ptext90:
 16149                           	callstack 0
 16150  005EB0                     _Default_ISR:
 16151                           	callstack 15
 16152  005EB0  0011               	retfie		f
 16153  005EB2                     __end_of_Default_ISR:
 16154                           	callstack 0
 16155                           
 16156 ;; *************** function _CCP3_CaptureISR *****************
 16157 ;; Defined at:
 16158 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16159 ;; Parameters:    Size  Location     Type
 16160 ;;		None
 16161 ;; Auto vars:     Size  Location     Type
 16162 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16163 ;; Return value:  Size  Location     Type
 16164 ;;                  1    wreg      void 
 16165 ;; Registers used:
 16166 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16167 ;; Tracked objects:
 16168 ;;		On entry : 0/0
 16169 ;;		On exit  : 0/0
 16170 ;;		Unchanged: 0/0
 16171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16176 ;;Total ram usage:        2 bytes
 16177 ;; Hardware stack levels used: 1
 16178 ;; Hardware stack levels required when called: 1
 16179 ;; This function calls:
 16180 ;;		Absolute function
 16181 ;;		_CCP3_DefaultCallBack
 16182 ;; This function is called by:
 16183 ;;		Interrupt level 2
 16184 ;; This function uses a non-reentrant model
 16185 ;;
 16186                           
 16187                           	psect	text91
 16188  005A18                     __ptext91:
 16189                           	callstack 0
 16190  005A18                     _CCP3_CaptureISR:
 16191                           	callstack 14
 16192  005A18                     
 16193                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16194  005A18  0139               	movlb	57	; () banked
 16195  005A1A  93A9               	bcf	169,1,b	;volatile
 16196                           
 16197                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16198  005A1C  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16199                           
 16200                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16201  005A22  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16202  005A28                     
 16203                           ; BSR set to: 57
 16204                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16205  005A28  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16206  005A2C  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16207  005A30  D802               	call	i2u711_48
 16208  005A32  EF25  F02D         	goto	i2u711_49
 16209  005A36                     i2u711_48:
 16210  005A36  0005               	push	
 16211  005A38  6EFA               	movwf	pclath,c
 16212  005A3A  0101               	movlb	1	; () banked
 16213  005A3C  518E               	movf	_CCP3_CallBack& (0+255),w,b
 16214  005A3E  6EFD               	movwf	tosl,c
 16215  005A40  518F               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16216  005A42  6EFE               	movwf	tosh,c
 16217  005A44  6AFF               	clrf	tosu,c
 16218  005A46  50FA               	movf	pclath,w,c
 16219  005A48  0012               	return		;indir
 16220  005A4A                     i2u711_49:
 16221  005A4A  0011               	retfie		f
 16222  005A4C                     __end_of_CCP3_CaptureISR:
 16223                           	callstack 0
 16224                           
 16225 ;; *************** function _CCP3_DefaultCallBack *****************
 16226 ;; Defined at:
 16227 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16228 ;; Parameters:    Size  Location     Type
 16229 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16230 ;; Auto vars:     Size  Location     Type
 16231 ;;		None
 16232 ;; Return value:  Size  Location     Type
 16233 ;;                  1    wreg      void 
 16234 ;; Registers used:
 16235 ;;		wreg, status,2, status,0
 16236 ;; Tracked objects:
 16237 ;;		On entry : 0/0
 16238 ;;		On exit  : 0/0
 16239 ;;		Unchanged: 0/0
 16240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;Total ram usage:        2 bytes
 16246 ;; Hardware stack levels used: 1
 16247 ;; This function calls:
 16248 ;;		Nothing
 16249 ;; This function is called by:
 16250 ;;		_CCP3_Initialize
 16251 ;;		_CCP3_CaptureISR
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255                           	psect	text92
 16256  005B16                     __ptext92:
 16257                           	callstack 0
 16258  005B16                     _CCP3_DefaultCallBack:
 16259                           	callstack 14
 16260  005B16                     
 16261                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16262  005B16  AECD               	btfss	205,7,c	;volatile
 16263  005B18  EF90  F02D         	goto	i2u696_41
 16264  005B1C  EF92  F02D         	goto	i2u696_40
 16265  005B20                     i2u696_41:
 16266  005B20  EF98  F02D         	goto	i2l7114
 16267  005B24                     i2u696_40:
 16268  005B24                     
 16269                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16270  005B24  C001  F0F5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16271  005B28  C002  F0F6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16272                           
 16273                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16274  005B2C  EFA2  F02D         	goto	i2l438
 16275  005B30                     i2l7114:
 16276                           
 16277                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16278  005B30  0100               	movlb	0	; () banked
 16279  005B32  51F5               	movf	_distLeftM& (0+255),w,b
 16280  005B34  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16281  005B36  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 16282  005B38  51F6               	movf	(_distLeftM+1)& (0+255),w,b
 16283  005B3A  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16284  005B3C  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16285  005B3E                     
 16286                           ; BSR set to: 0
 16287                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16288  005B3E  90D8               	bcf	status,0,c
 16289  005B40  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16290  005B42  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 16291  005B44                     i2l438:
 16292  005B44  0012               	return		;funcret
 16293  005B46                     __end_of_CCP3_DefaultCallBack:
 16294                           	callstack 0
 16295                           
 16296 ;; *************** function _CCP4_CaptureISR *****************
 16297 ;; Defined at:
 16298 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16299 ;; Parameters:    Size  Location     Type
 16300 ;;		None
 16301 ;; Auto vars:     Size  Location     Type
 16302 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16303 ;; Return value:  Size  Location     Type
 16304 ;;                  1    wreg      void 
 16305 ;; Registers used:
 16306 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16307 ;; Tracked objects:
 16308 ;;		On entry : 0/0
 16309 ;;		On exit  : 0/0
 16310 ;;		Unchanged: 0/0
 16311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16316 ;;Total ram usage:        2 bytes
 16317 ;; Hardware stack levels used: 1
 16318 ;; Hardware stack levels required when called: 1
 16319 ;; This function calls:
 16320 ;;		Absolute function
 16321 ;;		_CCP4_DefaultCallBack
 16322 ;; This function is called by:
 16323 ;;		Interrupt level 2
 16324 ;; This function uses a non-reentrant model
 16325 ;;
 16326                           
 16327                           	psect	text93
 16328  005A4C                     __ptext93:
 16329                           	callstack 0
 16330  005A4C                     _CCP4_CaptureISR:
 16331                           	callstack 14
 16332  005A4C                     
 16333                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16334  005A4C  0139               	movlb	57	; () banked
 16335  005A4E  91AA               	bcf	170,0,b	;volatile
 16336                           
 16337                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16338  005A50  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16339                           
 16340                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16341  005A56  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16342  005A5C                     
 16343                           ; BSR set to: 57
 16344                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16345  005A5C  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16346  005A60  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16347  005A64  D802               	call	i2u712_48
 16348  005A66  EF3F  F02D         	goto	i2u712_49
 16349  005A6A                     i2u712_48:
 16350  005A6A  0005               	push	
 16351  005A6C  6EFA               	movwf	pclath,c
 16352  005A6E  0101               	movlb	1	; () banked
 16353  005A70  518C               	movf	_CCP4_CallBack& (0+255),w,b
 16354  005A72  6EFD               	movwf	tosl,c
 16355  005A74  518D               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16356  005A76  6EFE               	movwf	tosh,c
 16357  005A78  6AFF               	clrf	tosu,c
 16358  005A7A  50FA               	movf	pclath,w,c
 16359  005A7C  0012               	return		;indir
 16360  005A7E                     i2u712_49:
 16361  005A7E  0011               	retfie		f
 16362  005A80                     __end_of_CCP4_CaptureISR:
 16363                           	callstack 0
 16364                           
 16365 ;; *************** function _CCP4_DefaultCallBack *****************
 16366 ;; Defined at:
 16367 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;		None
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      void 
 16374 ;; Registers used:
 16375 ;;		wreg, status,2, status,0
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;Total ram usage:        2 bytes
 16386 ;; Hardware stack levels used: 1
 16387 ;; This function calls:
 16388 ;;		Nothing
 16389 ;; This function is called by:
 16390 ;;		_CCP4_Initialize
 16391 ;;		_CCP4_CaptureISR
 16392 ;; This function uses a non-reentrant model
 16393 ;;
 16394                           
 16395                           	psect	text94
 16396  005B46                     __ptext94:
 16397                           	callstack 0
 16398  005B46                     _CCP4_DefaultCallBack:
 16399                           	callstack 14
 16400  005B46                     
 16401                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16402  005B46  ACCD               	btfss	205,6,c	;volatile
 16403  005B48  EFA8  F02D         	goto	i2u697_41
 16404  005B4C  EFAA  F02D         	goto	i2u697_40
 16405  005B50                     i2u697_41:
 16406  005B50  EFB0  F02D         	goto	i2l7122
 16407  005B54                     i2u697_40:
 16408  005B54                     
 16409                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16410  005B54  C005  F0F1         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16411  005B58  C006  F0F2         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16412                           
 16413                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16414  005B5C  EFBA  F02D         	goto	i2l476
 16415  005B60                     i2l7122:
 16416                           
 16417                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16418  005B60  0100               	movlb	0	; () banked
 16419  005B62  51F1               	movf	_distRightM& (0+255),w,b
 16420  005B64  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16421  005B66  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16422  005B68  51F2               	movf	(_distRightM+1)& (0+255),w,b
 16423  005B6A  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16424  005B6C  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16425  005B6E                     
 16426                           ; BSR set to: 0
 16427                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16428  005B6E  90D8               	bcf	status,0,c
 16429  005B70  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16430  005B72  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16431  005B74                     i2l476:
 16432  005B74  0012               	return		;funcret
 16433  005B76                     __end_of_CCP4_DefaultCallBack:
 16434                           	callstack 0
 16435                           
 16436 ;; *************** function _TMR5_GATE_ISR *****************
 16437 ;; Defined at:
 16438 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;		None
 16441 ;; Auto vars:     Size  Location     Type
 16442 ;;		None
 16443 ;; Return value:  Size  Location     Type
 16444 ;;                  1    wreg      void 
 16445 ;; Registers used:
 16446 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16447 ;; Tracked objects:
 16448 ;;		On entry : 0/0
 16449 ;;		On exit  : 0/0
 16450 ;;		Unchanged: 0/0
 16451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16456 ;;Total ram usage:        0 bytes
 16457 ;; Hardware stack levels used: 1
 16458 ;; Hardware stack levels required when called: 3
 16459 ;; This function calls:
 16460 ;;		Absolute function
 16461 ;;		_TMR5_DefaultGateInterruptHandler
 16462 ;; This function is called by:
 16463 ;;		Interrupt level 2
 16464 ;; This function uses a non-reentrant model
 16465 ;;
 16466                           
 16467                           	psect	text95
 16468  005AB4                     __ptext95:
 16469                           	callstack 0
 16470  005AB4                     _TMR5_GATE_ISR:
 16471                           	callstack 12
 16472  005AB4                     
 16473                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16474  005AB4  0139               	movlb	57	; () banked
 16475  005AB6  9FA8               	bcf	168,7,b	;volatile
 16476  005AB8                     
 16477                           ; BSR set to: 57
 16478                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16479  005AB8  0101               	movlb	1	; () banked
 16480  005ABA  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16481  005ABC  1189               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16482  005ABE  B4D8               	btfsc	status,2,c
 16483  005AC0  EF64  F02D         	goto	i2u713_41
 16484  005AC4  EF66  F02D         	goto	i2u713_40
 16485  005AC8                     i2u713_41:
 16486  005AC8  EF72  F02D         	goto	i2l552
 16487  005ACC                     i2u713_40:
 16488  005ACC                     
 16489                           ; BSR set to: 1
 16490                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16491  005ACC  D802               	call	i2u714_48
 16492  005ACE  EF72  F02D         	goto	i2u714_49
 16493  005AD2                     i2u714_48:
 16494  005AD2  0005               	push	
 16495  005AD4  6EFA               	movwf	pclath,c
 16496  005AD6  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16497  005AD8  6EFD               	movwf	tosl,c
 16498  005ADA  5189               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16499  005ADC  6EFE               	movwf	tosh,c
 16500  005ADE  6AFF               	clrf	tosu,c
 16501  005AE0  50FA               	movf	pclath,w,c
 16502  005AE2  0012               	return		;indir
 16503  005AE4                     i2u714_49:
 16504  005AE4                     i2l552:
 16505  005AE4  0011               	retfie		f
 16506  005AE6                     __end_of_TMR5_GATE_ISR:
 16507                           	callstack 0
 16508                           
 16509 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16510 ;; Defined at:
 16511 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16512 ;; Parameters:    Size  Location     Type
 16513 ;;		None
 16514 ;; Auto vars:     Size  Location     Type
 16515 ;;		None
 16516 ;; Return value:  Size  Location     Type
 16517 ;;                  1    wreg      void 
 16518 ;; Registers used:
 16519 ;;		wreg, status,2, status,0, cstack
 16520 ;; Tracked objects:
 16521 ;;		On entry : 0/0
 16522 ;;		On exit  : 0/0
 16523 ;;		Unchanged: 0/0
 16524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16529 ;;Total ram usage:        0 bytes
 16530 ;; Hardware stack levels used: 1
 16531 ;; Hardware stack levels required when called: 2
 16532 ;; This function calls:
 16533 ;;		_TMR5_ReadTimer
 16534 ;;		_TMR5_Reload
 16535 ;; This function is called by:
 16536 ;;		_TMR5_Initialize
 16537 ;;		_TMR5_GATE_ISR
 16538 ;; This function uses a non-reentrant model
 16539 ;;
 16540                           
 16541                           	psect	text96
 16542  005D68                     __ptext96:
 16543                           	callstack 0
 16544  005D68                     _TMR5_DefaultGateInterruptHandler:
 16545                           	callstack 12
 16546  005D68                     
 16547                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16548  005D68  EC92  F02E         	call	_TMR5_ReadTimer	;wreg free
 16549  005D6C  C009  F0FC         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16550  005D70  C00A  F0FD         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16551  005D74                     
 16552                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16553  005D74  0100               	movlb	0	; () banked
 16554  005D76  90D8               	bcf	status,0,c
 16555  005D78  33FD               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16556  005D7A  33FC               	rrcf	_distFront& (0+255),f,b	;volatile
 16557  005D7C                     
 16558                           ; BSR set to: 0
 16559                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16560  005D7C  EC15  F02F         	call	_TMR5_Reload	;wreg free
 16561  005D80                     
 16562                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16563  005D80  0139               	movlb	57	; () banked
 16564  005D82  9FA8               	bcf	168,7,b	;volatile
 16565  005D84                     
 16566                           ; BSR set to: 57
 16567  005D84  0012               	return		;funcret
 16568  005D86                     __end_of_TMR5_DefaultGateInterruptHandler:
 16569                           	callstack 0
 16570                           
 16571 ;; *************** function _TMR5_Reload *****************
 16572 ;; Defined at:
 16573 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;		None
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;		None
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, status,2, cstack
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16591 ;;Total ram usage:        0 bytes
 16592 ;; Hardware stack levels used: 1
 16593 ;; Hardware stack levels required when called: 1
 16594 ;; This function calls:
 16595 ;;		_TMR5_WriteTimer
 16596 ;; This function is called by:
 16597 ;;		_TMR5_DefaultGateInterruptHandler
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           	psect	text97
 16602  005E2A                     __ptext97:
 16603                           	callstack 0
 16604  005E2A                     _TMR5_Reload:
 16605                           	callstack 12
 16606  005E2A                     
 16607                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16608  005E2A  C18A  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16609  005E2E  C18B  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16610  005E32  EC42  F02E         	call	_TMR5_WriteTimer	;wreg free
 16611  005E36  0012               	return		;funcret
 16612  005E38                     __end_of_TMR5_Reload:
 16613                           	callstack 0
 16614                           
 16615 ;; *************** function _TMR5_WriteTimer *****************
 16616 ;; Defined at:
 16617 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;  timerVal        2    8[COMRAM] unsigned short 
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;		None
 16622 ;; Return value:  Size  Location     Type
 16623 ;;                  1    wreg      void 
 16624 ;; Registers used:
 16625 ;;		wreg, status,2
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 0/0
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16635 ;;Total ram usage:        2 bytes
 16636 ;; Hardware stack levels used: 1
 16637 ;; This function calls:
 16638 ;;		Nothing
 16639 ;; This function is called by:
 16640 ;;		_TMR5_Reload
 16641 ;; This function uses a non-reentrant model
 16642 ;;
 16643                           
 16644                           	psect	text98
 16645  005C84                     __ptext98:
 16646                           	callstack 0
 16647  005C84                     _TMR5_WriteTimer:
 16648                           	callstack 12
 16649  005C84                     
 16650                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16651  005C84  A49A               	btfss	154,2,c	;volatile
 16652  005C86  EF47  F02E         	goto	i2u633_41
 16653  005C8A  EF49  F02E         	goto	i2u633_40
 16654  005C8E                     i2u633_41:
 16655  005C8E  EF52  F02E         	goto	i2l6564
 16656  005C92                     i2u633_40:
 16657  005C92                     
 16658                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16659  005C92  909A               	bcf	154,0,c	;volatile
 16660  005C94                     
 16661                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16662  005C94  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16663  005C96  6E99               	movwf	153,c	;volatile
 16664  005C98                     
 16665                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16666  005C98  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16667  005C9E                     
 16668                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16669  005C9E  809A               	bsf	154,0,c	;volatile
 16670                           
 16671                           ;mcc_generated_files/tmr5.c: 146:     }
 16672  005CA0  EF57  F02E         	goto	i2l534
 16673  005CA4                     i2l6564:
 16674                           
 16675                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16676  005CA4  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16677  005CA6  6E99               	movwf	153,c	;volatile
 16678  005CA8                     
 16679                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16680  005CA8  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16681  005CAE                     i2l534:
 16682  005CAE  0012               	return		;funcret
 16683  005CB0                     __end_of_TMR5_WriteTimer:
 16684                           	callstack 0
 16685                           
 16686 ;; *************** function _TMR5_ReadTimer *****************
 16687 ;; Defined at:
 16688 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16689 ;; Parameters:    Size  Location     Type
 16690 ;;		None
 16691 ;; Auto vars:     Size  Location     Type
 16692 ;;  readVal         2   12[COMRAM] unsigned short 
 16693 ;;  readValLow      1   15[COMRAM] unsigned char 
 16694 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16695 ;; Return value:  Size  Location     Type
 16696 ;;                  2    8[COMRAM] unsigned short 
 16697 ;; Registers used:
 16698 ;;		wreg, status,2
 16699 ;; Tracked objects:
 16700 ;;		On entry : 0/0
 16701 ;;		On exit  : 0/0
 16702 ;;		Unchanged: 0/0
 16703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16705 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16707 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16708 ;;Total ram usage:        8 bytes
 16709 ;; Hardware stack levels used: 1
 16710 ;; This function calls:
 16711 ;;		Nothing
 16712 ;; This function is called by:
 16713 ;;		_TMR5_DefaultGateInterruptHandler
 16714 ;; This function uses a non-reentrant model
 16715 ;;
 16716                           
 16717                           	psect	text99
 16718  005D24                     __ptext99:
 16719                           	callstack 0
 16720  005D24                     _TMR5_ReadTimer:
 16721                           	callstack 13
 16722  005D24                     
 16723                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16724  005D24  829A               	bsf	154,1,c	;volatile
 16725                           
 16726                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16727  005D26  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16728                           
 16729                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16730  005D2C  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16731  005D32                     
 16732                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16733  005D32  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16734  005D34  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16735  005D36  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16736  005D38  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16737  005D3A  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16738  005D3E                     
 16739                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16740  005D3E  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16741  005D42  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16742  005D46  0012               	return		;funcret
 16743  005D48                     __end_of_TMR5_ReadTimer:
 16744                           	callstack 0
 16745                           
 16746 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16747 ;; Defined at:
 16748 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;		None
 16751 ;; Auto vars:     Size  Location     Type
 16752 ;;		None
 16753 ;; Return value:  Size  Location     Type
 16754 ;;                  1    wreg      void 
 16755 ;; Registers used:
 16756 ;;		wreg, status,2, status,0
 16757 ;; Tracked objects:
 16758 ;;		On entry : 0/0
 16759 ;;		On exit  : 0/0
 16760 ;;		Unchanged: 0/0
 16761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16766 ;;Total ram usage:        0 bytes
 16767 ;; Hardware stack levels used: 1
 16768 ;; This function calls:
 16769 ;;		Nothing
 16770 ;; This function is called by:
 16771 ;;		Interrupt level 2
 16772 ;; This function uses a non-reentrant model
 16773 ;;
 16774                           
 16775                           	psect	text100
 16776  00565C                     __ptext100:
 16777                           	callstack 0
 16778  00565C                     _SMT1_PR_ACQ_ISR:
 16779                           	callstack 15
 16780  00565C                     
 16781                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16782  00565C  0139               	movlb	57	; () banked
 16783  00565E  9DA1               	bcf	161,6,b	;volatile
 16784  005660                     
 16785                           ; BSR set to: 57
 16786                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16787  005660  013F               	movlb	63	; () banked
 16788  005662  5115               	movf	21,w,b	;volatile
 16789  005664  6E48               	movwf	_smtPeriod^0,c	;volatile
 16790  005666  5116               	movf	22,w,b	;volatile
 16791  005668  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16792  00566A  5117               	movf	23,w,b	;volatile
 16793  00566C  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16794  00566E  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16795  005670                     
 16796                           ; BSR set to: 63
 16797                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16798  005670  013C               	movlb	60	; () banked
 16799  005672  AB60               	btfss	96,5,b	;volatile
 16800  005674  EF3E  F02B         	goto	i2u716_41
 16801  005678  EF40  F02B         	goto	i2u716_40
 16802  00567C                     i2u716_41:
 16803  00567C  EF49  F02B         	goto	i2l7242
 16804  005680                     i2u716_40:
 16805  005680                     
 16806                           ; BSR set to: 60
 16807  005680  0E01               	movlw	1
 16808  005682  0101               	movlb	1	; () banked
 16809  005684  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16810  005686  0E00               	movlw	0
 16811  005688  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16812  00568A  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16813  00568C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16814  00568E  EF52  F02B         	goto	i2l856
 16815  005692                     i2l7242:
 16816                           
 16817                           ; BSR set to: 60
 16818  005692  0EFF               	movlw	255
 16819  005694  0101               	movlb	1	; () banked
 16820  005696  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16821  005698  0EFF               	movlw	255
 16822  00569A  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16823  00569C  0EFF               	movlw	255
 16824  00569E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16825  0056A0  0EFF               	movlw	255
 16826  0056A2  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16827  0056A4                     i2l856:
 16828                           
 16829                           ; BSR set to: 1
 16830  0056A4  0011               	retfie		f
 16831  0056A6                     __end_of_SMT1_PR_ACQ_ISR:
 16832                           	callstack 0
 16833                           
 16834 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16835 ;; Defined at:
 16836 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16837 ;; Parameters:    Size  Location     Type
 16838 ;;		None
 16839 ;; Auto vars:     Size  Location     Type
 16840 ;;		None
 16841 ;; Return value:  Size  Location     Type
 16842 ;;                  1    wreg      void 
 16843 ;; Registers used:
 16844 ;;		wreg, status,2, status,0
 16845 ;; Tracked objects:
 16846 ;;		On entry : 0/0
 16847 ;;		On exit  : 0/0
 16848 ;;		Unchanged: 0/0
 16849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16854 ;;Total ram usage:        0 bytes
 16855 ;; Hardware stack levels used: 1
 16856 ;; This function calls:
 16857 ;;		Nothing
 16858 ;; This function is called by:
 16859 ;;		Interrupt level 2
 16860 ;; This function uses a non-reentrant model
 16861 ;;
 16862                           
 16863                           	psect	text101
 16864  005528                     __ptext101:
 16865                           	callstack 0
 16866  005528                     _SMT1_PW_ACQ_ISR:
 16867                           	callstack 15
 16868  005528                     
 16869                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16870  005528  0139               	movlb	57	; () banked
 16871  00552A  9FA1               	bcf	161,7,b	;volatile
 16872  00552C                     
 16873                           ; BSR set to: 57
 16874                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16875  00552C  013F               	movlb	63	; () banked
 16876  00552E  5118               	movf	24,w,b	;volatile
 16877  005530  0101               	movlb	1	; () banked
 16878  005532  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16879  005534  013F               	movlb	63	; () banked
 16880  005536  5119               	movf	25,w,b	;volatile
 16881  005538  0101               	movlb	1	; () banked
 16882  00553A  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16883  00553C  013F               	movlb	63	; () banked
 16884  00553E  511A               	movf	26,w,b	;volatile
 16885  005540  0101               	movlb	1	; () banked
 16886  005542  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16887  005544  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16888  005546                     
 16889                           ; BSR set to: 1
 16890                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16891  005546  013C               	movlb	60	; () banked
 16892  005548  AB60               	btfss	96,5,b	;volatile
 16893  00554A  EFA9  F02A         	goto	i2u717_41
 16894  00554E  EFAB  F02A         	goto	i2u717_40
 16895  005552                     i2u717_41:
 16896  005552  EFB4  F02A         	goto	i2l7252
 16897  005556                     i2u717_40:
 16898  005556                     
 16899                           ; BSR set to: 60
 16900  005556  0E01               	movlw	1
 16901  005558  0101               	movlb	1	; () banked
 16902  00555A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16903  00555C  0E00               	movlw	0
 16904  00555E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16905  005560  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16906  005562  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16907  005564  EFBD  F02A         	goto	i2l863
 16908  005568                     i2l7252:
 16909                           
 16910                           ; BSR set to: 60
 16911  005568  0EFF               	movlw	255
 16912  00556A  0101               	movlb	1	; () banked
 16913  00556C  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16914  00556E  0EFF               	movlw	255
 16915  005570  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16916  005572  0EFF               	movlw	255
 16917  005574  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16918  005576  0EFF               	movlw	255
 16919  005578  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16920  00557A                     i2l863:
 16921                           
 16922                           ; BSR set to: 1
 16923  00557A  0011               	retfie		f
 16924  00557C                     __end_of_SMT1_PW_ACQ_ISR:
 16925                           	callstack 0
 16926                           
 16927 ;; *************** function _SMT1_Overflow_ISR *****************
 16928 ;; Defined at:
 16929 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16930 ;; Parameters:    Size  Location     Type
 16931 ;;		None
 16932 ;; Auto vars:     Size  Location     Type
 16933 ;;		None
 16934 ;; Return value:  Size  Location     Type
 16935 ;;                  1    wreg      void 
 16936 ;; Registers used:
 16937 ;;		wreg, status,2
 16938 ;; Tracked objects:
 16939 ;;		On entry : 0/0
 16940 ;;		On exit  : 0/0
 16941 ;;		Unchanged: 0/0
 16942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;Total ram usage:        0 bytes
 16948 ;; Hardware stack levels used: 1
 16949 ;; This function calls:
 16950 ;;		Nothing
 16951 ;; This function is called by:
 16952 ;;		Interrupt level 2
 16953 ;; This function uses a non-reentrant model
 16954 ;;
 16955                           
 16956                           	psect	text102
 16957  005CD8                     __ptext102:
 16958                           	callstack 0
 16959  005CD8                     _SMT1_Overflow_ISR:
 16960                           	callstack 15
 16961  005CD8                     
 16962                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16963  005CD8  0139               	movlb	57	; () banked
 16964  005CDA  9BA1               	bcf	161,5,b	;volatile
 16965  005CDC                     
 16966                           ; BSR set to: 57
 16967                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16968  005CDC  0E00               	movlw	0
 16969  005CDE  6E48               	movwf	_smtPeriod^0,c	;volatile
 16970  005CE0  0E00               	movlw	0
 16971  005CE2  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16972  005CE4  0E00               	movlw	0
 16973  005CE6  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16974  005CE8  0E00               	movlw	0
 16975  005CEA  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 16976                           
 16977                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16978  005CEC  0E00               	movlw	0
 16979  005CEE  0101               	movlb	1	; () banked
 16980  005CF0  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16981  005CF2  0E00               	movlw	0
 16982  005CF4  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16983  005CF6  0E00               	movlw	0
 16984  005CF8  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16985  005CFA  0E00               	movlw	0
 16986  005CFC  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16987  005CFE                     
 16988                           ; BSR set to: 1
 16989  005CFE  0011               	retfie		f
 16990  005D00                     __end_of_SMT1_Overflow_ISR:
 16991                           	callstack 0
 16992                           
 16993                           ;
 16994                           ; Interrupt Vector Table @ 0x8
 16995                           ;
 16996                           
 16997                           	psect	ivt0x8
 16998  000008                     __pivt0x8:
 16999                           	callstack 0
 17000  000008                     ivt0x8_base:
 17001                           	callstack 0
 17002                           
 17003                           ; Vector 0 : SWINT
 17004  000008  17AC               	dw	_Default_ISR shr (0+2)
 17005                           
 17006                           ; Vector 1 : HLVD
 17007  00000A  17AC               	dw	_Default_ISR shr (0+2)
 17008                           
 17009                           ; Vector 2 : OSF
 17010  00000C  17AC               	dw	_Default_ISR shr (0+2)
 17011                           
 17012                           ; Vector 3 : CSW
 17013  00000E  17AC               	dw	_Default_ISR shr (0+2)
 17014                           
 17015                           ; Vector 4 : NVM
 17016  000010  17AC               	dw	_Default_ISR shr (0+2)
 17017                           
 17018                           ; Vector 5 : SCAN
 17019  000012  17AC               	dw	_Default_ISR shr (0+2)
 17020                           
 17021                           ; Vector 6 : CRC
 17022  000014  17AC               	dw	_Default_ISR shr (0+2)
 17023                           
 17024                           ; Vector 7 : IOC
 17025  000016  17AC               	dw	_Default_ISR shr (0+2)
 17026                           
 17027                           ; Vector 8 : INT0
 17028  000018  17AC               	dw	_Default_ISR shr (0+2)
 17029                           
 17030                           ; Vector 9 : ZCD
 17031  00001A  17AC               	dw	_Default_ISR shr (0+2)
 17032                           
 17033                           ; Vector 10 : AD
 17034  00001C  17AC               	dw	_Default_ISR shr (0+2)
 17035                           
 17036                           ; Vector 11 : ADT
 17037  00001E  17AC               	dw	_Default_ISR shr (0+2)
 17038                           
 17039                           ; Vector 12 : CMP1
 17040  000020  17AC               	dw	_Default_ISR shr (0+2)
 17041                           
 17042                           ; Vector 13 : SMT1
 17043  000022  1736               	dw	_SMT1_Overflow_ISR shr (0+2)
 17044                           
 17045                           ; Vector 14 : SMT1PRA
 17046  000024  1597               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17047                           
 17048                           ; Vector 15 : SMT1PRW
 17049  000026  154A               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17050                           
 17051                           ; Vector 16 : DMA1SCNT
 17052  000028  17AC               	dw	_Default_ISR shr (0+2)
 17053                           
 17054                           ; Vector 17 : DMA1DCNT
 17055  00002A  17AC               	dw	_Default_ISR shr (0+2)
 17056                           
 17057                           ; Vector 18 : DMA1OR
 17058  00002C  17AC               	dw	_Default_ISR shr (0+2)
 17059                           
 17060                           ; Vector 19 : DMA1A
 17061  00002E  17AC               	dw	_Default_ISR shr (0+2)
 17062                           
 17063                           ; Vector 20 : SPI1RX
 17064  000030  17AC               	dw	_Default_ISR shr (0+2)
 17065                           
 17066                           ; Vector 21 : SPI1TX
 17067  000032  17AC               	dw	_Default_ISR shr (0+2)
 17068                           
 17069                           ; Vector 22 : SPI1
 17070  000034  17AC               	dw	_Default_ISR shr (0+2)
 17071                           
 17072                           ; Vector 23 : I2C1RX
 17073  000036  17AC               	dw	_Default_ISR shr (0+2)
 17074                           
 17075                           ; Vector 24 : I2C1TX
 17076  000038  17AC               	dw	_Default_ISR shr (0+2)
 17077                           
 17078                           ; Vector 25 : I2C1
 17079  00003A  17AC               	dw	_Default_ISR shr (0+2)
 17080                           
 17081                           ; Vector 26 : I2C1E
 17082  00003C  17AC               	dw	_Default_ISR shr (0+2)
 17083                           
 17084                           ; Vector 27 : U1RX
 17085  00003E  160B               	dw	_UART1_rx_vect_isr shr (0+2)
 17086                           
 17087                           ; Vector 28 : U1TX
 17088  000040  15FC               	dw	_UART1_tx_vect_isr shr (0+2)
 17089                           
 17090                           ; Vector 29 : U1E
 17091  000042  17AC               	dw	_Default_ISR shr (0+2)
 17092                           
 17093                           ; Vector 30 : U1
 17094  000044  17AC               	dw	_Default_ISR shr (0+2)
 17095                           
 17096                           ; Vector 31 : TMR0
 17097  000046  17AC               	dw	_Default_ISR shr (0+2)
 17098                           
 17099                           ; Vector 32 : TMR1
 17100  000048  17AC               	dw	_Default_ISR shr (0+2)
 17101                           
 17102                           ; Vector 33 : TMR1G
 17103  00004A  17AC               	dw	_Default_ISR shr (0+2)
 17104                           
 17105                           ; Vector 34 : TMR2
 17106  00004C  17AC               	dw	_Default_ISR shr (0+2)
 17107                           
 17108                           ; Vector 35 : CCP1
 17109  00004E  17AC               	dw	_Default_ISR shr (0+2)
 17110                           
 17111                           ; Vector 36 : Undefined
 17112  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17113                           
 17114                           ; Vector 37 : NCO1
 17115  000052  17AC               	dw	_Default_ISR shr (0+2)
 17116                           
 17117                           ; Vector 38 : CWG1
 17118  000054  17AC               	dw	_Default_ISR shr (0+2)
 17119                           
 17120                           ; Vector 39 : CLC1
 17121  000056  17AC               	dw	_Default_ISR shr (0+2)
 17122                           
 17123                           ; Vector 40 : INT1
 17124  000058  17AC               	dw	_Default_ISR shr (0+2)
 17125                           
 17126                           ; Vector 41 : CMP2
 17127  00005A  17AC               	dw	_Default_ISR shr (0+2)
 17128                           
 17129                           ; Vector 42 : DMA2SCNT
 17130  00005C  17AC               	dw	_Default_ISR shr (0+2)
 17131                           
 17132                           ; Vector 43 : DMA2DCNT
 17133  00005E  17AC               	dw	_Default_ISR shr (0+2)
 17134                           
 17135                           ; Vector 44 : DMA2OR
 17136  000060  17AC               	dw	_Default_ISR shr (0+2)
 17137                           
 17138                           ; Vector 45 : DMA2A
 17139  000062  17AC               	dw	_Default_ISR shr (0+2)
 17140                           
 17141                           ; Vector 46 : I2C2RX
 17142  000064  17AC               	dw	_Default_ISR shr (0+2)
 17143                           
 17144                           ; Vector 47 : I2C2TX
 17145  000066  17AC               	dw	_Default_ISR shr (0+2)
 17146                           
 17147                           ; Vector 48 : I2C2
 17148  000068  17AC               	dw	_Default_ISR shr (0+2)
 17149                           
 17150                           ; Vector 49 : I2C2E
 17151  00006A  17AC               	dw	_Default_ISR shr (0+2)
 17152                           
 17153                           ; Vector 50 : U2RX
 17154  00006C  17AC               	dw	_Default_ISR shr (0+2)
 17155                           
 17156                           ; Vector 51 : U2TX
 17157  00006E  17AC               	dw	_Default_ISR shr (0+2)
 17158                           
 17159                           ; Vector 52 : U2E
 17160  000070  17AC               	dw	_Default_ISR shr (0+2)
 17161                           
 17162                           ; Vector 53 : U2
 17163  000072  17AC               	dw	_Default_ISR shr (0+2)
 17164                           
 17165                           ; Vector 54 : TMR3
 17166  000074  17AC               	dw	_Default_ISR shr (0+2)
 17167                           
 17168                           ; Vector 55 : TMR3G
 17169  000076  17AC               	dw	_Default_ISR shr (0+2)
 17170                           
 17171                           ; Vector 56 : TMR4
 17172  000078  1644               	dw	_TMR4_ISR shr (0+2)
 17173                           
 17174                           ; Vector 57 : CCP2
 17175  00007A  17AC               	dw	_Default_ISR shr (0+2)
 17176                           
 17177                           ; Vector 58 : Undefined
 17178  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17179                           
 17180                           ; Vector 59 : CWG2
 17181  00007E  17AC               	dw	_Default_ISR shr (0+2)
 17182                           
 17183                           ; Vector 60 : CLC2
 17184  000080  17AC               	dw	_Default_ISR shr (0+2)
 17185                           
 17186                           ; Vector 61 : INT2
 17187  000082  17AC               	dw	_Default_ISR shr (0+2)
 17188                           
 17189                           ; Vector 62 : Undefined
 17190  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17191                           
 17192                           ; Vector 63 : Undefined
 17193  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17194                           
 17195                           ; Vector 64 : Undefined
 17196  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17197                           
 17198                           ; Vector 65 : Undefined
 17199  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17200                           
 17201                           ; Vector 66 : Undefined
 17202  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17203                           
 17204                           ; Vector 67 : Undefined
 17205  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17206                           
 17207                           ; Vector 68 : Undefined
 17208  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17209                           
 17210                           ; Vector 69 : Undefined
 17211  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17212                           
 17213                           ; Vector 70 : TMR5
 17214  000094  17AC               	dw	_Default_ISR shr (0+2)
 17215                           
 17216                           ; Vector 71 : TMR5G
 17217  000096  16AD               	dw	_TMR5_GATE_ISR shr (0+2)
 17218                           
 17219                           ; Vector 72 : TMR6
 17220  000098  17AC               	dw	_Default_ISR shr (0+2)
 17221                           
 17222                           ; Vector 73 : CCP3
 17223  00009A  1686               	dw	_CCP3_CaptureISR shr (0+2)
 17224                           
 17225                           ; Vector 74 : CWG3
 17226  00009C  17AC               	dw	_Default_ISR shr (0+2)
 17227                           
 17228                           ; Vector 75 : CLC3
 17229  00009E  17AC               	dw	_Default_ISR shr (0+2)
 17230                           
 17231                           ; Vector 76 : Undefined
 17232  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17233                           
 17234                           ; Vector 77 : Undefined
 17235  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17236                           
 17237                           ; Vector 78 : Undefined
 17238  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17239                           
 17240                           ; Vector 79 : Undefined
 17241  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17242                           
 17243                           ; Vector 80 : CCP4
 17244  0000A8  1693               	dw	_CCP4_CaptureISR shr (0+2)
 17245                           
 17246                           ; Vector 81 : CLC4
 17247  0000AA  17AC               	dw	_Default_ISR shr (0+2)
 17248  0000AC                     ivt0x8_undefint:
 17249                           	callstack 0
 17250  0000AC  00FF               	reset	
 17251                           
 17252                           	psect	text103
 17253  000000                     __ptext103:
 17254                           	callstack 0
 17255  000000                     
 17256                           	psect	rparam
 17257  0000                     
 17258                           	psect	idloc
 17259                           
 17260                           ;Config register IDLOC0 @ 0x200000
 17261                           ;	unspecified, using default values
 17262  200000                     	org	2097152
 17263  200000  0FFF               	dw	4095
 17264                           
 17265                           ;Config register IDLOC1 @ 0x200002
 17266                           ;	unspecified, using default values
 17267  200002                     	org	2097154
 17268  200002  0FFF               	dw	4095
 17269                           
 17270                           ;Config register IDLOC2 @ 0x200004
 17271                           ;	unspecified, using default values
 17272  200004                     	org	2097156
 17273  200004  0FFF               	dw	4095
 17274                           
 17275                           ;Config register IDLOC3 @ 0x200006
 17276                           ;	unspecified, using default values
 17277  200006                     	org	2097158
 17278  200006  0FFF               	dw	4095
 17279                           
 17280                           ;Config register IDLOC4 @ 0x200008
 17281                           ;	unspecified, using default values
 17282  200008                     	org	2097160
 17283  200008  0FFF               	dw	4095
 17284                           
 17285                           ;Config register IDLOC5 @ 0x20000A
 17286                           ;	unspecified, using default values
 17287  20000A                     	org	2097162
 17288  20000A  0FFF               	dw	4095
 17289                           
 17290                           ;Config register IDLOC6 @ 0x20000C
 17291                           ;	unspecified, using default values
 17292  20000C                     	org	2097164
 17293  20000C  0FFF               	dw	4095
 17294                           
 17295                           ;Config register IDLOC7 @ 0x20000E
 17296                           ;	unspecified, using default values
 17297  20000E                     	org	2097166
 17298  20000E  0FFF               	dw	4095
 17299                           
 17300                           	psect	config
 17301                           
 17302                           ;Config register CONFIG1L @ 0x300000
 17303                           ;	External Oscillator Selection
 17304                           ;	FEXTOSC = OFF, Oscillator not enabled
 17305                           ;	Reset Oscillator Selection
 17306                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17307  300000                     	org	3145728
 17308  300000  8C                 	db	140
 17309                           
 17310                           ;Config register CONFIG1H @ 0x300001
 17311                           ;	Clock out Enable bit
 17312                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17313                           ;	PRLOCKED One-Way Set Enable bit
 17314                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17315                           ;	Clock Switch Enable bit
 17316                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17317                           ;	Fail-Safe Clock Monitor Enable bit
 17318                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17319  300001                     	org	3145729
 17320  300001  FF                 	db	255
 17321                           
 17322                           ;Config register CONFIG2L @ 0x300002
 17323                           ;	MCLR Enable bit
 17324                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17325                           ;	Power-up timer selection bits
 17326                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17327                           ;	Multi-vector enable bit
 17328                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17329                           ;	IVTLOCK bit One-way set enable bit
 17330                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17331                           ;	Low Power BOR Enable bit
 17332                           ;	LPBOREN = OFF, ULPBOR disabled
 17333                           ;	Brown-out Reset Enable bits
 17334                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17335  300002                     	org	3145730
 17336  300002  FF                 	db	255
 17337                           
 17338                           ;Config register CONFIG2H @ 0x300003
 17339                           ;	Brown-out Reset Voltage Selection bits
 17340                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17341                           ;	ZCD Disable bit
 17342                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17343                           ;	PPSLOCK bit One-Way Set Enable bit
 17344                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17345                           ;	Stack Full/Underflow Reset Enable bit
 17346                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17347                           ;	Debugger Enable bit
 17348                           ;	DEBUG = OFF, Background debugger disabled
 17349                           ;	Extended Instruction Set Enable bit
 17350                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17351  300003                     	org	3145731
 17352  300003  FF                 	db	255
 17353                           
 17354                           ;Config register CONFIG3L @ 0x300004
 17355                           ;	WDT Period selection bits
 17356                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17357                           ;	WDT operating mode
 17358                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17359  300004                     	org	3145732
 17360  300004  9F                 	db	159
 17361                           
 17362                           ;Config register CONFIG3H @ 0x300005
 17363                           ;	WDT Window Select bits
 17364                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17365                           ;	WDT input clock selector
 17366                           ;	WDTCCS = SC, Software Control
 17367  300005                     	org	3145733
 17368  300005  FF                 	db	255
 17369                           
 17370                           ;Config register CONFIG4L @ 0x300006
 17371                           ;	Boot Block Size selection bits
 17372                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17373                           ;	Boot Block enable bit
 17374                           ;	BBEN = OFF, Boot block disabled
 17375                           ;	Storage Area Flash enable bit
 17376                           ;	SAFEN = OFF, SAF disabled
 17377                           ;	Application Block write protection bit
 17378                           ;	WRTAPP = OFF, Application Block not write protected
 17379  300006                     	org	3145734
 17380  300006  FF                 	db	255
 17381                           
 17382                           ;Config register CONFIG4H @ 0x300007
 17383                           ;	Configuration Register Write Protection bit
 17384                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17385                           ;	Boot Block Write Protection bit
 17386                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17387                           ;	Data EEPROM Write Protection bit
 17388                           ;	WRTD = OFF, Data EEPROM not write-protected
 17389                           ;	SAF Write protection bit
 17390                           ;	WRTSAF = OFF, SAF not Write Protected
 17391                           ;	Low Voltage Programming Enable bit
 17392                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17393  300007                     	org	3145735
 17394  300007  FF                 	db	255
 17395                           
 17396                           ;Config register CONFIG5L @ 0x300008
 17397                           ;	PFM and Data EEPROM Code Protection bit
 17398                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17399  300008                     	org	3145736
 17400  300008  FF                 	db	255
 17401                           
 17402                           ;Config register CONFIG5H @ 0x300009
 17403                           ;	unspecified, using default values
 17404  300009                     	org	3145737
 17405  300009  FF                 	db	255
 17406                           tosu	equ	0x3FFF
 17407                           tosh	equ	0x3FFE
 17408                           tosl	equ	0x3FFD
 17409                           stkptr	equ	0x3FFC
 17410                           pclatu	equ	0x3FFB
 17411                           pclath	equ	0x3FFA
 17412                           pcl	equ	0x3FF9
 17413                           tblptru	equ	0x3FF8
 17414                           tblptrh	equ	0x3FF7
 17415                           tblptrl	equ	0x3FF6
 17416                           tablat	equ	0x3FF5
 17417                           prodh	equ	0x3FF4
 17418                           prodl	equ	0x3FF3
 17419                           indf0	equ	0x3FEF
 17420                           postinc0	equ	0x3FEE
 17421                           postdec0	equ	0x3FED
 17422                           preinc0	equ	0x3FEC
 17423                           plusw0	equ	0x3FEB
 17424                           fsr0h	equ	0x3FEA
 17425                           fsr0l	equ	0x3FE9
 17426                           wreg	equ	0x3FE8
 17427                           indf1	equ	0x3FE7
 17428                           postinc1	equ	0x3FE6
 17429                           postdec1	equ	0x3FE5
 17430                           preinc1	equ	0x3FE4
 17431                           plusw1	equ	0x3FE3
 17432                           fsr1h	equ	0x3FE2
 17433                           fsr1l	equ	0x3FE1
 17434                           bsr	equ	0x3FE0
 17435                           indf2	equ	0x3FDF
 17436                           postinc2	equ	0x3FDE
 17437                           postdec2	equ	0x3FDD
 17438                           preinc2	equ	0x3FDC
 17439                           plusw2	equ	0x3FDB
 17440                           fsr2h	equ	0x3FDA
 17441                           fsr2l	equ	0x3FD9
 17442                           status	equ	0x3FD8

Data Sizes:
    Strings     111
    Constant    0
    Data        3
    BSS         175
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3433_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _startAccell->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _calcSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    ___flsub->___fladd
    _checkBatt->___flge
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _startAccell->_printf
    _getCurve->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  207813
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  206666
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   70309
                                             14 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0   11959
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45105
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44944
                                              6 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   44215
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43709
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32330
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             44 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2723
                                             19 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    6892
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    4328
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1526
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9960
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    9389
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4313
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1165
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
     _getReverse
     _printf
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B0       7       68.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      32        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 15:26:09 2024

                             _CCP4_Initialize 5B76                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 002C                                  ___fldiv@bexp 002B  
                                 _startAccell 3FAC                                  ___fldiv@sign 0024  
                                          l72 5E18                                            l75 5D22  
                                          l69 5610                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 54C8                                           l404 55C6  
                                         l308 5480                                           l309 549A  
                                         l318 5E40                                           l520 565A  
                                         l441 5BD0                                           l362 5E5E  
                                         l371 5E4A                                           l188 4CCC  
                                         l284 5110                                           l365 5E72  
                                         l359 5E68                                           l368 5E54  
                                         l712 5A16                                           l449 5E9A  
                                         l482 5BA2                                           l723 5DB8  
                                         l555 5E7C                                           l644 5C2A  
                                         l740 59AE                                           l709 5DD0  
                                         l581 590C                                           l726 59E2  
                                         l479 5E90                                           l751 5DE8  
                                         l737 5E00                                           l754 597A  
                                         l923 5DA0                                           l695 5E86  
                                         l795 5B14                                           l893 5C56  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 5776  
                                         _pad 4D92                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5D86  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5E88  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 5732                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 5A80                                  ___fltol@exp1 0082  
                                        l1042 5524                                          ?_abs 0026  
                                        l2012 27CA                                          l2021 2A5C  
                                        l2022 2A4A                                          l1054 5A90  
                                        l1311 4816                                          l2016 2B52  
                                        l2120 4E52                                          l1312 4828  
                                        l1240 450E                                          l1224 43F6  
                                        l1057 5AB0                                          l2210 18CE  
                                        l2019 29E4                                          l2115 4DD6  
                                        l2060 3BBA                                          l1252 5E28  
                                        l1324 3588                                          l2029 2B14  
                                        l2053 3B22                                          l2118 4E18  
                                        l2126 2F8E                                          l1319 34F6  
                                        l4000 55A8                                          l2056 3C7E  
                                        l1360 3ACA                                          l1512 3FAA  
                                        l2312 51A6                                          l2320 5730  
                                        l2128 2F96                                          l1249 523A  
                                        l1257 52CC                                          l4010 55BC  
                                        l4002 55B2                                          l2146 31D2  
                                        l2067 3C16                                          l1339 36AA  
                             _timer3ReloadVal 0186                                          l4012 55BE  
                                        l4004 55B6                                          l4020 5D00  
                                        l2332 57EE                                          l2164 1D1E  
                                        l2076 5CD6                                          l1525 428C  
                                        l1277 346A                                          l1269 4128  
                                        l4014 55C0                                          l4006 55B8  
                                        l4030 4C7C                                          l4022 4C04  
                                        l1382 3C8C                                          l2326 53A6  
                                        l2182 1490                                          l2262 5334  
                                        l2351 546C                                          l2263 533C  
                                        l4104 5C2C                                          l4016 55C2  
                                        l4008 55BA                                          l4040 4C8A  
                                        l4032 4C7E                                          l4024 4C24  
                                        l1384 3CB0                                          l2336 4B20  
                                        l2256 213A                                          l2248 2240  
                                        l1369 43D8                                          l1385 3CC4  
                                        l2281 57B4                                          l2273 4A2C  
                                        l1297 347A                                          l4018 55C4  
                                        l4042 4C8C                                          l4034 4C80  
                                        l4026 4C26                                          l4114 5DEA  
                                        l4130 5DBA                                          l1378 4C02  
                                        l1386 3CEC                                          l1642 4FC2  
                                        l2290 3804                                          l2346 5464  
                                        l1395 3E22                                          l4044 4C8E  
                                        l4036 4C82                                          l4028 4C2E  
                                        l1629 4D90                                          l1477 461A  
                                        l4046 5E02                                          l4038 4C88  
                                        l4070 5AE6                                          l2278 57AC  
                                        l1663 48E8                                          l2287 38C0  
                                        l4080 5B0E                                          l4072 5B04  
                                        l1672 58D4                                          l1657 506C  
                                        l2297 589C                                          l4058 54CA  
                                        l4082 5B10                                          l4074 5B06  
                                        l4090 5D98                                          l4092 5DD2  
                                        l4084 5DA2                                          l4076 5B08  
                                        l1668 492E                                          l4078 5B0C  
                                        l4086 5D86                                          l1926 2432  
                                        l1695 4722                                          l1943 254C  
                                        l1935 2702                                          l1927 2420  
                                        l4088 5D92                                          l1952 261C  
                                        l1928 23E6                                          l1953 260A  
                                        l1980 2EEC                                          l1982 2D4C  
                                        ?_pad 0026                                          l1991 2D92  
                                        l7040 55E4                                          l8000 4CD2  
                                        l1968 56EC                                          l1993 2E0A  
                                        l1985 2D10                                          l7050 55FC  
                                        l7042 55E8                                          l7034 55C8  
                                        l8010 4D02                                          l8002 4CE0  
                                        l1994 2DF8                                          l7052 5604  
                                        l7044 55EC                                          l7036 55D8  
                                        l8020 4D30                                          l8012 4D06  
                                        l8004 4CE8                                          l8100 4898  
                                        l7054 5608                                          l7046 55F0  
                                        l7038 55DC                                          l8030 4D64  
                                        l8022 4D3E                                          l8014 4D0E  
                                        l8006 4CEC                                          l6430 4510  
                                        l8110 4926                                          l8102 48A8  
                                        l7048 55F8                                          l8032 4D6A  
                                        l8024 4D44                                          l8016 4D20  
                                        l8008 4CFA                                          l6440 4544  
                                        l6432 4514                                          l8112 492C  
                                        l8104 48B6                                          l7400 54C4  
                                        l8120 58C4                                          l8200 49B6  
                                        l9000 330C                                          l6530 5E42  
                                        l8026 4D5A                                          l8018 4D28  
                                        l8034 4D70                                          l8130 4648  
                                        l6450 4586                                          l6442 4554  
                                        l6434 4522                                          l8106 48C8  
                                        l7402 54C6                                          l7410 5136  
                                        l8050 4F32                                          l8042 4F14  
                                        l8202 49C2                                          l9010 3374  
                                        l9002 3322                                          l6700 58EE  
                                        l6532 5E60                                          l8036 4D80  
                                        l8028 4D62                                          l8140 4696  
                                        l8132 4672                                          l8124 461C  
                                        l6460 45D8                                          l6452 4592  
                                        l6444 4558                                          l6436 4532  
                                        l7500 2388                                          l7420 2242  
                                        l8108 48D6                                          l6380 5A88  
                                        l7404 5E3A                                          l7412 5140  
                                        l8300 313E                                          l8060 4F6A  
                                        l8052 4F40                                          l8044 4F18  
                                        l8116 589E                                          l8212 4A24  
                                        l8220 540E                                          l9020 33BA  
                                        l9012 3386                                          l9004 3334  
                                        l6550 5E88                                          l3990 557C  
                                        l6702 5908                                          l6710 5644  
                                        l6534 5E56                                          l8038 4D88  
                                        l8150 46C2                                          l8134 4674  
                                        l8126 4634                                          l6470 460A  
                                        l6462 45DA                                          l6454 45A0  
                                        l6446 4568                                          l6438 4536  
                                        l9110 42BC                                          l9102 428E  
                                        l7510 2400                                          l7502 23B2  
                                        l7430 2280                                          l7422 2250  
                                        l6382 5A8C                                          l7414 515E  
                                        l7406 5112                                          l8310 3184  
                                        l8302 314C                                          l8062 4F78  
                                        l8070 4FA2                                          l8054 4F48  
                                        l8046 4F26                                          l8118 58B4  
                                        l8206 49CE                                          l8230 36AC  
                                        l9030 33FC                                          l9022 33C0  
                                        l9014 3394                                          l9006 334A  
                                        l3992 557E                                          l6552 5E74  
                                        l6712 5648                                          l6704 5612  
                                        l6536 5E6A                                          l6528 5E4C  
                                        l6720 5072                                          l8160 46F2  
                                        l8136 4684                                          l6464 45E4  
                                        l6456 45AA                                          l6448 457E  
                                        l9120 436C                                          l9112 4338  
                                        l9104 429A                                          l7600 2692  
                                        l7520 2440                                          l7512 2404  
                                        l7504 23CE                                          l7440 22B0  
                                        l7432 2290                                          l7424 225E  
                                        l6384 5A8E                                          l7416 5194  
                                        l7408 5124                                          l8312 3190  
                                        l8304 315E                                          l8072 4FB2  
                                        l8064 4F8E                                          l8056 4F5A  
                                        l8048 4F2E                                          l8080 4FF2  
                                        l8208 49E0                                          l8232 36CC  
                                        l8216 533E                                          l8224 5444  
                                        l8400 13EE                                          l8320 1072  
                                        l9024 33C4                                          l9016 33A2  
                                        l9008 3360                                          l3994 5586  
                                        l6714 564A                                          l6706 5626  
                                        l6730 509C                                          l6722 507E  
                                        l8162 4702                                          l8146 46AE  
                                        l8138 4688                                          l6458 45C8  
                                        l6466 45EA                                          l9130 43C4  
                                        l9122 4378                                          l9114 434C  
                                        l9106 42A8                                          l7610 26DA  
                                        l7602 26A2                                          l7530 2482  
                                        l7522 2450                                          l7514 2412  
                                        l7506 23DE                                          l7450 22DA  
                                        l7442 22C2                                          l7434 2292  
                                        l7426 2260                                          l9050 38D0  
                                        l6386 5A9E                                          l6378 5A82  
                                        l8170 4DA0                                          l8314 3198  
                                        l8306 316C                                          l8074 4FBA  
                                        l8066 4F96                                          l8058 4F62  
                                        l8090 506A                                          l8082 5002  
                                        l8250 3878                                          l8242 37B8  
                                        l8234 3724                                          l8218 534E  
                                        l8226 5456                                          l8410 1450  
                                        l8402 13F6                                          l8330 10C6  
                                        l8322 107C                                          l9034 340E  
                                        l9018 33B0                                          l9026 33CC  
                                        l9042 342C                                          l6548 5E92  
                                        l3996 5590                                          l6716 5656  
                                        l6708 562A                                          l6740 50B0  
                                        l6732 50A0                                          l6724 508E  
                                        l8164 4712                                          l8156 46D6  
                                        l8148 46B8                                          l6468 45FA  
                                        l6660 5206                                          l6652 51A8  
                                        l9132 43D0                                          l9124 4394  
                                        l9116 4354                                          l9108 42BC  
                                        l7612 26DC                                          l7604 26C2  
                                        l7540 24B0                                          l7532 2490  
                                        l7516 2414                                          l7508 23F4  
                                        l7452 22EA                                          l7460 2314  
                                        l7444 22C4                                          l7428 2270  
                                        l7436 229A                                          l9060 3924  
                                        l9052 38E6                                          l7700 418E  
                                        l8180 4DF6                                          l8172 4DB4  
                                        l8308 3172                                          l8316 31AA  
                                        l8260 2F0E                                          l8068 4F9C  
                                        l8084 5030                                          l8252 38A0  
                                        l8244 37F4                                          l8236 3738  
                                        l8500 18C6                                          l8412 1462  
                                        l8404 142A                                          l8340 110A  
                                        l8332 10D0                                          l8324 108C  
                                        l9036 3420                                          l9028 33DE  
                                        l9140 441A                                          l6670 5BC0  
                                        l3998 55A6                                          l6750 50C4  
                                        l6742 50B4                                          l6734 50A4  
                                        l6726 5094                                          l6718 506E  
                                        l8158 46E2                                          l6662 5232  
                                        l6654 51B0                                          l9126 43A0  
                                        l9118 4368                                          l7614 26E2  
                                        l7606 26C6                                          l7550 251C  
                                        l7542 24BA                                          l7534 249C  
                                        l7526 2464                                          l7518 241E  
                                        l7470 234C                                          l7462 2324  
                                        l7454 22FA                                          l7446 22CA  
                                        l7438 22AA                                          l9070 3962  
                                        l9062 3930                                          l9054 38EA  
                                        l8094 482A                                          l7710 4204  
                                        l7702 41AC                                          l8190 5776  
                                        l7390 5490                                          l7622 56EE  
                                        l7630 57B6                                          l8182 4DFA  
                                        l8174 4DC2                                          l8270 2F82  
                                        l8262 2F38                                          l8086 5040  
                                        l8078 4FC4                                          l8254 38B0  
                                        l8238 3746                                          l8246 3828  
                                        l8510 1982                                          l8502 18EA  
                                        l8430 1512                                          l8414 146A  
                                        l8406 143A                                          l8342 1116  
                                        l8350 112C                                          l8334 10D8  
                                        l8326 109A                                          l9310 366C  
                                        l9150 4474                                          l9142 441E  
                                        l9134 43DA                                          l6672 5BCA  
                                        l6568 5E7E                                          l6680 5C18  
                                        l6760 510C                                          l6752 50C8  
                                        l6744 50B8                                          l6736 50A8  
                                        l6728 5098                                          l6656 51C6  
                                        l9128 43BC                                          l7616 26F0  
                                        l7608 26D4                                          l7552 252C  
                                        l7536 24A0                                          l7528 2474  
                                        l7544 24C0                                          l7480 2360  
                                        l7472 2350                                          l7464 2336  
                                        l7456 230A                                          l7448 22D8  
                                        l9080 3A22                                          l9072 3978  
                                        l9056 3906                                          l9064 393C  
                                        l9048 38C2                                          l8096 485A  
                                        l6592 5E1A                                          l7720 426C  
                                        l7712 4224                                          l7704 41B4  
                                        l8192 5790                                          l7392 549C  
                                        l7624 56FA                                          l7632 57C2  
                                        l8184 4E26                                          l8176 4DCE  
                                        l8168 4D92                                          l8280 2FCC  
                                        l8272 2F9E                                          l8264 2F58  
                                        l7800 2D1A                                          l8088 5064  
                                        l8248 3864                                          l7640 5866  
                                        l8600 1C46                                          l8520 19CA  
                                        l8512 1990                                          l8504 194E  
                                        l8440 154A                                          l8432 151A  
                                        l8424 14AE                                          l8416 1484  
                                        l8408 143E                                          l8360 11B6  
                                        l8352 1152                                          l8344 111E  
                                        l8336 10EA                                          l8328 10A2  
                                        l9312 3444                                          l6920 476A  
                                        l6912 4724                                          l9160 449E  
                                        l9152 447C                                          l9144 4466  
                                        l9136 4404                                          l6674 5BCE  
                                        l6666 5BA4                                          l6690 5B92  
                                        l6682 5C1A                                          l6754 50CC  
                                        l6746 50BC                                          l6738 50AC  
                                        l6658 51D6                                          l7618 26F2  
                                        l7570 25AE                                          l7562 2586  
                                        l7546 24E6                                          l7554 253C  
                                        l7538 24AE                                          l7490 2374  
                                        l7482 2364                                          l7474 2354  
                                        l7466 2344                                          l7458 230C  
                                        l9090 3A96                                          l9074 3A0A  
                                        l9066 3948                                          l9058 390E  
                                        l8098 486A                                          l9314 3D3C  
                                        l7650 3E56                                          l7714 4236  
                                        l7706 41C8                                          l7394 54AE  
                                        l7386 5470                                          l7626 570C  
                                        l7634 57C6                                          l8186 4E3A  
                                        l8178 4DE2                                          l8290 306C  
                                        l8282 2FD6                                          l8274 2FB0  
                                        l8266 2F66                                          l8258 2EEE  
                                        l7810 2D72                                          l7802 2D38  
                                        l7730 2B70                                          l8194 4930  
                                        l8602 1C4E                                          l8530 19F4  
                                        l8522 19CE                                          l8506 195C  
                                        l8514 1998                                          l8450 1594  
                                        l8442 1558                                          l8426 14C0  
                                        l8434 151E                                          l8418 149C  
                                        l8370 1226                                          l8362 11CE  
                                        l8346 1122                                          l8338 10F8  
                                        l6930 47B6                                          l6922 4774  
                                        l6914 473C                                          l9170 44F6  
                                        l9162 44AC                                          l9154 4484  
                                        l9146 446A                                          l9138 4416  
                                        l6668 5BB4                                          l6692 5B9C  
                                        l6684 5C26                                          l6676 5C00  
                                        l6756 50D8                                          l6748 50C0  
                                        l7572 25B6                                          l7564 2590  
                                        l7556 2562                                          l7548 251A  
                                        l7580 25DA                                          l7492 2378  
                                        l7484 2368                                          l7476 2358  
                                        l7468 2348                                          l9092 3A9E  
                                        l9316 3A42                                          l9076 3A16  
                                        l9068 395E                                          l7660 3E98  
                                        l7652 3E5A                                          l7644 3E24  
                                        l7708 41D6                                          l7716 423C  
                                        l7396 54B0                                          l7388 5470  
                                        l7628 5710                                          l7636 57E2  
                                        l8284 2FDC                                          l8292 30D0  
                                        l8276 2FBE                                          l8268 2F68  
                                        l7820 2DB0                                          l7812 2D78  
                                        l7804 2D3A                                          l7732 2B80  
                                        l7740 2BAA                                          l7724 2B54  
                                        l8196 4950                                          l8620 1CD8  
                                        l8612 1CA0                                          l8604 1C60  
                                        l8540 1A28                                          l8532 19FA  
                                        l8524 19D4                                          l8516 19AC  
                                        l8508 1970                                          l8460 15DA  
                                        l8452 15A6                                          l8444 155C  
                                        l8436 1526                                          l8428 14DC  
                                        l8380 12A2                                          l8364 11D8  
                                        l8356 1188                                          l8348 1126  
                                        l8700 20AE                                          l6940 4810  
                                        l6932 47CC                                          l6924 478C  
                                        l6916 4746                                          l9308 355A  
                                        l9172 44FA                                          l9164 44BC  
                                        l9156 4488                                          l9148 4470  
                                        l9180 5D48                                          l6694 5BA0  
                                        l6686 5B76                                          l6678 5C14  
                                        l6758 50E4                                          l7910 283E  
                                        l7902 27FE                                          l7590 262C  
                                        l7582 25DE                                          l7574 25BA  
                                        l7566 259E                                          l7558 2572  
                                        l7494 237C                                          l7486 236C  
                                        l7478 235C                                          l9094 3ABA  
                                        l9086 3A2E                                          l7670 3EF2  
                                        l7662 3EB6                                          l7654 3E68  
                                        l7646 3E28                                          l7718 424C  
                                        l7398 54C0                                          l8294 30EC  
                                        l8286 305E                                          l8278 2FC4  
                                        l7830 2E1A                                          l7822 2DB4  
                                        l7814 2D82                                          l7806 2D4A  
                                        l7750 2BD6                                          l7742 2BBA  
                                        l7734 2B90                                          l7726 2B60  
                                        l8198 498E                                          l8622 1CDE  
                                        l8614 1CB2                                          l8606 1C66  
                                        l8526 19E0                                          l8518 19BA  
                                        l8534 1A00                                          l8542 1A2E  
                                        l8550 1AC6                                          l8470 16EE  
                                        l8462 163E                                          l8446 156E  
                                        l8454 15AE                                          l8438 1538  
                                        l8382 12AC                                          l8374 125C  
                                        l8358 119A                                          l8630 4A58  
                                        l8710 21A8                                          l8702 20F6  
                                        l6942 4810                                          l6934 47D4  
                                        l6926 4790                                          l6918 4758  
                                        l9174 44FE                                          l9166 44D0  
                                        l9158 449A                                          l9182 5D4C  
                                        l6688 5B86                                          l6696 58D6  
                                        l7920 2890                                          l7912 285A  
                                        l7904 280E                                          l8800 3BEC  
                                        l7592 2638                                          l7584 25EC  
                                        l7576 25CA                                          l7568 25A0  
                                        l7496 2380                                          l7488 2370  
                                        l9096 3AC2                                          l9088 3A78  
                                        l7672 3F20                                          l7664 3EBE  
                                        l7680 3F5A                                          l7656 3E88  
                                        l7648 3E36                                          l8296 310A  
                                        l8288 3066                                          l7840 2E7C  
                                        l7832 2E26                                          l7824 2DC2  
                                        l7816 2D90                                          l7808 2D5C  
                                        l7752 2BE6                                          l7760 2C10  
                                        l7744 2BC0                                          l7736 2BA0  
                                        l7728 2B6E                                          l8616 1CBE  
                                        l8608 1C6C                                          l8624 1CFA  
                                        l8560 1B30                                          l8552 1AE4  
                                        l8544 1A86                                          l8536 1A12  
                                        l8528 19F0                                          l8480 17AC  
                                        l8472 1722                                          l8464 1696  
                                        l8456 15B6                                          l8448 157C  
                                        l8392 1324                                          l8376 126E  
                                        l8368 1200                                          l8640 4AB0  
                                        l8720 21EE                                          l8712 21BA  
                                        l8704 214E                                          l6928 47A4  
                                        l6936 47D8                                          l9176 4502  
                                        l9168 44E4                                          l9184 5D4E  
                                        l6698 58EA                                          l7930 28EE  
                                        l7922 28A0                                          l7914 2866  
                                        l7906 2818                                          l8810 3C2A  
                                        l8802 3BF8                                          l7594 2646  
                                        l7586 2602                                          l7578 25CC  
                                        l7498 2384                                          l8650 5948  
                                        l7682 3F6A                                          l7674 3F40  
                                        l7666 3ED2                                          l7658 3E8C  
                                        l7690 412E                                          l8298 3124  
                                        l7850 2EDA                                          l7842 2E92  
                                        l7834 2E34                                          l7826 2DF0  
                                        l7818 2DA2                                          l7770 2C52  
                                        l7762 2C20                                          l7754 2BF6  
                                        l7746 2BC6                                          l7738 2BA2  
                                        l8618 1CC6                                          l8570 1B6E  
                                        l8562 1B34                                          l8554 1B00  
                                        l8546 1ABA                                          l8538 1A24  
                                        l8490 1880                                          l8482 17BC  
                                        l8474 1756                                          l8466 16CA  
                                        l8458 15C6                                          l8394 1358  
                                        l8378 128A                                          l8386 12D4  
                                        l8642 4AC2                                          l8634 4A64  
                                        l8714 21CE                                          l6938 47EE  
                                        l9178 4506                                          l9186 5D5C  
                                        l7940 299E                                          l7932 290E  
                                        l7924 28B0                                          l7916 2872  
                                        l7908 2832                                          l8812 3C4E  
                                        l8804 3C06                                          l8732 59E4  
                                        l7596 2680                                          l8740 3CF4  
                                        l7684 3F8A                                          l7676 3F42  
                                        l7668 3EE0                                          l7692 413C  
                                        l7852 2EE0                                          l7844 2EAC  
                                        l7836 2E5E                                          l7764 2C36  
                                        l7756 2C06                                          l7748 2BD4  
                                        l8580 1BA0                                          l8572 1B76  
                                        l8564 1B44                                          l8556 1B12  
                                        l8548 1AC2                                          l8492 1894  
                                        l8484 17F0                                          l8476 176A  
                                        l8468 16D0                                          l8396 135E  
                                        l8388 12EE                                          l8644 4AF4  
                                        l8636 4A72                                          l8628 4A2E  
                                        l8708 217A                                          l8660 1D74  
                                        l8724 21FC                                          l8652 1D20  
                                        l7950 29F4                                          l7942 29AC  
                                        l7934 291E                                          l7926 28C0  
                                        l7918 2880                                          l7870 2732  
                                        l7862 2704                                          l8814 3C5E  
                                        l8806 3C24                                          l8734 59B0  
                                        l8830 4B22                                          l7598 2682  
                                        l8742 3D00                                          l8750 3D28  
                                        l7678 3F54                                          l7694 415C  
                                        l7854 2EE2                                          l7846 2EC8  
                                        l7838 2E62                                          l7790 2CD4  
                                        l7782 2C8A                                          l7766 2C46  
                                        l7774 2C66                                          l7758 2C08  
                                        l8582 1BA6                                          l8590 1BF6  
                                        l8574 1B84                                          l8566 1B56  
                                        l8558 1B20                                          l8486 1848  
                                        l8494 1898                                          l8478 179C  
                                        l8398 13BA                                          l8638 4A8E  
                                        l8726 222A                                          l8718 21DC  
                                        l8670 1E40                                          l8662 1DA0  
                                        l8654 1D4E                                          l8822 52CE  
                                        l8910 3FAC                                          l7952 2A02  
                                        l7944 29CA                                          l7936 293E  
                                        l7928 28DE                                          l7880 276E  
                                        l7872 2742                                          l7864 2712  
                                        l8816 3C6C                                          l8808 3C26  
                                        l8832 4B3E                                          l8840 4B7E  
                                        l8648 597C                                          l8760 3DB6  
                                        l8744 3D08                                          l8752 3D6A  
                                        l8736 3C80                                          l7696 4160  
                                        l7688 412A                                          l7848 2ECC  
                                        l7792 2CDC                                          l7784 2CA4  
                                        l7776 2C76                                          l7768 2C4E  
                                        l8592 1C08                                          l8584 1BCC  
                                        l8576 1B8C                                          l8568 1B5E  
                                        l8496 18A8                                          l8488 184C  
                                        l8680 1F30                                          l8672 1E6E  
                                        l8664 1DB0                                          l8656 1D60  
                                        l8824 52D6                                          l8920 4048  
                                        l8912 3FBC                                          l7962 2A6C  
                                        l7970 2AB4                                          l7954 2A06  
                                        l7946 29D4                                          l7938 2968  
                                        l7890 27A4                                          l7882 2774  
                                        l7874 2752                                          l7866 2720  
                                        l8818 3C6E                                          l8842 4B9A  
                                        l8850 4BEA                                          l8834 4B5A  
                                        l8770 3E12                                          l8762 3DD2  
                                        l8754 3D86                                          l8746 3D14  
                                        l8738 3CCC                                          l7698 416E  
                                        l7794 2CEC                                          l7786 2CB4  
                                        l7778 2C76                                          l8594 1C22  
                                        l8586 1BE8                                          l8578 1B94  
                                        l8498 18BA                                          l8682 1F42  
                                        l8674 1E9C                                          l8666 1DF0  
                                        l8658 1D70                                          l8826 52E4  
                                        l8930 4090                                          l8922 4064  
                                        l8914 3FC2                                          l7980 2B28  
                                        l7972 2ACE                                          l7964 2A78  
                                        l7956 2A14                                          l7948 29E2  
                                        l7892 27B4                                          l7884 2782  
                                        l7876 2758                                          l7868 2722  
                                        l8780 3AEC                                          l8844 4BB6  
                                        l8836 4B62                                          l8764 3DDE  
                                        l8756 3D92                                          l7796 2D00  
                                        l7788 2CC4                                          l8596 1C28  
                                        l8588 1BF0                                          l8684 1F64  
                                        l8692 1FE6                                          l8676 1EF8  
                                        l8668 1E00                                          l8828 5312  
                                        l8852 5CB0                                          l8860 34F6  
                                        l8940 4100                                          l8924 4070  
                                        l8932 40A0                                          l8916 3FF2  
                                        l7982 2B36                                          l7974 2AE2  
                                        l7966 2A86                                          l7958 2A42  
                                        l7894 27BA                                          l7886 2784  
                                        l7878 2768                                          l8790 3B64  
                                        l8782 3B32                                          l8846 4BBE  
                                        l8838 4B6E                                          l8766 3DFA  
                                        l8758 3DAE                                          l8950 523C  
                                        l7798 2D0E                                          l8598 1C3A  
                                        l8694 2014                                          l8686 1F76  
                                        l8854 5CBA                                          l8862 3512  
                                        l8870 3546                                          l8942 410A  
                                        l8934 40D6                                          l8926 4086  
                                        l8918 4014                                          l7984 2B38  
                                        l7976 2AFC                                          l7968 2AB0  
                                        l7896 27DA                                          l7888 2794  
                                        l8792 3B70                                          l8784 3B48  
                                        l8776 3ACE                                          l8848 4BCA  
                                        l8768 3E02                                          l8960 52AC  
                                        l8952 5242                                          l7992 56A6  
                                        l8688 1FBA                                          l8880 35F8  
                                        l8872 358C                                          l8864 351E  
                                        l8944 410E                                          l8936 40DE  
                                        l8928 408A                                          l7978 2B18  
                                        l7986 2B3E                                          l7898 27EA  
                                        l8794 3BA2                                          l8778 3ADE  
                                        l8962 52B4                                          l8954 5258  
                                        l7994 56B8                                          l8698 209C  
                                        l8890 3644                                          l8882 360C  
                                        l8874 35A0                                          l8866 353A  
                                        l8858 347C                                          l8946 4120  
                                        l8938 40EA                                          l7988 2B42  
                                        l8796 3BA4                                          l8788 3B5C  
                                        l8964 52C4                                          l8956 5260  
                                        l8980 3250                                          l8972 31D4  
                                        l8884 361E                                          l8876 35B4  
                                        l8948 4124                                          l7998 4CCE  
                                        l8798 3BB0                                          l8958 5264  
                                        l8990 32C2                                          l8982 3260  
                                        l8974 3200                                          l8878 35E4  
                                        STR_1 103C                                          l8968 52CA  
                                        l8992 32D4                                          l8984 327E  
                                        l8976 321C                                          l8888 3632  
                                        l8896 3658                                          STR_2 1053  
                                        STR_3 1023                                          l8994 32E0  
                                        l8986 329A                                          l8978 3238  
                                        STR_4 1001                                          STR_5 1015  
                                        l8996 32E8                                          l8988 32B2  
                                        STR_6 1048                                          STR_7 1030  
                                        l8998 32FA                                          STR_8 105D  
                                        STR_9 1065                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        u6100 5A9E                                          u6101 5A9A  
                                        u6200 45FA                                          u6201 45F6  
                                        _PMD0 0039C0                                          u2845 55B0  
                                        _PMD1 0039C1                                          u2846 55B2  
                                        u6150 4522                                          _PMD2 0039C2  
                                        u6151 451E                                          _PMD3 0039C3  
                                        u6160 4544                                          u7200 54C0  
                                        u8000 2E34                                          _PMD4 0039C4  
                                        u6161 4540                                          u7201 54BC  
                                        u8001 2E30                                          _PMD5 0039C5  
                                        u6170 457E                                          u7210 5124  
                                        u8010 2E7C                                          _PMD6 0039C6  
                                        u6171 457A                                          u7211 5120  
                                        u8011 2E78                                          _PMD7 0039C7  
                                        u8100 27DA                                          u6180 45A0  
                                        u6420 51C6                                          u7300 22EA  
                                        u7220 5136                                          u8020 2EAC  
                                        u8101 27D6                                          u6181 459C  
                                        u6421 51C2                                          u7301 22E6  
                                        u7221 5132                                          u8021 2EA8  
                                        u8110 27EA                                          u6190 45C8  
                                        u6430 51D6                                          u7310 22FA  
                                        u7230 515E                                          u8030 2EDA  
                                        u8111 27E6                                          u6191 45C4  
                                        u6431 51D2                                          u7311 22F6  
                                        u7231 515A                                          u8031 2ED6  
                                        u8200 2ACE                                          u8120 2988  
                                        u8040 2720                                          u7400 2440  
                                        u7320 2336                                          u7240 5194  
                                        u9000 119A                                          u8201 2ACA  
                                        u8041 271C                                          u7401 243C  
                                        u7321 2332                                          u7241 5190  
                                        u9001 1196                                          u8210 2AFC  
                                        u8130 29E2                                          u8050 2732  
                                        u7410 2450                                          u7330 2344  
                                        u7250 225E                                          u9010 1226  
                                        u8211 2AF8                                          u8131 29DE  
                                        u8051 272E                                          u7411 244C  
                                        u7331 2340                                          u7251 225A  
                                        u9011 1222                                          u8220 2B36  
                                        u8140 2A02                                          u8060 2742  
                                        u7500 25AE                                          u7420 2482  
                                        u7340 23B2                                          u7260 2270  
                                        u7180 5480                                          u8300 4F40  
                                        u9100 1484                                          u9020 1256  
                                        u6700 47A4                                          u8221 2B32  
                                        u8141 29FE                                          u8125 297E  
                                        u8061 273E                                          u7501 25AA  
                                        u7421 247E                                          u7341 23AE  
                                        u7261 226C                                          u7181 547C  
                                        u8301 4F3C                                          u9101 1480  
                                        u9021 1250                                          u6701 47A0  
                                        u8230 4CE0                                          u8150 2A14  
                                        u8070 2782                                          u7510 25CA  
                                        u7430 2490                                          u7350 23CA  
                                        u7270 2280                                          u7190 5490  
                                        u8310 4F5A                                          u9110 14AA  
                                        u9030 1258                                          u6710 47B6  
                                        u8231 4CDC                                          u8151 2A10  
                                        u8071 277E                                          u7511 25C6  
                                        u7431 248C                                          u7351 23C4  
                                        u7271 227C                                          u7191 548C  
                                        u8311 4F56                                          u9111 14A6  
                                        u6711 47B2                                          u8240 4CFA  
                                        u8160 2A42                                          u8080 2794  
                                        u7600 26A2                                          u7520 25DA  
                                        u7440 24AE                                          u7360 23CC  
                                        u7280 22C2                                          u8400 48B6  
                                        u8320 4F78                                          u9200 15A6  
                                        u9120 14C0                                          u9040 126E  
                                        u6720 47CC                                          u8241 4CF6  
                                        u8161 2A3E                                          u8081 2790  
                                        u7601 269E                                          u7521 25D6  
                                        u7441 24AA                                          u7281 22BE  
                                        u8401 48B2                                          u8321 4F74  
                                        u9201 15A2                                          u9121 14BC  
                                        u9041 126A                                          u6721 47C8  
                                        u8250 4D20                                          u8170 2A58  
                                        u8090 27A4                                          u7610 26C2  
                                        u7530 25EC                                          u7450 24E6  
                                        u7370 23F4                                          u7290 22D8  
                                        u8410 48D6                                          u8330 4F8E  
                                        u9210 16EE                                          u9130 14DC  
                                        u9050 1320                                          u6730 47EE  
                                        u8251 4D1C                                          u8171 2A54  
                                        u8091 27A0                                          u7611 26BE  
                                        u7531 25E8                                          u7451 24E2  
                                        u7371 23F0                                          u7291 22D4  
                                        u8411 48D2                                          u8331 4F8A  
                                        u9211 16EA                                          u9131 14D8  
                                        u9051 131C                                          u6731 47EA  
                                        u8260 4D3E                                          u8180 2A6C  
                                        u8500 4702                                          u7620 26D4  
                                        u7540 2602                                          u7460 252C  
                                        u7380 2412                                          u8420 4926  
                                        u8340 4FB2                                          u9300 1982  
                                        u9220 1756                                          u9140 1512  
                                        u9060 13B6                                          u6740 480C  
                                        u6660 473C                                          u8261 4D3A  
                                        u8181 2A68                                          u8501 46FE  
                                        u7621 26D0                                          u7541 25FE  
                                        u7461 2528                                          u7381 240E  
                                        u8421 4922                                          u7701 3E92  
                                        u8341 4FAE                                          u9301 197E  
                                        u9221 1752                                          u9141 150E  
                                        u9061 13B2                                          u6741 4808  
                                        u6661 4738                                          u8270 4D5A  
                                        u8190 2A86                                          u7630 26F0  
                                        u7550 2618                                          u7470 2562  
                                        u7390 2432                                          u7710 3EB6  
                                        u8510 4DA0                                          u8350 4FF2  
                                        u8430 58B4                                          u9310 1990  
                                        u9230 179C                                          u9150 1538  
                                        u9070 142A                                          u6670 4758  
                                        u8271 4D56                                          u8191 2A82  
                                        u7631 26EC                                          u7551 2614  
                                        u7471 255E                                          u7391 242E  
                                        u7711 3EB2                                          u8511 4D9C  
                                        u8351 4FEE                                          u8431 58B0  
                                        u9311 198C                                          u9231 1798  
                                        u9151 1534                                          u9071 1426  
                                        u6671 4754                                          u8280 4D80  
                                        u8440 4634                                          u7560 262C  
                                        u7480 2572                                          u7720 3EE0  
                                        u7800 424C                                          u7640 5730  
                                        u8520 4DC2                                          u8360 5030  
                                        u9400 1B84                                          u9320 19AC  
                                        u9240 17AC                                          u9160 154A  
                                        u9080 1450                                          u6680 476A  
                                        u8281 4D7C                                          u8441 4630  
                                        u7561 2628                                          u7481 256E  
                                        u7721 3EDC                                          u7801 4248  
                                        u7641 572C                                          u8521 4DBE  
                                        u8361 502C                                          u9401 1B80  
                                        u9321 19A8                                          u9241 17A8  
                                        u9161 1546                                          u9081 144C  
                                        u6681 4766                                          u8450 4668  
                                        u7570 2646                                          u7490 259E  
                                        u7730 3F20                                          u7650 57E2  
                                        u8530 4E18                                          u8290 4F26  
                                        u7810 2B6E                                          u8370 5064  
                                        u8610 4A1A                                          u9410 1C08  
                                        u9330 19BA                                          u9250 1848  
                                        u9170 1558                                          u9090 1462  
                                        u6690 478C                                          u7571 2642  
                                        u7491 259A                                          u7731 3F1C  
                                        u7651 57DE                                          u8531 4E14  
                                        u8291 4F22                                          u7811 2B6A  
                                        u8371 5060                                          u8611 4A14  
                                        u9411 1C04                                          u9331 19B6  
                                        u9251 1844                                          u9171 1554  
                                        u9091 145E                                          u6691 4788  
                                        u8460 4696                                          u7580 2680  
                                        u8380 485A                                          u7740 3F6A  
                                        u8540 4E26                                          u7900 2D0E  
                                        u7820 2B80                                          u8620 4A1C  
                                        u8700 3746                                          u7660 5896  
                                        u9420 1C22                                          u9340 1A12  
                                        u9260 1894                                          u9180 156E  
                                        u9500 4AC2                                          u8461 4692  
                                        u7581 267C                                          u8381 4856  
                                        u7741 3F66                                          u8541 4E22  
                                        u7901 2D0A                                          u7821 2B7C  
                                        u8605 49F2                                          u8701 3742  
                                        u7661 5890                                          u9421 1C1E  
                                        u9341 1A0E                                          u9261 1890  
                                        u9181 156A                                          u9501 4ABE  
                                        u8470 46AA                                          u7590 2692  
                                        u8390 4898                                          u7750 413C  
                                        u8550 5790                                          u7910 2D38  
                                        u7830 2B90                                          u8630 5394  
                                        u7670 5898                                          u9430 1C3A  
                                        u9350 1AE4                                          u9270 18BA  
                                        u9190 157C                                          u9510 4AF4  
                                        u8471 46A6                                          u8455 465E  
                                        u7591 268E                                          u8391 4894  
                                        u7751 4138                                          u8551 578C  
                                        u7911 2D34                                          u7831 2B8C  
                                        u9431 1C36                                          u9351 1AE0  
                                        u9271 18B6                                          u9191 1578  
                                        u9511 4AF0                                          u8480 46D2  
                                        u7680 3E36                                          u7760 416E  
                                        u8800 2F38                                          u7920 2D5C  
                                        u7840 2BD4                                          u8560 4970  
                                        u8720 37B4                                          u8640 53A6  
                                        u9440 1C9A                                          u9360 1B00  
                                        u9280 195C                                          u9600 2014  
                                        u8481 46CE                                          u7681 3E32  
                                        u7761 416A                                          u8801 2F34  
                                        u7921 2D58                                          u7841 2BD0  
                                        u8721 37B0                                          u8641 53A2  
                                        u9441 1C94                                          u9361 1AFC  
                                        u9281 1958                                          u9601 2010  
                                        u8490 46F2                                          u7690 3E68  
                                        u7770 41AC                                          u8810 2F66  
                                        u7930 2D72                                          u7850 2BE6  
                                        u8570 498E                                          u8730 37D8  
                                        u8650 543E                                          u9450 1C9C  
                                        u9370 1B12                                          u9290 1970  
                                        u9610 2096                                          u8491 46EE  
                                        u7691 3E64                                          u7771 41A8  
                                        u8811 2F62                                          u7931 2D6E  
                                        u7851 2BE2                                          u8571 498A  
                                        u8715 375A                                          u8651 5438  
                                        u9371 1B0E                                          u9291 196C  
                                        u9611 2090                                          u9700 3DFA  
                                        u7780 41D6                                          u8900 315E  
                                        u8820 2F82                                          u7940 2D90  
                                        u7860 2BF6                                          u8580 49B6  
                                        u8740 37F4                                          u8716 3764  
                                        u8660 5440                                          u9460 1CB2  
                                        u9380 1B20                                          u9620 2098  
                                        u9540 1D4E                                          u9525 59A0  
                                        u9701 3DF6                                          u7781 41D2  
                                        u8901 315A                                          u8821 2F7E  
                                        u7941 2D8C                                          u7861 2BF2  
                                        u8581 49B2                                          u8565 4966  
                                        u8741 37F0                                          u8717 3774  
                                        u8637 5386                                          u9461 1CAE  
                                        u9381 1B1C                                          u9541 1D4A  
                                        u9710 3ADE                                          u7790 4204  
                                        u8910 316C                                          u8830 2FB0  
                                        u7950 2DB0                                          u7870 2C36  
                                        u8590 49E0                                          u8750 3848  
                                        u8670 5456                                          u9390 1B56  
                                        u9470 4A58                                          u9630 20AE  
                                        u9550 1DB0                                          u9711 3ADA  
                                        u9535 596C                                          u7791 4200  
                                        u8911 3168                                          u8831 2FAC  
                                        u7951 2DAC                                          u7871 2C32  
                                        u8591 49DC                                          u8735 37CE  
                                        u8671 5452                                          u9391 1B52  
                                        u9471 4A54                                          u9631 20AA  
                                        u9551 1DAC                                          u9800 3C6C  
                                        u9720 3AEC                                          u8920 3184  
                                        u8840 2FBE                                          u7960 2DC2  
                                        u7880 2C76                                          u8760 3864  
                                        u8680 36F4                                          u9480 4A8E  
                                        u9640 21A8                                          u9560 1E00  
                                        u9801 3C68                                          u9721 3AE8  
                                        u8921 3180                                          u8841 2FBA  
                                        u7961 2DBE                                          u7881 2C72  
                                        u8761 3860                                          u9481 4A8A  
                                        u9641 21A4                                          u9561 1DFC  
                                        u9730 3B48                                          u8850 30EC  
                                        u7970 2DF0                                          u7890 2CEC  
                                        u8770 38A0                                          u8690 3724  
                                        u8930 109A                                          u9490 4AB0  
                                        u9570 1E6E                                          u9810 5334  
                                        u9731 3B44                                          u8851 30E8  
                                        u7971 2DEC                                          u7891 2CE8  
                                        u8771 389C                                          u8755 383E  
                                        u8691 3720                                          u8931 1096  
                                        u9491 4AAC                                          u9571 1E6A  
                                        u9811 5330                                          u9740 3B9E  
                                        u9820 4B3E                                          u8860 310A  
                                        u8780 2F20                                          u7980 2E06  
                                        u8940 10EA                                          u9580 1E9C  
                                        u9900 40A0                                          u9741 3B9A  
                                        u9821 4B3A                                          u8861 3106  
                                        u8781 2F1A                                          u7981 2E02  
                                        u8685 36EA                                          u8941 10E6  
                                        u9581 1E98                                          u9901 409C  
                                        u9750 3BE8                                          u9830 4B5A  
                                        u9670 3D86                                          u8870 3124  
                                        u8790 2F22                                          u7990 2E1A  
                                        u8950 10F8                                          u9590 1F42  
                                        u9910 40D6                                          u9751 3BE4  
                                        u9655 5A08                                          u9831 4B56  
                                        u9671 3D82                                          u8871 3120  
                                        u7991 2E16                                          u8951 10F4  
                                        u9591 1F3E                                          u9911 40D2  
                                        u9760 3C06                                          u9840 4B9A  
                                        u9680 3DAE                                          u8880 313E  
                                        u8960 110A                                          u9920 4120  
                                        u9761 3C02                                          u9665 59D4  
                                        u9841 4B96                                          u9681 3DAA  
                                        u8881 313A                                          u8961 1106  
                                        u9921 411C                                          u9770 3C16  
                                        u9850 4BB6                                          u9690 3DD2  
                                        u9930 5258                                          u8890 314C  
                                        u8970 1152                                          u9771 3C12  
                                        u9851 4BB2                                          u9691 3DCE  
                                        u9931 5254                                          u8891 3148  
                                        u8971 114E                                          u9780 3C24  
                                        u9940 52AC                                          u8980 1182  
                                        u9860 3512                                          u9781 3C20  
                                        u9941 52A8                                          u8981 117C  
                                        u9861 350E                                          u9790 3C5E  
                                        u8990 1184                                          u9950 321C  
                                        u9870 353A                                          u9791 3C5A  
                                        u9951 3218                                          u9871 3536  
                                        u9960 3238                                          u9880 361E  
                                        u9961 3234                                          u9881 361A  
                                        u9970 3250                                          u9890 3644  
                                        _TMR2 003FAA                                          u9971 324C  
                                        u9891 3640                                          u9980 327E  
                                        _TMR4 003F9E                                          u9981 327A  
                                        u9990 329A                                          u9991 3296  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 0134  
                                        _main 5D48                                          _dtoa 2EEE  
                                        _loop 43DA                                          _prec 003C  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                               ___fpclassifyf 4930                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 018A                               ___fldiv@new_exp 0025  
                             _TMR3_Initialize 58D6                               _PWM5_Initialize 5DEA  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3676 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 582C                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 59B0                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 5E1A                                 ___fltol@sign1 0081  
                             __end_of___aldiv 461C                               __end_of___aodiv 3FAC  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 5BD2                               __end_of___fladd 2704  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 428E  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2EEE                                         _ADREF 003EFD  
                             __end_of___awdiv 4D92                               __end_of___flneg 58D6  
                                       ?_loop 0001                                         STR_12 1061  
                                       STR_13 1069                                         STR_16 106D  
                                       STR_18 106D                               __end_of___awmod 4FC4  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2B54                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 56EE                               __end_of___fltol 4724  
                                       u10000 32B2                                         u10001 32AE  
                                       u10010 32D4                                         u10011 32D0  
                                       u10100 33FC                                         u10020 32FA  
                                       u10101 33F8                                         u10021 32F6  
                                       u10110 3420                                         u10030 330C  
                                       u10111 341C                                         u10031 3308  
                                       u10200 4368                                         u10120 38E6  
                                       u10040 3322                                         u10201 4364  
                                       u10121 38E2                                         u10041 331E  
                                       u10210 4394                                         u10130 3906  
                                       u10050 3334                                         u10211 4390  
                                       u10131 3902                                         u10051 3330  
                                       u10220 43BC                                         u10140 3924  
                                       u10060 334A                                         u10221 43B8  
                                       u10141 3920                                         u10061 3346  
                                       u10150 395E                                         u10070 3360  
                                       u10230 4404                                         u10151 395A  
                                       u10071 335C                                         u10231 4400  
                                       u10160 3978                                         u10080 3386  
                                       u10240 4416                                         u10161 3974  
                                       u10081 3382                                         u10241 4412  
                                       u10170 3A96                                         u10090 33DE  
                                       u10250 4466                                         u10171 3A92  
                                       u10091 33DA                                         u10251 4462  
                                       u10180 3ABA                                         u10260 449A  
                                       u10181 3AB6                                         u10261 4496  
                                       u10190 434C                                         u10270 44AC  
                                       u10191 4348                                         u10271 44A8  
                                       u10280 44E4                                         u10281 44E0  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 585E  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5822                                         i1l333 5770  
                                       i1l350 5EAC                                         i1l343 4F12  
                                       i1l336 5774                                         i1l353 5EAA  
                                       _U1TXB 003DEA                                         i1l347 5C82  
                                       i1l356 5EA0                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5EB0  
                                       i1l692 5BFE                                         i2l534 5CAE  
                                       i2l438 5B44                                         i2l446 5A4A  
                                       i2l552 5AE4                                         i1l688 5940  
                                       i2l529 5D46                                         i2l537 5E36  
                                       i1l698 5EAE                                         i2l476 5B74  
                                       i2l558 5D84                                         i2l487 5A7E  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 557A  
                                       i2l856 56A4                                         i2l868 5CFE  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5EB0                               _TMR4_Initialize 5C00  
                             _PWM6_Initialize 5DD2                             _UART1_tx_vect_isr 57F0  
                            __end_of_TMR4_ISR 5948                       setSteering@steeringMode 001E  
                                       _delay 00F9                                         _flags 003E  
                                       _fputc 5112                                         _fputs 56EE  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 003A  
                                       _putch 5E38                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 589E                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E5  
                       __size_of_calcSteering 0230                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5E56                   _UART1_SetRxInterruptHandler 5E4C  
                     __end_of_CCP4_Initialize 5BA4                                ?___fpclassifyf 0014  
                             __end_of_tolower 546E                               __end_of_strncmp 4B22  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 5EAE  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5EAC  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5866  
                             _TMR5_Initialize 5612                               _PWM7_Initialize 5DBA  
                             __initialization 53A8                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 5D68  
                                __end_of_dtoa 31D4                                  __end_of_loop 4510  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 5DA2  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 428E  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 582A  
                             _PWM8_Initialize 5DA2                              _UART1_Initialize 506E  
                                _calcSteering 347C                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 59B0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1243 5EA6                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 5E02                       __end_of_TMR3_Initialize 590E  
                                      i1l7100 4EAC                                        i1l7102 4EBC  
                                      i1l7032 5EA2                                        i1l7104 4ED4  
                                      i1l7106 4EF0                                        i1l7202 57F6  
                                      i1l7108 4F0E                                        i1l7204 580A  
                                      i1l7150 5BE6                                        i1l7230 5934  
                                      i1l7206 5832                                        i1l7232 5938  
                                      i1l7208 5846                                        i1l7080 5742  
                                      i1l7226 5916                                        i1l7090 4E54  
                                      i1l7082 5754                                        i1l7148 5BD2  
                                      i1l7228 591A                                        i1l6540 5C6A  
                                      i1l7092 4E64                                        i1l7084 5756  
                                      i1l6542 5C6C                                        i1l7094 4E74  
                                      i1l7086 5766                                        i1l7078 5732  
                                      i1l6544 5C7C                                        i1l7096 4E84  
                                      i1l7088 576A                                        i1l6546 5C80  
                                      i1l6538 5C58                                        i1l7098 4E9C  
                                      i1l6762 5E9C                                        i2l7110 5B16  
                                      i2l7120 5B54                                        i2l7112 5B24  
                                      _INLVLA 003A44                                        i2l7130 5D7C  
                                      i2l7122 5B60                                        i2l7114 5B30  
                                      i2l7210 5A18                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l7132 5D80  
                                      i2l7220 5AB8                                        i2l7124 5B6E  
                                      i2l7116 5B3E                                        i2l7212 5A28  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7126 5D68                                        i2l7222 5ACC  
                                      i2l7118 5B46                                        i2l7214 5A4C  
                                      i2l7240 5680                                        i2l7128 5D74  
                                      i2l7216 5A5C                                        i2l7250 5556  
                                      i2l7242 5692                                        i2l7234 565C  
                                      i2l7218 5AB4                                        i2l7252 5568  
                                      i2l7244 5528                                        i2l7236 5660  
                                      i2l7254 5CD8                                        i2l7246 552C  
                                      i2l7238 5670                                        i2l7256 5CDC  
                                      i2l7248 5546                                        i2l6560 5C98  
                                      i2l6562 5C9E                                        i2l6554 5C84  
                                      i2l6556 5C92                                        i2l6564 5CA4  
                                      i2l6566 5CA8                                        i2l6558 5C94  
                                      i2l6764 5D24                                        i2l6772 5E2A  
                                      i2l6766 5D32                                        i2l6768 5D3E  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 523C                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 5E6A                              __end_of___xxtofl 3C80  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 347C  
                    __end_of_CCP3_SetCallBack 5E9C                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00E3  
                                      ___flge 482A                                        ___fleq 4FC4  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 001C                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                        _efgtoa 1072  
                               _CCP3_CallBack 018E                                        _floorf 36AC  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 5DEA  
                     __end_of_TMR4_Initialize 5C2C                                        clear_0 53DE  
                                      clear_1 53EA                                        clear_2 53F6  
                            ___awdiv@quotient 001A                                        _motPow 012E  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 018C                                        _smtWay 0120  
                                      _printf 5CB0                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 533E                                        _strlen 57B6  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4C04  
                             _ADCC_Initialize 54CA          __end_of_TMR4_DefaultInterruptHandler 5EB0  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 5EAE  
                                      fputc@c 0016                                _PMD_Initialize 5D00  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 5AE6  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 533E  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 5E60  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 5E56  
                   _UART1_DefaultErrorHandler 5E9C                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 01AC  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 5DD2  
                     __end_of_TMR5_Initialize 565C                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 55C8  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 5408                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 5C84                            __size_of_calcSpeed 020A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 5E92  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 5C00  
                                __pidataBANK0 5EB2                                  __pidataBANK1 5EA8  
                          __size_of_checkBatt 0092                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                             startAccell@MPow 01A8                                ivt0x8_undefint 00AC  
                               __end_of_fputc 51A8                                 __end_of_fputs 5732  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 5E42  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 5DBA  
                      __end_of_PMD_Initialize 5D24                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 0194  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                           _calcSteering$4174 0085                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5612                                       ??_fputs 0023  
                             _CLC3_Initialize 5C2C                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00E5  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 0184  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 5526                    __end_of_PWM6_LoadDutyValue 597C  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 5E7E  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 5E74  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 002D  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0030  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01A0                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 4E54                                    _getReverse 4724  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 597C  
                                  _distRightM 00F1                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 3ACC                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 0522                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 52CE  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 5CB0  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01A4                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 5112  
                                     ___aldiv 4510                               __size_of___flge 0106  
                             __size_of___fleq 00AA                                       ___aodiv 3E24  
                                     ___fladd 2242                                       ___aomod 412A  
                                     ___fldiv 2B54                                       ___awdiv 4CCE  
                                     ___flneg 589E                                       ___awmod 4F14  
                                     ___flmul 2704                                       ___flsub 56A6  
                                     ___fltol 461C                     __end_of_UART1_Receive_ISR 4F14  
                                   ?_vfprintf 019A                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 53A8  
                   _TMR5_GateInterruptHandler 0188                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 5D48  
                                     __ptext1 43DA                                       __ptext2 3FAC  
                                     __ptext3 347C                                       __ptext4 4724  
                                     __ptext5 31D4                                       __ptext6 5CB0  
                                     __ptext7 52CE                                       __ptext8 1D20  
                                     __ptext9 4A2E                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 5C58  
                       _OSCILLATOR_Initialize 5E02                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5866  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 01A8  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 540E                                       _strncmp 4A2E  
                        end_of_initialization 5408                                       floorf@e 0064  
                                   _T2RSTbits 003FAF                                       floorf@m 0060  
                                     floorf@u 0066                                       floorf@x 002D  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 5E4C  
                 _UART1_SetTxInterruptHandler 5E42                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 2242  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5AB2                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 5C58                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 017E  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 0078                            getCurve@deltaRight 01AA  
                               ___xxtofl@sign 0024                                   ___fldiv@grs 0027  
                                 ___fldiv@rem 0020                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0009                          setSteering@steeringB 0023  
                        setSteering@steeringF 0021                       TMR5_WriteTimer@timerVal 0009  
                                 ___flmul@grs 0062                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 55C8                                __end_of___flge 4930  
                              __end_of___fleq 506E                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00DF  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D20                             __size_of_TMR4_ISR 0038  
                              __end_of_floorf 38C2                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 5CD8  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 53A8                                __end_of_strlen 57F0  
                              _TMR5_ReadTimer 5D24                           start_initialization 53A8  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 57B6                                   __end_of_pad 4E54  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00E7  
                       __end_of___fpclassifyf 4A2E                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 0106                          __end_of_TMR4_10msISR 5EA8  
                                _middleOffSet 01AE                                   vfprintf@fmt 019C  
                                    ??___flge 0036                                      ??___fleq 001C  
                            ??_PMD_Initialize 0014                        __size_of_TMR5_GATE_ISR 0032  
                                _oldDistRight 00ED                      __size_of_CCP4_Initialize 002E  
                                    ??_efgtoa 008A                                   __pdataBANK0 00FE  
                                 __pdataBANK1 01AE                                      ??_floorf 0031  
                  __end_of_PWM7_LoadDutyValue 5A18                             ??_SMT1_Initialize 0014  
                                    ??_printf 003A                                      ??_strcpy 0018  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 5D48  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 0071  
                                   ___fladd@b 006D                           calcMotorPow@addMPow 0089  
                    _ADCC_GetSingleConversion 5A80                                     ___fldiv@a 0018  
                                   ___fldiv@b 0014                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 0040                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                                   ___flsub@a 007D                                     ___flsub@b 0079  
                          _UART1_ErrorHandler 0190                                 __pcstackBANK0 0060  
                               __pcstackBANK1 019A                             __size_of_actSpeed 0094  
                            ___aodiv@dividend 0014                            _PWM6_LoadDutyValue 5948  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 0198                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 5B46                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 38C2                             __size_of_getCurve 02A8  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 523C  
                                _currentSpeed 00E9                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 0184                                   _efgtoa$3554 008F  
                                 _efgtoa$3563 0095                                   _efgtoa$3555 0091  
                                 _efgtoa$3564 0097                                   _efgtoa$3565 0099  
                                 _efgtoa$3559 0093                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4C04                                     _dtoa$3530 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5E6A  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 5E60  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 5E88                                      ?___fldiv 0014  
                                    ?___awdiv 0014                                     __ptext100 565C  
                                   __ptext101 5528                                     __ptext102 5CD8  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
                                   __ptext103 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                            ??_UART1_Initialize 0016  
                                   _distLeftM 00F5                                     _distFront 00FC  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 00F3                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FA                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FE  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 5EAC  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5EAA  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 565C                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 5AB4  
                                   _curveMode 00FB                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 557C                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 5528  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5B76                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u700_28 5BEC  
                                    i1u700_29 5BFE                                      i1u710_28 584C  
                                    i1u710_29 585E                                      i1u632_20 5C7C  
                                    i1u632_21 5C78                                      i1u715_20 5934  
                                    i1u707_20 580A                                      i1u715_21 5930  
                                    i1u707_21 5806                                      i1u709_20 5846  
                                    i1u708_28 5810                                      i1u709_21 5842  
                                    i1u708_29 5822                                      _PIR1bits 0039A1  
                                    i1u690_20 4E74                                      i1u690_21 4E70  
                                    i1u692_20 4EAC                                      i1u691_28 4E8A  
                                    i1u692_21 4EA8                                      i1u691_29 4E9C  
                                    i1u694_20 4EF0                                      i1u693_28 4EC2  
                                    i1u694_21 4EEC                                      i1u693_29 4ED4  
                                    _PIR4bits 0039A4                                      i1u695_28 4EF6  
                                    i1u688_20 5742                                      i1u695_29 4F0A  
                                    i1u688_21 573E                                      i2u711_48 5A36  
                                    i2u711_49 5A4A                                      i1u689_20 5766  
                                    i1u689_21 5762                                      i2u633_40 5C92  
                                    i2u713_40 5ACC                                      i2u712_48 5A6A  
                                    i2u633_41 5C8E                                      i2u713_41 5AC8  
                                    i2u712_49 5A7E                                      i1u699_20 5BE6  
                                    i1u699_21 5BE2                                      i2u714_48 5AD2  
                                    i2u714_49 5AE4                                      _PIR6bits 0039A6  
                                    i2u716_40 5680                                      i2u716_41 567C  
                                    i2u717_40 5556                                      i2u717_41 5552  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      i2u696_40 5B24  
                                    i2u696_41 5B20                                      i2u697_40 5B54  
                                    i2u697_41 5B50                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 5CD8                                      _TMR4_ISR 5910  
                  __end_of_UART1_Transmit_ISR 5776                                 _TMR4_CallBack 5BD2  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D20                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 5E1A                                  ??_getReverse 0014  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 0083  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 54CA                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00E2                                    vfpfcnvrt@f 00DB  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 482A                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5D00  
                         __end_of_setSteering 3E24                                    vfprintf@ap 019E  
                                    __Lrparam 0000                                    vfprintf@fp 019A  
                                 _oldDistLeft 00EF                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 5E2A                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039A                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 5B16                       __end_of_SMT1_PR_ACQ_ISR 56A6  
                                  ?_vfpfcnvrt 00C7                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 5E7E  
                          ___fpclassifyf@F465 011C                                      _actSpeed 51A8  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 5EA2  
                                    ___xxtofl 3ACC                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 5E38                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 557C  
                                    _getCurve 31D4                                      __ptext10 1072  
                                    __ptext11 540E                                      __ptext20 4F14  
                                    __ptext12 5866                                      __ptext21 2EEE  
                                    __ptext13 533E                                      __ptext30 3E24  
                                    __ptext22 4D92                                      __ptext14 36AC  
                                    __ptext31 523C                                      __ptext23 57B6  
                                    __ptext15 4930                                      __ptext40 428E  
                                    __ptext32 3C80                                      __ptext24 56EE  
                                    __ptext16 56A6                                      __ptext41 4B22  
                                    __ptext33 5948                                      __ptext25 5112  
                                    __ptext17 589E                                      __ptext50 55C8  
                                    __ptext42 59B0                                      __ptext34 597C  
                                    __ptext26 5E38                                      __ptext18 4FC4  
                                    __ptext51 506E                                      __ptext43 59E4  
                                    __ptext35 5E1A                                      __ptext27 546E  
                                    __ptext19 2B54                                      __ptext60 5E7E  
                                    __ptext52 5E42                                      __ptext44 51A8  
                                    __ptext36 5A80                                      __ptext28 5776  
                                    __ptext61 58D6                                      __ptext53 5E4C  
                                    __ptext45 4510                                      __ptext37 482A  
                                    __ptext29 412A                                      __ptext70 5E02  
                                    __ptext62 5D86                                      __ptext54 5E56  
                                    __ptext46 3ACC                                      __ptext38 38C2  
                                    __ptext71 557C                                      __ptext63 5AE6  
                                    __ptext55 5E60                                      __ptext47 461C  
                                    __ptext39 2242                                      __ptext80 582C  
                                    __ptext72 5C2C                                      __ptext64 5DA2  
                                    __ptext56 5E6A                                      __ptext48 2704  
                                    __ptext81 4E54                                      __ptext73 5B76  
                                    __ptext65 5DBA                                      __ptext57 5612  
                                    __ptext49 4CCE                                      __ptext90 5EB0  
                                    __ptext82 5EAA                                      __ptext74 5E88  
                                    __ptext66 5DD2                                      __ptext58 5E74  
                                    __ptext91 5A18                                      __ptext83 5EAC  
                                    __ptext75 5BA4                                      __ptext67 5DEA  
                                    __ptext59 5C00                                      __ptext92 5B16  
                                    __ptext84 5E9C                                      __ptext76 5E92  
                                    __ptext68 5D00                                      __ptext93 5A4C  
                                    __ptext85 5C58                                      __ptext77 54CA  
                                    __ptext69 4C04                                      __ptext94 5B46  
                                    __ptext86 5910                                      __ptext78 57F0  
                                    __ptext95 5AB4                                      __ptext87 5BD2  
                                    __ptext79 5732                                      __ptext96 5D68  
                                    __ptext88 5EA2                                      __ptext97 5E2A  
                                    __ptext89 5EAE                                      __ptext98 5C84  
                                    __ptext99 5D24                              __size_of_isupper 0038  
                                    _distLeft 00F7                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 5E74  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0136  
                             _SMT1_Initialize 5AE6                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4B22                                      _setSpeed 00EB  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 0192  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 52CE                                     printf@fmt 01A0  
                  __end_of_PWM8_LoadDutyValue 59E4                               _CCP3_CaptureISR 5A18  
                                 _UART1_Write 546E                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 5D86  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 5D68  
                            ___aomod@dividend 0014                           __end_of_startAccell 412A  
                              _battCheckCount 0130                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0132  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3583 00D9  
                 __end_of_UART1_RxDataHandler 5C84                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5B46                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 59E4  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3C80  
                             _CCP4_CaptureISR 5A4C                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 43DA                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 36AC  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01A6                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5EA2                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5E2A                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5E92  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5BA4                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 0087                      _UART1_TxInterruptHandler 0196  
                               ___fladd@signs 0075                           __end_of_Default_ISR 5EB2  
                     __end_of_SMT1_Initialize 5B16                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 4CCE                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5A4C  
