

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jan 30 17:23:15 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=4,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=4,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=4,class=CODE,delta=1
   105                           	psect	text90,global,reloc=4,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=4,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=4,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=4,class=CODE,delta=1
   115                           	psect	text100,global,reloc=4,class=CODE,delta=1
   116                           	psect	text101,global,reloc=4,class=CODE,delta=1
   117                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   118                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   119                           	psect	text102,global,reloc=4,class=CODE,delta=1
   120                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   121                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   122                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   123  0000                     
   124                           ; Version 2.20
   125                           ; Generated 05/05/2020 GMT
   126                           ; 
   127                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F46K42 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159                           	psect	nvCOMRAM
   160  00004C                     __pnvCOMRAM:
   161                           	callstack 0
   162  00004C                     _uart1TxBufferRemaining:
   163                           	callstack 0
   164  00004C                     	ds	1
   165                           
   166                           	psect	nvBANK1
   167  00018A                     __pnvBANK1:
   168                           	callstack 0
   169  00018A                     _TMR4_InterruptHandler:
   170                           	callstack 0
   171  00018A                     	ds	2
   172  00018C                     _timer3ReloadVal:
   173                           	callstack 0
   174  00018C                     	ds	2
   175  00018E                     _TMR5_GateInterruptHandler:
   176                           	callstack 0
   177  00018E                     	ds	2
   178  000190                     _timer5ReloadVal:
   179                           	callstack 0
   180  000190                     	ds	2
   181  000192                     _CCP4_CallBack:
   182                           	callstack 0
   183  000192                     	ds	2
   184  000194                     _CCP3_CallBack:
   185                           	callstack 0
   186  000194                     	ds	2
   187  000196                     _UART1_ErrorHandler:
   188                           	callstack 0
   189  000196                     	ds	2
   190  000198                     _UART1_OverrunErrorHandler:
   191                           	callstack 0
   192  000198                     	ds	2
   193  00019A                     _UART1_FramingErrorHandler:
   194                           	callstack 0
   195  00019A                     	ds	2
   196  00019C                     _UART1_TxInterruptHandler:
   197                           	callstack 0
   198  00019C                     	ds	2
   199  00019E                     _UART1_RxInterruptHandler:
   200                           	callstack 0
   201  00019E                     	ds	2
   202  0000                     _PIR4bits	set	14756
   203  0000                     _PIR1bits	set	14753
   204  0000                     _PIE1bits	set	14737
   205  0000                     _PIE7bits	set	14743
   206  0000                     _PIR7bits	set	14759
   207  0000                     _PIR6bits	set	14758
   208  0000                     _PIE8bits	set	14744
   209  0000                     _PIR8bits	set	14760
   210  0000                     _PIE10bits	set	14746
   211  0000                     _PIR10bits	set	14762
   212  0000                     _PIE9bits	set	14745
   213  0000                     _PIR9bits	set	14761
   214  0000                     _IPR9bits	set	14729
   215  0000                     _IPR7bits	set	14727
   216  0000                     _IPR8bits	set	14728
   217  0000                     _IPR10bits	set	14730
   218  0000                     _IPR1bits	set	14721
   219  0000                     _IPR3bits	set	14723
   220  0000                     _PIE3bits	set	14739
   221  0000                     _PMD7	set	14791
   222  0000                     _PMD6	set	14790
   223  0000                     _PMD5	set	14789
   224  0000                     _PMD4	set	14788
   225  0000                     _PMD3	set	14787
   226  0000                     _PMD2	set	14786
   227  0000                     _PMD1	set	14785
   228  0000                     _PMD0	set	14784
   229  0000                     _OSCTUNE	set	14814
   230  0000                     _OSCFRQ	set	14815
   231  0000                     _OSCEN	set	14813
   232  0000                     _OSCCON3	set	14811
   233  0000                     _OSCCON1	set	14809
   234  0000                     _CCP4PPS	set	15056
   235  0000                     _SMT1SIGPPS	set	15058
   236  0000                     _CLCIN2PPS	set	15067
   237  0000                     _RB3PPS	set	14859
   238  0000                     _RA3PPS	set	14851
   239  0000                     _SMT1WINPPS	set	15057
   240  0000                     _CLCIN0PPS	set	15065
   241  0000                     _RA4PPS	set	14852
   242  0000                     _T5GPPS	set	15049
   243  0000                     _RA0PPS	set	14848
   244  0000                     _U1RXPPS	set	15077
   245  0000                     _RA1PPS	set	14849
   246  0000                     _CLCIN3PPS	set	15068
   247  0000                     _CCP3PPS	set	15055
   248  0000                     _INLVLE	set	14980
   249  0000                     _INLVLD	set	14964
   250  0000                     _INLVLC	set	14948
   251  0000                     _INLVLB	set	14932
   252  0000                     _INLVLA	set	14916
   253  0000                     _SLRCONE	set	14979
   254  0000                     _SLRCOND	set	14963
   255  0000                     _SLRCONC	set	14947
   256  0000                     _SLRCONB	set	14931
   257  0000                     _SLRCONA	set	14915
   258  0000                     _ODCOND	set	14962
   259  0000                     _ODCONC	set	14946
   260  0000                     _ODCONB	set	14930
   261  0000                     _ODCONA	set	14914
   262  0000                     _ODCONE	set	14978
   263  0000                     _RD1I2C	set	14971
   264  0000                     _RD0I2C	set	14970
   265  0000                     _RC4I2C	set	14955
   266  0000                     _RC3I2C	set	14954
   267  0000                     _RB2I2C	set	14939
   268  0000                     _RB1I2C	set	14938
   269  0000                     _WPUC	set	14945
   270  0000                     _WPUA	set	14913
   271  0000                     _WPUB	set	14929
   272  0000                     _WPUE	set	14977
   273  0000                     _WPUD	set	14961
   274  0000                     _ANSELA	set	14912
   275  0000                     _ANSELE	set	14976
   276  0000                     _ANSELB	set	14928
   277  0000                     _ANSELC	set	14944
   278  0000                     _ANSELD	set	14960
   279  0000                     _CLC3CON	set	15456
   280  0000                     _CLC3GLS3	set	15465
   281  0000                     _CLC3GLS2	set	15464
   282  0000                     _CLC3GLS1	set	15463
   283  0000                     _CLC3GLS0	set	15462
   284  0000                     _CLC3SEL3	set	15461
   285  0000                     _CLC3SEL2	set	15460
   286  0000                     _CLC3SEL1	set	15459
   287  0000                     _CLC3SEL0	set	15458
   288  0000                     _CLC3POL	set	15457
   289  0000                     _CLC3CONbits	set	15456
   290  0000                     _U1RXB	set	15848
   291  0000                     _U1TXB	set	15850
   292  0000                     _U1ERRIRbits	set	15865
   293  0000                     _U1ERRIE	set	15866
   294  0000                     _U1ERRIR	set	15865
   295  0000                     _U1UIR	set	15864
   296  0000                     _U1FIFO	set	15863
   297  0000                     _U1BRGH	set	15862
   298  0000                     _U1BRGL	set	15861
   299  0000                     _U1CON2	set	15860
   300  0000                     _U1CON1	set	15859
   301  0000                     _U1CON0	set	15858
   302  0000                     _U1P3H	set	15857
   303  0000                     _U1P3L	set	15856
   304  0000                     _U1P2H	set	15855
   305  0000                     _U1P2L	set	15854
   306  0000                     _U1P1H	set	15853
   307  0000                     _U1P1L	set	15852
   308  0000                     _ADCON1bits	set	16121
   309  0000                     _ADERRL	set	16098
   310  0000                     _ADERRH	set	16099
   311  0000                     _ADPREVL	set	16109
   312  0000                     _ADPREVH	set	16110
   313  0000                     _ADFLTRL	set	16102
   314  0000                     _ADFLTRH	set	16103
   315  0000                     _ADSTATbits	set	16124
   316  0000                     _ADACCL	set	16104
   317  0000                     _ADACCH	set	16105
   318  0000                     _ADCON2bits	set	16122
   319  0000                     _ADCNT	set	16107
   320  0000                     _ADCON3bits	set	16123
   321  0000                     _ADRESL	set	16111
   322  0000                     _ADRESH	set	16112
   323  0000                     _ADCON0bits	set	16120
   324  0000                     _ADCON0	set	16120
   325  0000                     _ADCLK	set	16127
   326  0000                     _ADACT	set	16126
   327  0000                     _ADREF	set	16125
   328  0000                     _ADSTAT	set	16124
   329  0000                     _ADCON3	set	16123
   330  0000                     _ADCON2	set	16122
   331  0000                     _ADCON1	set	16121
   332  0000                     _ADPREH	set	16119
   333  0000                     _ADPREL	set	16118
   334  0000                     _ADCAP	set	16117
   335  0000                     _ADACQH	set	16116
   336  0000                     _ADACQL	set	16115
   337  0000                     _ADPCH	set	16113
   338  0000                     _ADRPT	set	16108
   339  0000                     _ADACCU	set	16106
   340  0000                     _ADSTPTH	set	16101
   341  0000                     _ADSTPTL	set	16100
   342  0000                     _ADUTHH	set	16097
   343  0000                     _ADUTHL	set	16096
   344  0000                     _ADLTHH	set	16095
   345  0000                     _ADLTHL	set	16094
   346  0000                     _SMT1TMR	set	16146
   347  0000                     _SMT1CPR	set	16149
   348  0000                     _SMT1CPW	set	16152
   349  0000                     _SMT1PR	set	16155
   350  0000                     _SMT1STATbits	set	16160
   351  0000                     _SMT1CON0bits	set	16158
   352  0000                     _SMT1CON1bits	set	16159
   353  0000                     _SMT1PRL	set	16155
   354  0000                     _SMT1PRH	set	16156
   355  0000                     _SMT1PRU	set	16157
   356  0000                     _SMT1SIG	set	16162
   357  0000                     _SMT1WIN	set	16163
   358  0000                     _SMT1CLK	set	16161
   359  0000                     _SMT1STAT	set	16160
   360  0000                     _SMT1CON1	set	16159
   361  0000                     _SMT1CON0	set	16158
   362  0000                     _CCPTMRS1bits	set	16223
   363  0000                     _CCPTMRS0bits	set	16222
   364  0000                     _PORTBbits	set	16331
   365  0000                     _PR2	set	16299
   366  0000                     _TMR2	set	16298
   367  0000                     _T2CONbits	set	16300
   368  0000                     _T2RSTbits	set	16303
   369  0000                     _T2HLTbits	set	16301
   370  0000                     _T2CON	set	16300
   371  0000                     _T2TMR	set	16298
   372  0000                     _T2PR	set	16299
   373  0000                     _T2RST	set	16303
   374  0000                     _T2HLT	set	16301
   375  0000                     _T2CLKCON	set	16302
   376  0000                     _PWM6DCL	set	16232
   377  0000                     _PWM6DCH	set	16233
   378  0000                     _PWM6CON	set	16234
   379  0000                     _PWM5DCL	set	16236
   380  0000                     _PWM5DCH	set	16237
   381  0000                     _PWM5CON	set	16238
   382  0000                     _PWM8DCL	set	16224
   383  0000                     _PWM8DCH	set	16225
   384  0000                     _PWM8CON	set	16226
   385  0000                     _PWM7DCL	set	16228
   386  0000                     _PWM7DCH	set	16229
   387  0000                     _PWM7CON	set	16230
   388  0000                     _PR4	set	16287
   389  0000                     _TMR4	set	16286
   390  0000                     _T4CONbits	set	16288
   391  0000                     _T4RSTbits	set	16291
   392  0000                     _T4HLTbits	set	16289
   393  0000                     _T4CON	set	16288
   394  0000                     _T4TMR	set	16286
   395  0000                     _T4PR	set	16287
   396  0000                     _T4RST	set	16291
   397  0000                     _T4HLT	set	16289
   398  0000                     _T4CLKCON	set	16290
   399  0000                     _T3GCONbits	set	16295
   400  0000                     _T3CONbits	set	16294
   401  0000                     _T3CON	set	16294
   402  0000                     _TMR3L	set	16292
   403  0000                     _TMR3H	set	16293
   404  0000                     _T3CLK	set	16297
   405  0000                     _T3GATE	set	16296
   406  0000                     _T3GCON	set	16295
   407  0000                     _T5GCONbits	set	16283
   408  0000                     _T5CONbits	set	16282
   409  0000                     _T5CON	set	16282
   410  0000                     _TMR5L	set	16280
   411  0000                     _TMR5H	set	16281
   412  0000                     _T5CLK	set	16285
   413  0000                     _T5GATE	set	16284
   414  0000                     _T5GCON	set	16283
   415  0000                     _CCPR4L	set	16240
   416  0000                     _CCPR4H	set	16241
   417  0000                     _CCP4CAP	set	16243
   418  0000                     _CCP4CON	set	16242
   419  0000                     _CCPR3L	set	16244
   420  0000                     _CCPR3H	set	16245
   421  0000                     _CCP3CAP	set	16247
   422  0000                     _CCP3CON	set	16246
   423  0000                     _PORTDbits	set	16333
   424  0000                     _IVTBASEL	set	16341
   425  0000                     _IVTBASEH	set	16342
   426  0000                     _IVTBASEU	set	16343
   427  0000                     _IVTLOCKbits	set	16340
   428  0000                     _IVTLOCK	set	16340
   429  0000                     _INTCON0bits	set	16338
   430  0000                     _TRISD	set	16325
   431  0000                     _TRISC	set	16324
   432  0000                     _TRISB	set	16323
   433  0000                     _TRISA	set	16322
   434  0000                     _TRISE	set	16326
   435  0000                     _LATC	set	16316
   436  0000                     _LATB	set	16315
   437  0000                     _LATA	set	16314
   438  0000                     _LATD	set	16317
   439  0000                     _LATE	set	16318
   440  0000                     _GIE	set	130711
   441                           
   442                           	psect	smallconst
   443  001000                     __psmallconst:
   444                           	callstack 0
   445  001000  00                 	db	0
   446  001001                     STR_2:
   447                           
   448                           ; BSR set to: 1
   449  001001  4F                 	db	79	;'O'
   450  001002  75                 	db	117	;'u'
   451  001003  74                 	db	116	;'t'
   452  001004  20                 	db	32
   453  001005  7C                 	db	124
   454  001006  20                 	db	32
   455  001007  64                 	db	100	;'d'
   456  001008  4C                 	db	76	;'L'
   457  001009  3D                 	db	61	;'='
   458  00100A  20                 	db	32
   459  00100B  25                 	db	37
   460  00100C  64                 	db	100	;'d'
   461  00100D  20                 	db	32
   462  00100E  7C                 	db	124
   463  00100F  20                 	db	32
   464  001010  64                 	db	100	;'d'
   465  001011  52                 	db	82	;'R'
   466  001012  3D                 	db	61	;'='
   467  001013  20                 	db	32
   468  001014  25                 	db	37
   469  001015  64                 	db	100	;'d'
   470  001016  00                 	db	0
   471  001017                     STR_5:
   472                           
   473                           ; BSR set to: 1
   474  001017  20                 	db	32
   475  001018  20                 	db	32
   476  001019  20                 	db	32
   477  00101A  43                 	db	67	;'C'
   478  00101B  75                 	db	117	;'u'
   479  00101C  72                 	db	114	;'r'
   480  00101D  76                 	db	118	;'v'
   481  00101E  65                 	db	101	;'e'
   482  00101F  52                 	db	82	;'R'
   483  001020  69                 	db	105	;'i'
   484  001021  67                 	db	103	;'g'
   485  001022  68                 	db	104	;'h'
   486  001023  74                 	db	116	;'t'
   487  001024  0A                 	db	10
   488  001025  00                 	db	0
   489  001026                     STR_16:
   490                           
   491                           ; BSR set to: 1
   492  001026  53                 	db	83	;'S'
   493  001027  74                 	db	116	;'t'
   494  001028  6F                 	db	111	;'o'
   495  001029  70                 	db	112	;'p'
   496  00102A  20                 	db	32
   497  00102B  52                 	db	82	;'R'
   498  00102C  65                 	db	101	;'e'
   499  00102D  76                 	db	118	;'v'
   500  00102E  65                 	db	101	;'e'
   501  00102F  72                 	db	114	;'r'
   502  001030  73                 	db	115	;'s'
   503  001031  65                 	db	101	;'e'
   504  001032  0A                 	db	10
   505  001033  00                 	db	0
   506  001034                     STR_14:
   507                           
   508                           ; BSR set to: 1
   509  001034  52                 	db	82	;'R'
   510  001035  65                 	db	101	;'e'
   511  001036  76                 	db	118	;'v'
   512  001037  65                 	db	101	;'e'
   513  001038  72                 	db	114	;'r'
   514  001039  73                 	db	115	;'s'
   515  00103A  65                 	db	101	;'e'
   516  00103B  52                 	db	82	;'R'
   517  00103C  69                 	db	105	;'i'
   518  00103D  67                 	db	103	;'g'
   519  00103E  74                 	db	116	;'t'
   520  00103F  68                 	db	104	;'h'
   521  001040  0A                 	db	10
   522  001041  00                 	db	0
   523  001042                     STR_3:
   524                           
   525                           ; BSR set to: 1
   526  001042  20                 	db	32
   527  001043  20                 	db	32
   528  001044  20                 	db	32
   529  001045  43                 	db	67	;'C'
   530  001046  75                 	db	117	;'u'
   531  001047  72                 	db	114	;'r'
   532  001048  76                 	db	118	;'v'
   533  001049  65                 	db	101	;'e'
   534  00104A  4C                 	db	76	;'L'
   535  00104B  65                 	db	101	;'e'
   536  00104C  66                 	db	102	;'f'
   537  00104D  74                 	db	116	;'t'
   538  00104E  0A                 	db	10
   539  00104F  00                 	db	0
   540  001050                     STR_10:
   541                           
   542                           ; BSR set to: 1
   543  001050  46                 	db	70	;'F'
   544  001051  6F                 	db	111	;'o'
   545  001052  6C                 	db	108	;'l'
   546  001053  6C                 	db	108	;'l'
   547  001054  6F                 	db	111	;'o'
   548  001055  77                 	db	119	;'w'
   549  001056  20                 	db	32
   550  001057  52                 	db	82	;'R'
   551  001058  69                 	db	105	;'i'
   552  001059  67                 	db	103	;'g'
   553  00105A  68                 	db	104	;'h'
   554  00105B  74                 	db	116	;'t'
   555  00105C  0A                 	db	10
   556  00105D  00                 	db	0
   557  00105E                     STR_11:
   558                           
   559                           ; BSR set to: 1
   560  00105E  46                 	db	70	;'F'
   561  00105F  6F                 	db	111	;'o'
   562  001060  6C                 	db	108	;'l'
   563  001061  6C                 	db	108	;'l'
   564  001062  6F                 	db	111	;'o'
   565  001063  77                 	db	119	;'w'
   566  001064  20                 	db	32
   567  001065  4C                 	db	76	;'L'
   568  001066  65                 	db	101	;'e'
   569  001067  66                 	db	102	;'f'
   570  001068  74                 	db	116	;'t'
   571  001069  0A                 	db	10
   572  00106A  00                 	db	0
   573  00106B                     STR_15:
   574                           
   575                           ; BSR set to: 1
   576  00106B  52                 	db	82	;'R'
   577  00106C  65                 	db	101	;'e'
   578  00106D  76                 	db	118	;'v'
   579  00106E  65                 	db	101	;'e'
   580  00106F  72                 	db	114	;'r'
   581  001070  73                 	db	115	;'s'
   582  001071  65                 	db	101	;'e'
   583  001072  4C                 	db	76	;'L'
   584  001073  65                 	db	101	;'e'
   585  001074  66                 	db	102	;'f'
   586  001075  74                 	db	116	;'t'
   587  001076  0A                 	db	10
   588  001077  00                 	db	0
   589  001078                     STR_17:
   590                           
   591                           ; BSR set to: 1
   592  001078  45                 	db	69	;'E'
   593  001079  6E                 	db	110	;'n'
   594  00107A  64                 	db	100	;'d'
   595  00107B  65                 	db	101	;'e'
   596  00107C  20                 	db	32
   597  00107D  46                 	db	70	;'F'
   598  00107E  6F                 	db	111	;'o'
   599  00107F  6C                 	db	108	;'l'
   600  001080  6C                 	db	108	;'l'
   601  001081  6F                 	db	111	;'o'
   602  001082  77                 	db	119	;'w'
   603  001083  0A                 	db	10
   604  001084  00                 	db	0
   605  001085                     STR_8:
   606                           
   607                           ; BSR set to: 1
   608  001085  52                 	db	82	;'R'
   609  001086  69                 	db	105	;'i'
   610  001087  67                 	db	103	;'g'
   611  001088  68                 	db	104	;'h'
   612  001089  74                 	db	116	;'t'
   613  00108A  20                 	db	32
   614  00108B  4F                 	db	79	;'O'
   615  00108C  75                 	db	117	;'u'
   616  00108D  74                 	db	116	;'t'
   617  00108E  21                 	db	33
   618  00108F  0A                 	db	10
   619  001090  00                 	db	0
   620  001091                     STR_9:
   621                           
   622                           ; BSR set to: 1
   623  001091  46                 	db	70	;'F'
   624  001092  72                 	db	114	;'r'
   625  001093  6F                 	db	111	;'o'
   626  001094  6E                 	db	110	;'n'
   627  001095  74                 	db	116	;'t'
   628  001096  20                 	db	32
   629  001097  4F                 	db	79	;'O'
   630  001098  75                 	db	117	;'u'
   631  001099  74                 	db	116	;'t'
   632  00109A  21                 	db	33
   633  00109B  0A                 	db	10
   634  00109C  00                 	db	0
   635  00109D                     STR_12:
   636                           
   637                           ; BSR set to: 1
   638  00109D  41                 	db	65	;'A'
   639  00109E  66                 	db	102	;'f'
   640  00109F  74                 	db	116	;'t'
   641  0010A0  65                 	db	101	;'e'
   642  0010A1  72                 	db	114	;'r'
   643  0010A2  43                 	db	67	;'C'
   644  0010A3  75                 	db	117	;'u'
   645  0010A4  72                 	db	114	;'r'
   646  0010A5  76                 	db	118	;'v'
   647  0010A6  65                 	db	101	;'e'
   648  0010A7  0A                 	db	10
   649  0010A8  00                 	db	0
   650  0010A9                     STR_7:
   651                           
   652                           ; BSR set to: 1
   653  0010A9  4C                 	db	76	;'L'
   654  0010AA  65                 	db	101	;'e'
   655  0010AB  66                 	db	102	;'f'
   656  0010AC  74                 	db	116	;'t'
   657  0010AD  20                 	db	32
   658  0010AE  4F                 	db	79	;'O'
   659  0010AF  75                 	db	117	;'u'
   660  0010B0  74                 	db	116	;'t'
   661  0010B1  21                 	db	33
   662  0010B2  0A                 	db	10
   663  0010B3  00                 	db	0
   664  0010B4                     STR_1:
   665                           
   666                           ; BSR set to: 1
   667  0010B4  42                 	db	66	;'B'
   668  0010B5  56                 	db	86	;'V'
   669  0010B6  6F                 	db	111	;'o'
   670  0010B7  6C                 	db	108	;'l'
   671  0010B8  74                 	db	116	;'t'
   672  0010B9  3A                 	db	58	;':'
   673  0010BA  20                 	db	32
   674  0010BB  25                 	db	37
   675  0010BC  66                 	db	102	;'f'
   676  0010BD  0A                 	db	10
   677  0010BE  00                 	db	0
   678  0010BF                     STR_13:
   679                           
   680                           ; BSR set to: 1
   681  0010BF  4F                 	db	79	;'O'
   682  0010C0  75                 	db	117	;'u'
   683  0010C1  74                 	db	116	;'t'
   684  0010C2  43                 	db	67	;'C'
   685  0010C3  75                 	db	117	;'u'
   686  0010C4  72                 	db	114	;'r'
   687  0010C5  76                 	db	118	;'v'
   688  0010C6  65                 	db	101	;'e'
   689  0010C7  0A                 	db	10
   690  0010C8  00                 	db	0
   691  0010C9                     STR_6:
   692                           
   693                           ; BSR set to: 1
   694  0010C9  49                 	db	73	;'I'
   695  0010CA  6E                 	db	110	;'n'
   696  0010CB  43                 	db	67	;'C'
   697  0010CC  75                 	db	117	;'u'
   698  0010CD  72                 	db	114	;'r'
   699  0010CE  76                 	db	118	;'v'
   700  0010CF  65                 	db	101	;'e'
   701  0010D0  0A                 	db	10
   702  0010D1  00                 	db	0
   703  0010D2                     STR_18:
   704                           
   705                           ; BSR set to: 1
   706  0010D2  49                 	db	73	;'I'
   707  0010D3  4E                 	db	78	;'N'
   708  0010D4  46                 	db	70	;'F'
   709  0010D5  00                 	db	0
   710  0010D6                     STR_22:
   711                           
   712                           ; BSR set to: 1
   713  0010D6  4E                 	db	78	;'N'
   714  0010D7  41                 	db	65	;'A'
   715  0010D8  4E                 	db	78	;'N'
   716  0010D9  00                 	db	0
   717  0010DA                     STR_19:
   718                           
   719                           ; BSR set to: 1
   720  0010DA  69                 	db	105	;'i'
   721  0010DB  6E                 	db	110	;'n'
   722  0010DC  66                 	db	102	;'f'
   723  0010DD  00                 	db	0
   724  0010DE                     STR_23:
   725                           
   726                           ; BSR set to: 1
   727  0010DE  6E                 	db	110	;'n'
   728  0010DF  61                 	db	97	;'a'
   729  0010E0  6E                 	db	110	;'n'
   730  0010E1  00                 	db	0
   731  0010E2                     STR_26:
   732                           
   733                           ; BSR set to: 1
   734  0010E2  6C                 	db	108	;'l'
   735  0010E3  66                 	db	102	;'f'
   736  0010E4  00                 	db	0
   737  0010E5  00                 	db	0	; dummy byte at the end
   738  0000                     
   739                           ; #config settings
   740                           
   741                           	psect	cinit
   742  005A0C                     __pcinit:
   743                           	callstack 0
   744  005A0C                     start_initialization:
   745                           	callstack 0
   746  005A0C                     __initialization:
   747                           	callstack 0
   748                           
   749                           ; Clear objects allocated to BANK1 (138 bytes)
   750  005A0C  EE00  F100         	lfsr	0,__pbssBANK1
   751  005A10  0E8A               	movlw	138
   752  005A12                     clear_0:
   753  005A12  6AEE               	clrf	postinc0,c
   754  005A14  06E8               	decf	wreg,f,c
   755  005A16  E1FD               	bnz	clear_0
   756                           
   757                           ; Clear objects allocated to BANK0 (26 bytes)
   758  005A18  EE00  F0E5         	lfsr	0,__pbssBANK0
   759  005A1C  0E1A               	movlw	26
   760  005A1E                     clear_1:
   761  005A1E  6AEE               	clrf	postinc0,c
   762  005A20  06E8               	decf	wreg,f,c
   763  005A22  E1FD               	bnz	clear_1
   764                           
   765                           ; Clear objects allocated to COMRAM (18 bytes)
   766  005A24  EE00  F03A         	lfsr	0,__pbssCOMRAM
   767  005A28  0E12               	movlw	18
   768  005A2A                     clear_2:
   769  005A2A  6AEE               	clrf	postinc0,c
   770  005A2C  06E8               	decf	wreg,f,c
   771  005A2E  E1FD               	bnz	clear_2
   772                           
   773                           ;
   774                           ; Setup IVTBASE
   775                           ;
   776  005A30  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   777  005A32  6ED5               	movwf	213,c
   778  005A34  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   779  005A36  6ED6               	movwf	214,c
   780  005A38  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   781  005A3A  6ED7               	movwf	215,c
   782  005A3C                     end_of_initialization:
   783                           	callstack 0
   784  005A3C                     __end_of__initialization:
   785                           	callstack 0
   786  005A3C  0100               	movlb	0
   787  005A3E  EF28  F02F         	goto	_main	;jump to C main() function
   788                           
   789                           	psect	bssCOMRAM
   790  00003A                     __pbssCOMRAM:
   791                           	callstack 0
   792  00003A                     _prec:
   793                           	callstack 0
   794  00003A                     	ds	2
   795  00003C                     _flags:
   796                           	callstack 0
   797  00003C                     	ds	2
   798  00003E                     _roundTimeCount:
   799                           	callstack 0
   800  00003E                     	ds	2
   801  000040                     TMR4_ISR@CountCallBack:
   802                           	callstack 0
   803  000040                     	ds	2
   804  000042                     _uart1RxLastError:
   805                           	callstack 0
   806  000042                     	ds	1
   807  000043                     _uart1RxCount:
   808                           	callstack 0
   809  000043                     	ds	1
   810  000044                     _uart1RxTail:
   811                           	callstack 0
   812  000044                     	ds	1
   813  000045                     _uart1RxHead:
   814                           	callstack 0
   815  000045                     	ds	1
   816  000046                     _uart1TxTail:
   817                           	callstack 0
   818  000046                     	ds	1
   819  000047                     _uart1TxHead:
   820                           	callstack 0
   821  000047                     	ds	1
   822  000048                     _smtPeriod:
   823                           	callstack 0
   824  000048                     	ds	4
   825                           
   826                           	psect	bssBANK0
   827  0000E5                     __pbssBANK0:
   828                           	callstack 0
   829  0000E5                     _width:
   830                           	callstack 0
   831  0000E5                     	ds	2
   832  0000E7                     _BatteryVolt:
   833                           	callstack 0
   834  0000E7                     	ds	2
   835  0000E9                     _actMotorPow:
   836                           	callstack 0
   837  0000E9                     	ds	2
   838  0000EB                     _currentSpeed:
   839                           	callstack 0
   840  0000EB                     	ds	2
   841  0000ED                     _setSpeed:
   842                           	callstack 0
   843  0000ED                     	ds	2
   844  0000EF                     _oldDistRight:
   845                           	callstack 0
   846  0000EF                     	ds	2
   847  0000F1                     _oldDistLeft:
   848                           	callstack 0
   849  0000F1                     	ds	2
   850  0000F3                     _distRight:
   851                           	callstack 0
   852  0000F3                     	ds	2
   853  0000F5                     _distLeft:
   854                           	callstack 0
   855  0000F5                     	ds	2
   856  0000F7                     _delay:
   857                           	callstack 0
   858  0000F7                     	ds	1
   859  0000F8                     _curveRightCount:
   860                           	callstack 0
   861  0000F8                     	ds	1
   862  0000F9                     _curveLeftCount:
   863                           	callstack 0
   864  0000F9                     	ds	1
   865  0000FA                     _cycle10ms:
   866                           	callstack 0
   867  0000FA                     	ds	1
   868  0000FB                     _curveMode:
   869                           	callstack 0
   870  0000FB                     	ds	1
   871  0000FC                     _driveMode:
   872                           	callstack 0
   873  0000FC                     	ds	1
   874  0000FD                     _distFront:
   875                           	callstack 0
   876  0000FD                     	ds	2
   877                           
   878                           	psect	bssBANK1
   879  000100                     __pbssBANK1:
   880                           	callstack 0
   881  000100                     _uart1RxStatusBuffer:
   882                           	callstack 0
   883  000100                     	ds	8
   884  000108                     _uart1RxBuffer:
   885                           	callstack 0
   886  000108                     	ds	8
   887  000110                     _uart1TxBuffer:
   888                           	callstack 0
   889  000110                     	ds	8
   890  000118                     floorf@F527:
   891                           	callstack 0
   892  000118                     	ds	4
   893  00011C                     ___fpclassifyf@F465:
   894                           	callstack 0
   895  00011C                     	ds	4
   896  000120                     _smtWay:
   897                           	callstack 0
   898  000120                     	ds	4
   899  000124                     _smtDuty:
   900                           	callstack 0
   901  000124                     	ds	4
   902  000128                     _nout:
   903                           	callstack 0
   904  000128                     	ds	2
   905  00012A                     _reverseTime:
   906                           	callstack 0
   907  00012A                     	ds	2
   908  00012C                     _oldSpeed:
   909                           	callstack 0
   910  00012C                     	ds	2
   911  00012E                     _motPow:
   912                           	callstack 0
   913  00012E                     	ds	2
   914  000130                     _followCount:
   915                           	callstack 0
   916  000130                     	ds	2
   917  000132                     _battCheckCount:
   918                           	callstack 0
   919  000132                     	ds	2
   920  000134                     _reverseCount:
   921                           	callstack 0
   922  000134                     	ds	2
   923  000136                     _distRightM:
   924                           	callstack 0
   925  000136                     	ds	2
   926  000138                     _distLeftM:
   927                           	callstack 0
   928  000138                     	ds	2
   929  00013A                     _dbuf:
   930                           	callstack 0
   931  00013A                     	ds	80
   932                           
   933                           	psect	cstackBANK1
   934  0001A0                     __pcstackBANK1:
   935                           	callstack 0
   936  0001A0                     ?_vfprintf:
   937                           	callstack 0
   938  0001A0                     vfprintf@fp:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x0
   942  0001A0                     	ds	2
   943  0001A2                     vfprintf@fmt:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x2
   947  0001A2                     	ds	2
   948  0001A4                     vfprintf@ap:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x4
   952  0001A4                     	ds	2
   953  0001A6                     ?_printf:
   954                           	callstack 0
   955  0001A6                     printf@fmt:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x6
   959  0001A6                     	ds	6
   960  0001AC                     printf@ap:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0xC
   964  0001AC                     	ds	2
   965  0001AE                     ??_getCurve:
   966  0001AE                     ??_calcSteering:
   967  0001AE                     _getBatteryVoltage$4192:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0xE
   971  0001AE                     	ds	2
   972  0001B0                     getCurve@deltaLeft:
   973                           	callstack 0
   974  0001B0                     calcSteering@delta:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x10
   978  0001B0                     	ds	2
   979  0001B2                     getCurve@deltaRight:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x12
   983  0001B2                     	ds	2
   984                           
   985                           	psect	cstackBANK0
   986  000060                     __pcstackBANK0:
   987                           	callstack 0
   988  000060                     ?_dtoa:
   989                           	callstack 0
   990  000060                     ___flmul@sign:
   991                           	callstack 0
   992  000060                     dtoa@fp:
   993                           	callstack 0
   994  000060                     ___fldiv@rem:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x0
   998  000060                     	ds	1
   999  000061                     ___flmul@aexp:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x1
  1003  000061                     	ds	1
  1004  000062                     ___flmul@grs:
  1005                           	callstack 0
  1006  000062                     dtoa@d:
  1007                           	callstack 0
  1008                           
  1009                           ; 8 bytes @ 0x2
  1010  000062                     	ds	2
  1011  000064                     ___fldiv@sign:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x4
  1015  000064                     	ds	1
  1016  000065                     ___fldiv@new_exp:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x5
  1020  000065                     	ds	1
  1021  000066                     ___flmul@bexp:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x6
  1025  000066                     	ds	1
  1026  000067                     ___fldiv@grs:
  1027                           	callstack 0
  1028  000067                     ___flmul@prod:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x7
  1032  000067                     	ds	3
  1033  00006A                     _dtoa$3542:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0xA
  1037  00006A                     	ds	1
  1038  00006B                     ___fldiv@bexp:
  1039                           	callstack 0
  1040  00006B                     ___flmul@temp:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0xB
  1044  00006B                     	ds	1
  1045  00006C                     ___fldiv@aexp:
  1046                           	callstack 0
  1047  00006C                     dtoa@p:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0xC
  1051  00006C                     	ds	1
  1052  00006D                     ??_floorf:
  1053  00006D                     ?___fladd:
  1054                           	callstack 0
  1055  00006D                     ___flge@ff1:
  1056                           	callstack 0
  1057  00006D                     ___fladd@b:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0xD
  1061  00006D                     	ds	1
  1062  00006E                     dtoa@w:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xE
  1066  00006E                     	ds	2
  1067  000070                     dtoa@s:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x10
  1071  000070                     	ds	1
  1072  000071                     ___flge@ff2:
  1073                           	callstack 0
  1074  000071                     ___fladd@a:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x11
  1078  000071                     	ds	1
  1079  000072                     dtoa@n:
  1080                           	callstack 0
  1081                           
  1082                           ; 8 bytes @ 0x12
  1083  000072                     	ds	1
  1084  000073                     floorf@m:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x13
  1088  000073                     	ds	2
  1089  000075                     ___fladd@signs:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x15
  1093  000075                     	ds	1
  1094  000076                     ___fladd@aexp:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x16
  1098  000076                     	ds	1
  1099  000077                     ___fladd@bexp:
  1100                           	callstack 0
  1101  000077                     floorf@e:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x17
  1105  000077                     	ds	1
  1106  000078                     ___fladd@grs:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x18
  1110  000078                     	ds	1
  1111  000079                     ?___flsub:
  1112                           	callstack 0
  1113  000079                     ?___fltol:
  1114                           	callstack 0
  1115  000079                     ___fltol@f1:
  1116                           	callstack 0
  1117  000079                     ___flsub@b:
  1118                           	callstack 0
  1119  000079                     floorf@u:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x19
  1123  000079                     	ds	1
  1124  00007A                     dtoa@i:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x1A
  1128  00007A                     	ds	3
  1129  00007D                     ??___fltol:
  1130  00007D                     ___flsub@a:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x1D
  1134  00007D                     	ds	4
  1135  000081                     ___fltol@sign1:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x21
  1139  000081                     	ds	1
  1140  000082                     ___fltol@exp1:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x22
  1144  000082                     	ds	1
  1145  000083                     ??_calcSpeed:
  1146  000083                     ??_calcMotorPow:
  1147  000083                     ?_efgtoa:
  1148                           	callstack 0
  1149  000083                     setSteering@steering:
  1150                           	callstack 0
  1151  000083                     efgtoa@fp:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x23
  1155  000083                     	ds	2
  1156  000085                     setSteering@steeringMode:
  1157                           	callstack 0
  1158  000085                     calcMotorPow@setSpeedDelta:
  1159                           	callstack 0
  1160  000085                     efgtoa@f:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x25
  1164  000085                     	ds	1
  1165  000086                     ??_setSteering:
  1166                           
  1167                           ; 1 bytes @ 0x26
  1168  000086                     	ds	1
  1169  000087                     calcSpeed@speed:
  1170                           	callstack 0
  1171  000087                     calcMotorPow@oldSpeedDelta:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x27
  1175  000087                     	ds	1
  1176  000088                     setSteering@steeringF:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x28
  1180  000088                     	ds	1
  1181  000089                     calcMotorPow@addMPow:
  1182                           	callstack 0
  1183  000089                     efgtoa@c:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x29
  1187  000089                     	ds	1
  1188  00008A                     ??_efgtoa:
  1189  00008A                     setSteering@steeringB:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x2A
  1193  00008A                     	ds	5
  1194  00008F                     _efgtoa$3566:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x2F
  1198  00008F                     	ds	2
  1199  000091                     _efgtoa$3567:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x31
  1203  000091                     	ds	2
  1204  000093                     _efgtoa$3571:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x33
  1208  000093                     	ds	2
  1209  000095                     _efgtoa$3575:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x35
  1213  000095                     	ds	2
  1214  000097                     _efgtoa$3576:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x37
  1218  000097                     	ds	2
  1219  000099                     _efgtoa$3577:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x39
  1223  000099                     	ds	2
  1224  00009B                     efgtoa@t:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x3B
  1228  00009B                     	ds	2
  1229  00009D                     efgtoa@pp:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3D
  1233  00009D                     	ds	2
  1234  00009F                     efgtoa@ne:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x3F
  1238  00009F                     	ds	2
  1239  0000A1                     efgtoa@m:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x41
  1243  0000A1                     	ds	2
  1244  0000A3                     efgtoa@ou:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x43
  1248  0000A3                     	ds	4
  1249  0000A7                     efgtoa@d:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x47
  1253  0000A7                     	ds	2
  1254  0000A9                     efgtoa@sign:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x49
  1258  0000A9                     	ds	2
  1259  0000AB                     efgtoa@p:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x4B
  1263  0000AB                     	ds	2
  1264  0000AD                     efgtoa@w:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x4D
  1268  0000AD                     	ds	2
  1269  0000AF                     efgtoa@nmode:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x4F
  1273  0000AF                     	ds	1
  1274  0000B0                     efgtoa@mode:
  1275                           	callstack 0
  1276                           
  1277                           ; 1 bytes @ 0x50
  1278  0000B0                     	ds	1
  1279  0000B1                     efgtoa@h:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x51
  1283  0000B1                     	ds	4
  1284  0000B5                     efgtoa@l:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x55
  1288  0000B5                     	ds	4
  1289  0000B9                     efgtoa@i:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x59
  1293  0000B9                     	ds	2
  1294  0000BB                     efgtoa@g:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x5B
  1298  0000BB                     	ds	4
  1299  0000BF                     efgtoa@e:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x5F
  1303  0000BF                     	ds	2
  1304  0000C1                     efgtoa@n:
  1305                           	callstack 0
  1306                           
  1307                           ; 2 bytes @ 0x61
  1308  0000C1                     	ds	2
  1309  0000C3                     efgtoa@u:
  1310                           	callstack 0
  1311                           
  1312                           ; 4 bytes @ 0x63
  1313  0000C3                     	ds	4
  1314  0000C7                     ?_vfpfcnvrt:
  1315                           	callstack 0
  1316  0000C7                     vfpfcnvrt@fp:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x67
  1320  0000C7                     	ds	2
  1321  0000C9                     vfpfcnvrt@fmt:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x69
  1325  0000C9                     	ds	2
  1326  0000CB                     vfpfcnvrt@ap:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x6B
  1330  0000CB                     	ds	2
  1331  0000CD                     ??_vfpfcnvrt:
  1332                           
  1333                           ; 1 bytes @ 0x6D
  1334  0000CD                     	ds	4
  1335  0000D1                     vfpfcnvrt@ll:
  1336                           	callstack 0
  1337                           
  1338                           ; 8 bytes @ 0x71
  1339  0000D1                     	ds	8
  1340  0000D9                     _vfpfcnvrt$3595:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x79
  1344  0000D9                     	ds	2
  1345  0000DB                     vfpfcnvrt@f:
  1346                           	callstack 0
  1347                           
  1348                           ; 4 bytes @ 0x7B
  1349  0000DB                     	ds	4
  1350  0000DF                     vfpfcnvrt@ct:
  1351                           	callstack 0
  1352                           
  1353                           ; 3 bytes @ 0x7F
  1354  0000DF                     	ds	3
  1355  0000E2                     vfpfcnvrt@c:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x82
  1359  0000E2                     	ds	1
  1360  0000E3                     vfprintf@cfmt:
  1361                           	callstack 0
  1362                           
  1363                           ; 2 bytes @ 0x83
  1364  0000E3                     	ds	2
  1365                           
  1366                           	psect	cstackCOMRAM
  1367  000001                     __pcstackCOMRAM:
  1368                           	callstack 0
  1369  000001                     CCP3_DefaultCallBack@capturedValue:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x0
  1373  000001                     	ds	2
  1374  000003                     CCP3_CaptureISR@module:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x2
  1378  000003                     	ds	2
  1379  000005                     CCP4_DefaultCallBack@capturedValue:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x4
  1383  000005                     	ds	2
  1384  000007                     CCP4_CaptureISR@module:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x6
  1388  000007                     	ds	2
  1389  000009                     ?_TMR5_ReadTimer:
  1390                           	callstack 0
  1391  000009                     TMR5_WriteTimer@timerVal:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x8
  1395  000009                     	ds	2
  1396  00000B                     ??_TMR5_ReadTimer:
  1397  00000B                     
  1398                           ; 1 bytes @ 0xA
  1399  00000B                     	ds	2
  1400  00000D                     TMR5_ReadTimer@readVal:
  1401                           	callstack 0
  1402                           
  1403                           ; 2 bytes @ 0xC
  1404  00000D                     	ds	2
  1405  00000F                     TMR5_ReadTimer@readValHigh:
  1406                           	callstack 0
  1407                           
  1408                           ; 1 bytes @ 0xE
  1409  00000F                     	ds	1
  1410  000010                     TMR5_ReadTimer@readValLow:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0xF
  1414  000010                     	ds	1
  1415  000011                     ??_UART1_tx_vect_isr:
  1416  000011                     
  1417                           ; 1 bytes @ 0x10
  1418  000011                     	ds	1
  1419  000012                     ??_UART1_rx_vect_isr:
  1420                           
  1421                           ; 1 bytes @ 0x11
  1422  000012                     	ds	1
  1423  000013                     ??_TMR4_ISR:
  1424                           
  1425                           ; 1 bytes @ 0x12
  1426  000013                     	ds	1
  1427  000014                     ??_TMR3_Initialize:
  1428  000014                     ?_strlen:
  1429                           	callstack 0
  1430  000014                     ?___fpclassifyf:
  1431                           	callstack 0
  1432  000014                     ?_isupper:
  1433                           	callstack 0
  1434  000014                     ?_strncmp:
  1435                           	callstack 0
  1436  000014                     ?_ADCC_GetSingleConversion:
  1437                           	callstack 0
  1438  000014                     ?___awdiv:
  1439                           	callstack 0
  1440  000014                     ?___awmod:
  1441                           	callstack 0
  1442  000014                     ?___aldiv:
  1443                           	callstack 0
  1444  000014                     ?___flneg:
  1445                           	callstack 0
  1446  000014                     ?___aodiv:
  1447                           	callstack 0
  1448  000014                     ?___aomod:
  1449                           	callstack 0
  1450  000014                     UART1_Write@txData:
  1451                           	callstack 0
  1452  000014                     INTERRUPT_Initialize@state:
  1453                           	callstack 0
  1454  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1455                           	callstack 0
  1456  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1457                           	callstack 0
  1458  000014                     UART1_SetErrorHandler@interruptHandler:
  1459                           	callstack 0
  1460  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1461                           	callstack 0
  1462  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1463                           	callstack 0
  1464  000014                     CCP3_SetCallBack@customCallBack:
  1465                           	callstack 0
  1466  000014                     CCP4_SetCallBack@customCallBack:
  1467                           	callstack 0
  1468  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1469                           	callstack 0
  1470  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1471                           	callstack 0
  1472  000014                     PWM7_LoadDutyValue@dutyValue:
  1473                           	callstack 0
  1474  000014                     PWM8_LoadDutyValue@dutyValue:
  1475                           	callstack 0
  1476  000014                     PWM5_LoadDutyValue@dutyValue:
  1477                           	callstack 0
  1478  000014                     PWM6_LoadDutyValue@dutyValue:
  1479                           	callstack 0
  1480  000014                     ___awdiv@dividend:
  1481                           	callstack 0
  1482  000014                     ___awmod@dividend:
  1483                           	callstack 0
  1484  000014                     isupper@c:
  1485                           	callstack 0
  1486  000014                     strcpy@dest:
  1487                           	callstack 0
  1488  000014                     strlen@s:
  1489                           	callstack 0
  1490  000014                     strncmp@_l:
  1491                           	callstack 0
  1492  000014                     ___aldiv@dividend:
  1493                           	callstack 0
  1494  000014                     ___fleq@ff1:
  1495                           	callstack 0
  1496  000014                     ___flneg@f1:
  1497                           	callstack 0
  1498  000014                     ___fpclassifyf@x:
  1499                           	callstack 0
  1500  000014                     ___aodiv@dividend:
  1501                           	callstack 0
  1502  000014                     ___aomod@dividend:
  1503                           	callstack 0
  1504                           
  1505                           ; 8 bytes @ 0x13
  1506  000014                     	ds	1
  1507  000015                     putch@txData:
  1508                           	callstack 0
  1509                           
  1510                           ; 1 bytes @ 0x14
  1511  000015                     	ds	1
  1512  000016                     ??_TMR5_Initialize:
  1513  000016                     ??_isupper:
  1514  000016                     ??_PWM7_LoadDutyValue:
  1515  000016                     ??_PWM8_LoadDutyValue:
  1516  000016                     ??_PWM5_LoadDutyValue:
  1517  000016                     ??_PWM6_LoadDutyValue:
  1518  000016                     ??_ADCC_GetSingleConversion:
  1519  000016                     ___awdiv@divisor:
  1520                           	callstack 0
  1521  000016                     ___awmod@divisor:
  1522                           	callstack 0
  1523  000016                     fputc@c:
  1524                           	callstack 0
  1525  000016                     strcpy@src:
  1526                           	callstack 0
  1527  000016                     strlen@a:
  1528                           	callstack 0
  1529  000016                     strncmp@_r:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0x15
  1533  000016                     	ds	2
  1534  000018                     ??___fpclassifyf:
  1535  000018                     ??_strcpy:
  1536  000018                     ADCC_GetSingleConversion@channel:
  1537                           	callstack 0
  1538  000018                     ___awdiv@counter:
  1539                           	callstack 0
  1540  000018                     ___awmod@counter:
  1541                           	callstack 0
  1542  000018                     setMotor@motorPower:
  1543                           	callstack 0
  1544  000018                     fputc@fp:
  1545                           	callstack 0
  1546  000018                     strncmp@n:
  1547                           	callstack 0
  1548  000018                     ___aldiv@divisor:
  1549                           	callstack 0
  1550  000018                     ___fleq@ff2:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0x17
  1554  000018                     	ds	1
  1555  000019                     ___awdiv@sign:
  1556                           	callstack 0
  1557  000019                     ___awmod@sign:
  1558                           	callstack 0
  1559                           
  1560                           ; 1 bytes @ 0x18
  1561  000019                     	ds	1
  1562  00001A                     ??_setMotor:
  1563  00001A                     ??_fputc:
  1564  00001A                     ??_strncmp:
  1565  00001A                     ?_tolower:
  1566                           	callstack 0
  1567  00001A                     ___awdiv@quotient:
  1568                           	callstack 0
  1569  00001A                     strcpy@s:
  1570                           	callstack 0
  1571  00001A                     tolower@c:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x19
  1575  00001A                     	ds	1
  1576  00001B                     strncmp@l:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x1A
  1580  00001B                     	ds	1
  1581  00001C                     ??_tolower:
  1582  00001C                     ??___fleq:
  1583  00001C                     ?___xxtofl:
  1584                           	callstack 0
  1585  00001C                     ___aldiv@counter:
  1586                           	callstack 0
  1587  00001C                     ___fpclassifyf@e:
  1588                           	callstack 0
  1589  00001C                     strcpy@d:
  1590                           	callstack 0
  1591  00001C                     ___xxtofl@val:
  1592                           	callstack 0
  1593  00001C                     ___aodiv@divisor:
  1594                           	callstack 0
  1595  00001C                     ___aomod@divisor:
  1596                           	callstack 0
  1597                           
  1598                           ; 8 bytes @ 0x1B
  1599  00001C                     	ds	1
  1600  00001D                     ___aldiv@sign:
  1601                           	callstack 0
  1602  00001D                     strncmp@r:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x1C
  1606  00001D                     	ds	1
  1607  00001E                     ___aldiv@quotient:
  1608                           	callstack 0
  1609  00001E                     ___fpclassifyf@u:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x1D
  1613  00001E                     	ds	1
  1614  00001F                     fputs@s:
  1615                           	callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x1E
  1618  00001F                     	ds	1
  1619  000020                     ??___xxtofl:
  1620  000020                     _tolower$3688:
  1621                           	callstack 0
  1622                           
  1623                           ; 2 bytes @ 0x1F
  1624  000020                     	ds	1
  1625  000021                     fputs@fp:
  1626                           	callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x20
  1629  000021                     	ds	1
  1630  000022                     ?_actSpeed:
  1631                           	callstack 0
  1632                           
  1633                           ; 2 bytes @ 0x21
  1634  000022                     	ds	1
  1635  000023                     fputs@c:
  1636                           	callstack 0
  1637                           
  1638                           ; 1 bytes @ 0x22
  1639  000023                     	ds	1
  1640  000024                     ___aodiv@counter:
  1641                           	callstack 0
  1642  000024                     ___aomod@counter:
  1643                           	callstack 0
  1644  000024                     ___xxtofl@sign:
  1645                           	callstack 0
  1646  000024                     actSpeed@speed:
  1647                           	callstack 0
  1648  000024                     fputs@i:
  1649                           	callstack 0
  1650                           
  1651                           ; 2 bytes @ 0x23
  1652  000024                     	ds	1
  1653  000025                     ___aodiv@sign:
  1654                           	callstack 0
  1655  000025                     ___aomod@sign:
  1656                           	callstack 0
  1657  000025                     ___xxtofl@exp:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0x24
  1661  000025                     	ds	1
  1662  000026                     ?_abs:
  1663                           	callstack 0
  1664  000026                     ?_pad:
  1665                           	callstack 0
  1666  000026                     pad@fp:
  1667                           	callstack 0
  1668  000026                     abs@a:
  1669                           	callstack 0
  1670  000026                     ___xxtofl@arg:
  1671                           	callstack 0
  1672  000026                     ___aodiv@quotient:
  1673                           	callstack 0
  1674                           
  1675                           ; 8 bytes @ 0x25
  1676  000026                     	ds	2
  1677  000028                     ??_abs:
  1678  000028                     pad@buf:
  1679                           	callstack 0
  1680                           
  1681                           ; 2 bytes @ 0x27
  1682  000028                     	ds	2
  1683  00002A                     ?___fldiv:
  1684                           	callstack 0
  1685  00002A                     ?___flmul:
  1686                           	callstack 0
  1687  00002A                     pad@p:
  1688                           	callstack 0
  1689  00002A                     ___fldiv@b:
  1690                           	callstack 0
  1691  00002A                     ___flmul@b:
  1692                           	callstack 0
  1693                           
  1694                           ; 4 bytes @ 0x29
  1695  00002A                     	ds	2
  1696  00002C                     ??_pad:
  1697                           
  1698                           ; 1 bytes @ 0x2B
  1699  00002C                     	ds	1
  1700  00002D                     pad@i:
  1701                           	callstack 0
  1702                           
  1703                           ; 2 bytes @ 0x2C
  1704  00002D                     	ds	1
  1705  00002E                     ___fldiv@a:
  1706                           	callstack 0
  1707  00002E                     ___flmul@a:
  1708                           	callstack 0
  1709                           
  1710                           ; 4 bytes @ 0x2D
  1711  00002E                     	ds	1
  1712  00002F                     pad@w:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x2E
  1716  00002F                     	ds	2
  1717  000031                     ??_dtoa:
  1718                           
  1719                           ; 1 bytes @ 0x30
  1720  000031                     	ds	1
  1721  000032                     ??___fldiv:
  1722  000032                     ??___flmul:
  1723                           
  1724                           ; 1 bytes @ 0x31
  1725  000032                     	ds	4
  1726  000036                     ??___fladd:
  1727  000036                     ??___flge:
  1728  000036                     ?_floorf:
  1729                           	callstack 0
  1730  000036                     floorf@x:
  1731                           	callstack 0
  1732                           
  1733                           ; 4 bytes @ 0x35
  1734  000036                     	ds	4
  1735  00003A                     
  1736                           ; 1 bytes @ 0x39
  1737 ;;
  1738 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1739 ;;
  1740 ;; *************** function _main *****************
  1741 ;; Defined at:
  1742 ;;		line 8 in file "main.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels required when called: 20
  1762 ;; This function calls:
  1763 ;;		_SYSTEM_Initialize
  1764 ;;		_TMR4_SetInterruptHandler
  1765 ;;		_loop
  1766 ;; This function is called by:
  1767 ;;		Startup code after reset
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text0
  1772  005E50                     __ptext0:
  1773                           	callstack 0
  1774  005E50                     _main:
  1775                           	callstack 11
  1776  005E50                     
  1777                           ;main.c: 9:     SYSTEM_Initialize();
  1778  005E50  EC46  F02B         	call	_SYSTEM_Initialize	;wreg free
  1779  005E54                     
  1780                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1781  005E54  8ED2               	bsf	210,7,c	;volatile
  1782  005E56                     
  1783                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1784  005E56  8CD2               	bsf	210,6,c	;volatile
  1785                           
  1786                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1787  005E58  0E94               	movlw	low _TMR4_10msISR
  1788  005E5A  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1789  005E5C  0E5F               	movlw	high _TMR4_10msISR
  1790  005E5E  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1791  005E60  ECBB  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
  1792  005E64                     l9369:
  1793                           
  1794                           ;main.c: 15:         loop();
  1795  005E64  ECD9  F022         	call	_loop	;wreg free
  1796  005E68  EF32  F02F         	goto	l9369
  1797  005E6C  EF57  F000         	goto	start
  1798  005E70                     __end_of_main:
  1799                           	callstack 0
  1800                           
  1801 ;; *************** function _loop *****************
  1802 ;; Defined at:
  1803 ;;		line 19 in file "main.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:        0 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 19
  1824 ;; This function calls:
  1825 ;;		___flge
  1826 ;;		___xxtofl
  1827 ;;		_calcMotorPow
  1828 ;;		_calcSpeed
  1829 ;;		_calcSteering
  1830 ;;		_checkBatt
  1831 ;;		_getBatteryVoltage
  1832 ;;		_getCurve
  1833 ;;		_getReverse
  1834 ;;		_setMotor
  1835 ;;		_setSteering
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text1
  1842  0045B2                     __ptext1:
  1843                           	callstack 0
  1844  0045B2                     _loop:
  1845                           	callstack 11
  1846  0045B2                     
  1847                           ;main.c: 20:     setMotor(0);
  1848  0045B2  0E00               	movlw	0
  1849  0045B4  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1850  0045B6  0E00               	movlw	0
  1851  0045B8  6E18               	movwf	setMotor@motorPower^0,c
  1852  0045BA  ECED  F025         	call	_setMotor	;wreg free
  1853                           
  1854                           ;main.c: 21:     setSteering(0, Front);
  1855  0045BE  0E00               	movlw	0
  1856  0045C0  0100               	movlb	0	; () banked
  1857  0045C2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1858  0045C4  0E00               	movlw	0
  1859  0045C6  6F83               	movwf	setSteering@steering& (0+255),b
  1860  0045C8  0E03               	movlw	3
  1861  0045CA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1862  0045CC  EC50  F01E         	call	_setSteering	;wreg free
  1863  0045D0                     l1228:
  1864  0045D0  B8CB               	btfsc	203,4,c	;volatile
  1865  0045D2  EFED  F022         	goto	u10431
  1866  0045D6  EFEF  F022         	goto	u10430
  1867  0045DA                     u10431:
  1868  0045DA  EFE8  F022         	goto	l1228
  1869  0045DE                     u10430:
  1870  0045DE                     l9333:
  1871  0045DE  0100               	movlb	0	; () banked
  1872  0045E0  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1873  0045E2  B4D8               	btfsc	status,2,c
  1874  0045E4  EFF6  F022         	goto	u10441
  1875  0045E8  EFF8  F022         	goto	u10440
  1876  0045EC                     u10441:
  1877  0045EC  EFEF  F022         	goto	l9333
  1878  0045F0                     u10440:
  1879  0045F0                     
  1880                           ; BSR set to: 0
  1881                           ;main.c: 26:         cycle10ms = 0;
  1882  0045F0  0E00               	movlw	0
  1883  0045F2  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1884  0045F4                     
  1885                           ; BSR set to: 0
  1886                           ;main.c: 28:         getBatteryVoltage();
  1887  0045F4  ECC3  F029         	call	_getBatteryVoltage	;wreg free
  1888  0045F8                     
  1889                           ;main.c: 29:     } while (BatteryVolt < ((6.5) * 409.6));
  1890  0045F8  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  1891  0045FC  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1892  004600  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1893  004602  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1894  004604  0E00               	movlw	0
  1895  004606  EC4B  F01F         	call	___xxtofl
  1896  00460A  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1897  00460E  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1898  004612  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1899  004616  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1900  00461A  0E66               	movlw	102
  1901  00461C  0100               	movlb	0	; () banked
  1902  00461E  6F71               	movwf	___flge@ff2& (0+255),b
  1903  004620  0E66               	movlw	102
  1904  004622  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1905  004624  0E26               	movlw	38
  1906  004626  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1907  004628  0E45               	movlw	69
  1908  00462A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1909  00462C  EC71  F024         	call	___flge	;wreg free
  1910  004630  0100               	movlb	0	; () banked
  1911  004632  A0D8               	btfss	status,0,c
  1912  004634  EF1E  F023         	goto	u10451
  1913  004638  EF20  F023         	goto	u10450
  1914  00463C                     u10451:
  1915  00463C  EFEF  F022         	goto	l9333
  1916  004640                     u10450:
  1917  004640                     
  1918                           ; BSR set to: 0
  1919                           ;main.c: 33:     oldDistLeft = distLeft;
  1920  004640  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  1921  004644  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1922                           
  1923                           ;main.c: 34:     oldDistRight = distRight;
  1924  004648  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  1925  00464C  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  1926  004650                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 35:     cycle10ms = 0;
  1929  004650  0E00               	movlw	0
  1930  004652  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1931  004654                     l9343:
  1932  004654  0100               	movlb	0	; () banked
  1933  004656  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1934  004658  B4D8               	btfsc	status,2,c
  1935  00465A  EF31  F023         	goto	u10461
  1936  00465E  EF33  F023         	goto	u10460
  1937  004662                     u10461:
  1938  004662  EF2A  F023         	goto	l9343
  1939  004666                     u10460:
  1940  004666                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 38:         cycle10ms = 0;
  1943  004666  0E00               	movlw	0
  1944  004668  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1945  00466A                     
  1946                           ; BSR set to: 0
  1947                           ;main.c: 40:         if (!PORTBbits.RB5) {
  1948  00466A  BACB               	btfsc	203,5,c	;volatile
  1949  00466C  EF3A  F023         	goto	u10471
  1950  004670  EF3C  F023         	goto	u10470
  1951  004674                     u10471:
  1952  004674  EF4E  F023         	goto	l9353
  1953  004678                     u10470:
  1954  004678                     
  1955                           ; BSR set to: 0
  1956                           ;main.c: 41:             setSpeed = 0;
  1957  004678  0E00               	movlw	0
  1958  00467A  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  1959  00467C  0E00               	movlw	0
  1960  00467E  6FED               	movwf	_setSpeed& (0+255),b
  1961                           
  1962                           ;main.c: 42:             actMotorPow = 0;
  1963  004680  0E00               	movlw	0
  1964  004682  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
  1965  004684  0E00               	movlw	0
  1966  004686  6FE9               	movwf	_actMotorPow& (0+255),b
  1967  004688                     
  1968                           ; BSR set to: 0
  1969                           ;main.c: 43:             setSteering(0, Front);
  1970  004688  0E00               	movlw	0
  1971  00468A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1972  00468C  0E00               	movlw	0
  1973  00468E  6F83               	movwf	setSteering@steering& (0+255),b
  1974  004690  0E03               	movlw	3
  1975  004692  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1976  004694  EC50  F01E         	call	_setSteering	;wreg free
  1977                           
  1978                           ;main.c: 44:             break;
  1979  004698  EF66  F023         	goto	l1244
  1980  00469C                     l9353:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;main.c: 47:         if (checkBatt()) {
  1984  00469C  EC7A  F029         	call	_checkBatt	;wreg free
  1985  0046A0  0900               	iorlw	0
  1986  0046A2  B4D8               	btfsc	status,2,c
  1987  0046A4  EF56  F023         	goto	u10481
  1988  0046A8  EF58  F023         	goto	u10480
  1989  0046AC                     u10481:
  1990  0046AC  EF5A  F023         	goto	l9357
  1991  0046B0                     u10480:
  1992  0046B0  EF66  F023         	goto	l1244
  1993  0046B4                     l9357:
  1994                           
  1995                           ;main.c: 51:         getCurve();
  1996  0046B4  ECB3  F017         	call	_getCurve	;wreg free
  1997                           
  1998                           ;main.c: 52:         getReverse();
  1999  0046B8  EC41  F022         	call	_getReverse	;wreg free
  2000                           
  2001                           ;main.c: 54:         calcSteering();
  2002  0046BC  ECCA  F01A         	call	_calcSteering	;wreg free
  2003  0046C0                     
  2004                           ;main.c: 55:         calcSpeed();
  2005  0046C0  EC32  F01C         	call	_calcSpeed	;wreg free
  2006  0046C4                     
  2007                           ;main.c: 56:         calcMotorPow();
  2008  0046C4  EC9B  F021         	call	_calcMotorPow	;wreg free
  2009  0046C8  EF2A  F023         	goto	l9343
  2010  0046CC                     l1244:
  2011  0046CC  0012               	return		;funcret
  2012  0046CE                     __end_of_loop:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _getReverse *****************
  2016 ;; Defined at:
  2017 ;;		line 210 in file "main.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 17
  2038 ;; This function calls:
  2039 ;;		_printf
  2040 ;; This function is called by:
  2041 ;;		_loop
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text2
  2046  004482                     __ptext2:
  2047                           	callstack 0
  2048  004482                     _getReverse:
  2049                           	callstack 12
  2050  004482                     
  2051                           ;main.c: 211:     if (distFront < (15)) {
  2052  004482  0100               	movlb	0	; () banked
  2053  004484  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2054  004486  E107               	bnz	u10161
  2055  004488  0E0F               	movlw	15
  2056  00448A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2057  00448C  B0D8               	btfsc	status,0,c
  2058  00448E  EF4B  F022         	goto	u10161
  2059  004492  EF4D  F022         	goto	u10160
  2060  004496                     u10161:
  2061  004496  EF52  F022         	goto	l9131
  2062  00449A                     u10160:
  2063  00449A                     
  2064                           ; BSR set to: 0
  2065                           ;main.c: 212:         ++reverseCount;
  2066  00449A  0101               	movlb	1	; () banked
  2067  00449C  4B34               	infsnz	_reverseCount& (0+255),f,b
  2068  00449E  2B35               	incf	(_reverseCount+1)& (0+255),f,b
  2069                           
  2070                           ;main.c: 213:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2071  0044A0  EF69  F022         	goto	l9137
  2072  0044A4                     l9131:
  2073                           
  2074                           ; BSR set to: 0
  2075  0044A4  0E02               	movlw	2
  2076  0044A6  19FC               	xorwf	_driveMode& (0+255),w,b
  2077  0044A8  B4D8               	btfsc	status,2,c
  2078  0044AA  EF59  F022         	goto	u10171
  2079  0044AE  EF5B  F022         	goto	u10170
  2080  0044B2                     u10171:
  2081  0044B2  EF69  F022         	goto	l9137
  2082  0044B6                     u10170:
  2083  0044B6                     
  2084                           ; BSR set to: 0
  2085  0044B6  0E03               	movlw	3
  2086  0044B8  19FC               	xorwf	_driveMode& (0+255),w,b
  2087  0044BA  B4D8               	btfsc	status,2,c
  2088  0044BC  EF62  F022         	goto	u10181
  2089  0044C0  EF64  F022         	goto	u10180
  2090  0044C4                     u10181:
  2091  0044C4  EF69  F022         	goto	l9137
  2092  0044C8                     u10180:
  2093  0044C8                     
  2094                           ; BSR set to: 0
  2095                           ;main.c: 214:         reverseCount = 0;
  2096  0044C8  0E00               	movlw	0
  2097  0044CA  0101               	movlb	1	; () banked
  2098  0044CC  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2099  0044CE  0E00               	movlw	0
  2100  0044D0  6F34               	movwf	_reverseCount& (0+255),b
  2101  0044D2                     l9137:
  2102                           
  2103                           ;main.c: 217:     if (reverseCount > (50)) {
  2104  0044D2  0101               	movlb	1	; () banked
  2105  0044D4  5135               	movf	(_reverseCount+1)& (0+255),w,b
  2106  0044D6  E109               	bnz	u10190
  2107  0044D8  0E33               	movlw	51
  2108  0044DA  5D34               	subwf	_reverseCount& (0+255),w,b
  2109  0044DC  A0D8               	btfss	status,0,c
  2110  0044DE  EF73  F022         	goto	u10191
  2111  0044E2  EF75  F022         	goto	u10190
  2112  0044E6                     u10191:
  2113  0044E6  EFD8  F022         	goto	l1324
  2114  0044EA                     u10190:
  2115  0044EA                     
  2116                           ; BSR set to: 1
  2117                           ;main.c: 218:         ++reverseTime;
  2118  0044EA  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2119  0044EC  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2120  0044EE                     
  2121                           ; BSR set to: 1
  2122                           ;main.c: 220:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2123  0044EE  0E02               	movlw	2
  2124  0044F0  0100               	movlb	0	; () banked
  2125  0044F2  19FC               	xorwf	_driveMode& (0+255),w,b
  2126  0044F4  B4D8               	btfsc	status,2,c
  2127  0044F6  EF7F  F022         	goto	u10201
  2128  0044FA  EF81  F022         	goto	u10200
  2129  0044FE                     u10201:
  2130  0044FE  EFAB  F022         	goto	l9155
  2131  004502                     u10200:
  2132  004502                     
  2133                           ; BSR set to: 0
  2134  004502  0E03               	movlw	3
  2135  004504  19FC               	xorwf	_driveMode& (0+255),w,b
  2136  004506  B4D8               	btfsc	status,2,c
  2137  004508  EF88  F022         	goto	u10211
  2138  00450C  EF8A  F022         	goto	u10210
  2139  004510                     u10211:
  2140  004510  EFAB  F022         	goto	l9155
  2141  004514                     u10210:
  2142  004514                     
  2143                           ; BSR set to: 0
  2144                           ;main.c: 221:             if (distLeft > distRight) {
  2145  004514  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  2146  004516  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2147  004518  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2148  00451A  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2149  00451C  B0D8               	btfsc	status,0,c
  2150  00451E  EF93  F022         	goto	u10221
  2151  004522  EF95  F022         	goto	u10220
  2152  004526                     u10221:
  2153  004526  EFA1  F022         	goto	l9151
  2154  00452A                     u10220:
  2155  00452A                     
  2156                           ; BSR set to: 0
  2157                           ;main.c: 222:                 printf("ReverseRigth\n");
  2158  00452A  0E34               	movlw	low STR_14
  2159  00452C  0101               	movlb	1	; () banked
  2160  00452E  6FA6               	movwf	printf@fmt& (0+255),b
  2161  004530  0E10               	movlw	high STR_14
  2162  004532  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2163  004534  ECDC  F02E         	call	_printf	;wreg free
  2164  004538                     
  2165                           ;main.c: 223:                 driveMode = ReverseRight;
  2166  004538  0E02               	movlw	2
  2167  00453A  0100               	movlb	0	; () banked
  2168  00453C  6FFC               	movwf	_driveMode& (0+255),b
  2169                           
  2170                           ;main.c: 224:             } else {
  2171  00453E  EFAB  F022         	goto	l9155
  2172  004542                     l9151:
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;main.c: 225:                 printf("ReverseLeft\n");
  2176  004542  0E6B               	movlw	low STR_15
  2177  004544  0101               	movlb	1	; () banked
  2178  004546  6FA6               	movwf	printf@fmt& (0+255),b
  2179  004548  0E10               	movlw	high STR_15
  2180  00454A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2181  00454C  ECDC  F02E         	call	_printf	;wreg free
  2182  004550                     
  2183                           ;main.c: 226:                 driveMode = ReverseLeft;
  2184  004550  0E03               	movlw	3
  2185  004552  0100               	movlb	0	; () banked
  2186  004554  6FFC               	movwf	_driveMode& (0+255),b
  2187  004556                     l9155:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;main.c: 230:         if (distFront > (35) || reverseTime > (300)) {
  2191  004556  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2192  004558  E107               	bnz	u10231
  2193  00455A  0E24               	movlw	36
  2194  00455C  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2195  00455E  B0D8               	btfsc	status,0,c
  2196  004560  EFB4  F022         	goto	u10231
  2197  004564  EFB6  F022         	goto	u10230
  2198  004568                     u10231:
  2199  004568  EFC5  F022         	goto	l9159
  2200  00456C                     u10230:
  2201  00456C                     
  2202                           ; BSR set to: 0
  2203  00456C  0101               	movlb	1	; () banked
  2204  00456E  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2205  004570  EFC3  F022         	goto	u10241
  2206  004574  0E2D               	movlw	45
  2207  004576  5D2A               	subwf	_reverseTime& (0+255),w,b
  2208  004578  0E01               	movlw	1
  2209  00457A  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2210  00457C  A0D8               	btfss	status,0,c
  2211  00457E  EFC3  F022         	goto	u10241
  2212  004582  EFC5  F022         	goto	u10240
  2213  004586                     u10241:
  2214  004586  EFD8  F022         	goto	l1324
  2215  00458A                     u10240:
  2216  00458A                     l9159:
  2217                           
  2218                           ;main.c: 231:             printf("Stop Reverse\n");
  2219  00458A  0E26               	movlw	low STR_16
  2220  00458C  0101               	movlb	1	; () banked
  2221  00458E  6FA6               	movwf	printf@fmt& (0+255),b
  2222  004590  0E10               	movlw	high STR_16
  2223  004592  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2224  004594  ECDC  F02E         	call	_printf	;wreg free
  2225  004598                     
  2226                           ;main.c: 233:                 driveMode = Straight;
  2227  004598  0E00               	movlw	0
  2228  00459A  0100               	movlb	0	; () banked
  2229  00459C  6FFC               	movwf	_driveMode& (0+255),b
  2230  00459E                     
  2231                           ; BSR set to: 0
  2232                           ;main.c: 238:             reverseCount = 0;
  2233  00459E  0E00               	movlw	0
  2234  0045A0  0101               	movlb	1	; () banked
  2235  0045A2  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2236  0045A4  0E00               	movlw	0
  2237  0045A6  6F34               	movwf	_reverseCount& (0+255),b
  2238                           
  2239                           ;main.c: 239:             reverseTime = 0;
  2240  0045A8  0E00               	movlw	0
  2241  0045AA  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2242  0045AC  0E00               	movlw	0
  2243  0045AE  6F2A               	movwf	_reverseTime& (0+255),b
  2244  0045B0                     l1324:
  2245                           
  2246                           ; BSR set to: 1
  2247  0045B0  0012               	return		;funcret
  2248  0045B2                     __end_of_getReverse:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _getCurve *****************
  2252 ;; Defined at:
  2253 ;;		line 127 in file "main.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  deltaRight      2   18[BANK1 ] short 
  2258 ;;  deltaLeft       2   16[BANK1 ] short 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;Total ram usage:        6 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 17
  2275 ;; This function calls:
  2276 ;;		_printf
  2277 ;; This function is called by:
  2278 ;;		_loop
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text3
  2283  002F66                     __ptext3:
  2284                           	callstack 0
  2285  002F66                     _getCurve:
  2286                           	callstack 12
  2287  002F66                     
  2288                           ;main.c: 128:     int16_t deltaLeft;;main.c: 129:     int16_t deltaRight;;main.c: 131:  
      +                             switch (curveMode) {
  2289  002F66  EF2F  F019         	goto	l9121
  2290  002F6A                     l9027:
  2291                           
  2292                           ; BSR set to: 1
  2293                           ;main.c: 133:             deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2294  002F6A  0100               	movlb	0	; () banked
  2295  002F6C  51F1               	movf	_oldDistLeft& (0+255),w,b
  2296  002F6E  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2297  002F70  0101               	movlb	1	; () banked
  2298  002F72  6FB0               	movwf	getCurve@deltaLeft& (0+255),b
  2299  002F74  0100               	movlb	0	; () banked
  2300  002F76  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2301  002F78  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2302  002F7A  0101               	movlb	1	; () banked
  2303  002F7C  6FB1               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2304                           
  2305                           ;main.c: 134:             deltaRight = (int16_t) (distRight - oldDistRight);
  2306  002F7E  0100               	movlb	0	; () banked
  2307  002F80  51EF               	movf	_oldDistRight& (0+255),w,b
  2308  002F82  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2309  002F84  0101               	movlb	1	; () banked
  2310  002F86  6FB2               	movwf	getCurve@deltaRight& (0+255),b
  2311  002F88  0100               	movlb	0	; () banked
  2312  002F8A  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2313  002F8C  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2314  002F8E  0101               	movlb	1	; () banked
  2315  002F90  6FB3               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2316                           
  2317                           ;main.c: 137:             if (deltaLeft > (35) && deltaLeft < (200) && oldDistLeft < (10
      +                          0)) {
  2318  002F92  BFB1               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2319  002F94  EFD5  F017         	goto	u9981
  2320  002F98  51B1               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2321  002F9A  E109               	bnz	u9980
  2322  002F9C  0E24               	movlw	36
  2323  002F9E  5DB0               	subwf	getCurve@deltaLeft& (0+255),w,b
  2324  002FA0  A0D8               	btfss	status,0,c
  2325  002FA2  EFD5  F017         	goto	u9981
  2326  002FA6  EFD7  F017         	goto	u9980
  2327  002FAA                     u9981:
  2328  002FAA  EF10  F018         	goto	l9041
  2329  002FAE                     u9980:
  2330  002FAE                     
  2331                           ; BSR set to: 1
  2332  002FAE  BFB1               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2333  002FB0  EFE5  F017         	goto	u9990
  2334  002FB4  51B1               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2335  002FB6  E107               	bnz	u9991
  2336  002FB8  0EC8               	movlw	200
  2337  002FBA  5DB0               	subwf	getCurve@deltaLeft& (0+255),w,b
  2338  002FBC  B0D8               	btfsc	status,0,c
  2339  002FBE  EFE3  F017         	goto	u9991
  2340  002FC2  EFE5  F017         	goto	u9990
  2341  002FC6                     u9991:
  2342  002FC6  EF10  F018         	goto	l9041
  2343  002FCA                     u9990:
  2344  002FCA                     
  2345                           ; BSR set to: 1
  2346  002FCA  0100               	movlb	0	; () banked
  2347  002FCC  51F2               	movf	(_oldDistLeft+1)& (0+255),w,b
  2348  002FCE  E107               	bnz	u10001
  2349  002FD0  0E64               	movlw	100
  2350  002FD2  5DF1               	subwf	_oldDistLeft& (0+255),w,b
  2351  002FD4  B0D8               	btfsc	status,0,c
  2352  002FD6  EFEF  F017         	goto	u10001
  2353  002FDA  EFF1  F017         	goto	u10000
  2354  002FDE                     u10001:
  2355  002FDE  EF10  F018         	goto	l9041
  2356  002FE2                     u10000:
  2357  002FE2                     
  2358                           ; BSR set to: 0
  2359                           ;main.c: 138:                 delay = 0;
  2360  002FE2  0E00               	movlw	0
  2361  002FE4  6FF7               	movwf	_delay& (0+255),b
  2362                           
  2363                           ;main.c: 139:                 curveMode = BeforeCurve;
  2364  002FE6  0E01               	movlw	1
  2365  002FE8  6FFB               	movwf	_curveMode& (0+255),b
  2366                           
  2367                           ;main.c: 140:                 driveMode = CurveLeft;
  2368  002FEA  0E04               	movlw	4
  2369  002FEC  6FFC               	movwf	_driveMode& (0+255),b
  2370  002FEE                     
  2371                           ; BSR set to: 0
  2372                           ;main.c: 141:                 ++curveLeftCount;
  2373  002FEE  2BF9               	incf	_curveLeftCount& (0+255),f,b
  2374  002FF0                     
  2375                           ; BSR set to: 0
  2376                           ;main.c: 142:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  2377  002FF0  0E01               	movlw	low STR_2
  2378  002FF2  0101               	movlb	1	; () banked
  2379  002FF4  6FA6               	movwf	printf@fmt& (0+255),b
  2380  002FF6  0E10               	movlw	high STR_2
  2381  002FF8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2382  002FFA  C1B0  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2383  002FFE  C1B1  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2384  003002  C1B2  F1AA         	movff	getCurve@deltaRight,?_printf+4
  2385  003006  C1B3  F1AB         	movff	getCurve@deltaRight+1,?_printf+5
  2386  00300A  ECDC  F02E         	call	_printf	;wreg free
  2387  00300E                     
  2388                           ;main.c: 143:                 printf("   CurveLeft\n");
  2389  00300E  0E42               	movlw	low STR_3
  2390  003010  0101               	movlb	1	; () banked
  2391  003012  6FA6               	movwf	printf@fmt& (0+255),b
  2392  003014  0E10               	movlw	high STR_3
  2393  003016  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2394  003018  ECDC  F02E         	call	_printf	;wreg free
  2395                           
  2396                           ;main.c: 144:             } else if (deltaRight > (35) && deltaRight < (200) && oldDistR
      +                          ight < (100)) {
  2397  00301C  EF4E  F019         	goto	l1284
  2398  003020                     l9041:
  2399  003020  0101               	movlb	1	; () banked
  2400  003022  BFB3               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2401  003024  EF1D  F018         	goto	u10011
  2402  003028  51B3               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2403  00302A  E109               	bnz	u10010
  2404  00302C  0E24               	movlw	36
  2405  00302E  5DB2               	subwf	getCurve@deltaRight& (0+255),w,b
  2406  003030  A0D8               	btfss	status,0,c
  2407  003032  EF1D  F018         	goto	u10011
  2408  003036  EF1F  F018         	goto	u10010
  2409  00303A                     u10011:
  2410  00303A  EF4E  F019         	goto	l1284
  2411  00303E                     u10010:
  2412  00303E                     
  2413                           ; BSR set to: 1
  2414  00303E  BFB3               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2415  003040  EF2D  F018         	goto	u10020
  2416  003044  51B3               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2417  003046  E107               	bnz	u10021
  2418  003048  0EC8               	movlw	200
  2419  00304A  5DB2               	subwf	getCurve@deltaRight& (0+255),w,b
  2420  00304C  B0D8               	btfsc	status,0,c
  2421  00304E  EF2B  F018         	goto	u10021
  2422  003052  EF2D  F018         	goto	u10020
  2423  003056                     u10021:
  2424  003056  EF4E  F019         	goto	l1284
  2425  00305A                     u10020:
  2426  00305A                     
  2427                           ; BSR set to: 1
  2428  00305A  0100               	movlb	0	; () banked
  2429  00305C  51F0               	movf	(_oldDistRight+1)& (0+255),w,b
  2430  00305E  E107               	bnz	u10031
  2431  003060  0E64               	movlw	100
  2432  003062  5DEF               	subwf	_oldDistRight& (0+255),w,b
  2433  003064  B0D8               	btfsc	status,0,c
  2434  003066  EF37  F018         	goto	u10031
  2435  00306A  EF39  F018         	goto	u10030
  2436  00306E                     u10031:
  2437  00306E  EF4E  F019         	goto	l1284
  2438  003072                     u10030:
  2439  003072                     
  2440                           ; BSR set to: 0
  2441                           ;main.c: 145:                 delay = 0;
  2442  003072  0E00               	movlw	0
  2443  003074  6FF7               	movwf	_delay& (0+255),b
  2444                           
  2445                           ;main.c: 146:                 curveMode = BeforeCurve;
  2446  003076  0E01               	movlw	1
  2447  003078  6FFB               	movwf	_curveMode& (0+255),b
  2448                           
  2449                           ;main.c: 147:                 driveMode = CurveRight;
  2450  00307A  0E05               	movlw	5
  2451  00307C  6FFC               	movwf	_driveMode& (0+255),b
  2452  00307E                     
  2453                           ; BSR set to: 0
  2454                           ;main.c: 148:                 ++curveRightCount;
  2455  00307E  2BF8               	incf	_curveRightCount& (0+255),f,b
  2456  003080                     
  2457                           ; BSR set to: 0
  2458                           ;main.c: 149:                 printf("Out | dL= %d | dR= %d", deltaLeft, deltaRight);
  2459  003080  0E01               	movlw	low STR_2
  2460  003082  0101               	movlb	1	; () banked
  2461  003084  6FA6               	movwf	printf@fmt& (0+255),b
  2462  003086  0E10               	movlw	high STR_2
  2463  003088  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2464  00308A  C1B0  F1A8         	movff	getCurve@deltaLeft,?_printf+2
  2465  00308E  C1B1  F1A9         	movff	getCurve@deltaLeft+1,?_printf+3
  2466  003092  C1B2  F1AA         	movff	getCurve@deltaRight,?_printf+4
  2467  003096  C1B3  F1AB         	movff	getCurve@deltaRight+1,?_printf+5
  2468  00309A  ECDC  F02E         	call	_printf	;wreg free
  2469  00309E                     
  2470                           ;main.c: 150:                 printf("   CurveRight\n");
  2471  00309E  0E17               	movlw	low STR_5
  2472  0030A0  0101               	movlb	1	; () banked
  2473  0030A2  6FA6               	movwf	printf@fmt& (0+255),b
  2474  0030A4  0E10               	movlw	high STR_5
  2475  0030A6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2476  0030A8  ECDC  F02E         	call	_printf	;wreg free
  2477  0030AC  EF4E  F019         	goto	l1284
  2478  0030B0                     l9055:
  2479                           
  2480                           ; BSR set to: 1
  2481                           ;main.c: 155:             if (delay >= (15)) {
  2482  0030B0  0E0E               	movlw	14
  2483  0030B2  0100               	movlb	0	; () banked
  2484  0030B4  65F7               	cpfsgt	_delay& (0+255),b
  2485  0030B6  EF5F  F018         	goto	u10041
  2486  0030BA  EF61  F018         	goto	u10040
  2487  0030BE                     u10041:
  2488  0030BE  EF6E  F018         	goto	l9061
  2489  0030C2                     u10040:
  2490  0030C2                     
  2491                           ; BSR set to: 0
  2492                           ;main.c: 156:                 delay = 0;
  2493  0030C2  0E00               	movlw	0
  2494  0030C4  6FF7               	movwf	_delay& (0+255),b
  2495                           
  2496                           ;main.c: 157:                 curveMode = InCurve;
  2497  0030C6  0E02               	movlw	2
  2498  0030C8  6FFB               	movwf	_curveMode& (0+255),b
  2499  0030CA                     
  2500                           ; BSR set to: 0
  2501                           ;main.c: 158:                 printf("InCurve\n");
  2502  0030CA  0EC9               	movlw	low STR_6
  2503  0030CC  0101               	movlb	1	; () banked
  2504  0030CE  6FA6               	movwf	printf@fmt& (0+255),b
  2505  0030D0  0E10               	movlw	high STR_6
  2506  0030D2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2507  0030D4  ECDC  F02E         	call	_printf	;wreg free
  2508                           
  2509                           ;main.c: 159:             } else {
  2510  0030D8  EF4E  F019         	goto	l1284
  2511  0030DC                     l9061:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 160:                 ++delay;
  2515  0030DC  2BF7               	incf	_delay& (0+255),f,b
  2516  0030DE  EF4E  F019         	goto	l1284
  2517  0030E2                     l9063:
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;main.c: 164:             if (delay >= (35)) {
  2521  0030E2  0E22               	movlw	34
  2522  0030E4  0100               	movlb	0	; () banked
  2523  0030E6  65F7               	cpfsgt	_delay& (0+255),b
  2524  0030E8  EF78  F018         	goto	u10051
  2525  0030EC  EF7A  F018         	goto	u10050
  2526  0030F0                     u10051:
  2527  0030F0  EF6E  F018         	goto	l9061
  2528  0030F4                     u10050:
  2529  0030F4                     
  2530                           ; BSR set to: 0
  2531                           ;main.c: 165:                 if ((driveMode == CurveLeft && distLeft < (40)) || (driveM
      +                          ode == CurveRight && distRight < (40)) || distFront > (300)) {
  2532  0030F4  0E04               	movlw	4
  2533  0030F6  19FC               	xorwf	_driveMode& (0+255),w,b
  2534  0030F8  A4D8               	btfss	status,2,c
  2535  0030FA  EF81  F018         	goto	u10061
  2536  0030FE  EF83  F018         	goto	u10060
  2537  003102                     u10061:
  2538  003102  EF8E  F018         	goto	l9069
  2539  003106                     u10060:
  2540  003106                     
  2541                           ; BSR set to: 0
  2542  003106  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2543  003108  E109               	bnz	u10070
  2544  00310A  0E28               	movlw	40
  2545  00310C  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2546  00310E  A0D8               	btfss	status,0,c
  2547  003110  EF8C  F018         	goto	u10071
  2548  003114  EF8E  F018         	goto	u10070
  2549  003118                     u10071:
  2550  003118  EFAD  F018         	goto	l9075
  2551  00311C                     u10070:
  2552  00311C                     l9069:
  2553                           
  2554                           ; BSR set to: 0
  2555  00311C  0E05               	movlw	5
  2556  00311E  19FC               	xorwf	_driveMode& (0+255),w,b
  2557  003120  A4D8               	btfss	status,2,c
  2558  003122  EF95  F018         	goto	u10081
  2559  003126  EF97  F018         	goto	u10080
  2560  00312A                     u10081:
  2561  00312A  EFA2  F018         	goto	l9073
  2562  00312E                     u10080:
  2563  00312E                     
  2564                           ; BSR set to: 0
  2565  00312E  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2566  003130  E109               	bnz	u10090
  2567  003132  0E28               	movlw	40
  2568  003134  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2569  003136  A0D8               	btfss	status,0,c
  2570  003138  EFA0  F018         	goto	u10091
  2571  00313C  EFA2  F018         	goto	u10090
  2572  003140                     u10091:
  2573  003140  EFAD  F018         	goto	l9075
  2574  003144                     u10090:
  2575  003144                     l9073:
  2576                           
  2577                           ; BSR set to: 0
  2578  003144  0E2D               	movlw	45
  2579  003146  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
  2580  003148  0E01               	movlw	1
  2581  00314A  59FE               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  2582  00314C  A0D8               	btfss	status,0,c
  2583  00314E  EFAB  F018         	goto	u10101
  2584  003152  EFAD  F018         	goto	u10100
  2585  003156                     u10101:
  2586  003156  EF4E  F019         	goto	l1284
  2587  00315A                     u10100:
  2588  00315A                     l9075:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;main.c: 166:                     if(distLeft < (40)){
  2592  00315A  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2593  00315C  E107               	bnz	u10111
  2594  00315E  0E28               	movlw	40
  2595  003160  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  2596  003162  B0D8               	btfsc	status,0,c
  2597  003164  EFB6  F018         	goto	u10111
  2598  003168  EFB8  F018         	goto	u10110
  2599  00316C                     u10111:
  2600  00316C  EFC1  F018         	goto	l9079
  2601  003170                     u10110:
  2602  003170                     
  2603                           ; BSR set to: 0
  2604                           ;main.c: 167:                         printf("Left Out!\n");
  2605  003170  0EA9               	movlw	low STR_7
  2606  003172  0101               	movlb	1	; () banked
  2607  003174  6FA6               	movwf	printf@fmt& (0+255),b
  2608  003176  0E10               	movlw	high STR_7
  2609  003178  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2610  00317A  ECDC  F02E         	call	_printf	;wreg free
  2611                           
  2612                           ;main.c: 168:                     } else if(distRight < (40)){
  2613  00317E  EFDC  F018         	goto	l9085
  2614  003182                     l9079:
  2615                           
  2616                           ; BSR set to: 0
  2617  003182  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2618  003184  E107               	bnz	u10121
  2619  003186  0E28               	movlw	40
  2620  003188  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2621  00318A  B0D8               	btfsc	status,0,c
  2622  00318C  EFCA  F018         	goto	u10121
  2623  003190  EFCC  F018         	goto	u10120
  2624  003194                     u10121:
  2625  003194  EFD5  F018         	goto	l9083
  2626  003198                     u10120:
  2627  003198                     
  2628                           ; BSR set to: 0
  2629                           ;main.c: 169:                         printf("Right Out!\n");
  2630  003198  0E85               	movlw	low STR_8
  2631  00319A  0101               	movlb	1	; () banked
  2632  00319C  6FA6               	movwf	printf@fmt& (0+255),b
  2633  00319E  0E10               	movlw	high STR_8
  2634  0031A0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2635  0031A2  ECDC  F02E         	call	_printf	;wreg free
  2636                           
  2637                           ;main.c: 170:                     } else {
  2638  0031A6  EFDC  F018         	goto	l9085
  2639  0031AA                     l9083:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;main.c: 171:                         printf("Front Out!\n");
  2643  0031AA  0E91               	movlw	low STR_9
  2644  0031AC  0101               	movlb	1	; () banked
  2645  0031AE  6FA6               	movwf	printf@fmt& (0+255),b
  2646  0031B0  0E10               	movlw	high STR_9
  2647  0031B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2648  0031B4  ECDC  F02E         	call	_printf	;wreg free
  2649  0031B8                     l9085:
  2650                           
  2651                           ;main.c: 174:                     delay = 0;
  2652  0031B8  0E00               	movlw	0
  2653  0031BA  0100               	movlb	0	; () banked
  2654  0031BC  6FF7               	movwf	_delay& (0+255),b
  2655  0031BE                     
  2656                           ; BSR set to: 0
  2657                           ;main.c: 175:                     curveMode = AfterCurve;
  2658  0031BE  0E03               	movlw	3
  2659  0031C0  6FFB               	movwf	_curveMode& (0+255),b
  2660  0031C2                     
  2661                           ; BSR set to: 0
  2662                           ;main.c: 177:                     if(driveMode == CurveRight){
  2663  0031C2  0E05               	movlw	5
  2664  0031C4  19FC               	xorwf	_driveMode& (0+255),w,b
  2665  0031C6  A4D8               	btfss	status,2,c
  2666  0031C8  EFE8  F018         	goto	u10131
  2667  0031CC  EFEA  F018         	goto	u10130
  2668  0031D0                     u10131:
  2669  0031D0  EFFA  F018         	goto	l9097
  2670  0031D4                     u10130:
  2671  0031D4                     
  2672                           ; BSR set to: 0
  2673                           ;main.c: 178:                         driveMode = FollowRight;
  2674  0031D4  0E07               	movlw	7
  2675  0031D6  6FFC               	movwf	_driveMode& (0+255),b
  2676  0031D8                     
  2677                           ; BSR set to: 0
  2678                           ;main.c: 179:                         printf("Follow Right\n");
  2679  0031D8  0E50               	movlw	low STR_10
  2680  0031DA  0101               	movlb	1	; () banked
  2681  0031DC  6FA6               	movwf	printf@fmt& (0+255),b
  2682  0031DE  0E10               	movlw	high STR_10
  2683  0031E0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2684  0031E2  ECDC  F02E         	call	_printf	;wreg free
  2685  0031E6                     l9095:
  2686                           
  2687                           ;main.c: 180:                         followCount = 0;
  2688  0031E6  0E00               	movlw	0
  2689  0031E8  0101               	movlb	1	; () banked
  2690  0031EA  6F31               	movwf	(_followCount+1)& (0+255),b
  2691  0031EC  0E00               	movlw	0
  2692  0031EE  6F30               	movwf	_followCount& (0+255),b
  2693                           
  2694                           ;main.c: 181:                     } else if(driveMode == CurveLeft){
  2695  0031F0  EF10  F019         	goto	l9107
  2696  0031F4                     l9097:
  2697                           
  2698                           ; BSR set to: 0
  2699  0031F4  0E04               	movlw	4
  2700  0031F6  19FC               	xorwf	_driveMode& (0+255),w,b
  2701  0031F8  A4D8               	btfss	status,2,c
  2702  0031FA  EF01  F019         	goto	u10141
  2703  0031FE  EF03  F019         	goto	u10140
  2704  003202                     u10141:
  2705  003202  EF0E  F019         	goto	l9105
  2706  003206                     u10140:
  2707  003206                     
  2708                           ; BSR set to: 0
  2709                           ;main.c: 182:                         driveMode = FollowLeft;
  2710  003206  0E06               	movlw	6
  2711  003208  6FFC               	movwf	_driveMode& (0+255),b
  2712  00320A                     
  2713                           ; BSR set to: 0
  2714                           ;main.c: 183:                         printf("Follow Left\n");
  2715  00320A  0E5E               	movlw	low STR_11
  2716  00320C  0101               	movlb	1	; () banked
  2717  00320E  6FA6               	movwf	printf@fmt& (0+255),b
  2718  003210  0E10               	movlw	high STR_11
  2719  003212  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2720  003214  ECDC  F02E         	call	_printf	;wreg free
  2721  003218  EFF3  F018         	goto	l9095
  2722  00321C                     l9105:
  2723                           
  2724                           ; BSR set to: 0
  2725                           ;main.c: 186:                         driveMode = Straight;
  2726  00321C  0E00               	movlw	0
  2727  00321E  6FFC               	movwf	_driveMode& (0+255),b
  2728  003220                     l9107:
  2729                           
  2730                           ;main.c: 190:                     printf("AfterCurve\n");
  2731  003220  0E9D               	movlw	low STR_12
  2732  003222  0101               	movlb	1	; () banked
  2733  003224  6FA6               	movwf	printf@fmt& (0+255),b
  2734  003226  0E10               	movlw	high STR_12
  2735  003228  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2736  00322A  ECDC  F02E         	call	_printf	;wreg free
  2737  00322E  EF4E  F019         	goto	l1284
  2738  003232                     l9111:
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;main.c: 197:             if (delay >= (1)) {
  2742  003232  0100               	movlb	0	; () banked
  2743  003234  51F7               	movf	_delay& (0+255),w,b
  2744  003236  B4D8               	btfsc	status,2,c
  2745  003238  EF20  F019         	goto	u10151
  2746  00323C  EF22  F019         	goto	u10150
  2747  003240                     u10151:
  2748  003240  EF6E  F018         	goto	l9061
  2749  003244                     u10150:
  2750  003244                     
  2751                           ; BSR set to: 0
  2752                           ;main.c: 198:                 delay = 0;
  2753  003244  0E00               	movlw	0
  2754  003246  6FF7               	movwf	_delay& (0+255),b
  2755                           
  2756                           ;main.c: 199:                 curveMode = OutCurve;
  2757  003248  0E00               	movlw	0
  2758  00324A  6FFB               	movwf	_curveMode& (0+255),b
  2759  00324C                     
  2760                           ; BSR set to: 0
  2761                           ;main.c: 200:                 printf("OutCurve\n");
  2762  00324C  0EBF               	movlw	low STR_13
  2763  00324E  0101               	movlb	1	; () banked
  2764  003250  6FA6               	movwf	printf@fmt& (0+255),b
  2765  003252  0E10               	movlw	high STR_13
  2766  003254  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  2767  003256  ECDC  F02E         	call	_printf	;wreg free
  2768                           
  2769                           ;main.c: 201:             } else {
  2770  00325A  EF4E  F019         	goto	l1284
  2771  00325E                     l9121:
  2772  00325E  0100               	movlb	0	; () banked
  2773  003260  51FB               	movf	_curveMode& (0+255),w,b
  2774  003262  0101               	movlb	1	; () banked
  2775  003264  6FAE               	movwf	??_getCurve& (0+255),b
  2776  003266  6BAF               	clrf	(??_getCurve+1)& (0+255),b
  2777                           
  2778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2779                           ; Switch size 1, requested type "simple"
  2780                           ; Number of cases is 1, Range of values is 0 to 0
  2781                           ; switch strategies available:
  2782                           ; Name         Instructions Cycles
  2783                           ; simple_byte            4     3 (average)
  2784                           ;	Chosen strategy is simple_byte
  2785  003268  51AF               	movf	(??_getCurve+1)& (0+255),w,b
  2786  00326A  0A00               	xorlw	0	; case 0
  2787  00326C  B4D8               	btfsc	status,2,c
  2788  00326E  EF3B  F019         	goto	l9539
  2789  003272  EF4E  F019         	goto	l1284
  2790  003276                     l9539:
  2791                           
  2792                           ; BSR set to: 1
  2793                           ; Switch size 1, requested type "simple"
  2794                           ; Number of cases is 4, Range of values is 0 to 3
  2795                           ; switch strategies available:
  2796                           ; Name         Instructions Cycles
  2797                           ; simple_byte           13     7 (average)
  2798                           ;	Chosen strategy is simple_byte
  2799  003276  51AE               	movf	??_getCurve& (0+255),w,b
  2800  003278  0A00               	xorlw	0	; case 0
  2801  00327A  B4D8               	btfsc	status,2,c
  2802  00327C  EFB5  F017         	goto	l9027
  2803  003280  0A01               	xorlw	1	; case 1
  2804  003282  B4D8               	btfsc	status,2,c
  2805  003284  EF58  F018         	goto	l9055
  2806  003288  0A03               	xorlw	3	; case 2
  2807  00328A  B4D8               	btfsc	status,2,c
  2808  00328C  EF71  F018         	goto	l9063
  2809  003290  0A01               	xorlw	1	; case 3
  2810  003292  B4D8               	btfsc	status,2,c
  2811  003294  EF19  F019         	goto	l9111
  2812  003298  EF4E  F019         	goto	l1284
  2813  00329C                     l1284:
  2814                           
  2815                           ;main.c: 206:     oldDistLeft = distLeft;
  2816  00329C  C0F5  F0F1         	movff	_distLeft,_oldDistLeft	;volatile
  2817  0032A0  C0F6  F0F2         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2818                           
  2819                           ;main.c: 207:     oldDistRight = distRight;
  2820  0032A4  C0F3  F0EF         	movff	_distRight,_oldDistRight	;volatile
  2821  0032A8  C0F4  F0F0         	movff	_distRight+1,_oldDistRight+1	;volatile
  2822  0032AC  0012               	return		;funcret
  2823  0032AE                     __end_of_getCurve:
  2824                           	callstack 0
  2825                           
  2826 ;; *************** function _checkBatt *****************
  2827 ;; Defined at:
  2828 ;;		line 84 in file "main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;		None
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;		None
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      _Bool 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;Total ram usage:        0 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 18
  2849 ;; This function calls:
  2850 ;;		___flge
  2851 ;;		___xxtofl
  2852 ;;		_getBatteryVoltage
  2853 ;;		_setSteering
  2854 ;; This function is called by:
  2855 ;;		_loop
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text4
  2860  0052F4                     __ptext4:
  2861                           	callstack 0
  2862  0052F4                     _checkBatt:
  2863                           	callstack 11
  2864  0052F4                     
  2865                           ;main.c: 85:     ++battCheckCount;
  2866  0052F4  0101               	movlb	1	; () banked
  2867  0052F6  4B32               	infsnz	_battCheckCount& (0+255),f,b
  2868  0052F8  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  2869  0052FA                     
  2870                           ; BSR set to: 1
  2871                           ;main.c: 86:     if (battCheckCount > (500)) {
  2872  0052FA  0EF5               	movlw	245
  2873  0052FC  5D32               	subwf	_battCheckCount& (0+255),w,b
  2874  0052FE  0E01               	movlw	1
  2875  005300  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  2876  005302  A0D8               	btfss	status,0,c
  2877  005304  EF86  F029         	goto	u9961
  2878  005308  EF88  F029         	goto	u9960
  2879  00530C                     u9961:
  2880  00530C  EFC1  F029         	goto	l9021
  2881  005310                     u9960:
  2882  005310                     
  2883                           ; BSR set to: 1
  2884                           ;main.c: 87:         battCheckCount = 0;
  2885  005310  0E00               	movlw	0
  2886  005312  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  2887  005314  0E00               	movlw	0
  2888  005316  6F32               	movwf	_battCheckCount& (0+255),b
  2889  005318                     
  2890                           ; BSR set to: 1
  2891                           ;main.c: 88:         getBatteryVoltage();
  2892  005318  ECC3  F029         	call	_getBatteryVoltage	;wreg free
  2893  00531C                     
  2894                           ;main.c: 90:         if (BatteryVolt < (6.5) * 409.6) {
  2895  00531C  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  2896  005320  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  2897  005324  6A1E               	clrf	(___xxtofl@val+2)^0,c
  2898  005326  6A1F               	clrf	(___xxtofl@val+3)^0,c
  2899  005328  0E00               	movlw	0
  2900  00532A  EC4B  F01F         	call	___xxtofl
  2901  00532E  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  2902  005332  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  2903  005336  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  2904  00533A  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  2905  00533E  0E66               	movlw	102
  2906  005340  0100               	movlb	0	; () banked
  2907  005342  6F71               	movwf	___flge@ff2& (0+255),b
  2908  005344  0E66               	movlw	102
  2909  005346  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2910  005348  0E26               	movlw	38
  2911  00534A  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2912  00534C  0E45               	movlw	69
  2913  00534E  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2914  005350  EC71  F024         	call	___flge	;wreg free
  2915  005354  0100               	movlb	0	; () banked
  2916  005356  B0D8               	btfsc	status,0,c
  2917  005358  EFB0  F029         	goto	u9971
  2918  00535C  EFB2  F029         	goto	u9970
  2919  005360                     u9971:
  2920  005360  EFC1  F029         	goto	l9021
  2921  005364                     u9970:
  2922  005364                     
  2923                           ; BSR set to: 0
  2924                           ;main.c: 91:             setSpeed = 0;
  2925  005364  0E00               	movlw	0
  2926  005366  6FEE               	movwf	(_setSpeed+1)& (0+255),b
  2927  005368  0E00               	movlw	0
  2928  00536A  6FED               	movwf	_setSpeed& (0+255),b
  2929  00536C                     
  2930                           ; BSR set to: 0
  2931                           ;main.c: 92:             setSteering(0, Front);
  2932  00536C  0E00               	movlw	0
  2933  00536E  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  2934  005370  0E00               	movlw	0
  2935  005372  6F83               	movwf	setSteering@steering& (0+255),b
  2936  005374  0E03               	movlw	3
  2937  005376  6F85               	movwf	setSteering@steeringMode& (0+255),b
  2938  005378  EC50  F01E         	call	_setSteering	;wreg free
  2939  00537C                     
  2940                           ;main.c: 93:             return 1;
  2941  00537C  0E01               	movlw	1
  2942  00537E  EFC2  F029         	goto	l1261
  2943  005382                     l9021:
  2944                           
  2945                           ;main.c: 96:     return 0;
  2946  005382  0E00               	movlw	0
  2947  005384                     l1261:
  2948  005384  0012               	return		;funcret
  2949  005386                     __end_of_checkBatt:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _getBatteryVoltage *****************
  2953 ;; Defined at:
  2954 ;;		line 79 in file "main.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:        4 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 17
  2975 ;; This function calls:
  2976 ;;		_ADCC_GetSingleConversion
  2977 ;;		___fldiv
  2978 ;;		___xxtofl
  2979 ;;		_printf
  2980 ;; This function is called by:
  2981 ;;		_loop
  2982 ;;		_checkBatt
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text5
  2987  005386                     __ptext5:
  2988                           	callstack 0
  2989  005386                     _getBatteryVoltage:
  2990                           	callstack 12
  2991  005386                     
  2992                           ;main.c: 80:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  2993  005386  0E22               	movlw	34
  2994  005388  ECF4  F02D         	call	_ADCC_GetSingleConversion
  2995  00538C  C014  F0E7         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  2996  005390  C015  F0E8         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  2997                           
  2998                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  2999  005394  C0E7  F01C         	movff	_BatteryVolt,___xxtofl@val
  3000  005398  C0E8  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  3001  00539C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3002  00539E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3003  0053A0  0E00               	movlw	0
  3004  0053A2  EC4B  F01F         	call	___xxtofl
  3005  0053A6  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  3006  0053AA  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  3007  0053AE  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  3008  0053B2  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  3009  0053B6  0ECD               	movlw	205
  3010  0053B8  6E2E               	movwf	___fldiv@a^0,c
  3011  0053BA  0ECC               	movlw	204
  3012  0053BC  6E2F               	movwf	(___fldiv@a+1)^0,c
  3013  0053BE  0ECC               	movlw	204
  3014  0053C0  6E30               	movwf	(___fldiv@a+2)^0,c
  3015  0053C2  0E43               	movlw	67
  3016  0053C4  6E31               	movwf	(___fldiv@a+3)^0,c
  3017  0053C6  ECE5  F015         	call	___fldiv	;wreg free
  3018  0053CA  C02A  F1AE         	movff	?___fldiv,_getBatteryVoltage$4192
  3019  0053CE  C02B  F1AF         	movff	?___fldiv+1,_getBatteryVoltage$4192+1
  3020  0053D2  C02C  F1B0         	movff	?___fldiv+2,_getBatteryVoltage$4192+2
  3021  0053D6  C02D  F1B1         	movff	?___fldiv+3,_getBatteryVoltage$4192+3
  3022  0053DA                     
  3023                           ;main.c: 81:     printf("BVolt: %f\n", BatteryVolt / 409.6f);
  3024  0053DA  0EB4               	movlw	low STR_1
  3025  0053DC  0101               	movlb	1	; () banked
  3026  0053DE  6FA6               	movwf	printf@fmt& (0+255),b
  3027  0053E0  0E10               	movlw	high STR_1
  3028  0053E2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3029  0053E4  C1AE  F1A8         	movff	_getBatteryVoltage$4192,?_printf+2
  3030  0053E8  C1AF  F1A9         	movff	_getBatteryVoltage$4192+1,?_printf+3
  3031  0053EC  C1B0  F1AA         	movff	_getBatteryVoltage$4192+2,?_printf+4
  3032  0053F0  C1B1  F1AB         	movff	_getBatteryVoltage$4192+3,?_printf+5
  3033  0053F4  ECDC  F02E         	call	_printf	;wreg free
  3034  0053F8  0012               	return		;funcret
  3035  0053FA                     __end_of_getBatteryVoltage:
  3036                           	callstack 0
  3037                           
  3038 ;; *************** function _ADCC_GetSingleConversion *****************
  3039 ;; Defined at:
  3040 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  channel         1    wreg     enum E16058
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  channel         1   23[COMRAM] enum E16058
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2   19[COMRAM] unsigned short 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        5 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 8
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_getBatteryVoltage
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text6
  3069  005BE8                     __ptext6:
  3070                           	callstack 0
  3071  005BE8                     _ADCC_GetSingleConversion:
  3072                           	callstack 20
  3073                           
  3074                           ;incstack = 0
  3075                           ;ADCC_GetSingleConversion@channel stored from wreg
  3076  005BE8  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  3077  005BEA                     
  3078                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3079  005BEA  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3080  005BF0                     
  3081                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3082  005BF0  013E               	movlb	62	; () banked
  3083  005BF2  8FF8               	bsf	248,7,b	;volatile
  3084  005BF4                     
  3085                           ; BSR set to: 62
  3086                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3087  005BF4  9DF8               	bcf	248,6,b	;volatile
  3088  005BF6                     
  3089                           ; BSR set to: 62
  3090                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3091  005BF6  81F8               	bsf	248,0,b	;volatile
  3092  005BF8                     l1054:
  3093                           
  3094                           ; BSR set to: 62
  3095                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3096  005BF8  B1F8               	btfsc	248,0,b	;volatile
  3097  005BFA  EF01  F02E         	goto	u9811
  3098  005BFE  EF03  F02E         	goto	u9810
  3099  005C02                     u9811:
  3100  005C02  EFFC  F02D         	goto	l1054
  3101  005C06                     u9810:
  3102  005C06                     
  3103                           ; BSR set to: 62
  3104                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3105  005C06  51F0               	movf	240,w,b	;volatile
  3106  005C08  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  3107  005C0A  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  3108  005C0C  51EF               	movf	239,w,b	;volatile
  3109  005C0E  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  3110  005C10  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  3111  005C12  0E00               	movlw	0
  3112  005C14  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  3113  005C16  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3114  005C18                     
  3115                           ; BSR set to: 62
  3116  005C18  0012               	return		;funcret
  3117  005C1A                     __end_of_ADCC_GetSingleConversion:
  3118                           	callstack 0
  3119                           
  3120 ;; *************** function _calcSteering *****************
  3121 ;; Defined at:
  3122 ;;		line 244 in file "main.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  delta           2   16[BANK1 ] short 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;Total ram usage:        4 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 17
  3143 ;; This function calls:
  3144 ;;		___awdiv
  3145 ;;		_printf
  3146 ;;		_setSteering
  3147 ;; This function is called by:
  3148 ;;		_loop
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text7
  3153  003594                     __ptext7:
  3154                           	callstack 0
  3155  003594                     _calcSteering:
  3156                           	callstack 12
  3157  003594                     
  3158                           ;main.c: 245:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  3159  003594  0100               	movlb	0	; () banked
  3160  003596  51F3               	movf	_distRight& (0+255),w,b	;volatile
  3161  003598  5DF5               	subwf	_distLeft& (0+255),w,b	;volatile
  3162  00359A  0101               	movlb	1	; () banked
  3163  00359C  6FB0               	movwf	calcSteering@delta& (0+255),b
  3164  00359E  0100               	movlb	0	; () banked
  3165  0035A0  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3166  0035A2  59F6               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  3167  0035A4  0101               	movlb	1	; () banked
  3168  0035A6  6FB1               	movwf	(calcSteering@delta+1)& (0+255),b
  3169                           
  3170                           ;main.c: 249:     switch (driveMode) {
  3171  0035A8  EFFE  F01A         	goto	l9179
  3172  0035AC                     l1330:
  3173  0035AC                     l9169:
  3174                           
  3175                           ; BSR set to: 1
  3176                           ;main.c: 254:             if (delta > (30)) {
  3177  0035AC  BFB1               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  3178  0035AE  EFE2  F01A         	goto	u10251
  3179  0035B2  51B1               	movf	(calcSteering@delta+1)& (0+255),w,b
  3180  0035B4  E109               	bnz	u10250
  3181  0035B6  0E1F               	movlw	31
  3182  0035B8  5DB0               	subwf	calcSteering@delta& (0+255),w,b
  3183  0035BA  A0D8               	btfss	status,0,c
  3184  0035BC  EFE2  F01A         	goto	u10251
  3185  0035C0  EFE4  F01A         	goto	u10250
  3186  0035C4                     u10251:
  3187  0035C4  EFEA  F01A         	goto	l9173
  3188  0035C8                     u10250:
  3189  0035C8                     
  3190                           ; BSR set to: 1
  3191                           ;main.c: 255:                 delta = (30);
  3192  0035C8  0E00               	movlw	0
  3193  0035CA  6FB1               	movwf	(calcSteering@delta+1)& (0+255),b
  3194  0035CC  0E1E               	movlw	30
  3195  0035CE  6FB0               	movwf	calcSteering@delta& (0+255),b
  3196                           
  3197                           ;main.c: 256:             } else if (delta < -(30)) {
  3198  0035D0  EFD1  F01B         	goto	l9215
  3199  0035D4                     l9173:
  3200                           
  3201                           ; BSR set to: 1
  3202  0035D4  AFB1               	btfss	(calcSteering@delta+1)& (0+255),7,b
  3203  0035D6  EFF6  F01A         	goto	u10261
  3204  0035DA  0EE2               	movlw	226
  3205  0035DC  5DB0               	subwf	calcSteering@delta& (0+255),w,b
  3206  0035DE  0EFF               	movlw	255
  3207  0035E0  59B1               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  3208  0035E2  B0D8               	btfsc	status,0,c
  3209  0035E4  EFF6  F01A         	goto	u10261
  3210  0035E8  EFF8  F01A         	goto	u10260
  3211  0035EC                     u10261:
  3212  0035EC  EF1D  F01B         	goto	l1335
  3213  0035F0                     u10260:
  3214  0035F0                     
  3215                           ; BSR set to: 1
  3216                           ;main.c: 257:                 delta = -(30);
  3217  0035F0  0EFF               	movlw	255
  3218  0035F2  6FB1               	movwf	(calcSteering@delta+1)& (0+255),b
  3219  0035F4  0EE2               	movlw	226
  3220  0035F6  6FB0               	movwf	calcSteering@delta& (0+255),b
  3221  0035F8  EFD1  F01B         	goto	l9215
  3222  0035FC                     l9179:
  3223                           
  3224                           ; BSR set to: 1
  3225  0035FC  0100               	movlb	0	; () banked
  3226  0035FE  51FC               	movf	_driveMode& (0+255),w,b
  3227  003600  0101               	movlb	1	; () banked
  3228  003602  6FAE               	movwf	??_calcSteering& (0+255),b
  3229  003604  6BAF               	clrf	(??_calcSteering+1)& (0+255),b
  3230                           
  3231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3232                           ; Switch size 1, requested type "simple"
  3233                           ; Number of cases is 1, Range of values is 0 to 0
  3234                           ; switch strategies available:
  3235                           ; Name         Instructions Cycles
  3236                           ; simple_byte            4     3 (average)
  3237                           ;	Chosen strategy is simple_byte
  3238  003606  51AF               	movf	(??_calcSteering+1)& (0+255),w,b
  3239  003608  0A00               	xorlw	0	; case 0
  3240  00360A  B4D8               	btfsc	status,2,c
  3241  00360C  EF0A  F01B         	goto	l9541
  3242  003610  EFD1  F01B         	goto	l9215
  3243  003614                     l9541:
  3244                           
  3245                           ; BSR set to: 1
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 4, Range of values is 0 to 5
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte           13     7 (average)
  3251                           ;	Chosen strategy is simple_byte
  3252  003614  51AE               	movf	??_calcSteering& (0+255),w,b
  3253  003616  0A00               	xorlw	0	; case 0
  3254  003618  B4D8               	btfsc	status,2,c
  3255  00361A  EFD6  F01A         	goto	l9169
  3256  00361E  0A01               	xorlw	1	; case 1
  3257  003620  B4D8               	btfsc	status,2,c
  3258  003622  EFD6  F01A         	goto	l1330
  3259  003626  0A05               	xorlw	5	; case 4
  3260  003628  B4D8               	btfsc	status,2,c
  3261  00362A  EFD6  F01A         	goto	l9169
  3262  00362E  0A01               	xorlw	1	; case 5
  3263  003630  B4D8               	btfsc	status,2,c
  3264  003632  EFD6  F01A         	goto	l9169
  3265  003636  EFD1  F01B         	goto	l9215
  3266  00363A                     l1335:
  3267                           
  3268                           ; BSR set to: 1
  3269                           ;main.c: 264:     switch (driveMode) {
  3270  00363A  EFD1  F01B         	goto	l9215
  3271  00363E                     l9181:
  3272                           
  3273                           ; BSR set to: 1
  3274                           ;main.c: 266:             setSteering(delta, Ratio);
  3275  00363E  C1B0  F083         	movff	calcSteering@delta,setSteering@steering
  3276  003642  C1B1  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  3277  003646  0E02               	movlw	2
  3278  003648  0100               	movlb	0	; () banked
  3279  00364A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3280  00364C  EC50  F01E         	call	_setSteering	;wreg free
  3281                           
  3282                           ;main.c: 267:             break;
  3283  003650  EF00  F01C         	goto	l9217
  3284  003654                     l9183:
  3285                           
  3286                           ;main.c: 269:             setSteering(delta, Front);
  3287  003654  C1B0  F083         	movff	calcSteering@delta,setSteering@steering
  3288  003658  C1B1  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  3289  00365C  0E03               	movlw	3
  3290  00365E  0100               	movlb	0	; () banked
  3291  003660  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3292  003662  EC50  F01E         	call	_setSteering	;wreg free
  3293                           
  3294                           ;main.c: 270:             break;
  3295  003666  EF00  F01C         	goto	l9217
  3296  00366A                     l9185:
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;main.c: 272:             setSteering(-(55), Inverted);
  3300  00366A  0EFF               	movlw	255
  3301  00366C  0100               	movlb	0	; () banked
  3302  00366E  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3303  003670  0EC9               	movlw	201
  3304  003672  6F83               	movwf	setSteering@steering& (0+255),b
  3305  003674  0E00               	movlw	0
  3306  003676  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3307  003678  EC50  F01E         	call	_setSteering	;wreg free
  3308                           
  3309                           ;main.c: 273:             break;
  3310  00367C  EF00  F01C         	goto	l9217
  3311  003680                     l9187:
  3312                           
  3313                           ; BSR set to: 1
  3314                           ;main.c: 275:             setSteering((55), Inverted);
  3315  003680  0E00               	movlw	0
  3316  003682  0100               	movlb	0	; () banked
  3317  003684  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3318  003686  0E37               	movlw	55
  3319  003688  6F83               	movwf	setSteering@steering& (0+255),b
  3320  00368A  0E00               	movlw	0
  3321  00368C  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3322  00368E  EC50  F01E         	call	_setSteering	;wreg free
  3323                           
  3324                           ;main.c: 276:             break;
  3325  003692  EF00  F01C         	goto	l9217
  3326  003696                     l9189:
  3327                           
  3328                           ; BSR set to: 1
  3329                           ;main.c: 278:             if (curveMode == InCurve) {
  3330  003696  0E02               	movlw	2
  3331  003698  0100               	movlb	0	; () banked
  3332  00369A  19FB               	xorwf	_curveMode& (0+255),w,b
  3333  00369C  A4D8               	btfss	status,2,c
  3334  00369E  EF53  F01B         	goto	u10271
  3335  0036A2  EF55  F01B         	goto	u10270
  3336  0036A6                     u10271:
  3337  0036A6  EF5F  F01B         	goto	l9193
  3338  0036AA                     u10270:
  3339  0036AA                     
  3340                           ; BSR set to: 0
  3341                           ;main.c: 279:                 setSteering((55), Ratio);
  3342  0036AA  0E00               	movlw	0
  3343  0036AC  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3344  0036AE  0E37               	movlw	55
  3345  0036B0  6F83               	movwf	setSteering@steering& (0+255),b
  3346  0036B2  0E02               	movlw	2
  3347  0036B4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3348  0036B6  EC50  F01E         	call	_setSteering	;wreg free
  3349                           
  3350                           ;main.c: 280:             } else {
  3351  0036BA  EF00  F01C         	goto	l9217
  3352  0036BE                     l9193:
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;main.c: 281:                 setSteering(-5, Front);
  3356  0036BE  0EFF               	movlw	255
  3357  0036C0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3358  0036C2  0EFB               	movlw	251
  3359  0036C4  6F83               	movwf	setSteering@steering& (0+255),b
  3360  0036C6  0E03               	movlw	3
  3361  0036C8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3362  0036CA  EC50  F01E         	call	_setSteering	;wreg free
  3363  0036CE  EF00  F01C         	goto	l9217
  3364  0036D2                     l9195:
  3365                           
  3366                           ; BSR set to: 1
  3367                           ;main.c: 285:             if (curveMode == InCurve) {
  3368  0036D2  0E02               	movlw	2
  3369  0036D4  0100               	movlb	0	; () banked
  3370  0036D6  19FB               	xorwf	_curveMode& (0+255),w,b
  3371  0036D8  A4D8               	btfss	status,2,c
  3372  0036DA  EF71  F01B         	goto	u10281
  3373  0036DE  EF73  F01B         	goto	u10280
  3374  0036E2                     u10281:
  3375  0036E2  EF7D  F01B         	goto	l9199
  3376  0036E6                     u10280:
  3377  0036E6                     
  3378                           ; BSR set to: 0
  3379                           ;main.c: 286:                 setSteering(-(55), Ratio);
  3380  0036E6  0EFF               	movlw	255
  3381  0036E8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3382  0036EA  0EC9               	movlw	201
  3383  0036EC  6F83               	movwf	setSteering@steering& (0+255),b
  3384  0036EE  0E02               	movlw	2
  3385  0036F0  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3386  0036F2  EC50  F01E         	call	_setSteering	;wreg free
  3387                           
  3388                           ;main.c: 287:             } else {
  3389  0036F6  EF00  F01C         	goto	l9217
  3390  0036FA                     l9199:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;main.c: 288:                 setSteering(5, Front);
  3394  0036FA  0E00               	movlw	0
  3395  0036FC  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  3396  0036FE  0E05               	movlw	5
  3397  003700  6F83               	movwf	setSteering@steering& (0+255),b
  3398  003702  0E03               	movlw	3
  3399  003704  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3400  003706  EC50  F01E         	call	_setSteering	;wreg free
  3401  00370A  EF00  F01C         	goto	l9217
  3402  00370E                     l9201:
  3403                           
  3404                           ; BSR set to: 1
  3405                           ;main.c: 292:             delta = (50) - distLeft;
  3406  00370E  0100               	movlb	0	; () banked
  3407  003710  51F5               	movf	_distLeft& (0+255),w,b	;volatile
  3408  003712  0832               	sublw	50
  3409  003714  0101               	movlb	1	; () banked
  3410  003716  6FB0               	movwf	calcSteering@delta& (0+255),b
  3411  003718  0100               	movlb	0	; () banked
  3412  00371A  51F6               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  3413  00371C  A0D8               	btfss	status,0,c
  3414  00371E  2AE8               	incf	wreg,f,c
  3415  003720  0800               	sublw	0
  3416  003722  0101               	movlb	1	; () banked
  3417  003724  6FB1               	movwf	(calcSteering@delta+1)& (0+255),b
  3418  003726                     
  3419                           ; BSR set to: 1
  3420                           ;main.c: 293:             delta /= 2;
  3421  003726  C1B0  F014         	movff	calcSteering@delta,___awdiv@dividend
  3422  00372A  C1B1  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  3423  00372E  0E00               	movlw	0
  3424  003730  6E17               	movwf	(___awdiv@divisor+1)^0,c
  3425  003732  0E02               	movlw	2
  3426  003734  6E16               	movwf	___awdiv@divisor^0,c
  3427  003736  ECC3  F026         	call	___awdiv	;wreg free
  3428  00373A  C014  F1B0         	movff	?___awdiv,calcSteering@delta
  3429  00373E  C015  F1B1         	movff	?___awdiv+1,calcSteering@delta+1
  3430  003742                     
  3431                           ;main.c: 294:             setSteering(-delta, Front);
  3432  003742  C1B0  F1AE         	movff	calcSteering@delta,??_calcSteering
  3433  003746  C1B1  F1AF         	movff	calcSteering@delta+1,??_calcSteering+1
  3434  00374A  0101               	movlb	1	; () banked
  3435  00374C  1FAE               	comf	??_calcSteering& (0+255),f,b
  3436  00374E  1FAF               	comf	(??_calcSteering+1)& (0+255),f,b
  3437  003750  4BAE               	infsnz	??_calcSteering& (0+255),f,b
  3438  003752  2BAF               	incf	(??_calcSteering+1)& (0+255),f,b
  3439  003754  C1AE  F083         	movff	??_calcSteering,setSteering@steering
  3440  003758  C1AF  F084         	movff	??_calcSteering+1,setSteering@steering+1
  3441  00375C  0E03               	movlw	3
  3442  00375E  0100               	movlb	0	; () banked
  3443  003760  6F85               	movwf	setSteering@steeringMode& (0+255),b
  3444  003762  EC50  F01E         	call	_setSteering	;wreg free
  3445                           
  3446                           ;main.c: 295:             break;
  3447  003766  EF00  F01C         	goto	l9217
  3448  00376A                     l9207:
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;main.c: 297:             delta = (50) - distRight;
  3452  00376A  0100               	movlb	0	; () banked
  3453  00376C  51F3               	movf	_distRight& (0+255),w,b	;volatile
  3454  00376E  0832               	sublw	50
  3455  003770  0101               	movlb	1	; () banked
  3456  003772  6FB0               	movwf	calcSteering@delta& (0+255),b
  3457  003774  0100               	movlb	0	; () banked
  3458  003776  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3459  003778  A0D8               	btfss	status,0,c
  3460  00377A  2AE8               	incf	wreg,f,c
  3461  00377C  0800               	sublw	0
  3462  00377E  0101               	movlb	1	; () banked
  3463  003780  6FB1               	movwf	(calcSteering@delta+1)& (0+255),b
  3464  003782                     
  3465                           ; BSR set to: 1
  3466                           ;main.c: 298:             delta /= 2;
  3467  003782  C1B0  F014         	movff	calcSteering@delta,___awdiv@dividend
  3468  003786  C1B1  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  3469  00378A  0E00               	movlw	0
  3470  00378C  6E17               	movwf	(___awdiv@divisor+1)^0,c
  3471  00378E  0E02               	movlw	2
  3472  003790  6E16               	movwf	___awdiv@divisor^0,c
  3473  003792  ECC3  F026         	call	___awdiv	;wreg free
  3474  003796  C014  F1B0         	movff	?___awdiv,calcSteering@delta
  3475  00379A  C015  F1B1         	movff	?___awdiv+1,calcSteering@delta+1
  3476  00379E  EF2A  F01B         	goto	l9183
  3477  0037A2                     l9215:
  3478                           
  3479                           ; BSR set to: 1
  3480  0037A2  0100               	movlb	0	; () banked
  3481  0037A4  51FC               	movf	_driveMode& (0+255),w,b
  3482  0037A6  0101               	movlb	1	; () banked
  3483  0037A8  6FAE               	movwf	??_calcSteering& (0+255),b
  3484  0037AA  6BAF               	clrf	(??_calcSteering+1)& (0+255),b
  3485                           
  3486                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3487                           ; Switch size 1, requested type "simple"
  3488                           ; Number of cases is 1, Range of values is 0 to 0
  3489                           ; switch strategies available:
  3490                           ; Name         Instructions Cycles
  3491                           ; simple_byte            4     3 (average)
  3492                           ;	Chosen strategy is simple_byte
  3493  0037AC  51AF               	movf	(??_calcSteering+1)& (0+255),w,b
  3494  0037AE  0A00               	xorlw	0	; case 0
  3495  0037B0  B4D8               	btfsc	status,2,c
  3496  0037B2  EFDD  F01B         	goto	l9543
  3497  0037B6  EF00  F01C         	goto	l9217
  3498  0037BA                     l9543:
  3499                           
  3500                           ; BSR set to: 1
  3501                           ; Switch size 1, requested type "simple"
  3502                           ; Number of cases is 8, Range of values is 0 to 7
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte           25    13 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507  0037BA  51AE               	movf	??_calcSteering& (0+255),w,b
  3508  0037BC  0A00               	xorlw	0	; case 0
  3509  0037BE  B4D8               	btfsc	status,2,c
  3510  0037C0  EF2A  F01B         	goto	l9183
  3511  0037C4  0A01               	xorlw	1	; case 1
  3512  0037C6  B4D8               	btfsc	status,2,c
  3513  0037C8  EF1F  F01B         	goto	l9181
  3514  0037CC  0A03               	xorlw	3	; case 2
  3515  0037CE  B4D8               	btfsc	status,2,c
  3516  0037D0  EF35  F01B         	goto	l9185
  3517  0037D4  0A01               	xorlw	1	; case 3
  3518  0037D6  B4D8               	btfsc	status,2,c
  3519  0037D8  EF40  F01B         	goto	l9187
  3520  0037DC  0A07               	xorlw	7	; case 4
  3521  0037DE  B4D8               	btfsc	status,2,c
  3522  0037E0  EF4B  F01B         	goto	l9189
  3523  0037E4  0A01               	xorlw	1	; case 5
  3524  0037E6  B4D8               	btfsc	status,2,c
  3525  0037E8  EF69  F01B         	goto	l9195
  3526  0037EC  0A03               	xorlw	3	; case 6
  3527  0037EE  B4D8               	btfsc	status,2,c
  3528  0037F0  EF87  F01B         	goto	l9201
  3529  0037F4  0A01               	xorlw	1	; case 7
  3530  0037F6  B4D8               	btfsc	status,2,c
  3531  0037F8  EFB5  F01B         	goto	l9207
  3532  0037FC  EF00  F01C         	goto	l9217
  3533  003800                     l9217:
  3534                           
  3535                           ;main.c: 303:     if(driveMode == FollowLeft || driveMode == FollowRight){
  3536  003800  0E06               	movlw	6
  3537  003802  0100               	movlb	0	; () banked
  3538  003804  19FC               	xorwf	_driveMode& (0+255),w,b
  3539  003806  B4D8               	btfsc	status,2,c
  3540  003808  EF08  F01C         	goto	u10291
  3541  00380C  EF0A  F01C         	goto	u10290
  3542  003810                     u10291:
  3543  003810  EF13  F01C         	goto	l9221
  3544  003814                     u10290:
  3545  003814                     
  3546                           ; BSR set to: 0
  3547  003814  0E07               	movlw	7
  3548  003816  19FC               	xorwf	_driveMode& (0+255),w,b
  3549  003818  A4D8               	btfss	status,2,c
  3550  00381A  EF11  F01C         	goto	u10301
  3551  00381E  EF13  F01C         	goto	u10300
  3552  003822                     u10301:
  3553  003822  EF31  F01C         	goto	l1356
  3554  003826                     u10300:
  3555  003826                     l9221:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;main.c: 305:         if(followCount >= (50)){
  3559  003826  0101               	movlb	1	; () banked
  3560  003828  5131               	movf	(_followCount+1)& (0+255),w,b
  3561  00382A  E109               	bnz	u10310
  3562  00382C  0E32               	movlw	50
  3563  00382E  5D30               	subwf	_followCount& (0+255),w,b
  3564  003830  A0D8               	btfss	status,0,c
  3565  003832  EF1D  F01C         	goto	u10311
  3566  003836  EF1F  F01C         	goto	u10310
  3567  00383A                     u10311:
  3568  00383A  EF2F  F01C         	goto	l9227
  3569  00383E                     u10310:
  3570  00383E                     
  3571                           ; BSR set to: 1
  3572                           ;main.c: 306:             driveMode = Straight;
  3573  00383E  0E00               	movlw	0
  3574  003840  0100               	movlb	0	; () banked
  3575  003842  6FFC               	movwf	_driveMode& (0+255),b
  3576                           
  3577                           ;main.c: 307:             followCount = 0;
  3578  003844  0E00               	movlw	0
  3579  003846  0101               	movlb	1	; () banked
  3580  003848  6F31               	movwf	(_followCount+1)& (0+255),b
  3581  00384A  0E00               	movlw	0
  3582  00384C  6F30               	movwf	_followCount& (0+255),b
  3583  00384E                     
  3584                           ; BSR set to: 1
  3585                           ;main.c: 308:             printf("Ende Follow\n");
  3586  00384E  0E78               	movlw	low STR_17
  3587  003850  6FA6               	movwf	printf@fmt& (0+255),b
  3588  003852  0E10               	movlw	high STR_17
  3589  003854  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  3590  003856  ECDC  F02E         	call	_printf	;wreg free
  3591                           
  3592                           ;main.c: 309:         } else {
  3593  00385A  EF31  F01C         	goto	l1356
  3594  00385E                     l9227:
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;main.c: 310:             followCount++;
  3598  00385E  4B30               	infsnz	_followCount& (0+255),f,b
  3599  003860  2B31               	incf	(_followCount+1)& (0+255),f,b
  3600  003862                     l1356:
  3601  003862  0012               	return		;funcret
  3602  003864                     __end_of_calcSteering:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _setSteering *****************
  3606 ;; Defined at:
  3607 ;;		line 429 in file "main.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  steering        2   35[BANK0 ] short 
  3610 ;;  steeringMode    1   37[BANK0 ] enum E17305
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  steeringB       2   42[BANK0 ] short 
  3613 ;;  steeringF       2   40[BANK0 ] short 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3623 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;Total ram usage:        9 bytes
  3628 ;; Hardware stack levels used: 1
  3629 ;; Hardware stack levels required when called: 9
  3630 ;; This function calls:
  3631 ;;		_PWM5_LoadDutyValue
  3632 ;;		_PWM6_LoadDutyValue
  3633 ;;		___fldiv
  3634 ;;		___fltol
  3635 ;;		___xxtofl
  3636 ;; This function is called by:
  3637 ;;		_loop
  3638 ;;		_checkBatt
  3639 ;;		_calcSteering
  3640 ;;		_startAccell
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text8
  3645  003CA0                     __ptext8:
  3646                           	callstack 0
  3647  003CA0                     _setSteering:
  3648                           	callstack 20
  3649  003CA0  0E00               	movlw	0
  3650  003CA2  0100               	movlb	0	; () banked
  3651  003CA4  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3652  003CA6  0E00               	movlw	0
  3653  003CA8  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3654                           
  3655                           ;main.c: 431:     switch (steeringMode) {
  3656  003CAA  EFCB  F01E         	goto	l8971
  3657  003CAE                     l1401:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;main.c: 433:             steeringF = (+steering);
  3661  003CAE  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3662  003CB2  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3663                           
  3664                           ;main.c: 434:             steeringB = -steering;
  3665  003CB6  C083  F086         	movff	setSteering@steering,??_setSteering
  3666  003CBA  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  3667  003CBE  1F86               	comf	??_setSteering& (0+255),f,b
  3668  003CC0  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  3669  003CC2  4B86               	infsnz	??_setSteering& (0+255),f,b
  3670  003CC4  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  3671  003CC6  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  3672  003CCA  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  3673                           
  3674                           ;main.c: 435:             break;
  3675  003CCE  EFEC  F01E         	goto	l8973
  3676  003CD2                     l1403:
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 437:             steeringF = (+steering);
  3680  003CD2  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3681  003CD6  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3682                           
  3683                           ;main.c: 438:             steeringB = (+steering);
  3684  003CDA  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  3685  003CDE  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  3686                           
  3687                           ;main.c: 439:             break;
  3688  003CE2  EFEC  F01E         	goto	l8973
  3689  003CE6                     l1404:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;main.c: 441:             steeringF = (+steering);
  3693  003CE6  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3694  003CEA  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3695  003CEE                     
  3696                           ; BSR set to: 0
  3697                           ;main.c: 442:             steeringB = (-steering / (1.25));
  3698  003CEE  0E00               	movlw	0
  3699  003CF0  6E2E               	movwf	___fldiv@a^0,c
  3700  003CF2  0E00               	movlw	0
  3701  003CF4  6E2F               	movwf	(___fldiv@a+1)^0,c
  3702  003CF6  0EA0               	movlw	160
  3703  003CF8  6E30               	movwf	(___fldiv@a+2)^0,c
  3704  003CFA  0E3F               	movlw	63
  3705  003CFC  6E31               	movwf	(___fldiv@a+3)^0,c
  3706  003CFE  C083  F086         	movff	setSteering@steering,??_setSteering
  3707  003D02  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  3708  003D06  1F86               	comf	??_setSteering& (0+255),f,b
  3709  003D08  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  3710  003D0A  4B86               	infsnz	??_setSteering& (0+255),f,b
  3711  003D0C  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  3712  003D0E  C086  F01C         	movff	??_setSteering,___xxtofl@val
  3713  003D12  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  3714  003D16  0E00               	movlw	0
  3715  003D18  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  3716  003D1A  0EFF               	movlw	-1
  3717  003D1C  6E1E               	movwf	(___xxtofl@val+2)^0,c
  3718  003D1E  6E1F               	movwf	(___xxtofl@val+3)^0,c
  3719  003D20  0E01               	movlw	1
  3720  003D22  EC4B  F01F         	call	___xxtofl
  3721  003D26  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  3722  003D2A  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  3723  003D2E  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  3724  003D32  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  3725  003D36  ECE5  F015         	call	___fldiv	;wreg free
  3726  003D3A  C02A  F079         	movff	?___fldiv,___fltol@f1
  3727  003D3E  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  3728  003D42  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  3729  003D46  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  3730  003D4A  ECED  F023         	call	___fltol	;wreg free
  3731  003D4E  C079  F08A         	movff	?___fltol,setSteering@steeringB
  3732  003D52  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  3733                           
  3734                           ;main.c: 443:             break;
  3735  003D56  EFEC  F01E         	goto	l8973
  3736  003D5A                     l1405:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;main.c: 445:             steeringF = (+steering);
  3740  003D5A  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  3741  003D5E  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  3742  003D62                     
  3743                           ; BSR set to: 0
  3744                           ;main.c: 446:             steeringB = 0;
  3745  003D62  0E00               	movlw	0
  3746  003D64  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3747  003D66  0E00               	movlw	0
  3748  003D68  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3749                           
  3750                           ;main.c: 447:             break;
  3751  003D6A  EFEC  F01E         	goto	l8973
  3752  003D6E                     l8963:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;main.c: 449:             steeringF = 0;
  3756  003D6E  0E00               	movlw	0
  3757  003D70  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3758  003D72  0E00               	movlw	0
  3759  003D74  6F88               	movwf	setSteering@steeringF& (0+255),b
  3760  003D76                     
  3761                           ; BSR set to: 0
  3762                           ;main.c: 450:             steeringB = (+steering);
  3763  003D76  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  3764  003D7A  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  3765                           
  3766                           ;main.c: 451:             break;
  3767  003D7E  EFEC  F01E         	goto	l8973
  3768  003D82                     l8967:
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;main.c: 453:             steeringF = 0;
  3772  003D82  0E00               	movlw	0
  3773  003D84  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3774  003D86  0E00               	movlw	0
  3775  003D88  6F88               	movwf	setSteering@steeringF& (0+255),b
  3776                           
  3777                           ;main.c: 454:             steeringB = 0;
  3778  003D8A  0E00               	movlw	0
  3779  003D8C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3780  003D8E  0E00               	movlw	0
  3781  003D90  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3782                           
  3783                           ;main.c: 455:             break;
  3784  003D92  EFEC  F01E         	goto	l8973
  3785  003D96                     l8971:
  3786                           
  3787                           ; BSR set to: 0
  3788  003D96  5185               	movf	setSteering@steeringMode& (0+255),w,b
  3789  003D98  6F86               	movwf	??_setSteering& (0+255),b
  3790  003D9A  6B87               	clrf	(??_setSteering+1)& (0+255),b
  3791                           
  3792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3793                           ; Switch size 1, requested type "simple"
  3794                           ; Number of cases is 1, Range of values is 0 to 0
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte            4     3 (average)
  3798                           ;	Chosen strategy is simple_byte
  3799  003D9C  5187               	movf	(??_setSteering+1)& (0+255),w,b
  3800  003D9E  0A00               	xorlw	0	; case 0
  3801  003DA0  B4D8               	btfsc	status,2,c
  3802  003DA2  EFD5  F01E         	goto	l9545
  3803  003DA6  EFC1  F01E         	goto	l8967
  3804  003DAA                     l9545:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ; Switch size 1, requested type "simple"
  3808                           ; Number of cases is 5, Range of values is 0 to 4
  3809                           ; switch strategies available:
  3810                           ; Name         Instructions Cycles
  3811                           ; simple_byte           16     9 (average)
  3812                           ;	Chosen strategy is simple_byte
  3813  003DAA  5186               	movf	??_setSteering& (0+255),w,b
  3814  003DAC  0A00               	xorlw	0	; case 0
  3815  003DAE  B4D8               	btfsc	status,2,c
  3816  003DB0  EF57  F01E         	goto	l1401
  3817  003DB4  0A01               	xorlw	1	; case 1
  3818  003DB6  B4D8               	btfsc	status,2,c
  3819  003DB8  EF69  F01E         	goto	l1403
  3820  003DBC  0A03               	xorlw	3	; case 2
  3821  003DBE  B4D8               	btfsc	status,2,c
  3822  003DC0  EF73  F01E         	goto	l1404
  3823  003DC4  0A01               	xorlw	1	; case 3
  3824  003DC6  B4D8               	btfsc	status,2,c
  3825  003DC8  EFAD  F01E         	goto	l1405
  3826  003DCC  0A07               	xorlw	7	; case 4
  3827  003DCE  B4D8               	btfsc	status,2,c
  3828  003DD0  EFB7  F01E         	goto	l8963
  3829  003DD4  EFC1  F01E         	goto	l8967
  3830  003DD8                     l8973:
  3831                           
  3832                           ;main.c: 458:     if (steeringF > ((65))) {
  3833  003DD8  0100               	movlb	0	; () banked
  3834  003DDA  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  3835  003DDC  EFF9  F01E         	goto	u9921
  3836  003DE0  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  3837  003DE2  E109               	bnz	u9920
  3838  003DE4  0E42               	movlw	66
  3839  003DE6  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  3840  003DE8  A0D8               	btfss	status,0,c
  3841  003DEA  EFF9  F01E         	goto	u9921
  3842  003DEE  EFFB  F01E         	goto	u9920
  3843  003DF2                     u9921:
  3844  003DF2  EF01  F01F         	goto	l8977
  3845  003DF6                     u9920:
  3846  003DF6                     
  3847                           ; BSR set to: 0
  3848                           ;main.c: 459:         steeringF = ((65));
  3849  003DF6  0E00               	movlw	0
  3850  003DF8  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3851  003DFA  0E41               	movlw	65
  3852  003DFC  6F88               	movwf	setSteering@steeringF& (0+255),b
  3853                           
  3854                           ;main.c: 460:     } else if (steeringF < (-(65))) {
  3855  003DFE  EF13  F01F         	goto	l8981
  3856  003E02                     l8977:
  3857                           
  3858                           ; BSR set to: 0
  3859  003E02  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  3860  003E04  EF0D  F01F         	goto	u9931
  3861  003E08  0EBF               	movlw	191
  3862  003E0A  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  3863  003E0C  0EFF               	movlw	255
  3864  003E0E  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  3865  003E10  B0D8               	btfsc	status,0,c
  3866  003E12  EF0D  F01F         	goto	u9931
  3867  003E16  EF0F  F01F         	goto	u9930
  3868  003E1A                     u9931:
  3869  003E1A  EF13  F01F         	goto	l8981
  3870  003E1E                     u9930:
  3871  003E1E                     
  3872                           ; BSR set to: 0
  3873                           ;main.c: 461:         steeringF = (-(65));
  3874  003E1E  0EFF               	movlw	255
  3875  003E20  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  3876  003E22  0EBF               	movlw	191
  3877  003E24  6F88               	movwf	setSteering@steeringF& (0+255),b
  3878  003E26                     l8981:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;main.c: 464:     if (steeringB > ((40))) {
  3882  003E26  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  3883  003E28  EF1F  F01F         	goto	u9941
  3884  003E2C  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  3885  003E2E  E109               	bnz	u9940
  3886  003E30  0E29               	movlw	41
  3887  003E32  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  3888  003E34  A0D8               	btfss	status,0,c
  3889  003E36  EF1F  F01F         	goto	u9941
  3890  003E3A  EF21  F01F         	goto	u9940
  3891  003E3E                     u9941:
  3892  003E3E  EF27  F01F         	goto	l8985
  3893  003E42                     u9940:
  3894  003E42                     
  3895                           ; BSR set to: 0
  3896                           ;main.c: 465:         steeringB = ((40));
  3897  003E42  0E00               	movlw	0
  3898  003E44  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3899  003E46  0E28               	movlw	40
  3900  003E48  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3901                           
  3902                           ;main.c: 466:     } else if (steeringB < (-(40))) {
  3903  003E4A  EF39  F01F         	goto	l8989
  3904  003E4E                     l8985:
  3905                           
  3906                           ; BSR set to: 0
  3907  003E4E  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  3908  003E50  EF33  F01F         	goto	u9951
  3909  003E54  0ED8               	movlw	216
  3910  003E56  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  3911  003E58  0EFF               	movlw	255
  3912  003E5A  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  3913  003E5C  B0D8               	btfsc	status,0,c
  3914  003E5E  EF33  F01F         	goto	u9951
  3915  003E62  EF35  F01F         	goto	u9950
  3916  003E66                     u9951:
  3917  003E66  EF39  F01F         	goto	l8989
  3918  003E6A                     u9950:
  3919  003E6A                     
  3920                           ; BSR set to: 0
  3921                           ;main.c: 467:         steeringB = (-(40));
  3922  003E6A  0EFF               	movlw	255
  3923  003E6C  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  3924  003E6E  0ED8               	movlw	216
  3925  003E70  6F8A               	movwf	setSteering@steeringB& (0+255),b
  3926  003E72                     l8989:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;main.c: 471:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  3930  003E72  0E60               	movlw	96
  3931  003E74  2588               	addwf	setSteering@steeringF& (0+255),w,b
  3932  003E76  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  3933  003E78  0E01               	movlw	1
  3934  003E7A  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  3935  003E7C  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  3936  003E7E  EC57  F02D         	call	_PWM6_LoadDutyValue	;wreg free
  3937  003E82                     
  3938                           ;main.c: 472:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  3939  003E82  0E65               	movlw	101
  3940  003E84  0100               	movlb	0	; () banked
  3941  003E86  258A               	addwf	setSteering@steeringB& (0+255),w,b
  3942  003E88  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  3943  003E8A  0E01               	movlw	1
  3944  003E8C  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  3945  003E8E  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  3946  003E90  EC71  F02D         	call	_PWM5_LoadDutyValue	;wreg free
  3947  003E94  0012               	return		;funcret
  3948  003E96                     __end_of_setSteering:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function _PWM6_LoadDutyValue *****************
  3952 ;; Defined at:
  3953 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  dutyValue       2   19[COMRAM] unsigned short 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      void 
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;Total ram usage:        4 bytes
  3972 ;; Hardware stack levels used: 1
  3973 ;; Hardware stack levels required when called: 8
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_setSteering
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text9
  3982  005AAE                     __ptext9:
  3983                           	callstack 0
  3984  005AAE                     _PWM6_LoadDutyValue:
  3985                           	callstack 20
  3986  005AAE                     
  3987                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  3988  005AAE  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  3989  005AB2  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  3990  005AB6  90D8               	bcf	status,0,c
  3991  005AB8  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  3992  005ABA  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  3993  005ABC  90D8               	bcf	status,0,c
  3994  005ABE  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  3995  005AC0  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  3996  005AC2  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  3997  005AC4  6E69               	movwf	105,c	;volatile
  3998                           
  3999                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  4000  005AC6  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  4001  005ACA  0E03               	movlw	3
  4002  005ACC  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  4003  005ACE  0E06               	movlw	6
  4004  005AD0  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  4005  005AD2                     u9805:
  4006  005AD2  90D8               	bcf	status,0,c
  4007  005AD4  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  4008  005AD6  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  4009  005AD8  EF69  F02D         	goto	u9805
  4010  005ADC  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  4011  005ADE  6E68               	movwf	104,c	;volatile
  4012  005AE0  0012               	return		;funcret
  4013  005AE2                     __end_of_PWM6_LoadDutyValue:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _PWM5_LoadDutyValue *****************
  4017 ;; Defined at:
  4018 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  1    wreg      void 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;Total ram usage:        4 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 8
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_setSteering
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text10
  4047  005AE2                     __ptext10:
  4048                           	callstack 0
  4049  005AE2                     _PWM5_LoadDutyValue:
  4050                           	callstack 20
  4051  005AE2                     
  4052                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4053  005AE2  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4054  005AE6  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  4055  005AEA  90D8               	bcf	status,0,c
  4056  005AEC  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4057  005AEE  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4058  005AF0  90D8               	bcf	status,0,c
  4059  005AF2  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  4060  005AF4  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  4061  005AF6  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4062  005AF8  6E6D               	movwf	109,c	;volatile
  4063                           
  4064                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  4065  005AFA  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  4066  005AFE  0E03               	movlw	3
  4067  005B00  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  4068  005B02  0E06               	movlw	6
  4069  005B04  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  4070  005B06                     u9795:
  4071  005B06  90D8               	bcf	status,0,c
  4072  005B08  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  4073  005B0A  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  4074  005B0C  EF83  F02D         	goto	u9795
  4075  005B10  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  4076  005B12  6E6C               	movwf	108,c	;volatile
  4077  005B14  0012               	return		;funcret
  4078  005B16                     __end_of_PWM5_LoadDutyValue:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _printf *****************
  4082 ;; Defined at:
  4083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  4086 ;;		 -> STR_17(13), STR_16(14), STR_15(13), STR_14(14), 
  4087 ;;		 -> STR_13(10), STR_12(12), STR_11(13), STR_10(14), 
  4088 ;;		 -> STR_9(12), STR_8(12), STR_7(11), STR_6(9), 
  4089 ;;		 -> STR_5(15), STR_4(22), STR_3(14), STR_2(22), 
  4090 ;;		 -> STR_1(11), 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  ap              2   12[BANK1 ] PTR void [1]
  4093 ;;		 -> ?_printf(2), 
  4094 ;;  ret             2    0        int 
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  2    6[BANK1 ] int 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4104 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;Total ram usage:        8 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 16
  4111 ;; This function calls:
  4112 ;;		_vfprintf
  4113 ;; This function is called by:
  4114 ;;		_getBatteryVoltage
  4115 ;;		_getCurve
  4116 ;;		_getReverse
  4117 ;;		_calcSteering
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text11
  4122  005DB8                     __ptext11:
  4123                           	callstack 0
  4124  005DB8                     _printf:
  4125                           	callstack 12
  4126  005DB8  0EA8               	movlw	low (?_printf+2)
  4127  005DBA  0101               	movlb	1	; () banked
  4128  005DBC  6FAC               	movwf	printf@ap& (0+255),b
  4129  005DBE  0E01               	movlw	high (?_printf+2)
  4130  005DC0  6FAD               	movwf	(printf@ap+1)& (0+255),b
  4131  005DC2                     
  4132                           ; BSR set to: 1
  4133  005DC2  0E00               	movlw	0
  4134  005DC4  6FA0               	movwf	vfprintf@fp& (0+255),b
  4135  005DC6  0E00               	movlw	0
  4136  005DC8  6FA1               	movwf	(vfprintf@fp+1)& (0+255),b
  4137  005DCA  C1A6  F1A2         	movff	printf@fmt,vfprintf@fmt
  4138  005DCE  C1A7  F1A3         	movff	printf@fmt+1,vfprintf@fmt+1
  4139  005DD2  0EAC               	movlw	low printf@ap
  4140  005DD4  6FA4               	movwf	vfprintf@ap& (0+255),b
  4141  005DD6  0E01               	movlw	high printf@ap
  4142  005DD8  6FA5               	movwf	(vfprintf@ap+1)& (0+255),b
  4143  005DDA  ECFD  F029         	call	_vfprintf	;wreg free
  4144  005DDE  0012               	return		;funcret
  4145  005DE0                     __end_of_printf:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _vfprintf *****************
  4149 ;; Defined at:
  4150 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  4153 ;;		 -> NULL(0), 
  4154 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  4155 ;;		 -> STR_17(13), STR_16(14), STR_15(13), STR_14(14), 
  4156 ;;		 -> STR_13(10), STR_12(12), STR_11(13), STR_10(14), 
  4157 ;;		 -> STR_9(12), STR_8(12), STR_7(11), STR_6(9), 
  4158 ;;		 -> STR_5(15), STR_4(22), STR_3(14), STR_2(22), 
  4159 ;;		 -> STR_1(11), 
  4160 ;;  ap              2    4[BANK1 ] PTR PTR void 
  4161 ;;		 -> printf@ap(2), 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  4164 ;;		 -> STR_17(13), STR_16(14), STR_15(13), STR_14(14), 
  4165 ;;		 -> STR_13(10), STR_12(12), STR_11(13), STR_10(14), 
  4166 ;;		 -> STR_9(12), STR_8(12), STR_7(11), STR_6(9), 
  4167 ;;		 -> STR_5(15), STR_4(22), STR_3(14), STR_2(22), 
  4168 ;;		 -> STR_1(11), 
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    0[BANK1 ] int 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        8 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 15
  4185 ;; This function calls:
  4186 ;;		_vfpfcnvrt
  4187 ;; This function is called by:
  4188 ;;		_printf
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text12
  4193  0053FA                     __ptext12:
  4194                           	callstack 0
  4195  0053FA                     _vfprintf:
  4196                           	callstack 12
  4197  0053FA                     
  4198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4199  0053FA  C1A2  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  4200  0053FE  C1A3  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4201  005402                     
  4202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4203  005402  0E00               	movlw	0
  4204  005404  0101               	movlb	1	; () banked
  4205  005406  6F29               	movwf	(_nout+1)& (0+255),b
  4206  005408  0E00               	movlw	0
  4207  00540A  6F28               	movwf	_nout& (0+255),b
  4208                           
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4210  00540C  EF1F  F02A         	goto	l8887
  4211  005410                     l8885:
  4212                           
  4213                           ; BSR set to: 1
  4214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4215  005410  C1A0  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  4216  005414  C1A1  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4217  005418  0EE3               	movlw	low vfprintf@cfmt
  4218  00541A  0100               	movlb	0	; () banked
  4219  00541C  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  4220  00541E  0E00               	movlw	high vfprintf@cfmt
  4221  005420  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4222  005422  C1A4  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  4223  005426  C1A5  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4224  00542A  ECCA  F00E         	call	_vfpfcnvrt	;wreg free
  4225  00542E  0100               	movlb	0	; () banked
  4226  005430  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  4227  005432  0101               	movlb	1	; () banked
  4228  005434  2728               	addwf	_nout& (0+255),f,b
  4229  005436  0100               	movlb	0	; () banked
  4230  005438  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  4231  00543A  0101               	movlb	1	; () banked
  4232  00543C  2329               	addwfc	(_nout+1)& (0+255),f,b
  4233  00543E                     l8887:
  4234                           
  4235                           ; BSR set to: 1
  4236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4237  00543E  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  4238  005444  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4239  00544A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4240  00544A  6AF8               	clrf	tblptru,c
  4241  00544C                     	endif
  4242  00544C                     	if	0	;tblptru may be non-zero
  4243  00544C                     	endif
  4244  00544C  0008               	tblrd		*
  4245  00544E  50F5               	movf	tablat,w,c
  4246  005450  0900               	iorlw	0
  4247  005452  A4D8               	btfss	status,2,c
  4248  005454  EF2E  F02A         	goto	u9781
  4249  005458  EF30  F02A         	goto	u9780
  4250  00545C                     u9781:
  4251  00545C  EF08  F02A         	goto	l8885
  4252  005460                     u9780:
  4253  005460                     
  4254                           ; BSR set to: 1
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4256  005460  C128  F1A0         	movff	_nout,?_vfprintf
  4257  005464  C129  F1A1         	movff	_nout+1,?_vfprintf+1
  4258  005468                     
  4259                           ; BSR set to: 1
  4260  005468  0012               	return		;funcret
  4261  00546A                     __end_of_vfprintf:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function _vfpfcnvrt *****************
  4265 ;; Defined at:
  4266 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  4269 ;;		 -> NULL(0), 
  4270 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  4271 ;;		 -> vfprintf@cfmt(2), 
  4272 ;;  ap              2  107[BANK0 ] PTR PTR void 
  4273 ;;		 -> printf@ap(2), 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  ll              8  113[BANK0 ] long long 
  4276 ;;  llu             8    0        unsigned long long 
  4277 ;;  f               4  123[BANK0 ] unsigned long long 
  4278 ;;  ct              3  127[BANK0 ] unsigned char [3]
  4279 ;;  vp              3    0        PTR void 
  4280 ;;  cp              3    0        PTR unsigned char 
  4281 ;;  i               2    0        int 
  4282 ;;  done            2    0        int 
  4283 ;;  c               1  130[BANK0 ] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2  103[BANK0 ] int 
  4286 ;; Registers used:
  4287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;Total ram usage:       28 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 14
  4300 ;; This function calls:
  4301 ;;		_dtoa
  4302 ;;		_efgtoa
  4303 ;;		_fputc
  4304 ;;		_isupper
  4305 ;;		_strncmp
  4306 ;;		_tolower
  4307 ;; This function is called by:
  4308 ;;		_vfprintf
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text13
  4313  001D94                     __ptext13:
  4314                           	callstack 0
  4315  001D94                     _vfpfcnvrt:
  4316                           	callstack 12
  4317  001D94                     
  4318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4319  001D94  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4320  001D9A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4321  001DA0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4322  001DA6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4323  001DAC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4324  001DAC  6AF8               	clrf	tblptru,c
  4325  001DAE                     	endif
  4326  001DAE                     	if	0	;tblptru may be non-zero
  4327  001DAE                     	endif
  4328  001DAE  0008               	tblrd		*
  4329  001DB0  50F5               	movf	tablat,w,c
  4330  001DB2  0A25               	xorlw	37
  4331  001DB4  A4D8               	btfss	status,2,c
  4332  001DB6  EFDF  F00E         	goto	u9671
  4333  001DBA  EFE1  F00E         	goto	u9670
  4334  001DBE                     u9671:
  4335  001DBE  EF39  F011         	goto	l8873
  4336  001DC2                     u9670:
  4337  001DC2                     
  4338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4339  001DC2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4340  001DC8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4341  001DCE  2ADE               	incf	postinc2,f,c
  4342  001DD0  0E00               	movlw	0
  4343  001DD2  22DD               	addwfc	postdec2,f,c
  4344  001DD4                     
  4345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4346  001DD4  0E00               	movlw	0
  4347  001DD6  0100               	movlb	0	; () banked
  4348  001DD8  6FE6               	movwf	(_width+1)& (0+255),b
  4349  001DDA  0E00               	movlw	0
  4350  001DDC  6FE5               	movwf	_width& (0+255),b
  4351  001DDE  C0E5  F03C         	movff	_width,_flags
  4352  001DE2  C0E6  F03D         	movff	_width+1,_flags+1
  4353  001DE6                     
  4354                           ; BSR set to: 0
  4355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4356  001DE6  683A               	setf	_prec^0,c
  4357  001DE8  683B               	setf	(_prec+1)^0,c
  4358  001DEA                     
  4359                           ; BSR set to: 0
  4360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  4361  001DEA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4362  001DF0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4363  001DF6  006F FF7B FFF6     	movff	postinc2,tblptrl
  4364  001DFC  006F FF77 FFF7     	movff	postdec2,tblptrh
  4365  001E02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4366  001E02  6AF8               	clrf	tblptru,c
  4367  001E04                     	endif
  4368  001E04                     	if	0	;tblptru may be non-zero
  4369  001E04                     	endif
  4370  001E04  0008               	tblrd		*
  4371  001E06  50F5               	movf	tablat,w,c
  4372  001E08  6E1A               	movwf	tolower@c^0,c
  4373  001E0A  6A1B               	clrf	(tolower@c+1)^0,c
  4374  001E0C  EC6A  F02A         	call	_tolower	;wreg free
  4375  001E10  501A               	movf	?_tolower^0,w,c
  4376  001E12  0100               	movlb	0	; () banked
  4377  001E14  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  4378  001E16                     
  4379                           ; BSR set to: 0
  4380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  4381  001E16  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  4382  001E18  B4D8               	btfsc	status,2,c
  4383  001E1A  EF11  F00F         	goto	u9681
  4384  001E1E  EF13  F00F         	goto	u9680
  4385  001E22                     u9681:
  4386  001E22  EF5B  F00F         	goto	l8819
  4387  001E26                     u9680:
  4388  001E26                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  4391  001E26  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4392  001E2C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4393  001E32  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4394  001E38  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4395  001E3E  0E01               	movlw	1
  4396  001E40  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4397  001E42  0E00               	movlw	0
  4398  001E44  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4399  001E46  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4400  001E4C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4401  001E52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4402  001E52  6AF8               	clrf	tblptru,c
  4403  001E54                     	endif
  4404  001E54                     	if	0	;tblptru may be non-zero
  4405  001E54                     	endif
  4406  001E54  0008               	tblrd		*
  4407  001E56  50F5               	movf	tablat,w,c
  4408  001E58  6E1A               	movwf	tolower@c^0,c
  4409  001E5A  6A1B               	clrf	(tolower@c+1)^0,c
  4410  001E5C  EC6A  F02A         	call	_tolower	;wreg free
  4411  001E60  501A               	movf	?_tolower^0,w,c
  4412  001E62  0100               	movlb	0	; () banked
  4413  001E64  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4414  001E66                     
  4415                           ; BSR set to: 0
  4416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  4417  001E66  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4418  001E68  B4D8               	btfsc	status,2,c
  4419  001E6A  EF39  F00F         	goto	u9691
  4420  001E6E  EF3B  F00F         	goto	u9690
  4421  001E72                     u9691:
  4422  001E72  EF5B  F00F         	goto	l8819
  4423  001E76                     u9690:
  4424  001E76                     
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  4427  001E76  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4428  001E7C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4429  001E82  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4430  001E88  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4431  001E8E  0E02               	movlw	2
  4432  001E90  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4433  001E92  0E00               	movlw	0
  4434  001E94  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4435  001E96  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4436  001E9C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4437  001EA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4438  001EA2  6AF8               	clrf	tblptru,c
  4439  001EA4                     	endif
  4440  001EA4                     	if	0	;tblptru may be non-zero
  4441  001EA4                     	endif
  4442  001EA4  0008               	tblrd		*
  4443  001EA6  50F5               	movf	tablat,w,c
  4444  001EA8  6E1A               	movwf	tolower@c^0,c
  4445  001EAA  6A1B               	clrf	(tolower@c+1)^0,c
  4446  001EAC  EC6A  F02A         	call	_tolower	;wreg free
  4447  001EB0  501A               	movf	?_tolower^0,w,c
  4448  001EB2  0100               	movlb	0	; () banked
  4449  001EB4  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4450  001EB6                     l8819:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4454  001EB6  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4455  001EBC  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4456  001EC2  006F FF7B FFF6     	movff	postinc2,tblptrl
  4457  001EC8  006F FF77 FFF7     	movff	postdec2,tblptrh
  4458  001ECE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4459  001ECE  6AF8               	clrf	tblptru,c
  4460  001ED0                     	endif
  4461  001ED0                     	if	0	;tblptru may be non-zero
  4462  001ED0                     	endif
  4463  001ED0  0008               	tblrd		*
  4464  001ED2  50F5               	movf	tablat,w,c
  4465  001ED4  0A64               	xorlw	100
  4466  001ED6  B4D8               	btfsc	status,2,c
  4467  001ED8  EF70  F00F         	goto	u9701
  4468  001EDC  EF72  F00F         	goto	u9700
  4469  001EE0                     u9701:
  4470  001EE0  EF89  F00F         	goto	l8823
  4471  001EE4                     u9700:
  4472  001EE4                     
  4473                           ; BSR set to: 0
  4474  001EE4  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4475  001EEA  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4476  001EF0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4477  001EF6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4478  001EFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4479  001EFC  6AF8               	clrf	tblptru,c
  4480  001EFE                     	endif
  4481  001EFE                     	if	0	;tblptru may be non-zero
  4482  001EFE                     	endif
  4483  001EFE  0008               	tblrd		*
  4484  001F00  50F5               	movf	tablat,w,c
  4485  001F02  0A69               	xorlw	105
  4486  001F04  A4D8               	btfss	status,2,c
  4487  001F06  EF87  F00F         	goto	u9711
  4488  001F0A  EF89  F00F         	goto	u9710
  4489  001F0E                     u9711:
  4490  001F0E  EFD3  F00F         	goto	l8829
  4491  001F12                     u9710:
  4492  001F12                     l8823:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4496  001F12  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4497  001F18  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4498  001F1E  2ADE               	incf	postinc2,f,c
  4499  001F20  0E00               	movlw	0
  4500  001F22  22DD               	addwfc	postdec2,f,c
  4501                           
  4502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4503  001F24  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4504  001F2A  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4505  001F30  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4506  001F36  0E02               	movlw	2
  4507  001F38  26DE               	addwf	postinc2,f,c
  4508  001F3A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4509  001F40  0E00               	movlw	0
  4510  001F42  22DD               	addwfc	postdec2,f,c
  4511  001F44  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4512  001F4A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4513  001F50  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  4514  001F56  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  4515  001F5C  0E00               	movlw	0
  4516  001F5E  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4517  001F60  0EFF               	movlw	-1
  4518  001F62  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4519  001F64  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4520  001F66  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4521  001F68  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4522  001F6A  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4523  001F6C  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4524  001F6E                     
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4527  001F6E  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  4528  001F72  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4529  001F76  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  4530  001F7A  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4531  001F7E  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4532  001F82  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4533  001F86  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4534  001F8A  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4535  001F8E  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4536  001F92  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4537  001F96  EC57  F019         	call	_dtoa	;wreg free
  4538  001F9A  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  4539  001F9E  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4540  001FA2  EF5B  F011         	goto	l2267
  4541  001FA6                     l8829:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  4545  001FA6  0E66               	movlw	102
  4546  001FA8  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4547  001FAA  A4D8               	btfss	status,2,c
  4548  001FAC  EFDA  F00F         	goto	u9721
  4549  001FB0  EFDC  F00F         	goto	u9720
  4550  001FB4                     u9721:
  4551  001FB4  EF2E  F010         	goto	l8841
  4552  001FB8                     u9720:
  4553  001FB8                     
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  4556  001FB8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4557  001FBE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4558  001FC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  4559  001FCA  006F FF77 FFF7     	movff	postdec2,tblptrh
  4560  001FD0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4561  001FD0  6AF8               	clrf	tblptru,c
  4562  001FD2                     	endif
  4563  001FD2                     	if	0	;tblptru may be non-zero
  4564  001FD2                     	endif
  4565  001FD2  0008               	tblrd		*
  4566  001FD4  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  4567  001FDA                     
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  4570  001FDA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4571  001FE0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4572  001FE6  2ADE               	incf	postinc2,f,c
  4573  001FE8  0E00               	movlw	0
  4574  001FEA  22DD               	addwfc	postdec2,f,c
  4575  001FEC                     
  4576                           ; BSR set to: 0
  4577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4578  001FEC  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4579  001FF2  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4580  001FF8  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4581  001FFE  0E04               	movlw	4
  4582  002000  26DE               	addwf	postinc2,f,c
  4583  002002  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4584  002008  0E00               	movlw	0
  4585  00200A  22DD               	addwfc	postdec2,f,c
  4586  00200C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4587  002012  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4588  002018  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  4589  00201E  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  4590  002024  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  4591  00202A  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  4592  002030                     
  4593                           ; BSR set to: 0
  4594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  4595  002030  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  4596  002034  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4597  002038  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  4598  00203C  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4599  002040  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4600  002044  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4601  002048  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  4602  00204C  EC73  F008         	call	_efgtoa	;wreg free
  4603  002050  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  4604  002054  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4605  002058  EF5B  F011         	goto	l2267
  4606  00205C                     l8841:
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4610  00205C  0EDF               	movlw	low vfpfcnvrt@ct
  4611  00205E  6E14               	movwf	strncmp@_l^0,c
  4612  002060  0E00               	movlw	high vfpfcnvrt@ct
  4613  002062  6E15               	movwf	(strncmp@_l+1)^0,c
  4614  002064  0EE2               	movlw	low STR_26
  4615  002066  6E16               	movwf	strncmp@_r^0,c
  4616  002068  0E10               	movlw	high STR_26
  4617  00206A  6E17               	movwf	(strncmp@_r+1)^0,c
  4618  00206C  0E00               	movlw	0
  4619  00206E  6E19               	movwf	(strncmp@n+1)^0,c
  4620  002070  0E02               	movlw	2
  4621  002072  6E18               	movwf	strncmp@n^0,c
  4622  002074  EC73  F025         	call	_strncmp	;wreg free
  4623  002078  5014               	movf	?_strncmp^0,w,c
  4624  00207A  1015               	iorwf	(?_strncmp+1)^0,w,c
  4625  00207C  A4D8               	btfss	status,2,c
  4626  00207E  EF43  F010         	goto	u9731
  4627  002082  EF45  F010         	goto	u9730
  4628  002086                     u9731:
  4629  002086  EFF8  F010         	goto	l8857
  4630  00208A                     u9730:
  4631  00208A                     
  4632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4633  00208A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4634  002090  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4635  002096  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  4636  00209C  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  4637  0020A2  0E01               	movlw	1
  4638  0020A4  0100               	movlb	0	; () banked
  4639  0020A6  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  4640  0020A8  0E00               	movlw	0
  4641  0020AA  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4642  0020AC  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4643  0020B2  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4644  0020B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4645  0020B8  6AF8               	clrf	tblptru,c
  4646  0020BA                     	endif
  4647  0020BA                     	if	0	;tblptru may be non-zero
  4648  0020BA                     	endif
  4649  0020BA  0008               	tblrd		*
  4650  0020BC  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  4651  0020C2  0EBF               	movlw	191
  4652  0020C4  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  4653  0020C6  0EFF               	movlw	255
  4654  0020C8  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4655  0020CA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4656  0020D0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4657  0020D6  006F FF7B FFF6     	movff	postinc2,tblptrl
  4658  0020DC  006F FF77 FFF7     	movff	postdec2,tblptrh
  4659  0020E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4660  0020E2  6AF8               	clrf	tblptru,c
  4661  0020E4                     	endif
  4662  0020E4                     	if	0	;tblptru may be non-zero
  4663  0020E4                     	endif
  4664  0020E4  0008               	tblrd		*
  4665  0020E6  50F5               	movf	tablat,w,c
  4666  0020E8  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4667  0020EA  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4668  0020EC  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  4669  0020EE  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4670  0020F0  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4671  0020F2  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4672  0020F4  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4673  0020F6  E10A               	bnz	u9740
  4674  0020F8  0E1A               	movlw	26
  4675  0020FA  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4676  0020FC  A0D8               	btfss	status,0,c
  4677  0020FE  EF83  F010         	goto	u9741
  4678  002102  EF86  F010         	goto	u9740
  4679  002106                     u9741:
  4680  002106  0E01               	movlw	1
  4681  002108  EF87  F010         	goto	u9750
  4682  00210C                     u9740:
  4683  00210C  0E00               	movlw	0
  4684  00210E                     u9750:
  4685  00210E  6FD9               	movwf	_vfpfcnvrt$3595& (0+255),b
  4686  002110  6BDA               	clrf	(_vfpfcnvrt$3595+1)& (0+255),b
  4687  002112                     
  4688                           ; BSR set to: 0
  4689  002112  51D9               	movf	_vfpfcnvrt$3595& (0+255),w,b
  4690  002114  11DA               	iorwf	(_vfpfcnvrt$3595+1)& (0+255),w,b
  4691  002116  B4D8               	btfsc	status,2,c
  4692  002118  EF90  F010         	goto	u9761
  4693  00211C  EF92  F010         	goto	u9760
  4694  002120                     u9761:
  4695  002120  EFB6  F010         	goto	l8851
  4696  002124                     u9760:
  4697  002124                     
  4698                           ; BSR set to: 0
  4699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4700  002124  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4701  00212A  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4702  002130  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4703  002136  0E04               	movlw	4
  4704  002138  26DE               	addwf	postinc2,f,c
  4705  00213A  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4706  002140  0E00               	movlw	0
  4707  002142  22DD               	addwfc	postdec2,f,c
  4708  002144  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4709  00214A  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4710  002150  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  4711  002156  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  4712  00215C  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  4713  002162  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  4716  002168  EFD8  F010         	goto	l2275
  4717  00216C                     l8851:
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4721  00216C  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4722  002172  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4723  002178  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  4724  00217E  0E04               	movlw	4
  4725  002180  26DE               	addwf	postinc2,f,c
  4726  002182  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  4727  002188  0E00               	movlw	0
  4728  00218A  22DD               	addwfc	postdec2,f,c
  4729  00218C  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4730  002192  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4731  002198  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  4732  00219E  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  4733  0021A4  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  4734  0021AA  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  4735  0021B0                     l2275:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4739  0021B0  0E02               	movlw	2
  4740  0021B2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4741  0021B8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4742  0021BE  26DE               	addwf	postinc2,f,c
  4743  0021C0  0E00               	movlw	0
  4744  0021C2  22DD               	addwfc	postdec2,f,c
  4745  0021C4                     
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  4748  0021C4  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  4749  0021C8  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4750  0021CC  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  4751  0021D0  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4752  0021D4  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4753  0021D8  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4754  0021DC  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  4755  0021E0  EC73  F008         	call	_efgtoa	;wreg free
  4756  0021E4  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  4757  0021E8  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4758  0021EC  EF5B  F011         	goto	l2267
  4759  0021F0                     l8857:
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4762  0021F0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4763  0021F6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4764  0021FC  006F FF7B FFF6     	movff	postinc2,tblptrl
  4765  002202  006F FF77 FFF7     	movff	postdec2,tblptrh
  4766  002208                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4767  002208  6AF8               	clrf	tblptru,c
  4768  00220A                     	endif
  4769  00220A                     	if	0	;tblptru may be non-zero
  4770  00220A                     	endif
  4771  00220A  0008               	tblrd		*
  4772  00220C  50F5               	movf	tablat,w,c
  4773  00220E  0A25               	xorlw	37
  4774  002210  A4D8               	btfss	status,2,c
  4775  002212  EF0D  F011         	goto	u9771
  4776  002216  EF0F  F011         	goto	u9770
  4777  00221A                     u9771:
  4778  00221A  EF29  F011         	goto	l8867
  4779  00221E                     u9770:
  4780  00221E                     
  4781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4782  00221E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4783  002224  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4784  00222A  2ADE               	incf	postinc2,f,c
  4785  00222C  0E00               	movlw	0
  4786  00222E  22DD               	addwfc	postdec2,f,c
  4787  002230                     
  4788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4789  002230  0E00               	movlw	0
  4790  002232  6E17               	movwf	(fputc@c+1)^0,c
  4791  002234  0E25               	movlw	37
  4792  002236  6E16               	movwf	fputc@c^0,c
  4793  002238  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  4794  00223C  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4795  002240  ECE5  F028         	call	_fputc	;wreg free
  4796  002244                     l8863:
  4797                           
  4798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4799  002244  0E00               	movlw	0
  4800  002246  0100               	movlb	0	; () banked
  4801  002248  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4802  00224A  0E01               	movlw	1
  4803  00224C  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  4804  00224E  EF5B  F011         	goto	l2267
  4805  002252                     l8867:
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4808  002252  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4809  002258  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4810  00225E  2ADE               	incf	postinc2,f,c
  4811  002260  0E00               	movlw	0
  4812  002262  22DD               	addwfc	postdec2,f,c
  4813  002264                     
  4814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4815  002264  0E00               	movlw	0
  4816  002266  0100               	movlb	0	; () banked
  4817  002268  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4818  00226A  0E00               	movlw	0
  4819  00226C  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  4820  00226E  EF5B  F011         	goto	l2267
  4821  002272                     l8873:
  4822                           
  4823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4824  002272  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4825  002278  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4826  00227E  006F FF7B FFF6     	movff	postinc2,tblptrl
  4827  002284  006F FF77 FFF7     	movff	postdec2,tblptrh
  4828  00228A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4829  00228A  6AF8               	clrf	tblptru,c
  4830  00228C                     	endif
  4831  00228C                     	if	0	;tblptru may be non-zero
  4832  00228C                     	endif
  4833  00228C  0008               	tblrd		*
  4834  00228E  50F5               	movf	tablat,w,c
  4835  002290  6E16               	movwf	fputc@c^0,c
  4836  002292  6A17               	clrf	(fputc@c+1)^0,c
  4837  002294  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  4838  002298  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4839  00229C  ECE5  F028         	call	_fputc	;wreg free
  4840  0022A0                     
  4841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4842  0022A0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4843  0022A6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4844  0022AC  2ADE               	incf	postinc2,f,c
  4845  0022AE  0E00               	movlw	0
  4846  0022B0  22DD               	addwfc	postdec2,f,c
  4847  0022B2  EF22  F011         	goto	l8863
  4848  0022B6                     l2267:
  4849  0022B6  0012               	return		;funcret
  4850  0022B8                     __end_of_vfpfcnvrt:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _strncmp *****************
  4854 ;; Defined at:
  4855 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4858 ;;		 -> vfpfcnvrt@ct(3), 
  4859 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4860 ;;		 -> STR_28(3), 
  4861 ;;  n               2   23[COMRAM] unsigned int 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4864 ;;		 -> STR_28(3), 
  4865 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4866 ;;		 -> vfpfcnvrt@ct(3), 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2   19[COMRAM] int 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:       11 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 8
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_vfpfcnvrt
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text14
  4891  004AE6                     __ptext14:
  4892                           	callstack 0
  4893  004AE6                     _strncmp:
  4894                           	callstack 17
  4895  004AE6  C014  F01B         	movff	strncmp@_l,strncmp@l
  4896  004AEA  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4897  004AEE  C016  F01D         	movff	strncmp@_r,strncmp@r
  4898  004AF2  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4899  004AF6  0618               	decf	strncmp@n^0,f,c
  4900  004AF8  A0D8               	btfss	status,0,c
  4901  004AFA  0619               	decf	(strncmp@n+1)^0,f,c
  4902  004AFC  2818               	incf	strncmp@n^0,w,c
  4903  004AFE  E106               	bnz	u9621
  4904  004B00  2819               	incf	(strncmp@n+1)^0,w,c
  4905  004B02  A4D8               	btfss	status,2,c
  4906  004B04  EF86  F025         	goto	u9621
  4907  004B08  EF88  F025         	goto	u9620
  4908  004B0C                     u9621:
  4909  004B0C  EF95  F025         	goto	l8789
  4910  004B10                     u9620:
  4911  004B10  0E00               	movlw	0
  4912  004B12  6E15               	movwf	(?_strncmp+1)^0,c
  4913  004B14  0E00               	movlw	0
  4914  004B16  6E14               	movwf	?_strncmp^0,c
  4915  004B18  EFEC  F025         	goto	l2355
  4916  004B1C                     l8787:
  4917  004B1C  4A1B               	infsnz	strncmp@l^0,f,c
  4918  004B1E  2A1C               	incf	(strncmp@l+1)^0,f,c
  4919  004B20  4A1D               	infsnz	strncmp@r^0,f,c
  4920  004B22  2A1E               	incf	(strncmp@r+1)^0,f,c
  4921  004B24  0618               	decf	strncmp@n^0,f,c
  4922  004B26  A0D8               	btfss	status,0,c
  4923  004B28  0619               	decf	(strncmp@n+1)^0,f,c
  4924  004B2A                     l8789:
  4925  004B2A  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4926  004B30  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4927  004B36  50DF               	movf	indf2,w,c
  4928  004B38  B4D8               	btfsc	status,2,c
  4929  004B3A  EFA1  F025         	goto	u9631
  4930  004B3E  EFA3  F025         	goto	u9630
  4931  004B42                     u9631:
  4932  004B42  EFD6  F025         	goto	l8797
  4933  004B46                     u9630:
  4934  004B46  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4935  004B4C  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4936  004B52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4937  004B52  6AF8               	clrf	tblptru,c
  4938  004B54                     	endif
  4939  004B54                     	if	0	;tblptru may be non-zero
  4940  004B54                     	endif
  4941  004B54  0008               	tblrd		*
  4942  004B56  50F5               	movf	tablat,w,c
  4943  004B58  0900               	iorlw	0
  4944  004B5A  B4D8               	btfsc	status,2,c
  4945  004B5C  EFB2  F025         	goto	u9641
  4946  004B60  EFB4  F025         	goto	u9640
  4947  004B64                     u9641:
  4948  004B64  EFD6  F025         	goto	l8797
  4949  004B68                     u9640:
  4950  004B68  5018               	movf	strncmp@n^0,w,c
  4951  004B6A  1019               	iorwf	(strncmp@n+1)^0,w,c
  4952  004B6C  B4D8               	btfsc	status,2,c
  4953  004B6E  EFBB  F025         	goto	u9651
  4954  004B72  EFBD  F025         	goto	u9650
  4955  004B76                     u9651:
  4956  004B76  EFD6  F025         	goto	l8797
  4957  004B7A                     u9650:
  4958  004B7A  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4959  004B80  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4960  004B86  50DF               	movf	indf2,w,c
  4961  004B88  6E1A               	movwf	??_strncmp^0,c
  4962  004B8A  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4963  004B90  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4964  004B96                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4965  004B96  6AF8               	clrf	tblptru,c
  4966  004B98                     	endif
  4967  004B98                     	if	0	;tblptru may be non-zero
  4968  004B98                     	endif
  4969  004B98  0008               	tblrd		*
  4970  004B9A  50F5               	movf	tablat,w,c
  4971  004B9C  181A               	xorwf	??_strncmp^0,w,c
  4972  004B9E  B4D8               	btfsc	status,2,c
  4973  004BA0  EFD4  F025         	goto	u9661
  4974  004BA4  EFD6  F025         	goto	u9660
  4975  004BA8                     u9661:
  4976  004BA8  EF8E  F025         	goto	l8787
  4977  004BAC                     u9660:
  4978  004BAC                     l8797:
  4979  004BAC  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4980  004BB2  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4981  004BB8  50DF               	movf	indf2,w,c
  4982  004BBA  6E1A               	movwf	??_strncmp^0,c
  4983  004BBC  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4984  004BC2  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4985  004BC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4986  004BC8  6AF8               	clrf	tblptru,c
  4987  004BCA                     	endif
  4988  004BCA                     	if	0	;tblptru may be non-zero
  4989  004BCA                     	endif
  4990  004BCA  0008               	tblrd		*
  4991  004BCC  50F5               	movf	tablat,w,c
  4992  004BCE  5C1A               	subwf	??_strncmp^0,w,c
  4993  004BD0  6E14               	movwf	?_strncmp^0,c
  4994  004BD2  6A15               	clrf	(?_strncmp+1)^0,c
  4995  004BD4  A0D8               	btfss	status,0,c
  4996  004BD6  0615               	decf	(?_strncmp+1)^0,f,c
  4997  004BD8                     l2355:
  4998  004BD8  0012               	return		;funcret
  4999  004BDA                     __end_of_strncmp:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _efgtoa *****************
  5003 ;; Defined at:
  5004 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  5007 ;;		 -> NULL(0), 
  5008 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  5009 ;;  c               1   41[BANK0 ] unsigned char 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  u               4   99[BANK0 ] unsigned char 
  5012 ;;  g               4   91[BANK0 ] unsigned char 
  5013 ;;  l               4   85[BANK0 ] unsigned char 
  5014 ;;  h               4   81[BANK0 ] unsigned char 
  5015 ;;  ou              4   67[BANK0 ] unsigned char 
  5016 ;;  n               2   97[BANK0 ] int 
  5017 ;;  e               2   95[BANK0 ] int 
  5018 ;;  i               2   89[BANK0 ] int 
  5019 ;;  w               2   77[BANK0 ] int 
  5020 ;;  p               2   75[BANK0 ] int 
  5021 ;;  sign            2   73[BANK0 ] int 
  5022 ;;  d               2   71[BANK0 ] int 
  5023 ;;  m               2   65[BANK0 ] int 
  5024 ;;  ne              2   63[BANK0 ] int 
  5025 ;;  pp              2   61[BANK0 ] int 
  5026 ;;  t               2   59[BANK0 ] int 
  5027 ;;  mode            1   80[BANK0 ] unsigned char 
  5028 ;;  nmode           1   79[BANK0 ] unsigned char 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  2   35[BANK0 ] int 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:       68 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 13
  5045 ;; This function calls:
  5046 ;;		___awdiv
  5047 ;;		___awmod
  5048 ;;		___fladd
  5049 ;;		___fldiv
  5050 ;;		___fleq
  5051 ;;		___flge
  5052 ;;		___flmul
  5053 ;;		___flneg
  5054 ;;		___flsub
  5055 ;;		___fltol
  5056 ;;		___fpclassifyf
  5057 ;;		_floorf
  5058 ;;		_isupper
  5059 ;;		_pad
  5060 ;;		_strcpy
  5061 ;;		_tolower
  5062 ;; This function is called by:
  5063 ;;		_vfpfcnvrt
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text15
  5068  0010E6                     __ptext15:
  5069                           	callstack 0
  5070  0010E6                     _efgtoa:
  5071                           	callstack 12
  5072  0010E6                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  5074  0010E6  0E00               	movlw	0
  5075  0010E8  0100               	movlb	0	; () banked
  5076  0010EA  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5077  0010EC  0E00               	movlw	0
  5078  0010EE  6FA9               	movwf	efgtoa@sign& (0+255),b
  5079  0010F0                     
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  5082  0010F0  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  5083  0010F4  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  5084  0010F8  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  5085  0010FC  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  5086  001100                     
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  5089  001100  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  5090  001102  EF87  F008         	goto	u9080
  5091  001106  EF85  F008         	goto	u9081
  5092  00110A                     u9081:
  5093  00110A  EF9D  F008         	goto	l8483
  5094  00110E                     u9080:
  5095  00110E                     
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  5098  00110E  0E00               	movlw	0
  5099  001110  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5100  001112  0E01               	movlw	1
  5101  001114  6FA9               	movwf	efgtoa@sign& (0+255),b
  5102  001116                     
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  5105  001116  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  5106  00111A  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  5107  00111E  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  5108  001122  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  5109  001126  ECB1  F02C         	call	___flneg	;wreg free
  5110  00112A  C014  F0BB         	movff	?___flneg,efgtoa@g
  5111  00112E  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  5112  001132  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  5113  001136  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  5114  00113A                     l8483:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  5117  00113A  0E00               	movlw	0
  5118  00113C  0100               	movlb	0	; () banked
  5119  00113E  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  5120  001140  0E00               	movlw	0
  5121  001142  6FC1               	movwf	efgtoa@n& (0+255),b
  5122  001144                     
  5123                           ; BSR set to: 0
  5124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  5125  001144  C0E5  F0AD         	movff	_width,efgtoa@w
  5126  001148  C0E6  F0AE         	movff	_width+1,efgtoa@w+1
  5127  00114C                     
  5128                           ; BSR set to: 0
  5129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  5130  00114C  51A9               	movf	efgtoa@sign& (0+255),w,b
  5131  00114E  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5132  001150  A4D8               	btfss	status,2,c
  5133  001152  EFAD  F008         	goto	u9091
  5134  001156  EFAF  F008         	goto	u9090
  5135  00115A                     u9091:
  5136  00115A  EFB6  F008         	goto	l8491
  5137  00115E                     u9090:
  5138  00115E                     
  5139                           ; BSR set to: 0
  5140  00115E  A43C               	btfss	_flags^0,2,c
  5141  001160  EFB4  F008         	goto	u9101
  5142  001164  EFB6  F008         	goto	u9100
  5143  001168                     u9101:
  5144  001168  EFD0  F008         	goto	l8503
  5145  00116C                     u9100:
  5146  00116C                     l8491:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  5150  00116C  51A9               	movf	efgtoa@sign& (0+255),w,b
  5151  00116E  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5152  001170  A4D8               	btfss	status,2,c
  5153  001172  EFBD  F008         	goto	u9111
  5154  001176  EFBF  F008         	goto	u9110
  5155  00117A                     u9111:
  5156  00117A  EFC5  F008         	goto	l8495
  5157  00117E                     u9110:
  5158  00117E                     
  5159                           ; BSR set to: 0
  5160  00117E  0E00               	movlw	0
  5161  001180  6F90               	movwf	(_efgtoa$3566+1)& (0+255),b
  5162  001182  0E2B               	movlw	43
  5163  001184  6F8F               	movwf	_efgtoa$3566& (0+255),b
  5164  001186  EFC9  F008         	goto	l8497
  5165  00118A                     l8495:
  5166                           
  5167                           ; BSR set to: 0
  5168  00118A  0E00               	movlw	0
  5169  00118C  6F90               	movwf	(_efgtoa$3566+1)& (0+255),b
  5170  00118E  0E2D               	movlw	45
  5171  001190  6F8F               	movwf	_efgtoa$3566& (0+255),b
  5172  001192                     l8497:
  5173                           
  5174                           ; BSR set to: 0
  5175  001192  C08F  F13A         	movff	_efgtoa$3566,_dbuf
  5176  001196                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  5179  001196  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5180  001198  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5181  00119A                     
  5182                           ; BSR set to: 0
  5183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  5184  00119A  07AD               	decf	efgtoa@w& (0+255),f,b
  5185  00119C  A0D8               	btfss	status,0,c
  5186  00119E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5187  0011A0                     l8503:
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5191  0011A0  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  5192  0011A4  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5193  0011A8  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5194  0011AC  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5195  0011B0  ECF4  F024         	call	___fpclassifyf	;wreg free
  5196  0011B4  0414               	decf	?___fpclassifyf^0,w,c
  5197  0011B6  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  5198  0011B8  A4D8               	btfss	status,2,c
  5199  0011BA  EFE1  F008         	goto	u9121
  5200  0011BE  EFE3  F008         	goto	u9120
  5201  0011C2                     u9121:
  5202  0011C2  EF3A  F009         	goto	l8521
  5203  0011C6                     u9120:
  5204  0011C6  0EBF               	movlw	191
  5205  0011C8  0100               	movlb	0	; () banked
  5206  0011CA  6F8A               	movwf	??_efgtoa& (0+255),b
  5207  0011CC  0EFF               	movlw	255
  5208  0011CE  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5209  0011D0  5189               	movf	efgtoa@c& (0+255),w,b
  5210  0011D2  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5211  0011D4  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5212  0011D6  518A               	movf	??_efgtoa& (0+255),w,b
  5213  0011D8  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5214  0011DA  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5215  0011DC  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5216  0011DE  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5217  0011E0  E10A               	bnz	u9130
  5218  0011E2  0E1A               	movlw	26
  5219  0011E4  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5220  0011E6  A0D8               	btfss	status,0,c
  5221  0011E8  EFF8  F008         	goto	u9131
  5222  0011EC  EFFB  F008         	goto	u9130
  5223  0011F0                     u9131:
  5224  0011F0  0E01               	movlw	1
  5225  0011F2  EFFC  F008         	goto	u9140
  5226  0011F6                     u9130:
  5227  0011F6  0E00               	movlw	0
  5228  0011F8                     u9140:
  5229  0011F8  6F91               	movwf	_efgtoa$3567& (0+255),b
  5230  0011FA  6B92               	clrf	(_efgtoa$3567+1)& (0+255),b
  5231  0011FC                     
  5232                           ; BSR set to: 0
  5233  0011FC  5191               	movf	_efgtoa$3567& (0+255),w,b
  5234  0011FE  1192               	iorwf	(_efgtoa$3567+1)& (0+255),w,b
  5235  001200  B4D8               	btfsc	status,2,c
  5236  001202  EF05  F009         	goto	u9151
  5237  001206  EF07  F009         	goto	u9150
  5238  00120A                     u9151:
  5239  00120A  EF15  F009         	goto	l8513
  5240  00120E                     u9150:
  5241  00120E                     
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  5244  00120E  0E3A               	movlw	low _dbuf
  5245  001210  25C1               	addwf	efgtoa@n& (0+255),w,b
  5246  001212  6E14               	movwf	strcpy@dest^0,c
  5247  001214  0E01               	movlw	high _dbuf
  5248  001216  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5249  001218  6E15               	movwf	(strcpy@dest+1)^0,c
  5250  00121A  0ED2               	movlw	low STR_18
  5251  00121C  6E16               	movwf	strcpy@src^0,c
  5252  00121E  0E10               	movlw	high STR_18
  5253  001220  6E17               	movwf	(strcpy@src+1)^0,c
  5254  001222  EC35  F02A         	call	_strcpy	;wreg free
  5255                           
  5256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  5257  001226  EF21  F009         	goto	l8515
  5258  00122A                     l8513:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  5262  00122A  0E3A               	movlw	low _dbuf
  5263  00122C  25C1               	addwf	efgtoa@n& (0+255),w,b
  5264  00122E  6E14               	movwf	strcpy@dest^0,c
  5265  001230  0E01               	movlw	high _dbuf
  5266  001232  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5267  001234  6E15               	movwf	(strcpy@dest+1)^0,c
  5268  001236  0EDA               	movlw	low STR_19
  5269  001238  6E16               	movwf	strcpy@src^0,c
  5270  00123A  0E10               	movlw	high STR_19
  5271  00123C  6E17               	movwf	(strcpy@src+1)^0,c
  5272  00123E  EC35  F02A         	call	_strcpy	;wreg free
  5273  001242                     l8515:
  5274                           
  5275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5276  001242  0100               	movlb	0	; () banked
  5277  001244  0EFD               	movlw	253
  5278  001246  27AD               	addwf	efgtoa@w& (0+255),f,b
  5279  001248  0EFF               	movlw	255
  5280  00124A  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5281  00124C                     
  5282                           ; BSR set to: 0
  5283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5284  00124C  C083  F026         	movff	efgtoa@fp,pad@fp
  5285  001250  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5286  001254  0E3A               	movlw	low _dbuf
  5287  001256  6E28               	movwf	pad@buf^0,c
  5288  001258  0E01               	movlw	high _dbuf
  5289  00125A  6E29               	movwf	(pad@buf+1)^0,c
  5290  00125C  C0AD  F02A         	movff	efgtoa@w,pad@p
  5291  001260  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5292  001264  EC25  F027         	call	_pad	;wreg free
  5293  001268  C026  F083         	movff	?_pad,?_efgtoa
  5294  00126C  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5295  001270  EFC9  F00E         	goto	l2183
  5296  001274                     l8521:
  5297                           
  5298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5299  001274  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  5300  001278  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  5301  00127C  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  5302  001280  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  5303  001284  ECF4  F024         	call	___fpclassifyf	;wreg free
  5304  001288  5014               	movf	?___fpclassifyf^0,w,c
  5305  00128A  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  5306  00128C  A4D8               	btfss	status,2,c
  5307  00128E  EF4B  F009         	goto	u9161
  5308  001292  EF4D  F009         	goto	u9160
  5309  001296                     u9161:
  5310  001296  EFA4  F009         	goto	l8539
  5311  00129A                     u9160:
  5312  00129A  0EBF               	movlw	191
  5313  00129C  0100               	movlb	0	; () banked
  5314  00129E  6F8A               	movwf	??_efgtoa& (0+255),b
  5315  0012A0  0EFF               	movlw	255
  5316  0012A2  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5317  0012A4  5189               	movf	efgtoa@c& (0+255),w,b
  5318  0012A6  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5319  0012A8  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5320  0012AA  518A               	movf	??_efgtoa& (0+255),w,b
  5321  0012AC  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5322  0012AE  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5323  0012B0  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5324  0012B2  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5325  0012B4  E10A               	bnz	u9170
  5326  0012B6  0E1A               	movlw	26
  5327  0012B8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5328  0012BA  A0D8               	btfss	status,0,c
  5329  0012BC  EF62  F009         	goto	u9171
  5330  0012C0  EF65  F009         	goto	u9170
  5331  0012C4                     u9171:
  5332  0012C4  0E01               	movlw	1
  5333  0012C6  EF66  F009         	goto	u9180
  5334  0012CA                     u9170:
  5335  0012CA  0E00               	movlw	0
  5336  0012CC                     u9180:
  5337  0012CC  6F93               	movwf	_efgtoa$3571& (0+255),b
  5338  0012CE  6B94               	clrf	(_efgtoa$3571+1)& (0+255),b
  5339  0012D0                     
  5340                           ; BSR set to: 0
  5341  0012D0  5193               	movf	_efgtoa$3571& (0+255),w,b
  5342  0012D2  1194               	iorwf	(_efgtoa$3571+1)& (0+255),w,b
  5343  0012D4  B4D8               	btfsc	status,2,c
  5344  0012D6  EF6F  F009         	goto	u9191
  5345  0012DA  EF71  F009         	goto	u9190
  5346  0012DE                     u9191:
  5347  0012DE  EF7F  F009         	goto	l8531
  5348  0012E2                     u9190:
  5349  0012E2                     
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  5352  0012E2  0E3A               	movlw	low _dbuf
  5353  0012E4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5354  0012E6  6E14               	movwf	strcpy@dest^0,c
  5355  0012E8  0E01               	movlw	high _dbuf
  5356  0012EA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5357  0012EC  6E15               	movwf	(strcpy@dest+1)^0,c
  5358  0012EE  0ED6               	movlw	low STR_22
  5359  0012F0  6E16               	movwf	strcpy@src^0,c
  5360  0012F2  0E10               	movlw	high STR_22
  5361  0012F4  6E17               	movwf	(strcpy@src+1)^0,c
  5362  0012F6  EC35  F02A         	call	_strcpy	;wreg free
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  5365  0012FA  EF8B  F009         	goto	l8533
  5366  0012FE                     l8531:
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  5370  0012FE  0E3A               	movlw	low _dbuf
  5371  001300  25C1               	addwf	efgtoa@n& (0+255),w,b
  5372  001302  6E14               	movwf	strcpy@dest^0,c
  5373  001304  0E01               	movlw	high _dbuf
  5374  001306  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5375  001308  6E15               	movwf	(strcpy@dest+1)^0,c
  5376  00130A  0EDE               	movlw	low STR_23
  5377  00130C  6E16               	movwf	strcpy@src^0,c
  5378  00130E  0E10               	movlw	high STR_23
  5379  001310  6E17               	movwf	(strcpy@src+1)^0,c
  5380  001312  EC35  F02A         	call	_strcpy	;wreg free
  5381  001316                     l8533:
  5382                           
  5383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  5384  001316  0100               	movlb	0	; () banked
  5385  001318  0EFD               	movlw	253
  5386  00131A  27AD               	addwf	efgtoa@w& (0+255),f,b
  5387  00131C  0EFF               	movlw	255
  5388  00131E  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5389  001320                     
  5390                           ; BSR set to: 0
  5391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  5392  001320  C083  F026         	movff	efgtoa@fp,pad@fp
  5393  001324  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5394  001328  0E3A               	movlw	low _dbuf
  5395  00132A  6E28               	movwf	pad@buf^0,c
  5396  00132C  0E01               	movlw	high _dbuf
  5397  00132E  6E29               	movwf	(pad@buf+1)^0,c
  5398  001330  C0AD  F02A         	movff	efgtoa@w,pad@p
  5399  001334  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5400  001338  EC25  F027         	call	_pad	;wreg free
  5401  00133C  C026  F083         	movff	?_pad,?_efgtoa
  5402  001340  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5403  001344  EFC9  F00E         	goto	l2183
  5404  001348                     l8539:
  5405                           
  5406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  5407  001348  0E00               	movlw	0
  5408  00134A  0100               	movlb	0	; () banked
  5409  00134C  6FC3               	movwf	efgtoa@u& (0+255),b
  5410  00134E  0E00               	movlw	0
  5411  001350  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5412  001352  0E80               	movlw	128
  5413  001354  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5414  001356  0E3F               	movlw	63
  5415  001358  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5416                           
  5417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  5418  00135A  0E00               	movlw	0
  5419  00135C  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5420  00135E  0E00               	movlw	0
  5421  001360  6FBF               	movwf	efgtoa@e& (0+255),b
  5422  001362                     
  5423                           ; BSR set to: 0
  5424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  5425  001362  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  5426  001366  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  5427  00136A  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  5428  00136E  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  5429  001372  0E00               	movlw	0
  5430  001374  6E18               	movwf	___fleq@ff2^0,c
  5431  001376  0E00               	movlw	0
  5432  001378  6E19               	movwf	(___fleq@ff2+1)^0,c
  5433  00137A  0E00               	movlw	0
  5434  00137C  6E1A               	movwf	(___fleq@ff2+2)^0,c
  5435  00137E  0E00               	movlw	0
  5436  001380  6E1B               	movwf	(___fleq@ff2+3)^0,c
  5437  001382  EC3E  F028         	call	___fleq	;wreg free
  5438  001386  B0D8               	btfsc	status,0,c
  5439  001388  EFC8  F009         	goto	u9201
  5440  00138C  EFCA  F009         	goto	u9200
  5441  001390                     u9201:
  5442  001390  EF4F  F00A         	goto	l8557
  5443  001394                     u9200:
  5444  001394  EFE9  F009         	goto	l8549
  5445  001398                     l8545:
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  5449  001398  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5450  00139C  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5451  0013A0  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5452  0013A4  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5453  0013A8  0E00               	movlw	0
  5454  0013AA  6E2E               	movwf	___flmul@a^0,c
  5455  0013AC  0E00               	movlw	0
  5456  0013AE  6E2F               	movwf	(___flmul@a+1)^0,c
  5457  0013B0  0E20               	movlw	32
  5458  0013B2  6E30               	movwf	(___flmul@a+2)^0,c
  5459  0013B4  0E41               	movlw	65
  5460  0013B6  6E31               	movwf	(___flmul@a+3)^0,c
  5461  0013B8  ECBD  F013         	call	___flmul	;wreg free
  5462  0013BC  C02A  F0C3         	movff	?___flmul,efgtoa@u
  5463  0013C0  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  5464  0013C4  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  5465  0013C8  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  5466  0013CC                     
  5467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  5468  0013CC  0100               	movlb	0	; () banked
  5469  0013CE  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5470  0013D0  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5471  0013D2                     l8549:
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  5474  0013D2  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5475  0013D6  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5476  0013DA  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5477  0013DE  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5478  0013E2  0E00               	movlw	0
  5479  0013E4  6E2E               	movwf	___flmul@a^0,c
  5480  0013E6  0E00               	movlw	0
  5481  0013E8  6E2F               	movwf	(___flmul@a+1)^0,c
  5482  0013EA  0E20               	movlw	32
  5483  0013EC  6E30               	movwf	(___flmul@a+2)^0,c
  5484  0013EE  0E41               	movlw	65
  5485  0013F0  6E31               	movwf	(___flmul@a+3)^0,c
  5486  0013F2  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5487  0013F6  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5488  0013FA  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5489  0013FE  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5490  001402  ECBD  F013         	call	___flmul	;wreg free
  5491  001406  C02A  F071         	movff	?___flmul,___flge@ff2
  5492  00140A  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5493  00140E  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5494  001412  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5495  001416  EC71  F024         	call	___flge	;wreg free
  5496  00141A  0100               	movlb	0	; () banked
  5497  00141C  B0D8               	btfsc	status,0,c
  5498  00141E  EF13  F00A         	goto	u9211
  5499  001422  EF15  F00A         	goto	u9210
  5500  001426                     u9211:
  5501  001426  EFCC  F009         	goto	l8545
  5502  00142A                     u9210:
  5503  00142A  EF35  F00A         	goto	l8555
  5504  00142E                     l8551:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  5508  00142E  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5509  001432  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5510  001436  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5511  00143A  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5512  00143E  0E00               	movlw	0
  5513  001440  6E2E               	movwf	___fldiv@a^0,c
  5514  001442  0E00               	movlw	0
  5515  001444  6E2F               	movwf	(___fldiv@a+1)^0,c
  5516  001446  0E20               	movlw	32
  5517  001448  6E30               	movwf	(___fldiv@a+2)^0,c
  5518  00144A  0E41               	movlw	65
  5519  00144C  6E31               	movwf	(___fldiv@a+3)^0,c
  5520  00144E  ECE5  F015         	call	___fldiv	;wreg free
  5521  001452  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5522  001456  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5523  00145A  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5524  00145E  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5525  001462                     
  5526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  5527  001462  0100               	movlb	0	; () banked
  5528  001464  07BF               	decf	efgtoa@e& (0+255),f,b
  5529  001466  A0D8               	btfss	status,0,c
  5530  001468  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  5531  00146A                     l8555:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  5535  00146A  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  5536  00146E  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  5537  001472  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  5538  001476  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  5539  00147A  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  5540  00147E  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  5541  001482  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  5542  001486  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  5543  00148A  EC71  F024         	call	___flge	;wreg free
  5544  00148E  0100               	movlb	0	; () banked
  5545  001490  A0D8               	btfss	status,0,c
  5546  001492  EF4D  F00A         	goto	u9221
  5547  001496  EF4F  F00A         	goto	u9220
  5548  00149A                     u9221:
  5549  00149A  EF17  F00A         	goto	l8551
  5550  00149E                     u9220:
  5551  00149E                     l8557:
  5552                           
  5553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  5554  00149E  C089  F01A         	movff	efgtoa@c,tolower@c
  5555  0014A2  6A1B               	clrf	(tolower@c+1)^0,c
  5556  0014A4  EC6A  F02A         	call	_tolower	;wreg free
  5557  0014A8  501A               	movf	?_tolower^0,w,c
  5558  0014AA  0100               	movlb	0	; () banked
  5559  0014AC  6FB0               	movwf	efgtoa@mode& (0+255),b
  5560  0014AE                     
  5561                           ; BSR set to: 0
  5562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  5563  0014AE  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  5564  0014B2                     
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  5567  0014B2  0E67               	movlw	103
  5568  0014B4  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5569  0014B6  A4D8               	btfss	status,2,c
  5570  0014B8  EF60  F00A         	goto	u9231
  5571  0014BC  EF62  F00A         	goto	u9230
  5572  0014C0                     u9231:
  5573  0014C0  EF88  F00A         	goto	l8571
  5574  0014C4                     u9230:
  5575  0014C4                     
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  5578  0014C4  503A               	movf	_prec^0,w,c
  5579  0014C6  103B               	iorwf	(_prec+1)^0,w,c
  5580  0014C8  A4D8               	btfss	status,2,c
  5581  0014CA  EF69  F00A         	goto	u9241
  5582  0014CE  EF6B  F00A         	goto	u9240
  5583  0014D2                     u9241:
  5584  0014D2  EF6F  F00A         	goto	l8567
  5585  0014D6                     u9240:
  5586  0014D6                     
  5587                           ; BSR set to: 0
  5588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  5589  0014D6  0E00               	movlw	0
  5590  0014D8  6E3B               	movwf	(_prec+1)^0,c
  5591  0014DA  0E01               	movlw	1
  5592  0014DC  6E3A               	movwf	_prec^0,c
  5593  0014DE                     l8567:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  5597  0014DE  BE3B               	btfsc	(_prec+1)^0,7,c
  5598  0014E0  EF7C  F00A         	goto	u9250
  5599  0014E4  503B               	movf	(_prec+1)^0,w,c
  5600  0014E6  E106               	bnz	u9251
  5601  0014E8  043A               	decf	_prec^0,w,c
  5602  0014EA  B0D8               	btfsc	status,0,c
  5603  0014EC  EF7A  F00A         	goto	u9251
  5604  0014F0  EF7C  F00A         	goto	u9250
  5605  0014F4                     u9251:
  5606  0014F4  EF82  F00A         	goto	l2201
  5607  0014F8                     u9250:
  5608  0014F8                     l8569:
  5609                           
  5610                           ; BSR set to: 0
  5611  0014F8  0E00               	movlw	0
  5612  0014FA  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5613  0014FC  0E06               	movlw	6
  5614  0014FE  6FAB               	movwf	efgtoa@p& (0+255),b
  5615  001500  EF91  F00A         	goto	l8577
  5616  001504                     l2201:
  5617                           
  5618                           ; BSR set to: 0
  5619  001504  C03A  F0AB         	movff	_prec,efgtoa@p
  5620  001508  C03B  F0AC         	movff	_prec+1,efgtoa@p+1
  5621  00150C  EF91  F00A         	goto	l8577
  5622  001510                     l8571:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  5626  001510  BE3B               	btfsc	(_prec+1)^0,7,c
  5627  001512  EF8D  F00A         	goto	u9261
  5628  001516  EF8F  F00A         	goto	u9260
  5629  00151A                     u9261:
  5630  00151A  EF7C  F00A         	goto	l8569
  5631  00151E                     u9260:
  5632  00151E  EF82  F00A         	goto	l2201
  5633  001522                     l8577:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  5637  001522  0E67               	movlw	103
  5638  001524  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5639  001526  A4D8               	btfss	status,2,c
  5640  001528  EF98  F00A         	goto	u9271
  5641  00152C  EF9A  F00A         	goto	u9270
  5642  001530                     u9271:
  5643  001530  EFC9  F00A         	goto	l8587
  5644  001534                     u9270:
  5645  001534                     
  5646                           ; BSR set to: 0
  5647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5648  001534  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  5649  001536  EFA8  F00A         	goto	u9280
  5650  00153A  0EFC               	movlw	252
  5651  00153C  5DBF               	subwf	efgtoa@e& (0+255),w,b
  5652  00153E  0EFF               	movlw	255
  5653  001540  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5654  001542  A0D8               	btfss	status,0,c
  5655  001544  EFA6  F00A         	goto	u9281
  5656  001548  EFA8  F00A         	goto	u9280
  5657  00154C                     u9281:
  5658  00154C  EFC7  F00A         	goto	l8585
  5659  001550                     u9280:
  5660  001550                     
  5661                           ; BSR set to: 0
  5662  001550  0EFF               	movlw	255
  5663  001552  6F8A               	movwf	??_efgtoa& (0+255),b
  5664  001554  0EFF               	movlw	255
  5665  001556  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5666  001558  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  5667  00155C  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  5668  001560  518A               	movf	??_efgtoa& (0+255),w,b
  5669  001562  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5670  001564  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5671  001566  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5672  001568  51BF               	movf	efgtoa@e& (0+255),w,b
  5673  00156A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5674  00156C  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5675  00156E  0A80               	xorlw	128
  5676  001570  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  5677  001572  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5678  001574  0A80               	xorlw	128
  5679  001576  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5680  001578  A0D8               	btfss	status,0,c
  5681  00157A  EFC1  F00A         	goto	u9291
  5682  00157E  EFC3  F00A         	goto	u9290
  5683  001582                     u9291:
  5684  001582  EFC7  F00A         	goto	l8585
  5685  001586                     u9290:
  5686  001586                     
  5687                           ; BSR set to: 0
  5688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  5689  001586  0E66               	movlw	102
  5690  001588  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5691                           
  5692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  5693  00158A  EFC9  F00A         	goto	l8587
  5694  00158E                     l8585:
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  5698  00158E  0E65               	movlw	101
  5699  001590  6FAF               	movwf	efgtoa@nmode& (0+255),b
  5700  001592                     l8587:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  5704  001592  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  5705  001596  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  5706  00159A                     
  5707                           ; BSR set to: 0
  5708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5709  00159A  0E67               	movlw	103
  5710  00159C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5711  00159E  A4D8               	btfss	status,2,c
  5712  0015A0  EFD4  F00A         	goto	u9301
  5713  0015A4  EFD6  F00A         	goto	u9300
  5714  0015A8                     u9301:
  5715  0015A8  EFE6  F00A         	goto	l8595
  5716  0015AC                     u9300:
  5717  0015AC                     
  5718                           ; BSR set to: 0
  5719  0015AC  0E66               	movlw	102
  5720  0015AE  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5721  0015B0  A4D8               	btfss	status,2,c
  5722  0015B2  EFDD  F00A         	goto	u9311
  5723  0015B6  EFDF  F00A         	goto	u9310
  5724  0015BA                     u9311:
  5725  0015BA  EFE8  F00A         	goto	l8597
  5726  0015BE                     u9310:
  5727  0015BE                     
  5728                           ; BSR set to: 0
  5729  0015BE  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5730  0015C0  EFE6  F00A         	goto	u9320
  5731  0015C4  EFE4  F00A         	goto	u9321
  5732  0015C8                     u9321:
  5733  0015C8  EFE8  F00A         	goto	l8597
  5734  0015CC                     u9320:
  5735  0015CC                     l8595:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  5739  0015CC  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5740  0015CE  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5741  0015D0                     l8597:
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  5745  0015D0  0E66               	movlw	102
  5746  0015D2  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5747  0015D4  A4D8               	btfss	status,2,c
  5748  0015D6  EFEF  F00A         	goto	u9331
  5749  0015DA  EFF1  F00A         	goto	u9330
  5750  0015DE                     u9331:
  5751  0015DE  EF11  F00B         	goto	l8607
  5752  0015E2                     u9330:
  5753  0015E2                     
  5754                           ; BSR set to: 0
  5755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  5756  0015E2  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5757  0015E4  EFF8  F00A         	goto	u9340
  5758  0015E8  EFF6  F00A         	goto	u9341
  5759  0015EC                     u9341:
  5760  0015EC  EF04  F00B         	goto	l8603
  5761  0015F0                     u9340:
  5762  0015F0                     
  5763                           ; BSR set to: 0
  5764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  5765  0015F0  0E00               	movlw	0
  5766  0015F2  6FC3               	movwf	efgtoa@u& (0+255),b
  5767  0015F4  0E00               	movlw	0
  5768  0015F6  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  5769  0015F8  0E80               	movlw	128
  5770  0015FA  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  5771  0015FC  0E3F               	movlw	63
  5772  0015FE  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  5775  001600  0E00               	movlw	0
  5776  001602  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  5777  001604  0E00               	movlw	0
  5778  001606  6FBF               	movwf	efgtoa@e& (0+255),b
  5779  001608                     l8603:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  5783  001608  0E67               	movlw	103
  5784  00160A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5785  00160C  B4D8               	btfsc	status,2,c
  5786  00160E  EF0B  F00B         	goto	u9351
  5787  001612  EF0D  F00B         	goto	u9350
  5788  001616                     u9351:
  5789  001616  EF11  F00B         	goto	l8607
  5790  00161A                     u9350:
  5791  00161A                     
  5792                           ; BSR set to: 0
  5793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  5794  00161A  51BF               	movf	efgtoa@e& (0+255),w,b
  5795  00161C  27A1               	addwf	efgtoa@m& (0+255),f,b
  5796  00161E  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  5797  001620  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5798  001622                     l8607:
  5799                           
  5800                           ; BSR set to: 0
  5801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  5802  001622  0E00               	movlw	0
  5803  001624  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5804  001626  0E00               	movlw	0
  5805  001628  6FB9               	movwf	efgtoa@i& (0+255),b
  5806  00162A                     
  5807                           ; BSR set to: 0
  5808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  5809  00162A  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  5810  00162E  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  5811  001632  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  5812  001636  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  5813  00163A                     
  5814                           ; BSR set to: 0
  5815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  5816  00163A  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  5817  00163E  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  5818  001642  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  5819  001646  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5822  00164A  EFA2  F00B         	goto	l8621
  5823  00164E                     l8613:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  5827  00164E  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  5828  001652  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  5829  001656  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  5830  00165A  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  5831  00165E  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  5832  001662  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  5833  001666  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  5834  00166A  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  5835  00166E  ECE5  F015         	call	___fldiv	;wreg free
  5836  001672  C02A  F036         	movff	?___fldiv,floorf@x
  5837  001676  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  5838  00167A  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  5839  00167E  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  5840  001682  EC45  F01D         	call	_floorf	;wreg free
  5841  001686  C036  F0B5         	movff	?_floorf,efgtoa@l
  5842  00168A  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5843  00168E  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5844  001692  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5845                           
  5846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  5847  001696  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5848  00169A  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5849  00169E  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5850  0016A2  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5851  0016A6  ECED  F023         	call	___fltol	;wreg free
  5852  0016AA  C079  F0A7         	movff	?___fltol,efgtoa@d
  5853  0016AE  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5854  0016B2                     
  5855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  5856  0016B2  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5857  0016B6  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5858  0016BA  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5859  0016BE  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5860  0016C2  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5861  0016C6  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5862  0016CA  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5863  0016CE  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5864  0016D2  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5865  0016D6  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5866  0016DA  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5867  0016DE  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5868  0016E2  ECBD  F013         	call	___flmul	;wreg free
  5869  0016E6  C02A  F07D         	movff	?___flmul,___flsub@a
  5870  0016EA  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5871  0016EE  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5872  0016F2  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5873  0016F6  ECB5  F02B         	call	___flsub	;wreg free
  5874  0016FA  C079  F0B1         	movff	?___flsub,efgtoa@h
  5875  0016FE  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5876  001702  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5877  001706  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5878  00170A                     
  5879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5880  00170A  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  5881  00170E  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  5882  001712  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  5883  001716  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  5884  00171A  0E00               	movlw	0
  5885  00171C  6E2E               	movwf	___fldiv@a^0,c
  5886  00171E  0E00               	movlw	0
  5887  001720  6E2F               	movwf	(___fldiv@a+1)^0,c
  5888  001722  0E20               	movlw	32
  5889  001724  6E30               	movwf	(___fldiv@a+2)^0,c
  5890  001726  0E41               	movlw	65
  5891  001728  6E31               	movwf	(___fldiv@a+3)^0,c
  5892  00172A  ECE5  F015         	call	___fldiv	;wreg free
  5893  00172E  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  5894  001732  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5895  001736  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5896  00173A  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5897  00173E                     
  5898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5899  00173E  0100               	movlb	0	; () banked
  5900  001740  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5901  001742  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5902  001744                     l8621:
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5906  001744  51A1               	movf	efgtoa@m& (0+255),w,b
  5907  001746  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5908  001748  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5909  00174A  0A80               	xorlw	128
  5910  00174C  6F8A               	movwf	??_efgtoa& (0+255),b
  5911  00174E  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5912  001750  0A80               	xorlw	128
  5913  001752  598A               	subwfb	??_efgtoa& (0+255),w,b
  5914  001754  A0D8               	btfss	status,0,c
  5915  001756  EFAF  F00B         	goto	u9361
  5916  00175A  EFB1  F00B         	goto	u9360
  5917  00175E                     u9361:
  5918  00175E  EF27  F00B         	goto	l8613
  5919  001762                     u9360:
  5920  001762                     
  5921                           ; BSR set to: 0
  5922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5923  001762  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5924  001766  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5925  00176A  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5926  00176E  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5927  001772  0E00               	movlw	0
  5928  001774  6E2E               	movwf	___flmul@a^0,c
  5929  001776  0E00               	movlw	0
  5930  001778  6E2F               	movwf	(___flmul@a+1)^0,c
  5931  00177A  0EA0               	movlw	160
  5932  00177C  6E30               	movwf	(___flmul@a+2)^0,c
  5933  00177E  0E40               	movlw	64
  5934  001780  6E31               	movwf	(___flmul@a+3)^0,c
  5935  001782  ECBD  F013         	call	___flmul	;wreg free
  5936  001786  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5937  00178A  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5938  00178E  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5939  001792  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5940  001796                     
  5941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5942  001796  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5943  00179A  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5944  00179E  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5945  0017A2  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5946  0017A6  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5947  0017AA  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5948  0017AE  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5949  0017B2  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5950  0017B6  EC71  F024         	call	___flge	;wreg free
  5951  0017BA  0100               	movlb	0	; () banked
  5952  0017BC  B0D8               	btfsc	status,0,c
  5953  0017BE  EFE3  F00B         	goto	u9371
  5954  0017C2  EFE5  F00B         	goto	u9370
  5955  0017C6                     u9371:
  5956  0017C6  EFEF  F00B         	goto	l8629
  5957  0017CA                     u9370:
  5958  0017CA                     
  5959                           ; BSR set to: 0
  5960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5961  0017CA  0E00               	movlw	0
  5962  0017CC  6FB5               	movwf	efgtoa@l& (0+255),b
  5963  0017CE  0E00               	movlw	0
  5964  0017D0  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5965  0017D2  0E00               	movlw	0
  5966  0017D4  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5967  0017D6  0E00               	movlw	0
  5968  0017D8  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5969                           
  5970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5971  0017DA  EF18  F00C         	goto	l8635
  5972  0017DE                     l8629:
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5976  0017DE  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5977  0017E2  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5978  0017E6  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5979  0017EA  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5980  0017EE  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5981  0017F2  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5982  0017F6  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5983  0017FA  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5984  0017FE  EC3E  F028         	call	___fleq	;wreg free
  5985  001802  A0D8               	btfss	status,0,c
  5986  001804  EF06  F00C         	goto	u9381
  5987  001808  EF08  F00C         	goto	u9380
  5988  00180C                     u9381:
  5989  00180C  EF18  F00C         	goto	l8635
  5990  001810                     u9380:
  5991  001810  0100               	movlb	0	; () banked
  5992  001812  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5993  001814  EF0E  F00C         	goto	u9391
  5994  001818  EF10  F00C         	goto	u9390
  5995  00181C                     u9391:
  5996  00181C  EF18  F00C         	goto	l8635
  5997  001820                     u9390:
  5998  001820                     
  5999                           ; BSR set to: 0
  6000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  6001  001820  0E00               	movlw	0
  6002  001822  6FB5               	movwf	efgtoa@l& (0+255),b
  6003  001824  0E00               	movlw	0
  6004  001826  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  6005  001828  0E00               	movlw	0
  6006  00182A  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  6007  00182C  0E00               	movlw	0
  6008  00182E  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  6009  001830                     l8635:
  6010                           
  6011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  6012  001830  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  6013  001834  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  6014  001838  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  6015  00183C  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  6016  001840  C0B5  F071         	movff	efgtoa@l,___fladd@a
  6017  001844  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  6018  001848  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  6019  00184C  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  6020  001850  EC5C  F011         	call	___fladd	;wreg free
  6021  001854  C06D  F0B1         	movff	?___fladd,efgtoa@h
  6022  001858  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  6023  00185C  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  6024  001860  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  6025  001864                     
  6026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  6027  001864  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  6028  001868  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  6029  00186C  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  6030  001870  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  6031  001874  0E00               	movlw	0
  6032  001876  6E2E               	movwf	___flmul@a^0,c
  6033  001878  0E00               	movlw	0
  6034  00187A  6E2F               	movwf	(___flmul@a+1)^0,c
  6035  00187C  0E20               	movlw	32
  6036  00187E  6E30               	movwf	(___flmul@a+2)^0,c
  6037  001880  0E41               	movlw	65
  6038  001882  6E31               	movwf	(___flmul@a+3)^0,c
  6039  001884  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  6040  001888  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  6041  00188C  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  6042  001890  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  6043  001894  ECBD  F013         	call	___flmul	;wreg free
  6044  001898  C02A  F071         	movff	?___flmul,___flge@ff2
  6045  00189C  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  6046  0018A0  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  6047  0018A4  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  6048  0018A8  EC71  F024         	call	___flge	;wreg free
  6049  0018AC  0100               	movlb	0	; () banked
  6050  0018AE  A0D8               	btfss	status,0,c
  6051  0018B0  EF5C  F00C         	goto	u9401
  6052  0018B4  EF5E  F00C         	goto	u9400
  6053  0018B8                     u9401:
  6054  0018B8  EF86  F00C         	goto	l8647
  6055  0018BC                     u9400:
  6056  0018BC                     
  6057                           ; BSR set to: 0
  6058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  6059  0018BC  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  6060  0018BE  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6061  0018C0                     
  6062                           ; BSR set to: 0
  6063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  6064  0018C0  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  6065  0018C4  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  6066  0018C8  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  6067  0018CC  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  6068  0018D0  0E00               	movlw	0
  6069  0018D2  6E2E               	movwf	___flmul@a^0,c
  6070  0018D4  0E00               	movlw	0
  6071  0018D6  6E2F               	movwf	(___flmul@a+1)^0,c
  6072  0018D8  0E20               	movlw	32
  6073  0018DA  6E30               	movwf	(___flmul@a+2)^0,c
  6074  0018DC  0E41               	movlw	65
  6075  0018DE  6E31               	movwf	(___flmul@a+3)^0,c
  6076  0018E0  ECBD  F013         	call	___flmul	;wreg free
  6077  0018E4  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  6078  0018E8  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  6079  0018EC  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  6080  0018F0  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  6081  0018F4                     
  6082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  6083  0018F4  0E66               	movlw	102
  6084  0018F6  0100               	movlb	0	; () banked
  6085  0018F8  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6086  0018FA  A4D8               	btfss	status,2,c
  6087  0018FC  EF82  F00C         	goto	u9411
  6088  001900  EF84  F00C         	goto	u9410
  6089  001904                     u9411:
  6090  001904  EF86  F00C         	goto	l8647
  6091  001908                     u9410:
  6092  001908                     
  6093                           ; BSR set to: 0
  6094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  6095  001908  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  6096  00190A  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  6097  00190C                     l8647:
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  6101  00190C  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  6102  001910  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  6103  001914  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  6104  001918  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  6105  00191C                     
  6106                           ; BSR set to: 0
  6107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  6108  00191C  0E65               	movlw	101
  6109  00191E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6110  001920  B4D8               	btfsc	status,2,c
  6111  001922  EF95  F00C         	goto	u9421
  6112  001926  EF97  F00C         	goto	u9420
  6113  00192A                     u9421:
  6114  00192A  EF9D  F00C         	goto	l8653
  6115  00192E                     u9420:
  6116  00192E                     
  6117                           ; BSR set to: 0
  6118  00192E  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  6119  001932  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  6120  001936  EFA1  F00C         	goto	l2229
  6121  00193A                     l8653:
  6122                           
  6123                           ; BSR set to: 0
  6124  00193A  0E00               	movlw	0
  6125  00193C  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  6126  00193E  0E00               	movlw	0
  6127  001940  6F9F               	movwf	efgtoa@ne& (0+255),b
  6128  001942                     l2229:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  6132  001942  0E00               	movlw	0
  6133  001944  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  6134  001946  0E00               	movlw	0
  6135  001948  6F9D               	movwf	efgtoa@pp& (0+255),b
  6136                           
  6137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  6138  00194A  0E00               	movlw	0
  6139  00194C  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  6140  00194E  0E00               	movlw	0
  6141  001950  6F9B               	movwf	efgtoa@t& (0+255),b
  6142                           
  6143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  6144  001952  0E00               	movlw	0
  6145  001954  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6146  001956  0E00               	movlw	0
  6147  001958  6FB9               	movwf	efgtoa@i& (0+255),b
  6148                           
  6149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6150  00195A  EF9D  F00D         	goto	l8703
  6151  00195E                     l8655:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  6155  00195E  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  6156  001962  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  6157  001966  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  6158  00196A  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  6159  00196E  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  6160  001972  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  6161  001976  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  6162  00197A  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  6163  00197E  ECE5  F015         	call	___fldiv	;wreg free
  6164  001982  C02A  F036         	movff	?___fldiv,floorf@x
  6165  001986  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  6166  00198A  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  6167  00198E  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  6168  001992  EC45  F01D         	call	_floorf	;wreg free
  6169  001996  C036  F0B5         	movff	?_floorf,efgtoa@l
  6170  00199A  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  6171  00199E  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  6172  0019A2  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  6173                           
  6174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  6175  0019A6  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  6176  0019AA  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  6177  0019AE  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  6178  0019B2  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  6179  0019B6  ECED  F023         	call	___fltol	;wreg free
  6180  0019BA  C079  F0A7         	movff	?___fltol,efgtoa@d
  6181  0019BE  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  6182  0019C2                     
  6183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6184  0019C2  B83C               	btfsc	_flags^0,4,c
  6185  0019C4  EFE6  F00C         	goto	u9431
  6186  0019C8  EFE8  F00C         	goto	u9430
  6187  0019CC                     u9431:
  6188  0019CC  EF06  F00D         	goto	l8667
  6189  0019D0                     u9430:
  6190  0019D0  0100               	movlb	0	; () banked
  6191  0019D2  51A7               	movf	efgtoa@d& (0+255),w,b
  6192  0019D4  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6193  0019D6  A4D8               	btfss	status,2,c
  6194  0019D8  EFF0  F00C         	goto	u9441
  6195  0019DC  EFF2  F00C         	goto	u9440
  6196  0019E0                     u9441:
  6197  0019E0  EF06  F00D         	goto	l8667
  6198  0019E4                     u9440:
  6199  0019E4                     
  6200                           ; BSR set to: 0
  6201  0019E4  0E67               	movlw	103
  6202  0019E6  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  6203  0019E8  A4D8               	btfss	status,2,c
  6204  0019EA  EFF9  F00C         	goto	u9451
  6205  0019EE  EFFB  F00C         	goto	u9450
  6206  0019F2                     u9451:
  6207  0019F2  EF06  F00D         	goto	l8667
  6208  0019F6                     u9450:
  6209  0019F6                     
  6210                           ; BSR set to: 0
  6211  0019F6  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6212  0019F8  EF02  F00D         	goto	u9460
  6213  0019FC  EF00  F00D         	goto	u9461
  6214  001A00                     u9461:
  6215  001A00  EF06  F00D         	goto	l8667
  6216  001A04                     u9460:
  6217  001A04                     
  6218                           ; BSR set to: 0
  6219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  6220  001A04  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  6221  001A06  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  6222                           
  6223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  6224  001A08  EF51  F00D         	goto	l8695
  6225  001A0C                     l8667:
  6226                           
  6227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  6228  001A0C  0100               	movlb	0	; () banked
  6229  001A0E  519D               	movf	efgtoa@pp& (0+255),w,b
  6230  001A10  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6231  001A12  A4D8               	btfss	status,2,c
  6232  001A14  EF0E  F00D         	goto	u9471
  6233  001A18  EF10  F00D         	goto	u9470
  6234  001A1C                     u9471:
  6235  001A1C  EF3A  F00D         	goto	l8687
  6236  001A20                     u9470:
  6237  001A20                     
  6238                           ; BSR set to: 0
  6239  001A20  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  6240  001A22  EF17  F00D         	goto	u9480
  6241  001A26  EF15  F00D         	goto	u9481
  6242  001A2A                     u9481:
  6243  001A2A  EF3A  F00D         	goto	l8687
  6244  001A2E                     u9480:
  6245  001A2E                     
  6246                           ; BSR set to: 0
  6247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  6248  001A2E  0E3A               	movlw	low _dbuf
  6249  001A30  25C1               	addwf	efgtoa@n& (0+255),w,b
  6250  001A32  6ED9               	movwf	fsr2l,c
  6251  001A34  0E01               	movlw	high _dbuf
  6252  001A36  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6253  001A38  6EDA               	movwf	fsr2h,c
  6254  001A3A  0E2E               	movlw	46
  6255  001A3C  6EDF               	movwf	indf2,c
  6256  001A3E                     
  6257                           ; BSR set to: 0
  6258  001A3E  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6259  001A40  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6260  001A42                     
  6261                           ; BSR set to: 0
  6262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  6263  001A42  07AD               	decf	efgtoa@w& (0+255),f,b
  6264  001A44  A0D8               	btfss	status,0,c
  6265  001A46  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6266  001A48                     
  6267                           ; BSR set to: 0
  6268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  6269  001A48  0E00               	movlw	0
  6270  001A4A  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  6271  001A4C  0E01               	movlw	1
  6272  001A4E  6F9D               	movwf	efgtoa@pp& (0+255),b
  6273  001A50  EF3A  F00D         	goto	l8687
  6274  001A54                     l8679:
  6275                           
  6276                           ; BSR set to: 0
  6277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  6278  001A54  0E3A               	movlw	low _dbuf
  6279  001A56  25C1               	addwf	efgtoa@n& (0+255),w,b
  6280  001A58  6ED9               	movwf	fsr2l,c
  6281  001A5A  0E01               	movlw	high _dbuf
  6282  001A5C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6283  001A5E  6EDA               	movwf	fsr2h,c
  6284  001A60  0E30               	movlw	48
  6285  001A62  6EDF               	movwf	indf2,c
  6286  001A64                     
  6287                           ; BSR set to: 0
  6288  001A64  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6289  001A66  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6290  001A68                     
  6291                           ; BSR set to: 0
  6292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  6293  001A68  07AD               	decf	efgtoa@w& (0+255),f,b
  6294  001A6A  A0D8               	btfss	status,0,c
  6295  001A6C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6296  001A6E                     
  6297                           ; BSR set to: 0
  6298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  6299  001A6E  079B               	decf	efgtoa@t& (0+255),f,b
  6300  001A70  A0D8               	btfss	status,0,c
  6301  001A72  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  6302  001A74                     l8687:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  6306  001A74  519B               	movf	efgtoa@t& (0+255),w,b
  6307  001A76  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6308  001A78  A4D8               	btfss	status,2,c
  6309  001A7A  EF41  F00D         	goto	u9491
  6310  001A7E  EF43  F00D         	goto	u9490
  6311  001A82                     u9491:
  6312  001A82  EF2A  F00D         	goto	l8679
  6313  001A86                     u9490:
  6314  001A86                     
  6315                           ; BSR set to: 0
  6316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  6317  001A86  0E3A               	movlw	low _dbuf
  6318  001A88  25C1               	addwf	efgtoa@n& (0+255),w,b
  6319  001A8A  6ED9               	movwf	fsr2l,c
  6320  001A8C  0E01               	movlw	high _dbuf
  6321  001A8E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6322  001A90  6EDA               	movwf	fsr2h,c
  6323  001A92  51A7               	movf	efgtoa@d& (0+255),w,b
  6324  001A94  0F30               	addlw	48
  6325  001A96  6EDF               	movwf	indf2,c
  6326  001A98                     
  6327                           ; BSR set to: 0
  6328  001A98  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6329  001A9A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6330  001A9C                     
  6331                           ; BSR set to: 0
  6332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  6333  001A9C  07AD               	decf	efgtoa@w& (0+255),f,b
  6334  001A9E  A0D8               	btfss	status,0,c
  6335  001AA0  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6336  001AA2                     l8695:
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  6340  001AA2  C0B1  F079         	movff	efgtoa@h,___flsub@b
  6341  001AA6  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  6342  001AAA  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  6343  001AAE  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  6344  001AB2  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  6345  001AB6  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  6346  001ABA  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  6347  001ABE  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  6348  001AC2  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  6349  001AC6  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  6350  001ACA  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  6351  001ACE  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  6352  001AD2  ECBD  F013         	call	___flmul	;wreg free
  6353  001AD6  C02A  F07D         	movff	?___flmul,___flsub@a
  6354  001ADA  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  6355  001ADE  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  6356  001AE2  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  6357  001AE6  ECB5  F02B         	call	___flsub	;wreg free
  6358  001AEA  C079  F0B1         	movff	?___flsub,efgtoa@h
  6359  001AEE  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  6360  001AF2  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  6361  001AF6  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  6362  001AFA                     
  6363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  6364  001AFA  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  6365  001AFE  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  6366  001B02  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  6367  001B06  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  6368  001B0A  0E00               	movlw	0
  6369  001B0C  6E2E               	movwf	___fldiv@a^0,c
  6370  001B0E  0E00               	movlw	0
  6371  001B10  6E2F               	movwf	(___fldiv@a+1)^0,c
  6372  001B12  0E20               	movlw	32
  6373  001B14  6E30               	movwf	(___fldiv@a+2)^0,c
  6374  001B16  0E41               	movlw	65
  6375  001B18  6E31               	movwf	(___fldiv@a+3)^0,c
  6376  001B1A  ECE5  F015         	call	___fldiv	;wreg free
  6377  001B1E  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  6378  001B22  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  6379  001B26  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  6380  001B2A  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  6381  001B2E                     
  6382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  6383  001B2E  0100               	movlb	0	; () banked
  6384  001B30  079F               	decf	efgtoa@ne& (0+255),f,b
  6385  001B32  A0D8               	btfss	status,0,c
  6386  001B34  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  6387  001B36                     
  6388                           ; BSR set to: 0
  6389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  6390  001B36  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  6391  001B38  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  6392  001B3A                     l8703:
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  6396  001B3A  51A1               	movf	efgtoa@m& (0+255),w,b
  6397  001B3C  5DB9               	subwf	efgtoa@i& (0+255),w,b
  6398  001B3E  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  6399  001B40  0A80               	xorlw	128
  6400  001B42  6F8A               	movwf	??_efgtoa& (0+255),b
  6401  001B44  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  6402  001B46  0A80               	xorlw	128
  6403  001B48  598A               	subwfb	??_efgtoa& (0+255),w,b
  6404  001B4A  B0D8               	btfsc	status,0,c
  6405  001B4C  EFAA  F00D         	goto	u9501
  6406  001B50  EFAC  F00D         	goto	u9500
  6407  001B54                     u9501:
  6408  001B54  EFBA  F00D         	goto	l8707
  6409  001B58                     u9500:
  6410  001B58                     
  6411                           ; BSR set to: 0
  6412  001B58  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6413  001B5A  EFB8  F00D         	goto	u9511
  6414  001B5E  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  6415  001B60  E109               	bnz	u9510
  6416  001B62  0E4B               	movlw	75
  6417  001B64  5DC1               	subwf	efgtoa@n& (0+255),w,b
  6418  001B66  A0D8               	btfss	status,0,c
  6419  001B68  EFB8  F00D         	goto	u9511
  6420  001B6C  EFBA  F00D         	goto	u9510
  6421  001B70                     u9511:
  6422  001B70  EFAF  F00C         	goto	l8655
  6423  001B74                     u9510:
  6424  001B74                     l8707:
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  6428  001B74  519D               	movf	efgtoa@pp& (0+255),w,b
  6429  001B76  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6430  001B78  A4D8               	btfss	status,2,c
  6431  001B7A  EFC1  F00D         	goto	u9521
  6432  001B7E  EFC3  F00D         	goto	u9520
  6433  001B82                     u9521:
  6434  001B82  EFD4  F00D         	goto	l8715
  6435  001B86                     u9520:
  6436  001B86                     
  6437                           ; BSR set to: 0
  6438  001B86  A83C               	btfss	_flags^0,4,c
  6439  001B88  EFC8  F00D         	goto	u9531
  6440  001B8C  EFCA  F00D         	goto	u9530
  6441  001B90                     u9531:
  6442  001B90  EFD4  F00D         	goto	l8715
  6443  001B94                     u9530:
  6444  001B94                     
  6445                           ; BSR set to: 0
  6446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  6447  001B94  0E3A               	movlw	low _dbuf
  6448  001B96  25C1               	addwf	efgtoa@n& (0+255),w,b
  6449  001B98  6ED9               	movwf	fsr2l,c
  6450  001B9A  0E01               	movlw	high _dbuf
  6451  001B9C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6452  001B9E  6EDA               	movwf	fsr2h,c
  6453  001BA0  0E2E               	movlw	46
  6454  001BA2  6EDF               	movwf	indf2,c
  6455  001BA4                     
  6456                           ; BSR set to: 0
  6457  001BA4  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  6458  001BA6  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  6459  001BA8                     l8715:
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  6463  001BA8  0E3A               	movlw	low _dbuf
  6464  001BAA  25C1               	addwf	efgtoa@n& (0+255),w,b
  6465  001BAC  6ED9               	movwf	fsr2l,c
  6466  001BAE  0E01               	movlw	high _dbuf
  6467  001BB0  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6468  001BB2  6EDA               	movwf	fsr2h,c
  6469  001BB4  0E00               	movlw	0
  6470  001BB6  6EDF               	movwf	indf2,c
  6471  001BB8                     
  6472                           ; BSR set to: 0
  6473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  6474  001BB8  0E65               	movlw	101
  6475  001BBA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  6476  001BBC  A4D8               	btfss	status,2,c
  6477  001BBE  EFE3  F00D         	goto	u9541
  6478  001BC2  EFE5  F00D         	goto	u9540
  6479  001BC6                     u9541:
  6480  001BC6  EFB7  F00E         	goto	l8777
  6481  001BCA                     u9540:
  6482  001BCA                     
  6483                           ; BSR set to: 0
  6484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  6485  001BCA  0E00               	movlw	0
  6486  001BCC  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  6487  001BCE  0E4F               	movlw	79
  6488  001BD0  6FB9               	movwf	efgtoa@i& (0+255),b
  6489  001BD2                     
  6490                           ; BSR set to: 0
  6491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  6492  001BD2  0E3A               	movlw	low _dbuf
  6493  001BD4  25B9               	addwf	efgtoa@i& (0+255),w,b
  6494  001BD6  6ED9               	movwf	fsr2l,c
  6495  001BD8  0E01               	movlw	high _dbuf
  6496  001BDA  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6497  001BDC  6EDA               	movwf	fsr2h,c
  6498  001BDE  0E00               	movlw	0
  6499  001BE0  6EDF               	movwf	indf2,c
  6500  001BE2                     
  6501                           ; BSR set to: 0
  6502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  6503  001BE2  0E00               	movlw	0
  6504  001BE4  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6505  001BE6  0E00               	movlw	0
  6506  001BE8  6FA9               	movwf	efgtoa@sign& (0+255),b
  6507  001BEA                     
  6508                           ; BSR set to: 0
  6509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  6510  001BEA  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  6511  001BEC  EFFC  F00D         	goto	u9550
  6512  001BF0  EFFA  F00D         	goto	u9551
  6513  001BF4                     u9551:
  6514  001BF4  EF04  F00E         	goto	l8731
  6515  001BF8                     u9550:
  6516  001BF8                     
  6517                           ; BSR set to: 0
  6518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  6519  001BF8  0E00               	movlw	0
  6520  001BFA  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  6521  001BFC  0E01               	movlw	1
  6522  001BFE  6FA9               	movwf	efgtoa@sign& (0+255),b
  6523  001C00                     
  6524                           ; BSR set to: 0
  6525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  6526  001C00  6DBF               	negf	efgtoa@e& (0+255),b
  6527  001C02  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  6528  001C04  B0D8               	btfsc	status,0,c
  6529  001C06  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  6530  001C08                     l8731:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  6534  001C08  0E00               	movlw	0
  6535  001C0A  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  6536  001C0C  0E02               	movlw	2
  6537  001C0E  6FAB               	movwf	efgtoa@p& (0+255),b
  6538                           
  6539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6540  001C10  EF35  F00E         	goto	l8743
  6541  001C14                     l8733:
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  6545  001C14  07B9               	decf	efgtoa@i& (0+255),f,b
  6546  001C16  A0D8               	btfss	status,0,c
  6547  001C18  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6548  001C1A                     
  6549                           ; BSR set to: 0
  6550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  6551  001C1A  0E3A               	movlw	low _dbuf
  6552  001C1C  25B9               	addwf	efgtoa@i& (0+255),w,b
  6553  001C1E  6ED9               	movwf	fsr2l,c
  6554  001C20  0E01               	movlw	high _dbuf
  6555  001C22  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6556  001C24  6EDA               	movwf	fsr2h,c
  6557  001C26  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  6558  001C2A  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  6559  001C2E  0E00               	movlw	0
  6560  001C30  6E17               	movwf	(___awmod@divisor+1)^0,c
  6561  001C32  0E0A               	movlw	10
  6562  001C34  6E16               	movwf	___awmod@divisor^0,c
  6563  001C36  ECE6  F027         	call	___awmod	;wreg free
  6564  001C3A  5014               	movf	?___awmod^0,w,c
  6565  001C3C  0F30               	addlw	48
  6566  001C3E  6EDF               	movwf	indf2,c
  6567  001C40                     
  6568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  6569  001C40  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  6570  001C44  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  6571  001C48  0E00               	movlw	0
  6572  001C4A  6E17               	movwf	(___awdiv@divisor+1)^0,c
  6573  001C4C  0E0A               	movlw	10
  6574  001C4E  6E16               	movwf	___awdiv@divisor^0,c
  6575  001C50  ECC3  F026         	call	___awdiv	;wreg free
  6576  001C54  C014  F0BF         	movff	?___awdiv,efgtoa@e
  6577  001C58  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  6578  001C5C                     
  6579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  6580  001C5C  0100               	movlb	0	; () banked
  6581  001C5E  07AB               	decf	efgtoa@p& (0+255),f,b
  6582  001C60  A0D8               	btfss	status,0,c
  6583  001C62  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  6584  001C64                     
  6585                           ; BSR set to: 0
  6586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  6587  001C64  07AD               	decf	efgtoa@w& (0+255),f,b
  6588  001C66  A0D8               	btfss	status,0,c
  6589  001C68  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6590  001C6A                     l8743:
  6591                           
  6592                           ; BSR set to: 0
  6593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  6594  001C6A  51BF               	movf	efgtoa@e& (0+255),w,b
  6595  001C6C  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6596  001C6E  A4D8               	btfss	status,2,c
  6597  001C70  EF3C  F00E         	goto	u9561
  6598  001C74  EF3E  F00E         	goto	u9560
  6599  001C78                     u9561:
  6600  001C78  EF0A  F00E         	goto	l8733
  6601  001C7C                     u9560:
  6602  001C7C                     
  6603                           ; BSR set to: 0
  6604  001C7C  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6605  001C7E  EF4B  F00E         	goto	u9570
  6606  001C82  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  6607  001C84  E106               	bnz	u9571
  6608  001C86  05AB               	decf	efgtoa@p& (0+255),w,b
  6609  001C88  B0D8               	btfsc	status,0,c
  6610  001C8A  EF49  F00E         	goto	u9571
  6611  001C8E  EF4B  F00E         	goto	u9570
  6612  001C92                     u9571:
  6613  001C92  EF0A  F00E         	goto	l8733
  6614  001C96                     u9570:
  6615  001C96                     
  6616                           ; BSR set to: 0
  6617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  6618  001C96  07B9               	decf	efgtoa@i& (0+255),f,b
  6619  001C98  A0D8               	btfss	status,0,c
  6620  001C9A  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6621  001C9C                     
  6622                           ; BSR set to: 0
  6623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  6624  001C9C  51A9               	movf	efgtoa@sign& (0+255),w,b
  6625  001C9E  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6626  001CA0  A4D8               	btfss	status,2,c
  6627  001CA2  EF55  F00E         	goto	u9581
  6628  001CA6  EF57  F00E         	goto	u9580
  6629  001CAA                     u9581:
  6630  001CAA  EF5D  F00E         	goto	l8753
  6631  001CAE                     u9580:
  6632  001CAE                     
  6633                           ; BSR set to: 0
  6634  001CAE  0E00               	movlw	0
  6635  001CB0  6F96               	movwf	(_efgtoa$3575+1)& (0+255),b
  6636  001CB2  0E2B               	movlw	43
  6637  001CB4  6F95               	movwf	_efgtoa$3575& (0+255),b
  6638  001CB6  EF61  F00E         	goto	l8755
  6639  001CBA                     l8753:
  6640                           
  6641                           ; BSR set to: 0
  6642  001CBA  0E00               	movlw	0
  6643  001CBC  6F96               	movwf	(_efgtoa$3575+1)& (0+255),b
  6644  001CBE  0E2D               	movlw	45
  6645  001CC0  6F95               	movwf	_efgtoa$3575& (0+255),b
  6646  001CC2                     l8755:
  6647                           
  6648                           ; BSR set to: 0
  6649  001CC2  0E3A               	movlw	low _dbuf
  6650  001CC4  25B9               	addwf	efgtoa@i& (0+255),w,b
  6651  001CC6  6ED9               	movwf	fsr2l,c
  6652  001CC8  0E01               	movlw	high _dbuf
  6653  001CCA  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6654  001CCC  6EDA               	movwf	fsr2h,c
  6655  001CCE  0060  F257  FFDF   	movff	_efgtoa$3575,indf2
  6656  001CD4                     
  6657                           ; BSR set to: 0
  6658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  6659  001CD4  07AD               	decf	efgtoa@w& (0+255),f,b
  6660  001CD6  A0D8               	btfss	status,0,c
  6661  001CD8  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6662  001CDA                     
  6663                           ; BSR set to: 0
  6664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6665  001CDA  07B9               	decf	efgtoa@i& (0+255),f,b
  6666  001CDC  A0D8               	btfss	status,0,c
  6667  001CDE  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  6668  001CE0                     
  6669                           ; BSR set to: 0
  6670  001CE0  0EBF               	movlw	191
  6671  001CE2  6F8A               	movwf	??_efgtoa& (0+255),b
  6672  001CE4  0EFF               	movlw	255
  6673  001CE6  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  6674  001CE8  5189               	movf	efgtoa@c& (0+255),w,b
  6675  001CEA  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  6676  001CEC  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  6677  001CEE  518A               	movf	??_efgtoa& (0+255),w,b
  6678  001CF0  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6679  001CF2  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  6680  001CF4  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6681  001CF6  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  6682  001CF8  E10A               	bnz	u9590
  6683  001CFA  0E1A               	movlw	26
  6684  001CFC  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6685  001CFE  A0D8               	btfss	status,0,c
  6686  001D00  EF84  F00E         	goto	u9591
  6687  001D04  EF87  F00E         	goto	u9590
  6688  001D08                     u9591:
  6689  001D08  0E01               	movlw	1
  6690  001D0A  EF88  F00E         	goto	u9600
  6691  001D0E                     u9590:
  6692  001D0E  0E00               	movlw	0
  6693  001D10                     u9600:
  6694  001D10  6F99               	movwf	_efgtoa$3577& (0+255),b
  6695  001D12  6B9A               	clrf	(_efgtoa$3577+1)& (0+255),b
  6696  001D14                     
  6697                           ; BSR set to: 0
  6698  001D14  5199               	movf	_efgtoa$3577& (0+255),w,b
  6699  001D16  119A               	iorwf	(_efgtoa$3577+1)& (0+255),w,b
  6700  001D18  A4D8               	btfss	status,2,c
  6701  001D1A  EF91  F00E         	goto	u9611
  6702  001D1E  EF93  F00E         	goto	u9610
  6703  001D22                     u9611:
  6704  001D22  EF99  F00E         	goto	l8769
  6705  001D26                     u9610:
  6706  001D26                     
  6707                           ; BSR set to: 0
  6708  001D26  0E00               	movlw	0
  6709  001D28  6F98               	movwf	(_efgtoa$3576+1)& (0+255),b
  6710  001D2A  0E65               	movlw	101
  6711  001D2C  6F97               	movwf	_efgtoa$3576& (0+255),b
  6712  001D2E  EF9D  F00E         	goto	l8771
  6713  001D32                     l8769:
  6714                           
  6715                           ; BSR set to: 0
  6716  001D32  0E00               	movlw	0
  6717  001D34  6F98               	movwf	(_efgtoa$3576+1)& (0+255),b
  6718  001D36  0E45               	movlw	69
  6719  001D38  6F97               	movwf	_efgtoa$3576& (0+255),b
  6720  001D3A                     l8771:
  6721                           
  6722                           ; BSR set to: 0
  6723  001D3A  0E3A               	movlw	low _dbuf
  6724  001D3C  25B9               	addwf	efgtoa@i& (0+255),w,b
  6725  001D3E  6ED9               	movwf	fsr2l,c
  6726  001D40  0E01               	movlw	high _dbuf
  6727  001D42  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6728  001D44  6EDA               	movwf	fsr2h,c
  6729  001D46  0060  F25F  FFDF   	movff	_efgtoa$3576,indf2
  6730  001D4C                     
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  6733  001D4C  07AD               	decf	efgtoa@w& (0+255),f,b
  6734  001D4E  A0D8               	btfss	status,0,c
  6735  001D50  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  6736  001D52                     
  6737                           ; BSR set to: 0
  6738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6739  001D52  0E3A               	movlw	low _dbuf
  6740  001D54  25C1               	addwf	efgtoa@n& (0+255),w,b
  6741  001D56  6E14               	movwf	strcpy@dest^0,c
  6742  001D58  0E01               	movlw	high _dbuf
  6743  001D5A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6744  001D5C  6E15               	movwf	(strcpy@dest+1)^0,c
  6745  001D5E  0E3A               	movlw	low _dbuf
  6746  001D60  25B9               	addwf	efgtoa@i& (0+255),w,b
  6747  001D62  6E16               	movwf	strcpy@src^0,c
  6748  001D64  0E01               	movlw	high _dbuf
  6749  001D66  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6750  001D68  6E17               	movwf	(strcpy@src+1)^0,c
  6751  001D6A  EC35  F02A         	call	_strcpy	;wreg free
  6752  001D6E                     l8777:
  6753                           
  6754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  6755  001D6E  C083  F026         	movff	efgtoa@fp,pad@fp
  6756  001D72  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  6757  001D76  0E3A               	movlw	low _dbuf
  6758  001D78  6E28               	movwf	pad@buf^0,c
  6759  001D7A  0E01               	movlw	high _dbuf
  6760  001D7C  6E29               	movwf	(pad@buf+1)^0,c
  6761  001D7E  C0AD  F02A         	movff	efgtoa@w,pad@p
  6762  001D82  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  6763  001D86  EC25  F027         	call	_pad	;wreg free
  6764  001D8A  C026  F083         	movff	?_pad,?_efgtoa
  6765  001D8E  C027  F084         	movff	?_pad+1,?_efgtoa+1
  6766  001D92                     l2183:
  6767  001D92  0012               	return		;funcret
  6768  001D94                     __end_of_efgtoa:
  6769                           	callstack 0
  6770                           
  6771 ;; *************** function _tolower *****************
  6772 ;; Defined at:
  6773 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;  c               2   25[COMRAM] int 
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;		None
  6778 ;; Return value:  Size  Location     Type
  6779 ;;                  2   25[COMRAM] int 
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0
  6782 ;; Tracked objects:
  6783 ;;		On entry : 0/0
  6784 ;;		On exit  : 0/0
  6785 ;;		Unchanged: 0/0
  6786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;Total ram usage:        8 bytes
  6792 ;; Hardware stack levels used: 1
  6793 ;; Hardware stack levels required when called: 9
  6794 ;; This function calls:
  6795 ;;		_isupper
  6796 ;; This function is called by:
  6797 ;;		_efgtoa
  6798 ;;		_vfpfcnvrt
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	text16
  6803  0054D4                     __ptext16:
  6804                           	callstack 0
  6805  0054D4                     _tolower:
  6806                           	callstack 16
  6807  0054D4  0EBF               	movlw	191
  6808  0054D6  6E1C               	movwf	??_tolower^0,c
  6809  0054D8  0EFF               	movlw	255
  6810  0054DA  6E1D               	movwf	(??_tolower+1)^0,c
  6811  0054DC  C01A  F01E         	movff	tolower@c,??_tolower+2
  6812  0054E0  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  6813  0054E4  501C               	movf	??_tolower^0,w,c
  6814  0054E6  261E               	addwf	(??_tolower+2)^0,f,c
  6815  0054E8  501D               	movf	(??_tolower+1)^0,w,c
  6816  0054EA  221F               	addwfc	(??_tolower+3)^0,f,c
  6817  0054EC  501F               	movf	(??_tolower+3)^0,w,c
  6818  0054EE  E10A               	bnz	u8800
  6819  0054F0  0E1A               	movlw	26
  6820  0054F2  5C1E               	subwf	(??_tolower+2)^0,w,c
  6821  0054F4  A0D8               	btfss	status,0,c
  6822  0054F6  EF7F  F02A         	goto	u8801
  6823  0054FA  EF82  F02A         	goto	u8800
  6824  0054FE                     u8801:
  6825  0054FE  0E01               	movlw	1
  6826  005500  EF83  F02A         	goto	u8810
  6827  005504                     u8800:
  6828  005504  0E00               	movlw	0
  6829  005506                     u8810:
  6830  005506  6E20               	movwf	_tolower$3688^0,c
  6831  005508  6A21               	clrf	(_tolower$3688+1)^0,c
  6832  00550A  5020               	movf	_tolower$3688^0,w,c
  6833  00550C  1021               	iorwf	(_tolower$3688+1)^0,w,c
  6834  00550E  B4D8               	btfsc	status,2,c
  6835  005510  EF8C  F02A         	goto	u8821
  6836  005514  EF8E  F02A         	goto	u8820
  6837  005518                     u8821:
  6838  005518  EF95  F02A         	goto	l2365
  6839  00551C                     u8820:
  6840  00551C  0E20               	movlw	32
  6841  00551E  101A               	iorwf	tolower@c^0,w,c
  6842  005520  6E1A               	movwf	?_tolower^0,c
  6843  005522  501B               	movf	(tolower@c+1)^0,w,c
  6844  005524  6E1B               	movwf	(?_tolower+1)^0,c
  6845  005526  EF99  F02A         	goto	l2370
  6846  00552A                     l2365:
  6847  00552A  C01A  F01A         	movff	tolower@c,?_tolower
  6848  00552E  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  6849  005532                     l2370:
  6850  005532  0012               	return		;funcret
  6851  005534                     __end_of_tolower:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _isupper *****************
  6855 ;; Defined at:
  6856 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  c               2   19[COMRAM] int 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;		None
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  2   19[COMRAM] int 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;Total ram usage:        6 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 8
  6877 ;; This function calls:
  6878 ;;		Nothing
  6879 ;; This function is called by:
  6880 ;;		_efgtoa
  6881 ;;		_vfpfcnvrt
  6882 ;;		_tolower
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text17
  6887  00592A                     __ptext17:
  6888                           	callstack 0
  6889  00592A                     _isupper:
  6890                           	callstack 16
  6891  00592A  0EBF               	movlw	191
  6892  00592C  6E16               	movwf	??_isupper^0,c
  6893  00592E  0EFF               	movlw	255
  6894  005930  6E17               	movwf	(??_isupper+1)^0,c
  6895  005932  C014  F018         	movff	isupper@c,??_isupper+2
  6896  005936  C015  F019         	movff	isupper@c+1,??_isupper+3
  6897  00593A  5016               	movf	??_isupper^0,w,c
  6898  00593C  2618               	addwf	(??_isupper+2)^0,f,c
  6899  00593E  5017               	movf	(??_isupper+1)^0,w,c
  6900  005940  2219               	addwfc	(??_isupper+3)^0,f,c
  6901  005942  5019               	movf	(??_isupper+3)^0,w,c
  6902  005944  E10A               	bnz	u7810
  6903  005946  0E1A               	movlw	26
  6904  005948  5C18               	subwf	(??_isupper+2)^0,w,c
  6905  00594A  A0D8               	btfss	status,0,c
  6906  00594C  EFAA  F02C         	goto	u7811
  6907  005950  EFAD  F02C         	goto	u7810
  6908  005954                     u7811:
  6909  005954  0E01               	movlw	1
  6910  005956  EFAE  F02C         	goto	u7820
  6911  00595A                     u7810:
  6912  00595A  0E00               	movlw	0
  6913  00595C                     u7820:
  6914  00595C  6E14               	movwf	?_isupper^0,c
  6915  00595E  6A15               	clrf	(?_isupper+1)^0,c
  6916  005960  0012               	return		;funcret
  6917  005962                     __end_of_isupper:
  6918                           	callstack 0
  6919                           
  6920 ;; *************** function _strcpy *****************
  6921 ;; Defined at:
  6922 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6925 ;;		 -> dbuf(80), 
  6926 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6927 ;;		 -> STR_23(4), STR_22(4), STR_19(4), STR_18(4), 
  6928 ;;		 -> dbuf(80), 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  d               2   27[COMRAM] PTR unsigned char 
  6931 ;;		 -> dbuf(80), 
  6932 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6933 ;;		 -> STR_23(4), STR_22(4), STR_19(4), STR_18(4), 
  6934 ;;		 -> dbuf(80), 
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  2   19[COMRAM] PTR unsigned char 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;Total ram usage:       10 bytes
  6949 ;; Hardware stack levels used: 1
  6950 ;; Hardware stack levels required when called: 8
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_efgtoa
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text18
  6959  00546A                     __ptext18:
  6960                           	callstack 0
  6961  00546A                     _strcpy:
  6962                           	callstack 16
  6963  00546A  C016  F01A         	movff	strcpy@src,strcpy@s
  6964  00546E  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6965  005472  C014  F01C         	movff	strcpy@dest,strcpy@d
  6966  005476  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6967  00547A                     l8371:
  6968  00547A  501A               	movf	strcpy@s^0,w,c
  6969  00547C  6E18               	movwf	??_strcpy^0,c
  6970  00547E  501B               	movf	(strcpy@s+1)^0,w,c
  6971  005480  6E19               	movwf	(??_strcpy+1)^0,c
  6972  005482  4A1A               	infsnz	strcpy@s^0,f,c
  6973  005484  2A1B               	incf	(strcpy@s+1)^0,f,c
  6974  005486  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6975  00548C  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6976  005492  0E00               	movlw	low (__smallconst shr (0+16))
  6977  005494  6EF8               	movwf	tblptru,c
  6978  005496  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6979  00549C  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6980  0054A2  4A1C               	infsnz	strcpy@d^0,f,c
  6981  0054A4  2A1D               	incf	(strcpy@d+1)^0,f,c
  6982  0054A6  0E0F               	movlw	(high __ramtop+-1)
  6983  0054A8  64F7               	cpfsgt	tblptrh,c
  6984  0054AA  D003               	bra	u8787
  6985  0054AC  0008               	tblrd		*
  6986  0054AE  50F5               	movf	tablat,w,c
  6987  0054B0  D007               	bra	u8780
  6988  0054B2                     u8787:
  6989  0054B2  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6990  0054B8  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6991  0054BE  50EF               	movf	indf0,w,c
  6992  0054C0                     u8780:
  6993  0054C0  6EDF               	movwf	indf2,c
  6994  0054C2  50DF               	movf	indf2,w,c
  6995  0054C4  A4D8               	btfss	status,2,c
  6996  0054C6  EF67  F02A         	goto	u8791
  6997  0054CA  EF69  F02A         	goto	u8790
  6998  0054CE                     u8791:
  6999  0054CE  EF3D  F02A         	goto	l8371
  7000  0054D2                     u8790:
  7001  0054D2  0012               	return		;funcret
  7002  0054D4                     __end_of_strcpy:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function _floorf *****************
  7006 ;; Defined at:
  7007 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  x               4   53[COMRAM] float 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  u               4   25[BANK0 ] struct .
  7012 ;;  m               4   19[BANK0 ] unsigned long 
  7013 ;;  e               2   23[BANK0 ] int 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  4   53[COMRAM] float 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;Total ram usage:       20 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 8
  7030 ;; This function calls:
  7031 ;;		Nothing
  7032 ;; This function is called by:
  7033 ;;		_efgtoa
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text19
  7038  003A8A                     __ptext19:
  7039                           	callstack 0
  7040  003A8A                     _floorf:
  7041                           	callstack 16
  7042  003A8A  C118  F079         	movff	floorf@F527,floorf@u
  7043  003A8E  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  7044  003A92  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  7045  003A96  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  7046  003A9A  C036  F079         	movff	floorf@x,floorf@u
  7047  003A9E  C037  F07A         	movff	floorf@x+1,floorf@u+1
  7048  003AA2  C038  F07B         	movff	floorf@x+2,floorf@u+2
  7049  003AA6  C039  F07C         	movff	floorf@x+3,floorf@u+3
  7050  003AAA  0E81               	movlw	129
  7051  003AAC  0100               	movlb	0	; () banked
  7052  003AAE  6F6D               	movwf	??_floorf& (0+255),b
  7053  003AB0  0EFF               	movlw	255
  7054  003AB2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7055  003AB4  C079  F06F         	movff	floorf@u,??_floorf+2
  7056  003AB8  C07A  F070         	movff	floorf@u+1,??_floorf+3
  7057  003ABC  C07B  F071         	movff	floorf@u+2,??_floorf+4
  7058  003AC0  C07C  F072         	movff	floorf@u+3,??_floorf+5
  7059  003AC4  0E18               	movlw	24
  7060  003AC6  EF6A  F01D         	goto	u8830
  7061  003ACA                     u8835:
  7062  003ACA  90D8               	bcf	status,0,c
  7063  003ACC  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  7064  003ACE  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  7065  003AD0  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7066  003AD2  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7067  003AD4                     u8830:
  7068  003AD4  2EE8               	decfsz	wreg,f,c
  7069  003AD6  EF65  F01D         	goto	u8835
  7070  003ADA  516F               	movf	(??_floorf+2)& (0+255),w,b
  7071  003ADC  256D               	addwf	??_floorf& (0+255),w,b
  7072  003ADE  6F77               	movwf	floorf@e& (0+255),b
  7073  003AE0  0E00               	movlw	0
  7074  003AE2  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  7075  003AE4  6F78               	movwf	(floorf@e+1)& (0+255),b
  7076  003AE6  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  7077  003AE8  EF7F  F01D         	goto	u8841
  7078  003AEC  5178               	movf	(floorf@e+1)& (0+255),w,b
  7079  003AEE  E109               	bnz	u8840
  7080  003AF0  0E17               	movlw	23
  7081  003AF2  5D77               	subwf	floorf@e& (0+255),w,b
  7082  003AF4  A0D8               	btfss	status,0,c
  7083  003AF6  EF7F  F01D         	goto	u8841
  7084  003AFA  EF81  F01D         	goto	u8840
  7085  003AFE                     u8841:
  7086  003AFE  EF8B  F01D         	goto	l8389
  7087  003B02                     u8840:
  7088  003B02                     l8387:
  7089                           
  7090                           ; BSR set to: 0
  7091  003B02  C036  F036         	movff	floorf@x,?_floorf
  7092  003B06  C037  F037         	movff	floorf@x+1,?_floorf+1
  7093  003B0A  C038  F038         	movff	floorf@x+2,?_floorf+2
  7094  003B0E  C039  F039         	movff	floorf@x+3,?_floorf+3
  7095  003B12  EF4F  F01E         	goto	l2306
  7096  003B16                     l8389:
  7097                           
  7098                           ; BSR set to: 0
  7099  003B16  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  7100  003B18  EF90  F01D         	goto	u8851
  7101  003B1C  EF92  F01D         	goto	u8850
  7102  003B20                     u8851:
  7103  003B20  EF03  F01E         	goto	l8399
  7104  003B24                     u8850:
  7105  003B24                     
  7106                           ; BSR set to: 0
  7107  003B24  C077  F06D         	movff	floorf@e,??_floorf
  7108  003B28  0EFF               	movlw	255
  7109  003B2A  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7110  003B2C  0EFF               	movlw	255
  7111  003B2E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7112  003B30  0E7F               	movlw	127
  7113  003B32  6F70               	movwf	(??_floorf+3)& (0+255),b
  7114  003B34  0E00               	movlw	0
  7115  003B36  6F71               	movwf	(??_floorf+4)& (0+255),b
  7116  003B38                     u8865:
  7117  003B38  676D               	tstfsz	??_floorf& (0+255),b
  7118  003B3A  EFA1  F01D         	goto	u8866
  7119  003B3E  EFA9  F01D         	goto	u8867
  7120  003B42                     u8866:
  7121  003B42  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  7122  003B44  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  7123  003B46  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7124  003B48  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7125  003B4A  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  7126  003B4C  2F6D               	decfsz	??_floorf& (0+255),f,b
  7127  003B4E  EF9C  F01D         	goto	u8865
  7128  003B52                     u8867:
  7129  003B52  C06E  F073         	movff	??_floorf+1,floorf@m
  7130  003B56  C06F  F074         	movff	??_floorf+2,floorf@m+1
  7131  003B5A  C070  F075         	movff	??_floorf+3,floorf@m+2
  7132  003B5E  C071  F076         	movff	??_floorf+4,floorf@m+3
  7133  003B62  0100               	movlb	0	; () banked
  7134  003B64  5173               	movf	floorf@m& (0+255),w,b
  7135  003B66  1579               	andwf	floorf@u& (0+255),w,b
  7136  003B68  6F6D               	movwf	??_floorf& (0+255),b
  7137  003B6A  5174               	movf	(floorf@m+1)& (0+255),w,b
  7138  003B6C  157A               	andwf	(floorf@u+1)& (0+255),w,b
  7139  003B6E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7140  003B70  5175               	movf	(floorf@m+2)& (0+255),w,b
  7141  003B72  157B               	andwf	(floorf@u+2)& (0+255),w,b
  7142  003B74  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7143  003B76  5176               	movf	(floorf@m+3)& (0+255),w,b
  7144  003B78  157C               	andwf	(floorf@u+3)& (0+255),w,b
  7145  003B7A  6F70               	movwf	(??_floorf+3)& (0+255),b
  7146  003B7C  516D               	movf	??_floorf& (0+255),w,b
  7147  003B7E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7148  003B80  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7149  003B82  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7150  003B84  A4D8               	btfss	status,2,c
  7151  003B86  EFC7  F01D         	goto	u8871
  7152  003B8A  EFC9  F01D         	goto	u8870
  7153  003B8E                     u8871:
  7154  003B8E  EFCB  F01D         	goto	l8395
  7155  003B92                     u8870:
  7156  003B92  EF81  F01D         	goto	l8387
  7157  003B96                     l8395:
  7158                           
  7159                           ; BSR set to: 0
  7160  003B96  C079  F06D         	movff	floorf@u,??_floorf
  7161  003B9A  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  7162  003B9E  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  7163  003BA2  C07C  F070         	movff	floorf@u+3,??_floorf+3
  7164  003BA6  0E20               	movlw	32
  7165  003BA8  EFDB  F01D         	goto	u8880
  7166  003BAC                     u8885:
  7167  003BAC  90D8               	bcf	status,0,c
  7168  003BAE  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7169  003BB0  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7170  003BB2  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  7171  003BB4  336D               	rrcf	??_floorf& (0+255),f,b
  7172  003BB6                     u8880:
  7173  003BB6  2EE8               	decfsz	wreg,f,c
  7174  003BB8  EFD6  F01D         	goto	u8885
  7175  003BBC  516D               	movf	??_floorf& (0+255),w,b
  7176  003BBE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7177  003BC0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7178  003BC2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7179  003BC4  B4D8               	btfsc	status,2,c
  7180  003BC6  EFE7  F01D         	goto	u8891
  7181  003BCA  EFE9  F01D         	goto	u8890
  7182  003BCE                     u8891:
  7183  003BCE  EFF1  F01D         	goto	l2309
  7184  003BD2                     u8890:
  7185  003BD2                     
  7186                           ; BSR set to: 0
  7187  003BD2  5173               	movf	floorf@m& (0+255),w,b
  7188  003BD4  2779               	addwf	floorf@u& (0+255),f,b
  7189  003BD6  5174               	movf	(floorf@m+1)& (0+255),w,b
  7190  003BD8  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  7191  003BDA  5175               	movf	(floorf@m+2)& (0+255),w,b
  7192  003BDC  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  7193  003BDE  5176               	movf	(floorf@m+3)& (0+255),w,b
  7194  003BE0  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  7195  003BE2                     l2309:
  7196                           
  7197                           ; BSR set to: 0
  7198  003BE2  1D73               	comf	floorf@m& (0+255),w,b
  7199  003BE4  6F6D               	movwf	??_floorf& (0+255),b
  7200  003BE6  1D74               	comf	(floorf@m+1)& (0+255),w,b
  7201  003BE8  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7202  003BEA  1D75               	comf	(floorf@m+2)& (0+255),w,b
  7203  003BEC  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7204  003BEE  1D76               	comf	(floorf@m+3)& (0+255),w,b
  7205  003BF0  6F70               	movwf	(??_floorf+3)& (0+255),b
  7206  003BF2  516D               	movf	??_floorf& (0+255),w,b
  7207  003BF4  1779               	andwf	floorf@u& (0+255),f,b
  7208  003BF6  516E               	movf	(??_floorf+1)& (0+255),w,b
  7209  003BF8  177A               	andwf	(floorf@u+1)& (0+255),f,b
  7210  003BFA  516F               	movf	(??_floorf+2)& (0+255),w,b
  7211  003BFC  177B               	andwf	(floorf@u+2)& (0+255),f,b
  7212  003BFE  5170               	movf	(??_floorf+3)& (0+255),w,b
  7213  003C00  177C               	andwf	(floorf@u+3)& (0+255),f,b
  7214  003C02  EF47  F01E         	goto	l8407
  7215  003C06                     l8399:
  7216                           
  7217                           ; BSR set to: 0
  7218  003C06  C079  F06D         	movff	floorf@u,??_floorf
  7219  003C0A  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  7220  003C0E  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  7221  003C12  C07C  F070         	movff	floorf@u+3,??_floorf+3
  7222  003C16  0E20               	movlw	32
  7223  003C18  EF13  F01E         	goto	u8900
  7224  003C1C                     u8905:
  7225  003C1C  90D8               	bcf	status,0,c
  7226  003C1E  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  7227  003C20  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  7228  003C22  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  7229  003C24  336D               	rrcf	??_floorf& (0+255),f,b
  7230  003C26                     u8900:
  7231  003C26  2EE8               	decfsz	wreg,f,c
  7232  003C28  EF0E  F01E         	goto	u8905
  7233  003C2C  516D               	movf	??_floorf& (0+255),w,b
  7234  003C2E  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7235  003C30  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7236  003C32  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7237  003C34  A4D8               	btfss	status,2,c
  7238  003C36  EF1F  F01E         	goto	u8911
  7239  003C3A  EF21  F01E         	goto	u8910
  7240  003C3E                     u8911:
  7241  003C3E  EF2B  F01E         	goto	l8403
  7242  003C42                     u8910:
  7243  003C42                     
  7244                           ; BSR set to: 0
  7245  003C42  0E00               	movlw	0
  7246  003C44  6F79               	movwf	floorf@u& (0+255),b
  7247  003C46  0E00               	movlw	0
  7248  003C48  6F7A               	movwf	(floorf@u+1)& (0+255),b
  7249  003C4A  0E00               	movlw	0
  7250  003C4C  6F7B               	movwf	(floorf@u+2)& (0+255),b
  7251  003C4E  0E00               	movlw	0
  7252  003C50  6F7C               	movwf	(floorf@u+3)& (0+255),b
  7253  003C52  EF47  F01E         	goto	l8407
  7254  003C56                     l8403:
  7255                           
  7256                           ; BSR set to: 0
  7257  003C56  90D8               	bcf	status,0,c
  7258  003C58  3579               	rlcf	floorf@u& (0+255),w,b
  7259  003C5A  6F6D               	movwf	??_floorf& (0+255),b
  7260  003C5C  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  7261  003C5E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  7262  003C60  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  7263  003C62  6F6F               	movwf	(??_floorf+2)& (0+255),b
  7264  003C64  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  7265  003C66  6F70               	movwf	(??_floorf+3)& (0+255),b
  7266  003C68  516D               	movf	??_floorf& (0+255),w,b
  7267  003C6A  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  7268  003C6C  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  7269  003C6E  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  7270  003C70  B4D8               	btfsc	status,2,c
  7271  003C72  EF3D  F01E         	goto	u8921
  7272  003C76  EF3F  F01E         	goto	u8920
  7273  003C7A                     u8921:
  7274  003C7A  EF47  F01E         	goto	l8407
  7275  003C7E                     u8920:
  7276  003C7E                     
  7277                           ; BSR set to: 0
  7278  003C7E  0E00               	movlw	0
  7279  003C80  6F79               	movwf	floorf@u& (0+255),b
  7280  003C82  0E00               	movlw	0
  7281  003C84  6F7A               	movwf	(floorf@u+1)& (0+255),b
  7282  003C86  0E80               	movlw	128
  7283  003C88  6F7B               	movwf	(floorf@u+2)& (0+255),b
  7284  003C8A  0EBF               	movlw	191
  7285  003C8C  6F7C               	movwf	(floorf@u+3)& (0+255),b
  7286  003C8E                     l8407:
  7287                           
  7288                           ; BSR set to: 0
  7289  003C8E  C079  F036         	movff	floorf@u,?_floorf
  7290  003C92  C07A  F037         	movff	floorf@u+1,?_floorf+1
  7291  003C96  C07B  F038         	movff	floorf@u+2,?_floorf+2
  7292  003C9A  C07C  F039         	movff	floorf@u+3,?_floorf+3
  7293  003C9E                     l2306:
  7294                           
  7295                           ; BSR set to: 0
  7296  003C9E  0012               	return		;funcret
  7297  003CA0                     __end_of_floorf:
  7298                           	callstack 0
  7299                           
  7300 ;; *************** function ___fpclassifyf *****************
  7301 ;; Defined at:
  7302 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  x               4   19[COMRAM] float 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  u               4   29[COMRAM] struct .
  7307 ;;  e               2   27[COMRAM] int 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  2   19[COMRAM] int 
  7310 ;; Registers used:
  7311 ;;		wreg, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;Total ram usage:       14 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 8
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_efgtoa
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text20
  7332  0049E8                     __ptext20:
  7333                           	callstack 0
  7334  0049E8                     ___fpclassifyf:
  7335                           	callstack 16
  7336  0049E8  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  7337  0049EC  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  7338  0049F0  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  7339  0049F4  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  7340  0049F8  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  7341  0049FC  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7342  004A00  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7343  004A04  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7344  004A08  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7345  004A0C  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7346  004A10  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7347  004A14  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7348  004A18  0E18               	movlw	24
  7349  004A1A  EF14  F025         	goto	u8710
  7350  004A1E                     u8715:
  7351  004A1E  90D8               	bcf	status,0,c
  7352  004A20  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  7353  004A22  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  7354  004A24  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  7355  004A26  3218               	rrcf	??___fpclassifyf^0,f,c
  7356  004A28                     u8710:
  7357  004A28  2EE8               	decfsz	wreg,f,c
  7358  004A2A  EF0F  F025         	goto	u8715
  7359  004A2E  5018               	movf	??___fpclassifyf^0,w,c
  7360  004A30  6E1C               	movwf	___fpclassifyf@e^0,c
  7361  004A32  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  7362  004A34  501C               	movf	___fpclassifyf@e^0,w,c
  7363  004A36  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7364  004A38  A4D8               	btfss	status,2,c
  7365  004A3A  EF21  F025         	goto	u8721
  7366  004A3E  EF23  F025         	goto	u8720
  7367  004A42                     u8721:
  7368  004A42  EF43  F025         	goto	l8359
  7369  004A46                     u8720:
  7370  004A46  90D8               	bcf	status,0,c
  7371  004A48  341E               	rlcf	___fpclassifyf@u^0,w,c
  7372  004A4A  6E18               	movwf	??___fpclassifyf^0,c
  7373  004A4C  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7374  004A4E  6E19               	movwf	(??___fpclassifyf+1)^0,c
  7375  004A50  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7376  004A52  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  7377  004A54  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7378  004A56  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  7379  004A58  5018               	movf	??___fpclassifyf^0,w,c
  7380  004A5A  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7381  004A5C  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7382  004A5E  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7383  004A60  A4D8               	btfss	status,2,c
  7384  004A62  EF35  F025         	goto	u8731
  7385  004A66  EF37  F025         	goto	u8730
  7386  004A6A                     u8731:
  7387  004A6A  EF3D  F025         	goto	l8355
  7388  004A6E                     u8730:
  7389  004A6E  0E00               	movlw	0
  7390  004A70  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7391  004A72  0E02               	movlw	2
  7392  004A74  6E14               	movwf	?___fpclassifyf^0,c
  7393  004A76  EF72  F025         	goto	l2292
  7394  004A7A                     l8355:
  7395  004A7A  0E00               	movlw	0
  7396  004A7C  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7397  004A7E  0E03               	movlw	3
  7398  004A80  6E14               	movwf	?___fpclassifyf^0,c
  7399  004A82  EF72  F025         	goto	l2292
  7400  004A86                     l8359:
  7401  004A86  281C               	incf	___fpclassifyf@e^0,w,c
  7402  004A88  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7403  004A8A  A4D8               	btfss	status,2,c
  7404  004A8C  EF4A  F025         	goto	u8741
  7405  004A90  EF4C  F025         	goto	u8740
  7406  004A94                     u8741:
  7407  004A94  EF6E  F025         	goto	l8365
  7408  004A98                     u8740:
  7409  004A98  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  7410  004A9C  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7411  004AA0  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7412  004AA4  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7413  004AA8  0E09               	movlw	9
  7414  004AAA                     u8755:
  7415  004AAA  90D8               	bcf	status,0,c
  7416  004AAC  3618               	rlcf	??___fpclassifyf^0,f,c
  7417  004AAE  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  7418  004AB0  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  7419  004AB2  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  7420  004AB4  2EE8               	decfsz	wreg,f,c
  7421  004AB6  EF55  F025         	goto	u8755
  7422  004ABA  5018               	movf	??___fpclassifyf^0,w,c
  7423  004ABC  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  7424  004ABE  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  7425  004AC0  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  7426  004AC2  B4D8               	btfsc	status,2,c
  7427  004AC4  EF66  F025         	goto	u8761
  7428  004AC8  EF69  F025         	goto	u8760
  7429  004ACC                     u8761:
  7430  004ACC  0E01               	movlw	1
  7431  004ACE  EF6A  F025         	goto	u8770
  7432  004AD2                     u8760:
  7433  004AD2  0E00               	movlw	0
  7434  004AD4                     u8770:
  7435  004AD4  6E14               	movwf	?___fpclassifyf^0,c
  7436  004AD6  6A15               	clrf	(?___fpclassifyf+1)^0,c
  7437  004AD8  EF72  F025         	goto	l2292
  7438  004ADC                     l8365:
  7439  004ADC  0E00               	movlw	0
  7440  004ADE  6E15               	movwf	(?___fpclassifyf+1)^0,c
  7441  004AE0  0E04               	movlw	4
  7442  004AE2  6E14               	movwf	?___fpclassifyf^0,c
  7443  004AE4                     l2292:
  7444  004AE4  0012               	return		;funcret
  7445  004AE6                     __end_of___fpclassifyf:
  7446                           	callstack 0
  7447                           
  7448 ;; *************** function ___flsub *****************
  7449 ;; Defined at:
  7450 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  b               4   25[BANK0 ] int 
  7453 ;;  a               4   29[BANK0 ] int 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  4   25[BANK0 ] int 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7465 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7468 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;Total ram usage:        8 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 9
  7472 ;; This function calls:
  7473 ;;		___fladd
  7474 ;; This function is called by:
  7475 ;;		_efgtoa
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479                           	psect	text21
  7480  00576A                     __ptext21:
  7481                           	callstack 0
  7482  00576A                     ___flsub:
  7483                           	callstack 15
  7484  00576A  0E00               	movlw	0
  7485  00576C  0100               	movlb	0	; () banked
  7486  00576E  1B7D               	xorwf	___flsub@a& (0+255),f,b
  7487  005770  0E00               	movlw	0
  7488  005772  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7489  005774  0E00               	movlw	0
  7490  005776  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7491  005778  0E80               	movlw	128
  7492  00577A  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  7493  00577C                     
  7494                           ; BSR set to: 0
  7495  00577C  C079  F06D         	movff	___flsub@b,___fladd@b
  7496  005780  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  7497  005784  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  7498  005788  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  7499  00578C  C07D  F071         	movff	___flsub@a,___fladd@a
  7500  005790  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  7501  005794  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  7502  005798  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  7503  00579C  EC5C  F011         	call	___fladd	;wreg free
  7504  0057A0  C06D  F079         	movff	?___fladd,?___flsub
  7505  0057A4  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  7506  0057A8  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  7507  0057AC  C070  F07C         	movff	?___fladd+3,?___flsub+3
  7508  0057B0  0012               	return		;funcret
  7509  0057B2                     __end_of___flsub:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function ___flneg *****************
  7513 ;; Defined at:
  7514 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  f1              4   19[COMRAM] int 
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  4   19[COMRAM] int 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;Total ram usage:        4 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 8
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_efgtoa
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text22
  7543  005962                     __ptext22:
  7544                           	callstack 0
  7545  005962                     ___flneg:
  7546                           	callstack 16
  7547  005962  5014               	movf	___flneg@f1^0,w,c
  7548  005964  1015               	iorwf	(___flneg@f1+1)^0,w,c
  7549  005966  1016               	iorwf	(___flneg@f1+2)^0,w,c
  7550  005968  1017               	iorwf	(___flneg@f1+3)^0,w,c
  7551  00596A  B4D8               	btfsc	status,2,c
  7552  00596C  EFBA  F02C         	goto	u8581
  7553  005970  EFBC  F02C         	goto	u8580
  7554  005974                     u8581:
  7555  005974  EFC4  F02C         	goto	l8273
  7556  005978                     u8580:
  7557  005978  0E00               	movlw	0
  7558  00597A  1A14               	xorwf	___flneg@f1^0,f,c
  7559  00597C  0E00               	movlw	0
  7560  00597E  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  7561  005980  0E00               	movlw	0
  7562  005982  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  7563  005984  0E80               	movlw	128
  7564  005986  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  7565  005988                     l8273:
  7566  005988  C014  F014         	movff	___flneg@f1,?___flneg
  7567  00598C  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  7568  005990  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  7569  005994  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  7570  005998  0012               	return		;funcret
  7571  00599A                     __end_of___flneg:
  7572                           	callstack 0
  7573                           
  7574 ;; *************** function ___flge *****************
  7575 ;; Defined at:
  7576 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7577 ;; Parameters:    Size  Location     Type
  7578 ;;  ff1             4   13[BANK0 ] int 
  7579 ;;  ff2             4   17[BANK0 ] int 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;		None               void
  7584 ;; Registers used:
  7585 ;;		wreg, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7591 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7593 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7594 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7595 ;;Total ram usage:       12 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 8
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_loop
  7602 ;;		_checkBatt
  7603 ;;		_efgtoa
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text23
  7608  0048E2                     __ptext23:
  7609                           	callstack 0
  7610  0048E2                     ___flge:
  7611                           	callstack 16
  7612  0048E2  0E00               	movlw	0
  7613  0048E4  0100               	movlb	0	; () banked
  7614  0048E6  156D               	andwf	___flge@ff1& (0+255),w,b
  7615  0048E8  6E36               	movwf	??___flge^0,c
  7616  0048EA  0E00               	movlw	0
  7617  0048EC  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  7618  0048EE  6E37               	movwf	(??___flge+1)^0,c
  7619  0048F0  0E80               	movlw	128
  7620  0048F2  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  7621  0048F4  6E38               	movwf	(??___flge+2)^0,c
  7622  0048F6  0E7F               	movlw	127
  7623  0048F8  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  7624  0048FA  6E39               	movwf	(??___flge+3)^0,c
  7625  0048FC  5036               	movf	??___flge^0,w,c
  7626  0048FE  1037               	iorwf	(??___flge+1)^0,w,c
  7627  004900  1038               	iorwf	(??___flge+2)^0,w,c
  7628  004902  1039               	iorwf	(??___flge+3)^0,w,c
  7629  004904  A4D8               	btfss	status,2,c
  7630  004906  EF87  F024         	goto	u8531
  7631  00490A  EF89  F024         	goto	u8530
  7632  00490E                     u8531:
  7633  00490E  EF91  F024         	goto	l8251
  7634  004912                     u8530:
  7635  004912                     
  7636                           ; BSR set to: 0
  7637  004912  0E00               	movlw	0
  7638  004914  6F6D               	movwf	___flge@ff1& (0+255),b
  7639  004916  0E00               	movlw	0
  7640  004918  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  7641  00491A  0E00               	movlw	0
  7642  00491C  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  7643  00491E  0E00               	movlw	0
  7644  004920  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  7645  004922                     l8251:
  7646                           
  7647                           ; BSR set to: 0
  7648  004922  0E00               	movlw	0
  7649  004924  1571               	andwf	___flge@ff2& (0+255),w,b
  7650  004926  6E36               	movwf	??___flge^0,c
  7651  004928  0E00               	movlw	0
  7652  00492A  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  7653  00492C  6E37               	movwf	(??___flge+1)^0,c
  7654  00492E  0E80               	movlw	128
  7655  004930  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  7656  004932  6E38               	movwf	(??___flge+2)^0,c
  7657  004934  0E7F               	movlw	127
  7658  004936  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  7659  004938  6E39               	movwf	(??___flge+3)^0,c
  7660  00493A  5036               	movf	??___flge^0,w,c
  7661  00493C  1037               	iorwf	(??___flge+1)^0,w,c
  7662  00493E  1038               	iorwf	(??___flge+2)^0,w,c
  7663  004940  1039               	iorwf	(??___flge+3)^0,w,c
  7664  004942  A4D8               	btfss	status,2,c
  7665  004944  EFA6  F024         	goto	u8541
  7666  004948  EFA8  F024         	goto	u8540
  7667  00494C                     u8541:
  7668  00494C  EFB0  F024         	goto	l8255
  7669  004950                     u8540:
  7670  004950                     
  7671                           ; BSR set to: 0
  7672  004950  0E00               	movlw	0
  7673  004952  6F71               	movwf	___flge@ff2& (0+255),b
  7674  004954  0E00               	movlw	0
  7675  004956  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  7676  004958  0E00               	movlw	0
  7677  00495A  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  7678  00495C  0E00               	movlw	0
  7679  00495E  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  7680  004960                     l8255:
  7681                           
  7682                           ; BSR set to: 0
  7683  004960  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  7684  004962  EFB5  F024         	goto	u8551
  7685  004966  EFB7  F024         	goto	u8550
  7686  00496A                     u8551:
  7687  00496A  EFC0  F024         	goto	l8259
  7688  00496E                     u8550:
  7689  00496E                     
  7690                           ; BSR set to: 0
  7691  00496E  6D6D               	negf	___flge@ff1& (0+255),b
  7692  004970  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7693  004972  B0D8               	btfsc	status,0,c
  7694  004974  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7695  004976  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7696  004978  B0D8               	btfsc	status,0,c
  7697  00497A  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7698  00497C  0E80               	movlw	128
  7699  00497E  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7700  004980                     l8259:
  7701                           
  7702                           ; BSR set to: 0
  7703  004980  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7704  004982  EFC5  F024         	goto	u8561
  7705  004986  EFC7  F024         	goto	u8560
  7706  00498A                     u8561:
  7707  00498A  EFD0  F024         	goto	l1682
  7708  00498E                     u8560:
  7709  00498E                     
  7710                           ; BSR set to: 0
  7711  00498E  6D71               	negf	___flge@ff2& (0+255),b
  7712  004990  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7713  004992  B0D8               	btfsc	status,0,c
  7714  004994  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7715  004996  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7716  004998  B0D8               	btfsc	status,0,c
  7717  00499A  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7718  00499C  0E80               	movlw	128
  7719  00499E  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7720  0049A0                     l1682:
  7721                           
  7722                           ; BSR set to: 0
  7723  0049A0  0E00               	movlw	0
  7724  0049A2  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7725  0049A4  0E00               	movlw	0
  7726  0049A6  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7727  0049A8  0E00               	movlw	0
  7728  0049AA  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7729  0049AC  0E80               	movlw	128
  7730  0049AE  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7731  0049B0  0E00               	movlw	0
  7732  0049B2  1B71               	xorwf	___flge@ff2& (0+255),f,b
  7733  0049B4  0E00               	movlw	0
  7734  0049B6  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7735  0049B8  0E00               	movlw	0
  7736  0049BA  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7737  0049BC  0E80               	movlw	128
  7738  0049BE  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7739  0049C0  5171               	movf	___flge@ff2& (0+255),w,b
  7740  0049C2  5D6D               	subwf	___flge@ff1& (0+255),w,b
  7741  0049C4  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  7742  0049C6  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7743  0049C8  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  7744  0049CA  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7745  0049CC  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  7746  0049CE  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7747  0049D0  B0D8               	btfsc	status,0,c
  7748  0049D2  EFED  F024         	goto	u8571
  7749  0049D6  EFEF  F024         	goto	u8570
  7750  0049DA                     u8571:
  7751  0049DA  EFF2  F024         	goto	l8265
  7752  0049DE                     u8570:
  7753  0049DE                     
  7754                           ; BSR set to: 0
  7755  0049DE  90D8               	bcf	status,0,c
  7756  0049E0  EFF3  F024         	goto	l1687
  7757  0049E4                     l8265:
  7758                           
  7759                           ; BSR set to: 0
  7760  0049E4  80D8               	bsf	status,0,c
  7761  0049E6                     l1687:
  7762                           
  7763                           ; BSR set to: 0
  7764  0049E6  0012               	return		;funcret
  7765  0049E8                     __end_of___flge:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function ___fleq *****************
  7769 ;; Defined at:
  7770 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  ff1             4   19[COMRAM] int 
  7773 ;;  ff2             4   23[COMRAM] int 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;		None               void
  7778 ;; Registers used:
  7779 ;;		wreg, status,2, status,0
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;Total ram usage:       12 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 8
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_efgtoa
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text24
  7800  00507C                     __ptext24:
  7801                           	callstack 0
  7802  00507C                     ___fleq:
  7803                           	callstack 16
  7804  00507C  0E00               	movlw	0
  7805  00507E  1414               	andwf	___fleq@ff1^0,w,c
  7806  005080  6E1C               	movwf	??___fleq^0,c
  7807  005082  0E00               	movlw	0
  7808  005084  1415               	andwf	(___fleq@ff1+1)^0,w,c
  7809  005086  6E1D               	movwf	(??___fleq+1)^0,c
  7810  005088  0E80               	movlw	128
  7811  00508A  1416               	andwf	(___fleq@ff1+2)^0,w,c
  7812  00508C  6E1E               	movwf	(??___fleq+2)^0,c
  7813  00508E  0E7F               	movlw	127
  7814  005090  1417               	andwf	(___fleq@ff1+3)^0,w,c
  7815  005092  6E1F               	movwf	(??___fleq+3)^0,c
  7816  005094  501C               	movf	??___fleq^0,w,c
  7817  005096  101D               	iorwf	(??___fleq+1)^0,w,c
  7818  005098  101E               	iorwf	(??___fleq+2)^0,w,c
  7819  00509A  101F               	iorwf	(??___fleq+3)^0,w,c
  7820  00509C  A4D8               	btfss	status,2,c
  7821  00509E  EF53  F028         	goto	u8501
  7822  0050A2  EF55  F028         	goto	u8500
  7823  0050A6                     u8501:
  7824  0050A6  EF5D  F028         	goto	l8235
  7825  0050AA                     u8500:
  7826  0050AA  0E00               	movlw	0
  7827  0050AC  6E14               	movwf	___fleq@ff1^0,c
  7828  0050AE  0E00               	movlw	0
  7829  0050B0  6E15               	movwf	(___fleq@ff1+1)^0,c
  7830  0050B2  0E00               	movlw	0
  7831  0050B4  6E16               	movwf	(___fleq@ff1+2)^0,c
  7832  0050B6  0E00               	movlw	0
  7833  0050B8  6E17               	movwf	(___fleq@ff1+3)^0,c
  7834  0050BA                     l8235:
  7835  0050BA  0E00               	movlw	0
  7836  0050BC  1418               	andwf	___fleq@ff2^0,w,c
  7837  0050BE  6E1C               	movwf	??___fleq^0,c
  7838  0050C0  0E00               	movlw	0
  7839  0050C2  1419               	andwf	(___fleq@ff2+1)^0,w,c
  7840  0050C4  6E1D               	movwf	(??___fleq+1)^0,c
  7841  0050C6  0E80               	movlw	128
  7842  0050C8  141A               	andwf	(___fleq@ff2+2)^0,w,c
  7843  0050CA  6E1E               	movwf	(??___fleq+2)^0,c
  7844  0050CC  0E7F               	movlw	127
  7845  0050CE  141B               	andwf	(___fleq@ff2+3)^0,w,c
  7846  0050D0  6E1F               	movwf	(??___fleq+3)^0,c
  7847  0050D2  501C               	movf	??___fleq^0,w,c
  7848  0050D4  101D               	iorwf	(??___fleq+1)^0,w,c
  7849  0050D6  101E               	iorwf	(??___fleq+2)^0,w,c
  7850  0050D8  101F               	iorwf	(??___fleq+3)^0,w,c
  7851  0050DA  A4D8               	btfss	status,2,c
  7852  0050DC  EF72  F028         	goto	u8511
  7853  0050E0  EF74  F028         	goto	u8510
  7854  0050E4                     u8511:
  7855  0050E4  EF7C  F028         	goto	l8239
  7856  0050E8                     u8510:
  7857  0050E8  0E00               	movlw	0
  7858  0050EA  6E18               	movwf	___fleq@ff2^0,c
  7859  0050EC  0E00               	movlw	0
  7860  0050EE  6E19               	movwf	(___fleq@ff2+1)^0,c
  7861  0050F0  0E00               	movlw	0
  7862  0050F2  6E1A               	movwf	(___fleq@ff2+2)^0,c
  7863  0050F4  0E00               	movlw	0
  7864  0050F6  6E1B               	movwf	(___fleq@ff2+3)^0,c
  7865  0050F8                     l8239:
  7866  0050F8  5018               	movf	___fleq@ff2^0,w,c
  7867  0050FA  1814               	xorwf	___fleq@ff1^0,w,c
  7868  0050FC  E10F               	bnz	u8520
  7869  0050FE  5019               	movf	(___fleq@ff2+1)^0,w,c
  7870  005100  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  7871  005102  E10C               	bnz	u8520
  7872  005104  501A               	movf	(___fleq@ff2+2)^0,w,c
  7873  005106  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  7874  005108  E109               	bnz	u8520
  7875  00510A  501B               	movf	(___fleq@ff2+3)^0,w,c
  7876  00510C  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  7877  00510E  B4D8               	btfsc	status,2,c
  7878  005110  EF8C  F028         	goto	u8521
  7879  005114  EF8E  F028         	goto	u8520
  7880  005118                     u8521:
  7881  005118  EF91  F028         	goto	l8243
  7882  00511C                     u8520:
  7883  00511C  90D8               	bcf	status,0,c
  7884  00511E  EF92  F028         	goto	l1676
  7885  005122                     l8243:
  7886  005122  80D8               	bsf	status,0,c
  7887  005124                     l1676:
  7888  005124  0012               	return		;funcret
  7889  005126                     __end_of___fleq:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function ___fldiv *****************
  7893 ;; Defined at:
  7894 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  b               4   41[COMRAM] int 
  7897 ;;  a               4   45[COMRAM] int 
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;  grs             4    7[BANK0 ] unsigned long 
  7900 ;;  rem             4    0[BANK0 ] unsigned long 
  7901 ;;  new_exp         2    5[BANK0 ] short 
  7902 ;;  aexp            1   12[BANK0 ] unsigned char 
  7903 ;;  bexp            1   11[BANK0 ] unsigned char 
  7904 ;;  sign            1    4[BANK0 ] unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  4   41[COMRAM] unsigned char 
  7907 ;; Registers used:
  7908 ;;		wreg, status,2, status,0
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7914 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7915 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;Total ram usage:       25 bytes
  7919 ;; Hardware stack levels used: 1
  7920 ;; Hardware stack levels required when called: 8
  7921 ;; This function calls:
  7922 ;;		Nothing
  7923 ;; This function is called by:
  7924 ;;		_getBatteryVoltage
  7925 ;;		_setSteering
  7926 ;;		_efgtoa
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           	psect	text25
  7931  002BCA                     __ptext25:
  7932                           	callstack 0
  7933  002BCA                     ___fldiv:
  7934                           	callstack 20
  7935  002BCA  502D               	movf	(___fldiv@b+3)^0,w,c
  7936  002BCC  0B80               	andlw	128
  7937  002BCE  0100               	movlb	0	; () banked
  7938  002BD0  6F64               	movwf	___fldiv@sign& (0+255),b
  7939  002BD2  502D               	movf	(___fldiv@b+3)^0,w,c
  7940  002BD4  242D               	addwf	(___fldiv@b+3)^0,w,c
  7941  002BD6  6F6B               	movwf	___fldiv@bexp& (0+255),b
  7942  002BD8                     
  7943                           ; BSR set to: 0
  7944  002BD8  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  7945  002BDA  EFF1  F015         	goto	u7961
  7946  002BDE  EFF3  F015         	goto	u7960
  7947  002BE2                     u7961:
  7948  002BE2  EFF4  F015         	goto	l7883
  7949  002BE6                     u7960:
  7950  002BE6                     
  7951                           ; BSR set to: 0
  7952  002BE6  816B               	bsf	___fldiv@bexp& (0+255),0,b
  7953  002BE8                     l7883:
  7954                           
  7955                           ; BSR set to: 0
  7956  002BE8  516B               	movf	___fldiv@bexp& (0+255),w,b
  7957  002BEA  B4D8               	btfsc	status,2,c
  7958  002BEC  EFFA  F015         	goto	u7971
  7959  002BF0  EFFC  F015         	goto	u7970
  7960  002BF4                     u7971:
  7961  002BF4  EF11  F016         	goto	l7893
  7962  002BF8                     u7970:
  7963  002BF8                     
  7964                           ; BSR set to: 0
  7965  002BF8  296B               	incf	___fldiv@bexp& (0+255),w,b
  7966  002BFA  A4D8               	btfss	status,2,c
  7967  002BFC  EF02  F016         	goto	u7981
  7968  002C00  EF04  F016         	goto	u7980
  7969  002C04                     u7981:
  7970  002C04  EF0C  F016         	goto	l7889
  7971  002C08                     u7980:
  7972  002C08                     
  7973                           ; BSR set to: 0
  7974  002C08  0E00               	movlw	0
  7975  002C0A  6E2A               	movwf	___fldiv@b^0,c
  7976  002C0C  0E00               	movlw	0
  7977  002C0E  6E2B               	movwf	(___fldiv@b+1)^0,c
  7978  002C10  0E00               	movlw	0
  7979  002C12  6E2C               	movwf	(___fldiv@b+2)^0,c
  7980  002C14  0E00               	movlw	0
  7981  002C16  6E2D               	movwf	(___fldiv@b+3)^0,c
  7982  002C18                     l7889:
  7983                           
  7984                           ; BSR set to: 0
  7985  002C18  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  7986  002C1A                     
  7987                           ; BSR set to: 0
  7988  002C1A  0E00               	movlw	0
  7989  002C1C  6E2D               	movwf	(___fldiv@b+3)^0,c
  7990  002C1E  EF19  F016         	goto	l7895
  7991  002C22                     l7893:
  7992                           
  7993                           ; BSR set to: 0
  7994  002C22  0E00               	movlw	0
  7995  002C24  6E2A               	movwf	___fldiv@b^0,c
  7996  002C26  0E00               	movlw	0
  7997  002C28  6E2B               	movwf	(___fldiv@b+1)^0,c
  7998  002C2A  0E00               	movlw	0
  7999  002C2C  6E2C               	movwf	(___fldiv@b+2)^0,c
  8000  002C2E  0E00               	movlw	0
  8001  002C30  6E2D               	movwf	(___fldiv@b+3)^0,c
  8002  002C32                     l7895:
  8003                           
  8004                           ; BSR set to: 0
  8005  002C32  5031               	movf	(___fldiv@a+3)^0,w,c
  8006  002C34  0B80               	andlw	128
  8007  002C36  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8008  002C38                     
  8009                           ; BSR set to: 0
  8010  002C38  5031               	movf	(___fldiv@a+3)^0,w,c
  8011  002C3A  2431               	addwf	(___fldiv@a+3)^0,w,c
  8012  002C3C  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8013  002C3E                     
  8014                           ; BSR set to: 0
  8015  002C3E  AE30               	btfss	(___fldiv@a+2)^0,7,c
  8016  002C40  EF24  F016         	goto	u7991
  8017  002C44  EF26  F016         	goto	u7990
  8018  002C48                     u7991:
  8019  002C48  EF27  F016         	goto	l7903
  8020  002C4C                     u7990:
  8021  002C4C                     
  8022                           ; BSR set to: 0
  8023  002C4C  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8024  002C4E                     l7903:
  8025                           
  8026                           ; BSR set to: 0
  8027  002C4E  516C               	movf	___fldiv@aexp& (0+255),w,b
  8028  002C50  B4D8               	btfsc	status,2,c
  8029  002C52  EF2D  F016         	goto	u8001
  8030  002C56  EF2F  F016         	goto	u8000
  8031  002C5A                     u8001:
  8032  002C5A  EF44  F016         	goto	l7913
  8033  002C5E                     u8000:
  8034  002C5E                     
  8035                           ; BSR set to: 0
  8036  002C5E  296C               	incf	___fldiv@aexp& (0+255),w,b
  8037  002C60  A4D8               	btfss	status,2,c
  8038  002C62  EF35  F016         	goto	u8011
  8039  002C66  EF37  F016         	goto	u8010
  8040  002C6A                     u8011:
  8041  002C6A  EF3F  F016         	goto	l7909
  8042  002C6E                     u8010:
  8043  002C6E                     
  8044                           ; BSR set to: 0
  8045  002C6E  0E00               	movlw	0
  8046  002C70  6E2E               	movwf	___fldiv@a^0,c
  8047  002C72  0E00               	movlw	0
  8048  002C74  6E2F               	movwf	(___fldiv@a+1)^0,c
  8049  002C76  0E00               	movlw	0
  8050  002C78  6E30               	movwf	(___fldiv@a+2)^0,c
  8051  002C7A  0E00               	movlw	0
  8052  002C7C  6E31               	movwf	(___fldiv@a+3)^0,c
  8053  002C7E                     l7909:
  8054                           
  8055                           ; BSR set to: 0
  8056  002C7E  8E30               	bsf	(___fldiv@a+2)^0,7,c
  8057  002C80                     
  8058                           ; BSR set to: 0
  8059  002C80  0E00               	movlw	0
  8060  002C82  6E31               	movwf	(___fldiv@a+3)^0,c
  8061  002C84  EF4C  F016         	goto	l7915
  8062  002C88                     l7913:
  8063                           
  8064                           ; BSR set to: 0
  8065  002C88  0E00               	movlw	0
  8066  002C8A  6E2E               	movwf	___fldiv@a^0,c
  8067  002C8C  0E00               	movlw	0
  8068  002C8E  6E2F               	movwf	(___fldiv@a+1)^0,c
  8069  002C90  0E00               	movlw	0
  8070  002C92  6E30               	movwf	(___fldiv@a+2)^0,c
  8071  002C94  0E00               	movlw	0
  8072  002C96  6E31               	movwf	(___fldiv@a+3)^0,c
  8073  002C98                     l7915:
  8074                           
  8075                           ; BSR set to: 0
  8076  002C98  502E               	movf	___fldiv@a^0,w,c
  8077  002C9A  102F               	iorwf	(___fldiv@a+1)^0,w,c
  8078  002C9C  1030               	iorwf	(___fldiv@a+2)^0,w,c
  8079  002C9E  1031               	iorwf	(___fldiv@a+3)^0,w,c
  8080  002CA0  A4D8               	btfss	status,2,c
  8081  002CA2  EF55  F016         	goto	u8021
  8082  002CA6  EF57  F016         	goto	u8020
  8083  002CAA                     u8021:
  8084  002CAA  EF6F  F016         	goto	l7927
  8085  002CAE                     u8020:
  8086  002CAE                     
  8087                           ; BSR set to: 0
  8088  002CAE  0E00               	movlw	0
  8089  002CB0  6E2A               	movwf	___fldiv@b^0,c
  8090  002CB2  0E00               	movlw	0
  8091  002CB4  6E2B               	movwf	(___fldiv@b+1)^0,c
  8092  002CB6  0E00               	movlw	0
  8093  002CB8  6E2C               	movwf	(___fldiv@b+2)^0,c
  8094  002CBA  0E00               	movlw	0
  8095  002CBC  6E2D               	movwf	(___fldiv@b+3)^0,c
  8096  002CBE                     
  8097                           ; BSR set to: 0
  8098  002CBE  0E80               	movlw	128
  8099  002CC0  122C               	iorwf	(___fldiv@b+2)^0,f,c
  8100  002CC2  0E7F               	movlw	127
  8101  002CC4  122D               	iorwf	(___fldiv@b+3)^0,f,c
  8102  002CC6                     l7921:
  8103                           
  8104                           ; BSR set to: 0
  8105  002CC6  5164               	movf	___fldiv@sign& (0+255),w,b
  8106  002CC8  122D               	iorwf	(___fldiv@b+3)^0,f,c
  8107  002CCA                     
  8108                           ; BSR set to: 0
  8109  002CCA  C02A  F02A         	movff	___fldiv@b,?___fldiv
  8110  002CCE  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  8111  002CD2  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  8112  002CD6  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  8113  002CDA  EFB2  F017         	goto	l1999
  8114  002CDE                     l7927:
  8115                           
  8116                           ; BSR set to: 0
  8117  002CDE  516B               	movf	___fldiv@bexp& (0+255),w,b
  8118  002CE0  A4D8               	btfss	status,2,c
  8119  002CE2  EF75  F016         	goto	u8031
  8120  002CE6  EF77  F016         	goto	u8030
  8121  002CEA                     u8031:
  8122  002CEA  EF81  F016         	goto	l7935
  8123  002CEE                     u8030:
  8124  002CEE                     
  8125                           ; BSR set to: 0
  8126  002CEE  0E00               	movlw	0
  8127  002CF0  6E2A               	movwf	?___fldiv^0,c
  8128  002CF2  0E00               	movlw	0
  8129  002CF4  6E2B               	movwf	(?___fldiv+1)^0,c
  8130  002CF6  0E00               	movlw	0
  8131  002CF8  6E2C               	movwf	(?___fldiv+2)^0,c
  8132  002CFA  0E00               	movlw	0
  8133  002CFC  6E2D               	movwf	(?___fldiv+3)^0,c
  8134  002CFE  EFB2  F017         	goto	l1999
  8135  002D02                     l7935:
  8136                           
  8137                           ; BSR set to: 0
  8138  002D02  516C               	movf	___fldiv@aexp& (0+255),w,b
  8139  002D04  C06B  F032         	movff	___fldiv@bexp,??___fldiv
  8140  002D08  6A33               	clrf	(??___fldiv+1)^0,c
  8141  002D0A  5E32               	subwf	??___fldiv^0,f,c
  8142  002D0C  0E00               	movlw	0
  8143  002D0E  5A33               	subwfb	(??___fldiv+1)^0,f,c
  8144  002D10  0E7F               	movlw	127
  8145  002D12  2432               	addwf	??___fldiv^0,w,c
  8146  002D14  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8147  002D16  0E00               	movlw	0
  8148  002D18  2033               	addwfc	(??___fldiv+1)^0,w,c
  8149  002D1A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8150  002D1C                     
  8151                           ; BSR set to: 0
  8152  002D1C  C02A  F060         	movff	___fldiv@b,___fldiv@rem
  8153  002D20  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  8154  002D24  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  8155  002D28  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  8156  002D2C                     
  8157                           ; BSR set to: 0
  8158  002D2C  0E00               	movlw	0
  8159  002D2E  6E2A               	movwf	___fldiv@b^0,c
  8160  002D30  0E00               	movlw	0
  8161  002D32  6E2B               	movwf	(___fldiv@b+1)^0,c
  8162  002D34  0E00               	movlw	0
  8163  002D36  6E2C               	movwf	(___fldiv@b+2)^0,c
  8164  002D38  0E00               	movlw	0
  8165  002D3A  6E2D               	movwf	(___fldiv@b+3)^0,c
  8166  002D3C                     
  8167                           ; BSR set to: 0
  8168  002D3C  0E00               	movlw	0
  8169  002D3E  6F67               	movwf	___fldiv@grs& (0+255),b
  8170  002D40  0E00               	movlw	0
  8171  002D42  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8172  002D44  0E00               	movlw	0
  8173  002D46  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8174  002D48  0E00               	movlw	0
  8175  002D4A  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8176  002D4C                     
  8177                           ; BSR set to: 0
  8178  002D4C  0E00               	movlw	0
  8179  002D4E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8180  002D50  EFE2  F016         	goto	l2001
  8181  002D54                     l7945:
  8182                           
  8183                           ; BSR set to: 0
  8184  002D54  516C               	movf	___fldiv@aexp& (0+255),w,b
  8185  002D56  B4D8               	btfsc	status,2,c
  8186  002D58  EFB0  F016         	goto	u8041
  8187  002D5C  EFB2  F016         	goto	u8040
  8188  002D60                     u8041:
  8189  002D60  EFC9  F016         	goto	l7953
  8190  002D64                     u8040:
  8191  002D64                     
  8192                           ; BSR set to: 0
  8193  002D64  90D8               	bcf	status,0,c
  8194  002D66  3760               	rlcf	___fldiv@rem& (0+255),f,b
  8195  002D68  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8196  002D6A  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8197  002D6C  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8198  002D6E  90D8               	bcf	status,0,c
  8199  002D70  362A               	rlcf	___fldiv@b^0,f,c
  8200  002D72  362B               	rlcf	(___fldiv@b+1)^0,f,c
  8201  002D74  362C               	rlcf	(___fldiv@b+2)^0,f,c
  8202  002D76  362D               	rlcf	(___fldiv@b+3)^0,f,c
  8203  002D78                     
  8204                           ; BSR set to: 0
  8205  002D78  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8206  002D7A  EFC1  F016         	goto	u8051
  8207  002D7E  EFC3  F016         	goto	u8050
  8208  002D82                     u8051:
  8209  002D82  EFC4  F016         	goto	l2004
  8210  002D86                     u8050:
  8211  002D86                     
  8212                           ; BSR set to: 0
  8213  002D86  802A               	bsf	___fldiv@b^0,0,c
  8214  002D88                     l2004:
  8215                           
  8216                           ; BSR set to: 0
  8217  002D88  90D8               	bcf	status,0,c
  8218  002D8A  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8219  002D8C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8220  002D8E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8221  002D90  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8222  002D92                     l7953:
  8223                           
  8224                           ; BSR set to: 0
  8225  002D92  502E               	movf	___fldiv@a^0,w,c
  8226  002D94  5D60               	subwf	___fldiv@rem& (0+255),w,b
  8227  002D96  502F               	movf	(___fldiv@a+1)^0,w,c
  8228  002D98  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8229  002D9A  5030               	movf	(___fldiv@a+2)^0,w,c
  8230  002D9C  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8231  002D9E  5031               	movf	(___fldiv@a+3)^0,w,c
  8232  002DA0  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8233  002DA2  A0D8               	btfss	status,0,c
  8234  002DA4  EFD6  F016         	goto	u8061
  8235  002DA8  EFD8  F016         	goto	u8060
  8236  002DAC                     u8061:
  8237  002DAC  EFE1  F016         	goto	l7959
  8238  002DB0                     u8060:
  8239  002DB0                     
  8240                           ; BSR set to: 0
  8241  002DB0  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8242  002DB2                     
  8243                           ; BSR set to: 0
  8244  002DB2  502E               	movf	___fldiv@a^0,w,c
  8245  002DB4  5F60               	subwf	___fldiv@rem& (0+255),f,b
  8246  002DB6  502F               	movf	(___fldiv@a+1)^0,w,c
  8247  002DB8  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8248  002DBA  5030               	movf	(___fldiv@a+2)^0,w,c
  8249  002DBC  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8250  002DBE  5031               	movf	(___fldiv@a+3)^0,w,c
  8251  002DC0  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8252  002DC2                     l7959:
  8253                           
  8254                           ; BSR set to: 0
  8255  002DC2  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8256  002DC4                     l2001:
  8257                           
  8258                           ; BSR set to: 0
  8259  002DC4  0E19               	movlw	25
  8260  002DC6  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8261  002DC8  EFE8  F016         	goto	u8071
  8262  002DCC  EFEA  F016         	goto	u8070
  8263  002DD0                     u8071:
  8264  002DD0  EFAA  F016         	goto	l7945
  8265  002DD4                     u8070:
  8266  002DD4                     
  8267                           ; BSR set to: 0
  8268  002DD4  5160               	movf	___fldiv@rem& (0+255),w,b
  8269  002DD6  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8270  002DD8  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8271  002DDA  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8272  002DDC  B4D8               	btfsc	status,2,c
  8273  002DDE  EFF3  F016         	goto	u8081
  8274  002DE2  EFF5  F016         	goto	u8080
  8275  002DE6                     u8081:
  8276  002DE6  EF0D  F017         	goto	l7971
  8277  002DEA                     u8080:
  8278  002DEA                     
  8279                           ; BSR set to: 0
  8280  002DEA  8167               	bsf	___fldiv@grs& (0+255),0,b
  8281  002DEC  EF0D  F017         	goto	l7971
  8282  002DF0                     l7965:
  8283                           
  8284                           ; BSR set to: 0
  8285  002DF0  90D8               	bcf	status,0,c
  8286  002DF2  362A               	rlcf	___fldiv@b^0,f,c
  8287  002DF4  362B               	rlcf	(___fldiv@b+1)^0,f,c
  8288  002DF6  362C               	rlcf	(___fldiv@b+2)^0,f,c
  8289  002DF8  362D               	rlcf	(___fldiv@b+3)^0,f,c
  8290  002DFA                     
  8291                           ; BSR set to: 0
  8292  002DFA  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8293  002DFC  EF02  F017         	goto	u8091
  8294  002E00  EF04  F017         	goto	u8090
  8295  002E04                     u8091:
  8296  002E04  EF05  F017         	goto	l2010
  8297  002E08                     u8090:
  8298  002E08                     
  8299                           ; BSR set to: 0
  8300  002E08  802A               	bsf	___fldiv@b^0,0,c
  8301  002E0A                     l2010:
  8302                           
  8303                           ; BSR set to: 0
  8304  002E0A  90D8               	bcf	status,0,c
  8305  002E0C  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8306  002E0E  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8307  002E10  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8308  002E12  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8309  002E14  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8310  002E16  A0D8               	btfss	status,0,c
  8311  002E18  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8312  002E1A                     l7971:
  8313                           
  8314                           ; BSR set to: 0
  8315  002E1A  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  8316  002E1C  EF12  F017         	goto	u8101
  8317  002E20  EF14  F017         	goto	u8100
  8318  002E24                     u8101:
  8319  002E24  EFF8  F016         	goto	l7965
  8320  002E28                     u8100:
  8321  002E28                     
  8322                           ; BSR set to: 0
  8323  002E28  0E00               	movlw	0
  8324  002E2A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8325  002E2C                     
  8326                           ; BSR set to: 0
  8327  002E2C  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8328  002E2E  EF1B  F017         	goto	u8111
  8329  002E32  EF1D  F017         	goto	u8110
  8330  002E36                     u8111:
  8331  002E36  EF41  F017         	goto	l2012
  8332  002E3A                     u8110:
  8333  002E3A                     
  8334                           ; BSR set to: 0
  8335  002E3A  0EFF               	movlw	255
  8336  002E3C  1567               	andwf	___fldiv@grs& (0+255),w,b
  8337  002E3E  6E32               	movwf	??___fldiv^0,c
  8338  002E40  0EFF               	movlw	255
  8339  002E42  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8340  002E44  6E33               	movwf	(??___fldiv+1)^0,c
  8341  002E46  0EFF               	movlw	255
  8342  002E48  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8343  002E4A  6E34               	movwf	(??___fldiv+2)^0,c
  8344  002E4C  0E7F               	movlw	127
  8345  002E4E  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8346  002E50  6E35               	movwf	(??___fldiv+3)^0,c
  8347  002E52  5032               	movf	??___fldiv^0,w,c
  8348  002E54  1033               	iorwf	(??___fldiv+1)^0,w,c
  8349  002E56  1034               	iorwf	(??___fldiv+2)^0,w,c
  8350  002E58  1035               	iorwf	(??___fldiv+3)^0,w,c
  8351  002E5A  B4D8               	btfsc	status,2,c
  8352  002E5C  EF32  F017         	goto	u8121
  8353  002E60  EF34  F017         	goto	u8120
  8354  002E64                     u8121:
  8355  002E64  EF38  F017         	goto	l2013
  8356  002E68                     u8120:
  8357  002E68                     l7979:
  8358                           
  8359                           ; BSR set to: 0
  8360  002E68  0E01               	movlw	1
  8361  002E6A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8362  002E6C  EF41  F017         	goto	l2012
  8363  002E70                     l2013:
  8364                           
  8365                           ; BSR set to: 0
  8366  002E70  A02A               	btfss	___fldiv@b^0,0,c
  8367  002E72  EF3D  F017         	goto	u8131
  8368  002E76  EF3F  F017         	goto	u8130
  8369  002E7A                     u8131:
  8370  002E7A  EF41  F017         	goto	l2012
  8371  002E7E                     u8130:
  8372  002E7E  EF34  F017         	goto	l7979
  8373  002E82                     l2012:
  8374                           
  8375                           ; BSR set to: 0
  8376  002E82  516C               	movf	___fldiv@aexp& (0+255),w,b
  8377  002E84  B4D8               	btfsc	status,2,c
  8378  002E86  EF47  F017         	goto	u8141
  8379  002E8A  EF49  F017         	goto	u8140
  8380  002E8E                     u8141:
  8381  002E8E  EF6D  F017         	goto	l7991
  8382  002E92                     u8140:
  8383  002E92                     
  8384                           ; BSR set to: 0
  8385  002E92  0E01               	movlw	1
  8386  002E94  262A               	addwf	___fldiv@b^0,f,c
  8387  002E96  0E00               	movlw	0
  8388  002E98  222B               	addwfc	(___fldiv@b+1)^0,f,c
  8389  002E9A  222C               	addwfc	(___fldiv@b+2)^0,f,c
  8390  002E9C  222D               	addwfc	(___fldiv@b+3)^0,f,c
  8391  002E9E                     
  8392                           ; BSR set to: 0
  8393  002E9E  A02D               	btfss	(___fldiv@b+3)^0,0,c
  8394  002EA0  EF54  F017         	goto	u8151
  8395  002EA4  EF56  F017         	goto	u8150
  8396  002EA8                     u8151:
  8397  002EA8  EF6D  F017         	goto	l7991
  8398  002EAC                     u8150:
  8399  002EAC                     
  8400                           ; BSR set to: 0
  8401  002EAC  C02A  F032         	movff	___fldiv@b,??___fldiv
  8402  002EB0  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  8403  002EB4  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  8404  002EB8  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  8405  002EBC  3435               	rlcf	(??___fldiv+3)^0,w,c
  8406  002EBE  3235               	rrcf	(??___fldiv+3)^0,f,c
  8407  002EC0  3234               	rrcf	(??___fldiv+2)^0,f,c
  8408  002EC2  3233               	rrcf	(??___fldiv+1)^0,f,c
  8409  002EC4  3232               	rrcf	??___fldiv^0,f,c
  8410  002EC6  C032  F02A         	movff	??___fldiv,___fldiv@b
  8411  002ECA  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  8412  002ECE  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  8413  002ED2  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  8414  002ED6                     
  8415                           ; BSR set to: 0
  8416  002ED6  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8417  002ED8  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8418  002EDA                     l7991:
  8419                           
  8420                           ; BSR set to: 0
  8421  002EDA  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8422  002EDC  EF78  F017         	goto	u8161
  8423  002EE0  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8424  002EE2  E108               	bnz	u8160
  8425  002EE4  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8426  002EE6  A0D8               	btfss	status,0,c
  8427  002EE8  EF78  F017         	goto	u8161
  8428  002EEC  EF7A  F017         	goto	u8160
  8429  002EF0                     u8161:
  8430  002EF0  EF85  F017         	goto	l7995
  8431  002EF4                     u8160:
  8432  002EF4                     
  8433                           ; BSR set to: 0
  8434  002EF4  0E00               	movlw	0
  8435  002EF6  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8436  002EF8  6965               	setf	___fldiv@new_exp& (0+255),b
  8437  002EFA  0E00               	movlw	0
  8438  002EFC  6E2A               	movwf	___fldiv@b^0,c
  8439  002EFE  0E00               	movlw	0
  8440  002F00  6E2B               	movwf	(___fldiv@b+1)^0,c
  8441  002F02  0E00               	movlw	0
  8442  002F04  6E2C               	movwf	(___fldiv@b+2)^0,c
  8443  002F06  0E00               	movlw	0
  8444  002F08  6E2D               	movwf	(___fldiv@b+3)^0,c
  8445  002F0A                     l7995:
  8446                           
  8447                           ; BSR set to: 0
  8448  002F0A  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8449  002F0C  EF92  F017         	goto	u8170
  8450  002F10  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8451  002F12  E106               	bnz	u8171
  8452  002F14  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8453  002F16  B0D8               	btfsc	status,0,c
  8454  002F18  EF90  F017         	goto	u8171
  8455  002F1C  EF92  F017         	goto	u8170
  8456  002F20                     u8171:
  8457  002F20  EFA0  F017         	goto	l7999
  8458  002F24                     u8170:
  8459  002F24                     
  8460                           ; BSR set to: 0
  8461  002F24  0E00               	movlw	0
  8462  002F26  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8463  002F28  0E00               	movlw	0
  8464  002F2A  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8465  002F2C  0E00               	movlw	0
  8466  002F2E  6E2A               	movwf	___fldiv@b^0,c
  8467  002F30  0E00               	movlw	0
  8468  002F32  6E2B               	movwf	(___fldiv@b+1)^0,c
  8469  002F34  0E00               	movlw	0
  8470  002F36  6E2C               	movwf	(___fldiv@b+2)^0,c
  8471  002F38  0E00               	movlw	0
  8472  002F3A  6E2D               	movwf	(___fldiv@b+3)^0,c
  8473  002F3C  0E00               	movlw	0
  8474  002F3E  6F64               	movwf	___fldiv@sign& (0+255),b
  8475  002F40                     l7999:
  8476                           
  8477                           ; BSR set to: 0
  8478  002F40  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  8479  002F44                     
  8480                           ; BSR set to: 0
  8481  002F44  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8482  002F46  EFA7  F017         	goto	u8181
  8483  002F4A  EFA9  F017         	goto	u8180
  8484  002F4E                     u8181:
  8485  002F4E  EFAC  F017         	goto	l8005
  8486  002F52                     u8180:
  8487  002F52                     
  8488                           ; BSR set to: 0
  8489  002F52  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  8490  002F54  EFAD  F017         	goto	l8007
  8491  002F58                     l8005:
  8492                           
  8493                           ; BSR set to: 0
  8494  002F58  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  8495  002F5A                     l8007:
  8496                           
  8497                           ; BSR set to: 0
  8498  002F5A  90D8               	bcf	status,0,c
  8499  002F5C  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8500  002F5E  6E2D               	movwf	(___fldiv@b+3)^0,c
  8501  002F60  EF63  F016         	goto	l7921
  8502  002F64                     l1999:
  8503                           
  8504                           ; BSR set to: 0
  8505  002F64  0012               	return		;funcret
  8506  002F66                     __end_of___fldiv:
  8507                           	callstack 0
  8508                           
  8509 ;; *************** function ___awmod *****************
  8510 ;; Defined at:
  8511 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8512 ;; Parameters:    Size  Location     Type
  8513 ;;  dividend        2   19[COMRAM] int 
  8514 ;;  divisor         2   21[COMRAM] int 
  8515 ;; Auto vars:     Size  Location     Type
  8516 ;;  sign            1   24[COMRAM] unsigned char 
  8517 ;;  counter         1   23[COMRAM] unsigned char 
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  2   19[COMRAM] int 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;Total ram usage:        6 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 8
  8534 ;; This function calls:
  8535 ;;		Nothing
  8536 ;; This function is called by:
  8537 ;;		_efgtoa
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text26
  8542  004FCC                     __ptext26:
  8543                           	callstack 0
  8544  004FCC                     ___awmod:
  8545                           	callstack 16
  8546  004FCC  0E00               	movlw	0
  8547  004FCE  6E19               	movwf	___awmod@sign^0,c
  8548  004FD0  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  8549  004FD2  EFEF  F027         	goto	u8440
  8550  004FD6  EFED  F027         	goto	u8441
  8551  004FDA                     u8441:
  8552  004FDA  EFF5  F027         	goto	l8203
  8553  004FDE                     u8440:
  8554  004FDE  6C14               	negf	___awmod@dividend^0,c
  8555  004FE0  1E15               	comf	(___awmod@dividend+1)^0,f,c
  8556  004FE2  B0D8               	btfsc	status,0,c
  8557  004FE4  2A15               	incf	(___awmod@dividend+1)^0,f,c
  8558  004FE6  0E01               	movlw	1
  8559  004FE8  6E19               	movwf	___awmod@sign^0,c
  8560  004FEA                     l8203:
  8561  004FEA  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  8562  004FEC  EFFC  F027         	goto	u8450
  8563  004FF0  EFFA  F027         	goto	u8451
  8564  004FF4                     u8451:
  8565  004FF4  EF00  F028         	goto	l8207
  8566  004FF8                     u8450:
  8567  004FF8  6C16               	negf	___awmod@divisor^0,c
  8568  004FFA  1E17               	comf	(___awmod@divisor+1)^0,f,c
  8569  004FFC  B0D8               	btfsc	status,0,c
  8570  004FFE  2A17               	incf	(___awmod@divisor+1)^0,f,c
  8571  005000                     l8207:
  8572  005000  5016               	movf	___awmod@divisor^0,w,c
  8573  005002  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  8574  005004  B4D8               	btfsc	status,2,c
  8575  005006  EF07  F028         	goto	u8461
  8576  00500A  EF09  F028         	goto	u8460
  8577  00500E                     u8461:
  8578  00500E  EF2D  F028         	goto	l8223
  8579  005012                     u8460:
  8580  005012  0E01               	movlw	1
  8581  005014  6E18               	movwf	___awmod@counter^0,c
  8582  005016  EF11  F028         	goto	l8213
  8583  00501A                     l8211:
  8584  00501A  90D8               	bcf	status,0,c
  8585  00501C  3616               	rlcf	___awmod@divisor^0,f,c
  8586  00501E  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  8587  005020  2A18               	incf	___awmod@counter^0,f,c
  8588  005022                     l8213:
  8589  005022  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  8590  005024  EF16  F028         	goto	u8471
  8591  005028  EF18  F028         	goto	u8470
  8592  00502C                     u8471:
  8593  00502C  EF0D  F028         	goto	l8211
  8594  005030                     u8470:
  8595  005030                     l8215:
  8596  005030  5016               	movf	___awmod@divisor^0,w,c
  8597  005032  5C14               	subwf	___awmod@dividend^0,w,c
  8598  005034  5017               	movf	(___awmod@divisor+1)^0,w,c
  8599  005036  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  8600  005038  A0D8               	btfss	status,0,c
  8601  00503A  EF21  F028         	goto	u8481
  8602  00503E  EF23  F028         	goto	u8480
  8603  005042                     u8481:
  8604  005042  EF27  F028         	goto	l8219
  8605  005046                     u8480:
  8606  005046  5016               	movf	___awmod@divisor^0,w,c
  8607  005048  5E14               	subwf	___awmod@dividend^0,f,c
  8608  00504A  5017               	movf	(___awmod@divisor+1)^0,w,c
  8609  00504C  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  8610  00504E                     l8219:
  8611  00504E  90D8               	bcf	status,0,c
  8612  005050  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  8613  005052  3216               	rrcf	___awmod@divisor^0,f,c
  8614  005054  2E18               	decfsz	___awmod@counter^0,f,c
  8615  005056  EF18  F028         	goto	l8215
  8616  00505A                     l8223:
  8617  00505A  5019               	movf	___awmod@sign^0,w,c
  8618  00505C  B4D8               	btfsc	status,2,c
  8619  00505E  EF33  F028         	goto	u8491
  8620  005062  EF35  F028         	goto	u8490
  8621  005066                     u8491:
  8622  005066  EF39  F028         	goto	l8227
  8623  00506A                     u8490:
  8624  00506A  6C14               	negf	___awmod@dividend^0,c
  8625  00506C  1E15               	comf	(___awmod@dividend+1)^0,f,c
  8626  00506E  B0D8               	btfsc	status,0,c
  8627  005070  2A15               	incf	(___awmod@dividend+1)^0,f,c
  8628  005072                     l8227:
  8629  005072  C014  F014         	movff	___awmod@dividend,?___awmod
  8630  005076  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  8631  00507A  0012               	return		;funcret
  8632  00507C                     __end_of___awmod:
  8633                           	callstack 0
  8634                           
  8635 ;; *************** function _dtoa *****************
  8636 ;; Defined at:
  8637 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8640 ;;		 -> NULL(0), 
  8641 ;;  d               8    2[BANK0 ] long long 
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;  n               8   18[BANK0 ] long long 
  8644 ;;  i               2   26[BANK0 ] int 
  8645 ;;  s               2   16[BANK0 ] int 
  8646 ;;  w               2   14[BANK0 ] int 
  8647 ;;  p               2   12[BANK0 ] int 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  2    0[BANK0 ] int 
  8650 ;; Registers used:
  8651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8657 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8658 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8659 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;Total ram usage:       36 bytes
  8662 ;; Hardware stack levels used: 1
  8663 ;; Hardware stack levels required when called: 13
  8664 ;; This function calls:
  8665 ;;		___aodiv
  8666 ;;		___aomod
  8667 ;;		_abs
  8668 ;;		_pad
  8669 ;; This function is called by:
  8670 ;;		_vfpfcnvrt
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           	psect	text27
  8675  0032AE                     __ptext27:
  8676                           	callstack 0
  8677  0032AE                     _dtoa:
  8678                           	callstack 12
  8679  0032AE                     
  8680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8681  0032AE  C062  F072         	movff	dtoa@d,dtoa@n
  8682  0032B2  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  8683  0032B6  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  8684  0032BA  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  8685  0032BE  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  8686  0032C2  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  8687  0032C6  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  8688  0032CA  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  8689  0032CE                     
  8690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8691  0032CE  0100               	movlb	0	; () banked
  8692  0032D0  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  8693  0032D2  EF6D  F019         	goto	u8931
  8694  0032D6  EF70  F019         	goto	u8930
  8695  0032DA                     u8931:
  8696  0032DA  0E01               	movlw	1
  8697  0032DC  EF71  F019         	goto	u8940
  8698  0032E0                     u8930:
  8699  0032E0  0E00               	movlw	0
  8700  0032E2                     u8940:
  8701  0032E2  6F70               	movwf	dtoa@s& (0+255),b
  8702  0032E4  6B71               	clrf	(dtoa@s+1)& (0+255),b
  8703                           
  8704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8705  0032E6  5170               	movf	dtoa@s& (0+255),w,b
  8706  0032E8  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8707  0032EA  B4D8               	btfsc	status,2,c
  8708  0032EC  EF7A  F019         	goto	u8951
  8709  0032F0  EF7C  F019         	goto	u8950
  8710  0032F4                     u8951:
  8711  0032F4  EF8C  F019         	goto	l8417
  8712  0032F8                     u8950:
  8713  0032F8                     
  8714                           ; BSR set to: 0
  8715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8716  0032F8  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  8717  0032FA  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  8718  0032FC  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  8719  0032FE  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  8720  003300  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  8721  003302  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  8722  003304  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  8723  003306  6D72               	negf	dtoa@n& (0+255),b
  8724  003308  0E00               	movlw	0
  8725  00330A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  8726  00330C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  8727  00330E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  8728  003310  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  8729  003312  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  8730  003314  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  8731  003316  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  8732  003318                     l8417:
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8736  003318  BE3B               	btfsc	(_prec+1)^0,7,c
  8737  00331A  EF91  F019         	goto	u8961
  8738  00331E  EF93  F019         	goto	u8960
  8739  003322                     u8961:
  8740  003322  EF94  F019         	goto	l8421
  8741  003326                     u8960:
  8742  003326                     
  8743                           ; BSR set to: 0
  8744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8745  003326  923C               	bcf	_flags^0,1,c
  8746  003328                     l8421:
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8750  003328  BE3B               	btfsc	(_prec+1)^0,7,c
  8751  00332A  EFA1  F019         	goto	u8970
  8752  00332E  503B               	movf	(_prec+1)^0,w,c
  8753  003330  E106               	bnz	u8971
  8754  003332  043A               	decf	_prec^0,w,c
  8755  003334  B0D8               	btfsc	status,0,c
  8756  003336  EF9F  F019         	goto	u8971
  8757  00333A  EFA1  F019         	goto	u8970
  8758  00333E                     u8971:
  8759  00333E  EFA7  F019         	goto	l2145
  8760  003342                     u8970:
  8761  003342                     
  8762                           ; BSR set to: 0
  8763  003342  0E00               	movlw	0
  8764  003344  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  8765  003346  0E01               	movlw	1
  8766  003348  6F6C               	movwf	dtoa@p& (0+255),b
  8767  00334A  EFAB  F019         	goto	l2147
  8768  00334E                     l2145:
  8769                           
  8770                           ; BSR set to: 0
  8771  00334E  C03A  F06C         	movff	_prec,dtoa@p
  8772  003352  C03B  F06D         	movff	_prec+1,dtoa@p+1
  8773  003356                     l2147:
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8777  003356  C0E5  F06E         	movff	_width,dtoa@w
  8778  00335A  C0E6  F06F         	movff	_width+1,dtoa@w+1
  8779  00335E                     
  8780                           ; BSR set to: 0
  8781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8782  00335E  5170               	movf	dtoa@s& (0+255),w,b
  8783  003360  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8784  003362  A4D8               	btfss	status,2,c
  8785  003364  EFB6  F019         	goto	u8981
  8786  003368  EFB8  F019         	goto	u8980
  8787  00336C                     u8981:
  8788  00336C  EFBF  F019         	goto	l8429
  8789  003370                     u8980:
  8790  003370                     
  8791                           ; BSR set to: 0
  8792  003370  A43C               	btfss	_flags^0,2,c
  8793  003372  EFBD  F019         	goto	u8991
  8794  003376  EFBF  F019         	goto	u8990
  8795  00337A                     u8991:
  8796  00337A  EFC2  F019         	goto	l8431
  8797  00337E                     u8990:
  8798  00337E                     l8429:
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8802  00337E  076E               	decf	dtoa@w& (0+255),f,b
  8803  003380  A0D8               	btfss	status,0,c
  8804  003382  076F               	decf	(dtoa@w+1)& (0+255),f,b
  8805  003384                     l8431:
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8809  003384  0E00               	movlw	0
  8810  003386  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  8811  003388  0E4F               	movlw	79
  8812  00338A  6F7A               	movwf	dtoa@i& (0+255),b
  8813  00338C                     
  8814                           ; BSR set to: 0
  8815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8816  00338C  0E00               	movlw	0
  8817  00338E  0101               	movlb	1	; () banked
  8818  003390  6F89               	movwf	(_dbuf+79)& (0+255),b
  8819                           
  8820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8821  003392  EF48  F01A         	goto	l8445
  8822  003396                     l8435:
  8823                           
  8824                           ; BSR set to: 0
  8825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8826  003396  077A               	decf	dtoa@i& (0+255),f,b
  8827  003398  A0D8               	btfss	status,0,c
  8828  00339A  077B               	decf	(dtoa@i+1)& (0+255),f,b
  8829  00339C                     
  8830                           ; BSR set to: 0
  8831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8832  00339C  0E3A               	movlw	low _dbuf
  8833  00339E  257A               	addwf	dtoa@i& (0+255),w,b
  8834  0033A0  6ED9               	movwf	fsr2l,c
  8835  0033A2  0E01               	movlw	high _dbuf
  8836  0033A4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  8837  0033A6  6EDA               	movwf	fsr2h,c
  8838  0033A8  C072  F014         	movff	dtoa@n,___aomod@dividend
  8839  0033AC  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  8840  0033B0  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  8841  0033B4  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  8842  0033B8  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  8843  0033BC  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  8844  0033C0  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  8845  0033C4  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  8846  0033C8  0E0A               	movlw	10
  8847  0033CA  6E1C               	movwf	___aomod@divisor^0,c
  8848  0033CC  0E00               	movlw	0
  8849  0033CE  6E1D               	movwf	(___aomod@divisor+1)^0,c
  8850  0033D0  0E00               	movlw	0
  8851  0033D2  6E1E               	movwf	(___aomod@divisor+2)^0,c
  8852  0033D4  0E00               	movlw	0
  8853  0033D6  6E1F               	movwf	(___aomod@divisor+3)^0,c
  8854  0033D8  0E00               	movlw	0
  8855  0033DA  6E20               	movwf	(___aomod@divisor+4)^0,c
  8856  0033DC  0E00               	movlw	0
  8857  0033DE  6E21               	movwf	(___aomod@divisor+5)^0,c
  8858  0033E0  0E00               	movlw	0
  8859  0033E2  6E22               	movwf	(___aomod@divisor+6)^0,c
  8860  0033E4  0E00               	movlw	0
  8861  0033E6  6E23               	movwf	(___aomod@divisor+7)^0,c
  8862  0033E8  ECE9  F020         	call	___aomod	;wreg free
  8863  0033EC  C014  F031         	movff	?___aomod,??_dtoa
  8864  0033F0  C015  F032         	movff	?___aomod+1,??_dtoa+1
  8865  0033F4  C016  F033         	movff	?___aomod+2,??_dtoa+2
  8866  0033F8  C017  F034         	movff	?___aomod+3,??_dtoa+3
  8867  0033FC  C018  F035         	movff	?___aomod+4,??_dtoa+4
  8868  003400  C019  F036         	movff	?___aomod+5,??_dtoa+5
  8869  003404  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  8870  003408  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  8871  00340C  C031  F026         	movff	??_dtoa,abs@a
  8872  003410  C033  F027         	movff	??_dtoa+2,abs@a+1
  8873  003414  EC1D  F02C         	call	_abs	;wreg free
  8874  003418  5026               	movf	?_abs^0,w,c
  8875  00341A  0F30               	addlw	48
  8876  00341C  6EDF               	movwf	indf2,c
  8877  00341E                     
  8878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8879  00341E  0100               	movlb	0	; () banked
  8880  003420  076C               	decf	dtoa@p& (0+255),f,b
  8881  003422  A0D8               	btfss	status,0,c
  8882  003424  076D               	decf	(dtoa@p+1)& (0+255),f,b
  8883  003426                     
  8884                           ; BSR set to: 0
  8885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8886  003426  076E               	decf	dtoa@w& (0+255),f,b
  8887  003428  A0D8               	btfss	status,0,c
  8888  00342A  076F               	decf	(dtoa@w+1)& (0+255),f,b
  8889  00342C                     
  8890                           ; BSR set to: 0
  8891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8892  00342C  C072  F014         	movff	dtoa@n,___aodiv@dividend
  8893  003430  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  8894  003434  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  8895  003438  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  8896  00343C  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  8897  003440  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  8898  003444  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  8899  003448  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  8900  00344C  0E0A               	movlw	10
  8901  00344E  6E1C               	movwf	___aodiv@divisor^0,c
  8902  003450  0E00               	movlw	0
  8903  003452  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  8904  003454  0E00               	movlw	0
  8905  003456  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  8906  003458  0E00               	movlw	0
  8907  00345A  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  8908  00345C  0E00               	movlw	0
  8909  00345E  6E20               	movwf	(___aodiv@divisor+4)^0,c
  8910  003460  0E00               	movlw	0
  8911  003462  6E21               	movwf	(___aodiv@divisor+5)^0,c
  8912  003464  0E00               	movlw	0
  8913  003466  6E22               	movwf	(___aodiv@divisor+6)^0,c
  8914  003468  0E00               	movlw	0
  8915  00346A  6E23               	movwf	(___aodiv@divisor+7)^0,c
  8916  00346C  EC25  F020         	call	___aodiv	;wreg free
  8917  003470  C014  F072         	movff	?___aodiv,dtoa@n
  8918  003474  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  8919  003478  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  8920  00347C  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  8921  003480  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  8922  003484  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  8923  003488  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  8924  00348C  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  8925  003490                     l8445:
  8926                           
  8927                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8928  003490  0100               	movlb	0	; () banked
  8929  003492  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  8930  003494  EF54  F01A         	goto	u9001
  8931  003498  517B               	movf	(dtoa@i+1)& (0+255),w,b
  8932  00349A  E108               	bnz	u9000
  8933  00349C  057A               	decf	dtoa@i& (0+255),w,b
  8934  00349E  A0D8               	btfss	status,0,c
  8935  0034A0  EF54  F01A         	goto	u9001
  8936  0034A4  EF56  F01A         	goto	u9000
  8937  0034A8                     u9001:
  8938  0034A8  EF86  F01A         	goto	l8455
  8939  0034AC                     u9000:
  8940  0034AC                     
  8941                           ; BSR set to: 0
  8942  0034AC  5172               	movf	dtoa@n& (0+255),w,b
  8943  0034AE  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  8944  0034B0  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  8945  0034B2  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  8946  0034B4  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  8947  0034B6  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  8948  0034B8  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  8949  0034BA  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  8950  0034BC  A4D8               	btfss	status,2,c
  8951  0034BE  EF63  F01A         	goto	u9011
  8952  0034C2  EF65  F01A         	goto	u9010
  8953  0034C6                     u9011:
  8954  0034C6  EFCB  F019         	goto	l8435
  8955  0034CA                     u9010:
  8956  0034CA                     
  8957                           ; BSR set to: 0
  8958  0034CA  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  8959  0034CC  EF72  F01A         	goto	u9020
  8960  0034D0  516D               	movf	(dtoa@p+1)& (0+255),w,b
  8961  0034D2  E106               	bnz	u9021
  8962  0034D4  056C               	decf	dtoa@p& (0+255),w,b
  8963  0034D6  B0D8               	btfsc	status,0,c
  8964  0034D8  EF70  F01A         	goto	u9021
  8965  0034DC  EF72  F01A         	goto	u9020
  8966  0034E0                     u9021:
  8967  0034E0  EFCB  F019         	goto	l8435
  8968  0034E4                     u9020:
  8969  0034E4                     
  8970                           ; BSR set to: 0
  8971  0034E4  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  8972  0034E6  EF7D  F01A         	goto	u9031
  8973  0034EA  516F               	movf	(dtoa@w+1)& (0+255),w,b
  8974  0034EC  E108               	bnz	u9030
  8975  0034EE  056E               	decf	dtoa@w& (0+255),w,b
  8976  0034F0  A0D8               	btfss	status,0,c
  8977  0034F2  EF7D  F01A         	goto	u9031
  8978  0034F6  EF7F  F01A         	goto	u9030
  8979  0034FA                     u9031:
  8980  0034FA  EF86  F01A         	goto	l8455
  8981  0034FE                     u9030:
  8982  0034FE                     
  8983                           ; BSR set to: 0
  8984  0034FE  B23C               	btfsc	_flags^0,1,c
  8985  003500  EF84  F01A         	goto	u9041
  8986  003504  EF86  F01A         	goto	u9040
  8987  003508                     u9041:
  8988  003508  EFCB  F019         	goto	l8435
  8989  00350C                     u9040:
  8990  00350C                     l8455:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8994  00350C  5170               	movf	dtoa@s& (0+255),w,b
  8995  00350E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  8996  003510  A4D8               	btfss	status,2,c
  8997  003512  EF8D  F01A         	goto	u9051
  8998  003516  EF8F  F01A         	goto	u9050
  8999  00351A                     u9051:
  9000  00351A  EF96  F01A         	goto	l8459
  9001  00351E                     u9050:
  9002  00351E                     
  9003                           ; BSR set to: 0
  9004  00351E  A43C               	btfss	_flags^0,2,c
  9005  003520  EF94  F01A         	goto	u9061
  9006  003524  EF96  F01A         	goto	u9060
  9007  003528                     u9061:
  9008  003528  EFB5  F01A         	goto	l8469
  9009  00352C                     u9060:
  9010  00352C                     l8459:
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9014  00352C  077A               	decf	dtoa@i& (0+255),f,b
  9015  00352E  A0D8               	btfss	status,0,c
  9016  003530  077B               	decf	(dtoa@i+1)& (0+255),f,b
  9017  003532                     
  9018                           ; BSR set to: 0
  9019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9020  003532  5170               	movf	dtoa@s& (0+255),w,b
  9021  003534  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  9022  003536  A4D8               	btfss	status,2,c
  9023  003538  EFA0  F01A         	goto	u9071
  9024  00353C  EFA2  F01A         	goto	u9070
  9025  003540                     u9071:
  9026  003540  EFA8  F01A         	goto	l8465
  9027  003544                     u9070:
  9028  003544                     
  9029                           ; BSR set to: 0
  9030  003544  0E00               	movlw	0
  9031  003546  6F6B               	movwf	(_dtoa$3542+1)& (0+255),b
  9032  003548  0E2B               	movlw	43
  9033  00354A  6F6A               	movwf	_dtoa$3542& (0+255),b
  9034  00354C  EFAC  F01A         	goto	l8467
  9035  003550                     l8465:
  9036                           
  9037                           ; BSR set to: 0
  9038  003550  0E00               	movlw	0
  9039  003552  6F6B               	movwf	(_dtoa$3542+1)& (0+255),b
  9040  003554  0E2D               	movlw	45
  9041  003556  6F6A               	movwf	_dtoa$3542& (0+255),b
  9042  003558                     l8467:
  9043                           
  9044                           ; BSR set to: 0
  9045  003558  0E3A               	movlw	low _dbuf
  9046  00355A  257A               	addwf	dtoa@i& (0+255),w,b
  9047  00355C  6ED9               	movwf	fsr2l,c
  9048  00355E  0E01               	movlw	high _dbuf
  9049  003560  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  9050  003562  6EDA               	movwf	fsr2h,c
  9051  003564  0060  F1AB  FFDF   	movff	_dtoa$3542,indf2
  9052  00356A                     l8469:
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9056  00356A  C060  F026         	movff	dtoa@fp,pad@fp
  9057  00356E  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  9058  003572  0E3A               	movlw	low _dbuf
  9059  003574  257A               	addwf	dtoa@i& (0+255),w,b
  9060  003576  6E28               	movwf	pad@buf^0,c
  9061  003578  0E01               	movlw	high _dbuf
  9062  00357A  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  9063  00357C  6E29               	movwf	(pad@buf+1)^0,c
  9064  00357E  C06E  F02A         	movff	dtoa@w,pad@p
  9065  003582  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  9066  003586  EC25  F027         	call	_pad	;wreg free
  9067  00358A  C026  F060         	movff	?_pad,?_dtoa
  9068  00358E  C027  F061         	movff	?_pad+1,?_dtoa+1
  9069  003592  0012               	return		;funcret
  9070  003594                     __end_of_dtoa:
  9071                           	callstack 0
  9072                           
  9073 ;; *************** function _pad *****************
  9074 ;; Defined at:
  9075 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  9078 ;;		 -> NULL(0), 
  9079 ;;  buf             2   39[COMRAM] PTR unsigned char 
  9080 ;;		 -> dbuf(80), 
  9081 ;;  p               2   41[COMRAM] int 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  w               2   46[COMRAM] int 
  9084 ;;  i               2   44[COMRAM] int 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  2   37[COMRAM] int 
  9087 ;; Registers used:
  9088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9094 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9095 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9097 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9098 ;;Total ram usage:       11 bytes
  9099 ;; Hardware stack levels used: 1
  9100 ;; Hardware stack levels required when called: 12
  9101 ;; This function calls:
  9102 ;;		_fputc
  9103 ;;		_fputs
  9104 ;;		_strlen
  9105 ;; This function is called by:
  9106 ;;		_dtoa
  9107 ;;		_efgtoa
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           	psect	text28
  9112  004E4A                     __ptext28:
  9113                           	callstack 0
  9114  004E4A                     _pad:
  9115                           	callstack 12
  9116  004E4A                     
  9117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9118  004E4A  A03C               	btfss	_flags^0,0,c
  9119  004E4C  EF2A  F027         	goto	u8661
  9120  004E50  EF2C  F027         	goto	u8660
  9121  004E54                     u8661:
  9122  004E54  EF36  F027         	goto	l8325
  9123  004E58                     u8660:
  9124  004E58                     
  9125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9126  004E58  C028  F01F         	movff	pad@buf,fputs@s
  9127  004E5C  C029  F020         	movff	pad@buf+1,fputs@s+1
  9128  004E60  C026  F021         	movff	pad@fp,fputs@fp
  9129  004E64  C027  F022         	movff	pad@fp+1,fputs@fp+1
  9130  004E68  ECD9  F02B         	call	_fputs	;wreg free
  9131  004E6C                     l8325:
  9132                           
  9133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9134  004E6C  BE2B               	btfsc	(pad@p+1)^0,7,c
  9135  004E6E  EF3B  F027         	goto	u8671
  9136  004E72  EF3D  F027         	goto	u8670
  9137  004E76                     u8671:
  9138  004E76  EF43  F027         	goto	l8329
  9139  004E7A                     u8670:
  9140  004E7A  C02A  F02F         	movff	pad@p,pad@w
  9141  004E7E  C02B  F030         	movff	pad@p+1,pad@w+1
  9142  004E82  EF47  F027         	goto	l2134
  9143  004E86                     l8329:
  9144  004E86  0E00               	movlw	0
  9145  004E88  6E30               	movwf	(pad@w+1)^0,c
  9146  004E8A  0E00               	movlw	0
  9147  004E8C  6E2F               	movwf	pad@w^0,c
  9148  004E8E                     l2134:
  9149                           
  9150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9151  004E8E  0E00               	movlw	0
  9152  004E90  6E2E               	movwf	(pad@i+1)^0,c
  9153  004E92  0E00               	movlw	0
  9154  004E94  6E2D               	movwf	pad@i^0,c
  9155                           
  9156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9157  004E96  EF59  F027         	goto	l8335
  9158  004E9A                     l8331:
  9159                           
  9160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9161  004E9A  0E00               	movlw	0
  9162  004E9C  6E17               	movwf	(fputc@c+1)^0,c
  9163  004E9E  0E20               	movlw	32
  9164  004EA0  6E16               	movwf	fputc@c^0,c
  9165  004EA2  C026  F018         	movff	pad@fp,fputc@fp
  9166  004EA6  C027  F019         	movff	pad@fp+1,fputc@fp+1
  9167  004EAA  ECE5  F028         	call	_fputc	;wreg free
  9168  004EAE                     
  9169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9170  004EAE  4A2D               	infsnz	pad@i^0,f,c
  9171  004EB0  2A2E               	incf	(pad@i+1)^0,f,c
  9172  004EB2                     l8335:
  9173                           
  9174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9175  004EB2  502F               	movf	pad@w^0,w,c
  9176  004EB4  5C2D               	subwf	pad@i^0,w,c
  9177  004EB6  502E               	movf	(pad@i+1)^0,w,c
  9178  004EB8  0A80               	xorlw	128
  9179  004EBA  6E2C               	movwf	??_pad^0,c
  9180  004EBC  5030               	movf	(pad@w+1)^0,w,c
  9181  004EBE  0A80               	xorlw	128
  9182  004EC0  582C               	subwfb	??_pad^0,w,c
  9183  004EC2  A0D8               	btfss	status,0,c
  9184  004EC4  EF66  F027         	goto	u8681
  9185  004EC8  EF68  F027         	goto	u8680
  9186  004ECC                     u8681:
  9187  004ECC  EF4D  F027         	goto	l8331
  9188  004ED0                     u8680:
  9189  004ED0                     
  9190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9191  004ED0  B03C               	btfsc	_flags^0,0,c
  9192  004ED2  EF6D  F027         	goto	u8691
  9193  004ED6  EF6F  F027         	goto	u8690
  9194  004EDA                     u8691:
  9195  004EDA  EF79  F027         	goto	l8339
  9196  004EDE                     u8690:
  9197  004EDE                     
  9198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9199  004EDE  C028  F01F         	movff	pad@buf,fputs@s
  9200  004EE2  C029  F020         	movff	pad@buf+1,fputs@s+1
  9201  004EE6  C026  F021         	movff	pad@fp,fputs@fp
  9202  004EEA  C027  F022         	movff	pad@fp+1,fputs@fp+1
  9203  004EEE  ECD9  F02B         	call	_fputs	;wreg free
  9204  004EF2                     l8339:
  9205                           
  9206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9207  004EF2  C028  F014         	movff	pad@buf,strlen@s
  9208  004EF6  C029  F015         	movff	pad@buf+1,strlen@s+1
  9209  004EFA  EC3D  F02C         	call	_strlen	;wreg free
  9210  004EFE  502F               	movf	pad@w^0,w,c
  9211  004F00  2414               	addwf	?_strlen^0,w,c
  9212  004F02  6E26               	movwf	?_pad^0,c
  9213  004F04  5030               	movf	(pad@w+1)^0,w,c
  9214  004F06  2015               	addwfc	(?_strlen+1)^0,w,c
  9215  004F08  6E27               	movwf	(?_pad+1)^0,c
  9216  004F0A  0012               	return		;funcret
  9217  004F0C                     __end_of_pad:
  9218                           	callstack 0
  9219                           
  9220 ;; *************** function _strlen *****************
  9221 ;; Defined at:
  9222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  s               2   19[COMRAM] PTR const unsigned char 
  9225 ;;		 -> dbuf(80), 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  a               2   21[COMRAM] PTR const unsigned char 
  9228 ;;		 -> dbuf(80), 
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  2   19[COMRAM] unsigned int 
  9231 ;; Registers used:
  9232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9238 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;Total ram usage:        4 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 8
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_pad
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text29
  9253  00587A                     __ptext29:
  9254                           	callstack 0
  9255  00587A                     _strlen:
  9256                           	callstack 15
  9257  00587A  C014  F016         	movff	strlen@s,strlen@a
  9258  00587E  C015  F017         	movff	strlen@s+1,strlen@a+1
  9259  005882  EF45  F02C         	goto	l7787
  9260  005886                     l7785:
  9261  005886  4A14               	infsnz	strlen@s^0,f,c
  9262  005888  2A15               	incf	(strlen@s+1)^0,f,c
  9263  00588A                     l7787:
  9264  00588A  0060  F053  FFD9   	movff	strlen@s,fsr2l
  9265  005890  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  9266  005896  50DF               	movf	indf2,w,c
  9267  005898  A4D8               	btfss	status,2,c
  9268  00589A  EF51  F02C         	goto	u7801
  9269  00589E  EF53  F02C         	goto	u7800
  9270  0058A2                     u7801:
  9271  0058A2  EF43  F02C         	goto	l7785
  9272  0058A6                     u7800:
  9273  0058A6  5016               	movf	strlen@a^0,w,c
  9274  0058A8  5C14               	subwf	strlen@s^0,w,c
  9275  0058AA  6E14               	movwf	?_strlen^0,c
  9276  0058AC  5017               	movf	(strlen@a+1)^0,w,c
  9277  0058AE  5815               	subwfb	(strlen@s+1)^0,w,c
  9278  0058B0  6E15               	movwf	(?_strlen+1)^0,c
  9279  0058B2  0012               	return		;funcret
  9280  0058B4                     __end_of_strlen:
  9281                           	callstack 0
  9282                           
  9283 ;; *************** function _fputs *****************
  9284 ;; Defined at:
  9285 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9286 ;; Parameters:    Size  Location     Type
  9287 ;;  s               2   30[COMRAM] PTR const unsigned char 
  9288 ;;		 -> dbuf(80), 
  9289 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  9290 ;;		 -> NULL(0), 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  i               2   35[COMRAM] int 
  9293 ;;  c               1   34[COMRAM] unsigned char 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  2   30[COMRAM] int 
  9296 ;; Registers used:
  9297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9307 ;;Total ram usage:        7 bytes
  9308 ;; Hardware stack levels used: 1
  9309 ;; Hardware stack levels required when called: 11
  9310 ;; This function calls:
  9311 ;;		_fputc
  9312 ;; This function is called by:
  9313 ;;		_pad
  9314 ;; This function uses a non-reentrant model
  9315 ;;
  9316                           
  9317                           	psect	text30
  9318  0057B2                     __ptext30:
  9319                           	callstack 0
  9320  0057B2                     _fputs:
  9321                           	callstack 12
  9322  0057B2  0E00               	movlw	0
  9323  0057B4  6E25               	movwf	(fputs@i+1)^0,c
  9324  0057B6  0E00               	movlw	0
  9325  0057B8  6E24               	movwf	fputs@i^0,c
  9326  0057BA  EFEA  F02B         	goto	l7781
  9327  0057BE                     l7777:
  9328  0057BE  C023  F016         	movff	fputs@c,fputc@c
  9329  0057C2  6A17               	clrf	(fputc@c+1)^0,c
  9330  0057C4  C021  F018         	movff	fputs@fp,fputc@fp
  9331  0057C8  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  9332  0057CC  ECE5  F028         	call	_fputc	;wreg free
  9333  0057D0  4A24               	infsnz	fputs@i^0,f,c
  9334  0057D2  2A25               	incf	(fputs@i+1)^0,f,c
  9335  0057D4                     l7781:
  9336  0057D4  5024               	movf	fputs@i^0,w,c
  9337  0057D6  241F               	addwf	fputs@s^0,w,c
  9338  0057D8  6ED9               	movwf	fsr2l,c
  9339  0057DA  5025               	movf	(fputs@i+1)^0,w,c
  9340  0057DC  2020               	addwfc	(fputs@s+1)^0,w,c
  9341  0057DE  6EDA               	movwf	fsr2h,c
  9342  0057E0  50DF               	movf	indf2,w,c
  9343  0057E2  6E23               	movwf	fputs@c^0,c
  9344  0057E4  5023               	movf	fputs@c^0,w,c
  9345  0057E6  A4D8               	btfss	status,2,c
  9346  0057E8  EFF8  F02B         	goto	u7791
  9347  0057EC  EFFA  F02B         	goto	u7790
  9348  0057F0                     u7791:
  9349  0057F0  EFDF  F02B         	goto	l7777
  9350  0057F4                     u7790:
  9351  0057F4  0012               	return		;funcret
  9352  0057F6                     __end_of_fputs:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function _fputc *****************
  9356 ;; Defined at:
  9357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  c               2   21[COMRAM] int 
  9360 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  9361 ;;		 -> NULL(0), 
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  2   21[COMRAM] int 
  9366 ;; Registers used:
  9367 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9375 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9376 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;Total ram usage:        9 bytes
  9378 ;; Hardware stack levels used: 1
  9379 ;; Hardware stack levels required when called: 10
  9380 ;; This function calls:
  9381 ;;		_putch
  9382 ;; This function is called by:
  9383 ;;		_pad
  9384 ;;		_vfpfcnvrt
  9385 ;;		_fputs
  9386 ;; This function uses a non-reentrant model
  9387 ;;
  9388                           
  9389                           	psect	text31
  9390  0051CA                     __ptext31:
  9391                           	callstack 0
  9392  0051CA                     _fputc:
  9393                           	callstack 15
  9394  0051CA  5018               	movf	fputc@fp^0,w,c
  9395  0051CC  1019               	iorwf	(fputc@fp+1)^0,w,c
  9396  0051CE  B4D8               	btfsc	status,2,c
  9397  0051D0  EFEC  F028         	goto	u7361
  9398  0051D4  EFEE  F028         	goto	u7360
  9399  0051D8                     u7361:
  9400  0051D8  EFF7  F028         	goto	l7563
  9401  0051DC                     u7360:
  9402  0051DC  5018               	movf	fputc@fp^0,w,c
  9403  0051DE  1019               	iorwf	(fputc@fp+1)^0,w,c
  9404  0051E0  A4D8               	btfss	status,2,c
  9405  0051E2  EFF5  F028         	goto	u7371
  9406  0051E6  EFF7  F028         	goto	u7370
  9407  0051EA                     u7371:
  9408  0051EA  EFFC  F028         	goto	l7565
  9409  0051EE                     u7370:
  9410  0051EE                     l7563:
  9411  0051EE  5016               	movf	fputc@c^0,w,c
  9412  0051F0  EC98  F02F         	call	_putch
  9413  0051F4  EF2F  F029         	goto	l2331
  9414  0051F8                     l7565:
  9415  0051F8  EE20 F004          	lfsr	2,4
  9416  0051FC  5018               	movf	fputc@fp^0,w,c
  9417  0051FE  26D9               	addwf	fsr2l,f,c
  9418  005200  5019               	movf	(fputc@fp+1)^0,w,c
  9419  005202  22DA               	addwfc	fsr2h,f,c
  9420  005204  50DE               	movf	postinc2,w,c
  9421  005206  10DE               	iorwf	postinc2,w,c
  9422  005208  B4D8               	btfsc	status,2,c
  9423  00520A  EF09  F029         	goto	u7381
  9424  00520E  EF0B  F029         	goto	u7380
  9425  005212                     u7381:
  9426  005212  EF26  F029         	goto	l7569
  9427  005216                     u7380:
  9428  005216  EE20 F004          	lfsr	2,4
  9429  00521A  5018               	movf	fputc@fp^0,w,c
  9430  00521C  26D9               	addwf	fsr2l,f,c
  9431  00521E  5019               	movf	(fputc@fp+1)^0,w,c
  9432  005220  22DA               	addwfc	fsr2h,f,c
  9433  005222  EE10 F002          	lfsr	1,2
  9434  005226  5018               	movf	fputc@fp^0,w,c
  9435  005228  26E1               	addwf	fsr1l,f,c
  9436  00522A  5019               	movf	(fputc@fp+1)^0,w,c
  9437  00522C  22E2               	addwfc	fsr1h,f,c
  9438  00522E  50DE               	movf	postinc2,w,c
  9439  005230  5CE6               	subwf	postinc1,w,c
  9440  005232  50E6               	movf	postinc1,w,c
  9441  005234  0A80               	xorlw	128
  9442  005236  6E1E               	movwf	(??_fputc+4)^0,c
  9443  005238  50DE               	movf	postinc2,w,c
  9444  00523A  0A80               	xorlw	128
  9445  00523C  581E               	subwfb	(??_fputc+4)^0,w,c
  9446  00523E  B0D8               	btfsc	status,0,c
  9447  005240  EF24  F029         	goto	u7391
  9448  005244  EF26  F029         	goto	u7390
  9449  005248                     u7391:
  9450  005248  EF2F  F029         	goto	l2331
  9451  00524C                     u7390:
  9452  00524C                     l7569:
  9453  00524C  EE20 F002          	lfsr	2,2
  9454  005250  5018               	movf	fputc@fp^0,w,c
  9455  005252  26D9               	addwf	fsr2l,f,c
  9456  005254  5019               	movf	(fputc@fp+1)^0,w,c
  9457  005256  22DA               	addwfc	fsr2h,f,c
  9458  005258  2ADE               	incf	postinc2,f,c
  9459  00525A  0E00               	movlw	0
  9460  00525C  22DD               	addwfc	postdec2,f,c
  9461  00525E                     l2331:
  9462  00525E  0012               	return		;funcret
  9463  005260                     __end_of_fputc:
  9464                           	callstack 0
  9465                           
  9466 ;; *************** function _putch *****************
  9467 ;; Defined at:
  9468 ;;		line 230 in file "mcc_generated_files/uart1.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;  txData          1    wreg     unsigned char 
  9471 ;; Auto vars:     Size  Location     Type
  9472 ;;  txData          1   20[COMRAM] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9486 ;;Total ram usage:        1 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 9
  9489 ;; This function calls:
  9490 ;;		_UART1_Write
  9491 ;; This function is called by:
  9492 ;;		_fputc
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text32
  9497  005F30                     __ptext32:
  9498                           	callstack 0
  9499  005F30                     _putch:
  9500                           	callstack 15
  9501                           
  9502                           ;incstack = 0
  9503                           ;putch@txData stored from wreg
  9504  005F30  6E15               	movwf	putch@txData^0,c
  9505  005F32                     
  9506                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  9507  005F32  5015               	movf	putch@txData^0,w,c
  9508  005F34  EC9A  F02A         	call	_UART1_Write
  9509  005F38  0012               	return		;funcret
  9510  005F3A                     __end_of_putch:
  9511                           	callstack 0
  9512                           
  9513 ;; *************** function _UART1_Write *****************
  9514 ;; Defined at:
  9515 ;;		line 202 in file "mcc_generated_files/uart1.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  txData          1    wreg     unsigned char 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  txData          1   19[COMRAM] unsigned char 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9533 ;;Total ram usage:        1 bytes
  9534 ;; Hardware stack levels used: 1
  9535 ;; Hardware stack levels required when called: 8
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_putch
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text33
  9544  005534                     __ptext33:
  9545                           	callstack 0
  9546  005534                     _UART1_Write:
  9547                           	callstack 15
  9548                           
  9549                           ;incstack = 0
  9550                           ;UART1_Write@txData stored from wreg
  9551  005534  6E14               	movwf	UART1_Write@txData^0,c
  9552  005536                     l7541:
  9553                           
  9554                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  9555  005536  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  9556  005538  B4D8               	btfsc	status,2,c
  9557  00553A  EFA1  F02A         	goto	u7331
  9558  00553E  EFA3  F02A         	goto	u7330
  9559  005542                     u7331:
  9560  005542  EF9B  F02A         	goto	l7541
  9561  005546                     u7330:
  9562  005546                     
  9563                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  9564  005546  0139               	movlb	57	; () banked
  9565  005548  B993               	btfsc	147,4,b	;volatile
  9566  00554A  EFA9  F02A         	goto	u7341
  9567  00554E  EFAB  F02A         	goto	u7340
  9568  005552                     u7341:
  9569  005552  EFB0  F02A         	goto	l309
  9570  005556                     u7340:
  9571  005556                     
  9572                           ; BSR set to: 57
  9573                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  9574  005556  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  9575                           
  9576                           ;mcc_generated_files/uart1.c: 211:     }
  9577  00555C  EFC6  F02A         	goto	l7555
  9578  005560                     l309:
  9579                           
  9580                           ; BSR set to: 57
  9581                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  9582  005560  9993               	bcf	147,4,b	;volatile
  9583  005562                     
  9584                           ; BSR set to: 57
  9585                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  9586  005562  0E10               	movlw	low _uart1TxBuffer
  9587  005564  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  9588  005566  6ED9               	movwf	fsr2l,c
  9589  005568  6ADA               	clrf	fsr2h,c
  9590  00556A  0E01               	movlw	high _uart1TxBuffer
  9591  00556C  22DA               	addwfc	fsr2h,f,c
  9592  00556E  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  9593  005574                     
  9594                           ; BSR set to: 57
  9595  005574  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  9596  005576                     
  9597                           ; BSR set to: 57
  9598                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  9599  005576  0E07               	movlw	7
  9600  005578  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  9601  00557A  EFC1  F02A         	goto	u7351
  9602  00557E  EFC3  F02A         	goto	u7350
  9603  005582                     u7351:
  9604  005582  EFC5  F02A         	goto	l7553
  9605  005586                     u7350:
  9606  005586                     
  9607                           ; BSR set to: 57
  9608                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  9609  005586  0E00               	movlw	0
  9610  005588  6E47               	movwf	_uart1TxHead^0,c	;volatile
  9611  00558A                     l7553:
  9612                           
  9613                           ; BSR set to: 57
  9614                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  9615  00558A  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  9616  00558C                     l7555:
  9617                           
  9618                           ; BSR set to: 57
  9619                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  9620  00558C  8993               	bsf	147,4,b	;volatile
  9621  00558E                     
  9622                           ; BSR set to: 57
  9623  00558E  0012               	return		;funcret
  9624  005590                     __end_of_UART1_Write:
  9625                           	callstack 0
  9626                           
  9627 ;; *************** function _abs *****************
  9628 ;; Defined at:
  9629 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  a               2   37[COMRAM] int 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  2   37[COMRAM] int 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;Total ram usage:        4 bytes
  9648 ;; Hardware stack levels used: 1
  9649 ;; Hardware stack levels required when called: 8
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_dtoa
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text34
  9658  00583A                     __ptext34:
  9659                           	callstack 0
  9660  00583A                     _abs:
  9661                           	callstack 16
  9662  00583A  BE27               	btfsc	(abs@a+1)^0,7,c
  9663  00583C  EF2A  F02C         	goto	u8700
  9664  005840  5027               	movf	(abs@a+1)^0,w,c
  9665  005842  E106               	bnz	u8701
  9666  005844  0426               	decf	abs@a^0,w,c
  9667  005846  B0D8               	btfsc	status,0,c
  9668  005848  EF28  F02C         	goto	u8701
  9669  00584C  EF2A  F02C         	goto	u8700
  9670  005850                     u8701:
  9671  005850  EF38  F02C         	goto	l2297
  9672  005854                     u8700:
  9673  005854  C026  F028         	movff	abs@a,??_abs
  9674  005858  C027  F029         	movff	abs@a+1,??_abs+1
  9675  00585C  1E28               	comf	??_abs^0,f,c
  9676  00585E  1E29               	comf	(??_abs+1)^0,f,c
  9677  005860  4A28               	infsnz	??_abs^0,f,c
  9678  005862  2A29               	incf	(??_abs+1)^0,f,c
  9679  005864  C028  F026         	movff	??_abs,?_abs
  9680  005868  C029  F027         	movff	??_abs+1,?_abs+1
  9681  00586C  EF3C  F02C         	goto	l2300
  9682  005870                     l2297:
  9683  005870  C026  F026         	movff	abs@a,?_abs
  9684  005874  C027  F027         	movff	abs@a+1,?_abs+1
  9685  005878                     l2300:
  9686  005878  0012               	return		;funcret
  9687  00587A                     __end_of_abs:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function ___aomod *****************
  9691 ;; Defined at:
  9692 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;  dividend        8   19[COMRAM] long long 
  9695 ;;  divisor         8   27[COMRAM] long long 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  sign            1   36[COMRAM] unsigned char 
  9698 ;;  counter         1   35[COMRAM] unsigned char 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  8   19[COMRAM] long long 
  9701 ;; Registers used:
  9702 ;;		wreg, status,2, status,0
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9708 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9711 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9712 ;;Total ram usage:       18 bytes
  9713 ;; Hardware stack levels used: 1
  9714 ;; Hardware stack levels required when called: 8
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_dtoa
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text35
  9723  0041D2                     __ptext35:
  9724                           	callstack 0
  9725  0041D2                     ___aomod:
  9726                           	callstack 16
  9727  0041D2  0E00               	movlw	0
  9728  0041D4  6E25               	movwf	___aomod@sign^0,c
  9729  0041D6  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  9730  0041D8  EFF2  F020         	goto	u7900
  9731  0041DC  EFF0  F020         	goto	u7901
  9732  0041E0                     u7901:
  9733  0041E0  EF04  F021         	goto	l7849
  9734  0041E4                     u7900:
  9735  0041E4  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  9736  0041E6  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  9737  0041E8  1E19               	comf	(___aomod@dividend+5)^0,f,c
  9738  0041EA  1E18               	comf	(___aomod@dividend+4)^0,f,c
  9739  0041EC  1E17               	comf	(___aomod@dividend+3)^0,f,c
  9740  0041EE  1E16               	comf	(___aomod@dividend+2)^0,f,c
  9741  0041F0  1E15               	comf	(___aomod@dividend+1)^0,f,c
  9742  0041F2  6C14               	negf	___aomod@dividend^0,c
  9743  0041F4  0E00               	movlw	0
  9744  0041F6  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  9745  0041F8  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  9746  0041FA  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  9747  0041FC  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  9748  0041FE  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  9749  004200  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  9750  004202  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  9751  004204  0E01               	movlw	1
  9752  004206  6E25               	movwf	___aomod@sign^0,c
  9753  004208                     l7849:
  9754  004208  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  9755  00420A  EF0B  F021         	goto	u7910
  9756  00420E  EF09  F021         	goto	u7911
  9757  004212                     u7911:
  9758  004212  EF1B  F021         	goto	l7853
  9759  004216                     u7910:
  9760  004216  1E23               	comf	(___aomod@divisor+7)^0,f,c
  9761  004218  1E22               	comf	(___aomod@divisor+6)^0,f,c
  9762  00421A  1E21               	comf	(___aomod@divisor+5)^0,f,c
  9763  00421C  1E20               	comf	(___aomod@divisor+4)^0,f,c
  9764  00421E  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  9765  004220  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  9766  004222  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  9767  004224  6C1C               	negf	___aomod@divisor^0,c
  9768  004226  0E00               	movlw	0
  9769  004228  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  9770  00422A  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  9771  00422C  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  9772  00422E  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  9773  004230  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  9774  004232  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  9775  004234  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  9776  004236                     l7853:
  9777  004236  501C               	movf	___aomod@divisor^0,w,c
  9778  004238  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  9779  00423A  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  9780  00423C  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  9781  00423E  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  9782  004240  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  9783  004242  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  9784  004244  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  9785  004246  B4D8               	btfsc	status,2,c
  9786  004248  EF28  F021         	goto	u7921
  9787  00424C  EF2A  F021         	goto	u7920
  9788  004250                     u7921:
  9789  004250  EF72  F021         	goto	l7869
  9790  004254                     u7920:
  9791  004254  0E01               	movlw	1
  9792  004256  6E24               	movwf	___aomod@counter^0,c
  9793  004258  EF38  F021         	goto	l7859
  9794  00425C                     l7857:
  9795  00425C  90D8               	bcf	status,0,c
  9796  00425E  361C               	rlcf	___aomod@divisor^0,f,c
  9797  004260  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  9798  004262  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  9799  004264  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  9800  004266  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  9801  004268  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  9802  00426A  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  9803  00426C  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  9804  00426E  2A24               	incf	___aomod@counter^0,f,c
  9805  004270                     l7859:
  9806  004270  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  9807  004272  EF3D  F021         	goto	u7931
  9808  004276  EF3F  F021         	goto	u7930
  9809  00427A                     u7931:
  9810  00427A  EF2E  F021         	goto	l7857
  9811  00427E                     u7930:
  9812  00427E                     l7861:
  9813  00427E  501C               	movf	___aomod@divisor^0,w,c
  9814  004280  5C14               	subwf	___aomod@dividend^0,w,c
  9815  004282  501D               	movf	(___aomod@divisor+1)^0,w,c
  9816  004284  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  9817  004286  501E               	movf	(___aomod@divisor+2)^0,w,c
  9818  004288  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  9819  00428A  501F               	movf	(___aomod@divisor+3)^0,w,c
  9820  00428C  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  9821  00428E  5020               	movf	(___aomod@divisor+4)^0,w,c
  9822  004290  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  9823  004292  5021               	movf	(___aomod@divisor+5)^0,w,c
  9824  004294  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  9825  004296  5022               	movf	(___aomod@divisor+6)^0,w,c
  9826  004298  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  9827  00429A  5023               	movf	(___aomod@divisor+7)^0,w,c
  9828  00429C  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  9829  00429E  A0D8               	btfss	status,0,c
  9830  0042A0  EF54  F021         	goto	u7941
  9831  0042A4  EF56  F021         	goto	u7940
  9832  0042A8                     u7941:
  9833  0042A8  EF66  F021         	goto	l7865
  9834  0042AC                     u7940:
  9835  0042AC  501C               	movf	___aomod@divisor^0,w,c
  9836  0042AE  5E14               	subwf	___aomod@dividend^0,f,c
  9837  0042B0  501D               	movf	(___aomod@divisor+1)^0,w,c
  9838  0042B2  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  9839  0042B4  501E               	movf	(___aomod@divisor+2)^0,w,c
  9840  0042B6  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  9841  0042B8  501F               	movf	(___aomod@divisor+3)^0,w,c
  9842  0042BA  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  9843  0042BC  5020               	movf	(___aomod@divisor+4)^0,w,c
  9844  0042BE  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  9845  0042C0  5021               	movf	(___aomod@divisor+5)^0,w,c
  9846  0042C2  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  9847  0042C4  5022               	movf	(___aomod@divisor+6)^0,w,c
  9848  0042C6  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  9849  0042C8  5023               	movf	(___aomod@divisor+7)^0,w,c
  9850  0042CA  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  9851  0042CC                     l7865:
  9852  0042CC  90D8               	bcf	status,0,c
  9853  0042CE  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  9854  0042D0  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  9855  0042D2  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  9856  0042D4  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  9857  0042D6  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  9858  0042D8  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  9859  0042DA  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  9860  0042DC  321C               	rrcf	___aomod@divisor^0,f,c
  9861  0042DE  2E24               	decfsz	___aomod@counter^0,f,c
  9862  0042E0  EF3F  F021         	goto	l7861
  9863  0042E4                     l7869:
  9864  0042E4  5025               	movf	___aomod@sign^0,w,c
  9865  0042E6  B4D8               	btfsc	status,2,c
  9866  0042E8  EF78  F021         	goto	u7951
  9867  0042EC  EF7A  F021         	goto	u7950
  9868  0042F0                     u7951:
  9869  0042F0  EF8A  F021         	goto	l7873
  9870  0042F4                     u7950:
  9871  0042F4  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  9872  0042F6  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  9873  0042F8  1E19               	comf	(___aomod@dividend+5)^0,f,c
  9874  0042FA  1E18               	comf	(___aomod@dividend+4)^0,f,c
  9875  0042FC  1E17               	comf	(___aomod@dividend+3)^0,f,c
  9876  0042FE  1E16               	comf	(___aomod@dividend+2)^0,f,c
  9877  004300  1E15               	comf	(___aomod@dividend+1)^0,f,c
  9878  004302  6C14               	negf	___aomod@dividend^0,c
  9879  004304  0E00               	movlw	0
  9880  004306  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  9881  004308  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  9882  00430A  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  9883  00430C  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  9884  00430E  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  9885  004310  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  9886  004312  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  9887  004314                     l7873:
  9888  004314  C014  F014         	movff	___aomod@dividend,?___aomod
  9889  004318  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  9890  00431C  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  9891  004320  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  9892  004324  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  9893  004328  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  9894  00432C  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  9895  004330  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  9896  004334  0012               	return		;funcret
  9897  004336                     __end_of___aomod:
  9898                           	callstack 0
  9899                           
  9900 ;; *************** function ___aodiv *****************
  9901 ;; Defined at:
  9902 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  dividend        8   19[COMRAM] long long 
  9905 ;;  divisor         8   27[COMRAM] long long 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;  quotient        8   37[COMRAM] long long 
  9908 ;;  sign            1   36[COMRAM] unsigned char 
  9909 ;;  counter         1   35[COMRAM] unsigned char 
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  8   19[COMRAM] long long 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9919 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;Total ram usage:       26 bytes
  9924 ;; Hardware stack levels used: 1
  9925 ;; Hardware stack levels required when called: 8
  9926 ;; This function calls:
  9927 ;;		Nothing
  9928 ;; This function is called by:
  9929 ;;		_dtoa
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           	psect	text36
  9934  00404A                     __ptext36:
  9935                           	callstack 0
  9936  00404A                     ___aodiv:
  9937                           	callstack 16
  9938  00404A  0E00               	movlw	0
  9939  00404C  6E25               	movwf	___aodiv@sign^0,c
  9940  00404E  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  9941  004050  EF2E  F020         	goto	u7830
  9942  004054  EF2C  F020         	goto	u7831
  9943  004058                     u7831:
  9944  004058  EF40  F020         	goto	l7805
  9945  00405C                     u7830:
  9946  00405C  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  9947  00405E  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  9948  004060  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  9949  004062  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  9950  004064  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  9951  004066  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  9952  004068  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  9953  00406A  6C1C               	negf	___aodiv@divisor^0,c
  9954  00406C  0E00               	movlw	0
  9955  00406E  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  9956  004070  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  9957  004072  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  9958  004074  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  9959  004076  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  9960  004078  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  9961  00407A  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  9962  00407C  0E01               	movlw	1
  9963  00407E  6E25               	movwf	___aodiv@sign^0,c
  9964  004080                     l7805:
  9965  004080  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  9966  004082  EF47  F020         	goto	u7840
  9967  004086  EF45  F020         	goto	u7841
  9968  00408A                     u7841:
  9969  00408A  EF59  F020         	goto	l7811
  9970  00408E                     u7840:
  9971  00408E  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  9972  004090  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  9973  004092  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  9974  004094  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  9975  004096  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  9976  004098  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  9977  00409A  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  9978  00409C  6C14               	negf	___aodiv@dividend^0,c
  9979  00409E  0E00               	movlw	0
  9980  0040A0  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  9981  0040A2  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  9982  0040A4  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  9983  0040A6  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  9984  0040A8  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  9985  0040AA  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  9986  0040AC  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  9987  0040AE  0E01               	movlw	1
  9988  0040B0  1A25               	xorwf	___aodiv@sign^0,f,c
  9989  0040B2                     l7811:
  9990  0040B2  EE20  F026         	lfsr	2,___aodiv@quotient
  9991  0040B6  0E07               	movlw	7
  9992  0040B8                     u7851:
  9993  0040B8  6ADE               	clrf	postinc2,c
  9994  0040BA  06E8               	decf	wreg,f,c
  9995  0040BC  E2FD               	bc	u7851
  9996  0040BE  501C               	movf	___aodiv@divisor^0,w,c
  9997  0040C0  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  9998  0040C2  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  9999  0040C4  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
 10000  0040C6  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
 10001  0040C8  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
 10002  0040CA  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
 10003  0040CC  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
 10004  0040CE  B4D8               	btfsc	status,2,c
 10005  0040D0  EF6C  F020         	goto	u7861
 10006  0040D4  EF6E  F020         	goto	u7860
 10007  0040D8                     u7861:
 10008  0040D8  EFC0  F020         	goto	l7833
 10009  0040DC                     u7860:
 10010  0040DC  0E01               	movlw	1
 10011  0040DE  6E24               	movwf	___aodiv@counter^0,c
 10012  0040E0  EF7C  F020         	goto	l7819
 10013  0040E4                     l7817:
 10014  0040E4  90D8               	bcf	status,0,c
 10015  0040E6  361C               	rlcf	___aodiv@divisor^0,f,c
 10016  0040E8  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
 10017  0040EA  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
 10018  0040EC  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
 10019  0040EE  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
 10020  0040F0  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
 10021  0040F2  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
 10022  0040F4  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
 10023  0040F6  2A24               	incf	___aodiv@counter^0,f,c
 10024  0040F8                     l7819:
 10025  0040F8  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
 10026  0040FA  EF81  F020         	goto	u7871
 10027  0040FE  EF83  F020         	goto	u7870
 10028  004102                     u7871:
 10029  004102  EF72  F020         	goto	l7817
 10030  004106                     u7870:
 10031  004106                     l7821:
 10032  004106  90D8               	bcf	status,0,c
 10033  004108  3626               	rlcf	___aodiv@quotient^0,f,c
 10034  00410A  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
 10035  00410C  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
 10036  00410E  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
 10037  004110  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
 10038  004112  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
 10039  004114  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
 10040  004116  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
 10041  004118  501C               	movf	___aodiv@divisor^0,w,c
 10042  00411A  5C14               	subwf	___aodiv@dividend^0,w,c
 10043  00411C  501D               	movf	(___aodiv@divisor+1)^0,w,c
 10044  00411E  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
 10045  004120  501E               	movf	(___aodiv@divisor+2)^0,w,c
 10046  004122  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
 10047  004124  501F               	movf	(___aodiv@divisor+3)^0,w,c
 10048  004126  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
 10049  004128  5020               	movf	(___aodiv@divisor+4)^0,w,c
 10050  00412A  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
 10051  00412C  5021               	movf	(___aodiv@divisor+5)^0,w,c
 10052  00412E  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
 10053  004130  5022               	movf	(___aodiv@divisor+6)^0,w,c
 10054  004132  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
 10055  004134  5023               	movf	(___aodiv@divisor+7)^0,w,c
 10056  004136  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
 10057  004138  A0D8               	btfss	status,0,c
 10058  00413A  EFA1  F020         	goto	u7881
 10059  00413E  EFA3  F020         	goto	u7880
 10060  004142                     u7881:
 10061  004142  EFB4  F020         	goto	l7829
 10062  004146                     u7880:
 10063  004146  501C               	movf	___aodiv@divisor^0,w,c
 10064  004148  5E14               	subwf	___aodiv@dividend^0,f,c
 10065  00414A  501D               	movf	(___aodiv@divisor+1)^0,w,c
 10066  00414C  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
 10067  00414E  501E               	movf	(___aodiv@divisor+2)^0,w,c
 10068  004150  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
 10069  004152  501F               	movf	(___aodiv@divisor+3)^0,w,c
 10070  004154  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
 10071  004156  5020               	movf	(___aodiv@divisor+4)^0,w,c
 10072  004158  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
 10073  00415A  5021               	movf	(___aodiv@divisor+5)^0,w,c
 10074  00415C  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
 10075  00415E  5022               	movf	(___aodiv@divisor+6)^0,w,c
 10076  004160  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
 10077  004162  5023               	movf	(___aodiv@divisor+7)^0,w,c
 10078  004164  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
 10079  004166  8026               	bsf	___aodiv@quotient^0,0,c
 10080  004168                     l7829:
 10081  004168  90D8               	bcf	status,0,c
 10082  00416A  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
 10083  00416C  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
 10084  00416E  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
 10085  004170  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
 10086  004172  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
 10087  004174  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
 10088  004176  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
 10089  004178  321C               	rrcf	___aodiv@divisor^0,f,c
 10090  00417A  2E24               	decfsz	___aodiv@counter^0,f,c
 10091  00417C  EF83  F020         	goto	l7821
 10092  004180                     l7833:
 10093  004180  5025               	movf	___aodiv@sign^0,w,c
 10094  004182  B4D8               	btfsc	status,2,c
 10095  004184  EFC6  F020         	goto	u7891
 10096  004188  EFC8  F020         	goto	u7890
 10097  00418C                     u7891:
 10098  00418C  EFD8  F020         	goto	l7837
 10099  004190                     u7890:
 10100  004190  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
 10101  004192  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
 10102  004194  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
 10103  004196  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
 10104  004198  1E29               	comf	(___aodiv@quotient+3)^0,f,c
 10105  00419A  1E28               	comf	(___aodiv@quotient+2)^0,f,c
 10106  00419C  1E27               	comf	(___aodiv@quotient+1)^0,f,c
 10107  00419E  6C26               	negf	___aodiv@quotient^0,c
 10108  0041A0  0E00               	movlw	0
 10109  0041A2  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
 10110  0041A4  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
 10111  0041A6  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
 10112  0041A8  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
 10113  0041AA  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
 10114  0041AC  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
 10115  0041AE  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
 10116  0041B0                     l7837:
 10117  0041B0  C026  F014         	movff	___aodiv@quotient,?___aodiv
 10118  0041B4  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
 10119  0041B8  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
 10120  0041BC  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
 10121  0041C0  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
 10122  0041C4  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
 10123  0041C8  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
 10124  0041CC  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
 10125  0041D0  0012               	return		;funcret
 10126  0041D2                     __end_of___aodiv:
 10127                           	callstack 0
 10128                           
 10129 ;; *************** function _calcSpeed *****************
 10130 ;; Defined at:
 10131 ;;		line 315 in file "main.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  speed           2   39[BANK0 ] short 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;Total ram usage:        6 bytes
 10150 ;; Hardware stack levels used: 1
 10151 ;; Hardware stack levels required when called: 9
 10152 ;; This function calls:
 10153 ;;		___fladd
 10154 ;;		___flmul
 10155 ;;		___fltol
 10156 ;;		___xxtofl
 10157 ;; This function is called by:
 10158 ;;		_loop
 10159 ;; This function uses a non-reentrant model
 10160 ;;
 10161                           
 10162                           	psect	text37
 10163  003864                     __ptext37:
 10164                           	callstack 0
 10165  003864                     _calcSpeed:
 10166                           	callstack 20
 10167  003864                     
 10168                           ;main.c: 316:     int16_t speed = 0;
 10169  003864  0E00               	movlw	0
 10170  003866  0100               	movlb	0	; () banked
 10171  003868  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10172  00386A  0E00               	movlw	0
 10173  00386C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10174                           
 10175                           ;main.c: 318:     switch (driveMode) {
 10176  00386E  EFEE  F01C         	goto	l9283
 10177  003872                     l9243:
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;main.c: 320:             if (distFront > (30)) {
 10181  003872  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10182  003874  E109               	bnz	u10320
 10183  003876  0E1F               	movlw	31
 10184  003878  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10185  00387A  A0D8               	btfss	status,0,c
 10186  00387C  EF42  F01C         	goto	u10321
 10187  003880  EF44  F01C         	goto	u10320
 10188  003884                     u10321:
 10189  003884  EF46  F01C         	goto	l9247
 10190  003888                     u10320:
 10191  003888                     
 10192                           ; BSR set to: 0
 10193                           ;main.c: 321:                 driveMode = Straight;
 10194  003888  0E00               	movlw	0
 10195  00388A  6FFC               	movwf	_driveMode& (0+255),b
 10196  00388C                     l9247:
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;main.c: 323:             if (setSpeed > (70)) {
 10200  00388C  BFEE               	btfsc	(_setSpeed+1)& (0+255),7,b
 10201  00388E  EF52  F01C         	goto	u10331
 10202  003892  51EE               	movf	(_setSpeed+1)& (0+255),w,b
 10203  003894  E109               	bnz	u10330
 10204  003896  0E47               	movlw	71
 10205  003898  5DED               	subwf	_setSpeed& (0+255),w,b
 10206  00389A  A0D8               	btfss	status,0,c
 10207  00389C  EF52  F01C         	goto	u10331
 10208  0038A0  EF54  F01C         	goto	u10330
 10209  0038A4                     u10331:
 10210  0038A4  EF6F  F01C         	goto	l9257
 10211  0038A8                     u10330:
 10212  0038A8                     
 10213                           ; BSR set to: 0
 10214                           ;main.c: 324:                     speed = setSpeed;
 10215  0038A8  C0ED  F087         	movff	_setSpeed,calcSpeed@speed
 10216  0038AC  C0EE  F088         	movff	_setSpeed+1,calcSpeed@speed+1
 10217  0038B0                     
 10218                           ; BSR set to: 0
 10219                           ;main.c: 325:                 if (distFront < (15)) {
 10220  0038B0  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10221  0038B2  E107               	bnz	u10341
 10222  0038B4  0E0F               	movlw	15
 10223  0038B6  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10224  0038B8  B0D8               	btfsc	status,0,c
 10225  0038BA  EF61  F01C         	goto	u10341
 10226  0038BE  EF63  F01C         	goto	u10340
 10227  0038C2                     u10341:
 10228  0038C2  EF69  F01C         	goto	l9255
 10229  0038C6                     u10340:
 10230  0038C6                     
 10231                           ; BSR set to: 0
 10232                           ;main.c: 326:                     speed -= 4;
 10233  0038C6  0EFC               	movlw	252
 10234  0038C8  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10235  0038CA  0EFF               	movlw	255
 10236  0038CC  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10237                           
 10238                           ;main.c: 327:                 } else {
 10239  0038CE  EF1B  F01D         	goto	l9285
 10240  0038D2                     l9255:
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;main.c: 328:                     speed -= 2;
 10244  0038D2  0EFE               	movlw	254
 10245  0038D4  2787               	addwf	calcSpeed@speed& (0+255),f,b
 10246  0038D6  0EFF               	movlw	255
 10247  0038D8  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
 10248  0038DA  EF1B  F01D         	goto	l9285
 10249  0038DE                     l9257:
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;main.c: 331:                 speed = (70);
 10253  0038DE  0E00               	movlw	0
 10254  0038E0  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10255  0038E2  0E46               	movlw	70
 10256  0038E4  6F87               	movwf	calcSpeed@speed& (0+255),b
 10257  0038E6  EF1B  F01D         	goto	l9285
 10258  0038EA                     l9259:
 10259                           
 10260                           ; BSR set to: 0
 10261                           ;main.c: 335:             if (distFront < (30)) {
 10262  0038EA  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10263  0038EC  E107               	bnz	u10351
 10264  0038EE  0E1E               	movlw	30
 10265  0038F0  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10266  0038F2  B0D8               	btfsc	status,0,c
 10267  0038F4  EF7E  F01C         	goto	u10351
 10268  0038F8  EF80  F01C         	goto	u10350
 10269  0038FC                     u10351:
 10270  0038FC  EF82  F01C         	goto	l9263
 10271  003900                     u10350:
 10272  003900                     
 10273                           ; BSR set to: 0
 10274                           ;main.c: 336:                 driveMode = Brake;
 10275  003900  0E01               	movlw	1
 10276  003902  6FFC               	movwf	_driveMode& (0+255),b
 10277  003904                     l9263:
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;main.c: 339:             if (distFront >= (175)) {
 10281  003904  51FE               	movf	(_distFront+1)& (0+255),w,b	;volatile
 10282  003906  E109               	bnz	u10360
 10283  003908  0EAF               	movlw	175
 10284  00390A  5DFD               	subwf	_distFront& (0+255),w,b	;volatile
 10285  00390C  A0D8               	btfss	status,0,c
 10286  00390E  EF8B  F01C         	goto	u10361
 10287  003912  EF8D  F01C         	goto	u10360
 10288  003916                     u10361:
 10289  003916  EFD6  F01C         	goto	l9267
 10290  00391A                     u10360:
 10291  00391A                     
 10292                           ; BSR set to: 0
 10293                           ;main.c: 340:                 speed = (int16_t) ((0.4) * (distFront - (175)) + (275));
 10294  00391A  0E00               	movlw	0
 10295  00391C  6F71               	movwf	___fladd@a& (0+255),b
 10296  00391E  0E80               	movlw	128
 10297  003920  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10298  003922  0E89               	movlw	137
 10299  003924  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10300  003926  0E43               	movlw	67
 10301  003928  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10302  00392A  0ECD               	movlw	205
 10303  00392C  6E2E               	movwf	___flmul@a^0,c
 10304  00392E  0ECC               	movlw	204
 10305  003930  6E2F               	movwf	(___flmul@a+1)^0,c
 10306  003932  0ECC               	movlw	204
 10307  003934  6E30               	movwf	(___flmul@a+2)^0,c
 10308  003936  0E3E               	movlw	62
 10309  003938  6E31               	movwf	(___flmul@a+3)^0,c
 10310  00393A  0E51               	movlw	81
 10311  00393C  6F83               	movwf	??_calcSpeed& (0+255),b
 10312  00393E  0EFF               	movlw	255
 10313  003940  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
 10314  003942  C0FD  F085         	movff	_distFront,??_calcSpeed+2	;volatile
 10315  003946  C0FE  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10316  00394A  5183               	movf	??_calcSpeed& (0+255),w,b
 10317  00394C  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10318  00394E  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10319  003950  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10320  003952  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10321  003956  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10322  00395A  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10323  00395C  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10324  00395E  0E00               	movlw	0
 10325  003960  EC4B  F01F         	call	___xxtofl
 10326  003964  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10327  003968  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10328  00396C  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10329  003970  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10330  003974  ECBD  F013         	call	___flmul	;wreg free
 10331  003978  C02A  F06D         	movff	?___flmul,___fladd@b
 10332  00397C  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10333  003980  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10334  003984  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10335  003988  EC5C  F011         	call	___fladd	;wreg free
 10336  00398C  C06D  F079         	movff	?___fladd,___fltol@f1
 10337  003990  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10338  003994  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10339  003998  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10340  00399C  ECED  F023         	call	___fltol	;wreg free
 10341  0039A0  C079  F087         	movff	?___fltol,calcSpeed@speed
 10342  0039A4  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10343                           
 10344                           ;main.c: 341:             } else {
 10345  0039A8  EF1B  F01D         	goto	l9285
 10346  0039AC                     l9267:
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;main.c: 342:                 speed = (275);
 10350  0039AC  0E01               	movlw	1
 10351  0039AE  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10352  0039B0  0E13               	movlw	19
 10353  0039B2  6F87               	movwf	calcSpeed@speed& (0+255),b
 10354  0039B4  EF1B  F01D         	goto	l9285
 10355  0039B8                     l9269:
 10356                           
 10357                           ; BSR set to: 0
 10358                           ;main.c: 347:             speed = (-125);
 10359  0039B8  0EFF               	movlw	255
 10360  0039BA  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10361  0039BC  0E83               	movlw	131
 10362  0039BE  6F87               	movwf	calcSpeed@speed& (0+255),b
 10363                           
 10364                           ;main.c: 348:             break;
 10365  0039C0  EF1B  F01D         	goto	l9285
 10366  0039C4                     l9273:
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;main.c: 353:             speed = (200);
 10370  0039C4  0E00               	movlw	0
 10371  0039C6  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10372  0039C8  0EC8               	movlw	200
 10373  0039CA  6F87               	movwf	calcSpeed@speed& (0+255),b
 10374                           
 10375                           ;main.c: 354:             break;
 10376  0039CC  EF1B  F01D         	goto	l9285
 10377  0039D0                     l9277:
 10378                           
 10379                           ; BSR set to: 0
 10380                           ;main.c: 359:             speed = (250);
 10381  0039D0  0E00               	movlw	0
 10382  0039D2  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10383  0039D4  0EFA               	movlw	250
 10384  0039D6  6F87               	movwf	calcSpeed@speed& (0+255),b
 10385                           
 10386                           ;main.c: 360:             break;
 10387  0039D8  EF1B  F01D         	goto	l9285
 10388  0039DC                     l9283:
 10389                           
 10390                           ; BSR set to: 0
 10391  0039DC  51FC               	movf	_driveMode& (0+255),w,b
 10392  0039DE  6F83               	movwf	??_calcSpeed& (0+255),b
 10393  0039E0  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10394                           
 10395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10396                           ; Switch size 1, requested type "simple"
 10397                           ; Number of cases is 1, Range of values is 0 to 0
 10398                           ; switch strategies available:
 10399                           ; Name         Instructions Cycles
 10400                           ; simple_byte            4     3 (average)
 10401                           ;	Chosen strategy is simple_byte
 10402  0039E2  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10403  0039E4  0A00               	xorlw	0	; case 0
 10404  0039E6  B4D8               	btfsc	status,2,c
 10405  0039E8  EFF8  F01C         	goto	l9547
 10406  0039EC  EF1B  F01D         	goto	l9285
 10407  0039F0                     l9547:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ; Switch size 1, requested type "simple"
 10411                           ; Number of cases is 8, Range of values is 0 to 7
 10412                           ; switch strategies available:
 10413                           ; Name         Instructions Cycles
 10414                           ; simple_byte           25    13 (average)
 10415                           ;	Chosen strategy is simple_byte
 10416  0039F0  5183               	movf	??_calcSpeed& (0+255),w,b
 10417  0039F2  0A00               	xorlw	0	; case 0
 10418  0039F4  B4D8               	btfsc	status,2,c
 10419  0039F6  EF75  F01C         	goto	l9259
 10420  0039FA  0A01               	xorlw	1	; case 1
 10421  0039FC  B4D8               	btfsc	status,2,c
 10422  0039FE  EF39  F01C         	goto	l9243
 10423  003A02  0A03               	xorlw	3	; case 2
 10424  003A04  B4D8               	btfsc	status,2,c
 10425  003A06  EFDC  F01C         	goto	l9269
 10426  003A0A  0A01               	xorlw	1	; case 3
 10427  003A0C  B4D8               	btfsc	status,2,c
 10428  003A0E  EFDC  F01C         	goto	l9269
 10429  003A12  0A07               	xorlw	7	; case 4
 10430  003A14  B4D8               	btfsc	status,2,c
 10431  003A16  EFE2  F01C         	goto	l9273
 10432  003A1A  0A01               	xorlw	1	; case 5
 10433  003A1C  B4D8               	btfsc	status,2,c
 10434  003A1E  EFE2  F01C         	goto	l9273
 10435  003A22  0A03               	xorlw	3	; case 6
 10436  003A24  B4D8               	btfsc	status,2,c
 10437  003A26  EFE8  F01C         	goto	l9277
 10438  003A2A  0A01               	xorlw	1	; case 7
 10439  003A2C  B4D8               	btfsc	status,2,c
 10440  003A2E  EFE8  F01C         	goto	l9277
 10441  003A32  EF1B  F01D         	goto	l9285
 10442  003A36                     l9285:
 10443                           
 10444                           ;main.c: 366:     if (speed > (400)) {
 10445  003A36  0100               	movlb	0	; () banked
 10446  003A38  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10447  003A3A  EF28  F01D         	goto	u10371
 10448  003A3E  0E91               	movlw	145
 10449  003A40  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10450  003A42  0E01               	movlw	1
 10451  003A44  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10452  003A46  A0D8               	btfss	status,0,c
 10453  003A48  EF28  F01D         	goto	u10371
 10454  003A4C  EF2A  F01D         	goto	u10370
 10455  003A50                     u10371:
 10456  003A50  EF2E  F01D         	goto	l9289
 10457  003A54                     u10370:
 10458  003A54                     
 10459                           ; BSR set to: 0
 10460                           ;main.c: 367:         speed = (400);
 10461  003A54  0E01               	movlw	1
 10462  003A56  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10463  003A58  0E90               	movlw	144
 10464  003A5A  6F87               	movwf	calcSpeed@speed& (0+255),b
 10465  003A5C                     l9289:
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;main.c: 369:     if (speed < (-250)) {
 10469  003A5C  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10470  003A5E  EF3A  F01D         	goto	u10381
 10471  003A62  0E06               	movlw	6
 10472  003A64  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10473  003A66  0EFF               	movlw	255
 10474  003A68  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10475  003A6A  B0D8               	btfsc	status,0,c
 10476  003A6C  EF3A  F01D         	goto	u10381
 10477  003A70  EF3C  F01D         	goto	u10380
 10478  003A74                     u10381:
 10479  003A74  EF40  F01D         	goto	l9293
 10480  003A78                     u10380:
 10481  003A78                     
 10482                           ; BSR set to: 0
 10483                           ;main.c: 370:         speed = (-250);
 10484  003A78  0EFF               	movlw	255
 10485  003A7A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10486  003A7C  0E06               	movlw	6
 10487  003A7E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10488  003A80                     l9293:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;main.c: 372:     setSpeed = speed;
 10492  003A80  C087  F0ED         	movff	calcSpeed@speed,_setSpeed
 10493  003A84  C088  F0EE         	movff	calcSpeed@speed+1,_setSpeed+1
 10494  003A88                     
 10495                           ; BSR set to: 0
 10496  003A88  0012               	return		;funcret
 10497  003A8A                     __end_of_calcSpeed:
 10498                           	callstack 0
 10499                           
 10500 ;; *************** function ___fladd *****************
 10501 ;; Defined at:
 10502 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  b               4   13[BANK0 ] void 
 10505 ;;  a               4   17[BANK0 ] void 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  grs             1   24[BANK0 ] unsigned char 
 10508 ;;  bexp            1   23[BANK0 ] unsigned char 
 10509 ;;  aexp            1   22[BANK0 ] unsigned char 
 10510 ;;  signs           1   21[BANK0 ] unsigned char 
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  4   13[BANK0 ] unsigned char 
 10513 ;; Registers used:
 10514 ;;		wreg, status,2, status,0
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10520 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10521 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10522 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10523 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10524 ;;Total ram usage:       16 bytes
 10525 ;; Hardware stack levels used: 1
 10526 ;; Hardware stack levels required when called: 8
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_calcSpeed
 10531 ;;		___flsub
 10532 ;;		_efgtoa
 10533 ;; This function uses a non-reentrant model
 10534 ;;
 10535                           
 10536                           	psect	text38
 10537  0022B8                     __ptext38:
 10538                           	callstack 0
 10539  0022B8                     ___fladd:
 10540                           	callstack 15
 10541  0022B8  0100               	movlb	0	; () banked
 10542  0022BA  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10543  0022BC  0B80               	andlw	128
 10544  0022BE  6F75               	movwf	___fladd@signs& (0+255),b
 10545  0022C0  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10546  0022C2  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10547  0022C4  6F77               	movwf	___fladd@bexp& (0+255),b
 10548  0022C6                     
 10549                           ; BSR set to: 0
 10550  0022C6  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10551  0022C8  EF68  F011         	goto	u7401
 10552  0022CC  EF6A  F011         	goto	u7400
 10553  0022D0                     u7401:
 10554  0022D0  EF6B  F011         	goto	l7579
 10555  0022D4                     u7400:
 10556  0022D4                     
 10557                           ; BSR set to: 0
 10558  0022D4  8177               	bsf	___fladd@bexp& (0+255),0,b
 10559  0022D6                     l7579:
 10560                           
 10561                           ; BSR set to: 0
 10562  0022D6  5177               	movf	___fladd@bexp& (0+255),w,b
 10563  0022D8  B4D8               	btfsc	status,2,c
 10564  0022DA  EF71  F011         	goto	u7411
 10565  0022DE  EF73  F011         	goto	u7410
 10566  0022E2                     u7411:
 10567  0022E2  EF88  F011         	goto	l7589
 10568  0022E6                     u7410:
 10569  0022E6                     
 10570                           ; BSR set to: 0
 10571  0022E6  2977               	incf	___fladd@bexp& (0+255),w,b
 10572  0022E8  A4D8               	btfss	status,2,c
 10573  0022EA  EF79  F011         	goto	u7421
 10574  0022EE  EF7B  F011         	goto	u7420
 10575  0022F2                     u7421:
 10576  0022F2  EF83  F011         	goto	l7585
 10577  0022F6                     u7420:
 10578  0022F6                     
 10579                           ; BSR set to: 0
 10580  0022F6  0E00               	movlw	0
 10581  0022F8  6F6D               	movwf	___fladd@b& (0+255),b
 10582  0022FA  0E00               	movlw	0
 10583  0022FC  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10584  0022FE  0E00               	movlw	0
 10585  002300  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10586  002302  0E00               	movlw	0
 10587  002304  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10588  002306                     l7585:
 10589                           
 10590                           ; BSR set to: 0
 10591  002306  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10592  002308                     
 10593                           ; BSR set to: 0
 10594  002308  0E00               	movlw	0
 10595  00230A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10596  00230C  EF90  F011         	goto	l7591
 10597  002310                     l7589:
 10598                           
 10599                           ; BSR set to: 0
 10600  002310  0E00               	movlw	0
 10601  002312  6F6D               	movwf	___fladd@b& (0+255),b
 10602  002314  0E00               	movlw	0
 10603  002316  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10604  002318  0E00               	movlw	0
 10605  00231A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10606  00231C  0E00               	movlw	0
 10607  00231E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10608  002320                     l7591:
 10609                           
 10610                           ; BSR set to: 0
 10611  002320  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10612  002322  0B80               	andlw	128
 10613  002324  6F76               	movwf	___fladd@aexp& (0+255),b
 10614  002326                     
 10615                           ; BSR set to: 0
 10616  002326  5175               	movf	___fladd@signs& (0+255),w,b
 10617  002328  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10618  00232A  B4D8               	btfsc	status,2,c
 10619  00232C  EF9A  F011         	goto	u7431
 10620  002330  EF9C  F011         	goto	u7430
 10621  002334                     u7431:
 10622  002334  EF9D  F011         	goto	l7597
 10623  002338                     u7430:
 10624  002338                     
 10625                           ; BSR set to: 0
 10626  002338  8D75               	bsf	___fladd@signs& (0+255),6,b
 10627  00233A                     l7597:
 10628                           
 10629                           ; BSR set to: 0
 10630  00233A  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10631  00233C  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10632  00233E  6F76               	movwf	___fladd@aexp& (0+255),b
 10633  002340                     
 10634                           ; BSR set to: 0
 10635  002340  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10636  002342  EFA5  F011         	goto	u7441
 10637  002346  EFA7  F011         	goto	u7440
 10638  00234A                     u7441:
 10639  00234A  EFA8  F011         	goto	l7603
 10640  00234E                     u7440:
 10641  00234E                     
 10642                           ; BSR set to: 0
 10643  00234E  8176               	bsf	___fladd@aexp& (0+255),0,b
 10644  002350                     l7603:
 10645                           
 10646                           ; BSR set to: 0
 10647  002350  5176               	movf	___fladd@aexp& (0+255),w,b
 10648  002352  B4D8               	btfsc	status,2,c
 10649  002354  EFAE  F011         	goto	u7451
 10650  002358  EFB0  F011         	goto	u7450
 10651  00235C                     u7451:
 10652  00235C  EFC5  F011         	goto	l7613
 10653  002360                     u7450:
 10654  002360                     
 10655                           ; BSR set to: 0
 10656  002360  2976               	incf	___fladd@aexp& (0+255),w,b
 10657  002362  A4D8               	btfss	status,2,c
 10658  002364  EFB6  F011         	goto	u7461
 10659  002368  EFB8  F011         	goto	u7460
 10660  00236C                     u7461:
 10661  00236C  EFC0  F011         	goto	l7609
 10662  002370                     u7460:
 10663  002370                     
 10664                           ; BSR set to: 0
 10665  002370  0E00               	movlw	0
 10666  002372  6F71               	movwf	___fladd@a& (0+255),b
 10667  002374  0E00               	movlw	0
 10668  002376  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10669  002378  0E00               	movlw	0
 10670  00237A  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10671  00237C  0E00               	movlw	0
 10672  00237E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10673  002380                     l7609:
 10674                           
 10675                           ; BSR set to: 0
 10676  002380  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10677  002382                     
 10678                           ; BSR set to: 0
 10679  002382  0E00               	movlw	0
 10680  002384  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10681  002386  EFCD  F011         	goto	l7615
 10682  00238A                     l7613:
 10683                           
 10684                           ; BSR set to: 0
 10685  00238A  0E00               	movlw	0
 10686  00238C  6F71               	movwf	___fladd@a& (0+255),b
 10687  00238E  0E00               	movlw	0
 10688  002390  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10689  002392  0E00               	movlw	0
 10690  002394  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10691  002396  0E00               	movlw	0
 10692  002398  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10693  00239A                     l7615:
 10694                           
 10695                           ; BSR set to: 0
 10696  00239A  5177               	movf	___fladd@bexp& (0+255),w,b
 10697  00239C  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10698  00239E  B0D8               	btfsc	status,0,c
 10699  0023A0  EFD4  F011         	goto	u7471
 10700  0023A4  EFD6  F011         	goto	u7470
 10701  0023A8                     u7471:
 10702  0023A8  EFFD  F011         	goto	l7651
 10703  0023AC                     u7470:
 10704  0023AC                     
 10705                           ; BSR set to: 0
 10706  0023AC  AD75               	btfss	___fladd@signs& (0+255),6,b
 10707  0023AE  EFDB  F011         	goto	u7481
 10708  0023B2  EFDD  F011         	goto	u7480
 10709  0023B6                     u7481:
 10710  0023B6  EFDF  F011         	goto	l7621
 10711  0023BA                     u7480:
 10712  0023BA                     
 10713                           ; BSR set to: 0
 10714  0023BA  0E80               	movlw	128
 10715  0023BC  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10716  0023BE                     l7621:
 10717                           
 10718                           ; BSR set to: 0
 10719  0023BE  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10720  0023C2                     
 10721                           ; BSR set to: 0
 10722  0023C2  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10723  0023C6                     
 10724                           ; BSR set to: 0
 10725  0023C6  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10726  0023CA                     
 10727                           ; BSR set to: 0
 10728  0023CA  C06D  F078         	movff	___fladd@b,___fladd@grs
 10729  0023CE                     
 10730                           ; BSR set to: 0
 10731  0023CE  C071  F06D         	movff	___fladd@a,___fladd@b
 10732  0023D2                     
 10733                           ; BSR set to: 0
 10734  0023D2  C078  F071         	movff	___fladd@grs,___fladd@a
 10735  0023D6                     
 10736                           ; BSR set to: 0
 10737  0023D6  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10738  0023DA                     
 10739                           ; BSR set to: 0
 10740  0023DA  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10741  0023DE                     
 10742                           ; BSR set to: 0
 10743  0023DE  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10744  0023E2                     
 10745                           ; BSR set to: 0
 10746  0023E2  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10747  0023E6                     
 10748                           ; BSR set to: 0
 10749  0023E6  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10750  0023EA                     
 10751                           ; BSR set to: 0
 10752  0023EA  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10753  0023EE                     
 10754                           ; BSR set to: 0
 10755  0023EE  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10756  0023F2                     
 10757                           ; BSR set to: 0
 10758  0023F2  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10759  0023F6                     
 10760                           ; BSR set to: 0
 10761  0023F6  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10762  0023FA                     l7651:
 10763                           
 10764                           ; BSR set to: 0
 10765  0023FA  0E00               	movlw	0
 10766  0023FC  6F78               	movwf	___fladd@grs& (0+255),b
 10767  0023FE                     
 10768                           ; BSR set to: 0
 10769  0023FE  5177               	movf	___fladd@bexp& (0+255),w,b
 10770  002400  C076  F036         	movff	___fladd@aexp,??___fladd
 10771  002404  6A37               	clrf	(??___fladd+1)^0,c
 10772  002406  5E36               	subwf	??___fladd^0,f,c
 10773  002408  0E00               	movlw	0
 10774  00240A  5A37               	subwfb	(??___fladd+1)^0,f,c
 10775  00240C  BE37               	btfsc	(??___fladd+1)^0,7,c
 10776  00240E  EF12  F012         	goto	u7491
 10777  002412  5037               	movf	(??___fladd+1)^0,w,c
 10778  002414  E109               	bnz	u7490
 10779  002416  0E1A               	movlw	26
 10780  002418  5C36               	subwf	??___fladd^0,w,c
 10781  00241A  A0D8               	btfss	status,0,c
 10782  00241C  EF12  F012         	goto	u7491
 10783  002420  EF14  F012         	goto	u7490
 10784  002424                     u7491:
 10785  002424  EF4B  F012         	goto	l1946
 10786  002428                     u7490:
 10787  002428                     
 10788                           ; BSR set to: 0
 10789  002428  516D               	movf	___fladd@b& (0+255),w,b
 10790  00242A  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10791  00242C  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10792  00242E  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10793  002430  A4D8               	btfss	status,2,c
 10794  002432  EF1D  F012         	goto	u7501
 10795  002436  EF20  F012         	goto	u7500
 10796  00243A                     u7501:
 10797  00243A  0E01               	movlw	1
 10798  00243C  EF21  F012         	goto	u7510
 10799  002440                     u7500:
 10800  002440  0E00               	movlw	0
 10801  002442                     u7510:
 10802  002442  6F78               	movwf	___fladd@grs& (0+255),b
 10803  002444                     
 10804                           ; BSR set to: 0
 10805  002444  0E00               	movlw	0
 10806  002446  6F6D               	movwf	___fladd@b& (0+255),b
 10807  002448  0E00               	movlw	0
 10808  00244A  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10809  00244C  0E00               	movlw	0
 10810  00244E  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10811  002450  0E00               	movlw	0
 10812  002452  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10813  002454                     
 10814                           ; BSR set to: 0
 10815  002454  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10816  002458  EF54  F012         	goto	l1945
 10817  00245C                     l1947:
 10818                           
 10819                           ; BSR set to: 0
 10820  00245C  A178               	btfss	___fladd@grs& (0+255),0,b
 10821  00245E  EF33  F012         	goto	u7521
 10822  002462  EF35  F012         	goto	u7520
 10823  002466                     u7521:
 10824  002466  EF3B  F012         	goto	l7663
 10825  00246A                     u7520:
 10826  00246A                     
 10827                           ; BSR set to: 0
 10828  00246A  90D8               	bcf	status,0,c
 10829  00246C  3178               	rrcf	___fladd@grs& (0+255),w,b
 10830  00246E  0901               	iorlw	1
 10831  002470  6F78               	movwf	___fladd@grs& (0+255),b
 10832  002472  EF3D  F012         	goto	l7665
 10833  002476                     l7663:
 10834                           
 10835                           ; BSR set to: 0
 10836  002476  90D8               	bcf	status,0,c
 10837  002478  3378               	rrcf	___fladd@grs& (0+255),f,b
 10838  00247A                     l7665:
 10839                           
 10840                           ; BSR set to: 0
 10841  00247A  A16D               	btfss	___fladd@b& (0+255),0,b
 10842  00247C  EF42  F012         	goto	u7531
 10843  002480  EF44  F012         	goto	u7530
 10844  002484                     u7531:
 10845  002484  EF45  F012         	goto	l7669
 10846  002488                     u7530:
 10847  002488                     
 10848                           ; BSR set to: 0
 10849  002488  8F78               	bsf	___fladd@grs& (0+255),7,b
 10850  00248A                     l7669:
 10851                           
 10852                           ; BSR set to: 0
 10853  00248A  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10854  00248C  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10855  00248E  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10856  002490  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10857  002492  336D               	rrcf	___fladd@b& (0+255),f,b
 10858  002494                     
 10859                           ; BSR set to: 0
 10860  002494  2B77               	incf	___fladd@bexp& (0+255),f,b
 10861  002496                     l1946:
 10862                           
 10863                           ; BSR set to: 0
 10864  002496  5176               	movf	___fladd@aexp& (0+255),w,b
 10865  002498  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10866  00249A  A0D8               	btfss	status,0,c
 10867  00249C  EF52  F012         	goto	u7541
 10868  0024A0  EF54  F012         	goto	u7540
 10869  0024A4                     u7541:
 10870  0024A4  EF2E  F012         	goto	l1947
 10871  0024A8                     u7540:
 10872  0024A8                     l1945:
 10873                           
 10874                           ; BSR set to: 0
 10875  0024A8  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10876  0024AA  EF59  F012         	goto	u7551
 10877  0024AE  EF5B  F012         	goto	u7550
 10878  0024B2                     u7551:
 10879  0024B2  EF9B  F012         	goto	l7697
 10880  0024B6                     u7550:
 10881  0024B6                     
 10882                           ; BSR set to: 0
 10883  0024B6  5177               	movf	___fladd@bexp& (0+255),w,b
 10884  0024B8  A4D8               	btfss	status,2,c
 10885  0024BA  EF61  F012         	goto	u7561
 10886  0024BE  EF63  F012         	goto	u7560
 10887  0024C2                     u7561:
 10888  0024C2  EF6D  F012         	goto	l7679
 10889  0024C6                     u7560:
 10890  0024C6                     
 10891                           ; BSR set to: 0
 10892  0024C6  0E00               	movlw	0
 10893  0024C8  6F6D               	movwf	?___fladd& (0+255),b
 10894  0024CA  0E00               	movlw	0
 10895  0024CC  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10896  0024CE  0E00               	movlw	0
 10897  0024D0  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10898  0024D2  0E00               	movlw	0
 10899  0024D4  6F70               	movwf	(?___fladd+3)& (0+255),b
 10900  0024D6  EFBC  F013         	goto	l1954
 10901  0024DA                     l7679:
 10902                           
 10903                           ; BSR set to: 0
 10904  0024DA  5171               	movf	___fladd@a& (0+255),w,b
 10905  0024DC  276D               	addwf	___fladd@b& (0+255),f,b
 10906  0024DE  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10907  0024E0  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10908  0024E2  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10909  0024E4  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10910  0024E6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10911  0024E8  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10912  0024EA                     
 10913                           ; BSR set to: 0
 10914  0024EA  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10915  0024EC  EF7A  F012         	goto	u7571
 10916  0024F0  EF7C  F012         	goto	u7570
 10917  0024F4                     u7571:
 10918  0024F4  EF28  F013         	goto	l7733
 10919  0024F8                     u7570:
 10920  0024F8                     
 10921                           ; BSR set to: 0
 10922  0024F8  A178               	btfss	___fladd@grs& (0+255),0,b
 10923  0024FA  EF81  F012         	goto	u7581
 10924  0024FE  EF83  F012         	goto	u7580
 10925  002502                     u7581:
 10926  002502  EF89  F012         	goto	l7687
 10927  002506                     u7580:
 10928  002506                     
 10929                           ; BSR set to: 0
 10930  002506  90D8               	bcf	status,0,c
 10931  002508  3178               	rrcf	___fladd@grs& (0+255),w,b
 10932  00250A  0901               	iorlw	1
 10933  00250C  6F78               	movwf	___fladd@grs& (0+255),b
 10934  00250E  EF8B  F012         	goto	l7689
 10935  002512                     l7687:
 10936                           
 10937                           ; BSR set to: 0
 10938  002512  90D8               	bcf	status,0,c
 10939  002514  3378               	rrcf	___fladd@grs& (0+255),f,b
 10940  002516                     l7689:
 10941                           
 10942                           ; BSR set to: 0
 10943  002516  A16D               	btfss	___fladd@b& (0+255),0,b
 10944  002518  EF90  F012         	goto	u7591
 10945  00251C  EF92  F012         	goto	u7590
 10946  002520                     u7591:
 10947  002520  EF93  F012         	goto	l7693
 10948  002524                     u7590:
 10949  002524                     
 10950                           ; BSR set to: 0
 10951  002524  8F78               	bsf	___fladd@grs& (0+255),7,b
 10952  002526                     l7693:
 10953                           
 10954                           ; BSR set to: 0
 10955  002526  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10956  002528  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10957  00252A  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10958  00252C  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10959  00252E  336D               	rrcf	___fladd@b& (0+255),f,b
 10960  002530                     
 10961                           ; BSR set to: 0
 10962  002530  2B77               	incf	___fladd@bexp& (0+255),f,b
 10963  002532  EF28  F013         	goto	l7733
 10964  002536                     l7697:
 10965                           
 10966                           ; BSR set to: 0
 10967  002536  5171               	movf	___fladd@a& (0+255),w,b
 10968  002538  5D6D               	subwf	___fladd@b& (0+255),w,b
 10969  00253A  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10970  00253C  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10971  00253E  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10972  002540  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10973  002542  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10974  002544  0A80               	xorlw	128
 10975  002546  6E36               	movwf	??___fladd^0,c
 10976  002548  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10977  00254A  0A80               	xorlw	128
 10978  00254C  5836               	subwfb	??___fladd^0,w,c
 10979  00254E  B0D8               	btfsc	status,0,c
 10980  002550  EFAC  F012         	goto	u7601
 10981  002554  EFAE  F012         	goto	u7600
 10982  002558                     u7601:
 10983  002558  EFD9  F012         	goto	l7707
 10984  00255C                     u7600:
 10985  00255C                     
 10986                           ; BSR set to: 0
 10987  00255C  516D               	movf	___fladd@b& (0+255),w,b
 10988  00255E  5D71               	subwf	___fladd@a& (0+255),w,b
 10989  002560  6E36               	movwf	??___fladd^0,c
 10990  002562  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10991  002564  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10992  002566  6E37               	movwf	(??___fladd+1)^0,c
 10993  002568  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10994  00256A  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10995  00256C  6E38               	movwf	(??___fladd+2)^0,c
 10996  00256E  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10997  002570  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10998  002572  6E39               	movwf	(??___fladd+3)^0,c
 10999  002574  0EFF               	movlw	255
 11000  002576  2436               	addwf	??___fladd^0,w,c
 11001  002578  6F6D               	movwf	___fladd@b& (0+255),b
 11002  00257A  0EFF               	movlw	255
 11003  00257C  2037               	addwfc	(??___fladd+1)^0,w,c
 11004  00257E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11005  002580  0EFF               	movlw	255
 11006  002582  2038               	addwfc	(??___fladd+2)^0,w,c
 11007  002584  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11008  002586  0EFF               	movlw	255
 11009  002588  2039               	addwfc	(??___fladd+3)^0,w,c
 11010  00258A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11011  00258C  0E80               	movlw	128
 11012  00258E  1B75               	xorwf	___fladd@signs& (0+255),f,b
 11013  002590                     
 11014                           ; BSR set to: 0
 11015  002590  6D78               	negf	___fladd@grs& (0+255),b
 11016  002592                     
 11017                           ; BSR set to: 0
 11018  002592  5178               	movf	___fladd@grs& (0+255),w,b
 11019  002594  A4D8               	btfss	status,2,c
 11020  002596  EFCF  F012         	goto	u7611
 11021  00259A  EFD1  F012         	goto	u7610
 11022  00259E                     u7611:
 11023  00259E  EFE1  F012         	goto	l1962
 11024  0025A2                     u7610:
 11025  0025A2                     
 11026                           ; BSR set to: 0
 11027  0025A2  0E01               	movlw	1
 11028  0025A4  276D               	addwf	___fladd@b& (0+255),f,b
 11029  0025A6  0E00               	movlw	0
 11030  0025A8  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11031  0025AA  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11032  0025AC  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11033  0025AE  EFE1  F012         	goto	l1962
 11034  0025B2                     l7707:
 11035                           
 11036                           ; BSR set to: 0
 11037  0025B2  5171               	movf	___fladd@a& (0+255),w,b
 11038  0025B4  5F6D               	subwf	___fladd@b& (0+255),f,b
 11039  0025B6  5172               	movf	(___fladd@a+1)& (0+255),w,b
 11040  0025B8  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 11041  0025BA  5173               	movf	(___fladd@a+2)& (0+255),w,b
 11042  0025BC  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 11043  0025BE  5174               	movf	(___fladd@a+3)& (0+255),w,b
 11044  0025C0  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 11045  0025C2                     l1962:
 11046                           
 11047                           ; BSR set to: 0
 11048  0025C2  516D               	movf	___fladd@b& (0+255),w,b
 11049  0025C4  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 11050  0025C6  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 11051  0025C8  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 11052  0025CA  A4D8               	btfss	status,2,c
 11053  0025CC  EFEA  F012         	goto	u7621
 11054  0025D0  EFEC  F012         	goto	u7620
 11055  0025D4                     u7621:
 11056  0025D4  EF21  F013         	goto	l7731
 11057  0025D8                     u7620:
 11058  0025D8                     
 11059                           ; BSR set to: 0
 11060  0025D8  5178               	movf	___fladd@grs& (0+255),w,b
 11061  0025DA  A4D8               	btfss	status,2,c
 11062  0025DC  EFF2  F012         	goto	u7631
 11063  0025E0  EFF4  F012         	goto	u7630
 11064  0025E4                     u7631:
 11065  0025E4  EF21  F013         	goto	l7731
 11066  0025E8                     u7630:
 11067  0025E8                     
 11068                           ; BSR set to: 0
 11069  0025E8  0E00               	movlw	0
 11070  0025EA  6F6D               	movwf	?___fladd& (0+255),b
 11071  0025EC  0E00               	movlw	0
 11072  0025EE  6F6E               	movwf	(?___fladd+1)& (0+255),b
 11073  0025F0  0E00               	movlw	0
 11074  0025F2  6F6F               	movwf	(?___fladd+2)& (0+255),b
 11075  0025F4  0E00               	movlw	0
 11076  0025F6  6F70               	movwf	(?___fladd+3)& (0+255),b
 11077  0025F8  EFBC  F013         	goto	l1954
 11078  0025FC                     l7715:
 11079                           
 11080                           ; BSR set to: 0
 11081  0025FC  90D8               	bcf	status,0,c
 11082  0025FE  376D               	rlcf	___fladd@b& (0+255),f,b
 11083  002600  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 11084  002602  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 11085  002604  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 11086  002606                     
 11087                           ; BSR set to: 0
 11088  002606  AF78               	btfss	___fladd@grs& (0+255),7,b
 11089  002608  EF08  F013         	goto	u7641
 11090  00260C  EF0A  F013         	goto	u7640
 11091  002610                     u7641:
 11092  002610  EF0B  F013         	goto	l7721
 11093  002614                     u7640:
 11094  002614                     
 11095                           ; BSR set to: 0
 11096  002614  816D               	bsf	___fladd@b& (0+255),0,b
 11097  002616                     l7721:
 11098                           
 11099                           ; BSR set to: 0
 11100  002616  A178               	btfss	___fladd@grs& (0+255),0,b
 11101  002618  EF10  F013         	goto	u7651
 11102  00261C  EF12  F013         	goto	u7650
 11103  002620                     u7651:
 11104  002620  EF16  F013         	goto	l7725
 11105  002624                     u7650:
 11106  002624                     
 11107                           ; BSR set to: 0
 11108  002624  80D8               	bsf	status,0,c
 11109  002626  3778               	rlcf	___fladd@grs& (0+255),f,b
 11110  002628  EF18  F013         	goto	l7727
 11111  00262C                     l7725:
 11112                           
 11113                           ; BSR set to: 0
 11114  00262C  90D8               	bcf	status,0,c
 11115  00262E  3778               	rlcf	___fladd@grs& (0+255),f,b
 11116  002630                     l7727:
 11117                           
 11118                           ; BSR set to: 0
 11119  002630  5177               	movf	___fladd@bexp& (0+255),w,b
 11120  002632  B4D8               	btfsc	status,2,c
 11121  002634  EF1E  F013         	goto	u7661
 11122  002638  EF20  F013         	goto	u7660
 11123  00263C                     u7661:
 11124  00263C  EF21  F013         	goto	l7731
 11125  002640                     u7660:
 11126  002640                     
 11127                           ; BSR set to: 0
 11128  002640  0777               	decf	___fladd@bexp& (0+255),f,b
 11129  002642                     l7731:
 11130                           
 11131                           ; BSR set to: 0
 11132  002642  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 11133  002644  EF26  F013         	goto	u7671
 11134  002648  EF28  F013         	goto	u7670
 11135  00264C                     u7671:
 11136  00264C  EFFE  F012         	goto	l7715
 11137  002650                     u7670:
 11138  002650                     l7733:
 11139                           
 11140                           ; BSR set to: 0
 11141  002650  0E00               	movlw	0
 11142  002652  6F76               	movwf	___fladd@aexp& (0+255),b
 11143  002654                     
 11144                           ; BSR set to: 0
 11145  002654  AF78               	btfss	___fladd@grs& (0+255),7,b
 11146  002656  EF2F  F013         	goto	u7681
 11147  00265A  EF31  F013         	goto	u7680
 11148  00265E                     u7681:
 11149  00265E  EF49  F013         	goto	l1971
 11150  002662                     u7680:
 11151  002662                     
 11152                           ; BSR set to: 0
 11153  002662  C078  F036         	movff	___fladd@grs,??___fladd
 11154  002666  0E7F               	movlw	127
 11155  002668  1636               	andwf	??___fladd^0,f,c
 11156  00266A  B4D8               	btfsc	status,2,c
 11157  00266C  EF3A  F013         	goto	u7691
 11158  002670  EF3C  F013         	goto	u7690
 11159  002674                     u7691:
 11160  002674  EF40  F013         	goto	l1972
 11161  002678                     u7690:
 11162  002678                     l7739:
 11163                           
 11164                           ; BSR set to: 0
 11165  002678  0E01               	movlw	1
 11166  00267A  6F76               	movwf	___fladd@aexp& (0+255),b
 11167  00267C  EF49  F013         	goto	l1971
 11168  002680                     l1972:
 11169                           
 11170                           ; BSR set to: 0
 11171  002680  A16D               	btfss	___fladd@b& (0+255),0,b
 11172  002682  EF45  F013         	goto	u7701
 11173  002686  EF47  F013         	goto	u7700
 11174  00268A                     u7701:
 11175  00268A  EF49  F013         	goto	l1971
 11176  00268E                     u7700:
 11177  00268E  EF3C  F013         	goto	l7739
 11178  002692                     l1971:
 11179                           
 11180                           ; BSR set to: 0
 11181  002692  5176               	movf	___fladd@aexp& (0+255),w,b
 11182  002694  B4D8               	btfsc	status,2,c
 11183  002696  EF4F  F013         	goto	u7711
 11184  00269A  EF51  F013         	goto	u7710
 11185  00269E                     u7711:
 11186  00269E  EF7C  F013         	goto	l7751
 11187  0026A2                     u7710:
 11188  0026A2                     
 11189                           ; BSR set to: 0
 11190  0026A2  0E01               	movlw	1
 11191  0026A4  276D               	addwf	___fladd@b& (0+255),f,b
 11192  0026A6  0E00               	movlw	0
 11193  0026A8  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 11194  0026AA  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 11195  0026AC  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 11196  0026AE                     
 11197                           ; BSR set to: 0
 11198  0026AE  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 11199  0026B0  EF5C  F013         	goto	u7721
 11200  0026B4  EF5E  F013         	goto	u7720
 11201  0026B8                     u7721:
 11202  0026B8  EF7C  F013         	goto	l7751
 11203  0026BC                     u7720:
 11204  0026BC                     
 11205                           ; BSR set to: 0
 11206  0026BC  C06D  F036         	movff	___fladd@b,??___fladd
 11207  0026C0  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 11208  0026C4  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 11209  0026C8  C070  F039         	movff	___fladd@b+3,??___fladd+3
 11210  0026CC  3439               	rlcf	(??___fladd+3)^0,w,c
 11211  0026CE  3239               	rrcf	(??___fladd+3)^0,f,c
 11212  0026D0  3238               	rrcf	(??___fladd+2)^0,f,c
 11213  0026D2  3237               	rrcf	(??___fladd+1)^0,f,c
 11214  0026D4  3236               	rrcf	??___fladd^0,f,c
 11215  0026D6  C036  F06D         	movff	??___fladd,___fladd@b
 11216  0026DA  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 11217  0026DE  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 11218  0026E2  C039  F070         	movff	??___fladd+3,___fladd@b+3
 11219  0026E6  2977               	incf	___fladd@bexp& (0+255),w,b
 11220  0026E8  B4D8               	btfsc	status,2,c
 11221  0026EA  EF79  F013         	goto	u7731
 11222  0026EE  EF7B  F013         	goto	u7730
 11223  0026F2                     u7731:
 11224  0026F2  EF7C  F013         	goto	l7751
 11225  0026F6                     u7730:
 11226  0026F6                     
 11227                           ; BSR set to: 0
 11228  0026F6  2B77               	incf	___fladd@bexp& (0+255),f,b
 11229  0026F8                     l7751:
 11230                           
 11231                           ; BSR set to: 0
 11232  0026F8  2977               	incf	___fladd@bexp& (0+255),w,b
 11233  0026FA  B4D8               	btfsc	status,2,c
 11234  0026FC  EF82  F013         	goto	u7741
 11235  002700  EF84  F013         	goto	u7740
 11236  002704                     u7741:
 11237  002704  EF8C  F013         	goto	l7755
 11238  002708                     u7740:
 11239  002708                     
 11240                           ; BSR set to: 0
 11241  002708  5177               	movf	___fladd@bexp& (0+255),w,b
 11242  00270A  A4D8               	btfss	status,2,c
 11243  00270C  EF8A  F013         	goto	u7751
 11244  002710  EF8C  F013         	goto	u7750
 11245  002714                     u7751:
 11246  002714  EF9E  F013         	goto	l7759
 11247  002718                     u7750:
 11248  002718                     l7755:
 11249                           
 11250                           ; BSR set to: 0
 11251  002718  0E00               	movlw	0
 11252  00271A  6F6D               	movwf	___fladd@b& (0+255),b
 11253  00271C  0E00               	movlw	0
 11254  00271E  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 11255  002720  0E00               	movlw	0
 11256  002722  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 11257  002724  0E00               	movlw	0
 11258  002726  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11259  002728  5177               	movf	___fladd@bexp& (0+255),w,b
 11260  00272A  A4D8               	btfss	status,2,c
 11261  00272C  EF9A  F013         	goto	u7761
 11262  002730  EF9C  F013         	goto	u7760
 11263  002734                     u7761:
 11264  002734  EF9E  F013         	goto	l7759
 11265  002738                     u7760:
 11266  002738                     
 11267                           ; BSR set to: 0
 11268  002738  0E00               	movlw	0
 11269  00273A  6F75               	movwf	___fladd@signs& (0+255),b
 11270  00273C                     l7759:
 11271                           
 11272                           ; BSR set to: 0
 11273  00273C  A177               	btfss	___fladd@bexp& (0+255),0,b
 11274  00273E  EFA3  F013         	goto	u7771
 11275  002742  EFA5  F013         	goto	u7770
 11276  002746                     u7771:
 11277  002746  EFA8  F013         	goto	l7763
 11278  00274A                     u7770:
 11279  00274A                     
 11280                           ; BSR set to: 0
 11281  00274A  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 11282  00274C  EFA9  F013         	goto	l7765
 11283  002750                     l7763:
 11284                           
 11285                           ; BSR set to: 0
 11286  002750  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 11287  002752                     l7765:
 11288                           
 11289                           ; BSR set to: 0
 11290  002752  90D8               	bcf	status,0,c
 11291  002754  3177               	rrcf	___fladd@bexp& (0+255),w,b
 11292  002756  6F70               	movwf	(___fladd@b+3)& (0+255),b
 11293  002758                     
 11294                           ; BSR set to: 0
 11295  002758  AF75               	btfss	___fladd@signs& (0+255),7,b
 11296  00275A  EFB1  F013         	goto	u7781
 11297  00275E  EFB3  F013         	goto	u7780
 11298  002762                     u7781:
 11299  002762  EFB4  F013         	goto	l7771
 11300  002766                     u7780:
 11301  002766                     
 11302                           ; BSR set to: 0
 11303  002766  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 11304  002768                     l7771:
 11305                           
 11306                           ; BSR set to: 0
 11307  002768  C06D  F06D         	movff	___fladd@b,?___fladd
 11308  00276C  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 11309  002770  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 11310  002774  C070  F070         	movff	___fladd@b+3,?___fladd+3
 11311  002778                     l1954:
 11312                           
 11313                           ; BSR set to: 0
 11314  002778  0012               	return		;funcret
 11315  00277A                     __end_of___fladd:
 11316                           	callstack 0
 11317                           
 11318 ;; *************** function _calcMotorPow *****************
 11319 ;; Defined at:
 11320 ;;		line 375 in file "main.c"
 11321 ;; Parameters:    Size  Location     Type
 11322 ;;		None
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 11325 ;;  setSpeedDelt    2   37[BANK0 ] short 
 11326 ;;  addMPow         1   41[BANK0 ] char 
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11337 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11339 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11340 ;;Total ram usage:        7 bytes
 11341 ;; Hardware stack levels used: 1
 11342 ;; Hardware stack levels required when called: 10
 11343 ;; This function calls:
 11344 ;;		___awdiv
 11345 ;;		___flmul
 11346 ;;		___fltol
 11347 ;;		___xxtofl
 11348 ;;		_actSpeed
 11349 ;;		_setMotor
 11350 ;; This function is called by:
 11351 ;;		_loop
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text39
 11356  004336                     __ptext39:
 11357                           	callstack 0
 11358  004336                     _calcMotorPow:
 11359                           	callstack 19
 11360  004336                     
 11361                           ;main.c: 376:     currentSpeed = actSpeed();
 11362  004336  EC30  F029         	call	_actSpeed	;wreg free
 11363  00433A  C022  F0EB         	movff	?_actSpeed,_currentSpeed
 11364  00433E  C023  F0EC         	movff	?_actSpeed+1,_currentSpeed+1
 11365  004342                     
 11366                           ;main.c: 378:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11367  004342  0100               	movlb	0	; () banked
 11368  004344  51EB               	movf	_currentSpeed& (0+255),w,b
 11369  004346  5DED               	subwf	_setSpeed& (0+255),w,b
 11370  004348  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11371  00434A  51EC               	movf	(_currentSpeed+1)& (0+255),w,b
 11372  00434C  59EE               	subwfb	(_setSpeed+1)& (0+255),w,b
 11373  00434E  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11374  004350                     
 11375                           ; BSR set to: 0
 11376                           ;main.c: 379:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11377  004350  0101               	movlb	1	; () banked
 11378  004352  512C               	movf	_oldSpeed& (0+255),w,b
 11379  004354  0100               	movlb	0	; () banked
 11380  004356  5DEB               	subwf	_currentSpeed& (0+255),w,b
 11381  004358  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11382  00435A  0101               	movlb	1	; () banked
 11383  00435C  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11384  00435E  0100               	movlb	0	; () banked
 11385  004360  59EC               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11386  004362  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11387  004364                     
 11388                           ; BSR set to: 0
 11389                           ;main.c: 385:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11390  004364  0E0A               	movlw	10
 11391  004366  6E2E               	movwf	___flmul@a^0,c
 11392  004368  0ED7               	movlw	215
 11393  00436A  6E2F               	movwf	(___flmul@a+1)^0,c
 11394  00436C  0EA3               	movlw	163
 11395  00436E  6E30               	movwf	(___flmul@a+2)^0,c
 11396  004370  0E3C               	movlw	60
 11397  004372  6E31               	movwf	(___flmul@a+3)^0,c
 11398  004374  0E00               	movlw	0
 11399  004376  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11400  004378  0E02               	movlw	2
 11401  00437A  6E16               	movwf	___awdiv@divisor^0,c
 11402  00437C  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11403  004380  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11404  004384  ECC3  F026         	call	___awdiv	;wreg free
 11405  004388  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11406  00438C  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11407  004390  5014               	movf	?___awdiv^0,w,c
 11408  004392  0100               	movlb	0	; () banked
 11409  004394  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11410  004396  5015               	movf	(?___awdiv+1)^0,w,c
 11411  004398  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11412  00439A  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11413  00439E  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11414  0043A2  0E00               	movlw	0
 11415  0043A4  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11416  0043A6  0EFF               	movlw	-1
 11417  0043A8  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11418  0043AA  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11419  0043AC  0E01               	movlw	1
 11420  0043AE  EC4B  F01F         	call	___xxtofl
 11421  0043B2  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11422  0043B6  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11423  0043BA  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11424  0043BE  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11425  0043C2  ECBD  F013         	call	___flmul	;wreg free
 11426  0043C6  C02A  F079         	movff	?___flmul,___fltol@f1
 11427  0043CA  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11428  0043CE  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11429  0043D2  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11430  0043D6  ECED  F023         	call	___fltol	;wreg free
 11431  0043DA  0100               	movlb	0	; () banked
 11432  0043DC  5179               	movf	?___fltol& (0+255),w,b
 11433  0043DE  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11434  0043E0                     
 11435                           ; BSR set to: 0
 11436                           ;main.c: 387:     if (addMPow > (2)) {
 11437  0043E0  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11438  0043E2  0A80               	xorlw	128
 11439  0043E4  0F7D               	addlw	-131
 11440  0043E6  A0D8               	btfss	status,0,c
 11441  0043E8  EFF8  F021         	goto	u10391
 11442  0043EC  EFFA  F021         	goto	u10390
 11443  0043F0                     u10391:
 11444  0043F0  EFFE  F021         	goto	l9313
 11445  0043F4                     u10390:
 11446  0043F4                     
 11447                           ; BSR set to: 0
 11448                           ;main.c: 388:         addMPow = (2);
 11449  0043F4  0E02               	movlw	2
 11450  0043F6  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11451                           
 11452                           ;main.c: 389:     } else if (addMPow < -(2)) {
 11453  0043F8  EF0A  F022         	goto	l9317
 11454  0043FC                     l9313:
 11455                           
 11456                           ; BSR set to: 0
 11457  0043FC  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11458  0043FE  0A80               	xorlw	128
 11459  004400  0F82               	addlw	130
 11460  004402  B0D8               	btfsc	status,0,c
 11461  004404  EF06  F022         	goto	u10401
 11462  004408  EF08  F022         	goto	u10400
 11463  00440C                     u10401:
 11464  00440C  EF0A  F022         	goto	l9317
 11465  004410                     u10400:
 11466  004410                     
 11467                           ; BSR set to: 0
 11468                           ;main.c: 390:         addMPow = -(2);
 11469  004410  0EFE               	movlw	254
 11470  004412  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11471  004414                     l9317:
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;main.c: 393:     actMotorPow += addMPow;
 11475  004414  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11476  004416  27E9               	addwf	_actMotorPow& (0+255),f,b
 11477  004418  0E00               	movlw	0
 11478  00441A  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11479  00441C  0EFF               	movlw	255
 11480  00441E  23EA               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11481  004420                     
 11482                           ; BSR set to: 0
 11483                           ;main.c: 395:     if (actMotorPow > (700)) {
 11484  004420  BFEA               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11485  004422  EF1C  F022         	goto	u10411
 11486  004426  0EBD               	movlw	189
 11487  004428  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11488  00442A  0E02               	movlw	2
 11489  00442C  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11490  00442E  A0D8               	btfss	status,0,c
 11491  004430  EF1C  F022         	goto	u10411
 11492  004434  EF1E  F022         	goto	u10410
 11493  004438                     u10411:
 11494  004438  EF24  F022         	goto	l9323
 11495  00443C                     u10410:
 11496  00443C                     
 11497                           ; BSR set to: 0
 11498                           ;main.c: 396:         actMotorPow = (700);
 11499  00443C  0E02               	movlw	2
 11500  00443E  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11501  004440  0EBC               	movlw	188
 11502  004442  6FE9               	movwf	_actMotorPow& (0+255),b
 11503                           
 11504                           ;main.c: 397:     } else if (actMotorPow < (-400)) {
 11505  004444  EF36  F022         	goto	l9327
 11506  004448                     l9323:
 11507                           
 11508                           ; BSR set to: 0
 11509  004448  AFEA               	btfss	(_actMotorPow+1)& (0+255),7,b
 11510  00444A  EF30  F022         	goto	u10421
 11511  00444E  0E70               	movlw	112
 11512  004450  5DE9               	subwf	_actMotorPow& (0+255),w,b
 11513  004452  0EFE               	movlw	254
 11514  004454  59EA               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11515  004456  B0D8               	btfsc	status,0,c
 11516  004458  EF30  F022         	goto	u10421
 11517  00445C  EF32  F022         	goto	u10420
 11518  004460                     u10421:
 11519  004460  EF36  F022         	goto	l9327
 11520  004464                     u10420:
 11521  004464                     
 11522                           ; BSR set to: 0
 11523                           ;main.c: 398:         actMotorPow = (-400);
 11524  004464  0EFE               	movlw	254
 11525  004466  6FEA               	movwf	(_actMotorPow+1)& (0+255),b
 11526  004468  0E70               	movlw	112
 11527  00446A  6FE9               	movwf	_actMotorPow& (0+255),b
 11528  00446C                     l9327:
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;main.c: 401:     setMotor(actMotorPow);
 11532  00446C  C0E9  F018         	movff	_actMotorPow,setMotor@motorPower
 11533  004470  C0EA  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11534  004474  ECED  F025         	call	_setMotor	;wreg free
 11535  004478                     
 11536                           ;main.c: 403:     oldSpeed = currentSpeed;
 11537  004478  C0EB  F12C         	movff	_currentSpeed,_oldSpeed
 11538  00447C  C0EC  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11539  004480  0012               	return		;funcret
 11540  004482                     __end_of_calcMotorPow:
 11541                           	callstack 0
 11542                           
 11543 ;; *************** function _setMotor *****************
 11544 ;; Defined at:
 11545 ;;		line 406 in file "main.c"
 11546 ;; Parameters:    Size  Location     Type
 11547 ;;  motorPower      2   23[COMRAM] short 
 11548 ;; Auto vars:     Size  Location     Type
 11549 ;;		None
 11550 ;; Return value:  Size  Location     Type
 11551 ;;                  1    wreg      void 
 11552 ;; Registers used:
 11553 ;;		wreg, status,2, status,0, cstack
 11554 ;; Tracked objects:
 11555 ;;		On entry : 0/0
 11556 ;;		On exit  : 0/0
 11557 ;;		Unchanged: 0/0
 11558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11563 ;;Total ram usage:        4 bytes
 11564 ;; Hardware stack levels used: 1
 11565 ;; Hardware stack levels required when called: 9
 11566 ;; This function calls:
 11567 ;;		_PWM7_LoadDutyValue
 11568 ;;		_PWM8_LoadDutyValue
 11569 ;; This function is called by:
 11570 ;;		_loop
 11571 ;;		_calcMotorPow
 11572 ;;		_startAccell
 11573 ;; This function uses a non-reentrant model
 11574 ;;
 11575                           
 11576                           	psect	text40
 11577  004BDA                     __ptext40:
 11578                           	callstack 0
 11579  004BDA                     _setMotor:
 11580                           	callstack 20
 11581  004BDA                     
 11582                           ;main.c: 407:     if (motorPower >= (40)) {
 11583  004BDA  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11584  004BDC  EFF9  F025         	goto	u6361
 11585  004BE0  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11586  004BE2  E109               	bnz	u6360
 11587  004BE4  0E28               	movlw	40
 11588  004BE6  5C18               	subwf	setMotor@motorPower^0,w,c
 11589  004BE8  A0D8               	btfss	status,0,c
 11590  004BEA  EFF9  F025         	goto	u6361
 11591  004BEE  EFFB  F025         	goto	u6360
 11592  004BF2                     u6361:
 11593  004BF2  EF1B  F026         	goto	l6621
 11594  004BF6                     u6360:
 11595  004BF6                     
 11596                           ;main.c: 408:         if (motorPower > (700)) {
 11597  004BF6  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11598  004BF8  EF07  F026         	goto	u6371
 11599  004BFC  0EBD               	movlw	189
 11600  004BFE  5C18               	subwf	setMotor@motorPower^0,w,c
 11601  004C00  0E02               	movlw	2
 11602  004C02  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11603  004C04  A0D8               	btfss	status,0,c
 11604  004C06  EF07  F026         	goto	u6371
 11605  004C0A  EF09  F026         	goto	u6370
 11606  004C0E                     u6371:
 11607  004C0E  EF0D  F026         	goto	l6617
 11608  004C12                     u6370:
 11609  004C12                     
 11610                           ;main.c: 409:             motorPower = (700);
 11611  004C12  0E02               	movlw	2
 11612  004C14  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11613  004C16  0EBC               	movlw	188
 11614  004C18  6E18               	movwf	setMotor@motorPower^0,c
 11615  004C1A                     l6617:
 11616                           
 11617                           ;main.c: 411:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11618  004C1A  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11619  004C1E  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11620  004C22  ECA5  F02D         	call	_PWM7_LoadDutyValue	;wreg free
 11621  004C26                     
 11622                           ;main.c: 412:         PWM8_LoadDutyValue(0);
 11623  004C26  0E00               	movlw	0
 11624  004C28  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11625  004C2A  0E00               	movlw	0
 11626  004C2C  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11627  004C2E  EC8B  F02D         	call	_PWM8_LoadDutyValue	;wreg free
 11628                           
 11629                           ;main.c: 413:     } else if (motorPower <= -(40)) {
 11630  004C32  EF5D  F026         	goto	l1397
 11631  004C36                     l6621:
 11632  004C36  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11633  004C38  EF27  F026         	goto	u6381
 11634  004C3C  0ED9               	movlw	217
 11635  004C3E  5C18               	subwf	setMotor@motorPower^0,w,c
 11636  004C40  0EFF               	movlw	255
 11637  004C42  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11638  004C44  B0D8               	btfsc	status,0,c
 11639  004C46  EF27  F026         	goto	u6381
 11640  004C4A  EF29  F026         	goto	u6380
 11641  004C4E                     u6381:
 11642  004C4E  EF51  F026         	goto	l6631
 11643  004C52                     u6380:
 11644  004C52                     
 11645                           ;main.c: 414:         if (motorPower < (-400)) {
 11646  004C52  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11647  004C54  EF35  F026         	goto	u6391
 11648  004C58  0E70               	movlw	112
 11649  004C5A  5C18               	subwf	setMotor@motorPower^0,w,c
 11650  004C5C  0EFE               	movlw	254
 11651  004C5E  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11652  004C60  B0D8               	btfsc	status,0,c
 11653  004C62  EF35  F026         	goto	u6391
 11654  004C66  EF37  F026         	goto	u6390
 11655  004C6A                     u6391:
 11656  004C6A  EF3B  F026         	goto	l6627
 11657  004C6E                     u6390:
 11658  004C6E                     
 11659                           ;main.c: 415:             motorPower = (-400);
 11660  004C6E  0EFE               	movlw	254
 11661  004C70  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11662  004C72  0E70               	movlw	112
 11663  004C74  6E18               	movwf	setMotor@motorPower^0,c
 11664  004C76                     l6627:
 11665                           
 11666                           ;main.c: 417:         PWM7_LoadDutyValue(0);
 11667  004C76  0E00               	movlw	0
 11668  004C78  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11669  004C7A  0E00               	movlw	0
 11670  004C7C  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11671  004C7E  ECA5  F02D         	call	_PWM7_LoadDutyValue	;wreg free
 11672  004C82                     
 11673                           ;main.c: 418:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11674  004C82  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11675  004C86  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11676  004C8A  1E1A               	comf	??_setMotor^0,f,c
 11677  004C8C  1E1B               	comf	(??_setMotor+1)^0,f,c
 11678  004C8E  4A1A               	infsnz	??_setMotor^0,f,c
 11679  004C90  2A1B               	incf	(??_setMotor+1)^0,f,c
 11680  004C92  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11681  004C96  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11682  004C9A  EC8B  F02D         	call	_PWM8_LoadDutyValue	;wreg free
 11683                           
 11684                           ;main.c: 419:     } else {
 11685  004C9E  EF5D  F026         	goto	l1397
 11686  004CA2                     l6631:
 11687                           
 11688                           ;main.c: 421:         PWM7_LoadDutyValue(0);
 11689  004CA2  0E00               	movlw	0
 11690  004CA4  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11691  004CA6  0E00               	movlw	0
 11692  004CA8  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11693  004CAA  ECA5  F02D         	call	_PWM7_LoadDutyValue	;wreg free
 11694                           
 11695                           ;main.c: 422:         PWM8_LoadDutyValue(0);
 11696  004CAE  0E00               	movlw	0
 11697  004CB0  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11698  004CB2  0E00               	movlw	0
 11699  004CB4  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11700  004CB6  EC8B  F02D         	call	_PWM8_LoadDutyValue	;wreg free
 11701  004CBA                     l1397:
 11702  004CBA  0012               	return		;funcret
 11703  004CBC                     __end_of_setMotor:
 11704                           	callstack 0
 11705                           
 11706 ;; *************** function _PWM8_LoadDutyValue *****************
 11707 ;; Defined at:
 11708 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;		None
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      void 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, status,0
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;Total ram usage:        4 bytes
 11727 ;; Hardware stack levels used: 1
 11728 ;; Hardware stack levels required when called: 8
 11729 ;; This function calls:
 11730 ;;		Nothing
 11731 ;; This function is called by:
 11732 ;;		_setMotor
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text41
 11737  005B16                     __ptext41:
 11738                           	callstack 0
 11739  005B16                     _PWM8_LoadDutyValue:
 11740                           	callstack 20
 11741  005B16                     
 11742                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11743  005B16  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11744  005B1A  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11745  005B1E  90D8               	bcf	status,0,c
 11746  005B20  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11747  005B22  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11748  005B24  90D8               	bcf	status,0,c
 11749  005B26  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11750  005B28  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11751  005B2A  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11752  005B2C  6E61               	movwf	97,c	;volatile
 11753                           
 11754                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11755  005B2E  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11756  005B32  0E03               	movlw	3
 11757  005B34  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11758  005B36  0E06               	movlw	6
 11759  005B38  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11760  005B3A                     u6145:
 11761  005B3A  90D8               	bcf	status,0,c
 11762  005B3C  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11763  005B3E  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11764  005B40  EF9D  F02D         	goto	u6145
 11765  005B44  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11766  005B46  6E60               	movwf	96,c	;volatile
 11767  005B48  0012               	return		;funcret
 11768  005B4A                     __end_of_PWM8_LoadDutyValue:
 11769                           	callstack 0
 11770                           
 11771 ;; *************** function _PWM7_LoadDutyValue *****************
 11772 ;; Defined at:
 11773 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11776 ;; Auto vars:     Size  Location     Type
 11777 ;;		None
 11778 ;; Return value:  Size  Location     Type
 11779 ;;                  1    wreg      void 
 11780 ;; Registers used:
 11781 ;;		wreg, status,2, status,0
 11782 ;; Tracked objects:
 11783 ;;		On entry : 0/0
 11784 ;;		On exit  : 0/0
 11785 ;;		Unchanged: 0/0
 11786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11787 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;Total ram usage:        4 bytes
 11792 ;; Hardware stack levels used: 1
 11793 ;; Hardware stack levels required when called: 8
 11794 ;; This function calls:
 11795 ;;		Nothing
 11796 ;; This function is called by:
 11797 ;;		_setMotor
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text42
 11802  005B4A                     __ptext42:
 11803                           	callstack 0
 11804  005B4A                     _PWM7_LoadDutyValue:
 11805                           	callstack 20
 11806  005B4A                     
 11807                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11808  005B4A  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11809  005B4E  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11810  005B52  90D8               	bcf	status,0,c
 11811  005B54  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11812  005B56  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11813  005B58  90D8               	bcf	status,0,c
 11814  005B5A  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11815  005B5C  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11816  005B5E  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11817  005B60  6E65               	movwf	101,c	;volatile
 11818                           
 11819                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11820  005B62  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11821  005B66  0E03               	movlw	3
 11822  005B68  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11823  005B6A  0E06               	movlw	6
 11824  005B6C  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11825  005B6E                     u6135:
 11826  005B6E  90D8               	bcf	status,0,c
 11827  005B70  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11828  005B72  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11829  005B74  EFB7  F02D         	goto	u6135
 11830  005B78  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11831  005B7A  6E64               	movwf	100,c	;volatile
 11832  005B7C  0012               	return		;funcret
 11833  005B7E                     __end_of_PWM7_LoadDutyValue:
 11834                           	callstack 0
 11835                           
 11836 ;; *************** function _actSpeed *****************
 11837 ;; Defined at:
 11838 ;;		line 67 in file "main.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  speed           2   35[COMRAM] short 
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  2   33[COMRAM] short 
 11845 ;; Registers used:
 11846 ;;		wreg, status,2, status,0, cstack
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11856 ;;Total ram usage:        4 bytes
 11857 ;; Hardware stack levels used: 1
 11858 ;; Hardware stack levels required when called: 9
 11859 ;; This function calls:
 11860 ;;		___aldiv
 11861 ;; This function is called by:
 11862 ;;		_calcMotorPow
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text43
 11867  005260                     __ptext43:
 11868                           	callstack 0
 11869  005260                     _actSpeed:
 11870                           	callstack 19
 11871  005260                     
 11872                           ;main.c: 68:     int16_t speed = 0;
 11873  005260  0E00               	movlw	0
 11874  005262  6E25               	movwf	(actSpeed@speed+1)^0,c
 11875  005264  0E00               	movlw	0
 11876  005266  6E24               	movwf	actSpeed@speed^0,c
 11877  005268                     
 11878                           ;main.c: 69:     if (smtPeriod) {
 11879  005268  5048               	movf	_smtPeriod^0,w,c	;volatile
 11880  00526A  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11881  00526C  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11882  00526E  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11883  005270  B4D8               	btfsc	status,2,c
 11884  005272  EF3D  F029         	goto	u6441
 11885  005276  EF3F  F029         	goto	u6440
 11886  00527A                     u6441:
 11887  00527A  EF75  F029         	goto	l6689
 11888  00527E                     u6440:
 11889  00527E                     
 11890                           ;main.c: 70:         if (CLC3CONbits.LC3OUT) {
 11891  00527E  013C               	movlb	60	; () banked
 11892  005280  AB60               	btfss	96,5,b	;volatile
 11893  005282  EF45  F029         	goto	u6451
 11894  005286  EF47  F029         	goto	u6450
 11895  00528A                     u6451:
 11896  00528A  EF5F  F029         	goto	l6687
 11897  00528E                     u6450:
 11898  00528E                     
 11899                           ; BSR set to: 60
 11900                           ;main.c: 71:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11901  00528E  0E20               	movlw	32
 11902  005290  6E14               	movwf	___aldiv@dividend^0,c
 11903  005292  0EA1               	movlw	161
 11904  005294  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11905  005296  0E07               	movlw	7
 11906  005298  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11907  00529A  0E00               	movlw	0
 11908  00529C  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11909  00529E  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11910  0052A2  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11911  0052A6  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11912  0052AA  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11913  0052AE  EC67  F023         	call	___aldiv	;wreg free
 11914  0052B2  C014  F024         	movff	?___aldiv,actSpeed@speed
 11915  0052B6  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11916                           
 11917                           ;main.c: 72:         } else {
 11918  0052BA  EF75  F029         	goto	l6689
 11919  0052BE                     l6687:
 11920                           
 11921                           ; BSR set to: 60
 11922                           ;main.c: 73:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11923  0052BE  0EE0               	movlw	224
 11924  0052C0  6E14               	movwf	___aldiv@dividend^0,c
 11925  0052C2  0E5E               	movlw	94
 11926  0052C4  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11927  0052C6  0EF8               	movlw	248
 11928  0052C8  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11929  0052CA  0EFF               	movlw	255
 11930  0052CC  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11931  0052CE  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11932  0052D2  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11933  0052D6  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11934  0052DA  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11935  0052DE  EC67  F023         	call	___aldiv	;wreg free
 11936  0052E2  C014  F024         	movff	?___aldiv,actSpeed@speed
 11937  0052E6  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11938  0052EA                     l6689:
 11939                           
 11940                           ;main.c: 76:     return speed;
 11941  0052EA  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11942  0052EE  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11943  0052F2  0012               	return		;funcret
 11944  0052F4                     __end_of_actSpeed:
 11945                           	callstack 0
 11946                           
 11947 ;; *************** function ___aldiv *****************
 11948 ;; Defined at:
 11949 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;  dividend        4   19[COMRAM] long 
 11952 ;;  divisor         4   23[COMRAM] long 
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;  quotient        4   29[COMRAM] long 
 11955 ;;  sign            1   28[COMRAM] unsigned char 
 11956 ;;  counter         1   27[COMRAM] unsigned char 
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  4   19[COMRAM] long 
 11959 ;; Registers used:
 11960 ;;		wreg, status,2, status,0
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11967 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11969 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;Total ram usage:       14 bytes
 11971 ;; Hardware stack levels used: 1
 11972 ;; Hardware stack levels required when called: 8
 11973 ;; This function calls:
 11974 ;;		Nothing
 11975 ;; This function is called by:
 11976 ;;		_actSpeed
 11977 ;; This function uses a non-reentrant model
 11978 ;;
 11979                           
 11980                           	psect	text44
 11981  0046CE                     __ptext44:
 11982                           	callstack 0
 11983  0046CE                     ___aldiv:
 11984                           	callstack 19
 11985  0046CE  0E00               	movlw	0
 11986  0046D0  6E1D               	movwf	___aldiv@sign^0,c
 11987  0046D2  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11988  0046D4  EF70  F023         	goto	u6180
 11989  0046D8  EF6E  F023         	goto	u6181
 11990  0046DC                     u6181:
 11991  0046DC  EF7A  F023         	goto	l6487
 11992  0046E0                     u6180:
 11993  0046E0  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11994  0046E2  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11995  0046E4  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11996  0046E6  6C18               	negf	___aldiv@divisor^0,c
 11997  0046E8  0E00               	movlw	0
 11998  0046EA  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11999  0046EC  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 12000  0046EE  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 12001  0046F0  0E01               	movlw	1
 12002  0046F2  6E1D               	movwf	___aldiv@sign^0,c
 12003  0046F4                     l6487:
 12004  0046F4  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 12005  0046F6  EF81  F023         	goto	u6190
 12006  0046FA  EF7F  F023         	goto	u6191
 12007  0046FE                     u6191:
 12008  0046FE  EF8B  F023         	goto	l6493
 12009  004702                     u6190:
 12010  004702  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 12011  004704  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 12012  004706  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 12013  004708  6C14               	negf	___aldiv@dividend^0,c
 12014  00470A  0E00               	movlw	0
 12015  00470C  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 12016  00470E  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 12017  004710  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 12018  004712  0E01               	movlw	1
 12019  004714  1A1D               	xorwf	___aldiv@sign^0,f,c
 12020  004716                     l6493:
 12021  004716  0E00               	movlw	0
 12022  004718  6E1E               	movwf	___aldiv@quotient^0,c
 12023  00471A  0E00               	movlw	0
 12024  00471C  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 12025  00471E  0E00               	movlw	0
 12026  004720  6E20               	movwf	(___aldiv@quotient+2)^0,c
 12027  004722  0E00               	movlw	0
 12028  004724  6E21               	movwf	(___aldiv@quotient+3)^0,c
 12029  004726  5018               	movf	___aldiv@divisor^0,w,c
 12030  004728  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 12031  00472A  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 12032  00472C  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 12033  00472E  B4D8               	btfsc	status,2,c
 12034  004730  EF9C  F023         	goto	u6201
 12035  004734  EF9E  F023         	goto	u6200
 12036  004738                     u6201:
 12037  004738  EFD4  F023         	goto	l6515
 12038  00473C                     u6200:
 12039  00473C  0E01               	movlw	1
 12040  00473E  6E1C               	movwf	___aldiv@counter^0,c
 12041  004740  EFA8  F023         	goto	l6501
 12042  004744                     l6499:
 12043  004744  90D8               	bcf	status,0,c
 12044  004746  3618               	rlcf	___aldiv@divisor^0,f,c
 12045  004748  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 12046  00474A  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 12047  00474C  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 12048  00474E  2A1C               	incf	___aldiv@counter^0,f,c
 12049  004750                     l6501:
 12050  004750  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 12051  004752  EFAD  F023         	goto	u6211
 12052  004756  EFAF  F023         	goto	u6210
 12053  00475A                     u6211:
 12054  00475A  EFA2  F023         	goto	l6499
 12055  00475E                     u6210:
 12056  00475E                     l6503:
 12057  00475E  90D8               	bcf	status,0,c
 12058  004760  361E               	rlcf	___aldiv@quotient^0,f,c
 12059  004762  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 12060  004764  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 12061  004766  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 12062  004768  5018               	movf	___aldiv@divisor^0,w,c
 12063  00476A  5C14               	subwf	___aldiv@dividend^0,w,c
 12064  00476C  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12065  00476E  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 12066  004770  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12067  004772  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 12068  004774  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12069  004776  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 12070  004778  A0D8               	btfss	status,0,c
 12071  00477A  EFC1  F023         	goto	u6221
 12072  00477E  EFC3  F023         	goto	u6220
 12073  004782                     u6221:
 12074  004782  EFCC  F023         	goto	l6511
 12075  004786                     u6220:
 12076  004786  5018               	movf	___aldiv@divisor^0,w,c
 12077  004788  5E14               	subwf	___aldiv@dividend^0,f,c
 12078  00478A  5019               	movf	(___aldiv@divisor+1)^0,w,c
 12079  00478C  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 12080  00478E  501A               	movf	(___aldiv@divisor+2)^0,w,c
 12081  004790  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 12082  004792  501B               	movf	(___aldiv@divisor+3)^0,w,c
 12083  004794  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 12084  004796  801E               	bsf	___aldiv@quotient^0,0,c
 12085  004798                     l6511:
 12086  004798  90D8               	bcf	status,0,c
 12087  00479A  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 12088  00479C  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 12089  00479E  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 12090  0047A0  3218               	rrcf	___aldiv@divisor^0,f,c
 12091  0047A2  2E1C               	decfsz	___aldiv@counter^0,f,c
 12092  0047A4  EFAF  F023         	goto	l6503
 12093  0047A8                     l6515:
 12094  0047A8  501D               	movf	___aldiv@sign^0,w,c
 12095  0047AA  B4D8               	btfsc	status,2,c
 12096  0047AC  EFDA  F023         	goto	u6231
 12097  0047B0  EFDC  F023         	goto	u6230
 12098  0047B4                     u6231:
 12099  0047B4  EFE4  F023         	goto	l6519
 12100  0047B8                     u6230:
 12101  0047B8  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 12102  0047BA  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 12103  0047BC  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 12104  0047BE  6C1E               	negf	___aldiv@quotient^0,c
 12105  0047C0  0E00               	movlw	0
 12106  0047C2  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 12107  0047C4  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 12108  0047C6  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 12109  0047C8                     l6519:
 12110  0047C8  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 12111  0047CC  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 12112  0047D0  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 12113  0047D4  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 12114  0047D8  0012               	return		;funcret
 12115  0047DA                     __end_of___aldiv:
 12116                           	callstack 0
 12117                           
 12118 ;; *************** function ___xxtofl *****************
 12119 ;; Defined at:
 12120 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12121 ;; Parameters:    Size  Location     Type
 12122 ;;  sign            1    wreg     unsigned char 
 12123 ;;  val             4   27[COMRAM] long 
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;  sign            1   35[COMRAM] unsigned char 
 12126 ;;  arg             4   37[COMRAM] unsigned long 
 12127 ;;  exp             1   36[COMRAM] unsigned char 
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  4   27[COMRAM] unsigned char 
 12130 ;; Registers used:
 12131 ;;		wreg, status,2, status,0
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;Total ram usage:       14 bytes
 12142 ;; Hardware stack levels used: 1
 12143 ;; Hardware stack levels required when called: 8
 12144 ;; This function calls:
 12145 ;;		Nothing
 12146 ;; This function is called by:
 12147 ;;		_loop
 12148 ;;		_getBatteryVoltage
 12149 ;;		_checkBatt
 12150 ;;		_calcSpeed
 12151 ;;		_calcMotorPow
 12152 ;;		_setSteering
 12153 ;;		_checkCurveCount
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text45
 12158  003E96                     __ptext45:
 12159                           	callstack 0
 12160  003E96                     ___xxtofl:
 12161                           	callstack 20
 12162                           
 12163                           ;incstack = 0
 12164                           ;___xxtofl@sign stored from wreg
 12165  003E96  6E24               	movwf	___xxtofl@sign^0,c
 12166  003E98  5024               	movf	___xxtofl@sign^0,w,c
 12167  003E9A  B4D8               	btfsc	status,2,c
 12168  003E9C  EF52  F01F         	goto	u9821
 12169  003EA0  EF54  F01F         	goto	u9820
 12170  003EA4                     u9821:
 12171  003EA4  EF76  F01F         	goto	l2072
 12172  003EA8                     u9820:
 12173  003EA8  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12174  003EAA  EF5B  F01F         	goto	u9830
 12175  003EAE  EF59  F01F         	goto	u9831
 12176  003EB2                     u9831:
 12177  003EB2  EF76  F01F         	goto	l2072
 12178  003EB6                     u9830:
 12179  003EB6  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 12180  003EBA  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 12181  003EBE  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 12182  003EC2  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 12183  003EC6  1E20               	comf	??___xxtofl^0,f,c
 12184  003EC8  1E21               	comf	(??___xxtofl+1)^0,f,c
 12185  003ECA  1E22               	comf	(??___xxtofl+2)^0,f,c
 12186  003ECC  1E23               	comf	(??___xxtofl+3)^0,f,c
 12187  003ECE  2A20               	incf	??___xxtofl^0,f,c
 12188  003ED0  0E00               	movlw	0
 12189  003ED2  2221               	addwfc	(??___xxtofl+1)^0,f,c
 12190  003ED4  2222               	addwfc	(??___xxtofl+2)^0,f,c
 12191  003ED6  2223               	addwfc	(??___xxtofl+3)^0,f,c
 12192  003ED8  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 12193  003EDC  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 12194  003EE0  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 12195  003EE4  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 12196  003EE8  EF7E  F01F         	goto	l8917
 12197  003EEC                     l2072:
 12198  003EEC  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 12199  003EF0  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12200  003EF4  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12201  003EF8  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12202  003EFC                     l8917:
 12203  003EFC  501C               	movf	___xxtofl@val^0,w,c
 12204  003EFE  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 12205  003F00  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 12206  003F02  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 12207  003F04  A4D8               	btfss	status,2,c
 12208  003F06  EF87  F01F         	goto	u9841
 12209  003F0A  EF89  F01F         	goto	u9840
 12210  003F0E                     u9841:
 12211  003F0E  EF93  F01F         	goto	l8923
 12212  003F12                     u9840:
 12213  003F12  0E00               	movlw	0
 12214  003F14  6E1C               	movwf	?___xxtofl^0,c
 12215  003F16  0E00               	movlw	0
 12216  003F18  6E1D               	movwf	(?___xxtofl+1)^0,c
 12217  003F1A  0E00               	movlw	0
 12218  003F1C  6E1E               	movwf	(?___xxtofl+2)^0,c
 12219  003F1E  0E00               	movlw	0
 12220  003F20  6E1F               	movwf	(?___xxtofl+3)^0,c
 12221  003F22  EF24  F020         	goto	l2075
 12222  003F26                     l8923:
 12223  003F26  0E96               	movlw	150
 12224  003F28  6E25               	movwf	___xxtofl@exp^0,c
 12225  003F2A  EF9D  F01F         	goto	l8927
 12226  003F2E                     l8925:
 12227  003F2E  2A25               	incf	___xxtofl@exp^0,f,c
 12228  003F30  90D8               	bcf	status,0,c
 12229  003F32  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12230  003F34  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12231  003F36  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12232  003F38  3226               	rrcf	___xxtofl@arg^0,f,c
 12233  003F3A                     l8927:
 12234  003F3A  0E00               	movlw	0
 12235  003F3C  1426               	andwf	___xxtofl@arg^0,w,c
 12236  003F3E  6E20               	movwf	??___xxtofl^0,c
 12237  003F40  0E00               	movlw	0
 12238  003F42  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12239  003F44  6E21               	movwf	(??___xxtofl+1)^0,c
 12240  003F46  0E00               	movlw	0
 12241  003F48  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12242  003F4A  6E22               	movwf	(??___xxtofl+2)^0,c
 12243  003F4C  0EFE               	movlw	254
 12244  003F4E  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12245  003F50  6E23               	movwf	(??___xxtofl+3)^0,c
 12246  003F52  5020               	movf	??___xxtofl^0,w,c
 12247  003F54  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12248  003F56  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12249  003F58  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12250  003F5A  A4D8               	btfss	status,2,c
 12251  003F5C  EFB2  F01F         	goto	u9851
 12252  003F60  EFB4  F01F         	goto	u9850
 12253  003F64                     u9851:
 12254  003F64  EF97  F01F         	goto	l8925
 12255  003F68                     u9850:
 12256  003F68  EFC2  F01F         	goto	l2079
 12257  003F6C                     l8929:
 12258  003F6C  2A25               	incf	___xxtofl@exp^0,f,c
 12259  003F6E  0E01               	movlw	1
 12260  003F70  2626               	addwf	___xxtofl@arg^0,f,c
 12261  003F72  0E00               	movlw	0
 12262  003F74  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 12263  003F76  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 12264  003F78  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 12265  003F7A  90D8               	bcf	status,0,c
 12266  003F7C  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 12267  003F7E  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 12268  003F80  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 12269  003F82  3226               	rrcf	___xxtofl@arg^0,f,c
 12270  003F84                     l2079:
 12271  003F84  0E00               	movlw	0
 12272  003F86  1426               	andwf	___xxtofl@arg^0,w,c
 12273  003F88  6E20               	movwf	??___xxtofl^0,c
 12274  003F8A  0E00               	movlw	0
 12275  003F8C  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 12276  003F8E  6E21               	movwf	(??___xxtofl+1)^0,c
 12277  003F90  0E00               	movlw	0
 12278  003F92  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 12279  003F94  6E22               	movwf	(??___xxtofl+2)^0,c
 12280  003F96  0EFF               	movlw	255
 12281  003F98  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 12282  003F9A  6E23               	movwf	(??___xxtofl+3)^0,c
 12283  003F9C  5020               	movf	??___xxtofl^0,w,c
 12284  003F9E  1021               	iorwf	(??___xxtofl+1)^0,w,c
 12285  003FA0  1022               	iorwf	(??___xxtofl+2)^0,w,c
 12286  003FA2  1023               	iorwf	(??___xxtofl+3)^0,w,c
 12287  003FA4  A4D8               	btfss	status,2,c
 12288  003FA6  EFD7  F01F         	goto	u9861
 12289  003FAA  EFD9  F01F         	goto	u9860
 12290  003FAE                     u9861:
 12291  003FAE  EFB6  F01F         	goto	l8929
 12292  003FB2                     u9860:
 12293  003FB2  EFE1  F01F         	goto	l8937
 12294  003FB6                     l8935:
 12295  003FB6  0625               	decf	___xxtofl@exp^0,f,c
 12296  003FB8  90D8               	bcf	status,0,c
 12297  003FBA  3626               	rlcf	___xxtofl@arg^0,f,c
 12298  003FBC  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 12299  003FBE  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 12300  003FC0  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 12301  003FC2                     l8937:
 12302  003FC2  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 12303  003FC4  EFE6  F01F         	goto	u9871
 12304  003FC8  EFE8  F01F         	goto	u9870
 12305  003FCC                     u9871:
 12306  003FCC  EFF0  F01F         	goto	l2086
 12307  003FD0                     u9870:
 12308  003FD0  0E02               	movlw	2
 12309  003FD2  6025               	cpfslt	___xxtofl@exp^0,c
 12310  003FD4  EFEE  F01F         	goto	u9881
 12311  003FD8  EFF0  F01F         	goto	u9880
 12312  003FDC                     u9881:
 12313  003FDC  EFDB  F01F         	goto	l8935
 12314  003FE0                     u9880:
 12315  003FE0                     l2086:
 12316  003FE0  B025               	btfsc	___xxtofl@exp^0,0,c
 12317  003FE2  EFF5  F01F         	goto	u9891
 12318  003FE6  EFF7  F01F         	goto	u9890
 12319  003FEA                     u9891:
 12320  003FEA  EFF8  F01F         	goto	l8943
 12321  003FEE                     u9890:
 12322  003FEE  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 12323  003FF0                     l8943:
 12324  003FF0  90D8               	bcf	status,0,c
 12325  003FF2  3225               	rrcf	___xxtofl@exp^0,f,c
 12326  003FF4  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 12327  003FF8  6A21               	clrf	(??___xxtofl+1)^0,c
 12328  003FFA  6A22               	clrf	(??___xxtofl+2)^0,c
 12329  003FFC  6A23               	clrf	(??___xxtofl+3)^0,c
 12330  003FFE  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 12331  004002  6A22               	clrf	(??___xxtofl+2)^0,c
 12332  004004  6A21               	clrf	(??___xxtofl+1)^0,c
 12333  004006  6A20               	clrf	??___xxtofl^0,c
 12334  004008  5020               	movf	??___xxtofl^0,w,c
 12335  00400A  1226               	iorwf	___xxtofl@arg^0,f,c
 12336  00400C  5021               	movf	(??___xxtofl+1)^0,w,c
 12337  00400E  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12338  004010  5022               	movf	(??___xxtofl+2)^0,w,c
 12339  004012  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12340  004014  5023               	movf	(??___xxtofl+3)^0,w,c
 12341  004016  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12342  004018  5024               	movf	___xxtofl@sign^0,w,c
 12343  00401A  B4D8               	btfsc	status,2,c
 12344  00401C  EF12  F020         	goto	u9901
 12345  004020  EF14  F020         	goto	u9900
 12346  004024                     u9901:
 12347  004024  EF1C  F020         	goto	l8953
 12348  004028                     u9900:
 12349  004028  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12350  00402A  EF1B  F020         	goto	u9910
 12351  00402E  EF19  F020         	goto	u9911
 12352  004032                     u9911:
 12353  004032  EF1C  F020         	goto	l8953
 12354  004036                     u9910:
 12355  004036  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12356  004038                     l8953:
 12357  004038  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12358  00403C  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12359  004040  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12360  004044  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12361  004048                     l2075:
 12362  004048  0012               	return		;funcret
 12363  00404A                     __end_of___xxtofl:
 12364                           	callstack 0
 12365                           
 12366 ;; *************** function ___fltol *****************
 12367 ;; Defined at:
 12368 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;  f1              4   25[BANK0 ] unsigned char 
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;  exp1            1   34[BANK0 ] unsigned char 
 12373 ;;  sign1           1   33[BANK0 ] unsigned char 
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  4   25[BANK0 ] long 
 12376 ;; Registers used:
 12377 ;;		wreg, status,2, status,0
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12385 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12386 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12387 ;;Total ram usage:       10 bytes
 12388 ;; Hardware stack levels used: 1
 12389 ;; Hardware stack levels required when called: 8
 12390 ;; This function calls:
 12391 ;;		Nothing
 12392 ;; This function is called by:
 12393 ;;		_calcSpeed
 12394 ;;		_calcMotorPow
 12395 ;;		_setSteering
 12396 ;;		_efgtoa
 12397 ;; This function uses a non-reentrant model
 12398 ;;
 12399                           
 12400                           	psect	text46
 12401  0047DA                     __ptext46:
 12402                           	callstack 0
 12403  0047DA                     ___fltol:
 12404                           	callstack 20
 12405  0047DA  0100               	movlb	0	; () banked
 12406  0047DC  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12407  0047DE  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12408  0047E0  6F82               	movwf	___fltol@exp1& (0+255),b
 12409  0047E2  5182               	movf	___fltol@exp1& (0+255),w,b
 12410  0047E4  A4D8               	btfss	status,2,c
 12411  0047E6  EFF7  F023         	goto	u8591
 12412  0047EA  EFF9  F023         	goto	u8590
 12413  0047EE                     u8591:
 12414  0047EE  EF03  F024         	goto	l8283
 12415  0047F2                     u8590:
 12416  0047F2                     l8279:
 12417                           
 12418                           ; BSR set to: 0
 12419  0047F2  0E00               	movlw	0
 12420  0047F4  6F79               	movwf	?___fltol& (0+255),b
 12421  0047F6  0E00               	movlw	0
 12422  0047F8  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12423  0047FA  0E00               	movlw	0
 12424  0047FC  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12425  0047FE  0E00               	movlw	0
 12426  004800  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12427  004802  EF70  F024         	goto	l1714
 12428  004806                     l8283:
 12429                           
 12430                           ; BSR set to: 0
 12431  004806  C079  F07D         	movff	___fltol@f1,??___fltol
 12432  00480A  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12433  00480E  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12434  004812  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12435  004816  0E20               	movlw	32
 12436  004818  EF13  F024         	goto	u8600
 12437  00481C                     u8605:
 12438  00481C  90D8               	bcf	status,0,c
 12439  00481E  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12440  004820  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12441  004822  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12442  004824  337D               	rrcf	??___fltol& (0+255),f,b
 12443  004826                     u8600:
 12444  004826  2EE8               	decfsz	wreg,f,c
 12445  004828  EF0E  F024         	goto	u8605
 12446  00482C  517D               	movf	??___fltol& (0+255),w,b
 12447  00482E  6F81               	movwf	___fltol@sign1& (0+255),b
 12448  004830                     
 12449                           ; BSR set to: 0
 12450  004830  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12451  004832                     
 12452                           ; BSR set to: 0
 12453  004832  0EFF               	movlw	255
 12454  004834  1779               	andwf	___fltol@f1& (0+255),f,b
 12455  004836  0EFF               	movlw	255
 12456  004838  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12457  00483A  0EFF               	movlw	255
 12458  00483C  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12459  00483E  0E00               	movlw	0
 12460  004840  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12461  004842                     
 12462                           ; BSR set to: 0
 12463  004842  0E96               	movlw	150
 12464  004844  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12465  004846                     
 12466                           ; BSR set to: 0
 12467  004846  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12468  004848  EF2A  F024         	goto	u8610
 12469  00484C  EF28  F024         	goto	u8611
 12470  004850                     u8611:
 12471  004850  EF40  F024         	goto	l8303
 12472  004854                     u8610:
 12473  004854                     
 12474                           ; BSR set to: 0
 12475  004854  5182               	movf	___fltol@exp1& (0+255),w,b
 12476  004856  0A80               	xorlw	128
 12477  004858  0F97               	addlw	151
 12478  00485A  B0D8               	btfsc	status,0,c
 12479  00485C  EF32  F024         	goto	u8621
 12480  004860  EF34  F024         	goto	u8620
 12481  004864                     u8621:
 12482  004864  EF36  F024         	goto	l8299
 12483  004868                     u8620:
 12484  004868  EFF9  F023         	goto	l8279
 12485  00486C                     l8299:
 12486                           
 12487                           ; BSR set to: 0
 12488  00486C  90D8               	bcf	status,0,c
 12489  00486E  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12490  004870  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12491  004872  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12492  004874  3379               	rrcf	___fltol@f1& (0+255),f,b
 12493  004876                     
 12494                           ; BSR set to: 0
 12495  004876  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12496  004878  EF36  F024         	goto	l8299
 12497  00487C  EF58  F024         	goto	l8313
 12498  004880                     l8303:
 12499                           
 12500                           ; BSR set to: 0
 12501  004880  0E1F               	movlw	31
 12502  004882  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12503  004884  EF46  F024         	goto	u8631
 12504  004888  EF48  F024         	goto	u8630
 12505  00488C                     u8631:
 12506  00488C  EF50  F024         	goto	l8311
 12507  004890                     u8630:
 12508  004890  EFF9  F023         	goto	l8279
 12509  004894                     l8309:
 12510                           
 12511                           ; BSR set to: 0
 12512  004894  90D8               	bcf	status,0,c
 12513  004896  3779               	rlcf	___fltol@f1& (0+255),f,b
 12514  004898  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12515  00489A  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12516  00489C  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12517  00489E  0782               	decf	___fltol@exp1& (0+255),f,b
 12518  0048A0                     l8311:
 12519                           
 12520                           ; BSR set to: 0
 12521  0048A0  5182               	movf	___fltol@exp1& (0+255),w,b
 12522  0048A2  A4D8               	btfss	status,2,c
 12523  0048A4  EF56  F024         	goto	u8641
 12524  0048A8  EF58  F024         	goto	u8640
 12525  0048AC                     u8641:
 12526  0048AC  EF4A  F024         	goto	l8309
 12527  0048B0                     u8640:
 12528  0048B0                     l8313:
 12529                           
 12530                           ; BSR set to: 0
 12531  0048B0  5181               	movf	___fltol@sign1& (0+255),w,b
 12532  0048B2  B4D8               	btfsc	status,2,c
 12533  0048B4  EF5E  F024         	goto	u8651
 12534  0048B8  EF60  F024         	goto	u8650
 12535  0048BC                     u8651:
 12536  0048BC  EF68  F024         	goto	l8317
 12537  0048C0                     u8650:
 12538  0048C0                     
 12539                           ; BSR set to: 0
 12540  0048C0  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12541  0048C2  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12542  0048C4  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12543  0048C6  6D79               	negf	___fltol@f1& (0+255),b
 12544  0048C8  0E00               	movlw	0
 12545  0048CA  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12546  0048CC  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12547  0048CE  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12548  0048D0                     l8317:
 12549                           
 12550                           ; BSR set to: 0
 12551  0048D0  C079  F079         	movff	___fltol@f1,?___fltol
 12552  0048D4  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12553  0048D8  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12554  0048DC  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12555  0048E0                     l1714:
 12556                           
 12557                           ; BSR set to: 0
 12558  0048E0  0012               	return		;funcret
 12559  0048E2                     __end_of___fltol:
 12560                           	callstack 0
 12561                           
 12562 ;; *************** function ___flmul *****************
 12563 ;; Defined at:
 12564 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;  b               4   41[COMRAM] long 
 12567 ;;  a               4   45[COMRAM] long 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;  prod            4    7[BANK0 ] struct .
 12570 ;;  grs             4    2[BANK0 ] unsigned long 
 12571 ;;  temp            2   11[BANK0 ] struct .
 12572 ;;  bexp            1    6[BANK0 ] unsigned char 
 12573 ;;  aexp            1    1[BANK0 ] unsigned char 
 12574 ;;  sign            1    0[BANK0 ] unsigned char 
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  4   41[COMRAM] unsigned char 
 12577 ;; Registers used:
 12578 ;;		wreg, status,2, status,0, prodl, prodh
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12584 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12587 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12588 ;;Total ram usage:       25 bytes
 12589 ;; Hardware stack levels used: 1
 12590 ;; Hardware stack levels required when called: 8
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		_calcSpeed
 12595 ;;		_calcMotorPow
 12596 ;;		_efgtoa
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           	psect	text47
 12601  00277A                     __ptext47:
 12602                           	callstack 0
 12603  00277A                     ___flmul:
 12604                           	callstack 16
 12605  00277A  502D               	movf	(___flmul@b+3)^0,w,c
 12606  00277C  0B80               	andlw	128
 12607  00277E  0100               	movlb	0	; () banked
 12608  002780  6F60               	movwf	___flmul@sign& (0+255),b
 12609  002782  502D               	movf	(___flmul@b+3)^0,w,c
 12610  002784  242D               	addwf	(___flmul@b+3)^0,w,c
 12611  002786  6F66               	movwf	___flmul@bexp& (0+255),b
 12612  002788                     
 12613                           ; BSR set to: 0
 12614  002788  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12615  00278A  EFC9  F013         	goto	u8191
 12616  00278E  EFCB  F013         	goto	u8190
 12617  002792                     u8191:
 12618  002792  EFCC  F013         	goto	l8021
 12619  002796                     u8190:
 12620  002796                     
 12621                           ; BSR set to: 0
 12622  002796  8166               	bsf	___flmul@bexp& (0+255),0,b
 12623  002798                     l8021:
 12624                           
 12625                           ; BSR set to: 0
 12626  002798  5166               	movf	___flmul@bexp& (0+255),w,b
 12627  00279A  B4D8               	btfsc	status,2,c
 12628  00279C  EFD2  F013         	goto	u8201
 12629  0027A0  EFD4  F013         	goto	u8200
 12630  0027A4                     u8201:
 12631  0027A4  EFE7  F013         	goto	l8029
 12632  0027A8                     u8200:
 12633  0027A8                     
 12634                           ; BSR set to: 0
 12635  0027A8  2966               	incf	___flmul@bexp& (0+255),w,b
 12636  0027AA  A4D8               	btfss	status,2,c
 12637  0027AC  EFDA  F013         	goto	u8211
 12638  0027B0  EFDC  F013         	goto	u8210
 12639  0027B4                     u8211:
 12640  0027B4  EFE4  F013         	goto	l8027
 12641  0027B8                     u8210:
 12642  0027B8                     
 12643                           ; BSR set to: 0
 12644  0027B8  0E00               	movlw	0
 12645  0027BA  6E2A               	movwf	___flmul@b^0,c
 12646  0027BC  0E00               	movlw	0
 12647  0027BE  6E2B               	movwf	(___flmul@b+1)^0,c
 12648  0027C0  0E00               	movlw	0
 12649  0027C2  6E2C               	movwf	(___flmul@b+2)^0,c
 12650  0027C4  0E00               	movlw	0
 12651  0027C6  6E2D               	movwf	(___flmul@b+3)^0,c
 12652  0027C8                     l8027:
 12653                           
 12654                           ; BSR set to: 0
 12655  0027C8  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12656  0027CA  EFEF  F013         	goto	l8031
 12657  0027CE                     l8029:
 12658                           
 12659                           ; BSR set to: 0
 12660  0027CE  0E00               	movlw	0
 12661  0027D0  6E2A               	movwf	___flmul@b^0,c
 12662  0027D2  0E00               	movlw	0
 12663  0027D4  6E2B               	movwf	(___flmul@b+1)^0,c
 12664  0027D6  0E00               	movlw	0
 12665  0027D8  6E2C               	movwf	(___flmul@b+2)^0,c
 12666  0027DA  0E00               	movlw	0
 12667  0027DC  6E2D               	movwf	(___flmul@b+3)^0,c
 12668  0027DE                     l8031:
 12669                           
 12670                           ; BSR set to: 0
 12671  0027DE  5031               	movf	(___flmul@a+3)^0,w,c
 12672  0027E0  0B80               	andlw	128
 12673  0027E2  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12674  0027E4                     
 12675                           ; BSR set to: 0
 12676  0027E4  5031               	movf	(___flmul@a+3)^0,w,c
 12677  0027E6  2431               	addwf	(___flmul@a+3)^0,w,c
 12678  0027E8  6F61               	movwf	___flmul@aexp& (0+255),b
 12679  0027EA                     
 12680                           ; BSR set to: 0
 12681  0027EA  AE30               	btfss	(___flmul@a+2)^0,7,c
 12682  0027EC  EFFA  F013         	goto	u8221
 12683  0027F0  EFFC  F013         	goto	u8220
 12684  0027F4                     u8221:
 12685  0027F4  EFFD  F013         	goto	l8039
 12686  0027F8                     u8220:
 12687  0027F8                     
 12688                           ; BSR set to: 0
 12689  0027F8  8161               	bsf	___flmul@aexp& (0+255),0,b
 12690  0027FA                     l8039:
 12691                           
 12692                           ; BSR set to: 0
 12693  0027FA  5161               	movf	___flmul@aexp& (0+255),w,b
 12694  0027FC  B4D8               	btfsc	status,2,c
 12695  0027FE  EF03  F014         	goto	u8231
 12696  002802  EF05  F014         	goto	u8230
 12697  002806                     u8231:
 12698  002806  EF18  F014         	goto	l8047
 12699  00280A                     u8230:
 12700  00280A                     
 12701                           ; BSR set to: 0
 12702  00280A  2961               	incf	___flmul@aexp& (0+255),w,b
 12703  00280C  A4D8               	btfss	status,2,c
 12704  00280E  EF0B  F014         	goto	u8241
 12705  002812  EF0D  F014         	goto	u8240
 12706  002816                     u8241:
 12707  002816  EF15  F014         	goto	l8045
 12708  00281A                     u8240:
 12709  00281A                     
 12710                           ; BSR set to: 0
 12711  00281A  0E00               	movlw	0
 12712  00281C  6E2E               	movwf	___flmul@a^0,c
 12713  00281E  0E00               	movlw	0
 12714  002820  6E2F               	movwf	(___flmul@a+1)^0,c
 12715  002822  0E00               	movlw	0
 12716  002824  6E30               	movwf	(___flmul@a+2)^0,c
 12717  002826  0E00               	movlw	0
 12718  002828  6E31               	movwf	(___flmul@a+3)^0,c
 12719  00282A                     l8045:
 12720                           
 12721                           ; BSR set to: 0
 12722  00282A  8E30               	bsf	(___flmul@a+2)^0,7,c
 12723  00282C  EF20  F014         	goto	l2031
 12724  002830                     l8047:
 12725                           
 12726                           ; BSR set to: 0
 12727  002830  0E00               	movlw	0
 12728  002832  6E2E               	movwf	___flmul@a^0,c
 12729  002834  0E00               	movlw	0
 12730  002836  6E2F               	movwf	(___flmul@a+1)^0,c
 12731  002838  0E00               	movlw	0
 12732  00283A  6E30               	movwf	(___flmul@a+2)^0,c
 12733  00283C  0E00               	movlw	0
 12734  00283E  6E31               	movwf	(___flmul@a+3)^0,c
 12735  002840                     l2031:
 12736                           
 12737                           ; BSR set to: 0
 12738  002840  5161               	movf	___flmul@aexp& (0+255),w,b
 12739  002842  B4D8               	btfsc	status,2,c
 12740  002844  EF26  F014         	goto	u8251
 12741  002848  EF28  F014         	goto	u8250
 12742  00284C                     u8251:
 12743  00284C  EF30  F014         	goto	l8051
 12744  002850                     u8250:
 12745  002850                     
 12746                           ; BSR set to: 0
 12747  002850  5166               	movf	___flmul@bexp& (0+255),w,b
 12748  002852  A4D8               	btfss	status,2,c
 12749  002854  EF2E  F014         	goto	u8261
 12750  002858  EF30  F014         	goto	u8260
 12751  00285C                     u8261:
 12752  00285C  EF3A  F014         	goto	l8055
 12753  002860                     u8260:
 12754  002860                     l8051:
 12755                           
 12756                           ; BSR set to: 0
 12757  002860  0E00               	movlw	0
 12758  002862  6E2A               	movwf	?___flmul^0,c
 12759  002864  0E00               	movlw	0
 12760  002866  6E2B               	movwf	(?___flmul+1)^0,c
 12761  002868  0E00               	movlw	0
 12762  00286A  6E2C               	movwf	(?___flmul+2)^0,c
 12763  00286C  0E00               	movlw	0
 12764  00286E  6E2D               	movwf	(?___flmul+3)^0,c
 12765  002870  EFE4  F015         	goto	l2035
 12766  002874                     l8055:
 12767                           
 12768                           ; BSR set to: 0
 12769  002874  5030               	movf	(___flmul@a+2)^0,w,c
 12770  002876  022A               	mulwf	___flmul@b^0,c
 12771  002878  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12772  00287E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12773  002884                     
 12774                           ; BSR set to: 0
 12775  002884  516B               	movf	___flmul@temp& (0+255),w,b
 12776  002886  6F62               	movwf	___flmul@grs& (0+255),b
 12777  002888  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12778  00288A  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12779  00288C  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12780  00288E                     
 12781                           ; BSR set to: 0
 12782  00288E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12783  002890  6F67               	movwf	___flmul@prod& (0+255),b
 12784  002892  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12785  002894  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12786  002896  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12787  002898  502F               	movf	(___flmul@a+1)^0,w,c
 12788  00289A  022B               	mulwf	(___flmul@b+1)^0,c
 12789  00289C  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12790  0028A2  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12791  0028A8                     
 12792                           ; BSR set to: 0
 12793  0028A8  516B               	movf	___flmul@temp& (0+255),w,b
 12794  0028AA  2762               	addwf	___flmul@grs& (0+255),f,b
 12795  0028AC  0E00               	movlw	0
 12796  0028AE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12797  0028B0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12798  0028B2  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12799  0028B4                     
 12800                           ; BSR set to: 0
 12801  0028B4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12802  0028B6  2767               	addwf	___flmul@prod& (0+255),f,b
 12803  0028B8  0E00               	movlw	0
 12804  0028BA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12805  0028BC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12806  0028BE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12807  0028C0  502E               	movf	___flmul@a^0,w,c
 12808  0028C2  022C               	mulwf	(___flmul@b+2)^0,c
 12809  0028C4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12810  0028CA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12811  0028D0                     
 12812                           ; BSR set to: 0
 12813  0028D0  516B               	movf	___flmul@temp& (0+255),w,b
 12814  0028D2  2762               	addwf	___flmul@grs& (0+255),f,b
 12815  0028D4  0E00               	movlw	0
 12816  0028D6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12817  0028D8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12818  0028DA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12819  0028DC                     
 12820                           ; BSR set to: 0
 12821  0028DC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12822  0028DE  2767               	addwf	___flmul@prod& (0+255),f,b
 12823  0028E0  0E00               	movlw	0
 12824  0028E2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12825  0028E4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12826  0028E6  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12827  0028E8                     
 12828                           ; BSR set to: 0
 12829  0028E8  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12830  0028EC  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12831  0028F0  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12832  0028F4  6B62               	clrf	___flmul@grs& (0+255),b
 12833  0028F6                     
 12834                           ; BSR set to: 0
 12835  0028F6  502E               	movf	___flmul@a^0,w,c
 12836  0028F8  022B               	mulwf	(___flmul@b+1)^0,c
 12837  0028FA  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12838  002900  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12839  002906                     
 12840                           ; BSR set to: 0
 12841  002906  516B               	movf	___flmul@temp& (0+255),w,b
 12842  002908  2762               	addwf	___flmul@grs& (0+255),f,b
 12843  00290A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12844  00290C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12845  00290E  0E00               	movlw	0
 12846  002910  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12847  002912  0E00               	movlw	0
 12848  002914  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12849  002916                     
 12850                           ; BSR set to: 0
 12851  002916  502F               	movf	(___flmul@a+1)^0,w,c
 12852  002918  022A               	mulwf	___flmul@b^0,c
 12853  00291A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12854  002920  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12855  002926                     
 12856                           ; BSR set to: 0
 12857  002926  516B               	movf	___flmul@temp& (0+255),w,b
 12858  002928  2762               	addwf	___flmul@grs& (0+255),f,b
 12859  00292A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12860  00292C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12861  00292E  0E00               	movlw	0
 12862  002930  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12863  002932  0E00               	movlw	0
 12864  002934  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12865  002936                     
 12866                           ; BSR set to: 0
 12867  002936  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12868  00293A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12869  00293E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12870  002942  6B62               	clrf	___flmul@grs& (0+255),b
 12871  002944  502E               	movf	___flmul@a^0,w,c
 12872  002946  022A               	mulwf	___flmul@b^0,c
 12873  002948  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12874  00294E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12875  002954                     
 12876                           ; BSR set to: 0
 12877  002954  516B               	movf	___flmul@temp& (0+255),w,b
 12878  002956  2762               	addwf	___flmul@grs& (0+255),f,b
 12879  002958  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12880  00295A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12881  00295C  0E00               	movlw	0
 12882  00295E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12883  002960  0E00               	movlw	0
 12884  002962  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12885  002964                     
 12886                           ; BSR set to: 0
 12887  002964  5030               	movf	(___flmul@a+2)^0,w,c
 12888  002966  022B               	mulwf	(___flmul@b+1)^0,c
 12889  002968  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12890  00296E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12891  002974  516B               	movf	___flmul@temp& (0+255),w,b
 12892  002976  2767               	addwf	___flmul@prod& (0+255),f,b
 12893  002978  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12894  00297A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12895  00297C  0E00               	movlw	0
 12896  00297E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12897  002980  0E00               	movlw	0
 12898  002982  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12899  002984                     
 12900                           ; BSR set to: 0
 12901  002984  502F               	movf	(___flmul@a+1)^0,w,c
 12902  002986  022C               	mulwf	(___flmul@b+2)^0,c
 12903  002988  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12904  00298E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12905  002994                     
 12906                           ; BSR set to: 0
 12907  002994  516B               	movf	___flmul@temp& (0+255),w,b
 12908  002996  2767               	addwf	___flmul@prod& (0+255),f,b
 12909  002998  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12910  00299A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12911  00299C  0E00               	movlw	0
 12912  00299E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12913  0029A0  0E00               	movlw	0
 12914  0029A2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12915  0029A4  5030               	movf	(___flmul@a+2)^0,w,c
 12916  0029A6  022C               	mulwf	(___flmul@b+2)^0,c
 12917  0029A8  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12918  0029AE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12919  0029B4                     
 12920                           ; BSR set to: 0
 12921  0029B4  516B               	movf	___flmul@temp& (0+255),w,b
 12922  0029B6  6E32               	movwf	??___flmul^0,c
 12923  0029B8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12924  0029BA  6E33               	movwf	(??___flmul+1)^0,c
 12925  0029BC  6A34               	clrf	(??___flmul+2)^0,c
 12926  0029BE  6A35               	clrf	(??___flmul+3)^0,c
 12927  0029C0  C034  F035         	movff	??___flmul+2,??___flmul+3
 12928  0029C4  C033  F034         	movff	??___flmul+1,??___flmul+2
 12929  0029C8  C032  F033         	movff	??___flmul,??___flmul+1
 12930  0029CC  6A32               	clrf	??___flmul^0,c
 12931  0029CE  5032               	movf	??___flmul^0,w,c
 12932  0029D0  2767               	addwf	___flmul@prod& (0+255),f,b
 12933  0029D2  5033               	movf	(??___flmul+1)^0,w,c
 12934  0029D4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12935  0029D6  5034               	movf	(??___flmul+2)^0,w,c
 12936  0029D8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12937  0029DA  5035               	movf	(??___flmul+3)^0,w,c
 12938  0029DC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12939  0029DE                     
 12940                           ; BSR set to: 0
 12941  0029DE  C062  F032         	movff	___flmul@grs,??___flmul
 12942  0029E2  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12943  0029E6  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12944  0029EA  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12945  0029EE  0E19               	movlw	25
 12946  0029F0  EFFF  F014         	goto	u8270
 12947  0029F4                     u8275:
 12948  0029F4  90D8               	bcf	status,0,c
 12949  0029F6  3235               	rrcf	(??___flmul+3)^0,f,c
 12950  0029F8  3234               	rrcf	(??___flmul+2)^0,f,c
 12951  0029FA  3233               	rrcf	(??___flmul+1)^0,f,c
 12952  0029FC  3232               	rrcf	??___flmul^0,f,c
 12953  0029FE                     u8270:
 12954  0029FE  2EE8               	decfsz	wreg,f,c
 12955  002A00  EFFA  F014         	goto	u8275
 12956  002A04  5032               	movf	??___flmul^0,w,c
 12957  002A06  2767               	addwf	___flmul@prod& (0+255),f,b
 12958  002A08  5033               	movf	(??___flmul+1)^0,w,c
 12959  002A0A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12960  002A0C  5034               	movf	(??___flmul+2)^0,w,c
 12961  002A0E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12962  002A10  5035               	movf	(??___flmul+3)^0,w,c
 12963  002A12  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12964  002A14                     
 12965                           ; BSR set to: 0
 12966  002A14  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12967  002A18  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12968  002A1C  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12969  002A20  6B62               	clrf	___flmul@grs& (0+255),b
 12970  002A22                     
 12971                           ; BSR set to: 0
 12972  002A22  5161               	movf	___flmul@aexp& (0+255),w,b
 12973  002A24  C066  F032         	movff	___flmul@bexp,??___flmul
 12974  002A28  6A33               	clrf	(??___flmul+1)^0,c
 12975  002A2A  2632               	addwf	??___flmul^0,f,c
 12976  002A2C  0E00               	movlw	0
 12977  002A2E  2233               	addwfc	(??___flmul+1)^0,f,c
 12978  002A30  0E82               	movlw	130
 12979  002A32  2432               	addwf	??___flmul^0,w,c
 12980  002A34  6F6B               	movwf	___flmul@temp& (0+255),b
 12981  002A36  0EFF               	movlw	255
 12982  002A38  2033               	addwfc	(??___flmul+1)^0,w,c
 12983  002A3A  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12984  002A3C  EF35  F015         	goto	l8103
 12985  002A40                     l8097:
 12986                           
 12987                           ; BSR set to: 0
 12988  002A40  90D8               	bcf	status,0,c
 12989  002A42  3767               	rlcf	___flmul@prod& (0+255),f,b
 12990  002A44  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12991  002A46  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12992  002A48  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12993  002A4A                     
 12994                           ; BSR set to: 0
 12995  002A4A  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12996  002A4C  EF2A  F015         	goto	u8281
 12997  002A50  EF2C  F015         	goto	u8280
 12998  002A54                     u8281:
 12999  002A54  EF2D  F015         	goto	l2038
 13000  002A58                     u8280:
 13001  002A58                     
 13002                           ; BSR set to: 0
 13003  002A58  8167               	bsf	___flmul@prod& (0+255),0,b
 13004  002A5A                     l2038:
 13005                           
 13006                           ; BSR set to: 0
 13007  002A5A  90D8               	bcf	status,0,c
 13008  002A5C  3762               	rlcf	___flmul@grs& (0+255),f,b
 13009  002A5E  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 13010  002A60  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 13011  002A62  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 13012  002A64  076B               	decf	___flmul@temp& (0+255),f,b
 13013  002A66  A0D8               	btfss	status,0,c
 13014  002A68  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 13015  002A6A                     l8103:
 13016                           
 13017                           ; BSR set to: 0
 13018  002A6A  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 13019  002A6C  EF3A  F015         	goto	u8291
 13020  002A70  EF3C  F015         	goto	u8290
 13021  002A74                     u8291:
 13022  002A74  EF20  F015         	goto	l8097
 13023  002A78                     u8290:
 13024  002A78                     
 13025                           ; BSR set to: 0
 13026  002A78  0E00               	movlw	0
 13027  002A7A  6F61               	movwf	___flmul@aexp& (0+255),b
 13028  002A7C                     
 13029                           ; BSR set to: 0
 13030  002A7C  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 13031  002A7E  EF43  F015         	goto	u8301
 13032  002A82  EF45  F015         	goto	u8300
 13033  002A86                     u8301:
 13034  002A86  EF69  F015         	goto	l2040
 13035  002A8A                     u8300:
 13036  002A8A                     
 13037                           ; BSR set to: 0
 13038  002A8A  0EFF               	movlw	255
 13039  002A8C  1562               	andwf	___flmul@grs& (0+255),w,b
 13040  002A8E  6E32               	movwf	??___flmul^0,c
 13041  002A90  0EFF               	movlw	255
 13042  002A92  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 13043  002A94  6E33               	movwf	(??___flmul+1)^0,c
 13044  002A96  0EFF               	movlw	255
 13045  002A98  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 13046  002A9A  6E34               	movwf	(??___flmul+2)^0,c
 13047  002A9C  0E7F               	movlw	127
 13048  002A9E  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 13049  002AA0  6E35               	movwf	(??___flmul+3)^0,c
 13050  002AA2  5032               	movf	??___flmul^0,w,c
 13051  002AA4  1033               	iorwf	(??___flmul+1)^0,w,c
 13052  002AA6  1034               	iorwf	(??___flmul+2)^0,w,c
 13053  002AA8  1035               	iorwf	(??___flmul+3)^0,w,c
 13054  002AAA  B4D8               	btfsc	status,2,c
 13055  002AAC  EF5A  F015         	goto	u8311
 13056  002AB0  EF5C  F015         	goto	u8310
 13057  002AB4                     u8311:
 13058  002AB4  EF60  F015         	goto	l2041
 13059  002AB8                     u8310:
 13060  002AB8                     l8111:
 13061                           
 13062                           ; BSR set to: 0
 13063  002AB8  0E01               	movlw	1
 13064  002ABA  6F61               	movwf	___flmul@aexp& (0+255),b
 13065  002ABC  EF69  F015         	goto	l2040
 13066  002AC0                     l2041:
 13067                           
 13068                           ; BSR set to: 0
 13069  002AC0  A167               	btfss	___flmul@prod& (0+255),0,b
 13070  002AC2  EF65  F015         	goto	u8321
 13071  002AC6  EF67  F015         	goto	u8320
 13072  002ACA                     u8321:
 13073  002ACA  EF69  F015         	goto	l2040
 13074  002ACE                     u8320:
 13075  002ACE  EF5C  F015         	goto	l8111
 13076  002AD2                     l2040:
 13077                           
 13078                           ; BSR set to: 0
 13079  002AD2  5161               	movf	___flmul@aexp& (0+255),w,b
 13080  002AD4  B4D8               	btfsc	status,2,c
 13081  002AD6  EF6F  F015         	goto	u8331
 13082  002ADA  EF71  F015         	goto	u8330
 13083  002ADE                     u8331:
 13084  002ADE  EF95  F015         	goto	l8123
 13085  002AE2                     u8330:
 13086  002AE2                     
 13087                           ; BSR set to: 0
 13088  002AE2  0E01               	movlw	1
 13089  002AE4  2767               	addwf	___flmul@prod& (0+255),f,b
 13090  002AE6  0E00               	movlw	0
 13091  002AE8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 13092  002AEA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 13093  002AEC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 13094  002AEE                     
 13095                           ; BSR set to: 0
 13096  002AEE  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 13097  002AF0  EF7C  F015         	goto	u8341
 13098  002AF4  EF7E  F015         	goto	u8340
 13099  002AF8                     u8341:
 13100  002AF8  EF95  F015         	goto	l8123
 13101  002AFC                     u8340:
 13102  002AFC                     
 13103                           ; BSR set to: 0
 13104  002AFC  C067  F032         	movff	___flmul@prod,??___flmul
 13105  002B00  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 13106  002B04  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 13107  002B08  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 13108  002B0C  3435               	rlcf	(??___flmul+3)^0,w,c
 13109  002B0E  3235               	rrcf	(??___flmul+3)^0,f,c
 13110  002B10  3234               	rrcf	(??___flmul+2)^0,f,c
 13111  002B12  3233               	rrcf	(??___flmul+1)^0,f,c
 13112  002B14  3232               	rrcf	??___flmul^0,f,c
 13113  002B16  C032  F067         	movff	??___flmul,___flmul@prod
 13114  002B1A  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 13115  002B1E  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 13116  002B22  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 13117  002B26                     
 13118                           ; BSR set to: 0
 13119  002B26  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 13120  002B28  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 13121  002B2A                     l8123:
 13122                           
 13123                           ; BSR set to: 0
 13124  002B2A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13125  002B2C  EFA0  F015         	goto	u8351
 13126  002B30  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13127  002B32  E108               	bnz	u8350
 13128  002B34  296B               	incf	___flmul@temp& (0+255),w,b
 13129  002B36  A0D8               	btfss	status,0,c
 13130  002B38  EFA0  F015         	goto	u8351
 13131  002B3C  EFA2  F015         	goto	u8350
 13132  002B40                     u8351:
 13133  002B40  EFAC  F015         	goto	l8127
 13134  002B44                     u8350:
 13135  002B44                     
 13136                           ; BSR set to: 0
 13137  002B44  0E00               	movlw	0
 13138  002B46  6F67               	movwf	___flmul@prod& (0+255),b
 13139  002B48  0E00               	movlw	0
 13140  002B4A  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13141  002B4C  0E80               	movlw	128
 13142  002B4E  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13143  002B50  0E7F               	movlw	127
 13144  002B52  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13145  002B54  EFDA  F015         	goto	l8139
 13146  002B58                     l8127:
 13147                           
 13148                           ; BSR set to: 0
 13149  002B58  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 13150  002B5A  EFB9  F015         	goto	u8360
 13151  002B5E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 13152  002B60  E106               	bnz	u8361
 13153  002B62  056B               	decf	___flmul@temp& (0+255),w,b
 13154  002B64  B0D8               	btfsc	status,0,c
 13155  002B66  EFB7  F015         	goto	u8361
 13156  002B6A  EFB9  F015         	goto	u8360
 13157  002B6E                     u8361:
 13158  002B6E  EFC5  F015         	goto	l2048
 13159  002B72                     u8360:
 13160  002B72                     
 13161                           ; BSR set to: 0
 13162  002B72  0E00               	movlw	0
 13163  002B74  6F67               	movwf	___flmul@prod& (0+255),b
 13164  002B76  0E00               	movlw	0
 13165  002B78  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 13166  002B7A  0E00               	movlw	0
 13167  002B7C  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 13168  002B7E  0E00               	movlw	0
 13169  002B80  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13170  002B82  0E00               	movlw	0
 13171  002B84  6F60               	movwf	___flmul@sign& (0+255),b
 13172  002B86  EFDA  F015         	goto	l8139
 13173  002B8A                     l2048:
 13174                           
 13175                           ; BSR set to: 0
 13176  002B8A  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 13177  002B8E                     
 13178                           ; BSR set to: 0
 13179  002B8E  0EFF               	movlw	255
 13180  002B90  1767               	andwf	___flmul@prod& (0+255),f,b
 13181  002B92  0EFF               	movlw	255
 13182  002B94  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 13183  002B96  0E7F               	movlw	127
 13184  002B98  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 13185  002B9A  0E00               	movlw	0
 13186  002B9C  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 13187  002B9E                     
 13188                           ; BSR set to: 0
 13189  002B9E  A166               	btfss	___flmul@bexp& (0+255),0,b
 13190  002BA0  EFD4  F015         	goto	u8371
 13191  002BA4  EFD6  F015         	goto	u8370
 13192  002BA8                     u8371:
 13193  002BA8  EFD7  F015         	goto	l8137
 13194  002BAC                     u8370:
 13195  002BAC                     
 13196                           ; BSR set to: 0
 13197  002BAC  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 13198  002BAE                     l8137:
 13199                           
 13200                           ; BSR set to: 0
 13201  002BAE  90D8               	bcf	status,0,c
 13202  002BB0  3166               	rrcf	___flmul@bexp& (0+255),w,b
 13203  002BB2  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 13204  002BB4                     l8139:
 13205                           
 13206                           ; BSR set to: 0
 13207  002BB4  5160               	movf	___flmul@sign& (0+255),w,b
 13208  002BB6  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 13209  002BB8                     
 13210                           ; BSR set to: 0
 13211  002BB8  C067  F02A         	movff	___flmul@prod,?___flmul
 13212  002BBC  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 13213  002BC0  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 13214  002BC4  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 13215  002BC8                     l2035:
 13216                           
 13217                           ; BSR set to: 0
 13218  002BC8  0012               	return		;funcret
 13219  002BCA                     __end_of___flmul:
 13220                           	callstack 0
 13221                           
 13222 ;; *************** function ___awdiv *****************
 13223 ;; Defined at:
 13224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;  dividend        2   19[COMRAM] int 
 13227 ;;  divisor         2   21[COMRAM] int 
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;  quotient        2   25[COMRAM] int 
 13230 ;;  sign            1   24[COMRAM] unsigned char 
 13231 ;;  counter         1   23[COMRAM] unsigned char 
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  2   19[COMRAM] int 
 13234 ;; Registers used:
 13235 ;;		wreg, status,2, status,0
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13242 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13244 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;Total ram usage:        8 bytes
 13246 ;; Hardware stack levels used: 1
 13247 ;; Hardware stack levels required when called: 8
 13248 ;; This function calls:
 13249 ;;		Nothing
 13250 ;; This function is called by:
 13251 ;;		_calcSteering
 13252 ;;		_calcMotorPow
 13253 ;;		_efgtoa
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           	psect	text48
 13258  004D86                     __ptext48:
 13259                           	callstack 0
 13260  004D86                     ___awdiv:
 13261                           	callstack 16
 13262  004D86  0E00               	movlw	0
 13263  004D88  6E19               	movwf	___awdiv@sign^0,c
 13264  004D8A  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 13265  004D8C  EFCC  F026         	goto	u8380
 13266  004D90  EFCA  F026         	goto	u8381
 13267  004D94                     u8381:
 13268  004D94  EFD2  F026         	goto	l8159
 13269  004D98                     u8380:
 13270  004D98  6C16               	negf	___awdiv@divisor^0,c
 13271  004D9A  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 13272  004D9C  B0D8               	btfsc	status,0,c
 13273  004D9E  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 13274  004DA0  0E01               	movlw	1
 13275  004DA2  6E19               	movwf	___awdiv@sign^0,c
 13276  004DA4                     l8159:
 13277  004DA4  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 13278  004DA6  EFD9  F026         	goto	u8390
 13279  004DAA  EFD7  F026         	goto	u8391
 13280  004DAE                     u8391:
 13281  004DAE  EFDF  F026         	goto	l8165
 13282  004DB2                     u8390:
 13283  004DB2  6C14               	negf	___awdiv@dividend^0,c
 13284  004DB4  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 13285  004DB6  B0D8               	btfsc	status,0,c
 13286  004DB8  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 13287  004DBA  0E01               	movlw	1
 13288  004DBC  1A19               	xorwf	___awdiv@sign^0,f,c
 13289  004DBE                     l8165:
 13290  004DBE  0E00               	movlw	0
 13291  004DC0  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 13292  004DC2  0E00               	movlw	0
 13293  004DC4  6E1A               	movwf	___awdiv@quotient^0,c
 13294  004DC6  5016               	movf	___awdiv@divisor^0,w,c
 13295  004DC8  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 13296  004DCA  B4D8               	btfsc	status,2,c
 13297  004DCC  EFEA  F026         	goto	u8401
 13298  004DD0  EFEC  F026         	goto	u8400
 13299  004DD4                     u8401:
 13300  004DD4  EF14  F027         	goto	l8187
 13301  004DD8                     u8400:
 13302  004DD8  0E01               	movlw	1
 13303  004DDA  6E18               	movwf	___awdiv@counter^0,c
 13304  004DDC  EFF4  F026         	goto	l8173
 13305  004DE0                     l8171:
 13306  004DE0  90D8               	bcf	status,0,c
 13307  004DE2  3616               	rlcf	___awdiv@divisor^0,f,c
 13308  004DE4  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 13309  004DE6  2A18               	incf	___awdiv@counter^0,f,c
 13310  004DE8                     l8173:
 13311  004DE8  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 13312  004DEA  EFF9  F026         	goto	u8411
 13313  004DEE  EFFB  F026         	goto	u8410
 13314  004DF2                     u8411:
 13315  004DF2  EFF0  F026         	goto	l8171
 13316  004DF6                     u8410:
 13317  004DF6                     l8175:
 13318  004DF6  90D8               	bcf	status,0,c
 13319  004DF8  361A               	rlcf	___awdiv@quotient^0,f,c
 13320  004DFA  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 13321  004DFC  5016               	movf	___awdiv@divisor^0,w,c
 13322  004DFE  5C14               	subwf	___awdiv@dividend^0,w,c
 13323  004E00  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13324  004E02  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 13325  004E04  A0D8               	btfss	status,0,c
 13326  004E06  EF07  F027         	goto	u8421
 13327  004E0A  EF09  F027         	goto	u8420
 13328  004E0E                     u8421:
 13329  004E0E  EF0E  F027         	goto	l8183
 13330  004E12                     u8420:
 13331  004E12  5016               	movf	___awdiv@divisor^0,w,c
 13332  004E14  5E14               	subwf	___awdiv@dividend^0,f,c
 13333  004E16  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13334  004E18  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13335  004E1A  801A               	bsf	___awdiv@quotient^0,0,c
 13336  004E1C                     l8183:
 13337  004E1C  90D8               	bcf	status,0,c
 13338  004E1E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13339  004E20  3216               	rrcf	___awdiv@divisor^0,f,c
 13340  004E22  2E18               	decfsz	___awdiv@counter^0,f,c
 13341  004E24  EFFB  F026         	goto	l8175
 13342  004E28                     l8187:
 13343  004E28  5019               	movf	___awdiv@sign^0,w,c
 13344  004E2A  B4D8               	btfsc	status,2,c
 13345  004E2C  EF1A  F027         	goto	u8431
 13346  004E30  EF1C  F027         	goto	u8430
 13347  004E34                     u8431:
 13348  004E34  EF20  F027         	goto	l8191
 13349  004E38                     u8430:
 13350  004E38  6C1A               	negf	___awdiv@quotient^0,c
 13351  004E3A  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13352  004E3C  B0D8               	btfsc	status,0,c
 13353  004E3E  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13354  004E40                     l8191:
 13355  004E40  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13356  004E44  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13357  004E48  0012               	return		;funcret
 13358  004E4A                     __end_of___awdiv:
 13359                           	callstack 0
 13360                           
 13361 ;; *************** function _SYSTEM_Initialize *****************
 13362 ;; Defined at:
 13363 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13364 ;; Parameters:    Size  Location     Type
 13365 ;;		None
 13366 ;; Auto vars:     Size  Location     Type
 13367 ;;		None
 13368 ;; Return value:  Size  Location     Type
 13369 ;;                  1    wreg      void 
 13370 ;; Registers used:
 13371 ;;		wreg, status,2, status,0, cstack
 13372 ;; Tracked objects:
 13373 ;;		On entry : 0/0
 13374 ;;		On exit  : 0/0
 13375 ;;		Unchanged: 0/0
 13376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13381 ;;Total ram usage:        0 bytes
 13382 ;; Hardware stack levels used: 1
 13383 ;; Hardware stack levels required when called: 10
 13384 ;; This function calls:
 13385 ;;		_ADCC_Initialize
 13386 ;;		_CCP3_Initialize
 13387 ;;		_CCP4_Initialize
 13388 ;;		_CLC3_Initialize
 13389 ;;		_INTERRUPT_Initialize
 13390 ;;		_OSCILLATOR_Initialize
 13391 ;;		_PIN_MANAGER_Initialize
 13392 ;;		_PMD_Initialize
 13393 ;;		_PWM5_Initialize
 13394 ;;		_PWM6_Initialize
 13395 ;;		_PWM7_Initialize
 13396 ;;		_PWM8_Initialize
 13397 ;;		_SMT1_Initialize
 13398 ;;		_TMR2_Initialize
 13399 ;;		_TMR3_Initialize
 13400 ;;		_TMR4_Initialize
 13401 ;;		_TMR5_Initialize
 13402 ;;		_UART1_Initialize
 13403 ;; This function is called by:
 13404 ;;		_main
 13405 ;; This function uses a non-reentrant model
 13406 ;;
 13407                           
 13408                           	psect	text49
 13409  00568C                     __ptext49:
 13410                           	callstack 0
 13411  00568C                     _SYSTEM_Initialize:
 13412                           	callstack 20
 13413  00568C                     
 13414                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13415  00568C  EC20  F02B         	call	_INTERRUPT_Initialize	;wreg free
 13416                           
 13417                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13418  005690  EC04  F02F         	call	_PMD_Initialize	;wreg free
 13419                           
 13420                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13421  005694  EC5E  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 13422                           
 13423                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13424  005698  EC85  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 13425  00569C                     
 13426                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13427  00569C  EC56  F02E         	call	_CCP3_Initialize	;wreg free
 13428  0056A0                     
 13429                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13430  0056A0  ECC8  F02A         	call	_ADCC_Initialize	;wreg free
 13431                           
 13432                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13433  0056A4  EC84  F02E         	call	_TMR4_Initialize	;wreg free
 13434  0056A8                     
 13435                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13436  0056A8  EC27  F02E         	call	_SMT1_Initialize	;wreg free
 13437  0056AC                     
 13438                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13439  0056AC  EC55  F02F         	call	_PWM8_Initialize	;wreg free
 13440  0056B0                     
 13441                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13442  0056B0  EC47  F02F         	call	_TMR2_Initialize	;wreg free
 13443  0056B4                     
 13444                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13445  0056B4  EC6D  F02F         	call	_PWM6_Initialize	;wreg free
 13446                           
 13447                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13448  0056B8  EC3F  F02E         	call	_CCP4_Initialize	;wreg free
 13449  0056BC                     
 13450                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13451  0056BC  EC9A  F02E         	call	_CLC3_Initialize	;wreg free
 13452  0056C0                     
 13453                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13454  0056C0  ECCD  F02C         	call	_TMR3_Initialize	;wreg free
 13455                           
 13456                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13457  0056C4  EC79  F02F         	call	_PWM5_Initialize	;wreg free
 13458  0056C8                     
 13459                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13460  0056C8  EC6B  F02B         	call	_TMR5_Initialize	;wreg free
 13461  0056CC                     
 13462                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13463  0056CC  EC61  F02F         	call	_PWM7_Initialize	;wreg free
 13464                           
 13465                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13466  0056D0  EC93  F028         	call	_UART1_Initialize	;wreg free
 13467  0056D4  0012               	return		;funcret
 13468  0056D6                     __end_of_SYSTEM_Initialize:
 13469                           	callstack 0
 13470                           
 13471 ;; *************** function _UART1_Initialize *****************
 13472 ;; Defined at:
 13473 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13474 ;; Parameters:    Size  Location     Type
 13475 ;;		None
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;		None
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      void 
 13480 ;; Registers used:
 13481 ;;		wreg, status,2, status,0, cstack
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13491 ;;Total ram usage:        0 bytes
 13492 ;; Hardware stack levels used: 1
 13493 ;; Hardware stack levels required when called: 9
 13494 ;; This function calls:
 13495 ;;		_UART1_SetErrorHandler
 13496 ;;		_UART1_SetFramingErrorHandler
 13497 ;;		_UART1_SetOverrunErrorHandler
 13498 ;;		_UART1_SetRxInterruptHandler
 13499 ;;		_UART1_SetTxInterruptHandler
 13500 ;; This function is called by:
 13501 ;;		_SYSTEM_Initialize
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           	psect	text50
 13506  005126                     __ptext50:
 13507                           	callstack 0
 13508  005126                     _UART1_Initialize:
 13509                           	callstack 20
 13510  005126                     
 13511                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13512  005126  0139               	movlb	57	; () banked
 13513  005128  9793               	bcf	147,3,b	;volatile
 13514  00512A                     
 13515                           ; BSR set to: 57
 13516                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13517  00512A  0E0C               	movlw	low _UART1_Receive_ISR
 13518  00512C  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13519  00512E  0E4F               	movlw	high _UART1_Receive_ISR
 13520  005130  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13521  005132  ECA2  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13522  005136                     
 13523                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13524  005136  0139               	movlb	57	; () banked
 13525  005138  9993               	bcf	147,4,b	;volatile
 13526                           
 13527                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13528  00513A  0EF6               	movlw	low _UART1_Transmit_ISR
 13529  00513C  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13530  00513E  0E57               	movlw	high _UART1_Transmit_ISR
 13531  005140  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13532  005142  EC9D  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13533  005146                     
 13534                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13535  005146  0E00               	movlw	0
 13536  005148  013D               	movlb	61	; () banked
 13537  00514A  6FEC               	movwf	236,b	;volatile
 13538  00514C                     
 13539                           ; BSR set to: 61
 13540                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13541  00514C  0E00               	movlw	0
 13542  00514E  6FED               	movwf	237,b	;volatile
 13543  005150                     
 13544                           ; BSR set to: 61
 13545                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13546  005150  0E00               	movlw	0
 13547  005152  6FEE               	movwf	238,b	;volatile
 13548  005154                     
 13549                           ; BSR set to: 61
 13550                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13551  005154  0E00               	movlw	0
 13552  005156  6FEF               	movwf	239,b	;volatile
 13553  005158                     
 13554                           ; BSR set to: 61
 13555                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13556  005158  0E00               	movlw	0
 13557  00515A  6FF0               	movwf	240,b	;volatile
 13558  00515C                     
 13559                           ; BSR set to: 61
 13560                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13561  00515C  0E00               	movlw	0
 13562  00515E  6FF1               	movwf	241,b	;volatile
 13563  005160                     
 13564                           ; BSR set to: 61
 13565                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13566  005160  0EB0               	movlw	176
 13567  005162  6FF2               	movwf	242,b	;volatile
 13568  005164                     
 13569                           ; BSR set to: 61
 13570                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13571  005164  0E80               	movlw	128
 13572  005166  6FF3               	movwf	243,b	;volatile
 13573  005168                     
 13574                           ; BSR set to: 61
 13575                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13576  005168  0E00               	movlw	0
 13577  00516A  6FF4               	movwf	244,b	;volatile
 13578  00516C                     
 13579                           ; BSR set to: 61
 13580                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13581  00516C  0E8A               	movlw	138
 13582  00516E  6FF5               	movwf	245,b	;volatile
 13583  005170                     
 13584                           ; BSR set to: 61
 13585                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13586  005170  0E00               	movlw	0
 13587  005172  6FF6               	movwf	246,b	;volatile
 13588  005174                     
 13589                           ; BSR set to: 61
 13590                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13591  005174  0E00               	movlw	0
 13592  005176  6FF7               	movwf	247,b	;volatile
 13593  005178                     
 13594                           ; BSR set to: 61
 13595                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13596  005178  0E00               	movlw	0
 13597  00517A  6FF8               	movwf	248,b	;volatile
 13598  00517C                     
 13599                           ; BSR set to: 61
 13600                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13601  00517C  0E00               	movlw	0
 13602  00517E  6FF9               	movwf	249,b	;volatile
 13603  005180                     
 13604                           ; BSR set to: 61
 13605                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13606  005180  0E00               	movlw	0
 13607  005182  6FFA               	movwf	250,b	;volatile
 13608  005184                     
 13609                           ; BSR set to: 61
 13610                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13611  005184  0EA6               	movlw	low _UART1_DefaultFramingErrorHandler
 13612  005186  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13613  005188  0E5F               	movlw	high _UART1_DefaultFramingErrorHandler
 13614  00518A  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13615  00518C  ECAC  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 13616  005190                     
 13617                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13618  005190  0EA4               	movlw	low _UART1_DefaultOverrunErrorHandler
 13619  005192  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13620  005194  0E5F               	movlw	high _UART1_DefaultOverrunErrorHandler
 13621  005196  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13622  005198  ECA7  F02F         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13623  00519C                     
 13624                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13625  00519C  0E9E               	movlw	low _UART1_DefaultErrorHandler
 13626  00519E  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13627  0051A0  0E5F               	movlw	high _UART1_DefaultErrorHandler
 13628  0051A2  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13629  0051A4  ECB1  F02F         	call	_UART1_SetErrorHandler	;wreg free
 13630                           
 13631                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13632  0051A8  0E00               	movlw	0
 13633  0051AA  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13634                           
 13635                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13636  0051AC  0E00               	movlw	0
 13637  0051AE  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13638                           
 13639                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13640  0051B0  0E00               	movlw	0
 13641  0051B2  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13642                           
 13643                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13644  0051B4  0E08               	movlw	8
 13645  0051B6  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13646                           
 13647                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13648  0051B8  0E00               	movlw	0
 13649  0051BA  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13650                           
 13651                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13652  0051BC  0E00               	movlw	0
 13653  0051BE  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13654                           
 13655                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13656  0051C0  0E00               	movlw	0
 13657  0051C2  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13658  0051C4                     
 13659                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13660  0051C4  0139               	movlb	57	; () banked
 13661  0051C6  8793               	bsf	147,3,b	;volatile
 13662  0051C8                     
 13663                           ; BSR set to: 57
 13664  0051C8  0012               	return		;funcret
 13665  0051CA                     __end_of_UART1_Initialize:
 13666                           	callstack 0
 13667                           
 13668 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13669 ;; Defined at:
 13670 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13673 ;;		 -> UART1_Transmit_ISR(1), 
 13674 ;; Auto vars:     Size  Location     Type
 13675 ;;		None
 13676 ;; Return value:  Size  Location     Type
 13677 ;;                  1    wreg      void 
 13678 ;; Registers used:
 13679 ;;		wreg, status,2, status,0
 13680 ;; Tracked objects:
 13681 ;;		On entry : 0/0
 13682 ;;		On exit  : 0/0
 13683 ;;		Unchanged: 0/0
 13684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13689 ;;Total ram usage:        2 bytes
 13690 ;; Hardware stack levels used: 1
 13691 ;; Hardware stack levels required when called: 8
 13692 ;; This function calls:
 13693 ;;		Nothing
 13694 ;; This function is called by:
 13695 ;;		_UART1_Initialize
 13696 ;; This function uses a non-reentrant model
 13697 ;;
 13698                           
 13699                           	psect	text51
 13700  005F3A                     __ptext51:
 13701                           	callstack 0
 13702  005F3A                     _UART1_SetTxInterruptHandler:
 13703                           	callstack 20
 13704  005F3A                     
 13705                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13706  005F3A  C014  F19C         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13707  005F3E  C015  F19D         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13708  005F42  0012               	return		;funcret
 13709  005F44                     __end_of_UART1_SetTxInterruptHandler:
 13710                           	callstack 0
 13711                           
 13712 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13713 ;; Defined at:
 13714 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13715 ;; Parameters:    Size  Location     Type
 13716 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13717 ;;		 -> UART1_Receive_ISR(1), 
 13718 ;; Auto vars:     Size  Location     Type
 13719 ;;		None
 13720 ;; Return value:  Size  Location     Type
 13721 ;;                  1    wreg      void 
 13722 ;; Registers used:
 13723 ;;		wreg, status,2, status,0
 13724 ;; Tracked objects:
 13725 ;;		On entry : 0/0
 13726 ;;		On exit  : 0/0
 13727 ;;		Unchanged: 0/0
 13728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13733 ;;Total ram usage:        2 bytes
 13734 ;; Hardware stack levels used: 1
 13735 ;; Hardware stack levels required when called: 8
 13736 ;; This function calls:
 13737 ;;		Nothing
 13738 ;; This function is called by:
 13739 ;;		_UART1_Initialize
 13740 ;; This function uses a non-reentrant model
 13741 ;;
 13742                           
 13743                           	psect	text52
 13744  005F44                     __ptext52:
 13745                           	callstack 0
 13746  005F44                     _UART1_SetRxInterruptHandler:
 13747                           	callstack 20
 13748  005F44                     
 13749                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13750  005F44  C014  F19E         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13751  005F48  C015  F19F         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13752  005F4C  0012               	return		;funcret
 13753  005F4E                     __end_of_UART1_SetRxInterruptHandler:
 13754                           	callstack 0
 13755                           
 13756 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13757 ;; Defined at:
 13758 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13759 ;; Parameters:    Size  Location     Type
 13760 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13761 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;		None
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  1    wreg      void 
 13766 ;; Registers used:
 13767 ;;		wreg, status,2, status,0
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13777 ;;Total ram usage:        2 bytes
 13778 ;; Hardware stack levels used: 1
 13779 ;; Hardware stack levels required when called: 8
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		_UART1_Initialize
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text53
 13788  005F4E                     __ptext53:
 13789                           	callstack 0
 13790  005F4E                     _UART1_SetOverrunErrorHandler:
 13791                           	callstack 20
 13792  005F4E                     
 13793                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13794  005F4E  C014  F198         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13795  005F52  C015  F199         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13796  005F56  0012               	return		;funcret
 13797  005F58                     __end_of_UART1_SetOverrunErrorHandler:
 13798                           	callstack 0
 13799                           
 13800 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13801 ;; Defined at:
 13802 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13805 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13806 ;; Auto vars:     Size  Location     Type
 13807 ;;		None
 13808 ;; Return value:  Size  Location     Type
 13809 ;;                  1    wreg      void 
 13810 ;; Registers used:
 13811 ;;		wreg, status,2, status,0
 13812 ;; Tracked objects:
 13813 ;;		On entry : 0/0
 13814 ;;		On exit  : 0/0
 13815 ;;		Unchanged: 0/0
 13816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13821 ;;Total ram usage:        2 bytes
 13822 ;; Hardware stack levels used: 1
 13823 ;; Hardware stack levels required when called: 8
 13824 ;; This function calls:
 13825 ;;		Nothing
 13826 ;; This function is called by:
 13827 ;;		_UART1_Initialize
 13828 ;; This function uses a non-reentrant model
 13829 ;;
 13830                           
 13831                           	psect	text54
 13832  005F58                     __ptext54:
 13833                           	callstack 0
 13834  005F58                     _UART1_SetFramingErrorHandler:
 13835                           	callstack 20
 13836  005F58                     
 13837                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13838  005F58  C014  F19A         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13839  005F5C  C015  F19B         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13840  005F60  0012               	return		;funcret
 13841  005F62                     __end_of_UART1_SetFramingErrorHandler:
 13842                           	callstack 0
 13843                           
 13844 ;; *************** function _UART1_SetErrorHandler *****************
 13845 ;; Defined at:
 13846 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13847 ;; Parameters:    Size  Location     Type
 13848 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13849 ;;		 -> UART1_DefaultErrorHandler(1), 
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;		None
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      void 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 0/0
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;Total ram usage:        2 bytes
 13866 ;; Hardware stack levels used: 1
 13867 ;; Hardware stack levels required when called: 8
 13868 ;; This function calls:
 13869 ;;		Nothing
 13870 ;; This function is called by:
 13871 ;;		_UART1_Initialize
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text55
 13876  005F62                     __ptext55:
 13877                           	callstack 0
 13878  005F62                     _UART1_SetErrorHandler:
 13879                           	callstack 20
 13880  005F62                     
 13881                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13882  005F62  C014  F196         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13883  005F66  C015  F197         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13884  005F6A  0012               	return		;funcret
 13885  005F6C                     __end_of_UART1_SetErrorHandler:
 13886                           	callstack 0
 13887                           
 13888 ;; *************** function _TMR5_Initialize *****************
 13889 ;; Defined at:
 13890 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;		None
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;		None
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13908 ;;Total ram usage:        2 bytes
 13909 ;; Hardware stack levels used: 1
 13910 ;; Hardware stack levels required when called: 9
 13911 ;; This function calls:
 13912 ;;		_TMR5_SetGateInterruptHandler
 13913 ;; This function is called by:
 13914 ;;		_SYSTEM_Initialize
 13915 ;; This function uses a non-reentrant model
 13916 ;;
 13917                           
 13918                           	psect	text56
 13919  0056D6                     __ptext56:
 13920                           	callstack 0
 13921  0056D6                     _TMR5_Initialize:
 13922                           	callstack 20
 13923  0056D6                     
 13924                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13925  0056D6  0EC0               	movlw	192
 13926  0056D8  6E9B               	movwf	155,c	;volatile
 13927                           
 13928                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13929  0056DA  0E00               	movlw	0
 13930  0056DC  6E9C               	movwf	156,c	;volatile
 13931                           
 13932                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13933  0056DE  0E05               	movlw	5
 13934  0056E0  6E9D               	movwf	157,c	;volatile
 13935                           
 13936                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13937  0056E2  0E00               	movlw	0
 13938  0056E4  6E99               	movwf	153,c	;volatile
 13939                           
 13940                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13941  0056E6  0E00               	movlw	0
 13942  0056E8  6E98               	movwf	152,c	;volatile
 13943  0056EA                     
 13944                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13945  0056EA  0139               	movlb	57	; () banked
 13946  0056EC  9DA8               	bcf	168,6,b	;volatile
 13947  0056EE                     
 13948                           ; BSR set to: 57
 13949                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13950  0056EE  5098               	movf	152,w,c	;volatile
 13951  0056F0  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13952  0056F6  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13953  0056F8  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13954  0056FC  6A16               	clrf	??_TMR5_Initialize^0,c
 13955  0056FE  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13956  005700  0101               	movlb	1	; () banked
 13957  005702  6F90               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13958  005704  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13959  005706  6F91               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13960  005708                     
 13961                           ; BSR set to: 1
 13962                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13963  005708  0139               	movlb	57	; () banked
 13964  00570A  9FA8               	bcf	168,7,b	;volatile
 13965  00570C                     
 13966                           ; BSR set to: 57
 13967                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13968  00570C  8F98               	bsf	152,7,b	;volatile
 13969  00570E                     
 13970                           ; BSR set to: 57
 13971                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13972  00570E  0E70               	movlw	low _TMR5_DefaultGateInterruptHandler
 13973  005710  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13974  005712  0E5E               	movlw	high _TMR5_DefaultGateInterruptHandler
 13975  005714  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13976  005716  ECB6  F02F         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13977  00571A                     
 13978                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13979  00571A  0E03               	movlw	3
 13980  00571C  6E9A               	movwf	154,c	;volatile
 13981  00571E  0012               	return		;funcret
 13982  005720                     __end_of_TMR5_Initialize:
 13983                           	callstack 0
 13984                           
 13985 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13986 ;; Defined at:
 13987 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13988 ;; Parameters:    Size  Location     Type
 13989 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13990 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13991 ;; Auto vars:     Size  Location     Type
 13992 ;;		None
 13993 ;; Return value:  Size  Location     Type
 13994 ;;                  1    wreg      void 
 13995 ;; Registers used:
 13996 ;;		wreg, status,2, status,0
 13997 ;; Tracked objects:
 13998 ;;		On entry : 0/0
 13999 ;;		On exit  : 0/0
 14000 ;;		Unchanged: 0/0
 14001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;Total ram usage:        2 bytes
 14007 ;; Hardware stack levels used: 1
 14008 ;; Hardware stack levels required when called: 8
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_TMR5_Initialize
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text57
 14017  005F6C                     __ptext57:
 14018                           	callstack 0
 14019  005F6C                     _TMR5_SetGateInterruptHandler:
 14020                           	callstack 20
 14021  005F6C                     
 14022                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 14023  005F6C  C014  F18E         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 14024  005F70  C015  F18F         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 14025  005F74  0012               	return		;funcret
 14026  005F76                     __end_of_TMR5_SetGateInterruptHandler:
 14027                           	callstack 0
 14028                           
 14029 ;; *************** function _TMR4_Initialize *****************
 14030 ;; Defined at:
 14031 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 14032 ;; Parameters:    Size  Location     Type
 14033 ;;		None
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;		None
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  1    wreg      void 
 14038 ;; Registers used:
 14039 ;;		wreg, status,2, status,0, cstack
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/0
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14049 ;;Total ram usage:        0 bytes
 14050 ;; Hardware stack levels used: 1
 14051 ;; Hardware stack levels required when called: 9
 14052 ;; This function calls:
 14053 ;;		_TMR4_SetInterruptHandler
 14054 ;; This function is called by:
 14055 ;;		_SYSTEM_Initialize
 14056 ;; This function uses a non-reentrant model
 14057 ;;
 14058                           
 14059                           	psect	text58
 14060  005D08                     __ptext58:
 14061                           	callstack 0
 14062  005D08                     _TMR4_Initialize:
 14063                           	callstack 20
 14064  005D08                     
 14065                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 14066  005D08  0E01               	movlw	1
 14067  005D0A  6EA2               	movwf	162,c	;volatile
 14068                           
 14069                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 14070  005D0C  0E00               	movlw	0
 14071  005D0E  6EA1               	movwf	161,c	;volatile
 14072                           
 14073                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 14074  005D10  0E00               	movlw	0
 14075  005D12  6EA3               	movwf	163,c	;volatile
 14076                           
 14077                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 14078  005D14  0EF9               	movlw	249
 14079  005D16  6E9F               	movwf	159,c	;volatile
 14080                           
 14081                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 14082  005D18  0E00               	movlw	0
 14083  005D1A  6E9E               	movwf	158,c	;volatile
 14084  005D1C                     
 14085                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 14086  005D1C  0139               	movlb	57	; () banked
 14087  005D1E  91A7               	bcf	167,0,b	;volatile
 14088  005D20                     
 14089                           ; BSR set to: 57
 14090                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 14091  005D20  8197               	bsf	151,0,b	;volatile
 14092  005D22                     
 14093                           ; BSR set to: 57
 14094                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 14095  005D22  0EA8               	movlw	low _TMR4_DefaultInterruptHandler
 14096  005D24  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 14097  005D26  0E5F               	movlw	high _TMR4_DefaultInterruptHandler
 14098  005D28  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 14099  005D2A  ECBB  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
 14100  005D2E                     
 14101                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 14102  005D2E  0EE0               	movlw	224
 14103  005D30  6EA0               	movwf	160,c	;volatile
 14104  005D32  0012               	return		;funcret
 14105  005D34                     __end_of_TMR4_Initialize:
 14106                           	callstack 0
 14107                           
 14108 ;; *************** function _TMR4_SetInterruptHandler *****************
 14109 ;; Defined at:
 14110 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 14111 ;; Parameters:    Size  Location     Type
 14112 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 14113 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      void 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2, status,0
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;Total ram usage:        2 bytes
 14130 ;; Hardware stack levels used: 1
 14131 ;; Hardware stack levels required when called: 8
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_TMR4_Initialize
 14136 ;;		_main
 14137 ;; This function uses a non-reentrant model
 14138 ;;
 14139                           
 14140                           	psect	text59
 14141  005F76                     __ptext59:
 14142                           	callstack 0
 14143  005F76                     _TMR4_SetInterruptHandler:
 14144                           	callstack 22
 14145  005F76                     
 14146                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 14147  005F76  C014  F18A         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 14148  005F7A  C015  F18B         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 14149  005F7E  0012               	return		;funcret
 14150  005F80                     __end_of_TMR4_SetInterruptHandler:
 14151                           	callstack 0
 14152                           
 14153 ;; *************** function _TMR3_Initialize *****************
 14154 ;; Defined at:
 14155 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;		None
 14158 ;; Auto vars:     Size  Location     Type
 14159 ;;		None
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  1    wreg      void 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2, status,0
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;Total ram usage:        2 bytes
 14174 ;; Hardware stack levels used: 1
 14175 ;; Hardware stack levels required when called: 8
 14176 ;; This function calls:
 14177 ;;		Nothing
 14178 ;; This function is called by:
 14179 ;;		_SYSTEM_Initialize
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text60
 14184  00599A                     __ptext60:
 14185                           	callstack 0
 14186  00599A                     _TMR3_Initialize:
 14187                           	callstack 21
 14188  00599A                     
 14189                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 14190  00599A  0E00               	movlw	0
 14191  00599C  6EA7               	movwf	167,c	;volatile
 14192                           
 14193                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 14194  00599E  0E00               	movlw	0
 14195  0059A0  6EA8               	movwf	168,c	;volatile
 14196                           
 14197                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 14198  0059A2  0E05               	movlw	5
 14199  0059A4  6EA9               	movwf	169,c	;volatile
 14200                           
 14201                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 14202  0059A6  0E00               	movlw	0
 14203  0059A8  6EA5               	movwf	165,c	;volatile
 14204                           
 14205                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 14206  0059AA  0E00               	movlw	0
 14207  0059AC  6EA4               	movwf	164,c	;volatile
 14208  0059AE                     
 14209                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 14210  0059AE  0139               	movlb	57	; () banked
 14211  0059B0  9DA6               	bcf	166,6,b	;volatile
 14212  0059B2                     
 14213                           ; BSR set to: 57
 14214                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14215  0059B2  50A4               	movf	164,w,c	;volatile
 14216  0059B4  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 14217  0059BA  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 14218  0059BC  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 14219  0059C0  6A14               	clrf	??_TMR3_Initialize^0,c
 14220  0059C2  1014               	iorwf	??_TMR3_Initialize^0,w,c
 14221  0059C4  0101               	movlb	1	; () banked
 14222  0059C6  6F8C               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 14223  0059C8  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 14224  0059CA  6F8D               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 14225  0059CC                     
 14226                           ; BSR set to: 1
 14227                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 14228  0059CC  0E01               	movlw	1
 14229  0059CE  6EA6               	movwf	166,c	;volatile
 14230  0059D0                     
 14231                           ; BSR set to: 1
 14232  0059D0  0012               	return		;funcret
 14233  0059D2                     __end_of_TMR3_Initialize:
 14234                           	callstack 0
 14235                           
 14236 ;; *************** function _TMR2_Initialize *****************
 14237 ;; Defined at:
 14238 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 14239 ;; Parameters:    Size  Location     Type
 14240 ;;		None
 14241 ;; Auto vars:     Size  Location     Type
 14242 ;;		None
 14243 ;; Return value:  Size  Location     Type
 14244 ;;                  1    wreg      void 
 14245 ;; Registers used:
 14246 ;;		wreg, status,2
 14247 ;; Tracked objects:
 14248 ;;		On entry : 0/0
 14249 ;;		On exit  : 0/0
 14250 ;;		Unchanged: 0/0
 14251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14256 ;;Total ram usage:        0 bytes
 14257 ;; Hardware stack levels used: 1
 14258 ;; Hardware stack levels required when called: 8
 14259 ;; This function calls:
 14260 ;;		Nothing
 14261 ;; This function is called by:
 14262 ;;		_SYSTEM_Initialize
 14263 ;; This function uses a non-reentrant model
 14264 ;;
 14265                           
 14266                           	psect	text61
 14267  005E8E                     __ptext61:
 14268                           	callstack 0
 14269  005E8E                     _TMR2_Initialize:
 14270                           	callstack 21
 14271  005E8E                     
 14272                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 14273  005E8E  0E05               	movlw	5
 14274  005E90  6EAE               	movwf	174,c	;volatile
 14275                           
 14276                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 14277  005E92  0E00               	movlw	0
 14278  005E94  6EAD               	movwf	173,c	;volatile
 14279                           
 14280                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 14281  005E96  0E00               	movlw	0
 14282  005E98  6EAF               	movwf	175,c	;volatile
 14283  005E9A                     
 14284                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 14285  005E9A  68AB               	setf	171,c	;volatile
 14286                           
 14287                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 14288  005E9C  0E00               	movlw	0
 14289  005E9E  6EAA               	movwf	170,c	;volatile
 14290  005EA0                     
 14291                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 14292  005EA0  0139               	movlb	57	; () banked
 14293  005EA2  95A4               	bcf	164,2,b	;volatile
 14294                           
 14295                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 14296  005EA4  0EB0               	movlw	176
 14297  005EA6  6EAC               	movwf	172,c	;volatile
 14298  005EA8                     
 14299                           ; BSR set to: 57
 14300  005EA8  0012               	return		;funcret
 14301  005EAA                     __end_of_TMR2_Initialize:
 14302                           	callstack 0
 14303                           
 14304 ;; *************** function _SMT1_Initialize *****************
 14305 ;; Defined at:
 14306 ;;		line 60 in file "mcc_generated_files/smt1.c"
 14307 ;; Parameters:    Size  Location     Type
 14308 ;;		None
 14309 ;; Auto vars:     Size  Location     Type
 14310 ;;		None
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  1    wreg      void 
 14313 ;; Registers used:
 14314 ;;		wreg, status,2
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14324 ;;Total ram usage:        0 bytes
 14325 ;; Hardware stack levels used: 1
 14326 ;; Hardware stack levels required when called: 8
 14327 ;; This function calls:
 14328 ;;		Nothing
 14329 ;; This function is called by:
 14330 ;;		_SYSTEM_Initialize
 14331 ;; This function uses a non-reentrant model
 14332 ;;
 14333                           
 14334                           	psect	text62
 14335  005C4E                     __ptext62:
 14336                           	callstack 0
 14337  005C4E                     _SMT1_Initialize:
 14338                           	callstack 21
 14339  005C4E                     
 14340                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14341  005C4E  0E80               	movlw	128
 14342  005C50  013F               	movlb	63	; () banked
 14343  005C52  6F1E               	movwf	30,b	;volatile
 14344                           
 14345                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14346  005C54  0E42               	movlw	66
 14347  005C56  6F1F               	movwf	31,b	;volatile
 14348                           
 14349                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14350  005C58  0E00               	movlw	0
 14351  005C5A  6F20               	movwf	32,b	;volatile
 14352                           
 14353                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14354  005C5C  0E04               	movlw	4
 14355  005C5E  6F21               	movwf	33,b	;volatile
 14356                           
 14357                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14358  005C60  0E00               	movlw	0
 14359  005C62  6F23               	movwf	35,b	;volatile
 14360                           
 14361                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14362  005C64  0E00               	movlw	0
 14363  005C66  6F22               	movwf	34,b	;volatile
 14364                           
 14365                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14366  005C68  0E01               	movlw	1
 14367  005C6A  6F1D               	movwf	29,b	;volatile
 14368  005C6C                     
 14369                           ; BSR set to: 63
 14370                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14371  005C6C  691C               	setf	28,b	;volatile
 14372  005C6E                     
 14373                           ; BSR set to: 63
 14374                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14375  005C6E  691B               	setf	27,b	;volatile
 14376  005C70                     
 14377                           ; BSR set to: 63
 14378                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14379  005C70  0139               	movlb	57	; () banked
 14380  005C72  8B91               	bsf	145,5,b	;volatile
 14381  005C74                     
 14382                           ; BSR set to: 57
 14383                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14384  005C74  8F91               	bsf	145,7,b	;volatile
 14385  005C76                     
 14386                           ; BSR set to: 57
 14387                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14388  005C76  8D91               	bsf	145,6,b	;volatile
 14389  005C78                     
 14390                           ; BSR set to: 57
 14391                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14392  005C78  013F               	movlb	63	; () banked
 14393  005C7A  8F1F               	bsf	31,7,b	;volatile
 14394  005C7C                     
 14395                           ; BSR set to: 63
 14396  005C7C  0012               	return		;funcret
 14397  005C7E                     __end_of_SMT1_Initialize:
 14398                           	callstack 0
 14399                           
 14400 ;; *************** function _PWM8_Initialize *****************
 14401 ;; Defined at:
 14402 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;		None
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  1    wreg      void 
 14409 ;; Registers used:
 14410 ;;		wreg, status,2
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14420 ;;Total ram usage:        0 bytes
 14421 ;; Hardware stack levels used: 1
 14422 ;; Hardware stack levels required when called: 8
 14423 ;; This function calls:
 14424 ;;		Nothing
 14425 ;; This function is called by:
 14426 ;;		_SYSTEM_Initialize
 14427 ;; This function uses a non-reentrant model
 14428 ;;
 14429                           
 14430                           	psect	text63
 14431  005EAA                     __ptext63:
 14432                           	callstack 0
 14433  005EAA                     _PWM8_Initialize:
 14434                           	callstack 21
 14435  005EAA                     
 14436                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14437  005EAA  0E80               	movlw	128
 14438  005EAC  6E62               	movwf	98,c	;volatile
 14439                           
 14440                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14441  005EAE  0E00               	movlw	0
 14442  005EB0  6E61               	movwf	97,c	;volatile
 14443                           
 14444                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14445  005EB2  0E00               	movlw	0
 14446  005EB4  6E60               	movwf	96,c	;volatile
 14447                           
 14448                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14449  005EB6  013F               	movlb	63	; () banked
 14450  005EB8  515F               	movf	95,w,b	;volatile
 14451  005EBA  0B3F               	andlw	-193
 14452  005EBC  0980               	iorlw	128
 14453  005EBE  6F5F               	movwf	95,b	;volatile
 14454  005EC0                     
 14455                           ; BSR set to: 63
 14456  005EC0  0012               	return		;funcret
 14457  005EC2                     __end_of_PWM8_Initialize:
 14458                           	callstack 0
 14459                           
 14460 ;; *************** function _PWM7_Initialize *****************
 14461 ;; Defined at:
 14462 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14463 ;; Parameters:    Size  Location     Type
 14464 ;;		None
 14465 ;; Auto vars:     Size  Location     Type
 14466 ;;		None
 14467 ;; Return value:  Size  Location     Type
 14468 ;;                  1    wreg      void 
 14469 ;; Registers used:
 14470 ;;		wreg, status,2
 14471 ;; Tracked objects:
 14472 ;;		On entry : 0/0
 14473 ;;		On exit  : 0/0
 14474 ;;		Unchanged: 0/0
 14475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14480 ;;Total ram usage:        0 bytes
 14481 ;; Hardware stack levels used: 1
 14482 ;; Hardware stack levels required when called: 8
 14483 ;; This function calls:
 14484 ;;		Nothing
 14485 ;; This function is called by:
 14486 ;;		_SYSTEM_Initialize
 14487 ;; This function uses a non-reentrant model
 14488 ;;
 14489                           
 14490                           	psect	text64
 14491  005EC2                     __ptext64:
 14492                           	callstack 0
 14493  005EC2                     _PWM7_Initialize:
 14494                           	callstack 21
 14495  005EC2                     
 14496                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14497  005EC2  0E80               	movlw	128
 14498  005EC4  6E66               	movwf	102,c	;volatile
 14499                           
 14500                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14501  005EC6  0E00               	movlw	0
 14502  005EC8  6E65               	movwf	101,c	;volatile
 14503                           
 14504                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14505  005ECA  0E00               	movlw	0
 14506  005ECC  6E64               	movwf	100,c	;volatile
 14507                           
 14508                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14509  005ECE  013F               	movlb	63	; () banked
 14510  005ED0  515F               	movf	95,w,b	;volatile
 14511  005ED2  0BCF               	andlw	-49
 14512  005ED4  0920               	iorlw	32
 14513  005ED6  6F5F               	movwf	95,b	;volatile
 14514  005ED8                     
 14515                           ; BSR set to: 63
 14516  005ED8  0012               	return		;funcret
 14517  005EDA                     __end_of_PWM7_Initialize:
 14518                           	callstack 0
 14519                           
 14520 ;; *************** function _PWM6_Initialize *****************
 14521 ;; Defined at:
 14522 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14523 ;; Parameters:    Size  Location     Type
 14524 ;;		None
 14525 ;; Auto vars:     Size  Location     Type
 14526 ;;		None
 14527 ;; Return value:  Size  Location     Type
 14528 ;;                  1    wreg      void 
 14529 ;; Registers used:
 14530 ;;		wreg, status,2
 14531 ;; Tracked objects:
 14532 ;;		On entry : 0/0
 14533 ;;		On exit  : 0/0
 14534 ;;		Unchanged: 0/0
 14535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14540 ;;Total ram usage:        0 bytes
 14541 ;; Hardware stack levels used: 1
 14542 ;; Hardware stack levels required when called: 8
 14543 ;; This function calls:
 14544 ;;		Nothing
 14545 ;; This function is called by:
 14546 ;;		_SYSTEM_Initialize
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           	psect	text65
 14551  005EDA                     __ptext65:
 14552                           	callstack 0
 14553  005EDA                     _PWM6_Initialize:
 14554                           	callstack 21
 14555  005EDA                     
 14556                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14557  005EDA  0E80               	movlw	128
 14558  005EDC  6E6A               	movwf	106,c	;volatile
 14559                           
 14560                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14561  005EDE  0E59               	movlw	89
 14562  005EE0  6E69               	movwf	105,c	;volatile
 14563                           
 14564                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14565  005EE2  0E40               	movlw	64
 14566  005EE4  6E68               	movwf	104,c	;volatile
 14567                           
 14568                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14569  005EE6  013F               	movlb	63	; () banked
 14570  005EE8  515F               	movf	95,w,b	;volatile
 14571  005EEA  0BF3               	andlw	-13
 14572  005EEC  0904               	iorlw	4
 14573  005EEE  6F5F               	movwf	95,b	;volatile
 14574  005EF0                     
 14575                           ; BSR set to: 63
 14576  005EF0  0012               	return		;funcret
 14577  005EF2                     __end_of_PWM6_Initialize:
 14578                           	callstack 0
 14579                           
 14580 ;; *************** function _PWM5_Initialize *****************
 14581 ;; Defined at:
 14582 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14583 ;; Parameters:    Size  Location     Type
 14584 ;;		None
 14585 ;; Auto vars:     Size  Location     Type
 14586 ;;		None
 14587 ;; Return value:  Size  Location     Type
 14588 ;;                  1    wreg      void 
 14589 ;; Registers used:
 14590 ;;		wreg, status,2
 14591 ;; Tracked objects:
 14592 ;;		On entry : 0/0
 14593 ;;		On exit  : 0/0
 14594 ;;		Unchanged: 0/0
 14595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14600 ;;Total ram usage:        0 bytes
 14601 ;; Hardware stack levels used: 1
 14602 ;; Hardware stack levels required when called: 8
 14603 ;; This function calls:
 14604 ;;		Nothing
 14605 ;; This function is called by:
 14606 ;;		_SYSTEM_Initialize
 14607 ;; This function uses a non-reentrant model
 14608 ;;
 14609                           
 14610                           	psect	text66
 14611  005EF2                     __ptext66:
 14612                           	callstack 0
 14613  005EF2                     _PWM5_Initialize:
 14614                           	callstack 21
 14615  005EF2                     
 14616                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14617  005EF2  0E80               	movlw	128
 14618  005EF4  6E6E               	movwf	110,c	;volatile
 14619                           
 14620                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14621  005EF6  0E59               	movlw	89
 14622  005EF8  6E6D               	movwf	109,c	;volatile
 14623                           
 14624                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14625  005EFA  0E40               	movlw	64
 14626  005EFC  6E6C               	movwf	108,c	;volatile
 14627                           
 14628                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14629  005EFE  013F               	movlb	63	; () banked
 14630  005F00  515F               	movf	95,w,b	;volatile
 14631  005F02  0BFC               	andlw	-4
 14632  005F04  0901               	iorlw	1
 14633  005F06  6F5F               	movwf	95,b	;volatile
 14634  005F08                     
 14635                           ; BSR set to: 63
 14636  005F08  0012               	return		;funcret
 14637  005F0A                     __end_of_PWM5_Initialize:
 14638                           	callstack 0
 14639                           
 14640 ;; *************** function _PMD_Initialize *****************
 14641 ;; Defined at:
 14642 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14643 ;; Parameters:    Size  Location     Type
 14644 ;;		None
 14645 ;; Auto vars:     Size  Location     Type
 14646 ;;		None
 14647 ;; Return value:  Size  Location     Type
 14648 ;;                  1    wreg      void 
 14649 ;; Registers used:
 14650 ;;		wreg, status,2
 14651 ;; Tracked objects:
 14652 ;;		On entry : 0/0
 14653 ;;		On exit  : 0/0
 14654 ;;		Unchanged: 0/0
 14655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14660 ;;Total ram usage:        0 bytes
 14661 ;; Hardware stack levels used: 1
 14662 ;; Hardware stack levels required when called: 8
 14663 ;; This function calls:
 14664 ;;		Nothing
 14665 ;; This function is called by:
 14666 ;;		_SYSTEM_Initialize
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           	psect	text67
 14671  005E08                     __ptext67:
 14672                           	callstack 0
 14673  005E08                     _PMD_Initialize:
 14674                           	callstack 21
 14675  005E08                     
 14676                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14677  005E08  0E00               	movlw	0
 14678  005E0A  0139               	movlb	57	; () banked
 14679  005E0C  6FC0               	movwf	192,b	;volatile
 14680                           
 14681                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14682  005E0E  0E00               	movlw	0
 14683  005E10  6FC1               	movwf	193,b	;volatile
 14684                           
 14685                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14686  005E12  0E00               	movlw	0
 14687  005E14  6FC2               	movwf	194,b	;volatile
 14688                           
 14689                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14690  005E16  0E00               	movlw	0
 14691  005E18  6FC3               	movwf	195,b	;volatile
 14692                           
 14693                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14694  005E1A  0E00               	movlw	0
 14695  005E1C  6FC4               	movwf	196,b	;volatile
 14696                           
 14697                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14698  005E1E  0E00               	movlw	0
 14699  005E20  6FC5               	movwf	197,b	;volatile
 14700                           
 14701                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14702  005E22  0E00               	movlw	0
 14703  005E24  6FC6               	movwf	198,b	;volatile
 14704                           
 14705                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14706  005E26  0E00               	movlw	0
 14707  005E28  6FC7               	movwf	199,b	;volatile
 14708  005E2A                     
 14709                           ; BSR set to: 57
 14710  005E2A  0012               	return		;funcret
 14711  005E2C                     __end_of_PMD_Initialize:
 14712                           	callstack 0
 14713                           
 14714 ;; *************** function _PIN_MANAGER_Initialize *****************
 14715 ;; Defined at:
 14716 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14717 ;; Parameters:    Size  Location     Type
 14718 ;;		None
 14719 ;; Auto vars:     Size  Location     Type
 14720 ;;		None
 14721 ;; Return value:  Size  Location     Type
 14722 ;;                  1    wreg      void 
 14723 ;; Registers used:
 14724 ;;		wreg, status,2
 14725 ;; Tracked objects:
 14726 ;;		On entry : 0/0
 14727 ;;		On exit  : 0/0
 14728 ;;		Unchanged: 0/0
 14729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14734 ;;Total ram usage:        0 bytes
 14735 ;; Hardware stack levels used: 1
 14736 ;; Hardware stack levels required when called: 8
 14737 ;; This function calls:
 14738 ;;		Nothing
 14739 ;; This function is called by:
 14740 ;;		_SYSTEM_Initialize
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           	psect	text68
 14745  004CBC                     __ptext68:
 14746                           	callstack 0
 14747  004CBC                     _PIN_MANAGER_Initialize:
 14748                           	callstack 21
 14749  004CBC                     
 14750                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14751  004CBC  0E00               	movlw	0
 14752  004CBE  6EBE               	movwf	190,c	;volatile
 14753                           
 14754                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14755  004CC0  0E00               	movlw	0
 14756  004CC2  6EBD               	movwf	189,c	;volatile
 14757                           
 14758                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14759  004CC4  0E24               	movlw	36
 14760  004CC6  6EBA               	movwf	186,c	;volatile
 14761                           
 14762                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14763  004CC8  0E00               	movlw	0
 14764  004CCA  6EBB               	movwf	187,c	;volatile
 14765                           
 14766                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14767  004CCC  0E00               	movlw	0
 14768  004CCE  6EBC               	movwf	188,c	;volatile
 14769                           
 14770                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14771  004CD0  0E07               	movlw	7
 14772  004CD2  6EC6               	movwf	198,c	;volatile
 14773                           
 14774                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14775  004CD4  0EC0               	movlw	192
 14776  004CD6  6EC2               	movwf	194,c	;volatile
 14777                           
 14778                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14779  004CD8  0EF7               	movlw	247
 14780  004CDA  6EC3               	movwf	195,c	;volatile
 14781  004CDC                     
 14782                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14783  004CDC  68C4               	setf	196,c	;volatile
 14784  004CDE                     
 14785                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14786  004CDE  68C5               	setf	197,c	;volatile
 14787                           
 14788                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14789  004CE0  0E1F               	movlw	31
 14790  004CE2  013A               	movlb	58	; () banked
 14791  004CE4  6F70               	movwf	112,b	;volatile
 14792  004CE6                     
 14793                           ; BSR set to: 58
 14794                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14795  004CE6  6960               	setf	96,b	;volatile
 14796                           
 14797                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14798  004CE8  0EC0               	movlw	192
 14799  004CEA  6F50               	movwf	80,b	;volatile
 14800                           
 14801                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14802  004CEC  0E07               	movlw	7
 14803  004CEE  6F80               	movwf	128,b	;volatile
 14804                           
 14805                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14806  004CF0  0E7F               	movlw	127
 14807  004CF2  6F40               	movwf	64,b	;volatile
 14808                           
 14809                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14810  004CF4  0E00               	movlw	0
 14811  004CF6  6F71               	movwf	113,b	;volatile
 14812                           
 14813                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14814  004CF8  0E00               	movlw	0
 14815  004CFA  6F81               	movwf	129,b	;volatile
 14816                           
 14817                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14818  004CFC  0E00               	movlw	0
 14819  004CFE  6F51               	movwf	81,b	;volatile
 14820                           
 14821                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14822  004D00  0E00               	movlw	0
 14823  004D02  6F41               	movwf	65,b	;volatile
 14824                           
 14825                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14826  004D04  0E00               	movlw	0
 14827  004D06  6F61               	movwf	97,b	;volatile
 14828                           
 14829                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14830  004D08  0E00               	movlw	0
 14831  004D0A  6F5A               	movwf	90,b	;volatile
 14832                           
 14833                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14834  004D0C  0E00               	movlw	0
 14835  004D0E  6F5B               	movwf	91,b	;volatile
 14836                           
 14837                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14838  004D10  0E00               	movlw	0
 14839  004D12  6F6A               	movwf	106,b	;volatile
 14840                           
 14841                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14842  004D14  0E00               	movlw	0
 14843  004D16  6F6B               	movwf	107,b	;volatile
 14844                           
 14845                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14846  004D18  0E00               	movlw	0
 14847  004D1A  6F7A               	movwf	122,b	;volatile
 14848                           
 14849                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14850  004D1C  0E00               	movlw	0
 14851  004D1E  6F7B               	movwf	123,b	;volatile
 14852                           
 14853                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14854  004D20  0E00               	movlw	0
 14855  004D22  6F82               	movwf	130,b	;volatile
 14856                           
 14857                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14858  004D24  0E00               	movlw	0
 14859  004D26  6F42               	movwf	66,b	;volatile
 14860                           
 14861                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14862  004D28  0E00               	movlw	0
 14863  004D2A  6F52               	movwf	82,b	;volatile
 14864                           
 14865                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14866  004D2C  0E00               	movlw	0
 14867  004D2E  6F62               	movwf	98,b	;volatile
 14868                           
 14869                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14870  004D30  0E00               	movlw	0
 14871  004D32  6F72               	movwf	114,b	;volatile
 14872  004D34                     
 14873                           ; BSR set to: 58
 14874                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14875  004D34  6943               	setf	67,b	;volatile
 14876  004D36                     
 14877                           ; BSR set to: 58
 14878                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14879  004D36  6953               	setf	83,b	;volatile
 14880  004D38                     
 14881                           ; BSR set to: 58
 14882                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14883  004D38  6963               	setf	99,b	;volatile
 14884  004D3A                     
 14885                           ; BSR set to: 58
 14886                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14887  004D3A  6973               	setf	115,b	;volatile
 14888                           
 14889                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14890  004D3C  0E07               	movlw	7
 14891  004D3E  6F83               	movwf	131,b	;volatile
 14892  004D40                     
 14893                           ; BSR set to: 58
 14894                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14895  004D40  6944               	setf	68,b	;volatile
 14896  004D42                     
 14897                           ; BSR set to: 58
 14898                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14899  004D42  6954               	setf	84,b	;volatile
 14900  004D44                     
 14901                           ; BSR set to: 58
 14902                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14903  004D44  6964               	setf	100,b	;volatile
 14904  004D46                     
 14905                           ; BSR set to: 58
 14906                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14907  004D46  6974               	setf	116,b	;volatile
 14908                           
 14909                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14910  004D48  0E0F               	movlw	15
 14911  004D4A  6F84               	movwf	132,b	;volatile
 14912                           
 14913                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14914  004D4C  0E1F               	movlw	31
 14915  004D4E  6FCF               	movwf	207,b	;volatile
 14916                           
 14917                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14918  004D50  0E09               	movlw	9
 14919  004D52  6FDC               	movwf	220,b	;volatile
 14920                           
 14921                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14922  004D54  0E0E               	movlw	14
 14923  004D56  6F01               	movwf	1,b	;volatile
 14924                           
 14925                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14926  004D58  0E0A               	movlw	10
 14927  004D5A  6FE5               	movwf	229,b	;volatile
 14928                           
 14929                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14930  004D5C  0E0D               	movlw	13
 14931  004D5E  6F00               	movwf	0,b	;volatile
 14932                           
 14933                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14934  004D60  0E1D               	movlw	29
 14935  004D62  6FC9               	movwf	201,b	;volatile
 14936                           
 14937                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14938  004D64  0E10               	movlw	16
 14939  004D66  6F04               	movwf	4,b	;volatile
 14940                           
 14941                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14942  004D68  0E07               	movlw	7
 14943  004D6A  6FD9               	movwf	217,b	;volatile
 14944                           
 14945                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14946  004D6C  0E09               	movlw	9
 14947  004D6E  6FD1               	movwf	209,b	;volatile
 14948                           
 14949                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14950  004D70  0E0F               	movlw	15
 14951  004D72  6F03               	movwf	3,b	;volatile
 14952                           
 14953                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14954  004D74  0E13               	movlw	19
 14955  004D76  6F0B               	movwf	11,b	;volatile
 14956                           
 14957                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14958  004D78  0E08               	movlw	8
 14959  004D7A  6FDB               	movwf	219,b	;volatile
 14960                           
 14961                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14962  004D7C  0E08               	movlw	8
 14963  004D7E  6FD2               	movwf	210,b	;volatile
 14964                           
 14965                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14966  004D80  0E1E               	movlw	30
 14967  004D82  6FD0               	movwf	208,b	;volatile
 14968  004D84                     
 14969                           ; BSR set to: 58
 14970  004D84  0012               	return		;funcret
 14971  004D86                     __end_of_PIN_MANAGER_Initialize:
 14972                           	callstack 0
 14973                           
 14974 ;; *************** function _OSCILLATOR_Initialize *****************
 14975 ;; Defined at:
 14976 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14977 ;; Parameters:    Size  Location     Type
 14978 ;;		None
 14979 ;; Auto vars:     Size  Location     Type
 14980 ;;		None
 14981 ;; Return value:  Size  Location     Type
 14982 ;;                  1    wreg      void 
 14983 ;; Registers used:
 14984 ;;		wreg, status,2
 14985 ;; Tracked objects:
 14986 ;;		On entry : 0/0
 14987 ;;		On exit  : 0/0
 14988 ;;		Unchanged: 0/0
 14989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14994 ;;Total ram usage:        0 bytes
 14995 ;; Hardware stack levels used: 1
 14996 ;; Hardware stack levels required when called: 8
 14997 ;; This function calls:
 14998 ;;		Nothing
 14999 ;; This function is called by:
 15000 ;;		_SYSTEM_Initialize
 15001 ;; This function uses a non-reentrant model
 15002 ;;
 15003                           
 15004                           	psect	text69
 15005  005F0A                     __ptext69:
 15006                           	callstack 0
 15007  005F0A                     _OSCILLATOR_Initialize:
 15008                           	callstack 21
 15009  005F0A                     
 15010                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 15011  005F0A  0E60               	movlw	96
 15012  005F0C  0139               	movlb	57	; () banked
 15013  005F0E  6FD9               	movwf	217,b	;volatile
 15014                           
 15015                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 15016  005F10  0E00               	movlw	0
 15017  005F12  6FDB               	movwf	219,b	;volatile
 15018                           
 15019                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 15020  005F14  0E00               	movlw	0
 15021  005F16  6FDD               	movwf	221,b	;volatile
 15022                           
 15023                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 15024  005F18  0E08               	movlw	8
 15025  005F1A  6FDF               	movwf	223,b	;volatile
 15026                           
 15027                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 15028  005F1C  0E00               	movlw	0
 15029  005F1E  6FDE               	movwf	222,b	;volatile
 15030  005F20                     
 15031                           ; BSR set to: 57
 15032  005F20  0012               	return		;funcret
 15033  005F22                     __end_of_OSCILLATOR_Initialize:
 15034                           	callstack 0
 15035                           
 15036 ;; *************** function _INTERRUPT_Initialize *****************
 15037 ;; Defined at:
 15038 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15039 ;; Parameters:    Size  Location     Type
 15040 ;;		None
 15041 ;; Auto vars:     Size  Location     Type
 15042 ;;  state           1   19[COMRAM] _Bool 
 15043 ;; Return value:  Size  Location     Type
 15044 ;;                  1    wreg      void 
 15045 ;; Registers used:
 15046 ;;		wreg, status,2
 15047 ;; Tracked objects:
 15048 ;;		On entry : 0/0
 15049 ;;		On exit  : 0/0
 15050 ;;		Unchanged: 0/0
 15051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15056 ;;Total ram usage:        1 bytes
 15057 ;; Hardware stack levels used: 1
 15058 ;; Hardware stack levels required when called: 8
 15059 ;; This function calls:
 15060 ;;		Nothing
 15061 ;; This function is called by:
 15062 ;;		_SYSTEM_Initialize
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           	psect	text70
 15067  005640                     __ptext70:
 15068                           	callstack 0
 15069  005640                     _INTERRUPT_Initialize:
 15070                           	callstack 21
 15071  005640                     
 15072                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 15073  005640  8AD2               	bsf	210,5,c	;volatile
 15074  005642                     
 15075                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 15076  005642  0E00               	movlw	0
 15077  005644  BED2               	btfsc	16338,7,c	;volatile
 15078  005646  0E01               	movlw	1
 15079  005648  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 15080  00564A                     
 15081                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 15082  00564A  9ED2               	bcf	16338,7,c	;volatile
 15083                           
 15084                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 15085  00564C  0E55               	movlw	85
 15086  00564E  6ED4               	movwf	212,c	;volatile
 15087                           
 15088                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 15089  005650  0EAA               	movlw	170
 15090  005652  6ED4               	movwf	212,c	;volatile
 15091  005654                     
 15092                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 15093  005654  90D4               	bcf	212,0,c	;volatile
 15094                           
 15095                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 15096  005656  0E00               	movlw	0
 15097  005658  6ED7               	movwf	215,c	;volatile
 15098                           
 15099                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 15100  00565A  0E00               	movlw	0
 15101  00565C  6ED6               	movwf	214,c	;volatile
 15102                           
 15103                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 15104  00565E  0E08               	movlw	8
 15105  005660  6ED5               	movwf	213,c	;volatile
 15106                           
 15107                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 15108  005662  0E55               	movlw	85
 15109  005664  6ED4               	movwf	212,c	;volatile
 15110                           
 15111                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 15112  005666  0EAA               	movlw	170
 15113  005668  6ED4               	movwf	212,c	;volatile
 15114  00566A                     
 15115                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 15116  00566A  80D4               	bsf	212,0,c	;volatile
 15117  00566C                     
 15118                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 15119  00566C  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 15120  00566E  D002               	bra	u2805
 15121  005670  9ED2               	bcf	16338,7,c	;volatile
 15122  005672  D001               	bra	u2806
 15123  005674                     u2805:
 15124  005674  8ED2               	bsf	16338,7,c	;volatile
 15125  005676                     u2806:
 15126  005676                     
 15127                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 15128  005676  0139               	movlb	57	; () banked
 15129  005678  9983               	bcf	131,4,b	;volatile
 15130  00567A                     
 15131                           ; BSR set to: 57
 15132                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 15133  00567A  9783               	bcf	131,3,b	;volatile
 15134  00567C                     
 15135                           ; BSR set to: 57
 15136                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 15137  00567C  8F81               	bsf	129,7,b	;volatile
 15138  00567E                     
 15139                           ; BSR set to: 57
 15140                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 15141  00567E  8B81               	bsf	129,5,b	;volatile
 15142  005680                     
 15143                           ; BSR set to: 57
 15144                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 15145  005680  8D81               	bsf	129,6,b	;volatile
 15146  005682                     
 15147                           ; BSR set to: 57
 15148                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 15149  005682  818A               	bsf	138,0,b	;volatile
 15150  005684                     
 15151                           ; BSR set to: 57
 15152                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 15153  005684  8F88               	bsf	136,7,b	;volatile
 15154  005686                     
 15155                           ; BSR set to: 57
 15156                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 15157  005686  9187               	bcf	135,0,b	;volatile
 15158  005688                     
 15159                           ; BSR set to: 57
 15160                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 15161  005688  8389               	bsf	137,1,b	;volatile
 15162  00568A                     
 15163                           ; BSR set to: 57
 15164  00568A  0012               	return		;funcret
 15165  00568C                     __end_of_INTERRUPT_Initialize:
 15166                           	callstack 0
 15167                           
 15168 ;; *************** function _CLC3_Initialize *****************
 15169 ;; Defined at:
 15170 ;;		line 58 in file "mcc_generated_files/clc3.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;		None
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;		None
 15175 ;; Return value:  Size  Location     Type
 15176 ;;                  1    wreg      void 
 15177 ;; Registers used:
 15178 ;;		wreg, status,2
 15179 ;; Tracked objects:
 15180 ;;		On entry : 0/0
 15181 ;;		On exit  : 0/0
 15182 ;;		Unchanged: 0/0
 15183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;Total ram usage:        0 bytes
 15189 ;; Hardware stack levels used: 1
 15190 ;; Hardware stack levels required when called: 8
 15191 ;; This function calls:
 15192 ;;		Nothing
 15193 ;; This function is called by:
 15194 ;;		_SYSTEM_Initialize
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text71
 15199  005D34                     __ptext71:
 15200                           	callstack 0
 15201  005D34                     _CLC3_Initialize:
 15202                           	callstack 21
 15203  005D34                     
 15204                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 15205  005D34  0E00               	movlw	0
 15206  005D36  013C               	movlb	60	; () banked
 15207  005D38  6F61               	movwf	97,b	;volatile
 15208                           
 15209                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 15210  005D3A  0E03               	movlw	3
 15211  005D3C  6F62               	movwf	98,b	;volatile
 15212                           
 15213                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 15214  005D3E  0E02               	movlw	2
 15215  005D40  6F63               	movwf	99,b	;volatile
 15216                           
 15217                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 15218  005D42  0E00               	movlw	0
 15219  005D44  6F64               	movwf	100,b	;volatile
 15220                           
 15221                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 15222  005D46  0E00               	movlw	0
 15223  005D48  6F65               	movwf	101,b	;volatile
 15224                           
 15225                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 15226  005D4A  0E02               	movlw	2
 15227  005D4C  6F66               	movwf	102,b	;volatile
 15228                           
 15229                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 15230  005D4E  0E08               	movlw	8
 15231  005D50  6F67               	movwf	103,b	;volatile
 15232                           
 15233                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 15234  005D52  0E00               	movlw	0
 15235  005D54  6F68               	movwf	104,b	;volatile
 15236                           
 15237                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 15238  005D56  0E00               	movlw	0
 15239  005D58  6F69               	movwf	105,b	;volatile
 15240                           
 15241                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 15242  005D5A  0E85               	movlw	133
 15243  005D5C  6F60               	movwf	96,b	;volatile
 15244  005D5E                     
 15245                           ; BSR set to: 60
 15246  005D5E  0012               	return		;funcret
 15247  005D60                     __end_of_CLC3_Initialize:
 15248                           	callstack 0
 15249                           
 15250 ;; *************** function _CCP4_Initialize *****************
 15251 ;; Defined at:
 15252 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 15253 ;; Parameters:    Size  Location     Type
 15254 ;;		None
 15255 ;; Auto vars:     Size  Location     Type
 15256 ;;		None
 15257 ;; Return value:  Size  Location     Type
 15258 ;;                  1    wreg      void 
 15259 ;; Registers used:
 15260 ;;		wreg, status,2, status,0, cstack
 15261 ;; Tracked objects:
 15262 ;;		On entry : 0/0
 15263 ;;		On exit  : 0/0
 15264 ;;		Unchanged: 0/0
 15265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15270 ;;Total ram usage:        0 bytes
 15271 ;; Hardware stack levels used: 1
 15272 ;; Hardware stack levels required when called: 9
 15273 ;; This function calls:
 15274 ;;		_CCP4_SetCallBack
 15275 ;; This function is called by:
 15276 ;;		_SYSTEM_Initialize
 15277 ;; This function uses a non-reentrant model
 15278 ;;
 15279                           
 15280                           	psect	text72
 15281  005C7E                     __ptext72:
 15282                           	callstack 0
 15283  005C7E                     _CCP4_Initialize:
 15284                           	callstack 20
 15285  005C7E                     
 15286                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 15287  005C7E  0E83               	movlw	131
 15288  005C80  6E72               	movwf	114,c	;volatile
 15289                           
 15290                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 15291  005C82  0E00               	movlw	0
 15292  005C84  6E73               	movwf	115,c	;volatile
 15293                           
 15294                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 15295  005C86  0E00               	movlw	0
 15296  005C88  6E71               	movwf	113,c	;volatile
 15297                           
 15298                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 15299  005C8A  0E00               	movlw	0
 15300  005C8C  6E70               	movwf	112,c	;volatile
 15301  005C8E                     
 15302                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 15303  005C8E  0E78               	movlw	low _CCP4_DefaultCallBack
 15304  005C90  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 15305  005C92  0E5A               	movlw	high _CCP4_DefaultCallBack
 15306  005C94  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 15307  005C96  ECC0  F02F         	call	_CCP4_SetCallBack	;wreg free
 15308  005C9A                     
 15309                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 15310  005C9A  013F               	movlb	63	; () banked
 15311  005C9C  515E               	movf	94,w,b	;volatile
 15312  005C9E  0B3F               	andlw	-193
 15313  005CA0  0980               	iorlw	128
 15314  005CA2  6F5E               	movwf	94,b	;volatile
 15315  005CA4                     
 15316                           ; BSR set to: 63
 15317                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 15318  005CA4  0139               	movlb	57	; () banked
 15319  005CA6  91AA               	bcf	170,0,b	;volatile
 15320  005CA8                     
 15321                           ; BSR set to: 57
 15322                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 15323  005CA8  819A               	bsf	154,0,b	;volatile
 15324  005CAA                     
 15325                           ; BSR set to: 57
 15326  005CAA  0012               	return		;funcret
 15327  005CAC                     __end_of_CCP4_Initialize:
 15328                           	callstack 0
 15329                           
 15330 ;; *************** function _CCP4_SetCallBack *****************
 15331 ;; Defined at:
 15332 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15333 ;; Parameters:    Size  Location     Type
 15334 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15335 ;;		 -> CCP4_DefaultCallBack(1), 
 15336 ;; Auto vars:     Size  Location     Type
 15337 ;;		None
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  1    wreg      void 
 15340 ;; Registers used:
 15341 ;;		wreg, status,2, status,0
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15351 ;;Total ram usage:        2 bytes
 15352 ;; Hardware stack levels used: 1
 15353 ;; Hardware stack levels required when called: 8
 15354 ;; This function calls:
 15355 ;;		Nothing
 15356 ;; This function is called by:
 15357 ;;		_CCP4_Initialize
 15358 ;; This function uses a non-reentrant model
 15359 ;;
 15360                           
 15361                           	psect	text73
 15362  005F80                     __ptext73:
 15363                           	callstack 0
 15364  005F80                     _CCP4_SetCallBack:
 15365                           	callstack 20
 15366  005F80                     
 15367                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15368  005F80  C014  F192         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15369  005F84  C015  F193         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15370  005F88  0012               	return		;funcret
 15371  005F8A                     __end_of_CCP4_SetCallBack:
 15372                           	callstack 0
 15373                           
 15374 ;; *************** function _CCP3_Initialize *****************
 15375 ;; Defined at:
 15376 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;		None
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;		None
 15381 ;; Return value:  Size  Location     Type
 15382 ;;                  1    wreg      void 
 15383 ;; Registers used:
 15384 ;;		wreg, status,2, status,0, cstack
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15394 ;;Total ram usage:        0 bytes
 15395 ;; Hardware stack levels used: 1
 15396 ;; Hardware stack levels required when called: 9
 15397 ;; This function calls:
 15398 ;;		_CCP3_SetCallBack
 15399 ;; This function is called by:
 15400 ;;		_SYSTEM_Initialize
 15401 ;; This function uses a non-reentrant model
 15402 ;;
 15403                           
 15404                           	psect	text74
 15405  005CAC                     __ptext74:
 15406                           	callstack 0
 15407  005CAC                     _CCP3_Initialize:
 15408                           	callstack 20
 15409  005CAC                     
 15410                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15411  005CAC  0E83               	movlw	131
 15412  005CAE  6E76               	movwf	118,c	;volatile
 15413                           
 15414                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15415  005CB0  0E00               	movlw	0
 15416  005CB2  6E77               	movwf	119,c	;volatile
 15417                           
 15418                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15419  005CB4  0E00               	movlw	0
 15420  005CB6  6E75               	movwf	117,c	;volatile
 15421                           
 15422                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15423  005CB8  0E00               	movlw	0
 15424  005CBA  6E74               	movwf	116,c	;volatile
 15425  005CBC                     
 15426                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15427  005CBC  0E42               	movlw	low _CCP3_DefaultCallBack
 15428  005CBE  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15429  005CC0  0E5A               	movlw	high _CCP3_DefaultCallBack
 15430  005CC2  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15431  005CC4  ECC5  F02F         	call	_CCP3_SetCallBack	;wreg free
 15432  005CC8                     
 15433                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15434  005CC8  013F               	movlb	63	; () banked
 15435  005CCA  515E               	movf	94,w,b	;volatile
 15436  005CCC  0BCF               	andlw	-49
 15437  005CCE  0920               	iorlw	32
 15438  005CD0  6F5E               	movwf	94,b	;volatile
 15439  005CD2                     
 15440                           ; BSR set to: 63
 15441                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15442  005CD2  0139               	movlb	57	; () banked
 15443  005CD4  93A9               	bcf	169,1,b	;volatile
 15444  005CD6                     
 15445                           ; BSR set to: 57
 15446                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15447  005CD6  8399               	bsf	153,1,b	;volatile
 15448  005CD8                     
 15449                           ; BSR set to: 57
 15450  005CD8  0012               	return		;funcret
 15451  005CDA                     __end_of_CCP3_Initialize:
 15452                           	callstack 0
 15453                           
 15454 ;; *************** function _CCP3_SetCallBack *****************
 15455 ;; Defined at:
 15456 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15459 ;;		 -> CCP3_DefaultCallBack(1), 
 15460 ;; Auto vars:     Size  Location     Type
 15461 ;;		None
 15462 ;; Return value:  Size  Location     Type
 15463 ;;                  1    wreg      void 
 15464 ;; Registers used:
 15465 ;;		wreg, status,2, status,0
 15466 ;; Tracked objects:
 15467 ;;		On entry : 0/0
 15468 ;;		On exit  : 0/0
 15469 ;;		Unchanged: 0/0
 15470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15475 ;;Total ram usage:        2 bytes
 15476 ;; Hardware stack levels used: 1
 15477 ;; Hardware stack levels required when called: 8
 15478 ;; This function calls:
 15479 ;;		Nothing
 15480 ;; This function is called by:
 15481 ;;		_CCP3_Initialize
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           
 15485                           	psect	text75
 15486  005F8A                     __ptext75:
 15487                           	callstack 0
 15488  005F8A                     _CCP3_SetCallBack:
 15489                           	callstack 20
 15490  005F8A                     
 15491                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15492  005F8A  C014  F194         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15493  005F8E  C015  F195         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15494  005F92  0012               	return		;funcret
 15495  005F94                     __end_of_CCP3_SetCallBack:
 15496                           	callstack 0
 15497                           
 15498 ;; *************** function _ADCC_Initialize *****************
 15499 ;; Defined at:
 15500 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;		None
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15518 ;;Total ram usage:        0 bytes
 15519 ;; Hardware stack levels used: 1
 15520 ;; Hardware stack levels required when called: 8
 15521 ;; This function calls:
 15522 ;;		Nothing
 15523 ;; This function is called by:
 15524 ;;		_SYSTEM_Initialize
 15525 ;; This function uses a non-reentrant model
 15526 ;;
 15527                           
 15528                           	psect	text76
 15529  005590                     __ptext76:
 15530                           	callstack 0
 15531  005590                     _ADCC_Initialize:
 15532                           	callstack 21
 15533  005590                     
 15534                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15535  005590  0E00               	movlw	0
 15536  005592  013E               	movlb	62	; () banked
 15537  005594  6FDE               	movwf	222,b	;volatile
 15538                           
 15539                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15540  005596  0E00               	movlw	0
 15541  005598  6FDF               	movwf	223,b	;volatile
 15542                           
 15543                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15544  00559A  0E00               	movlw	0
 15545  00559C  6FE0               	movwf	224,b	;volatile
 15546                           
 15547                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15548  00559E  0E00               	movlw	0
 15549  0055A0  6FE1               	movwf	225,b	;volatile
 15550                           
 15551                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15552  0055A2  0E00               	movlw	0
 15553  0055A4  6FE4               	movwf	228,b	;volatile
 15554                           
 15555                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15556  0055A6  0E00               	movlw	0
 15557  0055A8  6FE5               	movwf	229,b	;volatile
 15558                           
 15559                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15560  0055AA  0E00               	movlw	0
 15561  0055AC  6FEA               	movwf	234,b	;volatile
 15562                           
 15563                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15564  0055AE  0E00               	movlw	0
 15565  0055B0  6FEC               	movwf	236,b	;volatile
 15566                           
 15567                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15568  0055B2  0E00               	movlw	0
 15569  0055B4  6FF1               	movwf	241,b	;volatile
 15570                           
 15571                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15572  0055B6  0E58               	movlw	88
 15573  0055B8  6FF3               	movwf	243,b	;volatile
 15574                           
 15575                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15576  0055BA  0E02               	movlw	2
 15577  0055BC  6FF4               	movwf	244,b	;volatile
 15578                           
 15579                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15580  0055BE  0E00               	movlw	0
 15581  0055C0  6FF5               	movwf	245,b	;volatile
 15582                           
 15583                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15584  0055C2  0E00               	movlw	0
 15585  0055C4  6FF6               	movwf	246,b	;volatile
 15586                           
 15587                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15588  0055C6  0E00               	movlw	0
 15589  0055C8  6FF7               	movwf	247,b	;volatile
 15590                           
 15591                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15592  0055CA  0E00               	movlw	0
 15593  0055CC  6FF9               	movwf	249,b	;volatile
 15594                           
 15595                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15596  0055CE  0E00               	movlw	0
 15597  0055D0  6FFA               	movwf	250,b	;volatile
 15598                           
 15599                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15600  0055D2  0E00               	movlw	0
 15601  0055D4  6FFB               	movwf	251,b	;volatile
 15602                           
 15603                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15604  0055D6  0E00               	movlw	0
 15605  0055D8  6FFC               	movwf	252,b	;volatile
 15606                           
 15607                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15608  0055DA  0E00               	movlw	0
 15609  0055DC  6FFD               	movwf	253,b	;volatile
 15610                           
 15611                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15612  0055DE  0E00               	movlw	0
 15613  0055E0  6FFE               	movwf	254,b	;volatile
 15614                           
 15615                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15616  0055E2  0E1F               	movlw	31
 15617  0055E4  6FFF               	movwf	255,b	;volatile
 15618                           
 15619                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15620  0055E6  0E84               	movlw	132
 15621  0055E8  6FF8               	movwf	248,b	;volatile
 15622  0055EA                     
 15623                           ; BSR set to: 62
 15624  0055EA  0012               	return		;funcret
 15625  0055EC                     __end_of_ADCC_Initialize:
 15626                           	callstack 0
 15627                           
 15628 ;; *************** function _UART1_tx_vect_isr *****************
 15629 ;; Defined at:
 15630 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15631 ;; Parameters:    Size  Location     Type
 15632 ;;		None
 15633 ;; Auto vars:     Size  Location     Type
 15634 ;;		None
 15635 ;; Return value:  Size  Location     Type
 15636 ;;                  1    wreg      void 
 15637 ;; Registers used:
 15638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15639 ;; Tracked objects:
 15640 ;;		On entry : 0/0
 15641 ;;		On exit  : 0/0
 15642 ;;		Unchanged: 0/0
 15643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15648 ;;Total ram usage:        1 bytes
 15649 ;; Hardware stack levels used: 1
 15650 ;; Hardware stack levels required when called: 5
 15651 ;; This function calls:
 15652 ;;		Absolute function
 15653 ;;		_UART1_Transmit_ISR
 15654 ;; This function is called by:
 15655 ;;		Interrupt level 1
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           	psect	text77
 15660  0058B4                     __ptext77:
 15661                           	callstack 0
 15662  0058B4                     _UART1_tx_vect_isr:
 15663                           	callstack 13
 15664                           
 15665                           ; BSR set to: 62
 15666                           ;incstack = 0
 15667  0058B4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15668  0058BA                     
 15669                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15670  0058BA  0101               	movlb	1	; () banked
 15671  0058BC  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15672  0058BE  119D               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15673  0058C0  B4D8               	btfsc	status,2,c
 15674  0058C2  EF65  F02C         	goto	i1u714_21
 15675  0058C6  EF67  F02C         	goto	i1u714_20
 15676  0058CA                     i1u714_21:
 15677  0058CA  EF73  F02C         	goto	i1l324
 15678  0058CE                     i1u714_20:
 15679  0058CE                     
 15680                           ; BSR set to: 1
 15681                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15682  0058CE  D802               	call	i1u715_28
 15683  0058D0  EF73  F02C         	goto	i1u715_29
 15684  0058D4                     i1u715_28:
 15685  0058D4  0005               	push	
 15686  0058D6  6EFA               	movwf	pclath,c
 15687  0058D8  519C               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15688  0058DA  6EFD               	movwf	tosl,c
 15689  0058DC  519D               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15690  0058DE  6EFE               	movwf	tosh,c
 15691  0058E0  6AFF               	clrf	tosu,c
 15692  0058E2  50FA               	movf	pclath,w,c
 15693  0058E4  0012               	return		;indir
 15694  0058E6                     i1u715_29:
 15695  0058E6                     i1l324:
 15696  0058E6  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15697  0058EC  0011               	retfie		f
 15698  0058EE                     __end_of_UART1_tx_vect_isr:
 15699                           	callstack 0
 15700                           
 15701 ;; *************** function _UART1_Transmit_ISR *****************
 15702 ;; Defined at:
 15703 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15704 ;; Parameters:    Size  Location     Type
 15705 ;;		None
 15706 ;; Auto vars:     Size  Location     Type
 15707 ;;		None
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      void 
 15710 ;; Registers used:
 15711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15721 ;;Total ram usage:        0 bytes
 15722 ;; Hardware stack levels used: 1
 15723 ;; Hardware stack levels required when called: 4
 15724 ;; This function calls:
 15725 ;;		Nothing
 15726 ;; This function is called by:
 15727 ;;		_UART1_Initialize
 15728 ;;		_UART1_tx_vect_isr
 15729 ;; This function uses a non-reentrant model
 15730 ;;
 15731                           
 15732                           	psect	text78
 15733  0057F6                     __ptext78:
 15734                           	callstack 0
 15735  0057F6                     _UART1_Transmit_ISR:
 15736                           	callstack 13
 15737  0057F6                     
 15738                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15739  0057F6  0E08               	movlw	8
 15740  0057F8  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15741  0057FA  EF01  F02C         	goto	i1u695_21
 15742  0057FE  EF03  F02C         	goto	i1u695_20
 15743  005802                     i1u695_21:
 15744  005802  EF1A  F02C         	goto	i1l333
 15745  005806                     i1u695_20:
 15746  005806                     
 15747                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15748  005806  0E10               	movlw	low _uart1TxBuffer
 15749  005808  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15750  00580A  6ED9               	movwf	fsr2l,c
 15751  00580C  6ADA               	clrf	fsr2h,c
 15752  00580E  0E01               	movlw	high _uart1TxBuffer
 15753  005810  22DA               	addwfc	fsr2h,f,c
 15754  005812  50DF               	movf	indf2,w,c
 15755  005814  013D               	movlb	61	; () banked
 15756  005816  6FEA               	movwf	234,b	;volatile
 15757  005818                     
 15758                           ; BSR set to: 61
 15759  005818  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15760  00581A                     
 15761                           ; BSR set to: 61
 15762                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15763  00581A  0E07               	movlw	7
 15764  00581C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15765  00581E  EF13  F02C         	goto	i1u696_21
 15766  005822  EF15  F02C         	goto	i1u696_20
 15767  005826                     i1u696_21:
 15768  005826  EF17  F02C         	goto	i1l7185
 15769  00582A                     i1u696_20:
 15770  00582A                     
 15771                           ; BSR set to: 61
 15772                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15773  00582A  0E00               	movlw	0
 15774  00582C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15775  00582E                     i1l7185:
 15776                           
 15777                           ; BSR set to: 61
 15778                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15779  00582E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15780                           
 15781                           ;mcc_generated_files/uart1.c: 264:     }
 15782  005830  EF1C  F02C         	goto	i1l336
 15783  005834                     i1l333:
 15784                           
 15785                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15786  005834  0139               	movlb	57	; () banked
 15787  005836  9993               	bcf	147,4,b	;volatile
 15788  005838                     i1l336:
 15789  005838  0012               	return		;funcret
 15790  00583A                     __end_of_UART1_Transmit_ISR:
 15791                           	callstack 0
 15792                           
 15793 ;; *************** function _UART1_rx_vect_isr *****************
 15794 ;; Defined at:
 15795 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;		None
 15798 ;; Auto vars:     Size  Location     Type
 15799 ;;		None
 15800 ;; Return value:  Size  Location     Type
 15801 ;;                  1    wreg      void 
 15802 ;; Registers used:
 15803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15804 ;; Tracked objects:
 15805 ;;		On entry : 0/0
 15806 ;;		On exit  : 0/0
 15807 ;;		Unchanged: 0/0
 15808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15812 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15813 ;;Total ram usage:        1 bytes
 15814 ;; Hardware stack levels used: 1
 15815 ;; Hardware stack levels required when called: 7
 15816 ;; This function calls:
 15817 ;;		Absolute function
 15818 ;;		_UART1_Receive_ISR
 15819 ;; This function is called by:
 15820 ;;		Interrupt level 1
 15821 ;; This function uses a non-reentrant model
 15822 ;;
 15823                           
 15824                           	psect	text79
 15825  0058F0                     __ptext79:
 15826                           	callstack 0
 15827  0058F0                     _UART1_rx_vect_isr:
 15828                           	callstack 11
 15829                           
 15830                           ;incstack = 0
 15831  0058F0  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15832  0058F6                     
 15833                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15834  0058F6  0101               	movlb	1	; () banked
 15835  0058F8  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15836  0058FA  119F               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15837  0058FC  B4D8               	btfsc	status,2,c
 15838  0058FE  EF83  F02C         	goto	i1u716_21
 15839  005902  EF85  F02C         	goto	i1u716_20
 15840  005906                     i1u716_21:
 15841  005906  EF91  F02C         	goto	i1l330
 15842  00590A                     i1u716_20:
 15843  00590A                     
 15844                           ; BSR set to: 1
 15845                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15846  00590A  D802               	call	i1u717_28
 15847  00590C  EF91  F02C         	goto	i1u717_29
 15848  005910                     i1u717_28:
 15849  005910  0005               	push	
 15850  005912  6EFA               	movwf	pclath,c
 15851  005914  519E               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15852  005916  6EFD               	movwf	tosl,c
 15853  005918  519F               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15854  00591A  6EFE               	movwf	tosh,c
 15855  00591C  6AFF               	clrf	tosu,c
 15856  00591E  50FA               	movf	pclath,w,c
 15857  005920  0012               	return		;indir
 15858  005922                     i1u717_29:
 15859  005922                     i1l330:
 15860  005922  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15861  005928  0011               	retfie		f
 15862  00592A                     __end_of_UART1_rx_vect_isr:
 15863                           	callstack 0
 15864                           
 15865 ;; *************** function _UART1_Receive_ISR *****************
 15866 ;; Defined at:
 15867 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15868 ;; Parameters:    Size  Location     Type
 15869 ;;		None
 15870 ;; Auto vars:     Size  Location     Type
 15871 ;;		None
 15872 ;; Return value:  Size  Location     Type
 15873 ;;                  1    wreg      void 
 15874 ;; Registers used:
 15875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15876 ;; Tracked objects:
 15877 ;;		On entry : 0/0
 15878 ;;		On exit  : 0/0
 15879 ;;		Unchanged: 0/0
 15880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;Total ram usage:        0 bytes
 15886 ;; Hardware stack levels used: 1
 15887 ;; Hardware stack levels required when called: 6
 15888 ;; This function calls:
 15889 ;;		Absolute function
 15890 ;;		_UART1_DefaultErrorHandler
 15891 ;;		_UART1_DefaultFramingErrorHandler
 15892 ;;		_UART1_DefaultOverrunErrorHandler
 15893 ;;		_UART1_RxDataHandler
 15894 ;; This function is called by:
 15895 ;;		_UART1_Initialize
 15896 ;;		_UART1_rx_vect_isr
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           	psect	text80
 15901  004F0C                     __ptext80:
 15902                           	callstack 0
 15903  004F0C                     _UART1_Receive_ISR:
 15904                           	callstack 11
 15905  004F0C                     
 15906                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15907  004F0C  0E00               	movlw	low _uart1RxStatusBuffer
 15908  004F0E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15909  004F10  6ED9               	movwf	fsr2l,c
 15910  004F12  6ADA               	clrf	fsr2h,c
 15911  004F14  0E01               	movlw	high _uart1RxStatusBuffer
 15912  004F16  22DA               	addwfc	fsr2h,f,c
 15913  004F18  0E00               	movlw	0
 15914  004F1A  6EDF               	movwf	indf2,c
 15915  004F1C                     
 15916                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15917  004F1C  013D               	movlb	61	; () banked
 15918  004F1E  A7F9               	btfss	249,3,b	;volatile
 15919  004F20  EF94  F027         	goto	i1u697_21
 15920  004F24  EF96  F027         	goto	i1u697_20
 15921  004F28                     i1u697_21:
 15922  004F28  EFAA  F027         	goto	i1l7195
 15923  004F2C                     i1u697_20:
 15924  004F2C                     
 15925                           ; BSR set to: 61
 15926                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15927  004F2C  0E00               	movlw	low _uart1RxStatusBuffer
 15928  004F2E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15929  004F30  6ED9               	movwf	fsr2l,c
 15930  004F32  6ADA               	clrf	fsr2h,c
 15931  004F34  0E01               	movlw	high _uart1RxStatusBuffer
 15932  004F36  22DA               	addwfc	fsr2h,f,c
 15933  004F38  0101               	movlb	1	; () banked
 15934  004F3A  82DF               	bsf	indf2,1,c
 15935  004F3C                     
 15936                           ; BSR set to: 1
 15937                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15938  004F3C  D802               	call	i1u698_28
 15939  004F3E  EFAA  F027         	goto	i1u698_29
 15940  004F42                     i1u698_28:
 15941  004F42  0005               	push	
 15942  004F44  6EFA               	movwf	pclath,c
 15943  004F46  519A               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15944  004F48  6EFD               	movwf	tosl,c
 15945  004F4A  519B               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15946  004F4C  6EFE               	movwf	tosh,c
 15947  004F4E  6AFF               	clrf	tosu,c
 15948  004F50  50FA               	movf	pclath,w,c
 15949  004F52  0012               	return		;indir
 15950  004F54                     i1u698_29:
 15951  004F54                     i1l7195:
 15952                           
 15953                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15954  004F54  013D               	movlb	61	; () banked
 15955  004F56  A3F9               	btfss	249,1,b	;volatile
 15956  004F58  EFB0  F027         	goto	i1u699_21
 15957  004F5C  EFB2  F027         	goto	i1u699_20
 15958  004F60                     i1u699_21:
 15959  004F60  EFC6  F027         	goto	i1l7201
 15960  004F64                     i1u699_20:
 15961  004F64                     
 15962                           ; BSR set to: 61
 15963                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15964  004F64  0E00               	movlw	low _uart1RxStatusBuffer
 15965  004F66  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15966  004F68  6ED9               	movwf	fsr2l,c
 15967  004F6A  6ADA               	clrf	fsr2h,c
 15968  004F6C  0E01               	movlw	high _uart1RxStatusBuffer
 15969  004F6E  22DA               	addwfc	fsr2h,f,c
 15970  004F70  0101               	movlb	1	; () banked
 15971  004F72  84DF               	bsf	indf2,2,c
 15972  004F74                     
 15973                           ; BSR set to: 1
 15974                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15975  004F74  D802               	call	i1u700_28
 15976  004F76  EFC6  F027         	goto	i1u700_29
 15977  004F7A                     i1u700_28:
 15978  004F7A  0005               	push	
 15979  004F7C  6EFA               	movwf	pclath,c
 15980  004F7E  5198               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15981  004F80  6EFD               	movwf	tosl,c
 15982  004F82  5199               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15983  004F84  6EFE               	movwf	tosh,c
 15984  004F86  6AFF               	clrf	tosu,c
 15985  004F88  50FA               	movf	pclath,w,c
 15986  004F8A  0012               	return		;indir
 15987  004F8C                     i1u700_29:
 15988  004F8C                     i1l7201:
 15989                           
 15990                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15991  004F8C  0E00               	movlw	low _uart1RxStatusBuffer
 15992  004F8E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15993  004F90  6ED9               	movwf	fsr2l,c
 15994  004F92  6ADA               	clrf	fsr2h,c
 15995  004F94  0E01               	movlw	high _uart1RxStatusBuffer
 15996  004F96  22DA               	addwfc	fsr2h,f,c
 15997  004F98  50DF               	movf	indf2,w,c
 15998  004F9A  B4D8               	btfsc	status,2,c
 15999  004F9C  EFD2  F027         	goto	i1u701_21
 16000  004FA0  EFD4  F027         	goto	i1u701_20
 16001  004FA4                     i1u701_21:
 16002  004FA4  EFE3  F027         	goto	i1l7205
 16003  004FA8                     i1u701_20:
 16004  004FA8                     
 16005                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 16006  004FA8  D802               	call	i1u702_28
 16007  004FAA  EFE1  F027         	goto	i1u702_29
 16008  004FAE                     i1u702_28:
 16009  004FAE  0005               	push	
 16010  004FB0  6EFA               	movwf	pclath,c
 16011  004FB2  0101               	movlb	1	; () banked
 16012  004FB4  5196               	movf	_UART1_ErrorHandler& (0+255),w,b
 16013  004FB6  6EFD               	movwf	tosl,c
 16014  004FB8  5197               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 16015  004FBA  6EFE               	movwf	tosh,c
 16016  004FBC  6AFF               	clrf	tosu,c
 16017  004FBE  50FA               	movf	pclath,w,c
 16018  004FC0  0012               	return		;indir
 16019  004FC2                     i1u702_29:
 16020                           
 16021                           ;mcc_generated_files/uart1.c: 290:     } else {
 16022  004FC2  EFE5  F027         	goto	i1l343
 16023  004FC6                     i1l7205:
 16024                           
 16025                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 16026  004FC6  ECB0  F02E         	call	_UART1_RxDataHandler	;wreg free
 16027  004FCA                     i1l343:
 16028  004FCA  0012               	return		;funcret
 16029  004FCC                     __end_of_UART1_Receive_ISR:
 16030                           	callstack 0
 16031                           
 16032 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 16033 ;; Defined at:
 16034 ;;		line 309 in file "mcc_generated_files/uart1.c"
 16035 ;; Parameters:    Size  Location     Type
 16036 ;;		None
 16037 ;; Auto vars:     Size  Location     Type
 16038 ;;		None
 16039 ;; Return value:  Size  Location     Type
 16040 ;;                  1    wreg      void 
 16041 ;; Registers used:
 16042 ;;		None
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/0
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16052 ;;Total ram usage:        0 bytes
 16053 ;; Hardware stack levels used: 1
 16054 ;; Hardware stack levels required when called: 4
 16055 ;; This function calls:
 16056 ;;		Nothing
 16057 ;; This function is called by:
 16058 ;;		_UART1_Initialize
 16059 ;;		_UART1_Receive_ISR
 16060 ;; This function uses a non-reentrant model
 16061 ;;
 16062                           
 16063                           	psect	text81
 16064  005FA4                     __ptext81:
 16065                           	callstack 0
 16066  005FA4                     _UART1_DefaultOverrunErrorHandler:
 16067                           	callstack 12
 16068  005FA4  0012               	return		;funcret
 16069  005FA6                     __end_of_UART1_DefaultOverrunErrorHandler:
 16070                           	callstack 0
 16071                           
 16072 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 16073 ;; Defined at:
 16074 ;;		line 307 in file "mcc_generated_files/uart1.c"
 16075 ;; Parameters:    Size  Location     Type
 16076 ;;		None
 16077 ;; Auto vars:     Size  Location     Type
 16078 ;;		None
 16079 ;; Return value:  Size  Location     Type
 16080 ;;                  1    wreg      void 
 16081 ;; Registers used:
 16082 ;;		None
 16083 ;; Tracked objects:
 16084 ;;		On entry : 0/0
 16085 ;;		On exit  : 0/0
 16086 ;;		Unchanged: 0/0
 16087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16092 ;;Total ram usage:        0 bytes
 16093 ;; Hardware stack levels used: 1
 16094 ;; Hardware stack levels required when called: 4
 16095 ;; This function calls:
 16096 ;;		Nothing
 16097 ;; This function is called by:
 16098 ;;		_UART1_Initialize
 16099 ;;		_UART1_Receive_ISR
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           
 16103                           	psect	text82
 16104  005FA6                     __ptext82:
 16105                           	callstack 0
 16106  005FA6                     _UART1_DefaultFramingErrorHandler:
 16107                           	callstack 12
 16108  005FA6  0012               	return		;funcret
 16109  005FA8                     __end_of_UART1_DefaultFramingErrorHandler:
 16110                           	callstack 0
 16111                           
 16112 ;; *************** function _UART1_DefaultErrorHandler *****************
 16113 ;; Defined at:
 16114 ;;		line 311 in file "mcc_generated_files/uart1.c"
 16115 ;; Parameters:    Size  Location     Type
 16116 ;;		None
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;		None
 16119 ;; Return value:  Size  Location     Type
 16120 ;;                  1    wreg      void 
 16121 ;; Registers used:
 16122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/0
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16132 ;;Total ram usage:        0 bytes
 16133 ;; Hardware stack levels used: 1
 16134 ;; Hardware stack levels required when called: 5
 16135 ;; This function calls:
 16136 ;;		_UART1_RxDataHandler
 16137 ;; This function is called by:
 16138 ;;		_UART1_Initialize
 16139 ;;		_UART1_Receive_ISR
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           	psect	text83
 16144  005F9E                     __ptext83:
 16145                           	callstack 0
 16146  005F9E                     _UART1_DefaultErrorHandler:
 16147                           	callstack 11
 16148  005F9E                     
 16149                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 16150  005F9E  ECB0  F02E         	call	_UART1_RxDataHandler	;wreg free
 16151  005FA2  0012               	return		;funcret
 16152  005FA4                     __end_of_UART1_DefaultErrorHandler:
 16153                           	callstack 0
 16154                           
 16155 ;; *************** function _UART1_RxDataHandler *****************
 16156 ;; Defined at:
 16157 ;;		line 297 in file "mcc_generated_files/uart1.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;		None
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;		None
 16162 ;; Return value:  Size  Location     Type
 16163 ;;                  1    wreg      void 
 16164 ;; Registers used:
 16165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16166 ;; Tracked objects:
 16167 ;;		On entry : 0/0
 16168 ;;		On exit  : 0/0
 16169 ;;		Unchanged: 0/0
 16170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16175 ;;Total ram usage:        0 bytes
 16176 ;; Hardware stack levels used: 1
 16177 ;; Hardware stack levels required when called: 4
 16178 ;; This function calls:
 16179 ;;		Nothing
 16180 ;; This function is called by:
 16181 ;;		_UART1_Receive_ISR
 16182 ;;		_UART1_DefaultErrorHandler
 16183 ;; This function uses a non-reentrant model
 16184 ;;
 16185                           
 16186                           	psect	text84
 16187  005D60                     __ptext84:
 16188                           	callstack 0
 16189  005D60                     _UART1_RxDataHandler:
 16190                           	callstack 12
 16191  005D60                     
 16192                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 16193  005D60  0E08               	movlw	low _uart1RxBuffer
 16194  005D62  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 16195  005D64  6ED9               	movwf	fsr2l,c
 16196  005D66  6ADA               	clrf	fsr2h,c
 16197  005D68  0E01               	movlw	high _uart1RxBuffer
 16198  005D6A  22DA               	addwfc	fsr2h,f,c
 16199  005D6C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16200  005D72  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 16201  005D74                     
 16202                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 16203  005D74  0E07               	movlw	7
 16204  005D76  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 16205  005D78  EFC0  F02E         	goto	i1u634_21
 16206  005D7C  EFC2  F02E         	goto	i1u634_20
 16207  005D80                     i1u634_21:
 16208  005D80  EFC4  F02E         	goto	i1l6587
 16209  005D84                     i1u634_20:
 16210  005D84                     
 16211                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 16212  005D84  0E00               	movlw	0
 16213  005D86  6E45               	movwf	_uart1RxHead^0,c	;volatile
 16214  005D88                     i1l6587:
 16215                           
 16216                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 16217  005D88  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 16218  005D8A  0012               	return		;funcret
 16219  005D8C                     __end_of_UART1_RxDataHandler:
 16220                           	callstack 0
 16221                           
 16222 ;; *************** function _TMR4_ISR *****************
 16223 ;; Defined at:
 16224 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;		None
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;		None
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      void 
 16231 ;; Registers used:
 16232 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16240 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16242 ;;Total ram usage:        1 bytes
 16243 ;; Hardware stack levels used: 1
 16244 ;; Hardware stack levels required when called: 6
 16245 ;; This function calls:
 16246 ;;		_TMR4_CallBack
 16247 ;; This function is called by:
 16248 ;;		Interrupt level 1
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           	psect	text85
 16253  0059D4                     __ptext85:
 16254                           	callstack 0
 16255  0059D4                     _TMR4_ISR:
 16256                           	callstack 12
 16257                           
 16258                           ;incstack = 0
 16259  0059D4  006F FF60  F013    	movff	status,??_TMR4_ISR
 16260  0059DA                     
 16261                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 16262  0059DA  0139               	movlb	57	; () banked
 16263  0059DC  91A7               	bcf	167,0,b	;volatile
 16264  0059DE                     
 16265                           ; BSR set to: 57
 16266                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 16267  0059DE  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 16268  0059E0  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 16269  0059E2  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 16270  0059E4  E109               	bnz	i1u722_20
 16271  0059E6  0E0A               	movlw	10
 16272  0059E8  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 16273  0059EA  A0D8               	btfss	status,0,c
 16274  0059EC  EFFA  F02C         	goto	i1u722_21
 16275  0059F0  EFFC  F02C         	goto	i1u722_20
 16276  0059F4                     i1u722_21:
 16277  0059F4  EF02  F02D         	goto	i1l688
 16278  0059F8                     i1u722_20:
 16279  0059F8                     
 16280                           ; BSR set to: 57
 16281                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 16282  0059F8  EC6D  F02E         	call	_TMR4_CallBack	;wreg free
 16283  0059FC                     
 16284                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 16285  0059FC  0E00               	movlw	0
 16286  0059FE  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 16287  005A00  0E00               	movlw	0
 16288  005A02  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 16289  005A04                     i1l688:
 16290  005A04  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 16291  005A0A  0011               	retfie		f
 16292  005A0C                     __end_of_TMR4_ISR:
 16293                           	callstack 0
 16294                           
 16295 ;; *************** function _TMR4_CallBack *****************
 16296 ;; Defined at:
 16297 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 16298 ;; Parameters:    Size  Location     Type
 16299 ;;		None
 16300 ;; Auto vars:     Size  Location     Type
 16301 ;;		None
 16302 ;; Return value:  Size  Location     Type
 16303 ;;                  1    wreg      void 
 16304 ;; Registers used:
 16305 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16306 ;; Tracked objects:
 16307 ;;		On entry : 0/0
 16308 ;;		On exit  : 0/0
 16309 ;;		Unchanged: 0/0
 16310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;Total ram usage:        0 bytes
 16316 ;; Hardware stack levels used: 1
 16317 ;; Hardware stack levels required when called: 5
 16318 ;; This function calls:
 16319 ;;		Absolute function
 16320 ;;		_TMR4_10msISR
 16321 ;;		_TMR4_DefaultInterruptHandler
 16322 ;; This function is called by:
 16323 ;;		_TMR4_ISR
 16324 ;; This function uses a non-reentrant model
 16325 ;;
 16326                           
 16327                           	psect	text86
 16328  005CDA                     __ptext86:
 16329                           	callstack 0
 16330  005CDA                     _TMR4_CallBack:
 16331                           	callstack 12
 16332  005CDA                     
 16333                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16334  005CDA  0101               	movlb	1	; () banked
 16335  005CDC  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16336  005CDE  118B               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16337  005CE0  B4D8               	btfsc	status,2,c
 16338  005CE2  EF75  F02E         	goto	i1u706_21
 16339  005CE6  EF77  F02E         	goto	i1u706_20
 16340  005CEA                     i1u706_21:
 16341  005CEA  EF83  F02E         	goto	i1l692
 16342  005CEE                     i1u706_20:
 16343  005CEE                     
 16344                           ; BSR set to: 1
 16345                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16346  005CEE  D802               	call	i1u707_28
 16347  005CF0  EF83  F02E         	goto	i1u707_29
 16348  005CF4                     i1u707_28:
 16349  005CF4  0005               	push	
 16350  005CF6  6EFA               	movwf	pclath,c
 16351  005CF8  518A               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16352  005CFA  6EFD               	movwf	tosl,c
 16353  005CFC  518B               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16354  005CFE  6EFE               	movwf	tosh,c
 16355  005D00  6AFF               	clrf	tosu,c
 16356  005D02  50FA               	movf	pclath,w,c
 16357  005D04  0012               	return		;indir
 16358  005D06                     i1u707_29:
 16359  005D06                     i1l692:
 16360  005D06  0012               	return		;funcret
 16361  005D08                     __end_of_TMR4_CallBack:
 16362                           	callstack 0
 16363                           
 16364 ;; *************** function _TMR4_10msISR *****************
 16365 ;; Defined at:
 16366 ;;		line 62 in file "main.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;		None
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;		None
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  1    wreg      void 
 16373 ;; Registers used:
 16374 ;;		status,2, status,0
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;Total ram usage:        0 bytes
 16385 ;; Hardware stack levels used: 1
 16386 ;; Hardware stack levels required when called: 4
 16387 ;; This function calls:
 16388 ;;		Nothing
 16389 ;; This function is called by:
 16390 ;;		_main
 16391 ;;		_TMR4_CallBack
 16392 ;; This function uses a non-reentrant model
 16393 ;;
 16394                           
 16395                           	psect	text87
 16396  005F94                     __ptext87:
 16397                           	callstack 0
 16398  005F94                     _TMR4_10msISR:
 16399                           	callstack 12
 16400  005F94                     
 16401                           ;main.c: 63:     ++cycle10ms;
 16402  005F94  0100               	movlb	0	; () banked
 16403  005F96  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16404                           
 16405                           ;main.c: 64:     ++roundTimeCount;
 16406  005F98  4A3E               	infsnz	_roundTimeCount^0,f,c	;volatile
 16407  005F9A  2A3F               	incf	(_roundTimeCount+1)^0,f,c	;volatile
 16408  005F9C                     
 16409                           ; BSR set to: 0
 16410  005F9C  0012               	return		;funcret
 16411  005F9E                     __end_of_TMR4_10msISR:
 16412                           	callstack 0
 16413                           
 16414 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16415 ;; Defined at:
 16416 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;		None
 16419 ;; Auto vars:     Size  Location     Type
 16420 ;;		None
 16421 ;; Return value:  Size  Location     Type
 16422 ;;                  1    wreg      void 
 16423 ;; Registers used:
 16424 ;;		None
 16425 ;; Tracked objects:
 16426 ;;		On entry : 0/0
 16427 ;;		On exit  : 0/0
 16428 ;;		Unchanged: 0/0
 16429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16434 ;;Total ram usage:        0 bytes
 16435 ;; Hardware stack levels used: 1
 16436 ;; Hardware stack levels required when called: 4
 16437 ;; This function calls:
 16438 ;;		Nothing
 16439 ;; This function is called by:
 16440 ;;		_TMR4_Initialize
 16441 ;;		_TMR4_CallBack
 16442 ;; This function uses a non-reentrant model
 16443 ;;
 16444                           
 16445                           	psect	text88
 16446  005FA8                     __ptext88:
 16447                           	callstack 0
 16448  005FA8                     _TMR4_DefaultInterruptHandler:
 16449                           	callstack 12
 16450  005FA8  0012               	return		;funcret
 16451  005FAA                     __end_of_TMR4_DefaultInterruptHandler:
 16452                           	callstack 0
 16453                           
 16454 ;; *************** function _Default_ISR *****************
 16455 ;; Defined at:
 16456 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16457 ;; Parameters:    Size  Location     Type
 16458 ;;		None
 16459 ;; Auto vars:     Size  Location     Type
 16460 ;;		None
 16461 ;; Return value:  Size  Location     Type
 16462 ;;                  1    wreg      void 
 16463 ;; Registers used:
 16464 ;;		None
 16465 ;; Tracked objects:
 16466 ;;		On entry : 0/0
 16467 ;;		On exit  : 0/0
 16468 ;;		Unchanged: 0/0
 16469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16474 ;;Total ram usage:        0 bytes
 16475 ;; Hardware stack levels used: 1
 16476 ;; This function calls:
 16477 ;;		Nothing
 16478 ;; This function is called by:
 16479 ;;		Interrupt level 2
 16480 ;; This function uses a non-reentrant model
 16481 ;;
 16482                           
 16483                           	psect	text89
 16484  005FAC                     __ptext89:
 16485                           	callstack 0
 16486  005FAC                     _Default_ISR:
 16487                           	callstack 14
 16488  005FAC  0011               	retfie		f
 16489  005FAE                     __end_of_Default_ISR:
 16490                           	callstack 0
 16491                           
 16492 ;; *************** function _CCP3_CaptureISR *****************
 16493 ;; Defined at:
 16494 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16495 ;; Parameters:    Size  Location     Type
 16496 ;;		None
 16497 ;; Auto vars:     Size  Location     Type
 16498 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16499 ;; Return value:  Size  Location     Type
 16500 ;;                  1    wreg      void 
 16501 ;; Registers used:
 16502 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16503 ;; Tracked objects:
 16504 ;;		On entry : 0/0
 16505 ;;		On exit  : 0/0
 16506 ;;		Unchanged: 0/0
 16507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16512 ;;Total ram usage:        2 bytes
 16513 ;; Hardware stack levels used: 1
 16514 ;; Hardware stack levels required when called: 1
 16515 ;; This function calls:
 16516 ;;		Absolute function
 16517 ;;		_CCP3_DefaultCallBack
 16518 ;; This function is called by:
 16519 ;;		Interrupt level 2
 16520 ;; This function uses a non-reentrant model
 16521 ;;
 16522                           
 16523                           	psect	text90
 16524  005B80                     __ptext90:
 16525                           	callstack 0
 16526  005B80                     _CCP3_CaptureISR:
 16527                           	callstack 13
 16528  005B80                     
 16529                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16530  005B80  0139               	movlb	57	; () banked
 16531  005B82  93A9               	bcf	169,1,b	;volatile
 16532                           
 16533                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16534  005B84  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16535                           
 16536                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16537  005B8A  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16538  005B90                     
 16539                           ; BSR set to: 57
 16540                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16541  005B90  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16542  005B94  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16543  005B98  D802               	call	i2u718_48
 16544  005B9A  EFD9  F02D         	goto	i2u718_49
 16545  005B9E                     i2u718_48:
 16546  005B9E  0005               	push	
 16547  005BA0  6EFA               	movwf	pclath,c
 16548  005BA2  0101               	movlb	1	; () banked
 16549  005BA4  5194               	movf	_CCP3_CallBack& (0+255),w,b
 16550  005BA6  6EFD               	movwf	tosl,c
 16551  005BA8  5195               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16552  005BAA  6EFE               	movwf	tosh,c
 16553  005BAC  6AFF               	clrf	tosu,c
 16554  005BAE  50FA               	movf	pclath,w,c
 16555  005BB0  0012               	return		;indir
 16556  005BB2                     i2u718_49:
 16557  005BB2  0011               	retfie		f
 16558  005BB4                     __end_of_CCP3_CaptureISR:
 16559                           	callstack 0
 16560                           
 16561 ;; *************** function _CCP3_DefaultCallBack *****************
 16562 ;; Defined at:
 16563 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16566 ;; Auto vars:     Size  Location     Type
 16567 ;;		None
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  1    wreg      void 
 16570 ;; Registers used:
 16571 ;;		wreg, status,2, status,0
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16577 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;Total ram usage:        2 bytes
 16582 ;; Hardware stack levels used: 1
 16583 ;; This function calls:
 16584 ;;		Nothing
 16585 ;; This function is called by:
 16586 ;;		_CCP3_Initialize
 16587 ;;		_CCP3_CaptureISR
 16588 ;; This function uses a non-reentrant model
 16589 ;;
 16590                           
 16591                           	psect	text91
 16592  005A42                     __ptext91:
 16593                           	callstack 0
 16594  005A42                     _CCP3_DefaultCallBack:
 16595                           	callstack 13
 16596  005A42                     
 16597                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16598  005A42  AECD               	btfss	205,7,c	;volatile
 16599  005A44  EF26  F02D         	goto	i2u703_41
 16600  005A48  EF28  F02D         	goto	i2u703_40
 16601  005A4C                     i2u703_41:
 16602  005A4C  EF2E  F02D         	goto	i2l7211
 16603  005A50                     i2u703_40:
 16604  005A50                     
 16605                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16606  005A50  C001  F138         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16607  005A54  C002  F139         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16608                           
 16609                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16610  005A58  EF3B  F02D         	goto	i2l438
 16611  005A5C                     i2l7211:
 16612                           
 16613                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16614  005A5C  0101               	movlb	1	; () banked
 16615  005A5E  5138               	movf	_distLeftM& (0+255),w,b
 16616  005A60  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16617  005A62  0100               	movlb	0	; () banked
 16618  005A64  6FF5               	movwf	_distLeft& (0+255),b	;volatile
 16619  005A66  0101               	movlb	1	; () banked
 16620  005A68  5139               	movf	(_distLeftM+1)& (0+255),w,b
 16621  005A6A  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16622  005A6C  0100               	movlb	0	; () banked
 16623  005A6E  6FF6               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16624  005A70                     
 16625                           ; BSR set to: 0
 16626                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16627  005A70  90D8               	bcf	status,0,c
 16628  005A72  33F6               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16629  005A74  33F5               	rrcf	_distLeft& (0+255),f,b	;volatile
 16630  005A76                     i2l438:
 16631  005A76  0012               	return		;funcret
 16632  005A78                     __end_of_CCP3_DefaultCallBack:
 16633                           	callstack 0
 16634                           
 16635 ;; *************** function _CCP4_CaptureISR *****************
 16636 ;; Defined at:
 16637 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16655 ;;Total ram usage:        2 bytes
 16656 ;; Hardware stack levels used: 1
 16657 ;; Hardware stack levels required when called: 1
 16658 ;; This function calls:
 16659 ;;		Absolute function
 16660 ;;		_CCP4_DefaultCallBack
 16661 ;; This function is called by:
 16662 ;;		Interrupt level 2
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666                           	psect	text92
 16667  005BB4                     __ptext92:
 16668                           	callstack 0
 16669  005BB4                     _CCP4_CaptureISR:
 16670                           	callstack 13
 16671  005BB4                     
 16672                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16673  005BB4  0139               	movlb	57	; () banked
 16674  005BB6  91AA               	bcf	170,0,b	;volatile
 16675                           
 16676                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16677  005BB8  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16678                           
 16679                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16680  005BBE  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16681  005BC4                     
 16682                           ; BSR set to: 57
 16683                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16684  005BC4  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16685  005BC8  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16686  005BCC  D802               	call	i2u719_48
 16687  005BCE  EFF3  F02D         	goto	i2u719_49
 16688  005BD2                     i2u719_48:
 16689  005BD2  0005               	push	
 16690  005BD4  6EFA               	movwf	pclath,c
 16691  005BD6  0101               	movlb	1	; () banked
 16692  005BD8  5192               	movf	_CCP4_CallBack& (0+255),w,b
 16693  005BDA  6EFD               	movwf	tosl,c
 16694  005BDC  5193               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16695  005BDE  6EFE               	movwf	tosh,c
 16696  005BE0  6AFF               	clrf	tosu,c
 16697  005BE2  50FA               	movf	pclath,w,c
 16698  005BE4  0012               	return		;indir
 16699  005BE6                     i2u719_49:
 16700  005BE6  0011               	retfie		f
 16701  005BE8                     __end_of_CCP4_CaptureISR:
 16702                           	callstack 0
 16703                           
 16704 ;; *************** function _CCP4_DefaultCallBack *****************
 16705 ;; Defined at:
 16706 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  1    wreg      void 
 16713 ;; Registers used:
 16714 ;;		wreg, status,2, status,0
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16724 ;;Total ram usage:        2 bytes
 16725 ;; Hardware stack levels used: 1
 16726 ;; This function calls:
 16727 ;;		Nothing
 16728 ;; This function is called by:
 16729 ;;		_CCP4_Initialize
 16730 ;;		_CCP4_CaptureISR
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           	psect	text93
 16735  005A78                     __ptext93:
 16736                           	callstack 0
 16737  005A78                     _CCP4_DefaultCallBack:
 16738                           	callstack 13
 16739  005A78                     
 16740                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16741  005A78  ACCD               	btfss	205,6,c	;volatile
 16742  005A7A  EF41  F02D         	goto	i2u704_41
 16743  005A7E  EF43  F02D         	goto	i2u704_40
 16744  005A82                     i2u704_41:
 16745  005A82  EF49  F02D         	goto	i2l7219
 16746  005A86                     i2u704_40:
 16747  005A86                     
 16748                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16749  005A86  C005  F136         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16750  005A8A  C006  F137         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16751                           
 16752                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16753  005A8E  EF56  F02D         	goto	i2l476
 16754  005A92                     i2l7219:
 16755                           
 16756                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16757  005A92  0101               	movlb	1	; () banked
 16758  005A94  5136               	movf	_distRightM& (0+255),w,b
 16759  005A96  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16760  005A98  0100               	movlb	0	; () banked
 16761  005A9A  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16762  005A9C  0101               	movlb	1	; () banked
 16763  005A9E  5137               	movf	(_distRightM+1)& (0+255),w,b
 16764  005AA0  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16765  005AA2  0100               	movlb	0	; () banked
 16766  005AA4  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16767  005AA6                     
 16768                           ; BSR set to: 0
 16769                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16770  005AA6  90D8               	bcf	status,0,c
 16771  005AA8  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16772  005AAA  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16773  005AAC                     i2l476:
 16774  005AAC  0012               	return		;funcret
 16775  005AAE                     __end_of_CCP4_DefaultCallBack:
 16776                           	callstack 0
 16777                           
 16778 ;; *************** function _TMR5_GATE_ISR *****************
 16779 ;; Defined at:
 16780 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;		None
 16783 ;; Auto vars:     Size  Location     Type
 16784 ;;		None
 16785 ;; Return value:  Size  Location     Type
 16786 ;;                  1    wreg      void 
 16787 ;; Registers used:
 16788 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16789 ;; Tracked objects:
 16790 ;;		On entry : 0/0
 16791 ;;		On exit  : 0/0
 16792 ;;		Unchanged: 0/0
 16793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16798 ;;Total ram usage:        0 bytes
 16799 ;; Hardware stack levels used: 1
 16800 ;; Hardware stack levels required when called: 3
 16801 ;; This function calls:
 16802 ;;		Absolute function
 16803 ;;		_TMR5_DefaultGateInterruptHandler
 16804 ;; This function is called by:
 16805 ;;		Interrupt level 2
 16806 ;; This function uses a non-reentrant model
 16807 ;;
 16808                           
 16809                           	psect	text94
 16810  005C1C                     __ptext94:
 16811                           	callstack 0
 16812  005C1C                     _TMR5_GATE_ISR:
 16813                           	callstack 11
 16814  005C1C                     
 16815                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16816  005C1C  0139               	movlb	57	; () banked
 16817  005C1E  9FA8               	bcf	168,7,b	;volatile
 16818  005C20                     
 16819                           ; BSR set to: 57
 16820                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16821  005C20  0101               	movlb	1	; () banked
 16822  005C22  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16823  005C24  118F               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16824  005C26  B4D8               	btfsc	status,2,c
 16825  005C28  EF18  F02E         	goto	i2u720_41
 16826  005C2C  EF1A  F02E         	goto	i2u720_40
 16827  005C30                     i2u720_41:
 16828  005C30  EF26  F02E         	goto	i2l552
 16829  005C34                     i2u720_40:
 16830  005C34                     
 16831                           ; BSR set to: 1
 16832                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16833  005C34  D802               	call	i2u721_48
 16834  005C36  EF26  F02E         	goto	i2u721_49
 16835  005C3A                     i2u721_48:
 16836  005C3A  0005               	push	
 16837  005C3C  6EFA               	movwf	pclath,c
 16838  005C3E  518E               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16839  005C40  6EFD               	movwf	tosl,c
 16840  005C42  518F               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16841  005C44  6EFE               	movwf	tosh,c
 16842  005C46  6AFF               	clrf	tosu,c
 16843  005C48  50FA               	movf	pclath,w,c
 16844  005C4A  0012               	return		;indir
 16845  005C4C                     i2u721_49:
 16846  005C4C                     i2l552:
 16847  005C4C  0011               	retfie		f
 16848  005C4E                     __end_of_TMR5_GATE_ISR:
 16849                           	callstack 0
 16850                           
 16851 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16852 ;; Defined at:
 16853 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16854 ;; Parameters:    Size  Location     Type
 16855 ;;		None
 16856 ;; Auto vars:     Size  Location     Type
 16857 ;;		None
 16858 ;; Return value:  Size  Location     Type
 16859 ;;                  1    wreg      void 
 16860 ;; Registers used:
 16861 ;;		wreg, status,2, status,0, cstack
 16862 ;; Tracked objects:
 16863 ;;		On entry : 0/0
 16864 ;;		On exit  : 0/0
 16865 ;;		Unchanged: 0/0
 16866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16871 ;;Total ram usage:        0 bytes
 16872 ;; Hardware stack levels used: 1
 16873 ;; Hardware stack levels required when called: 2
 16874 ;; This function calls:
 16875 ;;		_TMR5_ReadTimer
 16876 ;;		_TMR5_Reload
 16877 ;; This function is called by:
 16878 ;;		_TMR5_Initialize
 16879 ;;		_TMR5_GATE_ISR
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883                           	psect	text95
 16884  005E70                     __ptext95:
 16885                           	callstack 0
 16886  005E70                     _TMR5_DefaultGateInterruptHandler:
 16887                           	callstack 11
 16888  005E70                     
 16889                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16890  005E70  EC16  F02F         	call	_TMR5_ReadTimer	;wreg free
 16891  005E74  C009  F0FD         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16892  005E78  C00A  F0FE         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16893  005E7C                     
 16894                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16895  005E7C  0100               	movlb	0	; () banked
 16896  005E7E  90D8               	bcf	status,0,c
 16897  005E80  33FE               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16898  005E82  33FD               	rrcf	_distFront& (0+255),f,b	;volatile
 16899  005E84                     
 16900                           ; BSR set to: 0
 16901                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16902  005E84  EC91  F02F         	call	_TMR5_Reload	;wreg free
 16903  005E88                     
 16904                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16905  005E88  0139               	movlb	57	; () banked
 16906  005E8A  9FA8               	bcf	168,7,b	;volatile
 16907  005E8C                     
 16908                           ; BSR set to: 57
 16909  005E8C  0012               	return		;funcret
 16910  005E8E                     __end_of_TMR5_DefaultGateInterruptHandler:
 16911                           	callstack 0
 16912                           
 16913 ;; *************** function _TMR5_Reload *****************
 16914 ;; Defined at:
 16915 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;		None
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;		None
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  1    wreg      void 
 16922 ;; Registers used:
 16923 ;;		wreg, status,2, cstack
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16933 ;;Total ram usage:        0 bytes
 16934 ;; Hardware stack levels used: 1
 16935 ;; Hardware stack levels required when called: 1
 16936 ;; This function calls:
 16937 ;;		_TMR5_WriteTimer
 16938 ;; This function is called by:
 16939 ;;		_TMR5_DefaultGateInterruptHandler
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           	psect	text96
 16944  005F22                     __ptext96:
 16945                           	callstack 0
 16946  005F22                     _TMR5_Reload:
 16947                           	callstack 11
 16948  005F22                     
 16949                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16950  005F22  C190  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16951  005F26  C191  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16952  005F2A  ECC6  F02E         	call	_TMR5_WriteTimer	;wreg free
 16953  005F2E  0012               	return		;funcret
 16954  005F30                     __end_of_TMR5_Reload:
 16955                           	callstack 0
 16956                           
 16957 ;; *************** function _TMR5_WriteTimer *****************
 16958 ;; Defined at:
 16959 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16960 ;; Parameters:    Size  Location     Type
 16961 ;;  timerVal        2    8[COMRAM] unsigned short 
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;		None
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      void 
 16966 ;; Registers used:
 16967 ;;		wreg, status,2
 16968 ;; Tracked objects:
 16969 ;;		On entry : 0/0
 16970 ;;		On exit  : 0/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16977 ;;Total ram usage:        2 bytes
 16978 ;; Hardware stack levels used: 1
 16979 ;; This function calls:
 16980 ;;		Nothing
 16981 ;; This function is called by:
 16982 ;;		_TMR5_Reload
 16983 ;; This function uses a non-reentrant model
 16984 ;;
 16985                           
 16986                           	psect	text97
 16987  005D8C                     __ptext97:
 16988                           	callstack 0
 16989  005D8C                     _TMR5_WriteTimer:
 16990                           	callstack 11
 16991  005D8C                     
 16992                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16993  005D8C  A49A               	btfss	154,2,c	;volatile
 16994  005D8E  EFCB  F02E         	goto	i2u635_41
 16995  005D92  EFCD  F02E         	goto	i2u635_40
 16996  005D96                     i2u635_41:
 16997  005D96  EFD6  F02E         	goto	i2l6605
 16998  005D9A                     i2u635_40:
 16999  005D9A                     
 17000                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 17001  005D9A  909A               	bcf	154,0,c	;volatile
 17002  005D9C                     
 17003                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 17004  005D9C  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17005  005D9E  6E99               	movwf	153,c	;volatile
 17006  005DA0                     
 17007                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 17008  005DA0  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17009  005DA6                     
 17010                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 17011  005DA6  809A               	bsf	154,0,c	;volatile
 17012                           
 17013                           ;mcc_generated_files/tmr5.c: 146:     }
 17014  005DA8  EFDB  F02E         	goto	i2l534
 17015  005DAC                     i2l6605:
 17016                           
 17017                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 17018  005DAC  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 17019  005DAE  6E99               	movwf	153,c	;volatile
 17020  005DB0                     
 17021                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 17022  005DB0  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 17023  005DB6                     i2l534:
 17024  005DB6  0012               	return		;funcret
 17025  005DB8                     __end_of_TMR5_WriteTimer:
 17026                           	callstack 0
 17027                           
 17028 ;; *************** function _TMR5_ReadTimer *****************
 17029 ;; Defined at:
 17030 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;		None
 17033 ;; Auto vars:     Size  Location     Type
 17034 ;;  readVal         2   12[COMRAM] unsigned short 
 17035 ;;  readValLow      1   15[COMRAM] unsigned char 
 17036 ;;  readValHigh     1   14[COMRAM] unsigned char 
 17037 ;; Return value:  Size  Location     Type
 17038 ;;                  2    8[COMRAM] unsigned short 
 17039 ;; Registers used:
 17040 ;;		wreg, status,2
 17041 ;; Tracked objects:
 17042 ;;		On entry : 0/0
 17043 ;;		On exit  : 0/0
 17044 ;;		Unchanged: 0/0
 17045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17049 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17050 ;;Total ram usage:        8 bytes
 17051 ;; Hardware stack levels used: 1
 17052 ;; This function calls:
 17053 ;;		Nothing
 17054 ;; This function is called by:
 17055 ;;		_TMR5_DefaultGateInterruptHandler
 17056 ;; This function uses a non-reentrant model
 17057 ;;
 17058                           
 17059                           	psect	text98
 17060  005E2C                     __ptext98:
 17061                           	callstack 0
 17062  005E2C                     _TMR5_ReadTimer:
 17063                           	callstack 12
 17064  005E2C                     
 17065                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 17066  005E2C  829A               	bsf	154,1,c	;volatile
 17067                           
 17068                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 17069  005E2E  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 17070                           
 17071                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 17072  005E34  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 17073  005E3A                     
 17074                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 17075  005E3A  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 17076  005E3C  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 17077  005E3E  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 17078  005E40  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 17079  005E42  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 17080  005E46                     
 17081                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 17082  005E46  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 17083  005E4A  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 17084  005E4E  0012               	return		;funcret
 17085  005E50                     __end_of_TMR5_ReadTimer:
 17086                           	callstack 0
 17087                           
 17088 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 17089 ;; Defined at:
 17090 ;;		line 192 in file "mcc_generated_files/smt1.c"
 17091 ;; Parameters:    Size  Location     Type
 17092 ;;		None
 17093 ;; Auto vars:     Size  Location     Type
 17094 ;;		None
 17095 ;; Return value:  Size  Location     Type
 17096 ;;                  1    wreg      void 
 17097 ;; Registers used:
 17098 ;;		wreg, status,2, status,0
 17099 ;; Tracked objects:
 17100 ;;		On entry : 0/0
 17101 ;;		On exit  : 0/0
 17102 ;;		Unchanged: 0/0
 17103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17108 ;;Total ram usage:        0 bytes
 17109 ;; Hardware stack levels used: 1
 17110 ;; This function calls:
 17111 ;;		Nothing
 17112 ;; This function is called by:
 17113 ;;		Interrupt level 2
 17114 ;; This function uses a non-reentrant model
 17115 ;;
 17116                           
 17117                           	psect	text99
 17118  005720                     __ptext99:
 17119                           	callstack 0
 17120  005720                     _SMT1_PR_ACQ_ISR:
 17121                           	callstack 14
 17122  005720                     
 17123                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 17124  005720  0139               	movlb	57	; () banked
 17125  005722  9DA1               	bcf	161,6,b	;volatile
 17126  005724                     
 17127                           ; BSR set to: 57
 17128                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 17129  005724  013F               	movlb	63	; () banked
 17130  005726  5115               	movf	21,w,b	;volatile
 17131  005728  6E48               	movwf	_smtPeriod^0,c	;volatile
 17132  00572A  5116               	movf	22,w,b	;volatile
 17133  00572C  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17134  00572E  5117               	movf	23,w,b	;volatile
 17135  005730  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17136  005732  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 17137  005734                     
 17138                           ; BSR set to: 63
 17139                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 17140  005734  013C               	movlb	60	; () banked
 17141  005736  AB60               	btfss	96,5,b	;volatile
 17142  005738  EFA0  F02B         	goto	i2u723_41
 17143  00573C  EFA2  F02B         	goto	i2u723_40
 17144  005740                     i2u723_41:
 17145  005740  EFAB  F02B         	goto	i2l7325
 17146  005744                     i2u723_40:
 17147  005744                     
 17148                           ; BSR set to: 60
 17149  005744  0E01               	movlw	1
 17150  005746  0101               	movlb	1	; () banked
 17151  005748  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17152  00574A  0E00               	movlw	0
 17153  00574C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17154  00574E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17155  005750  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17156  005752  EFB4  F02B         	goto	i2l856
 17157  005756                     i2l7325:
 17158                           
 17159                           ; BSR set to: 60
 17160  005756  0EFF               	movlw	255
 17161  005758  0101               	movlb	1	; () banked
 17162  00575A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17163  00575C  0EFF               	movlw	255
 17164  00575E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17165  005760  0EFF               	movlw	255
 17166  005762  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17167  005764  0EFF               	movlw	255
 17168  005766  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17169  005768                     i2l856:
 17170                           
 17171                           ; BSR set to: 1
 17172  005768  0011               	retfie		f
 17173  00576A                     __end_of_SMT1_PR_ACQ_ISR:
 17174                           	callstack 0
 17175                           
 17176 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 17177 ;; Defined at:
 17178 ;;		line 203 in file "mcc_generated_files/smt1.c"
 17179 ;; Parameters:    Size  Location     Type
 17180 ;;		None
 17181 ;; Auto vars:     Size  Location     Type
 17182 ;;		None
 17183 ;; Return value:  Size  Location     Type
 17184 ;;                  1    wreg      void 
 17185 ;; Registers used:
 17186 ;;		wreg, status,2, status,0
 17187 ;; Tracked objects:
 17188 ;;		On entry : 0/0
 17189 ;;		On exit  : 0/0
 17190 ;;		Unchanged: 0/0
 17191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17196 ;;Total ram usage:        0 bytes
 17197 ;; Hardware stack levels used: 1
 17198 ;; This function calls:
 17199 ;;		Nothing
 17200 ;; This function is called by:
 17201 ;;		Interrupt level 2
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           	psect	text100
 17206  0055EC                     __ptext100:
 17207                           	callstack 0
 17208  0055EC                     _SMT1_PW_ACQ_ISR:
 17209                           	callstack 14
 17210  0055EC                     
 17211                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 17212  0055EC  0139               	movlb	57	; () banked
 17213  0055EE  9FA1               	bcf	161,7,b	;volatile
 17214  0055F0                     
 17215                           ; BSR set to: 57
 17216                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 17217  0055F0  013F               	movlb	63	; () banked
 17218  0055F2  5118               	movf	24,w,b	;volatile
 17219  0055F4  0101               	movlb	1	; () banked
 17220  0055F6  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17221  0055F8  013F               	movlb	63	; () banked
 17222  0055FA  5119               	movf	25,w,b	;volatile
 17223  0055FC  0101               	movlb	1	; () banked
 17224  0055FE  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17225  005600  013F               	movlb	63	; () banked
 17226  005602  511A               	movf	26,w,b	;volatile
 17227  005604  0101               	movlb	1	; () banked
 17228  005606  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17229  005608  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 17230  00560A                     
 17231                           ; BSR set to: 1
 17232                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 17233  00560A  013C               	movlb	60	; () banked
 17234  00560C  AB60               	btfss	96,5,b	;volatile
 17235  00560E  EF0B  F02B         	goto	i2u724_41
 17236  005612  EF0D  F02B         	goto	i2u724_40
 17237  005616                     i2u724_41:
 17238  005616  EF16  F02B         	goto	i2l7335
 17239  00561A                     i2u724_40:
 17240  00561A                     
 17241                           ; BSR set to: 60
 17242  00561A  0E01               	movlw	1
 17243  00561C  0101               	movlb	1	; () banked
 17244  00561E  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17245  005620  0E00               	movlw	0
 17246  005622  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17247  005624  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17248  005626  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17249  005628  EF1F  F02B         	goto	i2l863
 17250  00562C                     i2l7335:
 17251                           
 17252                           ; BSR set to: 60
 17253  00562C  0EFF               	movlw	255
 17254  00562E  0101               	movlb	1	; () banked
 17255  005630  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 17256  005632  0EFF               	movlw	255
 17257  005634  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 17258  005636  0EFF               	movlw	255
 17259  005638  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 17260  00563A  0EFF               	movlw	255
 17261  00563C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 17262  00563E                     i2l863:
 17263                           
 17264                           ; BSR set to: 1
 17265  00563E  0011               	retfie		f
 17266  005640                     __end_of_SMT1_PW_ACQ_ISR:
 17267                           	callstack 0
 17268                           
 17269 ;; *************** function _SMT1_Overflow_ISR *****************
 17270 ;; Defined at:
 17271 ;;		line 213 in file "mcc_generated_files/smt1.c"
 17272 ;; Parameters:    Size  Location     Type
 17273 ;;		None
 17274 ;; Auto vars:     Size  Location     Type
 17275 ;;		None
 17276 ;; Return value:  Size  Location     Type
 17277 ;;                  1    wreg      void 
 17278 ;; Registers used:
 17279 ;;		wreg, status,2
 17280 ;; Tracked objects:
 17281 ;;		On entry : 0/0
 17282 ;;		On exit  : 0/0
 17283 ;;		Unchanged: 0/0
 17284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17289 ;;Total ram usage:        0 bytes
 17290 ;; Hardware stack levels used: 1
 17291 ;; This function calls:
 17292 ;;		Nothing
 17293 ;; This function is called by:
 17294 ;;		Interrupt level 2
 17295 ;; This function uses a non-reentrant model
 17296 ;;
 17297                           
 17298                           	psect	text101
 17299  005DE0                     __ptext101:
 17300                           	callstack 0
 17301  005DE0                     _SMT1_Overflow_ISR:
 17302                           	callstack 14
 17303  005DE0                     
 17304                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 17305  005DE0  0139               	movlb	57	; () banked
 17306  005DE2  9BA1               	bcf	161,5,b	;volatile
 17307  005DE4                     
 17308                           ; BSR set to: 57
 17309                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 17310  005DE4  0E00               	movlw	0
 17311  005DE6  6E48               	movwf	_smtPeriod^0,c	;volatile
 17312  005DE8  0E00               	movlw	0
 17313  005DEA  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 17314  005DEC  0E00               	movlw	0
 17315  005DEE  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 17316  005DF0  0E00               	movlw	0
 17317  005DF2  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 17318                           
 17319                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 17320  005DF4  0E00               	movlw	0
 17321  005DF6  0101               	movlb	1	; () banked
 17322  005DF8  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 17323  005DFA  0E00               	movlw	0
 17324  005DFC  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 17325  005DFE  0E00               	movlw	0
 17326  005E00  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 17327  005E02  0E00               	movlw	0
 17328  005E04  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 17329  005E06                     
 17330                           ; BSR set to: 1
 17331  005E06  0011               	retfie		f
 17332  005E08                     __end_of_SMT1_Overflow_ISR:
 17333                           	callstack 0
 17334                           
 17335                           ;
 17336                           ; Interrupt Vector Table @ 0x8
 17337                           ;
 17338                           
 17339                           	psect	ivt0x8
 17340  000008                     __pivt0x8:
 17341                           	callstack 0
 17342  000008                     ivt0x8_base:
 17343                           	callstack 0
 17344                           
 17345                           ; Vector 0 : SWINT
 17346  000008  17EB               	dw	_Default_ISR shr (0+2)
 17347                           
 17348                           ; Vector 1 : HLVD
 17349  00000A  17EB               	dw	_Default_ISR shr (0+2)
 17350                           
 17351                           ; Vector 2 : OSF
 17352  00000C  17EB               	dw	_Default_ISR shr (0+2)
 17353                           
 17354                           ; Vector 3 : CSW
 17355  00000E  17EB               	dw	_Default_ISR shr (0+2)
 17356                           
 17357                           ; Vector 4 : NVM
 17358  000010  17EB               	dw	_Default_ISR shr (0+2)
 17359                           
 17360                           ; Vector 5 : SCAN
 17361  000012  17EB               	dw	_Default_ISR shr (0+2)
 17362                           
 17363                           ; Vector 6 : CRC
 17364  000014  17EB               	dw	_Default_ISR shr (0+2)
 17365                           
 17366                           ; Vector 7 : IOC
 17367  000016  17EB               	dw	_Default_ISR shr (0+2)
 17368                           
 17369                           ; Vector 8 : INT0
 17370  000018  17EB               	dw	_Default_ISR shr (0+2)
 17371                           
 17372                           ; Vector 9 : ZCD
 17373  00001A  17EB               	dw	_Default_ISR shr (0+2)
 17374                           
 17375                           ; Vector 10 : AD
 17376  00001C  17EB               	dw	_Default_ISR shr (0+2)
 17377                           
 17378                           ; Vector 11 : ADT
 17379  00001E  17EB               	dw	_Default_ISR shr (0+2)
 17380                           
 17381                           ; Vector 12 : CMP1
 17382  000020  17EB               	dw	_Default_ISR shr (0+2)
 17383                           
 17384                           ; Vector 13 : SMT1
 17385  000022  1778               	dw	_SMT1_Overflow_ISR shr (0+2)
 17386                           
 17387                           ; Vector 14 : SMT1PRA
 17388  000024  15C8               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17389                           
 17390                           ; Vector 15 : SMT1PRW
 17391  000026  157B               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17392                           
 17393                           ; Vector 16 : DMA1SCNT
 17394  000028  17EB               	dw	_Default_ISR shr (0+2)
 17395                           
 17396                           ; Vector 17 : DMA1DCNT
 17397  00002A  17EB               	dw	_Default_ISR shr (0+2)
 17398                           
 17399                           ; Vector 18 : DMA1OR
 17400  00002C  17EB               	dw	_Default_ISR shr (0+2)
 17401                           
 17402                           ; Vector 19 : DMA1A
 17403  00002E  17EB               	dw	_Default_ISR shr (0+2)
 17404                           
 17405                           ; Vector 20 : SPI1RX
 17406  000030  17EB               	dw	_Default_ISR shr (0+2)
 17407                           
 17408                           ; Vector 21 : SPI1TX
 17409  000032  17EB               	dw	_Default_ISR shr (0+2)
 17410                           
 17411                           ; Vector 22 : SPI1
 17412  000034  17EB               	dw	_Default_ISR shr (0+2)
 17413                           
 17414                           ; Vector 23 : I2C1RX
 17415  000036  17EB               	dw	_Default_ISR shr (0+2)
 17416                           
 17417                           ; Vector 24 : I2C1TX
 17418  000038  17EB               	dw	_Default_ISR shr (0+2)
 17419                           
 17420                           ; Vector 25 : I2C1
 17421  00003A  17EB               	dw	_Default_ISR shr (0+2)
 17422                           
 17423                           ; Vector 26 : I2C1E
 17424  00003C  17EB               	dw	_Default_ISR shr (0+2)
 17425                           
 17426                           ; Vector 27 : U1RX
 17427  00003E  163C               	dw	_UART1_rx_vect_isr shr (0+2)
 17428                           
 17429                           ; Vector 28 : U1TX
 17430  000040  162D               	dw	_UART1_tx_vect_isr shr (0+2)
 17431                           
 17432                           ; Vector 29 : U1E
 17433  000042  17EB               	dw	_Default_ISR shr (0+2)
 17434                           
 17435                           ; Vector 30 : U1
 17436  000044  17EB               	dw	_Default_ISR shr (0+2)
 17437                           
 17438                           ; Vector 31 : TMR0
 17439  000046  17EB               	dw	_Default_ISR shr (0+2)
 17440                           
 17441                           ; Vector 32 : TMR1
 17442  000048  17EB               	dw	_Default_ISR shr (0+2)
 17443                           
 17444                           ; Vector 33 : TMR1G
 17445  00004A  17EB               	dw	_Default_ISR shr (0+2)
 17446                           
 17447                           ; Vector 34 : TMR2
 17448  00004C  17EB               	dw	_Default_ISR shr (0+2)
 17449                           
 17450                           ; Vector 35 : CCP1
 17451  00004E  17EB               	dw	_Default_ISR shr (0+2)
 17452                           
 17453                           ; Vector 36 : Undefined
 17454  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17455                           
 17456                           ; Vector 37 : NCO1
 17457  000052  17EB               	dw	_Default_ISR shr (0+2)
 17458                           
 17459                           ; Vector 38 : CWG1
 17460  000054  17EB               	dw	_Default_ISR shr (0+2)
 17461                           
 17462                           ; Vector 39 : CLC1
 17463  000056  17EB               	dw	_Default_ISR shr (0+2)
 17464                           
 17465                           ; Vector 40 : INT1
 17466  000058  17EB               	dw	_Default_ISR shr (0+2)
 17467                           
 17468                           ; Vector 41 : CMP2
 17469  00005A  17EB               	dw	_Default_ISR shr (0+2)
 17470                           
 17471                           ; Vector 42 : DMA2SCNT
 17472  00005C  17EB               	dw	_Default_ISR shr (0+2)
 17473                           
 17474                           ; Vector 43 : DMA2DCNT
 17475  00005E  17EB               	dw	_Default_ISR shr (0+2)
 17476                           
 17477                           ; Vector 44 : DMA2OR
 17478  000060  17EB               	dw	_Default_ISR shr (0+2)
 17479                           
 17480                           ; Vector 45 : DMA2A
 17481  000062  17EB               	dw	_Default_ISR shr (0+2)
 17482                           
 17483                           ; Vector 46 : I2C2RX
 17484  000064  17EB               	dw	_Default_ISR shr (0+2)
 17485                           
 17486                           ; Vector 47 : I2C2TX
 17487  000066  17EB               	dw	_Default_ISR shr (0+2)
 17488                           
 17489                           ; Vector 48 : I2C2
 17490  000068  17EB               	dw	_Default_ISR shr (0+2)
 17491                           
 17492                           ; Vector 49 : I2C2E
 17493  00006A  17EB               	dw	_Default_ISR shr (0+2)
 17494                           
 17495                           ; Vector 50 : U2RX
 17496  00006C  17EB               	dw	_Default_ISR shr (0+2)
 17497                           
 17498                           ; Vector 51 : U2TX
 17499  00006E  17EB               	dw	_Default_ISR shr (0+2)
 17500                           
 17501                           ; Vector 52 : U2E
 17502  000070  17EB               	dw	_Default_ISR shr (0+2)
 17503                           
 17504                           ; Vector 53 : U2
 17505  000072  17EB               	dw	_Default_ISR shr (0+2)
 17506                           
 17507                           ; Vector 54 : TMR3
 17508  000074  17EB               	dw	_Default_ISR shr (0+2)
 17509                           
 17510                           ; Vector 55 : TMR3G
 17511  000076  17EB               	dw	_Default_ISR shr (0+2)
 17512                           
 17513                           ; Vector 56 : TMR4
 17514  000078  1675               	dw	_TMR4_ISR shr (0+2)
 17515                           
 17516                           ; Vector 57 : CCP2
 17517  00007A  17EB               	dw	_Default_ISR shr (0+2)
 17518                           
 17519                           ; Vector 58 : Undefined
 17520  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17521                           
 17522                           ; Vector 59 : CWG2
 17523  00007E  17EB               	dw	_Default_ISR shr (0+2)
 17524                           
 17525                           ; Vector 60 : CLC2
 17526  000080  17EB               	dw	_Default_ISR shr (0+2)
 17527                           
 17528                           ; Vector 61 : INT2
 17529  000082  17EB               	dw	_Default_ISR shr (0+2)
 17530                           
 17531                           ; Vector 62 : Undefined
 17532  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17533                           
 17534                           ; Vector 63 : Undefined
 17535  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17536                           
 17537                           ; Vector 64 : Undefined
 17538  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17539                           
 17540                           ; Vector 65 : Undefined
 17541  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17542                           
 17543                           ; Vector 66 : Undefined
 17544  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17545                           
 17546                           ; Vector 67 : Undefined
 17547  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17548                           
 17549                           ; Vector 68 : Undefined
 17550  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17551                           
 17552                           ; Vector 69 : Undefined
 17553  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17554                           
 17555                           ; Vector 70 : TMR5
 17556  000094  17EB               	dw	_Default_ISR shr (0+2)
 17557                           
 17558                           ; Vector 71 : TMR5G
 17559  000096  1707               	dw	_TMR5_GATE_ISR shr (0+2)
 17560                           
 17561                           ; Vector 72 : TMR6
 17562  000098  17EB               	dw	_Default_ISR shr (0+2)
 17563                           
 17564                           ; Vector 73 : CCP3
 17565  00009A  16E0               	dw	_CCP3_CaptureISR shr (0+2)
 17566                           
 17567                           ; Vector 74 : CWG3
 17568  00009C  17EB               	dw	_Default_ISR shr (0+2)
 17569                           
 17570                           ; Vector 75 : CLC3
 17571  00009E  17EB               	dw	_Default_ISR shr (0+2)
 17572                           
 17573                           ; Vector 76 : Undefined
 17574  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17575                           
 17576                           ; Vector 77 : Undefined
 17577  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17578                           
 17579                           ; Vector 78 : Undefined
 17580  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17581                           
 17582                           ; Vector 79 : Undefined
 17583  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17584                           
 17585                           ; Vector 80 : CCP4
 17586  0000A8  16ED               	dw	_CCP4_CaptureISR shr (0+2)
 17587                           
 17588                           ; Vector 81 : CLC4
 17589  0000AA  17EB               	dw	_Default_ISR shr (0+2)
 17590  0000AC                     ivt0x8_undefint:
 17591                           	callstack 0
 17592  0000AC  00FF               	reset	
 17593                           
 17594                           	psect	text102
 17595  000000                     __ptext102:
 17596                           	callstack 0
 17597  000000                     
 17598                           	psect	rparam
 17599  0000                     
 17600                           	psect	idloc
 17601                           
 17602                           ;Config register IDLOC0 @ 0x200000
 17603                           ;	unspecified, using default values
 17604  200000                     	org	2097152
 17605  200000  0FFF               	dw	4095
 17606                           
 17607                           ;Config register IDLOC1 @ 0x200002
 17608                           ;	unspecified, using default values
 17609  200002                     	org	2097154
 17610  200002  0FFF               	dw	4095
 17611                           
 17612                           ;Config register IDLOC2 @ 0x200004
 17613                           ;	unspecified, using default values
 17614  200004                     	org	2097156
 17615  200004  0FFF               	dw	4095
 17616                           
 17617                           ;Config register IDLOC3 @ 0x200006
 17618                           ;	unspecified, using default values
 17619  200006                     	org	2097158
 17620  200006  0FFF               	dw	4095
 17621                           
 17622                           ;Config register IDLOC4 @ 0x200008
 17623                           ;	unspecified, using default values
 17624  200008                     	org	2097160
 17625  200008  0FFF               	dw	4095
 17626                           
 17627                           ;Config register IDLOC5 @ 0x20000A
 17628                           ;	unspecified, using default values
 17629  20000A                     	org	2097162
 17630  20000A  0FFF               	dw	4095
 17631                           
 17632                           ;Config register IDLOC6 @ 0x20000C
 17633                           ;	unspecified, using default values
 17634  20000C                     	org	2097164
 17635  20000C  0FFF               	dw	4095
 17636                           
 17637                           ;Config register IDLOC7 @ 0x20000E
 17638                           ;	unspecified, using default values
 17639  20000E                     	org	2097166
 17640  20000E  0FFF               	dw	4095
 17641                           
 17642                           	psect	config
 17643                           
 17644                           ;Config register CONFIG1L @ 0x300000
 17645                           ;	External Oscillator Selection
 17646                           ;	FEXTOSC = OFF, Oscillator not enabled
 17647                           ;	Reset Oscillator Selection
 17648                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17649  300000                     	org	3145728
 17650  300000  8C                 	db	140
 17651                           
 17652                           ;Config register CONFIG1H @ 0x300001
 17653                           ;	Clock out Enable bit
 17654                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17655                           ;	PRLOCKED One-Way Set Enable bit
 17656                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17657                           ;	Clock Switch Enable bit
 17658                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17659                           ;	Fail-Safe Clock Monitor Enable bit
 17660                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17661  300001                     	org	3145729
 17662  300001  FF                 	db	255
 17663                           
 17664                           ;Config register CONFIG2L @ 0x300002
 17665                           ;	MCLR Enable bit
 17666                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17667                           ;	Power-up timer selection bits
 17668                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17669                           ;	Multi-vector enable bit
 17670                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17671                           ;	IVTLOCK bit One-way set enable bit
 17672                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17673                           ;	Low Power BOR Enable bit
 17674                           ;	LPBOREN = OFF, ULPBOR disabled
 17675                           ;	Brown-out Reset Enable bits
 17676                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17677  300002                     	org	3145730
 17678  300002  FF                 	db	255
 17679                           
 17680                           ;Config register CONFIG2H @ 0x300003
 17681                           ;	Brown-out Reset Voltage Selection bits
 17682                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17683                           ;	ZCD Disable bit
 17684                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17685                           ;	PPSLOCK bit One-Way Set Enable bit
 17686                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17687                           ;	Stack Full/Underflow Reset Enable bit
 17688                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17689                           ;	Debugger Enable bit
 17690                           ;	DEBUG = OFF, Background debugger disabled
 17691                           ;	Extended Instruction Set Enable bit
 17692                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17693  300003                     	org	3145731
 17694  300003  FF                 	db	255
 17695                           
 17696                           ;Config register CONFIG3L @ 0x300004
 17697                           ;	WDT Period selection bits
 17698                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17699                           ;	WDT operating mode
 17700                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17701  300004                     	org	3145732
 17702  300004  9F                 	db	159
 17703                           
 17704                           ;Config register CONFIG3H @ 0x300005
 17705                           ;	WDT Window Select bits
 17706                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17707                           ;	WDT input clock selector
 17708                           ;	WDTCCS = SC, Software Control
 17709  300005                     	org	3145733
 17710  300005  FF                 	db	255
 17711                           
 17712                           ;Config register CONFIG4L @ 0x300006
 17713                           ;	Boot Block Size selection bits
 17714                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17715                           ;	Boot Block enable bit
 17716                           ;	BBEN = OFF, Boot block disabled
 17717                           ;	Storage Area Flash enable bit
 17718                           ;	SAFEN = OFF, SAF disabled
 17719                           ;	Application Block write protection bit
 17720                           ;	WRTAPP = OFF, Application Block not write protected
 17721  300006                     	org	3145734
 17722  300006  FF                 	db	255
 17723                           
 17724                           ;Config register CONFIG4H @ 0x300007
 17725                           ;	Configuration Register Write Protection bit
 17726                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17727                           ;	Boot Block Write Protection bit
 17728                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17729                           ;	Data EEPROM Write Protection bit
 17730                           ;	WRTD = OFF, Data EEPROM not write-protected
 17731                           ;	SAF Write protection bit
 17732                           ;	WRTSAF = OFF, SAF not Write Protected
 17733                           ;	Low Voltage Programming Enable bit
 17734                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17735  300007                     	org	3145735
 17736  300007  FF                 	db	255
 17737                           
 17738                           ;Config register CONFIG5L @ 0x300008
 17739                           ;	PFM and Data EEPROM Code Protection bit
 17740                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17741  300008                     	org	3145736
 17742  300008  FF                 	db	255
 17743                           
 17744                           ;Config register CONFIG5H @ 0x300009
 17745                           ;	unspecified, using default values
 17746  300009                     	org	3145737
 17747  300009  FF                 	db	255
 17748                           tosu	equ	0x3FFF
 17749                           tosh	equ	0x3FFE
 17750                           tosl	equ	0x3FFD
 17751                           stkptr	equ	0x3FFC
 17752                           pclatu	equ	0x3FFB
 17753                           pclath	equ	0x3FFA
 17754                           pcl	equ	0x3FF9
 17755                           tblptru	equ	0x3FF8
 17756                           tblptrh	equ	0x3FF7
 17757                           tblptrl	equ	0x3FF6
 17758                           tablat	equ	0x3FF5
 17759                           prodh	equ	0x3FF4
 17760                           prodl	equ	0x3FF3
 17761                           indf0	equ	0x3FEF
 17762                           postinc0	equ	0x3FEE
 17763                           postdec0	equ	0x3FED
 17764                           preinc0	equ	0x3FEC
 17765                           plusw0	equ	0x3FEB
 17766                           fsr0h	equ	0x3FEA
 17767                           fsr0l	equ	0x3FE9
 17768                           wreg	equ	0x3FE8
 17769                           indf1	equ	0x3FE7
 17770                           postinc1	equ	0x3FE6
 17771                           postdec1	equ	0x3FE5
 17772                           preinc1	equ	0x3FE4
 17773                           plusw1	equ	0x3FE3
 17774                           fsr1h	equ	0x3FE2
 17775                           fsr1l	equ	0x3FE1
 17776                           bsr	equ	0x3FE0
 17777                           indf2	equ	0x3FDF
 17778                           postinc2	equ	0x3FDE
 17779                           postdec2	equ	0x3FDD
 17780                           preinc2	equ	0x3FDC
 17781                           plusw2	equ	0x3FDB
 17782                           fsr2h	equ	0x3FDA
 17783                           fsr2l	equ	0x3FD9
 17784                           status	equ	0x3FD8

Data Sizes:
    Strings     228
    Constant    0
    Data        0
    BSS         182
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     180
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3445_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_17(CODE[13]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[14]), 
		 -> STR_13(CODE[10]), STR_12(CODE[12]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[11]), STR_6(CODE[9]), 
		 -> STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[14]), STR_2(CODE[22]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_17(CODE[13]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[14]), 
		 -> STR_13(CODE[10]), STR_12(CODE[12]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[11]), STR_6(CODE[9]), 
		 -> STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[14]), STR_2(CODE[22]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_17(CODE[13]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[14]), 
		 -> STR_13(CODE[10]), STR_12(CODE[12]), STR_11(CODE[13]), STR_10(CODE[14]), 
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[11]), STR_6(CODE[9]), 
		 -> STR_5(CODE[15]), STR_4(CODE[22]), STR_3(CODE[14]), STR_2(CODE[22]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _checkBatt->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _setSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _getReverse->_printf
    _getCurve->_printf
    _checkBatt->_getBatteryVoltage
    _getBatteryVoltage->_printf
    _calcSteering->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  288305
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  287158
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0   45574
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45828
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   60599
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    4     4      0   49828
                                             14 BANK1      4     4      0
           _ADCC_GetSingleConversion
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      31
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSteering                                         4     4      0   55327
                                             14 BANK1      4     4      0
                            ___awdiv
                             _printf
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _setSteering                                          9     6      3    8319
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   45574
                                              6 BANK1      8     2      6
                           ___xxtofl (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   43945
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43439
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32060
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1346
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3083
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9606
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    8719
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (2) _setMotor                                             4     2      2     906
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1106
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     787
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    3953
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4    1165
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (14) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (15) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (14) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (15) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (18) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (19) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (20) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _printf
         ___xxtofl (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___fldiv
         ___fltol
         ___xxtofl
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
         ___fldiv
         ___xxtofl
         _printf
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
     _getReverse
       _printf
     _setMotor
     _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B4       7       70.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19F      32        0.0%
DATA                 0      0     19F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jan 30 17:23:15 2024

                             _CCP4_Initialize 5C7E                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 006C                                  ___fldiv@bexp 006B  
                                ___fldiv@sign 0064                                            l72 5F20  
                                          l75 5E2A                                            l69 56D4  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l312 558E  
                                         l404 568A                                           l308 5546  
                                         l309 5560                                           l318 5F38  
                                         l520 571E                                           l441 5CD8  
                                         l362 5F56                                           l371 5F42  
                                         l188 4D84                                           l284 51C8  
                                         l365 5F6A                                           l359 5F60  
                                         l368 5F4C                                           l712 5B7C  
                                         l449 5F92                                           l482 5CAA  
                                         l723 5EC0                                           l555 5F74  
                                         l644 5D32                                           l740 5B14  
                                         l709 5ED8                                           l581 59D0  
                                         l726 5B48                                           l479 5F88  
                                         l751 5EF0                                           l737 5F08  
                                         l754 5AE0                                           l923 5EA8  
                                         l695 5F7E                                           l795 5C7C  
                                         l893 5D5E                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                                         _abs 583A                                           _pad 4E4A  
                     __size_of_PMD_Initialize 0024                                  ___awmod@sign 0019  
                             _TMR2_Initialize 5E8E                CCP4_SetCallBack@customCallBack 0014  
                                         tosl 003FFD                                           wreg 003FE8  
                            _CCP4_SetCallBack 5F80                                  ___flmul@aexp 0061  
                                ___flmul@bexp 0066                            _UART1_Transmit_ISR 57F6  
                                ___flmul@sign 0060                                  ___flmul@temp 006B  
                                ___flmul@prod 0067                       __end_of_CCP4_CaptureISR 5BE8  
                                ___fltol@exp1 0082                                          l2001 2DC4  
                                        l1042 55EA                                          l2010 2E0A  
                                        ?_abs 0026                                          l2012 2E82  
                                        l2004 2D88                                          l2013 2E70  
                                        l1054 5BF8                                          l2031 2840  
                                        l2040 2AD2                                          l2041 2AC0  
                                        l2201 1504                                          l1401 3CAE  
                                        l1057 5C18                                          l1330 35AC  
                                        l2035 2BC8                                          l1403 3CD2  
                                        l1323 459E                                          l1235 4640  
                                        l2300 5878                                          l1404 3CE6  
                                        l1324 45B0                                          l1244 46CC  
                                        l1228 45D0                                          l1253 52F2  
                                        l1405 3D5A                                          l1261 5384  
                                        l1309 32AC                                          l2038 2A5A  
                                        l2134 4E8E                                          l1414 3E94  
                                        l1335 363A                                          l2048 2B8A  
                                        l2072 3EEC                                          l1256 53F8  
                                        l4001 4CE6                                          l2137 4ED0  
                                        l2145 334E                                          l2306 3C9E  
                                        l4011 4D40                                          l4003 4D34  
                                        l2075 4048                                          l1531 41D0  
                                        l2331 525E                                          l2139 4F0A  
                                        l2147 3356                               _timer3ReloadVal 018C  
                                        l2316 5960                                          l1356 3862  
                                        l1284 329C                                          l4013 4D42  
                                        l4005 4D36                                          l2165 3592  
                                        l2309 3BE2                                          l2229 1942  
                                        l2086 3FE0                                          l4031 5590  
                                        l4015 4D44                                          l4007 4D38  
                                        l4103 5EC2                                          l2079 3F84  
                                        l2351 58B2                                          l2183 1D92  
                                        l2095 5DDE                                          l1544 4334  
                                        l4017 4D46                                          l4009 4D3A  
                                        l2345 54D2                                          l2281 5460  
                                        l1714 48E0                                          l2370 5532  
                                        l2282 5468                                          l4019 5F0A  
                                        l4051 5C74                                          l4043 5C4E  
                                        l1379 3A88                                          l2339 57F4  
                                        l2355 4BD8                                          l2275 21B0  
                                        l2267 22B6                                          l1388 4480  
                                        l2292 4AE4                                          l4053 5C76  
                                        l4045 5C6C                                          l4061 5E9A  
                                        l1397 4CBA                                          l1661 507A  
                                        l2365 552A                                          l4055 5C78  
                                        l4047 5C6E                                          l4063 5EA0  
                                        l1648 4E48                                          l1496 47D8  
                                        l4065 5EDA                                          l4057 5EAA  
                                        l4049 5C70                                          l2297 5870  
                                        l1682 49A0                                          l4059 5E8E  
                                        l1691 5998                                          l1676 5124  
                                        l4077 5D34                                          l4087 5EF2  
                                        l1687 49E6                                          l1945 24A8  
                                        l1962 25C2                                          l1954 2778  
                                        l1946 2496                                          l1971 2692  
                                        l1947 245C                                          l1972 2680  
                                        ?_pad 0026                                          l8001 2F44  
                                        l7131 568C                                          l8003 2F52  
                                        l1987 57B0                                          l7141 56B0  
                                        l7133 569C                                          l8101 2A58  
                                        l8021 2798                                          l6501 4750  
                                        l8005 2F58                                          l7151 56CC  
                                        l7143 56B4                                          l7135 56A0  
                                        l8111 2AB8                                          l8103 2A6A  
                                        l8031 27DE                                          l8023 27A8  
                                        l8015 277A                                          l6511 4798  
                                        l6503 475E                                          l8007 2F5A  
                                        l1999 2F64                                          l7145 56BC  
                                        l7137 56A8                                          l8121 2B26  
                                        l8105 2A78                                          l8041 280A  
                                        l8033 27E4                                          l8025 27B8  
                                        l8017 2788                                          l6513 47A2  
                                        l6505 4768                                          l8201 4FE6  
                                        l9001 53DA                                          l3971 566A  
                                        l3963 5640                                          l7147 56C0  
                                        l7139 56AC                                          l8131 2B8E  
                                        l8115 2AE2                                          l8123 2B2A  
                                        l8107 2A7C                                          l8051 2860  
                                        l8043 281A                                          l8035 27EA  
                                        l8027 27C8                                          l8019 2796  
                                        l6507 4786                                          l6515 47A8  
                                        l6611 4BDA                                          l8211 501A  
                                        l8203 4FEA                                          l9011 531C  
                                        l9003 52F4                                          l6701 5CD6  
                                        l3981 567E                                          l3973 566C  
                                        l3965 5642                                          l7149 56C8  
                                        l8141 2BB8                                          l8133 2B9E  
                                        l8125 2B44                                          l8117 2AEE  
                                        l8109 2A8A                                          l8061 28A8  
                                        l8045 282A                                          l8037 27F8  
                                        l8029 27CE                                          l8301 4876  
                                        l6517 47B8                                          l6509 4796  
                                        l6453 5B4A                                          l6613 4BF6  
                                        l6621 4C36                                          l8221 5054  
                                        l8213 5022                                          l8205 4FF8  
                                        l9013 5364                                          l9021 5382  
                                        l9005 52FA                                          l9101 320A  
                                        l3991 5688                                          l3983 5680  
                                        l3975 5676                                          l3967 564A  
                                        l6711 5D2E                                          l6703 5D08  
                                        l8151 4D86                                          l8135 2BAC  
                                        l8127 2B58                                          l8119 2AFC  
                                        l8071 28F6                                          l8063 28B4  
                                        l8055 2874                                          l8047 2830  
                                        l8039 27FA                                          l8311 48A0  
                                        l8303 4880                                          l6519 47C8  
                                        l6455 5B16                                          l6623 4C52  
                                        l6631 4CA2                                          l6615 4C12  
                                        l8215 5030                                          l8223 505A  
                                        l8207 5000                                          l8231 507C  
                                        l9015 536C                                          l9007 5310  
                                        l9111 3232                                          l9031 2FCA  
                                        l6721 5CA8                                          l6713 5C7E  
                                        l3985 5682                                          l3977 567A  
                                        l3969 5654                                          l3993 5E08  
                                        l6609 5F76                                          l6705 5D1C  
                                        l8161 4DB2                                          l8153 4D8A  
                                        l8137 2BAE                                          l8129 2B72  
                                        l8081 2954                                          l8073 2906  
                                        l8065 28D0                                          l8057 2884  
                                        l8049 2850                                          l8313 48B0  
                                        l6481 46D2                                          l6625 4C6E  
                                        l6617 4C1A                                          l7601 234E  
                                        l8321 4E4A                                          l8225 506A  
                                        l8217 5046                                          l8209 5012  
                                        l8241 511C                                          l8233 50AA  
                                        l8145 576A                                          l8401 3C42  
                                        l9201 370E                                          l9017 537C  
                                        l9009 5318                                          l9113 3244  
                                        l9105 321C                                          l9033 2FE2  
                                        l9041 3020                                          l9121 325E  
                                        l9025 2F66                                          l6715 5C8E  
                                        l3987 5684                                          l3979 567C  
                                        l3995 4CBC                                          l6723 599A  
                                        l6707 5D20                                          l6731 56D6  
                                        l6571 5F3A                                          l8171 4DE0  
                                        l8163 4DBA                                          l8155 4D98  
                                        l8139 2BB4                                          l8091 29DE  
                                        l8083 2964                                          l8075 2916  
                                        l8067 28DC                                          l8059 288E  
                                        l8315 48C0                                          l6491 4712  
                                        l6483 46E0                                          l6627 4C76  
                                        l6619 4C26                                          l7611 2382  
                                        l7603 2350                                          l8331 4E9A  
                                        l8323 4E58                                          l8411 32AE  
                                        l8227 5072                                          l8219 504E  
                                        l8243 5122                                          l8235 50BA  
                                        l8251 4922                                          l8147 577C  
                                        l8403 3C56                                          l9203 3726  
                                        l9115 324C                                          l9107 3220  
                                        l9051 3080                                          l9043 303E  
                                        l9035 2FEE                                          l9027 2F6A  
                                        l9131 44A4                                          l6717 5C9A  
                                        l3989 5686                                          l3997 4CDC  
                                        l6725 59AE                                          l6709 5D22  
                                        l6741 570E                                          l6733 56EA  
                                        l6573 5F58                                          l8181 4E1A  
                                        l8173 4DE8                                          l8165 4DBE  
                                        l8157 4DA0                                          l8093 2A14  
                                        l8085 2984                                          l8077 2926  
                                        l8069 28E8                                          l8317 48D0  
                                        l8309 4894                                          l6493 4716  
                                        l6485 46F0                                          l6629 4C82  
                                        l9301 4342                                          l7701 2590  
                                        l7621 23BE                                          l7605 2360  
                                        l7613 238A                                          l7541 5536  
                                        l8333 4EAE                                          l8325 4E6C  
                                        l8421 3328                                          l8413 32CE  
                                        l8237 50E8                                          l8261 498E  
                                        l8253 4950                                          l8405 3C7E  
                                        l8501 119A                                          l9221 3826  
                                        l9205 3742                                          l9061 30DC  
                                        l9053 309E                                          l9045 305A  
                                        l9037 2FF0                                          l9029 2FAE  
                                        l9141 44EE                                          l9133 44B6  
                                        l6591 5F80                                          l6719 5CA4  
                                        l3999 4CDE                                          l6727 59B2  
                                        l6743 571A                                          l6735 56EE  
                                        l6575 5F4E                                          l6751 5146  
                                        l8191 4E40                                          l8183 4E1C  
                                        l8175 4DF6                                          l8167 4DC6  
                                        l8159 4DA4                                          l8095 2A22  
                                        l8087 2994                                          l8079 2936  
                                        l6495 4726                                          l6487 46F4  
                                        l6479 46CE                                          l9311 43F4  
                                        l9303 4350                                          l7711 25E8  
                                        l7703 2592                                          l7631 23D2  
                                        l7623 23C2                                          l7615 239A  
                                        l7607 2370                                          l8343 583A  
                                        l7551 5586                                          l7543 5556  
                                        l8335 4EB2                                          l8327 4E7A  
                                        l8431 3384                                          l8423 3342  
                                        l8415 32F8                                          l8239 50F8  
                                        l8263 49DE                                          l8255 4960  
                                        l8247 48E2                                          l8271 5978  
                                        l8351 4A46                                          l8407 3C8E  
                                        l8511 120E                                          l8503 11A0  
                                        l9223 383E                                          l9207 376A  
                                        l9215 37A2                                          l9071 312E  
                                        l9063 30E2                                          l9055 30B0  
                                        l9047 3072                                          l9039 300E  
                                        l9151 4542                                          l9143 4502  
                                        l9135 44C8                                          l9127 4482  
                                        l6729 59CC                                          l6593 5F6C  
                                        l6737 5708                                          l6577 5F62  
                                        l6569 5F44                                          l6761 515C  
                                        l6753 514C                                          l6745 5126  
                                        l8185 4E22                                          l8177 4DFC  
                                        l8169 4DD8                                          l8097 2A40  
                                        l8089 29B4                                          l6497 473C  
                                        l6489 4702                                          l6681 5268  
                                        l9321 443C                                          l9313 43FC  
                                        l9305 4364                                          l7721 2616  
                                        l7705 25A2                                          l7641 23E6  
                                        l7633 23D6                                          l7625 23C6  
                                        l7617 23AC                                          l7609 2380  
                                        l9241 3864                                          l7801 405C  
                                        l8345 5854                                          l7553 558A  
                                        l7545 5562                                          l7561 51DC  
                                        l8337 4EDE                                          l8329 4E86  
                                        l8441 3426                                          l8433 338C  
                                        l8425 335E                                          l8417 3318  
                                        l8265 49E4                                          l8257 496E  
                                        l8249 4912                                          l8273 5988  
                                        l8361 4A98                                          l8353 4A6E  
                                        l8601 15F0                                          l8513 122A  
                                        l8505 11C6                                          l8521 1274  
                                        l9225 384E                                          l9209 3782  
                                        l9217 3800                                          l9081 3198  
                                        l9073 3144                                          l9065 30F4  
                                        l9057 30C2                                          l9049 307E  
                                        l9153 4550                                          l9145 4514  
                                        l9137 44D2                                          l9129 449A  
                                        l6739 570C                                          l6771 5170  
                                        l6763 5160                                          l6755 5150  
                                        l6747 512A                                          l8179 4E12  
                                        l8187 4E28                                          l8099 2A4A  
                                        l8291 4846                                          l8283 4806  
                                        l6499 4744                                          l6683 527E  
                                        l9323 4448                                          l9315 4410  
                                        l9307 4364                                          l7723 2624  
                                        l7715 25FC                                          l7731 2642  
                                        l7707 25B2                                          l7643 23EA  
                                        l7635 23DA                                          l7627 23CA  
                                        l7619 23BA                                          l7651 23FA  
                                        l9251 38B0                                          l9243 3872  
                                        l7811 40B2                                          l7803 407C  
                                        l7547 5574                                          l7555 558C  
                                        l7539 5536                                          l7563 51EE  
                                        l8339 4EF2                                          l8451 34E4  
                                        l8443 342C                                          l8435 3396  
                                        l8427 3370                                          l8419 3326  
                                        l8195 4FCC                                          l8259 4980  
                                        l8355 4A7A                                          l8347 49E8  
                                        l8371 547A                                          l8611 163A  
                                        l8603 1608                                          l8531 12FE  
                                        l8523 129A                                          l8515 1242  
                                        l9227 385E                                          l9219 3814  
                                        l9171 35C8                                          l9091 31D4  
                                        l9083 31AA                                          l9075 315A  
                                        l9067 3106                                          l9059 30CA  
                                        l9163 4598                                          l9147 452A  
                                        l9155 4556                                          l9139 44EA  
                                        l9331 45B2                                          l6589 5F8A  
                                        l6693 5CAC                                          l6781 5184  
                                        l6773 5174                                          l6765 5164  
                                        l6757 5154                                          l6749 5136  
                                        l8189 4E38                                          l8293 4854  
                                        l8285 4830                                          l8277 47DA  
                                        l6685 528E                                          l9325 4464  
                                        l9317 4414                                          l9309 43E0  
                                        l7725 262C                                          l7717 2606  
                                        l7709 25D8                                          l7733 2650  
                                        l7661 246A                                          l7653 23FE  
                                        l7645 23EE                                          l7637 23DE  
                                        l7629 23CE                                          l7581 22E6  
                                        l7573 22B8                                          l9261 3900  
                                        l9253 38C6                                          l9245 3888  
                                        l7821 4106                                          l7813 40BE  
                                        l7805 4080                                          l7549 5576  
                                        l7557 5F32                                          l7565 51F8  
                                        l8461 3532                                          l8453 34FE  
                                        l8437 339C                                          l8445 3490  
                                        l8429 337E                                          l8197 4FD0  
                                        l7901 2C4C                                          l8269 5962  
                                        l8365 4ADC                                          l8349 4A08  
                                        l8373 54D4                                          l8701 1B36  
                                        l8613 164E                                          l8621 1744  
                                        l8605 161A                                          l8541 1362  
                                        l8533 1316                                          l8517 124C  
                                        l8509 11FC                                          l9181 363E  
                                        l9173 35D4                                          l9093 31D8  
                                        l9085 31B8                                          l9077 3170  
                                        l9069 311C                                          l9157 456C  
                                        l9149 4538                                          l9341 4650  
                                        l9333 45DE                                          l6695 5CBC  
                                        l6783 5190                                          l6775 5178  
                                        l6767 5168                                          l6759 5158  
                                        l8287 4832                                          l8279 47F2  
                                        l6687 52BE                                          l6679 5260  
                                        l9327 446C                                          l9319 4420  
                                        l7743 26A2                                          l7751 26F8  
                                        l7735 2654                                          l7727 2630  
                                        l7719 2614                                          l7671 2494  
                                        l7663 2476                                          l7655 2428  
                                        l7647 23F2                                          l7639 23E2  
                                        l7591 2320                                          l7583 22F6  
                                        l7575 22C6                                          l9263 3904  
                                        l9255 38D2                                          l9247 388C  
                                        l7831 417A                                          l7823 4118  
                                        l7815 40DC                                          l7807 408E  
                                        l7567 5216                                          l7559 51CA  
                                        l8463 3544                                          l8447 34AC  
                                        l8455 350C                                          l8439 341E  
                                        l8199 4FDE                                          l7911 2C80  
                                        l7903 2C4E                                          l8359 4A86  
                                        l8391 3B24                                          l8383 3A8A  
                                        l8711 1B94                                          l8703 1B3A  
                                        l8631 1810                                          l8623 1762  
                                        l8615 16B2                                          l8607 1622  
                                        l8551 142E                                          l8535 1320  
                                        l8527 12D0                                          l9191 36AA  
                                        l9183 3654                                          l9175 35F0  
                                        l9167 3594                                          l9095 31E6  
                                        l9087 31BE                                          l9079 3182  
                                        l9159 458A                                          l9351 4688  
                                        l9343 4654                                          l9335 45F0  
                                        l6697 5CC8                                          l6785 519C  
                                        l6777 517C                                          l6769 516C  
                                        l8289 4842                                          l6689 52EA  
                                        l9329 4478                                          l7761 274A  
                                        l7753 2708                                          l7745 26AE  
                                        l7737 2662                                          l7729 2640  
                                        l7681 24EA                                          l7673 24B6  
                                        l7665 247A                                          l7657 2444  
                                        l7649 23F6                                          l7593 2326  
                                        l7585 2306                                          l7577 22D4  
                                        l9273 39C4                                          l9265 391A  
                                        l9249 38A8                                          l9257 38DE  
                                        l7825 4146                                          l7817 40E4  
                                        l7833 4180                                          l7809 40AE  
                                        l7841 41D2                                          l7569 524C  
                                        l8465 3550                                          l8457 351E  
                                        l8449 34CA                                          l7921 2CC6  
                                        l7905 2C5E                                          l7913 2C88  
                                        l8385 3AAA                                          l8369 546A  
                                        l8377 550A                                          l8721 1BD2  
                                        l8713 1BA4                                          l8705 1B58  
                                        l8641 18C0                                          l8633 1820  
                                        l8625 1796                                          l8617 170A  
                                        l8609 162A                                          l8561 14B2  
                                        l8553 1462                                          l8545 1398  
                                        l8529 12E2                                          l8481 1116  
                                        l8473 10E6                                          l8801 1D94  
                                        l9193 36BE                                          l9185 366A  
                                        l9169 35AC                                          l9097 31F4  
                                        l9089 31C2                                          l9361 46C4  
                                        l9353 469C                                          l9345 4666  
                                        l9337 45F4                                          l6699 5CD2  
                                        l6787 51C4                                          l6779 5180  
                                        l8299 486C                                          l7771 2768  
                                        l7763 2750                                          l7755 2718  
                                        l7747 26BC                                          l7739 2678  
                                        l7691 2524                                          l7683 24F8  
                                        l7675 24C6                                          l7667 2488  
                                        l7659 2454                                          l7595 2338  
                                        l7587 2308                                          l7579 22D6  
                                        l9291 3A78                                          l9267 39AC  
                                        l9259 38EA                                          l9283 39DC  
                                        l7835 4190                                          l7827 4166  
                                        l7819 40F8                                          l7851 4216  
                                        l7843 41D6                                          l8467 3558  
                                        l8459 352C                                          l7931 2CEE  
                                        l7923 2CCA                                          l7915 2C98  
                                        l7907 2C6E                                          l8395 3B96  
                                        l8387 3B02                                          l8379 551C  
                                        l8731 1C08                                          l8723 1BE2  
                                        l8715 1BA8                                          l8707 1B74  
                                        l8651 192E                                          l8643 18F4  
                                        l8635 1830                                          l8627 17CA  
                                        l8619 173E                                          l8563 14C4  
                                        l8571 1510                                          l8555 146A  
                                        l8547 13CC                                          l8539 1348  
                                        l8491 116C                                          l8483 113A  
                                        l8475 10F0                                          l8811 1E16  
                                        l8803 1DC2                                          l9195 36D2  
                                        l9187 3680                                          l9179 35FC  
                                        l9099 3206                                          l9347 466A  
                                        l9339 45F8                                          l9363 5E50  
                                        l7765 2752                                          l7757 2738  
                                        l7749 26F6                                          l7693 2526  
                                        l7685 2506                                          l7669 248A  
                                        l7597 233A                                          l7589 2310  
                                        l9293 3A80                                          l9277 39D0  
                                        l9269 39B8                                          l9285 3A36  
                                        l7837 41B0                                          l7829 4168  
                                        l7861 427E                                          l7853 4236  
                                        l7845 41E4                                          l7781 57D4  
                                        l8469 356A                                          l7941 2D3C  
                                        l7917 2CAE                                          l7909 2C7E  
                                        l8397 3BD2                                          l8389 3B16  
                                        l8741 1C64                                          l8733 1C14  
                                        l8725 1BEA                                          l8717 1BB8  
                                        l8709 1B86                                          l8661 19E4  
                                        l8653 193A                                          l8645 1908  
                                        l8637 1864                                          l8629 17DE  
                                        l8581 1550                                          l8565 14D6  
                                        l8549 13D2                                          l8557 149E  
                                        l8493 117E                                          l8485 1144  
                                        l8477 1100                                          l8821 1EE4  
                                        l8813 1E26                                          l8805 1DD4  
                                        l9197 36E6                                          l9189 3696  
                                        l9541 3614                                          l8901 5C06  
                                        l9357 46B4                                          l9349 4678  
                                        l9365 5E54                                          l8911 3E98  
                                        l7767 2758                                          l7759 273C  
                                        l7695 2530                                          l7687 2512  
                                        l7679 24DA                                          l7599 2340  
                                        l9287 3A54                                          l7871 42F4  
                                        l7863 42AC                                          l7855 4254  
                                        l7847 4204                                          l7775 57B2  
                                        l7783 587A                                          l7951 2D86  
                                        l7943 2D4C                                          l7935 2D02  
                                        l7919 2CBE                                          l7927 2CDE  
                                        l8399 3C06                                          l8751 1CAE  
                                        l8735 1C1A                                          l8743 1C6A  
                                        l8727 1BF8                                          l8719 1BCA  
                                        l8671 1A2E                                          l8663 19F6  
                                        l8655 195E                                          l8639 18BC  
                                        l8647 190C                                          l8591 15AC  
                                        l8583 1586                                          l8567 14DE  
                                        l8559 14AE                                          l8495 118A  
                                        l8487 114C                                          l8479 110E  
                                        l8831 1FB8                                          l8823 1F12  
                                        l8815 1E66                                          l8807 1DE6  
                                        l9543 37BA                                          l9199 36FA  
                                        l9359 46C0                                          l9367 5E56  
                                        l8913 3EA8                                          l7769 2766  
                                        l7689 2516                                          l7697 2536  
                                        l9289 3A5C                                          l7873 4314  
                                        l7865 42CC                                          l7857 425C  
                                        l7849 4208                                          l7777 57BE  
                                        l7785 5886                                          l7961 2DD4  
                                        l7953 2D92                                          l7945 2D54  
                                        l7937 2D1C                                          l7929 2CEE  
                                        l7881 2BE6                                          l7793 592A  
                                        l8761 1CE0                                          l8753 1CBA  
                                        l8745 1C7C                                          l8737 1C40  
                                        l8729 1C00                                          l8681 1A64  
                                        l8673 1A3E                                          l8665 1A04  
                                        l8657 19C2                                          l8649 191C  
                                        l8593 15BE                                          l8585 158E  
                                        l8577 1522                                          l8569 14F8  
                                        l8497 1192                                          l8489 115E  
                                        l8833 1FDA                                          l8841 205C  
                                        l8825 1F6E                                          l8817 1E76  
                                        l8809 1DEA                                          l8905 5DB8  
                                        l9545 3DAA                                          l9369 5E64  
                                        l8931 3F6E                                          l8923 3F26  
                                        l8915 3EB6                                          l9299 4336  
                                        l7699 255C                                          l9547 39F0  
                                        l7867 42DE                                          l7859 4270  
                                        l7779 57D0                                          l7787 588A  
                                        l7963 2DEA                                          l7971 2E1A  
                                        l7955 2DB0                                          l7947 2D64  
                                        l7939 2D2C                                          l7891 2C1A  
                                        l7883 2BE8                                          l8771 1D3A  
                                        l8755 1CC2                                          l8747 1C96  
                                        l8739 1C5C                                          l8691 1A98  
                                        l8683 1A68                                          l8675 1A42  
                                        l8659 19D0                                          l8667 1A0C  
                                        l8595 15CC                                          l8579 1534  
                                        l8587 1592                                          l8499 1196  
                                        l8851 216C                                          l8843 208A  
                                        l8835 1FEC                                          l8819 1EB6  
                                        l8907 5DC2                                          l9539 3276  
                                        l8941 3FEE                                          l8933 3F7A  
                                        l8925 3F2E                                          l8917 3EFC  
                                        l7797 404A                                          l7869 42E4  
                                        l7789 58A6                                          l7973 2E28  
                                        l7965 2DF0                                          l7957 2DB2  
                                        l7949 2D78                                          l7885 2BF8  
                                        l7893 2C22                                          l7877 2BCA  
                                        l8773 1D4C                                          l8765 1D14  
                                        l8757 1CD4                                          l8749 1C9C  
                                        l8693 1A9C                                          l8685 1A6E  
                                        l8677 1A48                                          l8669 1A20  
                                        l8597 15D0                                          l8589 159A  
                                        l8781 4AE6                                          l8861 2230  
                                        l8853 21C4                                          l8837 2030  
                                        l8829 1FA6                                          l8951 4036  
                                        l8943 3FF0                                          l8935 3FB6  
                                        l8927 3F3A                                          l8919 3F12  
                                        l7799 404E                                          l7983 2E92  
                                        l7991 2EDA                                          l7975 2E2C  
                                        l7967 2DFA                                          l7959 2DC2  
                                        l7895 2C32                                          l7887 2C08  
                                        l7879 2BD8                                          l8775 1D52  
                                        l8767 1D26                                          l8759 1CDA  
                                        l8679 1A54                                          l8687 1A74  
                                        l8695 1AA2                                          l8599 15E2  
                                        l8791 4B46                                          l8783 4B10  
                                        l8863 2244                                          l8847 2112  
                                        l8953 4038                                          l8945 3FF4  
                                        l8937 3FC2                                          l8929 3F6C  
                                        l7993 2EF4                                          l7985 2E9E  
                                        l7977 2E3A                                          l7969 2E08  
                                        l7897 2C38                                          l7889 2C18  
                                        l8769 1D32                                          l8777 1D6E  
                                        l8697 1AFA                                          l8689 1A86  
                                        l8793 4B68                                          l8849 2124  
                                        l8857 21F0                                          l8873 2272  
                                        l8881 53FA                                          l8961 3D62  
                                        l8947 4018                                          l8939 3FD0  
                                        l7995 2F0A                                          l7987 2EAC  
                                        l7979 2E68                                          l7899 2C3E  
                                        l8699 1B2E                                          l8795 4B7A  
                                        l8787 4B1C                                          l8875 22A0  
                                        l8859 221E                                          l8867 2252  
                                        l8883 5402                                          l8891 5AAE  
                                        l8963 3D6E                                          l8971 3D96  
                                        l8949 4028                                          l7997 2F24  
                                        l7989 2ED6                                          l8797 4BAC  
                                        l8789 4B2A                                          l8869 2264  
                                        l8885 5410                                          l8981 3E26  
                                        l8965 3D76                                          l8973 3DD8  
                                        l8957 3CA0                                          l8893 5BEA  
                                        l7999 2F40                                          l8887 543E  
                                        l8991 3E82                                          l8983 3E42  
                                        l8975 3DF6                                          l8967 3D82  
                                        l8959 3CEE                                          l8895 5BF0  
                                        STR_1 10B4                                          STR_2 1001  
                                        l8889 5AE2                                          l8985 3E4E  
                                        l8977 3E02                                          l8897 5BF4  
                                        STR_3 1042                                          STR_4 1001  
                                        l8987 3E6A                                          l8979 3E1E  
                                        l8899 5BF6                                          STR_5 1017  
                                        STR_6 10C9                                          l8989 3E72  
                                        STR_7 10A9                                          STR_8 1085  
                                        l8999 5386                                          STR_9 1091  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          u2805 5674  
                                        u2806 5676                                          u6200 473C  
                                        u6201 4738                                          u6210 475E  
                                        u6211 475A                                          u6220 4786  
                                        _PMD0 0039C0                                          u6221 4782  
                                        _PMD1 0039C1                                          u6230 47B8  
                                        _PMD2 0039C2                                          u6231 47B4  
                                        u6135 5B6E                                          _PMD3 0039C3  
                                        u8000 2C5E                                          _PMD4 0039C4  
                                        u6145 5B3A                                          u8001 2C5A  
                                        _PMD5 0039C5                                          u8010 2C6E  
                                        _PMD6 0039C6                                          u8011 2C6A  
                                        _PMD7 0039C7                                          u6180 46E0  
                                        u8100 2E28                                          u8020 2CAE  
                                        u6181 46DC                                          u8101 2E24  
                                        u8021 2CAA                                          u6190 4702  
                                        u8110 2E3A                                          u8030 2CEE  
                                        u6191 46FE                                          u8111 2E36  
                                        u8031 2CEA                                          u8200 27A8  
                                        u6440 527E                                          u6360 4BF6  
                                        u7400 22D4                                          u9000 34AC  
                                        u8120 2E68                                          u8040 2D64  
                                        u8201 27A4                                          u6441 527A  
                                        u6361 4BF2                                          u7401 22D0  
                                        u9001 34A8                                          u8121 2E64  
                                        u8041 2D60                                          u8210 27B8  
                                        u6450 528E                                          u6370 4C12  
                                        u7410 22E6                                          u7330 5546  
                                        u9010 34CA                                          u8130 2E7E  
                                        u8050 2D86                                          u8211 27B4  
                                        u6451 528A                                          u6371 4C0E  
                                        u7411 22E2                                          u7331 5542  
                                        u9011 34C6                                          u8131 2E7A  
                                        u8051 2D82                                          u8300 2A8A  
                                        u8220 27F8                                          u6380 4C52  
                                        u7500 2440                                          u7420 22F6  
                                        u7340 5556                                          u9020 34E4  
                                        u8140 2E92                                          u8060 2DB0  
                                        u9100 116C                                          u8301 2A86  
                                        u8221 27F4                                          u6381 4C4E  
                                        u7501 243A                                          u7421 22F2  
                                        u7341 5552                                          u9021 34E0  
                                        u8141 2E8E                                          u8061 2DAC  
                                        u9101 1168                                          u8310 2AB8  
                                        u8230 280A                                          u6390 4C6E  
                                        u7510 2442                                          u7430 2338  
                                        u7350 5586                                          u9030 34FE  
                                        u8150 2EAC                                          u8070 2DD4  
                                        u9110 117E                                          u8311 2AB4  
                                        u8231 2806                                          u6391 4C6A  
                                        u7431 2334                                          u7351 5582  
                                        u9031 34FA                                          u8151 2EA8  
                                        u8071 2DD0                                          u9111 117A  
                                        u8400 4DD8                                          u8320 2ACE  
                                        u8240 281A                                          u7600 255C  
                                        u7520 246A                                          u7440 234E  
                                        u7360 51DC                                          u9040 350C  
                                        u8160 2EF4                                          u8080 2DEA  
                                        u9200 1394                                          u9120 11C6  
                                        u8401 4DD4                                          u8321 2ACA  
                                        u8241 2816                                          u7601 2558  
                                        u7521 2466                                          u7441 234A  
                                        u7361 51D8                                          u9041 3508  
                                        u8161 2EF0                                          u8081 2DE6  
                                        u9201 1390                                          u9121 11C2  
                                        u8410 4DF6                                          u8330 2AE2  
                                        u8250 2850                                          u7610 25A2  
                                        u7530 2488                                          u7450 2360  
                                        u7370 51EE                                          u9050 351E  
                                        u8170 2F24                                          u8090 2E08  
                                        u9210 142A                                          u9130 11F6  
                                        u8411 4DF2                                          u8331 2ADE  
                                        u8251 284C                                          u7611 259E  
                                        u7531 2484                                          u7451 235C  
                                        u7371 51EA                                          u9051 351A  
                                        u8171 2F20                                          u8091 2E04  
                                        u9211 1426                                          u9131 11F0  
                                        u8420 4E12                                          u8340 2AFC  
                                        u8260 2860                                          u7700 268E  
                                        u7620 25D8                                          u7540 24A8  
                                        u7460 2370                                          u7380 5216  
                                        u9060 352C                                          u8180 2F52  
                                        u8500 50AA                                          u9300 15AC  
                                        u9220 149E                                          u9140 11F8  
                                        u8421 4E0E                                          u8341 2AF8  
                                        u8261 285C                                          u7701 268A  
                                        u7621 25D4                                          u7541 24A4  
                                        u7461 236C                                          u7381 5212  
                                        u9061 3528                                          u8181 2F4E  
                                        u8501 50A6                                          u9301 15A8  
                                        u9221 149A                                          u8430 4E38  
                                        u8350 2B44                                          u8270 29FE  
                                        u8190 2796                                          u7710 26A2  
                                        u7630 25E8                                          u7550 24B6  
                                        u7470 23AC                                          u7390 524C  
                                        u9070 3544                                          u8510 50E8  
                                        u9310 15BE                                          u9230 14C4  
                                        u9150 120E                                          u8431 4E34  
                                        u8351 2B40                                          u8191 2792  
                                        u7711 269E                                          u7631 25E4  
                                        u7551 24B2                                          u7471 23A8  
                                        u7391 5248                                          u9071 3540  
                                        u8511 50E4                                          u9311 15BA  
                                        u9231 14C0                                          u9151 120A  
                                        u8360 2B72                                          u8280 2A58  
                                        u8600 4826                                          u7720 26BC  
                                        u7640 2614                                          u7560 24C6  
                                        u7480 23BA                                          u7800 58A6  
                                        u8440 4FDE                                          u8520 511C  
                                        u9400 18BC                                          u9320 15CC  
                                        u9240 14D6                                          u9160 129A  
                                        u9080 110E                                          u8361 2B6E  
                                        u8281 2A54                                          u7721 26B8  
                                        u7641 2610                                          u7561 24C2  
                                        u7481 23B6                                          u7801 58A2  
                                        u8441 4FDA                                          u8521 5118  
                                        u9401 18B8                                          u9321 15C8  
                                        u9241 14D2                                          u9161 1296  
                                        u9081 110A                                          u8370 2BAC  
                                        u8290 2A78                                          u8610 4854  
                                        u7730 26F6                                          u7650 2624  
                                        u7570 24F8                                          u7490 2428  
                                        u8450 4FF8                                          u8530 4912  
                                        u7810 595A                                          u9410 1908  
                                        u9330 15E2                                          u9250 14F8  
                                        u9170 12CA                                          u9090 115E  
                                        u8371 2BA8                                          u8291 2A74  
                                        u8275 29F4                                          u8611 4850  
                                        u7731 26F2                                          u7651 2620  
                                        u7571 24F4                                          u7491 2424  
                                        u8451 4FF4                                          u8531 490E  
                                        u7811 5954                                          u9411 1904  
                                        u9331 15DE                                          u9251 14F4  
                                        u9171 12C4                                          u9091 115A  
                                        u8380 4D98                                          u8620 4868  
                                        u7740 2708                                          u7660 2640  
                                        u7580 2506                                          u7900 41E4  
                                        u8700 5854                                          u8460 5012  
                                        u8540 4950                                          u7820 595C  
                                        u9500 1B58                                          u9420 192E  
                                        u9340 15F0                                          u9260 151E  
                                        u9180 12CC                                          u8381 4D94  
                                        u8621 4864                                          u8605 481C  
                                        u7741 2704                                          u7661 263C  
                                        u7581 2502                                          u7901 41E0  
                                        u8701 5850                                          u8461 500E  
                                        u8541 494C                                          u9501 1B54  
                                        u9421 192A                                          u9341 15EC  
                                        u9261 151A                                          u8390 4DB2  
                                        u8630 4890                                          u7750 2718  
                                        u7670 2650                                          u7590 2524  
                                        u7830 405C                                          u7910 4216  
                                        u8470 5030                                          u8550 496E  
                                        u8710 4A28                                          u9510 1B74  
                                        u9430 19D0                                          u9350 161A  
                                        u9270 1534                                          u9190 12E2  
                                        u8391 4DAE                                          u8631 488C  
                                        u7751 2714                                          u7671 264C  
                                        u7591 2520                                          u7831 4058  
                                        u7911 4212                                          u8471 502C  
                                        u8551 496A                                          u9511 1B70  
                                        u9431 19CC                                          u9351 1616  
                                        u9271 1530                                          u9191 12DE  
                                        u8640 48B0                                          u7760 2738  
                                        u7680 2662                                          u7840 408E  
                                        u7920 4254                                          u8480 5046  
                                        u8560 498E                                          u8720 4A46  
                                        u8800 5504                                          u9600 1D10  
                                        u9520 1B86                                          u9440 19E4  
                                        u9360 1762                                          u9280 1550  
                                        u8641 48AC                                          u7761 2734  
                                        u7681 265E                                          u7841 408A  
                                        u7921 4250                                          u8481 5042  
                                        u8561 498A                                          u8721 4A42  
                                        u8801 54FE                                          u9521 1B82  
                                        u9441 19E0                                          u9361 175E  
                                        u9281 154C                                          u8650 48C0  
                                        u7770 274A                                          u7690 2678  
                                        u7930 427E                                          u8490 506A  
                                        u8570 49DE                                          u8730 4A6E  
                                        u8810 5506                                          u9610 1D26  
                                        u9530 1B94                                          u9450 19F6  
                                        u9370 17CA                                          u9290 1586  
                                        u8651 48BC                                          u7771 2746  
                                        u7691 2674                                          u7851 40B8  
                                        u7931 427A                                          u8491 5066  
                                        u8571 49DA                                          u8731 4A6A  
                                        u8715 4A1E                                          u9611 1D22  
                                        u9531 1B90                                          u9451 19F2  
                                        u9371 17C6                                          u9291 1582  
                                        u7780 2766                                          u7860 40DC  
                                        u7940 42AC                                          u8660 4E58  
                                        u8580 5978                                          u8740 4A98  
                                        u8900 3C26                                          u8820 551C  
                                        u9540 1BCA                                          u9460 1A04  
                                        u9380 1810                                          u9620 4B10  
                                        u9700 1EE4                                          u7781 2762  
                                        u7861 40D8                                          u7941 42A8  
                                        u8661 4E54                                          u8581 5974  
                                        u8741 4A94                                          u8821 5518  
                                        u9541 1BC6                                          u9461 1A00  
                                        u9381 180C                                          u9621 4B0C  
                                        u9701 1EE0                                          u8590 47F2  
                                        u7870 4106                                          u7950 42F4  
                                        u7790 57F4                                          u8670 4E7A  
                                        u8910 3C42                                          u8830 3AD4  
                                        u9550 1BF8                                          u9470 1A20  
                                        u9390 1820                                          u9630 4B46  
                                        u9710 1F12                                          u8591 47EE  
                                        u7871 4102                                          u7951 42F0  
                                        u7791 57F0                                          u8671 4E76  
                                        u8911 3C3E                                          u9551 1BF4  
                                        u9471 1A1C                                          u9391 181C  
                                        u9631 4B42                                          u9711 1F0E  
                                        u7880 4146                                          u8680 4ED0  
                                        u7960 2BE6                                          u8760 4AD2  
                                        u8920 3C7E                                          u8840 3B02  
                                        u9560 1C7C                                          u9480 1A2E  
                                        u9640 4B68                                          u9720 1FB8  
                                        u7881 4142                                          u8681 4ECC  
                                        u7961 2BE2                                          u8761 4ACC  
                                        u8921 3C7A                                          u8905 3C1C  
                                        u8841 3AFE                                          u9561 1C78  
                                        u9481 1A2A                                          u9641 4B64  
                                        u9721 1FB4                                          u7890 4190  
                                        u8690 4EDE                                          u8930 32E0  
                                        u7970 2BF8                                          u8770 4AD4  
                                        u8850 3B24                                          u9570 1C96  
                                        u9490 1A86                                          u9650 4B7A  
                                        u9730 208A                                          u9810 5C06  
                                        u7891 418C                                          u8691 4EDA  
                                        u8931 32DA                                          u7971 2BF4  
                                        u8755 4AAA                                          u8851 3B20  
                                        u8835 3ACA                                          u9571 1C92  
                                        u9491 1A82                                          u9651 4B76  
                                        u9731 2086                                          u9811 5C02  
                                        u9900 4028                                          u9820 3EA8  
                                        u8940 32E2                                          u7980 2C08  
                                        u8780 54C0                                          u9580 1CAE  
                                        u9660 4BAC                                          u9740 210C  
                                        u9901 4024                                          u9821 3EA4  
                                        u7981 2C04                                          u9581 1CAA  
                                        u9661 4BA8                                          u9741 2106  
                                        u9805 5AD2                                          u9910 4036  
                                        u9830 3EB6                                          u8950 32F8  
                                        u7990 2C4C                                          u8870 3B92  
                                        u8790 54D2                                          u9590 1D0E  
                                        u9750 210E                                          u9670 1DC2  
                                        u9911 4032                                          u9831 3EB2  
                                        u8951 32F4                                          u7991 2C48  
                                        u8871 3B8E                                          u8791 54CE  
                                        u9591 1D08                                          u9671 1DBE  
                                        u9840 3F12                                          u8960 3326  
                                        u8880 3BB6                                          u9760 2124  
                                        u9680 1E26                                          u9920 3DF6  
                                        u9841 3F0E                                          u8961 3322  
                                        u8865 3B38                                          u9761 2120  
                                        u9681 1E22                                          u9921 3DF2  
                                        u9850 3F68                                          u8970 3342  
                                        u8890 3BD2                                          u8866 3B42  
                                        u9770 221E                                          u9690 1E76  
                                        u9930 3E1E                                          u9851 3F64  
                                        u8971 333E                                          u8891 3BCE  
                                        u8867 3B52                                          u8787 54B2  
                                        u9771 221A                                          u9691 1E72  
                                        u9931 3E1A                                          u9860 3FB2  
                                        u8980 3370                                          u9780 5460  
                                        u9940 3E42                                          u9861 3FAE  
                                        u8981 336C                                          u8885 3BAC  
                                        u9781 545C                                          u9941 3E3E  
                                        u9870 3FD0                                          u8990 337E  
                                        u9950 3E6A                                          u9871 3FCC  
                                        u8991 337A                                          u9951 3E66  
                                        u9880 3FE0                                          u9960 5310  
                                        u9881 3FDC                                          u9961 530C  
                                        u9890 3FEE                                          u9970 5364  
                                        _TMR2 003FAA                                          u9891 3FEA  
                                        u9795 5B06                                          u9971 5360  
                                        u9980 2FAE                                          _TMR4 003F9E  
                                        u9981 2FAA                                          u9990 2FCA  
                                        u9991 2FC6                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 013A                                          _main 5E50  
                                        _dtoa 32AE                                          _loop 45B2  
                                        _prec 003A                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                 ___fpclassifyf 49E8  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0190  
                             ___fldiv@new_exp 0065                               _TMR3_Initialize 599A  
                             _PWM5_Initialize 5EF2                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3688 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 58F0  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 5B16  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 5F22  
                               ___fltol@sign1 0081                               __end_of___aldiv 47DA  
                             __end_of___aodiv 41D2                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 5CDA  
                             __end_of___fladd 277A                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 4336                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2F66  
                                       _ADREF 003EFD                               __end_of___awdiv 4E4A  
                             __end_of___flneg 599A                                         ?_loop 0001  
                                       STR_10 1050                                         STR_11 105E  
                                       STR_12 109D                                         STR_13 10BF  
                                       STR_22 10D6                                         STR_14 1034  
                                       STR_23 10DE                                         STR_15 106B  
                                       STR_16 1026                                         STR_17 1078  
                                       STR_26 10E2                                         STR_18 10D2  
                                       STR_19 10DA                                         STR_28 10E2  
                             __end_of___awmod 507C                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 2BCA  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___flsub 57B2  
                             __end_of___fltol 48E2                                         u10000 2FE2  
                                       u10001 2FDE                                         u10010 303E  
                                       u10011 303A                                         u10100 315A  
                                       u10020 305A                                         u10101 3156  
                                       u10021 3056                                         u10110 3170  
                                       u10030 3072                                         u10111 316C  
                                       u10031 306E                                         u10120 3198  
                                       u10040 30C2                                         u10200 4502  
                                       u10121 3194                                         u10041 30BE  
                                       u10201 44FE                                         u10130 31D4  
                                       u10050 30F4                                         u10210 4514  
                                       u10131 31D0                                         u10051 30F0  
                                       u10211 4510                                         u10300 3826  
                                       u10140 3206                                         u10060 3106  
                                       u10220 452A                                         u10301 3822  
                                       u10141 3202                                         u10061 3102  
                                       u10221 4526                                         u10310 383E  
                                       u10150 3244                                         u10070 311C  
                                       u10230 456C                                         u10311 383A  
                                       u10151 3240                                         u10071 3118  
                                       u10231 4568                                         u10400 4410  
                                       u10320 3888                                         u10080 312E  
                                       u10240 458A                                         u10160 449A  
                                       u10401 440C                                         u10321 3884  
                                       u10081 312A                                         u10241 4586  
                                       u10161 4496                                         u10410 443C  
                                       u10330 38A8                                         u10250 35C8  
                                       u10090 3144                                         u10170 44B6  
                                       u10411 4438                                         u10331 38A4  
                                       u10251 35C4                                         u10091 3140  
                                       u10171 44B2                                         u10420 4464  
                                       u10340 38C6                                         u10260 35F0  
                                       u10180 44C8                                         u10421 4460  
                                       u10341 38C2                                         u10261 35EC  
                                       u10181 44C4                                         u10350 3900  
                                       u10270 36AA                                         u10190 44EA  
                                       u10430 45DE                                         u10351 38FC  
                                       u10271 36A6                                         u10191 44E6  
                                       u10431 45DA                                         u10360 391A  
                                       u10280 36E6                                         u10440 45F0  
                                       u10361 3916                                         u10281 36E2  
                                       u10441 45EC                                         u10370 3A54  
                                       u10290 3814                                         u10450 4640  
                                       u10371 3A50                                         u10291 3810  
                                       u10451 463C                                         u10380 3A78  
                                       u10460 4666                               ___awdiv@divisor 0016  
                                       u10381 3A74                                         u10461 4662  
                                       u10390 43F4                                         u10470 4678  
                                       u10391 43F0                                         u10471 4674  
                                       u10480 46B0                                         u10481 46AC  
                                       _U1P1H 003DED                                         _U1P2H 003DEF  
                                       _U1P1L 003DEC                                         _U1P3H 003DF1  
                                       _T3CLK 003FA9                                         _T2CON 003FAC  
                                       _U1P2L 003DEE                                         _U1P3L 003DF0  
                                       _T3CON 003FA6                                         _T5CLK 003F9D  
                                       _T4CON 003FA0                                         _T2HLT 003FAD  
                                       _T5CON 003F9A                                         _T4HLT 003FA1  
                                       _T2TMR 003FAA                                         _U1UIR 003DF8  
                                       i1l330 5922                                         _T2RST 003FAF  
                                       _U1RXB 003DE8                                         i1l324 58E6  
                                       i1l333 5834                                         i1l350 5FA6  
                                       i1l343 4FCA                                         i1l336 5838  
                                       i1l353 5FA4                                         _U1TXB 003DEA  
                                       i1l347 5D8A                                         i1l356 5FA2  
                                       _T4TMR 003F9E                                         _T4RST 003FA3  
                                       i2l409 5FAC                                         i1l692 5D06  
                                       i2l534 5DB6                                         i2l438 5A76  
                                       i2l446 5BB2                                         i2l552 5C4C  
                                       i1l688 5A04                                         i2l529 5E4E  
                                       i2l537 5F2E                                         i1l698 5FA8  
                                       i2l476 5AAC                                         i2l558 5E8C  
                                       i2l487 5BE6                           ??_UART1_rx_vect_isr 0012  
                                       i2l863 563E                                         i2l856 5768  
                                       i2l868 5E06                               ___awdiv@counter 0018  
                                       _OSCEN 0039DD                                  vfpfcnvrt@fmt 00C9  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 5FAC  
                             _TMR4_Initialize 5D08                               _PWM6_Initialize 5EDA  
                           _UART1_tx_vect_isr 58B4                              __end_of_TMR4_ISR 5A0C  
                     setSteering@steeringMode 0085                                         _delay 00F7  
                                       _flags 003C                                         _fputc 51CA  
                                       _fputs 57B2                         __size_of_calcMotorPow 014C  
                          ?_UART1_tx_vect_isr 0001                                         pad@fp 0026  
                                       _width 00E5                                         _putch 5F30  
                                       dtoa@d 0062                                         dtoa@i 007A  
                                       dtoa@n 0072                                         dtoa@p 006C  
                                       dtoa@s 0070                                         dtoa@w 006E  
                            ?_SMT1_Initialize 0001                               __end_of_isupper 5962  
                                       pclath 003FFA                                         tablat 003FF5  
                                 _BatteryVolt 00E7                               _curveRightCount 00F8  
                       __size_of_calcSteering 02D0                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5F4E                   _UART1_SetRxInterruptHandler 5F44  
                     __end_of_CCP4_Initialize 5CAC                                ?___fpclassifyf 0014  
                             __end_of_tolower 5534                               __end_of_strncmp 4BDA  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 5FA8  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5FA6  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 592A  
                             _TMR5_Initialize 56D6                               _PWM7_Initialize 5EC2  
                             __initialization 5A0C                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 5E70  
                                __end_of_dtoa 3594                                  __end_of_loop 46CE  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 5EAA  
                              _roundTimeCount 003E                                  ?_UART1_Write 0001  
                                      ??_main 003A                                        ??_dtoa 0031  
                                      ??_loop 003A                                 __activetblptr 000003  
                                _calcMotorPow 4336          __size_of_UART1_SetTxInterruptHandler 000A  
                   __end_of_UART1_tx_vect_isr 58EE                               _PWM8_Initialize 5EAA  
                            _UART1_Initialize 5126                                  _calcSteering 3594  
                            ?_CCP4_CaptureISR 0001                                        _ADACCH 003EE9  
                                      _ADACCL 003EE8                                        _ADACCU 003EEA  
                                      _ADACQH 003EF4                                        _ADACQL 003EF3  
                                      _ADCON0 003EF8                                        _ADCON1 003EF9  
                                      _ADCON2 003EFA                                        _ADCON3 003EFB  
                                      _ADERRH 003EE3                                        _ADERRL 003EE2  
                                      ?_fputc 0016                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        ?_fputs 001F  
                                      _ADRESH 003EF0                                        _ADRESL 003EEF  
                                      _ADPREH 003EF7                                        _ADPREL 003EF6  
                                      _CCPR3H 003F75                                        _CCPR4H 003F71  
                                      _CCPR3L 003F74                                        _CCPR4L 003F70  
                                      _ADSTAT 003EFC                                        _ADUTHH 003EE1  
                            ___awdiv@dividend 0014                                        _ADUTHL 003EE0  
                          _PWM8_LoadDutyValue 5B16                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1247 5F9C  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                       __end_of_PWM5_Initialize 5F0A  
                     __end_of_TMR3_Initialize 59D2                                        i1l7201 4F8C  
                                      i1l7203 4FA8                                        i1l7205 4FC6  
                                      i1l7311 59DE                                        i1l7129 5F94  
                                      i1l7313 59F8                                        i1l7315 59FC  
                                      i1l7245 5CDA                                        i1l7309 59DA  
                                      i1l7181 581A                                        i1l7247 5CEE  
                                      i1l7191 4F2C                                        i1l7183 582A  
                                      i1l7175 57F6                                        i1l7193 4F3C  
                                      i1l7185 582E                                        i1l7177 5806  
                                      i1l7195 4F54                                        i1l7187 4F0C  
                                      i1l7291 590A                                        i1l7179 5818  
                                      i1l6581 5D72                                        i1l7197 4F64  
                                      i1l7189 4F1C                                        i1l7285 58BA  
                                      i1l6583 5D74                                        i1l7199 4F74  
                                      i1l7287 58CE                                        i1l6585 5D84  
                                      i1l7289 58F6                                        i1l6587 5D88  
                                      i1l6579 5D60                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l7211 5A5C  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l7301 5C1C                                        i2l7221 5AA6  
                                      i2l7213 5A70                                        i1l6789 5F9E  
                                      _INLVLE 003A84                                        i2l7223 5E70  
                                      i2l7303 5C20                                        i2l7215 5A78  
                                      i2l7207 5A42                                        i2l7321 5734  
                                      i2l6601 5DA0                                        i2l7225 5E7C  
                                      i2l7305 5C34                                        i2l7217 5A86  
                                      i2l7209 5A50                                        i2l7331 560A  
                                      i2l7323 5744                                        i2l6603 5DA6  
                                      i2l7227 5E84                                        i2l7219 5A92  
                                      i2l7333 561A                                        i2l7325 5756  
                                      i2l7317 5720                                        i2l6605 5DAC  
                                      i2l7229 5E88                                        i2l7335 562C  
                                      i2l7327 55EC                                        i2l7319 5724  
                                      i2l6607 5DB0                                        i2l7337 5DE0  
                                      i2l7329 55F0                                        i2l7339 5DE4  
                                      i2l7293 5B80                                        i2l7295 5B90  
                                      i2l7297 5BB4                                        i2l6595 5D8C  
                                      i2l7299 5BC4                                        i2l6597 5D9A  
                                      i2l6791 5E2C                                        i2l6599 5D9C  
                                      i2l6793 5E3A                                        i2l6795 5E46  
                                      i2l6799 5F22                                  ?_setSteering 0083  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 52F4  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 5F62  
                            __end_of___xxtofl 404A                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 32AE                      __end_of_CCP3_SetCallBack 5F94  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                vfprintf@cfmt 00E3                                        ___flge 48E2  
                                      ___fleq 507C                                     ??___aldiv 001C  
                                   ??___aodiv 0024                                     ??___fladd 0036  
                                   ??___aomod 0024                                     ??___fldiv 0032  
                                   ??___awdiv 0018                                     ??___flneg 0018  
                                   ??___awmod 0018                                     ??___flmul 0032  
                                   ??___flsub 003A                                     ??___fltol 007D  
                                      _efgtoa 10E6                                 _CCP3_CallBack 0194  
                                      _floorf 3A8A                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 5EF2                       __end_of_TMR4_Initialize 5D34  
                                      clear_0 5A12                                        clear_1 5A1E  
                                      clear_2 5A2A                              ___awdiv@quotient 001A  
                                      _motPow 012E                               ___awmod@divisor 0016  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                             ___awmod@counter 0018                                 _CCP4_CallBack 0192  
                                      _smtWay 0120                                        _printf 5DB8  
                                      pad@buf 0028                                        dtoa@fp 0060  
                            ?_CCP3_Initialize 0001                                        _strcpy 546A  
                                      _strlen 587A                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 4CBC                               _ADCC_Initialize 5590  
        __end_of_TMR4_DefaultInterruptHandler 5FAA         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 5FA8                                        fputc@c 0016  
                              _PMD_Initialize 5E08                                        fputs@c 0023  
                                      fputs@i 0024                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5C4E                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 546A                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 5F58         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 5F4E                     _UART1_DefaultErrorHandler 5F9E  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 01B0                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 5EDA                       __end_of_TMR5_Initialize 5720  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 568C                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 5A3C  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0083                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 5D8C  
                          __size_of_calcSpeed 0226                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 5F8A                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 5D08                            __size_of_checkBatt 0092  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 5260  
                               __end_of_fputs 57F6                               fp__TMR4_10msISR 0000  
                               __end_of_putch 5F3A                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 5EC2                        __end_of_PMD_Initialize 5E2C  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 019A               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 56D6                                       ??_fputs 0023  
                             _CLC3_Initialize 5D34                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00E5  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 018A  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 55EC                    __end_of_PWM6_LoadDutyValue 5AE2  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 5F76  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 5F6C  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 0036  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0036  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01A6                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 4F0C                                    _getReverse 4482  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 5AE2  
                                  _distRightM 0136                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 3A8A                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 0524                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 5386  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 5DB8  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01F6                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 51CA  
                                     ___aldiv 46CE                               __size_of___flge 0106  
                             __size_of___fleq 00AA                                       ___aodiv 404A  
                                     ___fladd 22B8                                       ___aomod 41D2  
                                     ___fldiv 2BCA                                       ___awdiv 4D86  
                                     ___flneg 5962                                       ___awmod 4FCC  
                                     ___flmul 277A                                       ___flsub 576A  
                                     ___fltol 47DA                     __end_of_UART1_Receive_ISR 4FCC  
                                   ?_vfprintf 01A0                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 5A0C  
                   _TMR5_GateInterruptHandler 018E                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 5E50  
                                     __ptext1 45B2                                       __ptext2 4482  
                                     __ptext3 2F66                                       __ptext4 52F4  
                                     __ptext5 5386                                       __ptext6 5BE8  
                                     __ptext7 3594                                       __ptext8 3CA0  
                                     __ptext9 5AAE                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 5D60  
                       _OSCILLATOR_Initialize 5F0A                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0036  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 592A  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 01AE  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 54D4                                       _strncmp 4AE6  
                        end_of_initialization 5A3C                                       floorf@e 0077  
                                   _T2RSTbits 003FAF                                       floorf@m 0073  
                                     floorf@u 0079                                       floorf@x 0036  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 5F44  
                 _UART1_SetTxInterruptHandler 5F3A                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 22B8  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5C1A                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 5D60                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 0078  
                          getCurve@deltaRight 01B2                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                              _curveLeftCount 00F9                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 568C                                __end_of___flge 49E8  
                              __end_of___fleq 5126                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00DF  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D94                             __size_of_TMR4_ISR 0038  
                              __end_of_floorf 3CA0                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 5DE0  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 54D4                                __end_of_strlen 58B4  
                              _TMR5_ReadTimer 5E2C                           start_initialization 5A0C  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 587A                                   __end_of_pad 4F0C  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00E9  
                       __end_of___fpclassifyf 4AE6                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 0130                          __end_of_TMR4_10msISR 5F9E  
                                 vfprintf@fmt 01A2                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00EF  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 5B7E  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 5E50                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 5BE8  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 0040  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 0196  
                               __pcstackBANK0 0060                                 __pcstackBANK1 01A0  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 5AAE                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 019E  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5A78  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 3864  
                           __size_of_getCurve 0348                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 52F4                                  _currentSpeed 00EB  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK1 018A  
                                 _efgtoa$3571 0093                                   _efgtoa$3566 008F  
                                 _efgtoa$3575 0095                                   _efgtoa$3567 0091  
                                 _efgtoa$3576 0097                                   _efgtoa$3577 0099  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 4CBC  
                                   _dtoa$3542 006A                      __size_of_PWM5_Initialize 0018  
                    __size_of_TMR3_Initialize 0038                             ?_UART1_Initialize 0001  
        __end_of_UART1_SetFramingErrorHandler 5F62         __size_of_UART1_SetFramingErrorHandler 000A  
                _UART1_SetFramingErrorHandler 5F58                                      ?___aldiv 0014  
             ADCC_GetSingleConversion@channel 0018                                      ?___aodiv 0014  
                                    ?___fladd 006D                                      ?___aomod 0014  
                           __size_of_setMotor 00E2              __end_of_TMR4_SetInterruptHandler 5F80  
                                    ?___fldiv 002A                                      ?___awdiv 0014  
                                   __ptext100 55EC                                     __ptext101 5DE0  
                                   __ptext102 0000                              ___aodiv@quotient 0026  
                                    ?___flneg 0014             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                            ??_UART1_Initialize 0016  
                                   _distLeftM 0138                                     _distFront 00FD  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 00F3                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FA                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FC  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 5FA6  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5FA4  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 5720                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 5C1C  
                                   _curveMode 00FB                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 5640                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 55EC  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5AAE                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u701_20 4FA8  
                                    i1u700_28 4F7A                                      i1u701_21 4FA4  
                                    i1u700_29 4F8C                                      i1u702_28 4FAE  
                                    i1u702_29 4FC2                                      i1u706_20 5CEE  
                                    i1u722_20 59F8                                      i1u634_20 5D84  
                                    i1u714_20 58CE                                      i1u706_21 5CEA  
                                    i1u722_21 59F4                                      i1u634_21 5D80  
                                    i1u714_21 58CA                                      i1u707_28 5CF4  
                                    i1u716_20 590A                                      i1u715_28 58D4  
                                    i1u707_29 5D06                                      i1u716_21 5906  
                                    i1u715_29 58E6                                      i1u717_28 5910  
                                    i1u717_29 5922                                      _PIR1bits 0039A1  
                                    i1u695_20 5806                                      i1u695_21 5802  
                                    i2u703_40 5A50                                      i2u703_41 5A4C  
                                    _PIR4bits 0039A4                                      i1u696_20 582A  
                                    i1u696_21 5826                                      i2u720_40 5C34  
                                    i2u704_40 5A86                                      i2u720_41 5C30  
                                    i2u704_41 5A82                                      i1u697_20 4F2C  
                                    i1u697_21 4F28                                      i2u721_48 5C3A  
                                    i2u721_49 5C4C                                      i1u699_20 4F64  
                                    i1u698_28 4F42                                      i1u699_21 4F60  
                                    i1u698_29 4F54                                      i2u723_40 5744  
                                    i2u635_40 5D9A                                      i2u723_41 5740  
                                    i2u635_41 5D96                                      _PIR6bits 0039A6  
                                    i2u724_40 561A                                      i2u724_41 5616  
                                    _PIR7bits 0039A7                                      i2u718_48 5B9E  
                                    i2u718_49 5BB2                                      _PIR8bits 0039A8  
                                    i2u719_48 5BD2                                      i2u719_49 5BE6  
                                    _PIR9bits 0039A9                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 5DE0                                      _TMR4_ISR 59D4  
                  __end_of_UART1_Transmit_ISR 583A                                 _TMR4_CallBack 5CDA  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D94                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 5386                                  ??_getReverse 003A  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 01AE  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 5590                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00E2                                    vfpfcnvrt@f 00DB  
                         ??_getBatteryVoltage 003A                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 000A  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 45B2                                    _ADSTATbits 003EFC  
                                 _followCount 0130                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 5E08                           __end_of_setSteering 3E96  
                                  vfprintf@ap 01A4                                      __Lrparam 0000  
                                  vfprintf@fp 01A0                                   _oldDistLeft 00F1  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 53FA                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039C                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 5A42                       __end_of_SMT1_PR_ACQ_ISR 576A  
                                  ?_vfpfcnvrt 00C7                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 5F76  
                          ___fpclassifyf@F465 011C                                      _actSpeed 5260  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 5F94  
                                    ___xxtofl 3E96                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 5F30                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 5640  
                                    _getCurve 2F66                                      __ptext10 5AE2  
                                    __ptext11 5DB8                                      __ptext20 49E8  
                                    __ptext12 53FA                                      __ptext21 576A  
                                    __ptext13 1D94                                      __ptext30 57B2  
                                    __ptext22 5962                                      __ptext14 4AE6  
                                    __ptext31 51CA                                      __ptext23 48E2  
                                    __ptext15 10E6                                      __ptext40 4BDA  
                                    __ptext32 5F30                                      __ptext24 507C  
                                    __ptext16 54D4                                      __ptext41 5B16  
                                    __ptext33 5534                                      __ptext25 2BCA  
                                    __ptext17 592A                                      __ptext50 5126  
                                    __ptext42 5B4A                                      __ptext34 583A  
                                    __ptext26 4FCC                                      __ptext18 546A  
                                    __ptext51 5F3A                                      __ptext43 5260  
                                    __ptext35 41D2                                      __ptext27 32AE  
                                    __ptext19 3A8A                                      __ptext60 599A  
                                    __ptext52 5F44                                      __ptext44 46CE  
                                    __ptext36 404A                                      __ptext28 4E4A  
                                    __ptext61 5E8E                                      __ptext53 5F4E  
                                    __ptext45 3E96                                      __ptext37 3864  
                                    __ptext29 587A                                      __ptext70 5640  
                                    __ptext62 5C4E                                      __ptext54 5F58  
                                    __ptext46 47DA                                      __ptext38 22B8  
                                    __ptext71 5D34                                      __ptext63 5EAA  
                                    __ptext55 5F62                                      __ptext47 277A  
                                    __ptext39 4336                                      __ptext80 4F0C  
                                    __ptext72 5C7E                                      __ptext64 5EC2  
                                    __ptext56 56D6                                      __ptext48 4D86  
                                    __ptext81 5FA4                                      __ptext73 5F80  
                                    __ptext65 5EDA                                      __ptext57 5F6C  
                                    __ptext49 568C                                      __ptext90 5B80  
                                    __ptext82 5FA6                                      __ptext74 5CAC  
                                    __ptext66 5EF2                                      __ptext58 5D08  
                                    __ptext91 5A42                                      __ptext83 5F9E  
                                    __ptext75 5F8A                                      __ptext67 5E08  
                                    __ptext59 5F76                                      __ptext92 5BB4  
                                    __ptext84 5D60                                      __ptext76 5590  
                                    __ptext68 4CBC                                      __ptext93 5A78  
                                    __ptext85 59D4                                      __ptext77 58B4  
                                    __ptext69 5F0A                                      __ptext94 5C1C  
                                    __ptext86 5CDA                                      __ptext78 57F6  
                                    __ptext95 5E70                                      __ptext87 5F94  
                                    __ptext79 58F0                                      __ptext96 5F22  
                                    __ptext88 5FA8                                      __ptext97 5D8C  
                                    __ptext89 5FAC                                      __ptext98 5E2C  
                                    __ptext99 5720                              __size_of_isupper 0038  
                                    _distLeft 00F5                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 5F6C  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 011C  
                             _SMT1_Initialize 5C4E                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4BDA                                      _setSpeed 00ED  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 0198  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 53FA                                     printf@fmt 01A6  
                  __end_of_PWM8_LoadDutyValue 5B4A                               _CCP3_CaptureISR 5B80  
                                 _UART1_Write 5534                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 5E8E  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 5E70  
                            ___aomod@dividend 0014                                _battCheckCount 0132  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0134                               ??_TMR5_GATE_ISR 0011  
                              _vfpfcnvrt$3595 00D9                   __end_of_UART1_RxDataHandler 5D8C  
                                 _uart1RxHead 0045                          _CCP4_DefaultCallBack 5A78  
                                 _uart1TxHead 0047                                   _uart1RxTail 0044  
                                 _uart1TxTail 0046                        ??_INTERRUPT_Initialize 0014  
                          _PWM7_LoadDutyValue 5B4A                                      intlevel1 0000  
                                    intlevel2 0000                      __size_of_CLC3_Initialize 002C  
                                 _setSteering 3CA0                               _CCP4_CaptureISR 5BB4  
                     ?_PIN_MANAGER_Initialize 0001                             ??_PWM8_Initialize 0014  
                         ?_PWM7_LoadDutyValue 0014                          __end_of_calcMotorPow 4482  
                                   strcpy@src 0016                                      isupper@c 0014  
                                   strncmp@_l 0014                                     strncmp@_r 0016  
                             ??_TMR4_CallBack 0013                    __size_of_SMT1_Overflow_ISR 0028  
                        __end_of_calcSteering 3864                           _uart1RxStatusBuffer 0100  
                                 efgtoa@nmode 00AF                                      printf@ap 01AC  
                            ??_TMR5_ReadTimer 000B                    __size_of_getBatteryVoltage 0074  
UART1_SetFramingErrorHandler@interruptHandler 0014             __end_of_UART1_DefaultErrorHandler 5FA4  
                             ___aomod@divisor 001C                                   ??_vfpfcnvrt 00CD  
                                 _reverseTime 012A                               ___aomod@counter 0024  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 5F22  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                      tolower@c 001A  
                               actSpeed@speed 0024                        __size_of___fpclassifyf 00FE  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 0087  
                                    strncmp@l 001B                                      strncmp@n 0018  
                            _CCP3_SetCallBack 5F8A                                      strncmp@r 001D  
                   __size_of_UART1_Initialize 00A4                                  ___aldiv@sign 001D  
                            ?_SMT1_PW_ACQ_ISR 0001                               _CCP3_Initialize 5CAC  
                 PWM6_LoadDutyValue@dutyValue 0014                             calcSteering@delta 01B0  
                      _getBatteryVoltage$4192 01AE                      _UART1_TxInterruptHandler 019C  
                               ___fladd@signs 0075                           __end_of_Default_ISR 5FAE  
                     __end_of_SMT1_Initialize 5C7E                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 4D86                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5BB4  
