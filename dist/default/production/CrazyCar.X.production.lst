

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 15:11:42 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=4,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=4,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=4,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=4,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=4,class=CODE,delta=1
   122                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   123                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   124                           	psect	text103,global,reloc=4,class=CODE,delta=1
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K42 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	idataBANK0
   165  005EB2                     __pidataBANK0:
   166                           	callstack 0
   167                           
   168                           ;initializer for _driveMode
   169  005EB2  01                 	db	1
   170                           
   171                           	psect	idataBANK1
   172  005EA8                     __pidataBANK1:
   173                           	callstack 0
   174                           
   175                           ;initializer for _middleOffSet
   176  005EA8  FFF6               	dw	65526
   177                           
   178                           	psect	nvCOMRAM
   179  00004C                     __pnvCOMRAM:
   180                           	callstack 0
   181  00004C                     _uart1TxBufferRemaining:
   182                           	callstack 0
   183  00004C                     	ds	1
   184                           
   185                           	psect	nvBANK1
   186  000184                     __pnvBANK1:
   187                           	callstack 0
   188  000184                     _TMR4_InterruptHandler:
   189                           	callstack 0
   190  000184                     	ds	2
   191  000186                     _timer3ReloadVal:
   192                           	callstack 0
   193  000186                     	ds	2
   194  000188                     _TMR5_GateInterruptHandler:
   195                           	callstack 0
   196  000188                     	ds	2
   197  00018A                     _timer5ReloadVal:
   198                           	callstack 0
   199  00018A                     	ds	2
   200  00018C                     _CCP4_CallBack:
   201                           	callstack 0
   202  00018C                     	ds	2
   203  00018E                     _CCP3_CallBack:
   204                           	callstack 0
   205  00018E                     	ds	2
   206  000190                     _UART1_ErrorHandler:
   207                           	callstack 0
   208  000190                     	ds	2
   209  000192                     _UART1_OverrunErrorHandler:
   210                           	callstack 0
   211  000192                     	ds	2
   212  000194                     _UART1_FramingErrorHandler:
   213                           	callstack 0
   214  000194                     	ds	2
   215  000196                     _UART1_TxInterruptHandler:
   216                           	callstack 0
   217  000196                     	ds	2
   218  000198                     _UART1_RxInterruptHandler:
   219                           	callstack 0
   220  000198                     	ds	2
   221  0000                     _PIR4bits	set	14756
   222  0000                     _PIR1bits	set	14753
   223  0000                     _PIE1bits	set	14737
   224  0000                     _PIE7bits	set	14743
   225  0000                     _PIR7bits	set	14759
   226  0000                     _PIR6bits	set	14758
   227  0000                     _PIE8bits	set	14744
   228  0000                     _PIR8bits	set	14760
   229  0000                     _PIE10bits	set	14746
   230  0000                     _PIR10bits	set	14762
   231  0000                     _PIE9bits	set	14745
   232  0000                     _PIR9bits	set	14761
   233  0000                     _IPR9bits	set	14729
   234  0000                     _IPR7bits	set	14727
   235  0000                     _IPR8bits	set	14728
   236  0000                     _IPR10bits	set	14730
   237  0000                     _IPR1bits	set	14721
   238  0000                     _IPR3bits	set	14723
   239  0000                     _PIE3bits	set	14739
   240  0000                     _PMD7	set	14791
   241  0000                     _PMD6	set	14790
   242  0000                     _PMD5	set	14789
   243  0000                     _PMD4	set	14788
   244  0000                     _PMD3	set	14787
   245  0000                     _PMD2	set	14786
   246  0000                     _PMD1	set	14785
   247  0000                     _PMD0	set	14784
   248  0000                     _OSCTUNE	set	14814
   249  0000                     _OSCFRQ	set	14815
   250  0000                     _OSCEN	set	14813
   251  0000                     _OSCCON3	set	14811
   252  0000                     _OSCCON1	set	14809
   253  0000                     _CCP4PPS	set	15056
   254  0000                     _SMT1SIGPPS	set	15058
   255  0000                     _CLCIN2PPS	set	15067
   256  0000                     _RB3PPS	set	14859
   257  0000                     _RA3PPS	set	14851
   258  0000                     _SMT1WINPPS	set	15057
   259  0000                     _CLCIN0PPS	set	15065
   260  0000                     _RA4PPS	set	14852
   261  0000                     _T5GPPS	set	15049
   262  0000                     _RA0PPS	set	14848
   263  0000                     _U1RXPPS	set	15077
   264  0000                     _RA1PPS	set	14849
   265  0000                     _CLCIN3PPS	set	15068
   266  0000                     _CCP3PPS	set	15055
   267  0000                     _INLVLE	set	14980
   268  0000                     _INLVLD	set	14964
   269  0000                     _INLVLC	set	14948
   270  0000                     _INLVLB	set	14932
   271  0000                     _INLVLA	set	14916
   272  0000                     _SLRCONE	set	14979
   273  0000                     _SLRCOND	set	14963
   274  0000                     _SLRCONC	set	14947
   275  0000                     _SLRCONB	set	14931
   276  0000                     _SLRCONA	set	14915
   277  0000                     _ODCOND	set	14962
   278  0000                     _ODCONC	set	14946
   279  0000                     _ODCONB	set	14930
   280  0000                     _ODCONA	set	14914
   281  0000                     _ODCONE	set	14978
   282  0000                     _RD1I2C	set	14971
   283  0000                     _RD0I2C	set	14970
   284  0000                     _RC4I2C	set	14955
   285  0000                     _RC3I2C	set	14954
   286  0000                     _RB2I2C	set	14939
   287  0000                     _RB1I2C	set	14938
   288  0000                     _WPUC	set	14945
   289  0000                     _WPUA	set	14913
   290  0000                     _WPUB	set	14929
   291  0000                     _WPUE	set	14977
   292  0000                     _WPUD	set	14961
   293  0000                     _ANSELA	set	14912
   294  0000                     _ANSELE	set	14976
   295  0000                     _ANSELB	set	14928
   296  0000                     _ANSELC	set	14944
   297  0000                     _ANSELD	set	14960
   298  0000                     _CLC3CON	set	15456
   299  0000                     _CLC3GLS3	set	15465
   300  0000                     _CLC3GLS2	set	15464
   301  0000                     _CLC3GLS1	set	15463
   302  0000                     _CLC3GLS0	set	15462
   303  0000                     _CLC3SEL3	set	15461
   304  0000                     _CLC3SEL2	set	15460
   305  0000                     _CLC3SEL1	set	15459
   306  0000                     _CLC3SEL0	set	15458
   307  0000                     _CLC3POL	set	15457
   308  0000                     _CLC3CONbits	set	15456
   309  0000                     _U1RXB	set	15848
   310  0000                     _U1TXB	set	15850
   311  0000                     _U1ERRIRbits	set	15865
   312  0000                     _U1ERRIE	set	15866
   313  0000                     _U1ERRIR	set	15865
   314  0000                     _U1UIR	set	15864
   315  0000                     _U1FIFO	set	15863
   316  0000                     _U1BRGH	set	15862
   317  0000                     _U1BRGL	set	15861
   318  0000                     _U1CON2	set	15860
   319  0000                     _U1CON1	set	15859
   320  0000                     _U1CON0	set	15858
   321  0000                     _U1P3H	set	15857
   322  0000                     _U1P3L	set	15856
   323  0000                     _U1P2H	set	15855
   324  0000                     _U1P2L	set	15854
   325  0000                     _U1P1H	set	15853
   326  0000                     _U1P1L	set	15852
   327  0000                     _ADCON1bits	set	16121
   328  0000                     _ADERRL	set	16098
   329  0000                     _ADERRH	set	16099
   330  0000                     _ADPREVL	set	16109
   331  0000                     _ADPREVH	set	16110
   332  0000                     _ADFLTRL	set	16102
   333  0000                     _ADFLTRH	set	16103
   334  0000                     _ADSTATbits	set	16124
   335  0000                     _ADACCL	set	16104
   336  0000                     _ADACCH	set	16105
   337  0000                     _ADCON2bits	set	16122
   338  0000                     _ADCNT	set	16107
   339  0000                     _ADCON3bits	set	16123
   340  0000                     _ADRESL	set	16111
   341  0000                     _ADRESH	set	16112
   342  0000                     _ADCON0bits	set	16120
   343  0000                     _ADCON0	set	16120
   344  0000                     _ADCLK	set	16127
   345  0000                     _ADACT	set	16126
   346  0000                     _ADREF	set	16125
   347  0000                     _ADSTAT	set	16124
   348  0000                     _ADCON3	set	16123
   349  0000                     _ADCON2	set	16122
   350  0000                     _ADCON1	set	16121
   351  0000                     _ADPREH	set	16119
   352  0000                     _ADPREL	set	16118
   353  0000                     _ADCAP	set	16117
   354  0000                     _ADACQH	set	16116
   355  0000                     _ADACQL	set	16115
   356  0000                     _ADPCH	set	16113
   357  0000                     _ADRPT	set	16108
   358  0000                     _ADACCU	set	16106
   359  0000                     _ADSTPTH	set	16101
   360  0000                     _ADSTPTL	set	16100
   361  0000                     _ADUTHH	set	16097
   362  0000                     _ADUTHL	set	16096
   363  0000                     _ADLTHH	set	16095
   364  0000                     _ADLTHL	set	16094
   365  0000                     _SMT1TMR	set	16146
   366  0000                     _SMT1CPR	set	16149
   367  0000                     _SMT1CPW	set	16152
   368  0000                     _SMT1PR	set	16155
   369  0000                     _SMT1STATbits	set	16160
   370  0000                     _SMT1CON0bits	set	16158
   371  0000                     _SMT1CON1bits	set	16159
   372  0000                     _SMT1PRL	set	16155
   373  0000                     _SMT1PRH	set	16156
   374  0000                     _SMT1PRU	set	16157
   375  0000                     _SMT1SIG	set	16162
   376  0000                     _SMT1WIN	set	16163
   377  0000                     _SMT1CLK	set	16161
   378  0000                     _SMT1STAT	set	16160
   379  0000                     _SMT1CON1	set	16159
   380  0000                     _SMT1CON0	set	16158
   381  0000                     _CCPTMRS1bits	set	16223
   382  0000                     _CCPTMRS0bits	set	16222
   383  0000                     _PORTBbits	set	16331
   384  0000                     _PR2	set	16299
   385  0000                     _TMR2	set	16298
   386  0000                     _T2CONbits	set	16300
   387  0000                     _T2RSTbits	set	16303
   388  0000                     _T2HLTbits	set	16301
   389  0000                     _T2CON	set	16300
   390  0000                     _T2TMR	set	16298
   391  0000                     _T2PR	set	16299
   392  0000                     _T2RST	set	16303
   393  0000                     _T2HLT	set	16301
   394  0000                     _T2CLKCON	set	16302
   395  0000                     _PWM6DCL	set	16232
   396  0000                     _PWM6DCH	set	16233
   397  0000                     _PWM6CON	set	16234
   398  0000                     _PWM5DCL	set	16236
   399  0000                     _PWM5DCH	set	16237
   400  0000                     _PWM5CON	set	16238
   401  0000                     _PWM8DCL	set	16224
   402  0000                     _PWM8DCH	set	16225
   403  0000                     _PWM8CON	set	16226
   404  0000                     _PWM7DCL	set	16228
   405  0000                     _PWM7DCH	set	16229
   406  0000                     _PWM7CON	set	16230
   407  0000                     _PR4	set	16287
   408  0000                     _TMR4	set	16286
   409  0000                     _T4CONbits	set	16288
   410  0000                     _T4RSTbits	set	16291
   411  0000                     _T4HLTbits	set	16289
   412  0000                     _T4CON	set	16288
   413  0000                     _T4TMR	set	16286
   414  0000                     _T4PR	set	16287
   415  0000                     _T4RST	set	16291
   416  0000                     _T4HLT	set	16289
   417  0000                     _T4CLKCON	set	16290
   418  0000                     _T3GCONbits	set	16295
   419  0000                     _T3CONbits	set	16294
   420  0000                     _T3CON	set	16294
   421  0000                     _TMR3L	set	16292
   422  0000                     _TMR3H	set	16293
   423  0000                     _T3CLK	set	16297
   424  0000                     _T3GATE	set	16296
   425  0000                     _T3GCON	set	16295
   426  0000                     _T5GCONbits	set	16283
   427  0000                     _T5CONbits	set	16282
   428  0000                     _T5CON	set	16282
   429  0000                     _TMR5L	set	16280
   430  0000                     _TMR5H	set	16281
   431  0000                     _T5CLK	set	16285
   432  0000                     _T5GATE	set	16284
   433  0000                     _T5GCON	set	16283
   434  0000                     _CCPR4L	set	16240
   435  0000                     _CCPR4H	set	16241
   436  0000                     _CCP4CAP	set	16243
   437  0000                     _CCP4CON	set	16242
   438  0000                     _CCPR3L	set	16244
   439  0000                     _CCPR3H	set	16245
   440  0000                     _CCP3CAP	set	16247
   441  0000                     _CCP3CON	set	16246
   442  0000                     _PORTDbits	set	16333
   443  0000                     _IVTBASEL	set	16341
   444  0000                     _IVTBASEH	set	16342
   445  0000                     _IVTBASEU	set	16343
   446  0000                     _IVTLOCKbits	set	16340
   447  0000                     _IVTLOCK	set	16340
   448  0000                     _INTCON0bits	set	16338
   449  0000                     _TRISD	set	16325
   450  0000                     _TRISC	set	16324
   451  0000                     _TRISB	set	16323
   452  0000                     _TRISA	set	16322
   453  0000                     _TRISE	set	16326
   454  0000                     _LATC	set	16316
   455  0000                     _LATB	set	16315
   456  0000                     _LATA	set	16314
   457  0000                     _LATD	set	16317
   458  0000                     _LATE	set	16318
   459  0000                     _GIE	set	130711
   460                           
   461                           	psect	smallconst
   462  001000                     __psmallconst:
   463                           	callstack 0
   464  001000  00                 	db	0
   465  001001                     STR_4:
   466                           
   467                           ; BSR set to: 1
   468  001001  73                 	db	115	;'s'
   469  001002  74                 	db	116	;'t'
   470  001003  61                 	db	97	;'a'
   471  001004  72                 	db	114	;'r'
   472  001005  41                 	db	65	;'A'
   473  001006  63                 	db	99	;'c'
   474  001007  63                 	db	99	;'c'
   475  001008  65                 	db	101	;'e'
   476  001009  6C                 	db	108	;'l'
   477  00100A  50                 	db	80	;'P'
   478  00100B  6F                 	db	111	;'o'
   479  00100C  77                 	db	119	;'w'
   480  00100D  65                 	db	101	;'e'
   481  00100E  72                 	db	114	;'r'
   482  00100F  3A                 	db	58	;':'
   483  001010  20                 	db	32
   484  001011  25                 	db	37
   485  001012  64                 	db	100	;'d'
   486  001013  0A                 	db	10
   487  001014  00                 	db	0
   488  001015                     STR_5:
   489                           
   490                           ; BSR set to: 1
   491  001015  54                 	db	84	;'T'
   492  001016  69                 	db	105	;'i'
   493  001017  6D                 	db	109	;'m'
   494  001018  65                 	db	101	;'e'
   495  001019  3A                 	db	58	;':'
   496  00101A  20                 	db	32
   497  00101B  09                 	db	9
   498  00101C  25                 	db	37
   499  00101D  64                 	db	100	;'d'
   500  00101E  20                 	db	32
   501  00101F  20                 	db	32
   502  001020  20                 	db	32
   503  001021  20                 	db	32
   504  001022  20                 	db	32
   505  001023  09                 	db	9
   506  001024  00                 	db	0
   507  001025                     STR_3:
   508                           
   509                           ; BSR set to: 1
   510  001025  61                 	db	97	;'a'
   511  001026  63                 	db	99	;'c'
   512  001027  74                 	db	116	;'t'
   513  001028  4D                 	db	77	;'M'
   514  001029  50                 	db	80	;'P'
   515  00102A  6F                 	db	111	;'o'
   516  00102B  77                 	db	119	;'w'
   517  00102C  3A                 	db	58	;':'
   518  00102D  20                 	db	32
   519  00102E  25                 	db	37
   520  00102F  64                 	db	100	;'d'
   521  001030  0A                 	db	10
   522  001031  00                 	db	0
   523  001032                     STR_7:
   524                           
   525                           ; BSR set to: 1
   526  001032  73                 	db	115	;'s'
   527  001033  74                 	db	116	;'t'
   528  001034  61                 	db	97	;'a'
   529  001035  79                 	db	121	;'y'
   530  001036  20                 	db	32
   531  001037  52                 	db	82	;'R'
   532  001038  69                 	db	105	;'i'
   533  001039  67                 	db	103	;'g'
   534  00103A  68                 	db	104	;'h'
   535  00103B  74                 	db	116	;'t'
   536  00103C  0A                 	db	10
   537  00103D  00                 	db	0
   538  00103E                     STR_1:
   539                           
   540                           ; BSR set to: 1
   541  00103E  42                 	db	66	;'B'
   542  00103F  61                 	db	97	;'a'
   543  001040  74                 	db	116	;'t'
   544  001041  74                 	db	116	;'t'
   545  001042  65                 	db	101	;'e'
   546  001043  72                 	db	114	;'r'
   547  001044  79                 	db	121	;'y'
   548  001045  20                 	db	32
   549  001046  4C                 	db	76	;'L'
   550  001047  6F                 	db	111	;'o'
   551  001048  77                 	db	119	;'w'
   552  001049  00                 	db	0
   553  00104A                     STR_6:
   554                           
   555                           ; BSR set to: 1
   556  00104A  73                 	db	115	;'s'
   557  00104B  74                 	db	116	;'t'
   558  00104C  61                 	db	97	;'a'
   559  00104D  79                 	db	121	;'y'
   560  00104E  20                 	db	32
   561  00104F  4C                 	db	76	;'L'
   562  001050  65                 	db	101	;'e'
   563  001051  66                 	db	102	;'f'
   564  001052  74                 	db	116	;'t'
   565  001053  0A                 	db	10
   566  001054  00                 	db	0
   567  001055                     STR_2:
   568                           
   569                           ; BSR set to: 1
   570  001055  4D                 	db	77	;'M'
   571  001056  50                 	db	80	;'P'
   572  001057  6F                 	db	111	;'o'
   573  001058  77                 	db	119	;'w'
   574  001059  3A                 	db	58	;':'
   575  00105A  20                 	db	32
   576  00105B  25                 	db	37
   577  00105C  66                 	db	102	;'f'
   578  00105D  0A                 	db	10
   579  00105E  00                 	db	0
   580  00105F                     STR_8:
   581                           
   582                           ; BSR set to: 1
   583  00105F  49                 	db	73	;'I'
   584  001060  4E                 	db	78	;'N'
   585  001061  46                 	db	70	;'F'
   586  001062  00                 	db	0
   587  001063                     STR_12:
   588                           
   589                           ; BSR set to: 1
   590  001063  4E                 	db	78	;'N'
   591  001064  41                 	db	65	;'A'
   592  001065  4E                 	db	78	;'N'
   593  001066  00                 	db	0
   594  001067                     STR_9:
   595                           
   596                           ; BSR set to: 1
   597  001067  69                 	db	105	;'i'
   598  001068  6E                 	db	110	;'n'
   599  001069  66                 	db	102	;'f'
   600  00106A  00                 	db	0
   601  00106B                     STR_13:
   602                           
   603                           ; BSR set to: 1
   604  00106B  6E                 	db	110	;'n'
   605  00106C  61                 	db	97	;'a'
   606  00106D  6E                 	db	110	;'n'
   607  00106E  00                 	db	0
   608  00106F                     STR_16:
   609                           
   610                           ; BSR set to: 1
   611  00106F  6C                 	db	108	;'l'
   612  001070  66                 	db	102	;'f'
   613  001071  00                 	db	0
   614  001072  00                 	db	0	; dummy byte at the end
   615  0000                     
   616                           ; #config settings
   617                           
   618                           	psect	cinit
   619  0053AA                     __pcinit:
   620                           	callstack 0
   621  0053AA                     start_initialization:
   622                           	callstack 0
   623  0053AA                     __initialization:
   624                           	callstack 0
   625                           
   626                           ; Initialize objects allocated to BANK1 (2 bytes)
   627                           ; load TBLPTR registers with __pidataBANK1
   628  0053AA  0EA8               	movlw	low __pidataBANK1
   629  0053AC  6EF6               	movwf	tblptrl,c
   630  0053AE  0E5E               	movlw	high __pidataBANK1
   631  0053B0  6EF7               	movwf	tblptrh,c
   632  0053B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   633  0053B4  6EF8               	movwf	tblptru,c
   634  0053B6  0009               	tblrd		*+	;fetch initializer
   635  0053B8  006F FFD4  F1AE    	movff	tablat,__pdataBANK1
   636  0053BE  0009               	tblrd		*+	;fetch initializer
   637  0053C0  006F FFD4  F1AF    	movff	tablat,__pdataBANK1+1
   638                           
   639                           ; Initialize objects allocated to BANK0 (1 bytes)
   640                           ; load TBLPTR registers with __pidataBANK0
   641  0053C6  0EB2               	movlw	low __pidataBANK0
   642  0053C8  6EF6               	movwf	tblptrl,c
   643  0053CA  0E5E               	movlw	high __pidataBANK0
   644  0053CC  6EF7               	movwf	tblptrh,c
   645  0053CE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   646  0053D0  6EF8               	movwf	tblptru,c
   647  0053D2  0009               	tblrd		*+	;fetch initializer
   648  0053D4  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   649                           
   650                           ; Clear objects allocated to BANK1 (132 bytes)
   651  0053DA  EE00  F100         	lfsr	0,__pbssBANK1
   652  0053DE  0E84               	movlw	132
   653  0053E0                     clear_0:
   654  0053E0  6AEE               	clrf	postinc0,c
   655  0053E2  06E8               	decf	wreg,f,c
   656  0053E4  E1FD               	bnz	clear_0
   657                           
   658                           ; Clear objects allocated to BANK0 (25 bytes)
   659  0053E6  EE00  F0E5         	lfsr	0,__pbssBANK0
   660  0053EA  0E19               	movlw	25
   661  0053EC                     clear_1:
   662  0053EC  6AEE               	clrf	postinc0,c
   663  0053EE  06E8               	decf	wreg,f,c
   664  0053F0  E1FD               	bnz	clear_1
   665                           
   666                           ; Clear objects allocated to COMRAM (18 bytes)
   667  0053F2  EE00  F03A         	lfsr	0,__pbssCOMRAM
   668  0053F6  0E12               	movlw	18
   669  0053F8                     clear_2:
   670  0053F8  6AEE               	clrf	postinc0,c
   671  0053FA  06E8               	decf	wreg,f,c
   672  0053FC  E1FD               	bnz	clear_2
   673                           
   674                           ;
   675                           ; Setup IVTBASE
   676                           ;
   677  0053FE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   678  005400  6ED5               	movwf	213,c
   679  005402  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   680  005404  6ED6               	movwf	214,c
   681  005406  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   682  005408  6ED7               	movwf	215,c
   683  00540A                     end_of_initialization:
   684                           	callstack 0
   685  00540A                     __end_of__initialization:
   686                           	callstack 0
   687  00540A  0100               	movlb	0
   688  00540C  EFA4  F02E         	goto	_main	;jump to C main() function
   689                           
   690                           	psect	bssCOMRAM
   691  00003A                     __pbssCOMRAM:
   692                           	callstack 0
   693  00003A                     _width:
   694                           	callstack 0
   695  00003A                     	ds	2
   696  00003C                     _prec:
   697                           	callstack 0
   698  00003C                     	ds	2
   699  00003E                     _flags:
   700                           	callstack 0
   701  00003E                     	ds	2
   702  000040                     TMR4_ISR@CountCallBack:
   703                           	callstack 0
   704  000040                     	ds	2
   705  000042                     _uart1RxLastError:
   706                           	callstack 0
   707  000042                     	ds	1
   708  000043                     _uart1RxCount:
   709                           	callstack 0
   710  000043                     	ds	1
   711  000044                     _uart1RxTail:
   712                           	callstack 0
   713  000044                     	ds	1
   714  000045                     _uart1RxHead:
   715                           	callstack 0
   716  000045                     	ds	1
   717  000046                     _uart1TxTail:
   718                           	callstack 0
   719  000046                     	ds	1
   720  000047                     _uart1TxHead:
   721                           	callstack 0
   722  000047                     	ds	1
   723  000048                     _smtPeriod:
   724                           	callstack 0
   725  000048                     	ds	4
   726                           
   727                           	psect	bssBANK0
   728  0000E5                     __pbssBANK0:
   729                           	callstack 0
   730  0000E5                     _BatteryVolt:
   731                           	callstack 0
   732  0000E5                     	ds	2
   733  0000E7                     _actMotorPow:
   734                           	callstack 0
   735  0000E7                     	ds	2
   736  0000E9                     _currentSpeed:
   737                           	callstack 0
   738  0000E9                     	ds	2
   739  0000EB                     _setSpeed:
   740                           	callstack 0
   741  0000EB                     	ds	2
   742  0000ED                     _oldDistRight:
   743                           	callstack 0
   744  0000ED                     	ds	2
   745  0000EF                     _oldDistLeft:
   746                           	callstack 0
   747  0000EF                     	ds	2
   748  0000F1                     _distRightM:
   749                           	callstack 0
   750  0000F1                     	ds	2
   751  0000F3                     _distRight:
   752                           	callstack 0
   753  0000F3                     	ds	2
   754  0000F5                     _distLeftM:
   755                           	callstack 0
   756  0000F5                     	ds	2
   757  0000F7                     _distLeft:
   758                           	callstack 0
   759  0000F7                     	ds	2
   760  0000F9                     _delay:
   761                           	callstack 0
   762  0000F9                     	ds	1
   763  0000FA                     _cycle10ms:
   764                           	callstack 0
   765  0000FA                     	ds	1
   766  0000FB                     _curveMode:
   767                           	callstack 0
   768  0000FB                     	ds	1
   769  0000FC                     _distFront:
   770                           	callstack 0
   771  0000FC                     	ds	2
   772                           
   773                           	psect	dataBANK0
   774  0000FE                     __pdataBANK0:
   775                           	callstack 0
   776  0000FE                     _driveMode:
   777                           	callstack 0
   778  0000FE                     	ds	1
   779                           
   780                           	psect	bssBANK1
   781  000100                     __pbssBANK1:
   782                           	callstack 0
   783  000100                     _uart1RxStatusBuffer:
   784                           	callstack 0
   785  000100                     	ds	8
   786  000108                     _uart1RxBuffer:
   787                           	callstack 0
   788  000108                     	ds	8
   789  000110                     _uart1TxBuffer:
   790                           	callstack 0
   791  000110                     	ds	8
   792  000118                     floorf@F527:
   793                           	callstack 0
   794  000118                     	ds	4
   795  00011C                     ___fpclassifyf@F465:
   796                           	callstack 0
   797  00011C                     	ds	4
   798  000120                     _smtWay:
   799                           	callstack 0
   800  000120                     	ds	4
   801  000124                     _smtDuty:
   802                           	callstack 0
   803  000124                     	ds	4
   804  000128                     _nout:
   805                           	callstack 0
   806  000128                     	ds	2
   807  00012A                     _reverseTime:
   808                           	callstack 0
   809  00012A                     	ds	2
   810  00012C                     _oldSpeed:
   811                           	callstack 0
   812  00012C                     	ds	2
   813  00012E                     _motPow:
   814                           	callstack 0
   815  00012E                     	ds	2
   816  000130                     _battCheckCount:
   817                           	callstack 0
   818  000130                     	ds	2
   819  000132                     _reverseCount:
   820                           	callstack 0
   821  000132                     	ds	2
   822  000134                     _dbuf:
   823                           	callstack 0
   824  000134                     	ds	80
   825                           
   826                           	psect	dataBANK1
   827  0001AE                     __pdataBANK1:
   828                           	callstack 0
   829  0001AE                     _middleOffSet:
   830                           	callstack 0
   831  0001AE                     	ds	2
   832                           
   833                           	psect	cstackBANK1
   834  00019A                     __pcstackBANK1:
   835                           	callstack 0
   836  00019A                     ?_vfprintf:
   837                           	callstack 0
   838  00019A                     vfprintf@fp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x0
   842  00019A                     	ds	2
   843  00019C                     vfprintf@fmt:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x2
   847  00019C                     	ds	2
   848  00019E                     vfprintf@ap:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x4
   852  00019E                     	ds	2
   853  0001A0                     ?_printf:
   854                           	callstack 0
   855  0001A0                     printf@fmt:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x6
   859  0001A0                     	ds	6
   860  0001A6                     printf@ap:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0xC
   864  0001A6                     	ds	2
   865  0001A8                     ??_getCurve:
   866  0001A8                     startAccell@MPow:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xE
   870  0001A8                     	ds	2
   871  0001AA                     getCurve@deltaRight:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x10
   875  0001AA                     	ds	2
   876  0001AC                     getCurve@deltaLeft:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x12
   880  0001AC                     	ds	2
   881                           
   882                           	psect	cstackBANK0
   883  000060                     __pcstackBANK0:
   884                           	callstack 0
   885  000060                     ?_dtoa:
   886                           	callstack 0
   887  000060                     ___flmul@sign:
   888                           	callstack 0
   889  000060                     dtoa@fp:
   890                           	callstack 0
   891  000060                     floorf@m:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x0
   895  000060                     	ds	1
   896  000061                     ___flmul@aexp:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x1
   900  000061                     	ds	1
   901  000062                     ___flmul@grs:
   902                           	callstack 0
   903  000062                     dtoa@d:
   904                           	callstack 0
   905                           
   906                           ; 8 bytes @ 0x2
   907  000062                     	ds	2
   908  000064                     floorf@e:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x4
   912  000064                     	ds	2
   913  000066                     ___flmul@bexp:
   914                           	callstack 0
   915  000066                     floorf@u:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x6
   919  000066                     	ds	1
   920  000067                     ___flmul@prod:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x7
   924  000067                     	ds	3
   925  00006A                     _dtoa$3530:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0xA
   929  00006A                     	ds	1
   930  00006B                     ___flmul@temp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xB
   934  00006B                     	ds	1
   935  00006C                     dtoa@p:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00006C                     	ds	1
   940  00006D                     ?___fladd:
   941                           	callstack 0
   942  00006D                     ___flge@ff1:
   943                           	callstack 0
   944  00006D                     ___fladd@b:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0xD
   948  00006D                     	ds	1
   949  00006E                     dtoa@w:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0xE
   953  00006E                     	ds	2
   954  000070                     dtoa@s:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x10
   958  000070                     	ds	1
   959  000071                     ___flge@ff2:
   960                           	callstack 0
   961  000071                     ___fladd@a:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x11
   965  000071                     	ds	1
   966  000072                     dtoa@n:
   967                           	callstack 0
   968                           
   969                           ; 8 bytes @ 0x12
   970  000072                     	ds	3
   971  000075                     ___fladd@signs:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x15
   975  000075                     	ds	1
   976  000076                     ___fladd@aexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x16
   980  000076                     	ds	1
   981  000077                     ___fladd@bexp:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0x17
   985  000077                     	ds	1
   986  000078                     ___fladd@grs:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x18
   990  000078                     	ds	1
   991  000079                     ?___flsub:
   992                           	callstack 0
   993  000079                     ?___fltol:
   994                           	callstack 0
   995  000079                     ___fltol@f1:
   996                           	callstack 0
   997  000079                     ___flsub@b:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x19
  1001  000079                     	ds	1
  1002  00007A                     dtoa@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x1A
  1006  00007A                     	ds	3
  1007  00007D                     ??___fltol:
  1008  00007D                     ___flsub@a:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x1D
  1012  00007D                     	ds	4
  1013  000081                     ___fltol@sign1:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x21
  1017  000081                     	ds	1
  1018  000082                     ___fltol@exp1:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x22
  1022  000082                     	ds	1
  1023  000083                     ??_calcSteering:
  1024  000083                     ??_calcSpeed:
  1025  000083                     ??_calcMotorPow:
  1026  000083                     ?_efgtoa:
  1027                           	callstack 0
  1028  000083                     efgtoa@fp:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x23
  1032  000083                     	ds	2
  1033  000085                     calcMotorPow@setSpeedDelta:
  1034                           	callstack 0
  1035  000085                     _calcSteering$4174:
  1036                           	callstack 0
  1037  000085                     efgtoa@f:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x25
  1041  000085                     	ds	2
  1042  000087                     calcSteering@delta:
  1043                           	callstack 0
  1044  000087                     calcSpeed@speed:
  1045                           	callstack 0
  1046  000087                     calcMotorPow@oldSpeedDelta:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x27
  1050  000087                     	ds	2
  1051  000089                     calcMotorPow@addMPow:
  1052                           	callstack 0
  1053  000089                     efgtoa@c:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x29
  1057  000089                     	ds	1
  1058  00008A                     ??_efgtoa:
  1059                           
  1060                           ; 1 bytes @ 0x2A
  1061  00008A                     	ds	5
  1062  00008F                     _efgtoa$3554:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x2F
  1066  00008F                     	ds	2
  1067  000091                     _efgtoa$3555:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x31
  1071  000091                     	ds	2
  1072  000093                     _efgtoa$3559:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x33
  1076  000093                     	ds	2
  1077  000095                     _efgtoa$3563:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x35
  1081  000095                     	ds	2
  1082  000097                     _efgtoa$3564:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x37
  1086  000097                     	ds	2
  1087  000099                     _efgtoa$3565:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x39
  1091  000099                     	ds	2
  1092  00009B                     efgtoa@t:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x3B
  1096  00009B                     	ds	2
  1097  00009D                     efgtoa@pp:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3D
  1101  00009D                     	ds	2
  1102  00009F                     efgtoa@ne:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x3F
  1106  00009F                     	ds	2
  1107  0000A1                     efgtoa@m:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x41
  1111  0000A1                     	ds	2
  1112  0000A3                     efgtoa@ou:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x43
  1116  0000A3                     	ds	4
  1117  0000A7                     efgtoa@d:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x47
  1121  0000A7                     	ds	2
  1122  0000A9                     efgtoa@sign:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x49
  1126  0000A9                     	ds	2
  1127  0000AB                     efgtoa@p:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x4B
  1131  0000AB                     	ds	2
  1132  0000AD                     efgtoa@w:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x4D
  1136  0000AD                     	ds	2
  1137  0000AF                     efgtoa@nmode:
  1138                           	callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x4F
  1141  0000AF                     	ds	1
  1142  0000B0                     efgtoa@mode:
  1143                           	callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x50
  1146  0000B0                     	ds	1
  1147  0000B1                     efgtoa@h:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x51
  1151  0000B1                     	ds	4
  1152  0000B5                     efgtoa@l:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x55
  1156  0000B5                     	ds	4
  1157  0000B9                     efgtoa@i:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x59
  1161  0000B9                     	ds	2
  1162  0000BB                     efgtoa@g:
  1163                           	callstack 0
  1164                           
  1165                           ; 4 bytes @ 0x5B
  1166  0000BB                     	ds	4
  1167  0000BF                     efgtoa@e:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x5F
  1171  0000BF                     	ds	2
  1172  0000C1                     efgtoa@n:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x61
  1176  0000C1                     	ds	2
  1177  0000C3                     efgtoa@u:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x63
  1181  0000C3                     	ds	4
  1182  0000C7                     ?_vfpfcnvrt:
  1183                           	callstack 0
  1184  0000C7                     vfpfcnvrt@fp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x67
  1188  0000C7                     	ds	2
  1189  0000C9                     vfpfcnvrt@fmt:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x69
  1193  0000C9                     	ds	2
  1194  0000CB                     vfpfcnvrt@ap:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x6B
  1198  0000CB                     	ds	2
  1199  0000CD                     ??_vfpfcnvrt:
  1200                           
  1201                           ; 1 bytes @ 0x6D
  1202  0000CD                     	ds	4
  1203  0000D1                     vfpfcnvrt@ll:
  1204                           	callstack 0
  1205                           
  1206                           ; 8 bytes @ 0x71
  1207  0000D1                     	ds	8
  1208  0000D9                     _vfpfcnvrt$3583:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x79
  1212  0000D9                     	ds	2
  1213  0000DB                     vfpfcnvrt@f:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x7B
  1217  0000DB                     	ds	4
  1218  0000DF                     vfpfcnvrt@ct:
  1219                           	callstack 0
  1220                           
  1221                           ; 3 bytes @ 0x7F
  1222  0000DF                     	ds	3
  1223  0000E2                     vfpfcnvrt@c:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x82
  1227  0000E2                     	ds	1
  1228  0000E3                     vfprintf@cfmt:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x83
  1232  0000E3                     	ds	2
  1233                           
  1234                           	psect	cstackCOMRAM
  1235  000001                     __pcstackCOMRAM:
  1236                           	callstack 0
  1237  000001                     CCP3_DefaultCallBack@capturedValue:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x0
  1241  000001                     	ds	2
  1242  000003                     CCP3_CaptureISR@module:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x2
  1246  000003                     	ds	2
  1247  000005                     CCP4_DefaultCallBack@capturedValue:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x4
  1251  000005                     	ds	2
  1252  000007                     CCP4_CaptureISR@module:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x6
  1256  000007                     	ds	2
  1257  000009                     ?_TMR5_ReadTimer:
  1258                           	callstack 0
  1259  000009                     TMR5_WriteTimer@timerVal:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x8
  1263  000009                     	ds	2
  1264  00000B                     ??_TMR5_ReadTimer:
  1265  00000B                     
  1266                           ; 1 bytes @ 0xA
  1267  00000B                     	ds	2
  1268  00000D                     TMR5_ReadTimer@readVal:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0xC
  1272  00000D                     	ds	2
  1273  00000F                     TMR5_ReadTimer@readValHigh:
  1274                           	callstack 0
  1275                           
  1276                           ; 1 bytes @ 0xE
  1277  00000F                     	ds	1
  1278  000010                     TMR5_ReadTimer@readValLow:
  1279                           	callstack 0
  1280                           
  1281                           ; 1 bytes @ 0xF
  1282  000010                     	ds	1
  1283  000011                     ??_UART1_tx_vect_isr:
  1284  000011                     
  1285                           ; 1 bytes @ 0x10
  1286  000011                     	ds	1
  1287  000012                     ??_UART1_rx_vect_isr:
  1288                           
  1289                           ; 1 bytes @ 0x11
  1290  000012                     	ds	1
  1291  000013                     ??_TMR4_ISR:
  1292                           
  1293                           ; 1 bytes @ 0x12
  1294  000013                     	ds	1
  1295  000014                     ??_TMR3_Initialize:
  1296  000014                     ?_strlen:
  1297                           	callstack 0
  1298  000014                     ?___fpclassifyf:
  1299                           	callstack 0
  1300  000014                     ?_isupper:
  1301                           	callstack 0
  1302  000014                     ?_strncmp:
  1303                           	callstack 0
  1304  000014                     ?_ADCC_GetSingleConversion:
  1305                           	callstack 0
  1306  000014                     ?___awdiv:
  1307                           	callstack 0
  1308  000014                     ?___awmod:
  1309                           	callstack 0
  1310  000014                     ?___fldiv:
  1311                           	callstack 0
  1312  000014                     ?___aldiv:
  1313                           	callstack 0
  1314  000014                     ?___flneg:
  1315                           	callstack 0
  1316  000014                     ?___aodiv:
  1317                           	callstack 0
  1318  000014                     ?___aomod:
  1319                           	callstack 0
  1320  000014                     UART1_Write@txData:
  1321                           	callstack 0
  1322  000014                     INTERRUPT_Initialize@state:
  1323                           	callstack 0
  1324  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1325                           	callstack 0
  1326  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1327                           	callstack 0
  1328  000014                     UART1_SetErrorHandler@interruptHandler:
  1329                           	callstack 0
  1330  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1331                           	callstack 0
  1332  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1333                           	callstack 0
  1334  000014                     CCP3_SetCallBack@customCallBack:
  1335                           	callstack 0
  1336  000014                     CCP4_SetCallBack@customCallBack:
  1337                           	callstack 0
  1338  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1339                           	callstack 0
  1340  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1341                           	callstack 0
  1342  000014                     PWM7_LoadDutyValue@dutyValue:
  1343                           	callstack 0
  1344  000014                     PWM8_LoadDutyValue@dutyValue:
  1345                           	callstack 0
  1346  000014                     PWM5_LoadDutyValue@dutyValue:
  1347                           	callstack 0
  1348  000014                     PWM6_LoadDutyValue@dutyValue:
  1349                           	callstack 0
  1350  000014                     ___awdiv@dividend:
  1351                           	callstack 0
  1352  000014                     ___awmod@dividend:
  1353                           	callstack 0
  1354  000014                     isupper@c:
  1355                           	callstack 0
  1356  000014                     strcpy@dest:
  1357                           	callstack 0
  1358  000014                     strlen@s:
  1359                           	callstack 0
  1360  000014                     strncmp@_l:
  1361                           	callstack 0
  1362  000014                     ___aldiv@dividend:
  1363                           	callstack 0
  1364  000014                     ___fleq@ff1:
  1365                           	callstack 0
  1366  000014                     ___flneg@f1:
  1367                           	callstack 0
  1368  000014                     ___fldiv@b:
  1369                           	callstack 0
  1370  000014                     ___fpclassifyf@x:
  1371                           	callstack 0
  1372  000014                     ___aodiv@dividend:
  1373                           	callstack 0
  1374  000014                     ___aomod@dividend:
  1375                           	callstack 0
  1376                           
  1377                           ; 8 bytes @ 0x13
  1378  000014                     	ds	1
  1379  000015                     putch@txData:
  1380                           	callstack 0
  1381                           
  1382                           ; 1 bytes @ 0x14
  1383  000015                     	ds	1
  1384  000016                     ??_TMR5_Initialize:
  1385  000016                     ??_isupper:
  1386  000016                     ??_PWM7_LoadDutyValue:
  1387  000016                     ??_PWM8_LoadDutyValue:
  1388  000016                     ??_PWM5_LoadDutyValue:
  1389  000016                     ??_PWM6_LoadDutyValue:
  1390  000016                     ??_ADCC_GetSingleConversion:
  1391  000016                     ___awdiv@divisor:
  1392                           	callstack 0
  1393  000016                     ___awmod@divisor:
  1394                           	callstack 0
  1395  000016                     fputc@c:
  1396                           	callstack 0
  1397  000016                     strcpy@src:
  1398                           	callstack 0
  1399  000016                     strlen@a:
  1400                           	callstack 0
  1401  000016                     strncmp@_r:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x15
  1405  000016                     	ds	2
  1406  000018                     ??___fpclassifyf:
  1407  000018                     ??_strcpy:
  1408  000018                     ADCC_GetSingleConversion@channel:
  1409                           	callstack 0
  1410  000018                     ___awdiv@counter:
  1411                           	callstack 0
  1412  000018                     ___awmod@counter:
  1413                           	callstack 0
  1414  000018                     setMotor@motorPower:
  1415                           	callstack 0
  1416  000018                     fputc@fp:
  1417                           	callstack 0
  1418  000018                     strncmp@n:
  1419                           	callstack 0
  1420  000018                     ___aldiv@divisor:
  1421                           	callstack 0
  1422  000018                     ___fleq@ff2:
  1423                           	callstack 0
  1424  000018                     ___fldiv@a:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x17
  1428  000018                     	ds	1
  1429  000019                     ___awdiv@sign:
  1430                           	callstack 0
  1431  000019                     ___awmod@sign:
  1432                           	callstack 0
  1433                           
  1434                           ; 1 bytes @ 0x18
  1435  000019                     	ds	1
  1436  00001A                     ??_setMotor:
  1437  00001A                     ??_fputc:
  1438  00001A                     ??_strncmp:
  1439  00001A                     ?_tolower:
  1440                           	callstack 0
  1441  00001A                     ___awdiv@quotient:
  1442                           	callstack 0
  1443  00001A                     strcpy@s:
  1444                           	callstack 0
  1445  00001A                     tolower@c:
  1446                           	callstack 0
  1447                           
  1448                           ; 2 bytes @ 0x19
  1449  00001A                     	ds	1
  1450  00001B                     strncmp@l:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x1A
  1454  00001B                     	ds	1
  1455  00001C                     ??___fldiv:
  1456  00001C                     ??_tolower:
  1457  00001C                     ??___fleq:
  1458  00001C                     ?___xxtofl:
  1459                           	callstack 0
  1460  00001C                     ___aldiv@counter:
  1461                           	callstack 0
  1462  00001C                     setSteering@steering:
  1463                           	callstack 0
  1464  00001C                     ___fpclassifyf@e:
  1465                           	callstack 0
  1466  00001C                     strcpy@d:
  1467                           	callstack 0
  1468  00001C                     ___xxtofl@val:
  1469                           	callstack 0
  1470  00001C                     ___aodiv@divisor:
  1471                           	callstack 0
  1472  00001C                     ___aomod@divisor:
  1473                           	callstack 0
  1474                           
  1475                           ; 8 bytes @ 0x1B
  1476  00001C                     	ds	1
  1477  00001D                     ___aldiv@sign:
  1478                           	callstack 0
  1479  00001D                     strncmp@r:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x1C
  1483  00001D                     	ds	1
  1484  00001E                     setSteering@steeringMode:
  1485                           	callstack 0
  1486  00001E                     ___aldiv@quotient:
  1487                           	callstack 0
  1488  00001E                     ___fpclassifyf@u:
  1489                           	callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x1D
  1492  00001E                     	ds	1
  1493  00001F                     ??_setSteering:
  1494  00001F                     fputs@s:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x1E
  1498  00001F                     	ds	1
  1499  000020                     ??___xxtofl:
  1500  000020                     _tolower$3676:
  1501                           	callstack 0
  1502  000020                     ___fldiv@rem:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x1F
  1506  000020                     	ds	1
  1507  000021                     setSteering@steeringF:
  1508                           	callstack 0
  1509  000021                     fputs@fp:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x20
  1513  000021                     	ds	1
  1514  000022                     ?_actSpeed:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0x21
  1518  000022                     	ds	1
  1519  000023                     fputs@c:
  1520                           	callstack 0
  1521  000023                     setSteering@steeringB:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x22
  1525  000023                     	ds	1
  1526  000024                     ___aodiv@counter:
  1527                           	callstack 0
  1528  000024                     ___aomod@counter:
  1529                           	callstack 0
  1530  000024                     ___fldiv@sign:
  1531                           	callstack 0
  1532  000024                     ___xxtofl@sign:
  1533                           	callstack 0
  1534  000024                     actSpeed@speed:
  1535                           	callstack 0
  1536  000024                     fputs@i:
  1537                           	callstack 0
  1538                           
  1539                           ; 2 bytes @ 0x23
  1540  000024                     	ds	1
  1541  000025                     ___aodiv@sign:
  1542                           	callstack 0
  1543  000025                     ___aomod@sign:
  1544                           	callstack 0
  1545  000025                     ___xxtofl@exp:
  1546                           	callstack 0
  1547  000025                     ___fldiv@new_exp:
  1548                           	callstack 0
  1549                           
  1550                           ; 2 bytes @ 0x24
  1551  000025                     	ds	1
  1552  000026                     ?_abs:
  1553                           	callstack 0
  1554  000026                     ?_pad:
  1555                           	callstack 0
  1556  000026                     pad@fp:
  1557                           	callstack 0
  1558  000026                     abs@a:
  1559                           	callstack 0
  1560  000026                     ___xxtofl@arg:
  1561                           	callstack 0
  1562  000026                     ___aodiv@quotient:
  1563                           	callstack 0
  1564                           
  1565                           ; 8 bytes @ 0x25
  1566  000026                     	ds	1
  1567  000027                     ___fldiv@grs:
  1568                           	callstack 0
  1569                           
  1570                           ; 4 bytes @ 0x26
  1571  000027                     	ds	1
  1572  000028                     ??_abs:
  1573  000028                     pad@buf:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x27
  1577  000028                     	ds	2
  1578  00002A                     ?___flmul:
  1579                           	callstack 0
  1580  00002A                     pad@p:
  1581                           	callstack 0
  1582  00002A                     ___flmul@b:
  1583                           	callstack 0
  1584                           
  1585                           ; 4 bytes @ 0x29
  1586  00002A                     	ds	1
  1587  00002B                     ___fldiv@bexp:
  1588                           	callstack 0
  1589                           
  1590                           ; 1 bytes @ 0x2A
  1591  00002B                     	ds	1
  1592  00002C                     ??_pad:
  1593  00002C                     ___fldiv@aexp:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x2B
  1597  00002C                     	ds	1
  1598  00002D                     ?_floorf:
  1599                           	callstack 0
  1600  00002D                     pad@i:
  1601                           	callstack 0
  1602  00002D                     floorf@x:
  1603                           	callstack 0
  1604                           
  1605                           ; 4 bytes @ 0x2C
  1606  00002D                     	ds	1
  1607  00002E                     ___flmul@a:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x2D
  1611  00002E                     	ds	1
  1612  00002F                     pad@w:
  1613                           	callstack 0
  1614                           
  1615                           ; 2 bytes @ 0x2E
  1616  00002F                     	ds	2
  1617  000031                     ??_floorf:
  1618  000031                     ??_dtoa:
  1619                           
  1620                           ; 1 bytes @ 0x30
  1621  000031                     	ds	1
  1622  000032                     ??___flmul:
  1623                           
  1624                           ; 1 bytes @ 0x31
  1625  000032                     	ds	4
  1626  000036                     ??___fladd:
  1627  000036                     ??___flge:
  1628                           
  1629                           ; 1 bytes @ 0x35
  1630  000036                     	ds	4
  1631  00003A                     
  1632                           ; 1 bytes @ 0x39
  1633 ;;
  1634 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1635 ;;
  1636 ;; *************** function _main *****************
  1637 ;; Defined at:
  1638 ;;		line 8 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels required when called: 19
  1658 ;; This function calls:
  1659 ;;		_SYSTEM_Initialize
  1660 ;;		_TMR4_SetInterruptHandler
  1661 ;;		_loop
  1662 ;; This function is called by:
  1663 ;;		Startup code after reset
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text0
  1668  005D48                     __ptext0:
  1669                           	callstack 0
  1670  005D48                     _main:
  1671                           	callstack 12
  1672  005D48                     
  1673                           ;main.c: 9:     SYSTEM_Initialize();
  1674  005D48  ECE4  F02A         	call	_SYSTEM_Initialize	;wreg free
  1675  005D4C                     
  1676                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1677  005D4C  8ED2               	bsf	210,7,c	;volatile
  1678  005D4E                     
  1679                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1680  005D4E  8CD2               	bsf	210,6,c	;volatile
  1681                           
  1682                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1683  005D50  0EA2               	movlw	low _TMR4_10msISR
  1684  005D52  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1685  005D54  0E5E               	movlw	high _TMR4_10msISR
  1686  005D56  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1687  005D58  EC3F  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
  1688  005D5C                     l9186:
  1689                           
  1690                           ;main.c: 15:         loop();
  1691  005D5C  ECEE  F021         	call	_loop	;wreg free
  1692  005D60  EFAE  F02E         	goto	l9186
  1693  005D64  EF57  F000         	goto	start
  1694  005D68                     __end_of_main:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _loop *****************
  1698 ;; Defined at:
  1699 ;;		line 19 in file "main.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 18
  1720 ;; This function calls:
  1721 ;;		___flge
  1722 ;;		___xxtofl
  1723 ;;		_calcMotorPow
  1724 ;;		_calcSpeed
  1725 ;;		_calcSteering
  1726 ;;		_checkBatt
  1727 ;;		_getBatteryVoltage
  1728 ;;		_getCurve
  1729 ;;		_getReverse
  1730 ;;		_printf
  1731 ;;		_setMotor
  1732 ;;		_setSteering
  1733 ;;		_startAccell
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text1
  1740  0043DC                     __ptext1:
  1741                           	callstack 0
  1742  0043DC                     _loop:
  1743                           	callstack 12
  1744  0043DC                     
  1745                           ;main.c: 20:     setMotor(0);
  1746  0043DC  0E00               	movlw	0
  1747  0043DE  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1748  0043E0  0E00               	movlw	0
  1749  0043E2  6E18               	movwf	setMotor@motorPower^0,c
  1750  0043E4  EC92  F025         	call	_setMotor	;wreg free
  1751                           
  1752                           ;main.c: 21:     setSteering(0, Front);
  1753  0043E8  0E00               	movlw	0
  1754  0043EA  6E1D               	movwf	(setSteering@steering+1)^0,c
  1755  0043EC  0E00               	movlw	0
  1756  0043EE  6E1C               	movwf	setSteering@steering^0,c
  1757  0043F0  0E03               	movlw	3
  1758  0043F2  6E1E               	movwf	setSteering@steeringMode^0,c
  1759  0043F4  EC41  F01E         	call	_setSteering	;wreg free
  1760  0043F8                     l1224:
  1761  0043F8  B8CB               	btfsc	203,4,c	;volatile
  1762  0043FA  EF01  F022         	goto	u10231
  1763  0043FE  EF03  F022         	goto	u10230
  1764  004402                     u10231:
  1765  004402  EFFC  F021         	goto	l1224
  1766  004406                     u10230:
  1767  004406                     l9136:
  1768  004406  0100               	movlb	0	; () banked
  1769  004408  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1770  00440A  B4D8               	btfsc	status,2,c
  1771  00440C  EF0A  F022         	goto	u10241
  1772  004410  EF0C  F022         	goto	u10240
  1773  004414                     u10241:
  1774  004414  EF03  F022         	goto	l9136
  1775  004418                     u10240:
  1776  004418                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 26:         cycle10ms = 0;
  1779  004418  0E00               	movlw	0
  1780  00441A  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1781  00441C                     
  1782                           ; BSR set to: 0
  1783                           ;main.c: 28:         getBatteryVoltage();
  1784  00441C  EC0D  F02F         	call	_getBatteryVoltage	;wreg free
  1785  004420                     
  1786                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1787  004420  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  1788  004424  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1789  004428  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1790  00442A  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1791  00442C  0E00               	movlw	0
  1792  00442E  EC67  F01D         	call	___xxtofl
  1793  004432  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1794  004436  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1795  00443A  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1796  00443E  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1797  004442  0E7B               	movlw	123
  1798  004444  0100               	movlb	0	; () banked
  1799  004446  6F71               	movwf	___flge@ff2& (0+255),b
  1800  004448  0E14               	movlw	20
  1801  00444A  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1802  00444C  0E2E               	movlw	46
  1803  00444E  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1804  004450  0E45               	movlw	69
  1805  004452  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1806  004454  EC16  F024         	call	___flge	;wreg free
  1807  004458  0100               	movlb	0	; () banked
  1808  00445A  A0D8               	btfss	status,0,c
  1809  00445C  EF32  F022         	goto	u10251
  1810  004460  EF34  F022         	goto	u10250
  1811  004464                     u10251:
  1812  004464  EF03  F022         	goto	l9136
  1813  004468                     u10250:
  1814  004468                     
  1815                           ; BSR set to: 0
  1816                           ;main.c: 31:     startAccell();
  1817  004468  ECD7  F01F         	call	_startAccell	;wreg free
  1818  00446C                     
  1819                           ;main.c: 32:     driveMode = Straight;
  1820  00446C  0E01               	movlw	1
  1821  00446E  0100               	movlb	0	; () banked
  1822  004470  6FFE               	movwf	_driveMode& (0+255),b
  1823  004472                     
  1824                           ; BSR set to: 0
  1825                           ;main.c: 33:     curveMode = OutCurve;
  1826  004472  0E00               	movlw	0
  1827  004474  6FFB               	movwf	_curveMode& (0+255),b
  1828  004476                     
  1829                           ; BSR set to: 0
  1830                           ;main.c: 34:     oldDistLeft = distLeft;
  1831  004476  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  1832  00447A  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1833  00447E                     
  1834                           ; BSR set to: 0
  1835                           ;main.c: 35:     oldDistRight = distRight;
  1836  00447E  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  1837  004482  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  1838  004486                     
  1839                           ; BSR set to: 0
  1840                           ;main.c: 36:     cycle10ms = 0;
  1841  004486  0E00               	movlw	0
  1842  004488  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1843  00448A                     l9156:
  1844  00448A  0100               	movlb	0	; () banked
  1845  00448C  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1846  00448E  B4D8               	btfsc	status,2,c
  1847  004490  EF4C  F022         	goto	u10261
  1848  004494  EF4E  F022         	goto	u10260
  1849  004498                     u10261:
  1850  004498  EF45  F022         	goto	l9156
  1851  00449C                     u10260:
  1852  00449C                     
  1853                           ; BSR set to: 0
  1854                           ;main.c: 39:         cycle10ms = 0;
  1855  00449C  0E00               	movlw	0
  1856  00449E  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1857  0044A0                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1860  0044A0  BACB               	btfsc	203,5,c	;volatile
  1861  0044A2  EF55  F022         	goto	u10271
  1862  0044A6  EF57  F022         	goto	u10270
  1863  0044AA                     u10271:
  1864  0044AA  EF69  F022         	goto	l9166
  1865  0044AE                     u10270:
  1866  0044AE                     
  1867                           ; BSR set to: 0
  1868                           ;main.c: 42:             setSpeed = 0;
  1869  0044AE  0E00               	movlw	0
  1870  0044B0  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  1871  0044B2  0E00               	movlw	0
  1872  0044B4  6FEB               	movwf	_setSpeed& (0+255),b
  1873                           
  1874                           ;main.c: 43:             actMotorPow = 0;
  1875  0044B6  0E00               	movlw	0
  1876  0044B8  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1877  0044BA  0E00               	movlw	0
  1878  0044BC  6FE7               	movwf	_actMotorPow& (0+255),b
  1879  0044BE                     
  1880                           ; BSR set to: 0
  1881                           ;main.c: 44:             setSteering(0, Front);
  1882  0044BE  0E00               	movlw	0
  1883  0044C0  6E1D               	movwf	(setSteering@steering+1)^0,c
  1884  0044C2  0E00               	movlw	0
  1885  0044C4  6E1C               	movwf	setSteering@steering^0,c
  1886  0044C6  0E03               	movlw	3
  1887  0044C8  6E1E               	movwf	setSteering@steeringMode^0,c
  1888  0044CA  EC41  F01E         	call	_setSteering	;wreg free
  1889                           
  1890                           ;main.c: 45:             break;
  1891  0044CE  EF88  F022         	goto	l1240
  1892  0044D2                     l9166:
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 48:         if (checkBatt()) {
  1896  0044D2  EC1F  F029         	call	_checkBatt	;wreg free
  1897  0044D6  0900               	iorlw	0
  1898  0044D8  B4D8               	btfsc	status,2,c
  1899  0044DA  EF71  F022         	goto	u10281
  1900  0044DE  EF73  F022         	goto	u10280
  1901  0044E2                     u10281:
  1902  0044E2  EF7C  F022         	goto	l9170
  1903  0044E6                     u10280:
  1904  0044E6                     
  1905                           ;main.c: 49:             printf("Battery Low");
  1906  0044E6  0E3E               	movlw	low STR_1
  1907  0044E8  0101               	movlb	1	; () banked
  1908  0044EA  6FA0               	movwf	printf@fmt& (0+255),b
  1909  0044EC  0E10               	movlw	high STR_1
  1910  0044EE  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1911  0044F0  EC58  F02E         	call	_printf	;wreg free
  1912                           
  1913                           ;main.c: 50:             break;
  1914  0044F4  EF88  F022         	goto	l1240
  1915  0044F8                     l9170:
  1916                           
  1917                           ;main.c: 53:         getCurve();
  1918  0044F8  ECEB  F018         	call	_getCurve	;wreg free
  1919  0044FC                     
  1920                           ;main.c: 54:         getReverse();
  1921  0044FC  EC93  F023         	call	_getReverse	;wreg free
  1922  004500                     
  1923                           ;main.c: 56:         calcSteering();
  1924  004500  EC3F  F01A         	call	_calcSteering	;wreg free
  1925  004504                     
  1926                           ;main.c: 57:         calcSpeed();
  1927  004504  EC62  F01C         	call	_calcSpeed	;wreg free
  1928  004508                     
  1929                           ;main.c: 58:         calcMotorPow();
  1930  004508  EC48  F021         	call	_calcMotorPow	;wreg free
  1931  00450C  EF45  F022         	goto	l9156
  1932  004510                     l1240:
  1933  004510  0012               	return		;funcret
  1934  004512                     __end_of_loop:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _startAccell *****************
  1938 ;; Defined at:
  1939 ;;		line 98 in file "main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  MPow            4   14[BANK1 ] float 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:        4 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 17
  1960 ;; This function calls:
  1961 ;;		___flge
  1962 ;;		___flmul
  1963 ;;		___fltol
  1964 ;;		___xxtofl
  1965 ;;		_calcSteering
  1966 ;;		_printf
  1967 ;;		_setMotor
  1968 ;;		_setSteering
  1969 ;; This function is called by:
  1970 ;;		_loop
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text2
  1975  003FAE                     __ptext2:
  1976                           	callstack 0
  1977  003FAE                     _startAccell:
  1978                           	callstack 12
  1979  003FAE                     
  1980                           ;main.c: 99:     setSteering(0, Front);
  1981  003FAE  0E00               	movlw	0
  1982  003FB0  6E1D               	movwf	(setSteering@steering+1)^0,c
  1983  003FB2  0E00               	movlw	0
  1984  003FB4  6E1C               	movwf	setSteering@steering^0,c
  1985  003FB6  0E03               	movlw	3
  1986  003FB8  6E1E               	movwf	setSteering@steeringMode^0,c
  1987  003FBA  EC41  F01E         	call	_setSteering	;wreg free
  1988  003FBE                     
  1989                           ;main.c: 100:     driveMode = Accel;
  1990  003FBE  0E00               	movlw	0
  1991  003FC0  0100               	movlb	0	; () banked
  1992  003FC2  6FFE               	movwf	_driveMode& (0+255),b
  1993  003FC4                     
  1994                           ; BSR set to: 0
  1995                           ;main.c: 102:     actMotorPow = (40);
  1996  003FC4  0E00               	movlw	0
  1997  003FC6  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1998  003FC8  0E28               	movlw	40
  1999  003FCA  6FE7               	movwf	_actMotorPow& (0+255),b
  2000                           
  2001                           ;main.c: 103:     float MPow = actMotorPow;
  2002  003FCC  C0E7  F01C         	movff	_actMotorPow,___xxtofl@val
  2003  003FD0  C0E8  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  2004  003FD4  0E00               	movlw	0
  2005  003FD6  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2006  003FD8  0EFF               	movlw	-1
  2007  003FDA  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2008  003FDC  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2009  003FDE  0E01               	movlw	1
  2010  003FE0  EC67  F01D         	call	___xxtofl
  2011  003FE4  C01C  F1A8         	movff	?___xxtofl,startAccell@MPow
  2012  003FE8  C01D  F1A9         	movff	?___xxtofl+1,startAccell@MPow+1
  2013  003FEC  C01E  F1AA         	movff	?___xxtofl+2,startAccell@MPow+2
  2014  003FF0  C01F  F1AB         	movff	?___xxtofl+3,startAccell@MPow+3
  2015  003FF4                     
  2016                           ;main.c: 104:         printf("MPow: %f\n",MPow);
  2017  003FF4  0E55               	movlw	low STR_2
  2018  003FF6  0101               	movlb	1	; () banked
  2019  003FF8  6FA0               	movwf	printf@fmt& (0+255),b
  2020  003FFA  0E10               	movlw	high STR_2
  2021  003FFC  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2022  003FFE  C1A8  F1A2         	movff	startAccell@MPow,?_printf+2
  2023  004002  C1A9  F1A3         	movff	startAccell@MPow+1,?_printf+3
  2024  004006  C1AA  F1A4         	movff	startAccell@MPow+2,?_printf+4
  2025  00400A  C1AB  F1A5         	movff	startAccell@MPow+3,?_printf+5
  2026  00400E  EC58  F02E         	call	_printf	;wreg free
  2027                           
  2028                           ;main.c: 105:     while (MPow < (250)) {
  2029  004012  EF51  F020         	goto	l8932
  2030  004016                     l8918:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;main.c: 106:         MPow *= (1.1);
  2034  004016  C1A8  F02A         	movff	startAccell@MPow,___flmul@b
  2035  00401A  C1A9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  2036  00401E  C1AA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  2037  004022  C1AB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  2038  004026  0ECD               	movlw	205
  2039  004028  6E2E               	movwf	___flmul@a^0,c
  2040  00402A  0ECC               	movlw	204
  2041  00402C  6E2F               	movwf	(___flmul@a+1)^0,c
  2042  00402E  0E8C               	movlw	140
  2043  004030  6E30               	movwf	(___flmul@a+2)^0,c
  2044  004032  0E3F               	movlw	63
  2045  004034  6E31               	movwf	(___flmul@a+3)^0,c
  2046  004036  EC83  F013         	call	___flmul	;wreg free
  2047  00403A  C02A  F1A8         	movff	?___flmul,startAccell@MPow
  2048  00403E  C02B  F1A9         	movff	?___flmul+1,startAccell@MPow+1
  2049  004042  C02C  F1AA         	movff	?___flmul+2,startAccell@MPow+2
  2050  004046  C02D  F1AB         	movff	?___flmul+3,startAccell@MPow+3
  2051  00404A                     
  2052                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  2053  00404A  C1A8  F079         	movff	startAccell@MPow,___fltol@f1
  2054  00404E  C1A9  F07A         	movff	startAccell@MPow+1,___fltol@f1+1
  2055  004052  C1AA  F07B         	movff	startAccell@MPow+2,___fltol@f1+2
  2056  004056  C1AB  F07C         	movff	startAccell@MPow+3,___fltol@f1+3
  2057  00405A  EC0F  F023         	call	___fltol	;wreg free
  2058  00405E  C079  F0E7         	movff	?___fltol,_actMotorPow
  2059  004062  C07A  F0E8         	movff	?___fltol+1,_actMotorPow+1
  2060  004066                     
  2061                           ;main.c: 108:         setMotor(actMotorPow);
  2062  004066  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2063  00406A  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2064  00406E  EC92  F025         	call	_setMotor	;wreg free
  2065  004072                     
  2066                           ;main.c: 109:         printf("actMPow: %d\n",actMotorPow);
  2067  004072  0E25               	movlw	low STR_3
  2068  004074  0101               	movlb	1	; () banked
  2069  004076  6FA0               	movwf	printf@fmt& (0+255),b
  2070  004078  0E10               	movlw	high STR_3
  2071  00407A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2072  00407C  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2073  004080  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2074  004084  EC58  F02E         	call	_printf	;wreg free
  2075  004088                     
  2076                           ;main.c: 110:         calcSteering();
  2077  004088  EC3F  F01A         	call	_calcSteering	;wreg free
  2078  00408C                     
  2079                           ;main.c: 112:         cycle10ms = 0;
  2080  00408C  0E00               	movlw	0
  2081  00408E  0100               	movlb	0	; () banked
  2082  004090  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2083  004092                     l8930:
  2084                           
  2085                           ; BSR set to: 0
  2086  004092  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2087  004094  B4D8               	btfsc	status,2,c
  2088  004096  EF4F  F020         	goto	u9901
  2089  00409A  EF51  F020         	goto	u9900
  2090  00409E                     u9901:
  2091  00409E  EF49  F020         	goto	l8930
  2092  0040A2                     u9900:
  2093  0040A2                     l8932:
  2094                           
  2095                           ;main.c: 105:     while (MPow < (250)) {
  2096  0040A2  C1A8  F06D         	movff	startAccell@MPow,___flge@ff1
  2097  0040A6  C1A9  F06E         	movff	startAccell@MPow+1,___flge@ff1+1
  2098  0040AA  C1AA  F06F         	movff	startAccell@MPow+2,___flge@ff1+2
  2099  0040AE  C1AB  F070         	movff	startAccell@MPow+3,___flge@ff1+3
  2100  0040B2  0E00               	movlw	0
  2101  0040B4  0100               	movlb	0	; () banked
  2102  0040B6  6F71               	movwf	___flge@ff2& (0+255),b
  2103  0040B8  0E00               	movlw	0
  2104  0040BA  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2105  0040BC  0E7A               	movlw	122
  2106  0040BE  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2107  0040C0  0E43               	movlw	67
  2108  0040C2  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2109  0040C4  EC16  F024         	call	___flge	;wreg free
  2110  0040C8  0100               	movlb	0	; () banked
  2111  0040CA  A0D8               	btfss	status,0,c
  2112  0040CC  EF6A  F020         	goto	u9911
  2113  0040D0  EF6C  F020         	goto	u9910
  2114  0040D4                     u9911:
  2115  0040D4  EF0B  F020         	goto	l8918
  2116  0040D8                     u9910:
  2117  0040D8                     
  2118                           ; BSR set to: 0
  2119                           ;main.c: 116:     actMotorPow = (250);
  2120  0040D8  0E00               	movlw	0
  2121  0040DA  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  2122  0040DC  0EFA               	movlw	250
  2123  0040DE  6FE7               	movwf	_actMotorPow& (0+255),b
  2124  0040E0                     
  2125                           ; BSR set to: 0
  2126                           ;main.c: 117:     setMotor(actMotorPow);
  2127  0040E0  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2128  0040E4  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2129  0040E8  EC92  F025         	call	_setMotor	;wreg free
  2130  0040EC                     
  2131                           ;main.c: 118:     printf("starAccelPower: %d\n", actMotorPow);
  2132  0040EC  0E01               	movlw	low STR_4
  2133  0040EE  0101               	movlb	1	; () banked
  2134  0040F0  6FA0               	movwf	printf@fmt& (0+255),b
  2135  0040F2  0E10               	movlw	high STR_4
  2136  0040F4  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2137  0040F6  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2138  0040FA  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2139  0040FE  EC58  F02E         	call	_printf	;wreg free
  2140  004102                     
  2141                           ;main.c: 120:     cycle10ms = 0;
  2142  004102  0E00               	movlw	0
  2143  004104  0100               	movlb	0	; () banked
  2144  004106  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2145                           
  2146                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2147  004108  EF88  F020         	goto	l8944
  2148  00410C                     l8942:
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 122:         calcSteering();
  2152  00410C  EC3F  F01A         	call	_calcSteering	;wreg free
  2153  004110                     l8944:
  2154                           
  2155                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2156  004110  0E1D               	movlw	29
  2157  004112  0100               	movlb	0	; () banked
  2158  004114  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2159  004116  EF8F  F020         	goto	u9921
  2160  00411A  EF91  F020         	goto	u9920
  2161  00411E                     u9921:
  2162  00411E  EF86  F020         	goto	l8942
  2163  004122                     u9920:
  2164  004122                     
  2165                           ; BSR set to: 0
  2166                           ;main.c: 124:     driveMode = Straight;
  2167  004122  0E01               	movlw	1
  2168  004124  6FFE               	movwf	_driveMode& (0+255),b
  2169  004126                     
  2170                           ; BSR set to: 0
  2171                           ;main.c: 125:     calcSteering();
  2172  004126  EC3F  F01A         	call	_calcSteering	;wreg free
  2173  00412A  0012               	return		;funcret
  2174  00412C                     __end_of_startAccell:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _calcSteering *****************
  2178 ;; Defined at:
  2179 ;;		line 233 in file "main.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  delta           2   39[BANK0 ] short 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        6 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 10
  2200 ;; This function calls:
  2201 ;;		___awdiv
  2202 ;;		___flmul
  2203 ;;		___fltol
  2204 ;;		___xxtofl
  2205 ;;		_setSteering
  2206 ;; This function is called by:
  2207 ;;		_loop
  2208 ;;		_startAccell
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text3
  2213  00347E                     __ptext3:
  2214                           	callstack 0
  2215  00347E                     _calcSteering:
  2216                           	callstack 18
  2217  00347E                     
  2218                           ;main.c: 234:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  2219  00347E  0EF3               	movlw	243
  2220  003480  6E2E               	movwf	___flmul@a^0,c
  2221  003482  0E04               	movlw	4
  2222  003484  6E2F               	movwf	(___flmul@a+1)^0,c
  2223  003486  0EB5               	movlw	181
  2224  003488  6E30               	movwf	(___flmul@a+2)^0,c
  2225  00348A  0E3F               	movlw	63
  2226  00348C  6E31               	movwf	(___flmul@a+3)^0,c
  2227  00348E  C1AE  F01C         	movff	_middleOffSet,___xxtofl@val
  2228  003492  C1AF  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  2229  003496  0E00               	movlw	0
  2230  003498  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2231  00349A  0EFF               	movlw	-1
  2232  00349C  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2233  00349E  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2234  0034A0  0E01               	movlw	1
  2235  0034A2  EC67  F01D         	call	___xxtofl
  2236  0034A6  C01C  F02A         	movff	?___xxtofl,___flmul@b
  2237  0034AA  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  2238  0034AE  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  2239  0034B2  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  2240  0034B6  EC83  F013         	call	___flmul	;wreg free
  2241  0034BA  C02A  F079         	movff	?___flmul,___fltol@f1
  2242  0034BE  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
  2243  0034C2  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
  2244  0034C6  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
  2245  0034CA  EC0F  F023         	call	___fltol	;wreg free
  2246  0034CE  C0F3  F083         	movff	_distRight,??_calcSteering	;volatile
  2247  0034D2  C0F4  F084         	movff	_distRight+1,??_calcSteering+1	;volatile
  2248  0034D6  0100               	movlb	0	; () banked
  2249  0034D8  1F83               	comf	??_calcSteering& (0+255),f,b
  2250  0034DA  1F84               	comf	(??_calcSteering+1)& (0+255),f,b
  2251  0034DC  4B83               	infsnz	??_calcSteering& (0+255),f,b
  2252  0034DE  2B84               	incf	(??_calcSteering+1)& (0+255),f,b
  2253  0034E0  5179               	movf	?___fltol& (0+255),w,b
  2254  0034E2  5F83               	subwf	??_calcSteering& (0+255),f,b
  2255  0034E4  517A               	movf	(?___fltol+1)& (0+255),w,b
  2256  0034E6  5B84               	subwfb	(??_calcSteering+1)& (0+255),f,b
  2257  0034E8  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2258  0034EA  2583               	addwf	??_calcSteering& (0+255),w,b
  2259  0034EC  6F87               	movwf	calcSteering@delta& (0+255),b
  2260  0034EE  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2261  0034F0  2184               	addwfc	(??_calcSteering+1)& (0+255),w,b
  2262  0034F2  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2263                           
  2264                           ;main.c: 238:     switch (driveMode) {
  2265  0034F4  EFA4  F01A         	goto	l8870
  2266  0034F8                     l1319:
  2267  0034F8                     l8860:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 244:             if (delta > (40)) {
  2271  0034F8  BF88               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  2272  0034FA  EF88  F01A         	goto	u9861
  2273  0034FE  5188               	movf	(calcSteering@delta+1)& (0+255),w,b
  2274  003500  E109               	bnz	u9860
  2275  003502  0E29               	movlw	41
  2276  003504  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2277  003506  A0D8               	btfss	status,0,c
  2278  003508  EF88  F01A         	goto	u9861
  2279  00350C  EF8A  F01A         	goto	u9860
  2280  003510                     u9861:
  2281  003510  EF90  F01A         	goto	l8864
  2282  003514                     u9860:
  2283  003514                     
  2284                           ; BSR set to: 0
  2285                           ;main.c: 245:                 delta = (40);
  2286  003514  0E00               	movlw	0
  2287  003516  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2288  003518  0E28               	movlw	40
  2289  00351A  6F87               	movwf	calcSteering@delta& (0+255),b
  2290                           
  2291                           ;main.c: 246:             } else if (delta < -(40)) {
  2292  00351C  EF2D  F01B         	goto	l8896
  2293  003520                     l8864:
  2294                           
  2295                           ; BSR set to: 0
  2296  003520  AF88               	btfss	(calcSteering@delta+1)& (0+255),7,b
  2297  003522  EF9C  F01A         	goto	u9871
  2298  003526  0ED8               	movlw	216
  2299  003528  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2300  00352A  0EFF               	movlw	255
  2301  00352C  5988               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  2302  00352E  B0D8               	btfsc	status,0,c
  2303  003530  EF9C  F01A         	goto	u9871
  2304  003534  EF9E  F01A         	goto	u9870
  2305  003538                     u9871:
  2306  003538  EFC5  F01A         	goto	l1324
  2307  00353C                     u9870:
  2308  00353C                     
  2309                           ; BSR set to: 0
  2310                           ;main.c: 247:                 delta = -(40);
  2311  00353C  0EFF               	movlw	255
  2312  00353E  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2313  003540  0ED8               	movlw	216
  2314  003542  6F87               	movwf	calcSteering@delta& (0+255),b
  2315  003544  EF2D  F01B         	goto	l8896
  2316  003548                     l8870:
  2317                           
  2318                           ; BSR set to: 0
  2319  003548  51FE               	movf	_driveMode& (0+255),w,b
  2320  00354A  6F83               	movwf	??_calcSteering& (0+255),b
  2321  00354C  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2322                           
  2323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 1, Range of values is 0 to 0
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; simple_byte            4     3 (average)
  2329                           ;	Chosen strategy is simple_byte
  2330  00354E  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2331  003550  0A00               	xorlw	0	; case 0
  2332  003552  B4D8               	btfsc	status,2,c
  2333  003554  EFAE  F01A         	goto	l9308
  2334  003558  EF2D  F01B         	goto	l8896
  2335  00355C                     l9308:
  2336                           
  2337                           ; BSR set to: 0
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 5, Range of values is 0 to 6
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte           16     9 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344  00355C  5183               	movf	??_calcSteering& (0+255),w,b
  2345  00355E  0A00               	xorlw	0	; case 0
  2346  003560  B4D8               	btfsc	status,2,c
  2347  003562  EF7C  F01A         	goto	l1319
  2348  003566  0A01               	xorlw	1	; case 1
  2349  003568  B4D8               	btfsc	status,2,c
  2350  00356A  EF7C  F01A         	goto	l8860
  2351  00356E  0A03               	xorlw	3	; case 2
  2352  003570  B4D8               	btfsc	status,2,c
  2353  003572  EF7C  F01A         	goto	l8860
  2354  003576  0A07               	xorlw	7	; case 5
  2355  003578  B4D8               	btfsc	status,2,c
  2356  00357A  EF7C  F01A         	goto	l8860
  2357  00357E  0A03               	xorlw	3	; case 6
  2358  003580  B4D8               	btfsc	status,2,c
  2359  003582  EF7C  F01A         	goto	l8860
  2360  003586  EF2D  F01B         	goto	l8896
  2361  00358A                     l1324:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;main.c: 254:     switch (driveMode) {
  2365  00358A  EF2D  F01B         	goto	l8896
  2366  00358E                     l8872:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;main.c: 256:             setSteering(delta, Ratio);
  2370  00358E  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2371  003592  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2372  003596  0E02               	movlw	2
  2373  003598  6E1E               	movwf	setSteering@steeringMode^0,c
  2374  00359A  EC41  F01E         	call	_setSteering	;wreg free
  2375                           
  2376                           ;main.c: 257:             break;
  2377  00359E  EF56  F01B         	goto	l1339
  2378  0035A2                     l8874:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 259:             setSteering(delta, Front);
  2382  0035A2  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2383  0035A6  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2384  0035AA  0E03               	movlw	3
  2385  0035AC  6E1E               	movwf	setSteering@steeringMode^0,c
  2386  0035AE  EC41  F01E         	call	_setSteering	;wreg free
  2387                           
  2388                           ;main.c: 260:             break;
  2389  0035B2  EF56  F01B         	goto	l1339
  2390  0035B6                     l8876:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;main.c: 262:             setSteering(delta / (2), Front);
  2394  0035B6  C087  F014         	movff	calcSteering@delta,___awdiv@dividend
  2395  0035BA  C088  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  2396  0035BE  0E00               	movlw	0
  2397  0035C0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2398  0035C2  0E02               	movlw	2
  2399  0035C4  6E16               	movwf	___awdiv@divisor^0,c
  2400  0035C6  EC68  F026         	call	___awdiv	;wreg free
  2401  0035CA  C014  F085         	movff	?___awdiv,_calcSteering$4174
  2402  0035CE  C015  F086         	movff	?___awdiv+1,_calcSteering$4174+1
  2403                           
  2404                           ;main.c: 262:             setSteering(delta / (2), Front);
  2405  0035D2  C085  F01C         	movff	_calcSteering$4174,setSteering@steering
  2406  0035D6  C086  F01D         	movff	_calcSteering$4174+1,setSteering@steering+1
  2407  0035DA  0E03               	movlw	3
  2408  0035DC  6E1E               	movwf	setSteering@steeringMode^0,c
  2409  0035DE  EC41  F01E         	call	_setSteering	;wreg free
  2410                           
  2411                           ;main.c: 264:             break;
  2412  0035E2  EF56  F01B         	goto	l1339
  2413  0035E6                     l8878:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;main.c: 266:             setSteering(-(65), Inverted);
  2417  0035E6  0EFF               	movlw	255
  2418  0035E8  6E1D               	movwf	(setSteering@steering+1)^0,c
  2419  0035EA  0EBF               	movlw	191
  2420  0035EC  6E1C               	movwf	setSteering@steering^0,c
  2421  0035EE  0E00               	movlw	0
  2422  0035F0  6E1E               	movwf	setSteering@steeringMode^0,c
  2423  0035F2  EC41  F01E         	call	_setSteering	;wreg free
  2424                           
  2425                           ;main.c: 267:             break;
  2426  0035F6  EF56  F01B         	goto	l1339
  2427  0035FA                     l8880:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 269:             setSteering((65), Inverted);
  2431  0035FA  0E00               	movlw	0
  2432  0035FC  6E1D               	movwf	(setSteering@steering+1)^0,c
  2433  0035FE  0E41               	movlw	65
  2434  003600  6E1C               	movwf	setSteering@steering^0,c
  2435  003602  0E00               	movlw	0
  2436  003604  6E1E               	movwf	setSteering@steeringMode^0,c
  2437  003606  EC41  F01E         	call	_setSteering	;wreg free
  2438                           
  2439                           ;main.c: 270:             break;
  2440  00360A  EF56  F01B         	goto	l1339
  2441  00360E                     l8882:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 272:             if (curveMode == InCurve) {
  2445  00360E  0E02               	movlw	2
  2446  003610  19FB               	xorwf	_curveMode& (0+255),w,b
  2447  003612  A4D8               	btfss	status,2,c
  2448  003614  EF0E  F01B         	goto	u9881
  2449  003618  EF10  F01B         	goto	u9880
  2450  00361C                     u9881:
  2451  00361C  EFC7  F01A         	goto	l8872
  2452  003620                     u9880:
  2453  003620                     
  2454                           ; BSR set to: 0
  2455                           ;main.c: 273:                 setSteering((65), Ratio);
  2456  003620  0E00               	movlw	0
  2457  003622  6E1D               	movwf	(setSteering@steering+1)^0,c
  2458  003624  0E41               	movlw	65
  2459  003626  6E1C               	movwf	setSteering@steering^0,c
  2460  003628  0E02               	movlw	2
  2461  00362A  6E1E               	movwf	setSteering@steeringMode^0,c
  2462  00362C  EC41  F01E         	call	_setSteering	;wreg free
  2463                           
  2464                           ;main.c: 274:             } else {
  2465  003630  EF56  F01B         	goto	l1339
  2466  003634                     l8888:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;main.c: 279:             if (curveMode == InCurve) {
  2470  003634  0E02               	movlw	2
  2471  003636  19FB               	xorwf	_curveMode& (0+255),w,b
  2472  003638  A4D8               	btfss	status,2,c
  2473  00363A  EF21  F01B         	goto	u9891
  2474  00363E  EF23  F01B         	goto	u9890
  2475  003642                     u9891:
  2476  003642  EFC7  F01A         	goto	l8872
  2477  003646                     u9890:
  2478  003646                     
  2479                           ; BSR set to: 0
  2480                           ;main.c: 280:                 setSteering(-(65), Ratio);
  2481  003646  0EFF               	movlw	255
  2482  003648  6E1D               	movwf	(setSteering@steering+1)^0,c
  2483  00364A  0EBF               	movlw	191
  2484  00364C  6E1C               	movwf	setSteering@steering^0,c
  2485  00364E  0E02               	movlw	2
  2486  003650  6E1E               	movwf	setSteering@steeringMode^0,c
  2487  003652  EC41  F01E         	call	_setSteering	;wreg free
  2488                           
  2489                           ;main.c: 281:             } else {
  2490  003656  EF56  F01B         	goto	l1339
  2491  00365A                     l8896:
  2492                           
  2493                           ; BSR set to: 0
  2494  00365A  51FE               	movf	_driveMode& (0+255),w,b
  2495  00365C  6F83               	movwf	??_calcSteering& (0+255),b
  2496  00365E  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2497                           
  2498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2499                           ; Switch size 1, requested type "simple"
  2500                           ; Number of cases is 1, Range of values is 0 to 0
  2501                           ; switch strategies available:
  2502                           ; Name         Instructions Cycles
  2503                           ; simple_byte            4     3 (average)
  2504                           ;	Chosen strategy is simple_byte
  2505  003660  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2506  003662  0A00               	xorlw	0	; case 0
  2507  003664  B4D8               	btfsc	status,2,c
  2508  003666  EF37  F01B         	goto	l9310
  2509  00366A  EF56  F01B         	goto	l1339
  2510  00366E                     l9310:
  2511                           
  2512                           ; BSR set to: 0
  2513                           ; Switch size 1, requested type "simple"
  2514                           ; Number of cases is 7, Range of values is 0 to 6
  2515                           ; switch strategies available:
  2516                           ; Name         Instructions Cycles
  2517                           ; simple_byte           22    12 (average)
  2518                           ;	Chosen strategy is simple_byte
  2519  00366E  5183               	movf	??_calcSteering& (0+255),w,b
  2520  003670  0A00               	xorlw	0	; case 0
  2521  003672  B4D8               	btfsc	status,2,c
  2522  003674  EFDB  F01A         	goto	l8876
  2523  003678  0A01               	xorlw	1	; case 1
  2524  00367A  B4D8               	btfsc	status,2,c
  2525  00367C  EFD1  F01A         	goto	l8874
  2526  003680  0A03               	xorlw	3	; case 2
  2527  003682  B4D8               	btfsc	status,2,c
  2528  003684  EFC7  F01A         	goto	l8872
  2529  003688  0A01               	xorlw	1	; case 3
  2530  00368A  B4D8               	btfsc	status,2,c
  2531  00368C  EFF3  F01A         	goto	l8878
  2532  003690  0A07               	xorlw	7	; case 4
  2533  003692  B4D8               	btfsc	status,2,c
  2534  003694  EFFD  F01A         	goto	l8880
  2535  003698  0A01               	xorlw	1	; case 5
  2536  00369A  B4D8               	btfsc	status,2,c
  2537  00369C  EF07  F01B         	goto	l8882
  2538  0036A0  0A03               	xorlw	3	; case 6
  2539  0036A2  B4D8               	btfsc	status,2,c
  2540  0036A4  EF1A  F01B         	goto	l8888
  2541  0036A8  EF56  F01B         	goto	l1339
  2542  0036AC                     l1339:
  2543  0036AC  0012               	return		;funcret
  2544  0036AE                     __end_of_calcSteering:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _getReverse *****************
  2548 ;; Defined at:
  2549 ;;		line 199 in file "main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2, status,0
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 8
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_loop
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text4
  2578  004726                     __ptext4:
  2579                           	callstack 0
  2580  004726                     _getReverse:
  2581                           	callstack 21
  2582  004726                     
  2583                           ;main.c: 200:     if (distFront < (15)) {
  2584  004726  0100               	movlb	0	; () banked
  2585  004728  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2586  00472A  E107               	bnz	u6661
  2587  00472C  0E0F               	movlw	15
  2588  00472E  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2589  004730  B0D8               	btfsc	status,0,c
  2590  004732  EF9D  F023         	goto	u6661
  2591  004736  EF9F  F023         	goto	u6660
  2592  00473A                     u6661:
  2593  00473A  EFA4  F023         	goto	l6916
  2594  00473E                     u6660:
  2595  00473E                     
  2596                           ; BSR set to: 0
  2597                           ;main.c: 201:         ++reverseCount;
  2598  00473E  0101               	movlb	1	; () banked
  2599  004740  4B32               	infsnz	_reverseCount& (0+255),f,b
  2600  004742  2B33               	incf	(_reverseCount+1)& (0+255),f,b
  2601                           
  2602                           ;main.c: 202:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2603  004744  EFBB  F023         	goto	l6922
  2604  004748                     l6916:
  2605                           
  2606                           ; BSR set to: 0
  2607  004748  0E03               	movlw	3
  2608  00474A  19FE               	xorwf	_driveMode& (0+255),w,b
  2609  00474C  B4D8               	btfsc	status,2,c
  2610  00474E  EFAB  F023         	goto	u6671
  2611  004752  EFAD  F023         	goto	u6670
  2612  004756                     u6671:
  2613  004756  EFBB  F023         	goto	l6922
  2614  00475A                     u6670:
  2615  00475A                     
  2616                           ; BSR set to: 0
  2617  00475A  0E04               	movlw	4
  2618  00475C  19FE               	xorwf	_driveMode& (0+255),w,b
  2619  00475E  B4D8               	btfsc	status,2,c
  2620  004760  EFB4  F023         	goto	u6681
  2621  004764  EFB6  F023         	goto	u6680
  2622  004768                     u6681:
  2623  004768  EFBB  F023         	goto	l6922
  2624  00476C                     u6680:
  2625  00476C                     
  2626                           ; BSR set to: 0
  2627                           ;main.c: 203:         reverseCount = 0;
  2628  00476C  0E00               	movlw	0
  2629  00476E  0101               	movlb	1	; () banked
  2630  004770  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2631  004772  0E00               	movlw	0
  2632  004774  6F32               	movwf	_reverseCount& (0+255),b
  2633  004776                     l6922:
  2634                           
  2635                           ;main.c: 206:     if (reverseCount > (50)) {
  2636  004776  0101               	movlb	1	; () banked
  2637  004778  5133               	movf	(_reverseCount+1)& (0+255),w,b
  2638  00477A  E109               	bnz	u6690
  2639  00477C  0E33               	movlw	51
  2640  00477E  5D32               	subwf	_reverseCount& (0+255),w,b
  2641  004780  A0D8               	btfss	status,0,c
  2642  004782  EFC5  F023         	goto	u6691
  2643  004786  EFC7  F023         	goto	u6690
  2644  00478A                     u6691:
  2645  00478A  EF15  F024         	goto	l1312
  2646  00478E                     u6690:
  2647  00478E                     
  2648                           ; BSR set to: 1
  2649                           ;main.c: 207:         ++reverseTime;
  2650  00478E  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2651  004790  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2652  004792                     
  2653                           ; BSR set to: 1
  2654                           ;main.c: 209:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2655  004792  0E03               	movlw	3
  2656  004794  0100               	movlb	0	; () banked
  2657  004796  19FE               	xorwf	_driveMode& (0+255),w,b
  2658  004798  B4D8               	btfsc	status,2,c
  2659  00479A  EFD1  F023         	goto	u6701
  2660  00479E  EFD3  F023         	goto	u6700
  2661  0047A2                     u6701:
  2662  0047A2  EFED  F023         	goto	l6936
  2663  0047A6                     u6700:
  2664  0047A6                     
  2665                           ; BSR set to: 0
  2666  0047A6  0E04               	movlw	4
  2667  0047A8  19FE               	xorwf	_driveMode& (0+255),w,b
  2668  0047AA  B4D8               	btfsc	status,2,c
  2669  0047AC  EFDA  F023         	goto	u6711
  2670  0047B0  EFDC  F023         	goto	u6710
  2671  0047B4                     u6711:
  2672  0047B4  EFED  F023         	goto	l6936
  2673  0047B8                     u6710:
  2674  0047B8                     
  2675                           ; BSR set to: 0
  2676                           ;main.c: 210:             if (distLeft > distRight) {
  2677  0047B8  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2678  0047BA  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2679  0047BC  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2680  0047BE  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2681  0047C0  B0D8               	btfsc	status,0,c
  2682  0047C2  EFE5  F023         	goto	u6721
  2683  0047C6  EFE7  F023         	goto	u6720
  2684  0047CA                     u6721:
  2685  0047CA  EFEB  F023         	goto	l6934
  2686  0047CE                     u6720:
  2687  0047CE                     
  2688                           ; BSR set to: 0
  2689                           ;main.c: 212:                 driveMode = ReverseRight;
  2690  0047CE  0E03               	movlw	3
  2691  0047D0  6FFE               	movwf	_driveMode& (0+255),b
  2692                           
  2693                           ;main.c: 213:             } else {
  2694  0047D2  EFED  F023         	goto	l6936
  2695  0047D6                     l6934:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 215:                 driveMode = ReverseLeft;
  2699  0047D6  0E04               	movlw	4
  2700  0047D8  6FFE               	movwf	_driveMode& (0+255),b
  2701  0047DA                     l6936:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;main.c: 219:         if (distFront > (35) || reverseTime > (300)) {
  2705  0047DA  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2706  0047DC  E107               	bnz	u6731
  2707  0047DE  0E24               	movlw	36
  2708  0047E0  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2709  0047E2  B0D8               	btfsc	status,0,c
  2710  0047E4  EFF6  F023         	goto	u6731
  2711  0047E8  EFF8  F023         	goto	u6730
  2712  0047EC                     u6731:
  2713  0047EC  EF09  F024         	goto	l6940
  2714  0047F0                     u6730:
  2715  0047F0                     
  2716                           ; BSR set to: 0
  2717  0047F0  0101               	movlb	1	; () banked
  2718  0047F2  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2719  0047F4  EF05  F024         	goto	u6741
  2720  0047F8  0E2D               	movlw	45
  2721  0047FA  5D2A               	subwf	_reverseTime& (0+255),w,b
  2722  0047FC  0E01               	movlw	1
  2723  0047FE  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2724  004800  A0D8               	btfss	status,0,c
  2725  004802  EF05  F024         	goto	u6741
  2726  004806  EF07  F024         	goto	u6740
  2727  00480A                     u6741:
  2728  00480A  EF15  F024         	goto	l1312
  2729  00480E                     u6740:
  2730  00480E  EF09  F024         	goto	l6942
  2731  004812                     l6940:
  2732  004812                     l6942:
  2733                           
  2734                           ;main.c: 222:                 driveMode = Straight;
  2735  004812  0E01               	movlw	1
  2736  004814  0100               	movlb	0	; () banked
  2737  004816  6FFE               	movwf	_driveMode& (0+255),b
  2738  004818                     
  2739                           ; BSR set to: 0
  2740                           ;main.c: 227:             reverseCount = 0;
  2741  004818  0E00               	movlw	0
  2742  00481A  0101               	movlb	1	; () banked
  2743  00481C  6F33               	movwf	(_reverseCount+1)& (0+255),b
  2744  00481E  0E00               	movlw	0
  2745  004820  6F32               	movwf	_reverseCount& (0+255),b
  2746                           
  2747                           ;main.c: 228:             reverseTime = 0;
  2748  004822  0E00               	movlw	0
  2749  004824  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2750  004826  0E00               	movlw	0
  2751  004828  6F2A               	movwf	_reverseTime& (0+255),b
  2752  00482A                     l1312:
  2753                           
  2754                           ; BSR set to: 1
  2755  00482A  0012               	return		;funcret
  2756  00482C                     __end_of_getReverse:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _getCurve *****************
  2760 ;; Defined at:
  2761 ;;		line 128 in file "main.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  deltaLeft       2   18[BANK1 ] short 
  2766 ;;  deltaRight      2   16[BANK1 ] short 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;Total ram usage:        6 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 17
  2783 ;; This function calls:
  2784 ;;		_printf
  2785 ;; This function is called by:
  2786 ;;		_loop
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text5
  2791  0031D6                     __ptext5:
  2792                           	callstack 0
  2793  0031D6                     _getCurve:
  2794                           	callstack 12
  2795  0031D6                     
  2796                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2797  0031D6  0100               	movlb	0	; () banked
  2798  0031D8  51EF               	movf	_oldDistLeft& (0+255),w,b
  2799  0031DA  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2800  0031DC  0101               	movlb	1	; () banked
  2801  0031DE  6FAC               	movwf	getCurve@deltaLeft& (0+255),b
  2802  0031E0  0100               	movlb	0	; () banked
  2803  0031E2  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2804  0031E4  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2805  0031E6  0101               	movlb	1	; () banked
  2806  0031E8  6FAD               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2807                           
  2808                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2809  0031EA  0100               	movlb	0	; () banked
  2810  0031EC  51ED               	movf	_oldDistRight& (0+255),w,b
  2811  0031EE  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2812  0031F0  0101               	movlb	1	; () banked
  2813  0031F2  6FAA               	movwf	getCurve@deltaRight& (0+255),b
  2814  0031F4  0100               	movlb	0	; () banked
  2815  0031F6  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2816  0031F8  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2817  0031FA  0101               	movlb	1	; () banked
  2818  0031FC  6FAB               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2819                           
  2820                           ;main.c: 132:     switch (curveMode) {
  2821  0031FE  EF17  F01A         	goto	l9042
  2822  003202                     l8974:
  2823                           
  2824                           ; BSR set to: 1
  2825                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2826  003202  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2827  003204  EF0D  F019         	goto	u9951
  2828  003208  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2829  00320A  E109               	bnz	u9950
  2830  00320C  0E1F               	movlw	31
  2831  00320E  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2832  003210  A0D8               	btfss	status,0,c
  2833  003212  EF0D  F019         	goto	u9951
  2834  003216  EF0F  F019         	goto	u9950
  2835  00321A                     u9951:
  2836  00321A  EF31  F019         	goto	l8982
  2837  00321E                     u9950:
  2838  00321E                     
  2839                           ; BSR set to: 1
  2840  00321E  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2841  003220  EF1D  F019         	goto	u9960
  2842  003224  0E2C               	movlw	44
  2843  003226  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  2844  003228  0E01               	movlw	1
  2845  00322A  59AD               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2846  00322C  B0D8               	btfsc	status,0,c
  2847  00322E  EF1B  F019         	goto	u9961
  2848  003232  EF1D  F019         	goto	u9960
  2849  003236                     u9961:
  2850  003236  EF31  F019         	goto	l8982
  2851  00323A                     u9960:
  2852  00323A                     
  2853                           ; BSR set to: 1
  2854  00323A  0100               	movlb	0	; () banked
  2855  00323C  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2856  00323E  E107               	bnz	u9971
  2857  003240  0E7D               	movlw	125
  2858  003242  5DEF               	subwf	_oldDistLeft& (0+255),w,b
  2859  003244  B0D8               	btfsc	status,0,c
  2860  003246  EF27  F019         	goto	u9971
  2861  00324A  EF29  F019         	goto	u9970
  2862  00324E                     u9971:
  2863  00324E  EF31  F019         	goto	l8982
  2864  003252                     u9970:
  2865  003252                     
  2866                           ; BSR set to: 0
  2867                           ;main.c: 135:                 delay = 0;
  2868  003252  0E00               	movlw	0
  2869  003254  6FF9               	movwf	_delay& (0+255),b
  2870                           
  2871                           ;main.c: 136:                 curveMode = BeforeCurve;
  2872  003256  0E01               	movlw	1
  2873  003258  6FFB               	movwf	_curveMode& (0+255),b
  2874                           
  2875                           ;main.c: 137:                 driveMode = CurveLeft;
  2876  00325A  0E05               	movlw	5
  2877  00325C  6FFE               	movwf	_driveMode& (0+255),b
  2878                           
  2879                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2880  00325E  EF36  F01A         	goto	l1277
  2881  003262                     l8982:
  2882  003262  0101               	movlb	1	; () banked
  2883  003264  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2884  003266  EF3E  F019         	goto	u9981
  2885  00326A  51AB               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2886  00326C  E109               	bnz	u9980
  2887  00326E  0E1F               	movlw	31
  2888  003270  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2889  003272  A0D8               	btfss	status,0,c
  2890  003274  EF3E  F019         	goto	u9981
  2891  003278  EF40  F019         	goto	u9980
  2892  00327C                     u9981:
  2893  00327C  EF36  F01A         	goto	l1277
  2894  003280                     u9980:
  2895  003280                     
  2896                           ; BSR set to: 1
  2897  003280  BFAB               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2898  003282  EF4E  F019         	goto	u9990
  2899  003286  0E2C               	movlw	44
  2900  003288  5DAA               	subwf	getCurve@deltaRight& (0+255),w,b
  2901  00328A  0E01               	movlw	1
  2902  00328C  59AB               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2903  00328E  B0D8               	btfsc	status,0,c
  2904  003290  EF4C  F019         	goto	u9991
  2905  003294  EF4E  F019         	goto	u9990
  2906  003298                     u9991:
  2907  003298  EF36  F01A         	goto	l1277
  2908  00329C                     u9990:
  2909  00329C                     
  2910                           ; BSR set to: 1
  2911  00329C  0100               	movlb	0	; () banked
  2912  00329E  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2913  0032A0  E107               	bnz	u10001
  2914  0032A2  0E7D               	movlw	125
  2915  0032A4  5DED               	subwf	_oldDistRight& (0+255),w,b
  2916  0032A6  B0D8               	btfsc	status,0,c
  2917  0032A8  EF58  F019         	goto	u10001
  2918  0032AC  EF5A  F019         	goto	u10000
  2919  0032B0                     u10001:
  2920  0032B0  EF36  F01A         	goto	l1277
  2921  0032B4                     u10000:
  2922  0032B4                     
  2923                           ; BSR set to: 0
  2924                           ;main.c: 141:                 delay = 0;
  2925  0032B4  0E00               	movlw	0
  2926  0032B6  6FF9               	movwf	_delay& (0+255),b
  2927                           
  2928                           ;main.c: 142:                 curveMode = BeforeCurve;
  2929  0032B8  0E01               	movlw	1
  2930  0032BA  6FFB               	movwf	_curveMode& (0+255),b
  2931                           
  2932                           ;main.c: 143:                 driveMode = CurveRight;
  2933  0032BC  0E06               	movlw	6
  2934  0032BE  6FFE               	movwf	_driveMode& (0+255),b
  2935  0032C0  EF36  F01A         	goto	l1277
  2936  0032C4                     l8990:
  2937                           
  2938                           ; BSR set to: 1
  2939                           ;main.c: 150:             if (delay >= (15)) {
  2940  0032C4  0E0E               	movlw	14
  2941  0032C6  0100               	movlb	0	; () banked
  2942  0032C8  65F9               	cpfsgt	_delay& (0+255),b
  2943  0032CA  EF69  F019         	goto	u10011
  2944  0032CE  EF6B  F019         	goto	u10010
  2945  0032D2                     u10011:
  2946  0032D2  EF71  F019         	goto	l8994
  2947  0032D6                     u10010:
  2948  0032D6                     
  2949                           ; BSR set to: 0
  2950                           ;main.c: 151:                 delay = 0;
  2951  0032D6  0E00               	movlw	0
  2952  0032D8  6FF9               	movwf	_delay& (0+255),b
  2953                           
  2954                           ;main.c: 152:                 curveMode = InCurve;
  2955  0032DA  0E02               	movlw	2
  2956  0032DC  6FFB               	movwf	_curveMode& (0+255),b
  2957                           
  2958                           ;main.c: 154:             } else {
  2959  0032DE  EF36  F01A         	goto	l1277
  2960  0032E2                     l8994:
  2961                           
  2962                           ;main.c: 155:                 ++delay;
  2963  0032E2  0100               	movlb	0	; () banked
  2964  0032E4  2BF9               	incf	_delay& (0+255),f,b
  2965  0032E6  EF36  F01A         	goto	l1277
  2966  0032EA                     l8996:
  2967                           
  2968                           ; BSR set to: 1
  2969                           ;main.c: 159:             if (delay >= (30)) {
  2970  0032EA  0E1D               	movlw	29
  2971  0032EC  0100               	movlb	0	; () banked
  2972  0032EE  65F9               	cpfsgt	_delay& (0+255),b
  2973  0032F0  EF7C  F019         	goto	u10021
  2974  0032F4  EF7E  F019         	goto	u10020
  2975  0032F8                     u10021:
  2976  0032F8  EF71  F019         	goto	l8994
  2977  0032FC                     u10020:
  2978  0032FC                     
  2979                           ; BSR set to: 0
  2980                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  2981  0032FC  0E05               	movlw	5
  2982  0032FE  19FE               	xorwf	_driveMode& (0+255),w,b
  2983  003300  A4D8               	btfss	status,2,c
  2984  003302  EF85  F019         	goto	u10031
  2985  003306  EF87  F019         	goto	u10030
  2986  00330A                     u10031:
  2987  00330A  EF92  F019         	goto	l9002
  2988  00330E                     u10030:
  2989  00330E                     
  2990                           ; BSR set to: 0
  2991  00330E  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2992  003310  E109               	bnz	u10040
  2993  003312  0E2D               	movlw	45
  2994  003314  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2995  003316  A0D8               	btfss	status,0,c
  2996  003318  EF90  F019         	goto	u10041
  2997  00331C  EF92  F019         	goto	u10040
  2998  003320                     u10041:
  2999  003320  EFB1  F019         	goto	l9008
  3000  003324                     u10040:
  3001  003324                     l9002:
  3002                           
  3003                           ; BSR set to: 0
  3004  003324  0E06               	movlw	6
  3005  003326  19FE               	xorwf	_driveMode& (0+255),w,b
  3006  003328  A4D8               	btfss	status,2,c
  3007  00332A  EF99  F019         	goto	u10051
  3008  00332E  EF9B  F019         	goto	u10050
  3009  003332                     u10051:
  3010  003332  EFA6  F019         	goto	l9006
  3011  003336                     u10050:
  3012  003336                     
  3013                           ; BSR set to: 0
  3014  003336  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  3015  003338  E109               	bnz	u10060
  3016  00333A  0E2D               	movlw	45
  3017  00333C  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  3018  00333E  A0D8               	btfss	status,0,c
  3019  003340  EFA4  F019         	goto	u10061
  3020  003344  EFA6  F019         	goto	u10060
  3021  003348                     u10061:
  3022  003348  EFB1  F019         	goto	l9008
  3023  00334C                     u10060:
  3024  00334C                     l9006:
  3025                           
  3026                           ; BSR set to: 0
  3027  00334C  0E2D               	movlw	45
  3028  00334E  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  3029  003350  0E01               	movlw	1
  3030  003352  59FD               	subwfb	(_distFront+1)& (0+255),w,b	;volatile
  3031  003354  A0D8               	btfss	status,0,c
  3032  003356  EFAF  F019         	goto	u10071
  3033  00335A  EFB1  F019         	goto	u10070
  3034  00335E                     u10071:
  3035  00335E  EFE7  F019         	goto	l9026
  3036  003362                     u10070:
  3037  003362                     l9008:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;main.c: 161:                     printf("Time: \t%d     \t", delay);
  3041  003362  0E15               	movlw	low STR_5
  3042  003364  0101               	movlb	1	; () banked
  3043  003366  6FA0               	movwf	printf@fmt& (0+255),b
  3044  003368  0E10               	movlw	high STR_5
  3045  00336A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3046  00336C  C0F9  F1A2         	movff	_delay,?_printf+2
  3047  003370  6BA3               	clrf	(?_printf+3)& (0+255),b
  3048  003372  EC58  F02E         	call	_printf	;wreg free
  3049  003376                     
  3050                           ;main.c: 162:                     if (delay >= 70) {
  3051  003376  0E45               	movlw	69
  3052  003378  0100               	movlb	0	; () banked
  3053  00337A  65F9               	cpfsgt	_delay& (0+255),b
  3054  00337C  EFC2  F019         	goto	u10081
  3055  003380  EFC4  F019         	goto	u10080
  3056  003384                     u10081:
  3057  003384  EFD2  F019         	goto	l9016
  3058  003388                     u10080:
  3059  003388                     
  3060                           ; BSR set to: 0
  3061                           ;main.c: 163:                         printf("stay Left\n");
  3062  003388  0E4A               	movlw	low STR_6
  3063  00338A  0101               	movlb	1	; () banked
  3064  00338C  6FA0               	movwf	printf@fmt& (0+255),b
  3065  00338E  0E10               	movlw	high STR_6
  3066  003390  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3067  003392  EC58  F02E         	call	_printf	;wreg free
  3068  003396                     
  3069                           ;main.c: 164:                         middleOffSet = -10;
  3070  003396  0EFF               	movlw	255
  3071  003398  0101               	movlb	1	; () banked
  3072  00339A  6FAF               	movwf	(_middleOffSet+1)& (0+255),b
  3073  00339C  0EF6               	movlw	246
  3074  00339E  6FAE               	movwf	_middleOffSet& (0+255),b
  3075                           
  3076                           ;main.c: 165:                     } else {
  3077  0033A0  EFDE  F019         	goto	l9020
  3078  0033A4                     l9016:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;main.c: 166:                         printf("stay Right\n");
  3082  0033A4  0E32               	movlw	low STR_7
  3083  0033A6  0101               	movlb	1	; () banked
  3084  0033A8  6FA0               	movwf	printf@fmt& (0+255),b
  3085  0033AA  0E10               	movlw	high STR_7
  3086  0033AC  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  3087  0033AE  EC58  F02E         	call	_printf	;wreg free
  3088  0033B2                     
  3089                           ;main.c: 167:                         middleOffSet = 10;
  3090  0033B2  0E00               	movlw	0
  3091  0033B4  0101               	movlb	1	; () banked
  3092  0033B6  6FAF               	movwf	(_middleOffSet+1)& (0+255),b
  3093  0033B8  0E0A               	movlw	10
  3094  0033BA  6FAE               	movwf	_middleOffSet& (0+255),b
  3095  0033BC                     l9020:
  3096                           
  3097                           ; BSR set to: 1
  3098                           ;main.c: 170:                     delay = 0;
  3099  0033BC  0E00               	movlw	0
  3100  0033BE  0100               	movlb	0	; () banked
  3101  0033C0  6FF9               	movwf	_delay& (0+255),b
  3102  0033C2                     
  3103                           ; BSR set to: 0
  3104                           ;main.c: 171:                     curveMode = AfterCurve;
  3105  0033C2  0E03               	movlw	3
  3106  0033C4  6FFB               	movwf	_curveMode& (0+255),b
  3107  0033C6                     
  3108                           ; BSR set to: 0
  3109                           ;main.c: 172:                     driveMode = Straight;
  3110  0033C6  0E01               	movlw	1
  3111  0033C8  6FFE               	movwf	_driveMode& (0+255),b
  3112                           
  3113                           ;main.c: 175:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  3114  0033CA  EF71  F019         	goto	l8994
  3115  0033CE                     l9026:
  3116                           
  3117                           ; BSR set to: 0
  3118  0033CE  0E06               	movlw	6
  3119  0033D0  19FE               	xorwf	_driveMode& (0+255),w,b
  3120  0033D2  A4D8               	btfss	status,2,c
  3121  0033D4  EFEE  F019         	goto	u10091
  3122  0033D8  EFF0  F019         	goto	u10090
  3123  0033DC                     u10091:
  3124  0033DC  EF71  F019         	goto	l8994
  3125  0033E0                     u10090:
  3126  0033E0                     
  3127                           ; BSR set to: 0
  3128  0033E0  0101               	movlb	1	; () banked
  3129  0033E2  BFAD               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  3130  0033E4  EFFD  F019         	goto	u10101
  3131  0033E8  51AD               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  3132  0033EA  E109               	bnz	u10100
  3133  0033EC  0E1F               	movlw	31
  3134  0033EE  5DAC               	subwf	getCurve@deltaLeft& (0+255),w,b
  3135  0033F0  A0D8               	btfss	status,0,c
  3136  0033F2  EFFD  F019         	goto	u10101
  3137  0033F6  EFFF  F019         	goto	u10100
  3138  0033FA                     u10101:
  3139  0033FA  EF71  F019         	goto	l8994
  3140  0033FE                     u10100:
  3141  0033FE                     
  3142                           ; BSR set to: 1
  3143                           ;main.c: 177:                     delay = 0;
  3144  0033FE  0E00               	movlw	0
  3145  003400  0100               	movlb	0	; () banked
  3146  003402  6FF9               	movwf	_delay& (0+255),b
  3147                           
  3148                           ;main.c: 178:                     curveMode = BeforeCurve;
  3149  003404  0E01               	movlw	1
  3150  003406  6FFB               	movwf	_curveMode& (0+255),b
  3151                           
  3152                           ;main.c: 179:                     driveMode = CurveLeft;
  3153  003408  0E05               	movlw	5
  3154  00340A  6FFE               	movwf	_driveMode& (0+255),b
  3155  00340C  EF71  F019         	goto	l8994
  3156  003410                     l9034:
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;main.c: 186:             if (delay >= (1)) {
  3160  003410  0100               	movlb	0	; () banked
  3161  003412  51F9               	movf	_delay& (0+255),w,b
  3162  003414  B4D8               	btfsc	status,2,c
  3163  003416  EF0F  F01A         	goto	u10111
  3164  00341A  EF11  F01A         	goto	u10110
  3165  00341E                     u10111:
  3166  00341E  EF71  F019         	goto	l8994
  3167  003422                     u10110:
  3168  003422                     
  3169                           ; BSR set to: 0
  3170                           ;main.c: 187:                 delay = 0;
  3171  003422  0E00               	movlw	0
  3172  003424  6FF9               	movwf	_delay& (0+255),b
  3173                           
  3174                           ;main.c: 188:                 curveMode = OutCurve;
  3175  003426  0E00               	movlw	0
  3176  003428  6FFB               	movwf	_curveMode& (0+255),b
  3177                           
  3178                           ;main.c: 190:             } else {
  3179  00342A  EF36  F01A         	goto	l1277
  3180  00342E                     l9042:
  3181                           
  3182                           ; BSR set to: 1
  3183  00342E  0100               	movlb	0	; () banked
  3184  003430  51FB               	movf	_curveMode& (0+255),w,b
  3185  003432  0101               	movlb	1	; () banked
  3186  003434  6FA8               	movwf	??_getCurve& (0+255),b
  3187  003436  6BA9               	clrf	(??_getCurve+1)& (0+255),b
  3188                           
  3189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3190                           ; Switch size 1, requested type "simple"
  3191                           ; Number of cases is 1, Range of values is 0 to 0
  3192                           ; switch strategies available:
  3193                           ; Name         Instructions Cycles
  3194                           ; simple_byte            4     3 (average)
  3195                           ;	Chosen strategy is simple_byte
  3196  003438  51A9               	movf	(??_getCurve+1)& (0+255),w,b
  3197  00343A  0A00               	xorlw	0	; case 0
  3198  00343C  B4D8               	btfsc	status,2,c
  3199  00343E  EF23  F01A         	goto	l9312
  3200  003442  EF36  F01A         	goto	l1277
  3201  003446                     l9312:
  3202                           
  3203                           ; BSR set to: 1
  3204                           ; Switch size 1, requested type "simple"
  3205                           ; Number of cases is 4, Range of values is 0 to 3
  3206                           ; switch strategies available:
  3207                           ; Name         Instructions Cycles
  3208                           ; simple_byte           13     7 (average)
  3209                           ;	Chosen strategy is simple_byte
  3210  003446  51A8               	movf	??_getCurve& (0+255),w,b
  3211  003448  0A00               	xorlw	0	; case 0
  3212  00344A  B4D8               	btfsc	status,2,c
  3213  00344C  EF01  F019         	goto	l8974
  3214  003450  0A01               	xorlw	1	; case 1
  3215  003452  B4D8               	btfsc	status,2,c
  3216  003454  EF62  F019         	goto	l8990
  3217  003458  0A03               	xorlw	3	; case 2
  3218  00345A  B4D8               	btfsc	status,2,c
  3219  00345C  EF75  F019         	goto	l8996
  3220  003460  0A01               	xorlw	1	; case 3
  3221  003462  B4D8               	btfsc	status,2,c
  3222  003464  EF08  F01A         	goto	l9034
  3223  003468  EF36  F01A         	goto	l1277
  3224  00346C                     l1277:
  3225                           
  3226                           ;main.c: 195:     oldDistLeft = distLeft;
  3227  00346C  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  3228  003470  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3229                           
  3230                           ;main.c: 196:     oldDistRight = distRight;
  3231  003474  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  3232  003478  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  3233  00347C  0012               	return		;funcret
  3234  00347E                     __end_of_getCurve:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _printf *****************
  3238 ;; Defined at:
  3239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  3242 ;;		 -> STR_7(12), STR_6(11), STR_5(16), STR_4(20), 
  3243 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  ap              2   12[BANK1 ] PTR void [1]
  3246 ;;		 -> ?_printf(2), 
  3247 ;;  ret             2    0        int 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  2    6[BANK1 ] int 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:        8 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 16
  3264 ;; This function calls:
  3265 ;;		_vfprintf
  3266 ;; This function is called by:
  3267 ;;		_loop
  3268 ;;		_startAccell
  3269 ;;		_getCurve
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text6
  3274  005CB0                     __ptext6:
  3275                           	callstack 0
  3276  005CB0                     _printf:
  3277                           	callstack 12
  3278  005CB0  0EA2               	movlw	low (?_printf+2)
  3279  005CB2  0101               	movlb	1	; () banked
  3280  005CB4  6FA6               	movwf	printf@ap& (0+255),b
  3281  005CB6  0E01               	movlw	high (?_printf+2)
  3282  005CB8  6FA7               	movwf	(printf@ap+1)& (0+255),b
  3283  005CBA                     
  3284                           ; BSR set to: 1
  3285  005CBA  0E00               	movlw	0
  3286  005CBC  6F9A               	movwf	vfprintf@fp& (0+255),b
  3287  005CBE  0E00               	movlw	0
  3288  005CC0  6F9B               	movwf	(vfprintf@fp+1)& (0+255),b
  3289  005CC2  C1A0  F19C         	movff	printf@fmt,vfprintf@fmt
  3290  005CC6  C1A1  F19D         	movff	printf@fmt+1,vfprintf@fmt+1
  3291  005CCA  0EA6               	movlw	low printf@ap
  3292  005CCC  6F9E               	movwf	vfprintf@ap& (0+255),b
  3293  005CCE  0E01               	movlw	high printf@ap
  3294  005CD0  6F9F               	movwf	(vfprintf@ap+1)& (0+255),b
  3295  005CD2  EC68  F029         	call	_vfprintf	;wreg free
  3296  005CD6  0012               	return		;funcret
  3297  005CD8                     __end_of_printf:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _vfprintf *****************
  3301 ;; Defined at:
  3302 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3305 ;;		 -> NULL(0), 
  3306 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3307 ;;		 -> STR_7(12), STR_6(11), STR_5(16), STR_4(20), 
  3308 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3309 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3310 ;;		 -> printf@ap(2), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3313 ;;		 -> STR_7(12), STR_6(11), STR_5(16), STR_4(20), 
  3314 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  2    0[BANK1 ] int 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        8 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; Hardware stack levels required when called: 15
  3331 ;; This function calls:
  3332 ;;		_vfpfcnvrt
  3333 ;; This function is called by:
  3334 ;;		_printf
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text7
  3339  0052D0                     __ptext7:
  3340                           	callstack 0
  3341  0052D0                     _vfprintf:
  3342                           	callstack 12
  3343  0052D0                     
  3344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3345  0052D0  C19C  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3346  0052D4  C19D  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3347  0052D8                     
  3348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3349  0052D8  0E00               	movlw	0
  3350  0052DA  0101               	movlb	1	; () banked
  3351  0052DC  6F29               	movwf	(_nout+1)& (0+255),b
  3352  0052DE  0E00               	movlw	0
  3353  0052E0  6F28               	movwf	_nout& (0+255),b
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3356  0052E2  EF8A  F029         	goto	l8828
  3357  0052E6                     l8826:
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3361  0052E6  C19A  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3362  0052EA  C19B  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3363  0052EE  0EE3               	movlw	low vfprintf@cfmt
  3364  0052F0  0100               	movlb	0	; () banked
  3365  0052F2  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3366  0052F4  0E00               	movlw	high vfprintf@cfmt
  3367  0052F6  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3368  0052F8  C19E  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3369  0052FC  C19F  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3370  005300  EC91  F00E         	call	_vfpfcnvrt	;wreg free
  3371  005304  0100               	movlb	0	; () banked
  3372  005306  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3373  005308  0101               	movlb	1	; () banked
  3374  00530A  2728               	addwf	_nout& (0+255),f,b
  3375  00530C  0100               	movlb	0	; () banked
  3376  00530E  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3377  005310  0101               	movlb	1	; () banked
  3378  005312  2329               	addwfc	(_nout+1)& (0+255),f,b
  3379  005314                     l8828:
  3380                           
  3381                           ; BSR set to: 1
  3382                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3383  005314  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3384  00531A  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3385  005320                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3386  005320  6AF8               	clrf	tblptru,c
  3387  005322                     	endif
  3388  005322                     	if	0	;tblptru may be non-zero
  3389  005322                     	endif
  3390  005322  0008               	tblrd		*
  3391  005324  50F5               	movf	tablat,w,c
  3392  005326  0900               	iorlw	0
  3393  005328  A4D8               	btfss	status,2,c
  3394  00532A  EF99  F029         	goto	u9811
  3395  00532E  EF9B  F029         	goto	u9810
  3396  005332                     u9811:
  3397  005332  EF73  F029         	goto	l8826
  3398  005336                     u9810:
  3399  005336                     
  3400                           ; BSR set to: 1
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3402  005336  C128  F19A         	movff	_nout,?_vfprintf
  3403  00533A  C129  F19B         	movff	_nout+1,?_vfprintf+1
  3404  00533E                     
  3405                           ; BSR set to: 1
  3406  00533E  0012               	return		;funcret
  3407  005340                     __end_of_vfprintf:
  3408                           	callstack 0
  3409                           
  3410 ;; *************** function _vfpfcnvrt *****************
  3411 ;; Defined at:
  3412 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3415 ;;		 -> NULL(0), 
  3416 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3417 ;;		 -> vfprintf@cfmt(2), 
  3418 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3419 ;;		 -> printf@ap(2), 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  ll              8  113[BANK0 ] long long 
  3422 ;;  llu             8    0        unsigned long long 
  3423 ;;  f               4  123[BANK0 ] unsigned long long 
  3424 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3425 ;;  vp              3    0        PTR void 
  3426 ;;  cp              3    0        PTR unsigned char 
  3427 ;;  i               2    0        int 
  3428 ;;  done            2    0        int 
  3429 ;;  c               1  130[BANK0 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  2  103[BANK0 ] int 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;Total ram usage:       28 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 14
  3446 ;; This function calls:
  3447 ;;		_dtoa
  3448 ;;		_efgtoa
  3449 ;;		_fputc
  3450 ;;		_isupper
  3451 ;;		_strncmp
  3452 ;;		_tolower
  3453 ;; This function is called by:
  3454 ;;		_vfprintf
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text8
  3459  001D22                     __ptext8:
  3460                           	callstack 0
  3461  001D22                     _vfpfcnvrt:
  3462                           	callstack 12
  3463  001D22                     
  3464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3465  001D22  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3466  001D28  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3467  001D2E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3468  001D34  006F FF77 FFF7     	movff	postdec2,tblptrh
  3469  001D3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3470  001D3A  6AF8               	clrf	tblptru,c
  3471  001D3C                     	endif
  3472  001D3C                     	if	0	;tblptru may be non-zero
  3473  001D3C                     	endif
  3474  001D3C  0008               	tblrd		*
  3475  001D3E  50F5               	movf	tablat,w,c
  3476  001D40  0A25               	xorlw	37
  3477  001D42  A4D8               	btfss	status,2,c
  3478  001D44  EFA6  F00E         	goto	u9541
  3479  001D48  EFA8  F00E         	goto	u9540
  3480  001D4C                     u9541:
  3481  001D4C  EFFF  F010         	goto	l8724
  3482  001D50                     u9540:
  3483  001D50                     
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3485  001D50  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3486  001D56  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3487  001D5C  2ADE               	incf	postinc2,f,c
  3488  001D5E  0E00               	movlw	0
  3489  001D60  22DD               	addwfc	postdec2,f,c
  3490  001D62                     
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3492  001D62  0E00               	movlw	0
  3493  001D64  6E3B               	movwf	(_width+1)^0,c
  3494  001D66  0E00               	movlw	0
  3495  001D68  6E3A               	movwf	_width^0,c
  3496  001D6A  C03A  F03E         	movff	_width,_flags
  3497  001D6E  C03B  F03F         	movff	_width+1,_flags+1
  3498  001D72                     
  3499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3500  001D72  683C               	setf	_prec^0,c
  3501  001D74  683D               	setf	(_prec+1)^0,c
  3502  001D76                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3504  001D76  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3505  001D7C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3506  001D82  006F FF7B FFF6     	movff	postinc2,tblptrl
  3507  001D88  006F FF77 FFF7     	movff	postdec2,tblptrh
  3508  001D8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3509  001D8E  6AF8               	clrf	tblptru,c
  3510  001D90                     	endif
  3511  001D90                     	if	0	;tblptru may be non-zero
  3512  001D90                     	endif
  3513  001D90  0008               	tblrd		*
  3514  001D92  50F5               	movf	tablat,w,c
  3515  001D94  6E1A               	movwf	tolower@c^0,c
  3516  001D96  6A1B               	clrf	(tolower@c+1)^0,c
  3517  001D98  EC08  F02A         	call	_tolower	;wreg free
  3518  001D9C  501A               	movf	?_tolower^0,w,c
  3519  001D9E  0100               	movlb	0	; () banked
  3520  001DA0  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3521  001DA2                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3524  001DA2  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3525  001DA4  B4D8               	btfsc	status,2,c
  3526  001DA6  EFD7  F00E         	goto	u9551
  3527  001DAA  EFD9  F00E         	goto	u9550
  3528  001DAE                     u9551:
  3529  001DAE  EF21  F00F         	goto	l8670
  3530  001DB2                     u9550:
  3531  001DB2                     
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3534  001DB2  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3535  001DB8  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3536  001DBE  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3537  001DC4  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3538  001DCA  0E01               	movlw	1
  3539  001DCC  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3540  001DCE  0E00               	movlw	0
  3541  001DD0  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3542  001DD2  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3543  001DD8  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3544  001DDE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3545  001DDE  6AF8               	clrf	tblptru,c
  3546  001DE0                     	endif
  3547  001DE0                     	if	0	;tblptru may be non-zero
  3548  001DE0                     	endif
  3549  001DE0  0008               	tblrd		*
  3550  001DE2  50F5               	movf	tablat,w,c
  3551  001DE4  6E1A               	movwf	tolower@c^0,c
  3552  001DE6  6A1B               	clrf	(tolower@c+1)^0,c
  3553  001DE8  EC08  F02A         	call	_tolower	;wreg free
  3554  001DEC  501A               	movf	?_tolower^0,w,c
  3555  001DEE  0100               	movlb	0	; () banked
  3556  001DF0  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3557  001DF2                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3560  001DF2  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3561  001DF4  B4D8               	btfsc	status,2,c
  3562  001DF6  EFFF  F00E         	goto	u9561
  3563  001DFA  EF01  F00F         	goto	u9560
  3564  001DFE                     u9561:
  3565  001DFE  EF21  F00F         	goto	l8670
  3566  001E02                     u9560:
  3567  001E02                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3570  001E02  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3571  001E08  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3572  001E0E  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3573  001E14  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3574  001E1A  0E02               	movlw	2
  3575  001E1C  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3576  001E1E  0E00               	movlw	0
  3577  001E20  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3578  001E22  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3579  001E28  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3580  001E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3581  001E2E  6AF8               	clrf	tblptru,c
  3582  001E30                     	endif
  3583  001E30                     	if	0	;tblptru may be non-zero
  3584  001E30                     	endif
  3585  001E30  0008               	tblrd		*
  3586  001E32  50F5               	movf	tablat,w,c
  3587  001E34  6E1A               	movwf	tolower@c^0,c
  3588  001E36  6A1B               	clrf	(tolower@c+1)^0,c
  3589  001E38  EC08  F02A         	call	_tolower	;wreg free
  3590  001E3C  501A               	movf	?_tolower^0,w,c
  3591  001E3E  0100               	movlb	0	; () banked
  3592  001E40  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3593  001E42                     l8670:
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3597  001E42  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3598  001E48  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3599  001E4E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3600  001E54  006F FF77 FFF7     	movff	postdec2,tblptrh
  3601  001E5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3602  001E5A  6AF8               	clrf	tblptru,c
  3603  001E5C                     	endif
  3604  001E5C                     	if	0	;tblptru may be non-zero
  3605  001E5C                     	endif
  3606  001E5C  0008               	tblrd		*
  3607  001E5E  50F5               	movf	tablat,w,c
  3608  001E60  0A64               	xorlw	100
  3609  001E62  B4D8               	btfsc	status,2,c
  3610  001E64  EF36  F00F         	goto	u9571
  3611  001E68  EF38  F00F         	goto	u9570
  3612  001E6C                     u9571:
  3613  001E6C  EF4F  F00F         	goto	l8674
  3614  001E70                     u9570:
  3615  001E70                     
  3616                           ; BSR set to: 0
  3617  001E70  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3618  001E76  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3619  001E7C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3620  001E82  006F FF77 FFF7     	movff	postdec2,tblptrh
  3621  001E88                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3622  001E88  6AF8               	clrf	tblptru,c
  3623  001E8A                     	endif
  3624  001E8A                     	if	0	;tblptru may be non-zero
  3625  001E8A                     	endif
  3626  001E8A  0008               	tblrd		*
  3627  001E8C  50F5               	movf	tablat,w,c
  3628  001E8E  0A69               	xorlw	105
  3629  001E90  A4D8               	btfss	status,2,c
  3630  001E92  EF4D  F00F         	goto	u9581
  3631  001E96  EF4F  F00F         	goto	u9580
  3632  001E9A                     u9581:
  3633  001E9A  EF99  F00F         	goto	l8680
  3634  001E9E                     u9580:
  3635  001E9E                     l8674:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3639  001E9E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3640  001EA4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3641  001EAA  2ADE               	incf	postinc2,f,c
  3642  001EAC  0E00               	movlw	0
  3643  001EAE  22DD               	addwfc	postdec2,f,c
  3644                           
  3645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3646  001EB0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3647  001EB6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3648  001EBC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3649  001EC2  0E02               	movlw	2
  3650  001EC4  26DE               	addwf	postinc2,f,c
  3651  001EC6  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3652  001ECC  0E00               	movlw	0
  3653  001ECE  22DD               	addwfc	postdec2,f,c
  3654  001ED0  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3655  001ED6  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3656  001EDC  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3657  001EE2  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3658  001EE8  0E00               	movlw	0
  3659  001EEA  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3660  001EEC  0EFF               	movlw	-1
  3661  001EEE  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3662  001EF0  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3663  001EF2  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3664  001EF4  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3665  001EF6  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3666  001EF8  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3667  001EFA                     
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3670  001EFA  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3671  001EFE  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3672  001F02  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3673  001F06  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3674  001F0A  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3675  001F0E  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3676  001F12  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3677  001F16  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3678  001F1A  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3679  001F1E  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3680  001F22  EC78  F017         	call	_dtoa	;wreg free
  3681  001F26  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3682  001F2A  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3683  001F2E  EF21  F011         	goto	l2248
  3684  001F32                     l8680:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3688  001F32  0E66               	movlw	102
  3689  001F34  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3690  001F36  A4D8               	btfss	status,2,c
  3691  001F38  EFA0  F00F         	goto	u9591
  3692  001F3C  EFA2  F00F         	goto	u9590
  3693  001F40                     u9591:
  3694  001F40  EFF4  F00F         	goto	l8692
  3695  001F44                     u9590:
  3696  001F44                     
  3697                           ; BSR set to: 0
  3698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3699  001F44  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3700  001F4A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3701  001F50  006F FF7B FFF6     	movff	postinc2,tblptrl
  3702  001F56  006F FF77 FFF7     	movff	postdec2,tblptrh
  3703  001F5C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3704  001F5C  6AF8               	clrf	tblptru,c
  3705  001F5E                     	endif
  3706  001F5E                     	if	0	;tblptru may be non-zero
  3707  001F5E                     	endif
  3708  001F5E  0008               	tblrd		*
  3709  001F60  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3710  001F66                     
  3711                           ; BSR set to: 0
  3712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3713  001F66  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3714  001F6C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3715  001F72  2ADE               	incf	postinc2,f,c
  3716  001F74  0E00               	movlw	0
  3717  001F76  22DD               	addwfc	postdec2,f,c
  3718  001F78                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3721  001F78  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3722  001F7E  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3723  001F84  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3724  001F8A  0E04               	movlw	4
  3725  001F8C  26DE               	addwf	postinc2,f,c
  3726  001F8E  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3727  001F94  0E00               	movlw	0
  3728  001F96  22DD               	addwfc	postdec2,f,c
  3729  001F98  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3730  001F9E  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3731  001FA4  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3732  001FAA  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3733  001FB0  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3734  001FB6  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3735  001FBC                     
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3738  001FBC  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3739  001FC0  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3740  001FC4  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3741  001FC8  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3742  001FCC  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3743  001FD0  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3744  001FD4  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3745  001FD8  EC3A  F008         	call	_efgtoa	;wreg free
  3746  001FDC  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3747  001FE0  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3748  001FE4  EF21  F011         	goto	l2248
  3749  001FE8                     l8692:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3753  001FE8  0EDF               	movlw	low vfpfcnvrt@ct
  3754  001FEA  6E14               	movwf	strncmp@_l^0,c
  3755  001FEC  0E00               	movlw	high vfpfcnvrt@ct
  3756  001FEE  6E15               	movwf	(strncmp@_l+1)^0,c
  3757  001FF0  0E6F               	movlw	low STR_16
  3758  001FF2  6E16               	movwf	strncmp@_r^0,c
  3759  001FF4  0E10               	movlw	high STR_16
  3760  001FF6  6E17               	movwf	(strncmp@_r+1)^0,c
  3761  001FF8  0E00               	movlw	0
  3762  001FFA  6E19               	movwf	(strncmp@n+1)^0,c
  3763  001FFC  0E02               	movlw	2
  3764  001FFE  6E18               	movwf	strncmp@n^0,c
  3765  002000  EC18  F025         	call	_strncmp	;wreg free
  3766  002004  5014               	movf	?_strncmp^0,w,c
  3767  002006  1015               	iorwf	(?_strncmp+1)^0,w,c
  3768  002008  A4D8               	btfss	status,2,c
  3769  00200A  EF09  F010         	goto	u9601
  3770  00200E  EF0B  F010         	goto	u9600
  3771  002012                     u9601:
  3772  002012  EFBE  F010         	goto	l8708
  3773  002016                     u9600:
  3774  002016                     
  3775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3776  002016  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3777  00201C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3778  002022  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3779  002028  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3780  00202E  0E01               	movlw	1
  3781  002030  0100               	movlb	0	; () banked
  3782  002032  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3783  002034  0E00               	movlw	0
  3784  002036  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3785  002038  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3786  00203E  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3787  002044                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3788  002044  6AF8               	clrf	tblptru,c
  3789  002046                     	endif
  3790  002046                     	if	0	;tblptru may be non-zero
  3791  002046                     	endif
  3792  002046  0008               	tblrd		*
  3793  002048  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3794  00204E  0EBF               	movlw	191
  3795  002050  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3796  002052  0EFF               	movlw	255
  3797  002054  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3798  002056  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3799  00205C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3800  002062  006F FF7B FFF6     	movff	postinc2,tblptrl
  3801  002068  006F FF77 FFF7     	movff	postdec2,tblptrh
  3802  00206E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3803  00206E  6AF8               	clrf	tblptru,c
  3804  002070                     	endif
  3805  002070                     	if	0	;tblptru may be non-zero
  3806  002070                     	endif
  3807  002070  0008               	tblrd		*
  3808  002072  50F5               	movf	tablat,w,c
  3809  002074  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3810  002076  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3811  002078  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3812  00207A  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3813  00207C  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3814  00207E  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3815  002080  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3816  002082  E10A               	bnz	u9610
  3817  002084  0E1A               	movlw	26
  3818  002086  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3819  002088  A0D8               	btfss	status,0,c
  3820  00208A  EF49  F010         	goto	u9611
  3821  00208E  EF4C  F010         	goto	u9610
  3822  002092                     u9611:
  3823  002092  0E01               	movlw	1
  3824  002094  EF4D  F010         	goto	u9620
  3825  002098                     u9610:
  3826  002098  0E00               	movlw	0
  3827  00209A                     u9620:
  3828  00209A  6FD9               	movwf	_vfpfcnvrt$3583& (0+255),b
  3829  00209C  6BDA               	clrf	(_vfpfcnvrt$3583+1)& (0+255),b
  3830  00209E                     
  3831                           ; BSR set to: 0
  3832  00209E  51D9               	movf	_vfpfcnvrt$3583& (0+255),w,b
  3833  0020A0  11DA               	iorwf	(_vfpfcnvrt$3583+1)& (0+255),w,b
  3834  0020A2  B4D8               	btfsc	status,2,c
  3835  0020A4  EF56  F010         	goto	u9631
  3836  0020A8  EF58  F010         	goto	u9630
  3837  0020AC                     u9631:
  3838  0020AC  EF7C  F010         	goto	l8702
  3839  0020B0                     u9630:
  3840  0020B0                     
  3841                           ; BSR set to: 0
  3842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3843  0020B0  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3844  0020B6  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3845  0020BC  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3846  0020C2  0E04               	movlw	4
  3847  0020C4  26DE               	addwf	postinc2,f,c
  3848  0020C6  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3849  0020CC  0E00               	movlw	0
  3850  0020CE  22DD               	addwfc	postdec2,f,c
  3851  0020D0  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3852  0020D6  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3853  0020DC  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3854  0020E2  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3855  0020E8  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3856  0020EE  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3857                           
  3858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3859  0020F4  EF9E  F010         	goto	l2256
  3860  0020F8                     l8702:
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3864  0020F8  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3865  0020FE  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3866  002104  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3867  00210A  0E04               	movlw	4
  3868  00210C  26DE               	addwf	postinc2,f,c
  3869  00210E  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3870  002114  0E00               	movlw	0
  3871  002116  22DD               	addwfc	postdec2,f,c
  3872  002118  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3873  00211E  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3874  002124  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3875  00212A  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3876  002130  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3877  002136  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3878  00213C                     l2256:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3882  00213C  0E02               	movlw	2
  3883  00213E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3884  002144  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3885  00214A  26DE               	addwf	postinc2,f,c
  3886  00214C  0E00               	movlw	0
  3887  00214E  22DD               	addwfc	postdec2,f,c
  3888  002150                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3891  002150  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3892  002154  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3893  002158  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3894  00215C  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3895  002160  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3896  002164  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3897  002168  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3898  00216C  EC3A  F008         	call	_efgtoa	;wreg free
  3899  002170  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3900  002174  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3901  002178  EF21  F011         	goto	l2248
  3902  00217C                     l8708:
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3905  00217C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3906  002182  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3907  002188  006F FF7B FFF6     	movff	postinc2,tblptrl
  3908  00218E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3909  002194                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3910  002194  6AF8               	clrf	tblptru,c
  3911  002196                     	endif
  3912  002196                     	if	0	;tblptru may be non-zero
  3913  002196                     	endif
  3914  002196  0008               	tblrd		*
  3915  002198  50F5               	movf	tablat,w,c
  3916  00219A  0A25               	xorlw	37
  3917  00219C  A4D8               	btfss	status,2,c
  3918  00219E  EFD3  F010         	goto	u9641
  3919  0021A2  EFD5  F010         	goto	u9640
  3920  0021A6                     u9641:
  3921  0021A6  EFEF  F010         	goto	l8718
  3922  0021AA                     u9640:
  3923  0021AA                     
  3924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3925  0021AA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3926  0021B0  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3927  0021B6  2ADE               	incf	postinc2,f,c
  3928  0021B8  0E00               	movlw	0
  3929  0021BA  22DD               	addwfc	postdec2,f,c
  3930  0021BC                     
  3931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3932  0021BC  0E00               	movlw	0
  3933  0021BE  6E17               	movwf	(fputc@c+1)^0,c
  3934  0021C0  0E25               	movlw	37
  3935  0021C2  6E16               	movwf	fputc@c^0,c
  3936  0021C4  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3937  0021C8  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3938  0021CC  EC8A  F028         	call	_fputc	;wreg free
  3939  0021D0                     l8714:
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3942  0021D0  0E00               	movlw	0
  3943  0021D2  0100               	movlb	0	; () banked
  3944  0021D4  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3945  0021D6  0E01               	movlw	1
  3946  0021D8  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3947  0021DA  EF21  F011         	goto	l2248
  3948  0021DE                     l8718:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3951  0021DE  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3952  0021E4  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3953  0021EA  2ADE               	incf	postinc2,f,c
  3954  0021EC  0E00               	movlw	0
  3955  0021EE  22DD               	addwfc	postdec2,f,c
  3956  0021F0                     
  3957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3958  0021F0  0E00               	movlw	0
  3959  0021F2  0100               	movlb	0	; () banked
  3960  0021F4  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3961  0021F6  0E00               	movlw	0
  3962  0021F8  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3963  0021FA  EF21  F011         	goto	l2248
  3964  0021FE                     l8724:
  3965                           
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3967  0021FE  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3968  002204  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3969  00220A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3970  002210  006F FF77 FFF7     	movff	postdec2,tblptrh
  3971  002216                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3972  002216  6AF8               	clrf	tblptru,c
  3973  002218                     	endif
  3974  002218                     	if	0	;tblptru may be non-zero
  3975  002218                     	endif
  3976  002218  0008               	tblrd		*
  3977  00221A  50F5               	movf	tablat,w,c
  3978  00221C  6E16               	movwf	fputc@c^0,c
  3979  00221E  6A17               	clrf	(fputc@c+1)^0,c
  3980  002220  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3981  002224  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3982  002228  EC8A  F028         	call	_fputc	;wreg free
  3983  00222C                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3985  00222C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3986  002232  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3987  002238  2ADE               	incf	postinc2,f,c
  3988  00223A  0E00               	movlw	0
  3989  00223C  22DD               	addwfc	postdec2,f,c
  3990  00223E  EFE8  F010         	goto	l8714
  3991  002242                     l2248:
  3992  002242  0012               	return		;funcret
  3993  002244                     __end_of_vfpfcnvrt:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _strncmp *****************
  3997 ;; Defined at:
  3998 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  4001 ;;		 -> vfpfcnvrt@ct(3), 
  4002 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  4003 ;;		 -> STR_18(3), 
  4004 ;;  n               2   23[COMRAM] unsigned int 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  r               2   28[COMRAM] PTR const unsigned char 
  4007 ;;		 -> STR_18(3), 
  4008 ;;  l               2   26[COMRAM] PTR const unsigned char 
  4009 ;;		 -> vfpfcnvrt@ct(3), 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  2   19[COMRAM] int 
  4012 ;; Registers used:
  4013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4019 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;Total ram usage:       11 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 8
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_vfpfcnvrt
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text9
  4034  004A30                     __ptext9:
  4035                           	callstack 0
  4036  004A30                     _strncmp:
  4037                           	callstack 17
  4038  004A30  C014  F01B         	movff	strncmp@_l,strncmp@l
  4039  004A34  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4040  004A38  C016  F01D         	movff	strncmp@_r,strncmp@r
  4041  004A3C  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4042  004A40  0618               	decf	strncmp@n^0,f,c
  4043  004A42  A0D8               	btfss	status,0,c
  4044  004A44  0619               	decf	(strncmp@n+1)^0,f,c
  4045  004A46  2818               	incf	strncmp@n^0,w,c
  4046  004A48  E106               	bnz	u9471
  4047  004A4A  2819               	incf	(strncmp@n+1)^0,w,c
  4048  004A4C  A4D8               	btfss	status,2,c
  4049  004A4E  EF2B  F025         	goto	u9471
  4050  004A52  EF2D  F025         	goto	u9470
  4051  004A56                     u9471:
  4052  004A56  EF3A  F025         	goto	l8636
  4053  004A5A                     u9470:
  4054  004A5A  0E00               	movlw	0
  4055  004A5C  6E15               	movwf	(?_strncmp+1)^0,c
  4056  004A5E  0E00               	movlw	0
  4057  004A60  6E14               	movwf	?_strncmp^0,c
  4058  004A62  EF91  F025         	goto	l2336
  4059  004A66                     l8634:
  4060  004A66  4A1B               	infsnz	strncmp@l^0,f,c
  4061  004A68  2A1C               	incf	(strncmp@l+1)^0,f,c
  4062  004A6A  4A1D               	infsnz	strncmp@r^0,f,c
  4063  004A6C  2A1E               	incf	(strncmp@r+1)^0,f,c
  4064  004A6E  0618               	decf	strncmp@n^0,f,c
  4065  004A70  A0D8               	btfss	status,0,c
  4066  004A72  0619               	decf	(strncmp@n+1)^0,f,c
  4067  004A74                     l8636:
  4068  004A74  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4069  004A7A  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4070  004A80  50DF               	movf	indf2,w,c
  4071  004A82  B4D8               	btfsc	status,2,c
  4072  004A84  EF46  F025         	goto	u9481
  4073  004A88  EF48  F025         	goto	u9480
  4074  004A8C                     u9481:
  4075  004A8C  EF7B  F025         	goto	l8644
  4076  004A90                     u9480:
  4077  004A90  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4078  004A96  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4079  004A9C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4080  004A9C  6AF8               	clrf	tblptru,c
  4081  004A9E                     	endif
  4082  004A9E                     	if	0	;tblptru may be non-zero
  4083  004A9E                     	endif
  4084  004A9E  0008               	tblrd		*
  4085  004AA0  50F5               	movf	tablat,w,c
  4086  004AA2  0900               	iorlw	0
  4087  004AA4  B4D8               	btfsc	status,2,c
  4088  004AA6  EF57  F025         	goto	u9491
  4089  004AAA  EF59  F025         	goto	u9490
  4090  004AAE                     u9491:
  4091  004AAE  EF7B  F025         	goto	l8644
  4092  004AB2                     u9490:
  4093  004AB2  5018               	movf	strncmp@n^0,w,c
  4094  004AB4  1019               	iorwf	(strncmp@n+1)^0,w,c
  4095  004AB6  B4D8               	btfsc	status,2,c
  4096  004AB8  EF60  F025         	goto	u9501
  4097  004ABC  EF62  F025         	goto	u9500
  4098  004AC0                     u9501:
  4099  004AC0  EF7B  F025         	goto	l8644
  4100  004AC4                     u9500:
  4101  004AC4  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4102  004ACA  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4103  004AD0  50DF               	movf	indf2,w,c
  4104  004AD2  6E1A               	movwf	??_strncmp^0,c
  4105  004AD4  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4106  004ADA  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4107  004AE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4108  004AE0  6AF8               	clrf	tblptru,c
  4109  004AE2                     	endif
  4110  004AE2                     	if	0	;tblptru may be non-zero
  4111  004AE2                     	endif
  4112  004AE2  0008               	tblrd		*
  4113  004AE4  50F5               	movf	tablat,w,c
  4114  004AE6  181A               	xorwf	??_strncmp^0,w,c
  4115  004AE8  B4D8               	btfsc	status,2,c
  4116  004AEA  EF79  F025         	goto	u9511
  4117  004AEE  EF7B  F025         	goto	u9510
  4118  004AF2                     u9511:
  4119  004AF2  EF33  F025         	goto	l8634
  4120  004AF6                     u9510:
  4121  004AF6                     l8644:
  4122  004AF6  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4123  004AFC  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4124  004B02  50DF               	movf	indf2,w,c
  4125  004B04  6E1A               	movwf	??_strncmp^0,c
  4126  004B06  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4127  004B0C  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4128  004B12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4129  004B12  6AF8               	clrf	tblptru,c
  4130  004B14                     	endif
  4131  004B14                     	if	0	;tblptru may be non-zero
  4132  004B14                     	endif
  4133  004B14  0008               	tblrd		*
  4134  004B16  50F5               	movf	tablat,w,c
  4135  004B18  5C1A               	subwf	??_strncmp^0,w,c
  4136  004B1A  6E14               	movwf	?_strncmp^0,c
  4137  004B1C  6A15               	clrf	(?_strncmp+1)^0,c
  4138  004B1E  A0D8               	btfss	status,0,c
  4139  004B20  0615               	decf	(?_strncmp+1)^0,f,c
  4140  004B22                     l2336:
  4141  004B22  0012               	return		;funcret
  4142  004B24                     __end_of_strncmp:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _efgtoa *****************
  4146 ;; Defined at:
  4147 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4150 ;;		 -> NULL(0), 
  4151 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4152 ;;  c               1   41[BANK0 ] unsigned char 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;  u               4   99[BANK0 ] unsigned char 
  4155 ;;  g               4   91[BANK0 ] unsigned char 
  4156 ;;  l               4   85[BANK0 ] unsigned char 
  4157 ;;  h               4   81[BANK0 ] unsigned char 
  4158 ;;  ou              4   67[BANK0 ] unsigned char 
  4159 ;;  n               2   97[BANK0 ] int 
  4160 ;;  e               2   95[BANK0 ] int 
  4161 ;;  i               2   89[BANK0 ] int 
  4162 ;;  w               2   77[BANK0 ] int 
  4163 ;;  p               2   75[BANK0 ] int 
  4164 ;;  sign            2   73[BANK0 ] int 
  4165 ;;  d               2   71[BANK0 ] int 
  4166 ;;  m               2   65[BANK0 ] int 
  4167 ;;  ne              2   63[BANK0 ] int 
  4168 ;;  pp              2   61[BANK0 ] int 
  4169 ;;  t               2   59[BANK0 ] int 
  4170 ;;  mode            1   80[BANK0 ] unsigned char 
  4171 ;;  nmode           1   79[BANK0 ] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  2   35[BANK0 ] int 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4181 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;Total ram usage:       68 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; Hardware stack levels required when called: 13
  4188 ;; This function calls:
  4189 ;;		___awdiv
  4190 ;;		___awmod
  4191 ;;		___fladd
  4192 ;;		___fldiv
  4193 ;;		___fleq
  4194 ;;		___flge
  4195 ;;		___flmul
  4196 ;;		___flneg
  4197 ;;		___flsub
  4198 ;;		___fltol
  4199 ;;		___fpclassifyf
  4200 ;;		_floorf
  4201 ;;		_isupper
  4202 ;;		_pad
  4203 ;;		_strcpy
  4204 ;;		_tolower
  4205 ;; This function is called by:
  4206 ;;		_vfpfcnvrt
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text10
  4211  001074                     __ptext10:
  4212                           	callstack 0
  4213  001074                     _efgtoa:
  4214                           	callstack 12
  4215  001074                     
  4216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4217  001074  0E00               	movlw	0
  4218  001076  0100               	movlb	0	; () banked
  4219  001078  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4220  00107A  0E00               	movlw	0
  4221  00107C  6FA9               	movwf	efgtoa@sign& (0+255),b
  4222  00107E                     
  4223                           ; BSR set to: 0
  4224                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4225  00107E  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4226  001082  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4227  001086  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4228  00108A  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4229  00108E                     
  4230                           ; BSR set to: 0
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4232  00108E  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4233  001090  EF4E  F008         	goto	u8930
  4234  001094  EF4C  F008         	goto	u8931
  4235  001098                     u8931:
  4236  001098  EF64  F008         	goto	l8330
  4237  00109C                     u8930:
  4238  00109C                     
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4241  00109C  0E00               	movlw	0
  4242  00109E  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4243  0010A0  0E01               	movlw	1
  4244  0010A2  6FA9               	movwf	efgtoa@sign& (0+255),b
  4245  0010A4                     
  4246                           ; BSR set to: 0
  4247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4248  0010A4  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4249  0010A8  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4250  0010AC  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4251  0010B0  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4252  0010B4  EC4F  F02C         	call	___flneg	;wreg free
  4253  0010B8  C014  F0BB         	movff	?___flneg,efgtoa@g
  4254  0010BC  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4255  0010C0  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4256  0010C4  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4257  0010C8                     l8330:
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4260  0010C8  0E00               	movlw	0
  4261  0010CA  0100               	movlb	0	; () banked
  4262  0010CC  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4263  0010CE  0E00               	movlw	0
  4264  0010D0  6FC1               	movwf	efgtoa@n& (0+255),b
  4265  0010D2                     
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4268  0010D2  C03A  F0AD         	movff	_width,efgtoa@w
  4269  0010D6  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4270  0010DA                     
  4271                           ; BSR set to: 0
  4272                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4273  0010DA  51A9               	movf	efgtoa@sign& (0+255),w,b
  4274  0010DC  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4275  0010DE  A4D8               	btfss	status,2,c
  4276  0010E0  EF74  F008         	goto	u8941
  4277  0010E4  EF76  F008         	goto	u8940
  4278  0010E8                     u8941:
  4279  0010E8  EF7D  F008         	goto	l8338
  4280  0010EC                     u8940:
  4281  0010EC                     
  4282                           ; BSR set to: 0
  4283  0010EC  A43E               	btfss	_flags^0,2,c
  4284  0010EE  EF7B  F008         	goto	u8951
  4285  0010F2  EF7D  F008         	goto	u8950
  4286  0010F6                     u8951:
  4287  0010F6  EF97  F008         	goto	l8350
  4288  0010FA                     u8950:
  4289  0010FA                     l8338:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4293  0010FA  51A9               	movf	efgtoa@sign& (0+255),w,b
  4294  0010FC  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4295  0010FE  A4D8               	btfss	status,2,c
  4296  001100  EF84  F008         	goto	u8961
  4297  001104  EF86  F008         	goto	u8960
  4298  001108                     u8961:
  4299  001108  EF8C  F008         	goto	l8342
  4300  00110C                     u8960:
  4301  00110C                     
  4302                           ; BSR set to: 0
  4303  00110C  0E00               	movlw	0
  4304  00110E  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4305  001110  0E2B               	movlw	43
  4306  001112  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4307  001114  EF90  F008         	goto	l8344
  4308  001118                     l8342:
  4309                           
  4310                           ; BSR set to: 0
  4311  001118  0E00               	movlw	0
  4312  00111A  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4313  00111C  0E2D               	movlw	45
  4314  00111E  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4315  001120                     l8344:
  4316                           
  4317                           ; BSR set to: 0
  4318  001120  C08F  F134         	movff	_efgtoa$3554,_dbuf
  4319  001124                     
  4320                           ; BSR set to: 0
  4321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4322  001124  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4323  001126  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4324  001128                     
  4325                           ; BSR set to: 0
  4326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4327  001128  07AD               	decf	efgtoa@w& (0+255),f,b
  4328  00112A  A0D8               	btfss	status,0,c
  4329  00112C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4330  00112E                     l8350:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4334  00112E  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4335  001132  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4336  001136  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4337  00113A  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4338  00113E  EC99  F024         	call	___fpclassifyf	;wreg free
  4339  001142  0414               	decf	?___fpclassifyf^0,w,c
  4340  001144  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4341  001146  A4D8               	btfss	status,2,c
  4342  001148  EFA8  F008         	goto	u8971
  4343  00114C  EFAA  F008         	goto	u8970
  4344  001150                     u8971:
  4345  001150  EF01  F009         	goto	l8368
  4346  001154                     u8970:
  4347  001154  0EBF               	movlw	191
  4348  001156  0100               	movlb	0	; () banked
  4349  001158  6F8A               	movwf	??_efgtoa& (0+255),b
  4350  00115A  0EFF               	movlw	255
  4351  00115C  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4352  00115E  5189               	movf	efgtoa@c& (0+255),w,b
  4353  001160  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4354  001162  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4355  001164  518A               	movf	??_efgtoa& (0+255),w,b
  4356  001166  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4357  001168  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4358  00116A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4359  00116C  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4360  00116E  E10A               	bnz	u8980
  4361  001170  0E1A               	movlw	26
  4362  001172  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4363  001174  A0D8               	btfss	status,0,c
  4364  001176  EFBF  F008         	goto	u8981
  4365  00117A  EFC2  F008         	goto	u8980
  4366  00117E                     u8981:
  4367  00117E  0E01               	movlw	1
  4368  001180  EFC3  F008         	goto	u8990
  4369  001184                     u8980:
  4370  001184  0E00               	movlw	0
  4371  001186                     u8990:
  4372  001186  6F91               	movwf	_efgtoa$3555& (0+255),b
  4373  001188  6B92               	clrf	(_efgtoa$3555+1)& (0+255),b
  4374  00118A                     
  4375                           ; BSR set to: 0
  4376  00118A  5191               	movf	_efgtoa$3555& (0+255),w,b
  4377  00118C  1192               	iorwf	(_efgtoa$3555+1)& (0+255),w,b
  4378  00118E  B4D8               	btfsc	status,2,c
  4379  001190  EFCC  F008         	goto	u9001
  4380  001194  EFCE  F008         	goto	u9000
  4381  001198                     u9001:
  4382  001198  EFDC  F008         	goto	l8360
  4383  00119C                     u9000:
  4384  00119C                     
  4385                           ; BSR set to: 0
  4386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4387  00119C  0E34               	movlw	low _dbuf
  4388  00119E  25C1               	addwf	efgtoa@n& (0+255),w,b
  4389  0011A0  6E14               	movwf	strcpy@dest^0,c
  4390  0011A2  0E01               	movlw	high _dbuf
  4391  0011A4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4392  0011A6  6E15               	movwf	(strcpy@dest+1)^0,c
  4393  0011A8  0E5F               	movlw	low STR_8
  4394  0011AA  6E16               	movwf	strcpy@src^0,c
  4395  0011AC  0E10               	movlw	high STR_8
  4396  0011AE  6E17               	movwf	(strcpy@src+1)^0,c
  4397  0011B0  ECA0  F029         	call	_strcpy	;wreg free
  4398                           
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4400  0011B4  EFE8  F008         	goto	l8362
  4401  0011B8                     l8360:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4405  0011B8  0E34               	movlw	low _dbuf
  4406  0011BA  25C1               	addwf	efgtoa@n& (0+255),w,b
  4407  0011BC  6E14               	movwf	strcpy@dest^0,c
  4408  0011BE  0E01               	movlw	high _dbuf
  4409  0011C0  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4410  0011C2  6E15               	movwf	(strcpy@dest+1)^0,c
  4411  0011C4  0E67               	movlw	low STR_9
  4412  0011C6  6E16               	movwf	strcpy@src^0,c
  4413  0011C8  0E10               	movlw	high STR_9
  4414  0011CA  6E17               	movwf	(strcpy@src+1)^0,c
  4415  0011CC  ECA0  F029         	call	_strcpy	;wreg free
  4416  0011D0                     l8362:
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4419  0011D0  0100               	movlb	0	; () banked
  4420  0011D2  0EFD               	movlw	253
  4421  0011D4  27AD               	addwf	efgtoa@w& (0+255),f,b
  4422  0011D6  0EFF               	movlw	255
  4423  0011D8  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4424  0011DA                     
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4427  0011DA  C083  F026         	movff	efgtoa@fp,pad@fp
  4428  0011DE  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4429  0011E2  0E34               	movlw	low _dbuf
  4430  0011E4  6E28               	movwf	pad@buf^0,c
  4431  0011E6  0E01               	movlw	high _dbuf
  4432  0011E8  6E29               	movwf	(pad@buf+1)^0,c
  4433  0011EA  C0AD  F02A         	movff	efgtoa@w,pad@p
  4434  0011EE  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4435  0011F2  ECCA  F026         	call	_pad	;wreg free
  4436  0011F6  C026  F083         	movff	?_pad,?_efgtoa
  4437  0011FA  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4438  0011FE  EF90  F00E         	goto	l2164
  4439  001202                     l8368:
  4440                           
  4441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4442  001202  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4443  001206  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4444  00120A  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4445  00120E  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4446  001212  EC99  F024         	call	___fpclassifyf	;wreg free
  4447  001216  5014               	movf	?___fpclassifyf^0,w,c
  4448  001218  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4449  00121A  A4D8               	btfss	status,2,c
  4450  00121C  EF12  F009         	goto	u9011
  4451  001220  EF14  F009         	goto	u9010
  4452  001224                     u9011:
  4453  001224  EF6B  F009         	goto	l8386
  4454  001228                     u9010:
  4455  001228  0EBF               	movlw	191
  4456  00122A  0100               	movlb	0	; () banked
  4457  00122C  6F8A               	movwf	??_efgtoa& (0+255),b
  4458  00122E  0EFF               	movlw	255
  4459  001230  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4460  001232  5189               	movf	efgtoa@c& (0+255),w,b
  4461  001234  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4462  001236  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4463  001238  518A               	movf	??_efgtoa& (0+255),w,b
  4464  00123A  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4465  00123C  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4466  00123E  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4467  001240  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4468  001242  E10A               	bnz	u9020
  4469  001244  0E1A               	movlw	26
  4470  001246  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4471  001248  A0D8               	btfss	status,0,c
  4472  00124A  EF29  F009         	goto	u9021
  4473  00124E  EF2C  F009         	goto	u9020
  4474  001252                     u9021:
  4475  001252  0E01               	movlw	1
  4476  001254  EF2D  F009         	goto	u9030
  4477  001258                     u9020:
  4478  001258  0E00               	movlw	0
  4479  00125A                     u9030:
  4480  00125A  6F93               	movwf	_efgtoa$3559& (0+255),b
  4481  00125C  6B94               	clrf	(_efgtoa$3559+1)& (0+255),b
  4482  00125E                     
  4483                           ; BSR set to: 0
  4484  00125E  5193               	movf	_efgtoa$3559& (0+255),w,b
  4485  001260  1194               	iorwf	(_efgtoa$3559+1)& (0+255),w,b
  4486  001262  B4D8               	btfsc	status,2,c
  4487  001264  EF36  F009         	goto	u9041
  4488  001268  EF38  F009         	goto	u9040
  4489  00126C                     u9041:
  4490  00126C  EF46  F009         	goto	l8378
  4491  001270                     u9040:
  4492  001270                     
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4495  001270  0E34               	movlw	low _dbuf
  4496  001272  25C1               	addwf	efgtoa@n& (0+255),w,b
  4497  001274  6E14               	movwf	strcpy@dest^0,c
  4498  001276  0E01               	movlw	high _dbuf
  4499  001278  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4500  00127A  6E15               	movwf	(strcpy@dest+1)^0,c
  4501  00127C  0E63               	movlw	low STR_12
  4502  00127E  6E16               	movwf	strcpy@src^0,c
  4503  001280  0E10               	movlw	high STR_12
  4504  001282  6E17               	movwf	(strcpy@src+1)^0,c
  4505  001284  ECA0  F029         	call	_strcpy	;wreg free
  4506                           
  4507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4508  001288  EF52  F009         	goto	l8380
  4509  00128C                     l8378:
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4513  00128C  0E34               	movlw	low _dbuf
  4514  00128E  25C1               	addwf	efgtoa@n& (0+255),w,b
  4515  001290  6E14               	movwf	strcpy@dest^0,c
  4516  001292  0E01               	movlw	high _dbuf
  4517  001294  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4518  001296  6E15               	movwf	(strcpy@dest+1)^0,c
  4519  001298  0E6B               	movlw	low STR_13
  4520  00129A  6E16               	movwf	strcpy@src^0,c
  4521  00129C  0E10               	movlw	high STR_13
  4522  00129E  6E17               	movwf	(strcpy@src+1)^0,c
  4523  0012A0  ECA0  F029         	call	_strcpy	;wreg free
  4524  0012A4                     l8380:
  4525                           
  4526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4527  0012A4  0100               	movlb	0	; () banked
  4528  0012A6  0EFD               	movlw	253
  4529  0012A8  27AD               	addwf	efgtoa@w& (0+255),f,b
  4530  0012AA  0EFF               	movlw	255
  4531  0012AC  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4532  0012AE                     
  4533                           ; BSR set to: 0
  4534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4535  0012AE  C083  F026         	movff	efgtoa@fp,pad@fp
  4536  0012B2  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4537  0012B6  0E34               	movlw	low _dbuf
  4538  0012B8  6E28               	movwf	pad@buf^0,c
  4539  0012BA  0E01               	movlw	high _dbuf
  4540  0012BC  6E29               	movwf	(pad@buf+1)^0,c
  4541  0012BE  C0AD  F02A         	movff	efgtoa@w,pad@p
  4542  0012C2  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4543  0012C6  ECCA  F026         	call	_pad	;wreg free
  4544  0012CA  C026  F083         	movff	?_pad,?_efgtoa
  4545  0012CE  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4546  0012D2  EF90  F00E         	goto	l2164
  4547  0012D6                     l8386:
  4548                           
  4549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4550  0012D6  0E00               	movlw	0
  4551  0012D8  0100               	movlb	0	; () banked
  4552  0012DA  6FC3               	movwf	efgtoa@u& (0+255),b
  4553  0012DC  0E00               	movlw	0
  4554  0012DE  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4555  0012E0  0E80               	movlw	128
  4556  0012E2  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4557  0012E4  0E3F               	movlw	63
  4558  0012E6  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4559                           
  4560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4561  0012E8  0E00               	movlw	0
  4562  0012EA  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4563  0012EC  0E00               	movlw	0
  4564  0012EE  6FBF               	movwf	efgtoa@e& (0+255),b
  4565  0012F0                     
  4566                           ; BSR set to: 0
  4567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4568  0012F0  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4569  0012F4  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4570  0012F8  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4571  0012FC  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4572  001300  0E00               	movlw	0
  4573  001302  6E18               	movwf	___fleq@ff2^0,c
  4574  001304  0E00               	movlw	0
  4575  001306  6E19               	movwf	(___fleq@ff2+1)^0,c
  4576  001308  0E00               	movlw	0
  4577  00130A  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4578  00130C  0E00               	movlw	0
  4579  00130E  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4580  001310  ECE3  F027         	call	___fleq	;wreg free
  4581  001314  B0D8               	btfsc	status,0,c
  4582  001316  EF8F  F009         	goto	u9051
  4583  00131A  EF91  F009         	goto	u9050
  4584  00131E                     u9051:
  4585  00131E  EF16  F00A         	goto	l8404
  4586  001322                     u9050:
  4587  001322  EFB0  F009         	goto	l8396
  4588  001326                     l8392:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4592  001326  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4593  00132A  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4594  00132E  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4595  001332  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4596  001336  0E00               	movlw	0
  4597  001338  6E2E               	movwf	___flmul@a^0,c
  4598  00133A  0E00               	movlw	0
  4599  00133C  6E2F               	movwf	(___flmul@a+1)^0,c
  4600  00133E  0E20               	movlw	32
  4601  001340  6E30               	movwf	(___flmul@a+2)^0,c
  4602  001342  0E41               	movlw	65
  4603  001344  6E31               	movwf	(___flmul@a+3)^0,c
  4604  001346  EC83  F013         	call	___flmul	;wreg free
  4605  00134A  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4606  00134E  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4607  001352  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4608  001356  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4609  00135A                     
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4611  00135A  0100               	movlb	0	; () banked
  4612  00135C  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4613  00135E  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4614  001360                     l8396:
  4615                           
  4616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4617  001360  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4618  001364  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4619  001368  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4620  00136C  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4621  001370  0E00               	movlw	0
  4622  001372  6E2E               	movwf	___flmul@a^0,c
  4623  001374  0E00               	movlw	0
  4624  001376  6E2F               	movwf	(___flmul@a+1)^0,c
  4625  001378  0E20               	movlw	32
  4626  00137A  6E30               	movwf	(___flmul@a+2)^0,c
  4627  00137C  0E41               	movlw	65
  4628  00137E  6E31               	movwf	(___flmul@a+3)^0,c
  4629  001380  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4630  001384  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4631  001388  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4632  00138C  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4633  001390  EC83  F013         	call	___flmul	;wreg free
  4634  001394  C02A  F071         	movff	?___flmul,___flge@ff2
  4635  001398  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4636  00139C  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4637  0013A0  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4638  0013A4  EC16  F024         	call	___flge	;wreg free
  4639  0013A8  0100               	movlb	0	; () banked
  4640  0013AA  B0D8               	btfsc	status,0,c
  4641  0013AC  EFDA  F009         	goto	u9061
  4642  0013B0  EFDC  F009         	goto	u9060
  4643  0013B4                     u9061:
  4644  0013B4  EF93  F009         	goto	l8392
  4645  0013B8                     u9060:
  4646  0013B8  EFFC  F009         	goto	l8402
  4647  0013BC                     l8398:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4651  0013BC  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4652  0013C0  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4653  0013C4  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4654  0013C8  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4655  0013CC  0E00               	movlw	0
  4656  0013CE  6E18               	movwf	___fldiv@a^0,c
  4657  0013D0  0E00               	movlw	0
  4658  0013D2  6E19               	movwf	(___fldiv@a+1)^0,c
  4659  0013D4  0E20               	movlw	32
  4660  0013D6  6E1A               	movwf	(___fldiv@a+2)^0,c
  4661  0013D8  0E41               	movlw	65
  4662  0013DA  6E1B               	movwf	(___fldiv@a+3)^0,c
  4663  0013DC  ECAB  F015         	call	___fldiv	;wreg free
  4664  0013E0  C014  F0C3         	movff	?___fldiv,efgtoa@u
  4665  0013E4  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4666  0013E8  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4667  0013EC  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4668  0013F0                     
  4669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4670  0013F0  0100               	movlb	0	; () banked
  4671  0013F2  07BF               	decf	efgtoa@e& (0+255),f,b
  4672  0013F4  A0D8               	btfss	status,0,c
  4673  0013F6  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4674  0013F8                     l8402:
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4678  0013F8  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4679  0013FC  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4680  001400  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4681  001404  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4682  001408  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4683  00140C  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4684  001410  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4685  001414  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4686  001418  EC16  F024         	call	___flge	;wreg free
  4687  00141C  0100               	movlb	0	; () banked
  4688  00141E  A0D8               	btfss	status,0,c
  4689  001420  EF14  F00A         	goto	u9071
  4690  001424  EF16  F00A         	goto	u9070
  4691  001428                     u9071:
  4692  001428  EFDE  F009         	goto	l8398
  4693  00142C                     u9070:
  4694  00142C                     l8404:
  4695                           
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4697  00142C  C089  F01A         	movff	efgtoa@c,tolower@c
  4698  001430  6A1B               	clrf	(tolower@c+1)^0,c
  4699  001432  EC08  F02A         	call	_tolower	;wreg free
  4700  001436  501A               	movf	?_tolower^0,w,c
  4701  001438  0100               	movlb	0	; () banked
  4702  00143A  6FB0               	movwf	efgtoa@mode& (0+255),b
  4703  00143C                     
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4706  00143C  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4707  001440                     
  4708                           ; BSR set to: 0
  4709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4710  001440  0E67               	movlw	103
  4711  001442  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4712  001444  A4D8               	btfss	status,2,c
  4713  001446  EF27  F00A         	goto	u9081
  4714  00144A  EF29  F00A         	goto	u9080
  4715  00144E                     u9081:
  4716  00144E  EF4F  F00A         	goto	l8418
  4717  001452                     u9080:
  4718  001452                     
  4719                           ; BSR set to: 0
  4720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4721  001452  503C               	movf	_prec^0,w,c
  4722  001454  103D               	iorwf	(_prec+1)^0,w,c
  4723  001456  A4D8               	btfss	status,2,c
  4724  001458  EF30  F00A         	goto	u9091
  4725  00145C  EF32  F00A         	goto	u9090
  4726  001460                     u9091:
  4727  001460  EF36  F00A         	goto	l8414
  4728  001464                     u9090:
  4729  001464                     
  4730                           ; BSR set to: 0
  4731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4732  001464  0E00               	movlw	0
  4733  001466  6E3D               	movwf	(_prec+1)^0,c
  4734  001468  0E01               	movlw	1
  4735  00146A  6E3C               	movwf	_prec^0,c
  4736  00146C                     l8414:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4740  00146C  BE3D               	btfsc	(_prec+1)^0,7,c
  4741  00146E  EF43  F00A         	goto	u9100
  4742  001472  503D               	movf	(_prec+1)^0,w,c
  4743  001474  E106               	bnz	u9101
  4744  001476  043C               	decf	_prec^0,w,c
  4745  001478  B0D8               	btfsc	status,0,c
  4746  00147A  EF41  F00A         	goto	u9101
  4747  00147E  EF43  F00A         	goto	u9100
  4748  001482                     u9101:
  4749  001482  EF49  F00A         	goto	l2182
  4750  001486                     u9100:
  4751  001486                     l8416:
  4752                           
  4753                           ; BSR set to: 0
  4754  001486  0E00               	movlw	0
  4755  001488  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4756  00148A  0E06               	movlw	6
  4757  00148C  6FAB               	movwf	efgtoa@p& (0+255),b
  4758  00148E  EF58  F00A         	goto	l8424
  4759  001492                     l2182:
  4760                           
  4761                           ; BSR set to: 0
  4762  001492  C03C  F0AB         	movff	_prec,efgtoa@p
  4763  001496  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  4764  00149A  EF58  F00A         	goto	l8424
  4765  00149E                     l8418:
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4769  00149E  BE3D               	btfsc	(_prec+1)^0,7,c
  4770  0014A0  EF54  F00A         	goto	u9111
  4771  0014A4  EF56  F00A         	goto	u9110
  4772  0014A8                     u9111:
  4773  0014A8  EF43  F00A         	goto	l8416
  4774  0014AC                     u9110:
  4775  0014AC  EF49  F00A         	goto	l2182
  4776  0014B0                     l8424:
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4780  0014B0  0E67               	movlw	103
  4781  0014B2  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4782  0014B4  A4D8               	btfss	status,2,c
  4783  0014B6  EF5F  F00A         	goto	u9121
  4784  0014BA  EF61  F00A         	goto	u9120
  4785  0014BE                     u9121:
  4786  0014BE  EF90  F00A         	goto	l8434
  4787  0014C2                     u9120:
  4788  0014C2                     
  4789                           ; BSR set to: 0
  4790                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4791  0014C2  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4792  0014C4  EF6F  F00A         	goto	u9130
  4793  0014C8  0EFC               	movlw	252
  4794  0014CA  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4795  0014CC  0EFF               	movlw	255
  4796  0014CE  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4797  0014D0  A0D8               	btfss	status,0,c
  4798  0014D2  EF6D  F00A         	goto	u9131
  4799  0014D6  EF6F  F00A         	goto	u9130
  4800  0014DA                     u9131:
  4801  0014DA  EF8E  F00A         	goto	l8432
  4802  0014DE                     u9130:
  4803  0014DE                     
  4804                           ; BSR set to: 0
  4805  0014DE  0EFF               	movlw	255
  4806  0014E0  6F8A               	movwf	??_efgtoa& (0+255),b
  4807  0014E2  0EFF               	movlw	255
  4808  0014E4  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4809  0014E6  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4810  0014EA  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4811  0014EE  518A               	movf	??_efgtoa& (0+255),w,b
  4812  0014F0  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4813  0014F2  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4814  0014F4  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4815  0014F6  51BF               	movf	efgtoa@e& (0+255),w,b
  4816  0014F8  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4817  0014FA  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4818  0014FC  0A80               	xorlw	128
  4819  0014FE  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4820  001500  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4821  001502  0A80               	xorlw	128
  4822  001504  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4823  001506  A0D8               	btfss	status,0,c
  4824  001508  EF88  F00A         	goto	u9141
  4825  00150C  EF8A  F00A         	goto	u9140
  4826  001510                     u9141:
  4827  001510  EF8E  F00A         	goto	l8432
  4828  001514                     u9140:
  4829  001514                     
  4830                           ; BSR set to: 0
  4831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4832  001514  0E66               	movlw	102
  4833  001516  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4834                           
  4835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4836  001518  EF90  F00A         	goto	l8434
  4837  00151C                     l8432:
  4838                           
  4839                           ; BSR set to: 0
  4840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4841  00151C  0E65               	movlw	101
  4842  00151E  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4843  001520                     l8434:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4847  001520  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4848  001524  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4849  001528                     
  4850                           ; BSR set to: 0
  4851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4852  001528  0E67               	movlw	103
  4853  00152A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4854  00152C  A4D8               	btfss	status,2,c
  4855  00152E  EF9B  F00A         	goto	u9151
  4856  001532  EF9D  F00A         	goto	u9150
  4857  001536                     u9151:
  4858  001536  EFAD  F00A         	goto	l8442
  4859  00153A                     u9150:
  4860  00153A                     
  4861                           ; BSR set to: 0
  4862  00153A  0E66               	movlw	102
  4863  00153C  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4864  00153E  A4D8               	btfss	status,2,c
  4865  001540  EFA4  F00A         	goto	u9161
  4866  001544  EFA6  F00A         	goto	u9160
  4867  001548                     u9161:
  4868  001548  EFAF  F00A         	goto	l8444
  4869  00154C                     u9160:
  4870  00154C                     
  4871                           ; BSR set to: 0
  4872  00154C  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4873  00154E  EFAD  F00A         	goto	u9170
  4874  001552  EFAB  F00A         	goto	u9171
  4875  001556                     u9171:
  4876  001556  EFAF  F00A         	goto	l8444
  4877  00155A                     u9170:
  4878  00155A                     l8442:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4882  00155A  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4883  00155C  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4884  00155E                     l8444:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4888  00155E  0E66               	movlw	102
  4889  001560  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4890  001562  A4D8               	btfss	status,2,c
  4891  001564  EFB6  F00A         	goto	u9181
  4892  001568  EFB8  F00A         	goto	u9180
  4893  00156C                     u9181:
  4894  00156C  EFD8  F00A         	goto	l8454
  4895  001570                     u9180:
  4896  001570                     
  4897                           ; BSR set to: 0
  4898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4899  001570  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4900  001572  EFBF  F00A         	goto	u9190
  4901  001576  EFBD  F00A         	goto	u9191
  4902  00157A                     u9191:
  4903  00157A  EFCB  F00A         	goto	l8450
  4904  00157E                     u9190:
  4905  00157E                     
  4906                           ; BSR set to: 0
  4907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4908  00157E  0E00               	movlw	0
  4909  001580  6FC3               	movwf	efgtoa@u& (0+255),b
  4910  001582  0E00               	movlw	0
  4911  001584  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4912  001586  0E80               	movlw	128
  4913  001588  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4914  00158A  0E3F               	movlw	63
  4915  00158C  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4916                           
  4917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4918  00158E  0E00               	movlw	0
  4919  001590  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4920  001592  0E00               	movlw	0
  4921  001594  6FBF               	movwf	efgtoa@e& (0+255),b
  4922  001596                     l8450:
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4926  001596  0E67               	movlw	103
  4927  001598  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4928  00159A  B4D8               	btfsc	status,2,c
  4929  00159C  EFD2  F00A         	goto	u9201
  4930  0015A0  EFD4  F00A         	goto	u9200
  4931  0015A4                     u9201:
  4932  0015A4  EFD8  F00A         	goto	l8454
  4933  0015A8                     u9200:
  4934  0015A8                     
  4935                           ; BSR set to: 0
  4936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4937  0015A8  51BF               	movf	efgtoa@e& (0+255),w,b
  4938  0015AA  27A1               	addwf	efgtoa@m& (0+255),f,b
  4939  0015AC  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4940  0015AE  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4941  0015B0                     l8454:
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4945  0015B0  0E00               	movlw	0
  4946  0015B2  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4947  0015B4  0E00               	movlw	0
  4948  0015B6  6FB9               	movwf	efgtoa@i& (0+255),b
  4949  0015B8                     
  4950                           ; BSR set to: 0
  4951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4952  0015B8  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4953  0015BC  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4954  0015C0  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4955  0015C4  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4956  0015C8                     
  4957                           ; BSR set to: 0
  4958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4959  0015C8  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4960  0015CC  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4961  0015D0  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4962  0015D4  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4963                           
  4964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4965  0015D8  EF69  F00B         	goto	l8468
  4966  0015DC                     l8460:
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4970  0015DC  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  4971  0015E0  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  4972  0015E4  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  4973  0015E8  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  4974  0015EC  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  4975  0015F0  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  4976  0015F4  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  4977  0015F8  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  4978  0015FC  ECAB  F015         	call	___fldiv	;wreg free
  4979  001600  C014  F02D         	movff	?___fldiv,floorf@x
  4980  001604  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  4981  001608  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  4982  00160C  C017  F030         	movff	?___fldiv+3,floorf@x+3
  4983  001610  EC57  F01B         	call	_floorf	;wreg free
  4984  001614  C02D  F0B5         	movff	?_floorf,efgtoa@l
  4985  001618  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4986  00161C  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4987  001620  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4988                           
  4989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4990  001624  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4991  001628  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4992  00162C  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4993  001630  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4994  001634  EC0F  F023         	call	___fltol	;wreg free
  4995  001638  C079  F0A7         	movff	?___fltol,efgtoa@d
  4996  00163C  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4997  001640                     
  4998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4999  001640  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5000  001644  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5001  001648  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5002  00164C  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5003  001650  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5004  001654  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5005  001658  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5006  00165C  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5007  001660  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5008  001664  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5009  001668  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5010  00166C  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5011  001670  EC83  F013         	call	___flmul	;wreg free
  5012  001674  C02A  F07D         	movff	?___flmul,___flsub@a
  5013  001678  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5014  00167C  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5015  001680  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5016  001684  EC53  F02B         	call	___flsub	;wreg free
  5017  001688  C079  F0B1         	movff	?___flsub,efgtoa@h
  5018  00168C  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5019  001690  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5020  001694  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5021  001698                     
  5022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  5023  001698  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5024  00169C  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5025  0016A0  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5026  0016A4  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5027  0016A8  0E00               	movlw	0
  5028  0016AA  6E18               	movwf	___fldiv@a^0,c
  5029  0016AC  0E00               	movlw	0
  5030  0016AE  6E19               	movwf	(___fldiv@a+1)^0,c
  5031  0016B0  0E20               	movlw	32
  5032  0016B2  6E1A               	movwf	(___fldiv@a+2)^0,c
  5033  0016B4  0E41               	movlw	65
  5034  0016B6  6E1B               	movwf	(___fldiv@a+3)^0,c
  5035  0016B8  ECAB  F015         	call	___fldiv	;wreg free
  5036  0016BC  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5037  0016C0  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5038  0016C4  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5039  0016C8  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5040  0016CC                     
  5041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5042  0016CC  0100               	movlb	0	; () banked
  5043  0016CE  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5044  0016D0  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5045  0016D2                     l8468:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5049  0016D2  51A1               	movf	efgtoa@m& (0+255),w,b
  5050  0016D4  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5051  0016D6  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5052  0016D8  0A80               	xorlw	128
  5053  0016DA  6F8A               	movwf	??_efgtoa& (0+255),b
  5054  0016DC  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5055  0016DE  0A80               	xorlw	128
  5056  0016E0  598A               	subwfb	??_efgtoa& (0+255),w,b
  5057  0016E2  A0D8               	btfss	status,0,c
  5058  0016E4  EF76  F00B         	goto	u9211
  5059  0016E8  EF78  F00B         	goto	u9210
  5060  0016EC                     u9211:
  5061  0016EC  EFEE  F00A         	goto	l8460
  5062  0016F0                     u9210:
  5063  0016F0                     
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5066  0016F0  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5067  0016F4  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5068  0016F8  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5069  0016FC  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5070  001700  0E00               	movlw	0
  5071  001702  6E2E               	movwf	___flmul@a^0,c
  5072  001704  0E00               	movlw	0
  5073  001706  6E2F               	movwf	(___flmul@a+1)^0,c
  5074  001708  0EA0               	movlw	160
  5075  00170A  6E30               	movwf	(___flmul@a+2)^0,c
  5076  00170C  0E40               	movlw	64
  5077  00170E  6E31               	movwf	(___flmul@a+3)^0,c
  5078  001710  EC83  F013         	call	___flmul	;wreg free
  5079  001714  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5080  001718  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5081  00171C  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5082  001720  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5083  001724                     
  5084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5085  001724  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5086  001728  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5087  00172C  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5088  001730  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5089  001734  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5090  001738  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5091  00173C  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5092  001740  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5093  001744  EC16  F024         	call	___flge	;wreg free
  5094  001748  0100               	movlb	0	; () banked
  5095  00174A  B0D8               	btfsc	status,0,c
  5096  00174C  EFAA  F00B         	goto	u9221
  5097  001750  EFAC  F00B         	goto	u9220
  5098  001754                     u9221:
  5099  001754  EFB6  F00B         	goto	l8476
  5100  001758                     u9220:
  5101  001758                     
  5102                           ; BSR set to: 0
  5103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5104  001758  0E00               	movlw	0
  5105  00175A  6FB5               	movwf	efgtoa@l& (0+255),b
  5106  00175C  0E00               	movlw	0
  5107  00175E  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5108  001760  0E00               	movlw	0
  5109  001762  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5110  001764  0E00               	movlw	0
  5111  001766  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5114  001768  EFDF  F00B         	goto	l8482
  5115  00176C                     l8476:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5119  00176C  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5120  001770  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5121  001774  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5122  001778  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5123  00177C  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5124  001780  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5125  001784  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5126  001788  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5127  00178C  ECE3  F027         	call	___fleq	;wreg free
  5128  001790  A0D8               	btfss	status,0,c
  5129  001792  EFCD  F00B         	goto	u9231
  5130  001796  EFCF  F00B         	goto	u9230
  5131  00179A                     u9231:
  5132  00179A  EFDF  F00B         	goto	l8482
  5133  00179E                     u9230:
  5134  00179E  0100               	movlb	0	; () banked
  5135  0017A0  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5136  0017A2  EFD5  F00B         	goto	u9241
  5137  0017A6  EFD7  F00B         	goto	u9240
  5138  0017AA                     u9241:
  5139  0017AA  EFDF  F00B         	goto	l8482
  5140  0017AE                     u9240:
  5141  0017AE                     
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5144  0017AE  0E00               	movlw	0
  5145  0017B0  6FB5               	movwf	efgtoa@l& (0+255),b
  5146  0017B2  0E00               	movlw	0
  5147  0017B4  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5148  0017B6  0E00               	movlw	0
  5149  0017B8  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5150  0017BA  0E00               	movlw	0
  5151  0017BC  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5152  0017BE                     l8482:
  5153                           
  5154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5155  0017BE  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5156  0017C2  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5157  0017C6  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5158  0017CA  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5159  0017CE  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5160  0017D2  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5161  0017D6  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5162  0017DA  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5163  0017DE  EC22  F011         	call	___fladd	;wreg free
  5164  0017E2  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5165  0017E6  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5166  0017EA  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5167  0017EE  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5168  0017F2                     
  5169                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5170  0017F2  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5171  0017F6  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5172  0017FA  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5173  0017FE  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5174  001802  0E00               	movlw	0
  5175  001804  6E2E               	movwf	___flmul@a^0,c
  5176  001806  0E00               	movlw	0
  5177  001808  6E2F               	movwf	(___flmul@a+1)^0,c
  5178  00180A  0E20               	movlw	32
  5179  00180C  6E30               	movwf	(___flmul@a+2)^0,c
  5180  00180E  0E41               	movlw	65
  5181  001810  6E31               	movwf	(___flmul@a+3)^0,c
  5182  001812  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5183  001816  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5184  00181A  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5185  00181E  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5186  001822  EC83  F013         	call	___flmul	;wreg free
  5187  001826  C02A  F071         	movff	?___flmul,___flge@ff2
  5188  00182A  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5189  00182E  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5190  001832  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5191  001836  EC16  F024         	call	___flge	;wreg free
  5192  00183A  0100               	movlb	0	; () banked
  5193  00183C  A0D8               	btfss	status,0,c
  5194  00183E  EF23  F00C         	goto	u9251
  5195  001842  EF25  F00C         	goto	u9250
  5196  001846                     u9251:
  5197  001846  EF4D  F00C         	goto	l8494
  5198  00184A                     u9250:
  5199  00184A                     
  5200                           ; BSR set to: 0
  5201                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5202  00184A  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5203  00184C  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5204  00184E                     
  5205                           ; BSR set to: 0
  5206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5207  00184E  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5208  001852  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5209  001856  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5210  00185A  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5211  00185E  0E00               	movlw	0
  5212  001860  6E2E               	movwf	___flmul@a^0,c
  5213  001862  0E00               	movlw	0
  5214  001864  6E2F               	movwf	(___flmul@a+1)^0,c
  5215  001866  0E20               	movlw	32
  5216  001868  6E30               	movwf	(___flmul@a+2)^0,c
  5217  00186A  0E41               	movlw	65
  5218  00186C  6E31               	movwf	(___flmul@a+3)^0,c
  5219  00186E  EC83  F013         	call	___flmul	;wreg free
  5220  001872  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5221  001876  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5222  00187A  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5223  00187E  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5224  001882                     
  5225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5226  001882  0E66               	movlw	102
  5227  001884  0100               	movlb	0	; () banked
  5228  001886  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5229  001888  A4D8               	btfss	status,2,c
  5230  00188A  EF49  F00C         	goto	u9261
  5231  00188E  EF4B  F00C         	goto	u9260
  5232  001892                     u9261:
  5233  001892  EF4D  F00C         	goto	l8494
  5234  001896                     u9260:
  5235  001896                     
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5238  001896  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5239  001898  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5240  00189A                     l8494:
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5244  00189A  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5245  00189E  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5246  0018A2  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5247  0018A6  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5248  0018AA                     
  5249                           ; BSR set to: 0
  5250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5251  0018AA  0E65               	movlw	101
  5252  0018AC  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5253  0018AE  B4D8               	btfsc	status,2,c
  5254  0018B0  EF5C  F00C         	goto	u9271
  5255  0018B4  EF5E  F00C         	goto	u9270
  5256  0018B8                     u9271:
  5257  0018B8  EF64  F00C         	goto	l8500
  5258  0018BC                     u9270:
  5259  0018BC                     
  5260                           ; BSR set to: 0
  5261  0018BC  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5262  0018C0  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5263  0018C4  EF68  F00C         	goto	l2210
  5264  0018C8                     l8500:
  5265                           
  5266                           ; BSR set to: 0
  5267  0018C8  0E00               	movlw	0
  5268  0018CA  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5269  0018CC  0E00               	movlw	0
  5270  0018CE  6F9F               	movwf	efgtoa@ne& (0+255),b
  5271  0018D0                     l2210:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5275  0018D0  0E00               	movlw	0
  5276  0018D2  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5277  0018D4  0E00               	movlw	0
  5278  0018D6  6F9D               	movwf	efgtoa@pp& (0+255),b
  5279                           
  5280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5281  0018D8  0E00               	movlw	0
  5282  0018DA  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5283  0018DC  0E00               	movlw	0
  5284  0018DE  6F9B               	movwf	efgtoa@t& (0+255),b
  5285                           
  5286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5287  0018E0  0E00               	movlw	0
  5288  0018E2  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5289  0018E4  0E00               	movlw	0
  5290  0018E6  6FB9               	movwf	efgtoa@i& (0+255),b
  5291                           
  5292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5293  0018E8  EF64  F00D         	goto	l8550
  5294  0018EC                     l8502:
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5298  0018EC  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  5299  0018F0  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  5300  0018F4  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  5301  0018F8  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  5302  0018FC  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  5303  001900  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  5304  001904  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  5305  001908  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  5306  00190C  ECAB  F015         	call	___fldiv	;wreg free
  5307  001910  C014  F02D         	movff	?___fldiv,floorf@x
  5308  001914  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  5309  001918  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  5310  00191C  C017  F030         	movff	?___fldiv+3,floorf@x+3
  5311  001920  EC57  F01B         	call	_floorf	;wreg free
  5312  001924  C02D  F0B5         	movff	?_floorf,efgtoa@l
  5313  001928  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5314  00192C  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5315  001930  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5318  001934  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5319  001938  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5320  00193C  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5321  001940  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5322  001944  EC0F  F023         	call	___fltol	;wreg free
  5323  001948  C079  F0A7         	movff	?___fltol,efgtoa@d
  5324  00194C  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5325  001950                     
  5326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5327  001950  B83E               	btfsc	_flags^0,4,c
  5328  001952  EFAD  F00C         	goto	u9281
  5329  001956  EFAF  F00C         	goto	u9280
  5330  00195A                     u9281:
  5331  00195A  EFCD  F00C         	goto	l8514
  5332  00195E                     u9280:
  5333  00195E  0100               	movlb	0	; () banked
  5334  001960  51A7               	movf	efgtoa@d& (0+255),w,b
  5335  001962  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5336  001964  A4D8               	btfss	status,2,c
  5337  001966  EFB7  F00C         	goto	u9291
  5338  00196A  EFB9  F00C         	goto	u9290
  5339  00196E                     u9291:
  5340  00196E  EFCD  F00C         	goto	l8514
  5341  001972                     u9290:
  5342  001972                     
  5343                           ; BSR set to: 0
  5344  001972  0E67               	movlw	103
  5345  001974  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5346  001976  A4D8               	btfss	status,2,c
  5347  001978  EFC0  F00C         	goto	u9301
  5348  00197C  EFC2  F00C         	goto	u9300
  5349  001980                     u9301:
  5350  001980  EFCD  F00C         	goto	l8514
  5351  001984                     u9300:
  5352  001984                     
  5353                           ; BSR set to: 0
  5354  001984  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5355  001986  EFC9  F00C         	goto	u9310
  5356  00198A  EFC7  F00C         	goto	u9311
  5357  00198E                     u9311:
  5358  00198E  EFCD  F00C         	goto	l8514
  5359  001992                     u9310:
  5360  001992                     
  5361                           ; BSR set to: 0
  5362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5363  001992  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5364  001994  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5365                           
  5366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5367  001996  EF18  F00D         	goto	l8542
  5368  00199A                     l8514:
  5369                           
  5370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5371  00199A  0100               	movlb	0	; () banked
  5372  00199C  519D               	movf	efgtoa@pp& (0+255),w,b
  5373  00199E  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5374  0019A0  A4D8               	btfss	status,2,c
  5375  0019A2  EFD5  F00C         	goto	u9321
  5376  0019A6  EFD7  F00C         	goto	u9320
  5377  0019AA                     u9321:
  5378  0019AA  EF01  F00D         	goto	l8534
  5379  0019AE                     u9320:
  5380  0019AE                     
  5381                           ; BSR set to: 0
  5382  0019AE  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5383  0019B0  EFDE  F00C         	goto	u9330
  5384  0019B4  EFDC  F00C         	goto	u9331
  5385  0019B8                     u9331:
  5386  0019B8  EF01  F00D         	goto	l8534
  5387  0019BC                     u9330:
  5388  0019BC                     
  5389                           ; BSR set to: 0
  5390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5391  0019BC  0E34               	movlw	low _dbuf
  5392  0019BE  25C1               	addwf	efgtoa@n& (0+255),w,b
  5393  0019C0  6ED9               	movwf	fsr2l,c
  5394  0019C2  0E01               	movlw	high _dbuf
  5395  0019C4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5396  0019C6  6EDA               	movwf	fsr2h,c
  5397  0019C8  0E2E               	movlw	46
  5398  0019CA  6EDF               	movwf	indf2,c
  5399  0019CC                     
  5400                           ; BSR set to: 0
  5401  0019CC  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5402  0019CE  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5403  0019D0                     
  5404                           ; BSR set to: 0
  5405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5406  0019D0  07AD               	decf	efgtoa@w& (0+255),f,b
  5407  0019D2  A0D8               	btfss	status,0,c
  5408  0019D4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5409  0019D6                     
  5410                           ; BSR set to: 0
  5411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5412  0019D6  0E00               	movlw	0
  5413  0019D8  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5414  0019DA  0E01               	movlw	1
  5415  0019DC  6F9D               	movwf	efgtoa@pp& (0+255),b
  5416  0019DE  EF01  F00D         	goto	l8534
  5417  0019E2                     l8526:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5421  0019E2  0E34               	movlw	low _dbuf
  5422  0019E4  25C1               	addwf	efgtoa@n& (0+255),w,b
  5423  0019E6  6ED9               	movwf	fsr2l,c
  5424  0019E8  0E01               	movlw	high _dbuf
  5425  0019EA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5426  0019EC  6EDA               	movwf	fsr2h,c
  5427  0019EE  0E30               	movlw	48
  5428  0019F0  6EDF               	movwf	indf2,c
  5429  0019F2                     
  5430                           ; BSR set to: 0
  5431  0019F2  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5432  0019F4  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5433  0019F6                     
  5434                           ; BSR set to: 0
  5435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5436  0019F6  07AD               	decf	efgtoa@w& (0+255),f,b
  5437  0019F8  A0D8               	btfss	status,0,c
  5438  0019FA  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5439  0019FC                     
  5440                           ; BSR set to: 0
  5441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5442  0019FC  079B               	decf	efgtoa@t& (0+255),f,b
  5443  0019FE  A0D8               	btfss	status,0,c
  5444  001A00  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5445  001A02                     l8534:
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5449  001A02  519B               	movf	efgtoa@t& (0+255),w,b
  5450  001A04  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5451  001A06  A4D8               	btfss	status,2,c
  5452  001A08  EF08  F00D         	goto	u9341
  5453  001A0C  EF0A  F00D         	goto	u9340
  5454  001A10                     u9341:
  5455  001A10  EFF1  F00C         	goto	l8526
  5456  001A14                     u9340:
  5457  001A14                     
  5458                           ; BSR set to: 0
  5459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5460  001A14  0E34               	movlw	low _dbuf
  5461  001A16  25C1               	addwf	efgtoa@n& (0+255),w,b
  5462  001A18  6ED9               	movwf	fsr2l,c
  5463  001A1A  0E01               	movlw	high _dbuf
  5464  001A1C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5465  001A1E  6EDA               	movwf	fsr2h,c
  5466  001A20  51A7               	movf	efgtoa@d& (0+255),w,b
  5467  001A22  0F30               	addlw	48
  5468  001A24  6EDF               	movwf	indf2,c
  5469  001A26                     
  5470                           ; BSR set to: 0
  5471  001A26  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5472  001A28  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5473  001A2A                     
  5474                           ; BSR set to: 0
  5475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5476  001A2A  07AD               	decf	efgtoa@w& (0+255),f,b
  5477  001A2C  A0D8               	btfss	status,0,c
  5478  001A2E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5479  001A30                     l8542:
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5483  001A30  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5484  001A34  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5485  001A38  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5486  001A3C  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5487  001A40  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5488  001A44  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5489  001A48  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5490  001A4C  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5491  001A50  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5492  001A54  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5493  001A58  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5494  001A5C  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5495  001A60  EC83  F013         	call	___flmul	;wreg free
  5496  001A64  C02A  F07D         	movff	?___flmul,___flsub@a
  5497  001A68  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5498  001A6C  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5499  001A70  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5500  001A74  EC53  F02B         	call	___flsub	;wreg free
  5501  001A78  C079  F0B1         	movff	?___flsub,efgtoa@h
  5502  001A7C  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5503  001A80  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5504  001A84  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5505  001A88                     
  5506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5507  001A88  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5508  001A8C  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5509  001A90  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5510  001A94  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5511  001A98  0E00               	movlw	0
  5512  001A9A  6E18               	movwf	___fldiv@a^0,c
  5513  001A9C  0E00               	movlw	0
  5514  001A9E  6E19               	movwf	(___fldiv@a+1)^0,c
  5515  001AA0  0E20               	movlw	32
  5516  001AA2  6E1A               	movwf	(___fldiv@a+2)^0,c
  5517  001AA4  0E41               	movlw	65
  5518  001AA6  6E1B               	movwf	(___fldiv@a+3)^0,c
  5519  001AA8  ECAB  F015         	call	___fldiv	;wreg free
  5520  001AAC  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5521  001AB0  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5522  001AB4  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5523  001AB8  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5524  001ABC                     
  5525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5526  001ABC  0100               	movlb	0	; () banked
  5527  001ABE  079F               	decf	efgtoa@ne& (0+255),f,b
  5528  001AC0  A0D8               	btfss	status,0,c
  5529  001AC2  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5530  001AC4                     
  5531                           ; BSR set to: 0
  5532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5533  001AC4  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5534  001AC6  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5535  001AC8                     l8550:
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5539  001AC8  51A1               	movf	efgtoa@m& (0+255),w,b
  5540  001ACA  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5541  001ACC  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5542  001ACE  0A80               	xorlw	128
  5543  001AD0  6F8A               	movwf	??_efgtoa& (0+255),b
  5544  001AD2  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5545  001AD4  0A80               	xorlw	128
  5546  001AD6  598A               	subwfb	??_efgtoa& (0+255),w,b
  5547  001AD8  B0D8               	btfsc	status,0,c
  5548  001ADA  EF71  F00D         	goto	u9351
  5549  001ADE  EF73  F00D         	goto	u9350
  5550  001AE2                     u9351:
  5551  001AE2  EF81  F00D         	goto	l8554
  5552  001AE6                     u9350:
  5553  001AE6                     
  5554                           ; BSR set to: 0
  5555  001AE6  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5556  001AE8  EF7F  F00D         	goto	u9361
  5557  001AEC  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5558  001AEE  E109               	bnz	u9360
  5559  001AF0  0E4B               	movlw	75
  5560  001AF2  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5561  001AF4  A0D8               	btfss	status,0,c
  5562  001AF6  EF7F  F00D         	goto	u9361
  5563  001AFA  EF81  F00D         	goto	u9360
  5564  001AFE                     u9361:
  5565  001AFE  EF76  F00C         	goto	l8502
  5566  001B02                     u9360:
  5567  001B02                     l8554:
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5571  001B02  519D               	movf	efgtoa@pp& (0+255),w,b
  5572  001B04  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5573  001B06  A4D8               	btfss	status,2,c
  5574  001B08  EF88  F00D         	goto	u9371
  5575  001B0C  EF8A  F00D         	goto	u9370
  5576  001B10                     u9371:
  5577  001B10  EF9B  F00D         	goto	l8562
  5578  001B14                     u9370:
  5579  001B14                     
  5580                           ; BSR set to: 0
  5581  001B14  A83E               	btfss	_flags^0,4,c
  5582  001B16  EF8F  F00D         	goto	u9381
  5583  001B1A  EF91  F00D         	goto	u9380
  5584  001B1E                     u9381:
  5585  001B1E  EF9B  F00D         	goto	l8562
  5586  001B22                     u9380:
  5587  001B22                     
  5588                           ; BSR set to: 0
  5589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5590  001B22  0E34               	movlw	low _dbuf
  5591  001B24  25C1               	addwf	efgtoa@n& (0+255),w,b
  5592  001B26  6ED9               	movwf	fsr2l,c
  5593  001B28  0E01               	movlw	high _dbuf
  5594  001B2A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5595  001B2C  6EDA               	movwf	fsr2h,c
  5596  001B2E  0E2E               	movlw	46
  5597  001B30  6EDF               	movwf	indf2,c
  5598  001B32                     
  5599                           ; BSR set to: 0
  5600  001B32  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5601  001B34  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5602  001B36                     l8562:
  5603                           
  5604                           ; BSR set to: 0
  5605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5606  001B36  0E34               	movlw	low _dbuf
  5607  001B38  25C1               	addwf	efgtoa@n& (0+255),w,b
  5608  001B3A  6ED9               	movwf	fsr2l,c
  5609  001B3C  0E01               	movlw	high _dbuf
  5610  001B3E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5611  001B40  6EDA               	movwf	fsr2h,c
  5612  001B42  0E00               	movlw	0
  5613  001B44  6EDF               	movwf	indf2,c
  5614  001B46                     
  5615                           ; BSR set to: 0
  5616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5617  001B46  0E65               	movlw	101
  5618  001B48  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5619  001B4A  A4D8               	btfss	status,2,c
  5620  001B4C  EFAA  F00D         	goto	u9391
  5621  001B50  EFAC  F00D         	goto	u9390
  5622  001B54                     u9391:
  5623  001B54  EF7E  F00E         	goto	l8624
  5624  001B58                     u9390:
  5625  001B58                     
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5628  001B58  0E00               	movlw	0
  5629  001B5A  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5630  001B5C  0E4F               	movlw	79
  5631  001B5E  6FB9               	movwf	efgtoa@i& (0+255),b
  5632  001B60                     
  5633                           ; BSR set to: 0
  5634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5635  001B60  0E34               	movlw	low _dbuf
  5636  001B62  25B9               	addwf	efgtoa@i& (0+255),w,b
  5637  001B64  6ED9               	movwf	fsr2l,c
  5638  001B66  0E01               	movlw	high _dbuf
  5639  001B68  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5640  001B6A  6EDA               	movwf	fsr2h,c
  5641  001B6C  0E00               	movlw	0
  5642  001B6E  6EDF               	movwf	indf2,c
  5643  001B70                     
  5644                           ; BSR set to: 0
  5645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5646  001B70  0E00               	movlw	0
  5647  001B72  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5648  001B74  0E00               	movlw	0
  5649  001B76  6FA9               	movwf	efgtoa@sign& (0+255),b
  5650  001B78                     
  5651                           ; BSR set to: 0
  5652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5653  001B78  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5654  001B7A  EFC3  F00D         	goto	u9400
  5655  001B7E  EFC1  F00D         	goto	u9401
  5656  001B82                     u9401:
  5657  001B82  EFCB  F00D         	goto	l8578
  5658  001B86                     u9400:
  5659  001B86                     
  5660                           ; BSR set to: 0
  5661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5662  001B86  0E00               	movlw	0
  5663  001B88  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5664  001B8A  0E01               	movlw	1
  5665  001B8C  6FA9               	movwf	efgtoa@sign& (0+255),b
  5666  001B8E                     
  5667                           ; BSR set to: 0
  5668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5669  001B8E  6DBF               	negf	efgtoa@e& (0+255),b
  5670  001B90  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5671  001B92  B0D8               	btfsc	status,0,c
  5672  001B94  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5673  001B96                     l8578:
  5674                           
  5675                           ; BSR set to: 0
  5676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5677  001B96  0E00               	movlw	0
  5678  001B98  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5679  001B9A  0E02               	movlw	2
  5680  001B9C  6FAB               	movwf	efgtoa@p& (0+255),b
  5681                           
  5682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5683  001B9E  EFFC  F00D         	goto	l8590
  5684  001BA2                     l8580:
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5688  001BA2  07B9               	decf	efgtoa@i& (0+255),f,b
  5689  001BA4  A0D8               	btfss	status,0,c
  5690  001BA6  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5691  001BA8                     
  5692                           ; BSR set to: 0
  5693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5694  001BA8  0E34               	movlw	low _dbuf
  5695  001BAA  25B9               	addwf	efgtoa@i& (0+255),w,b
  5696  001BAC  6ED9               	movwf	fsr2l,c
  5697  001BAE  0E01               	movlw	high _dbuf
  5698  001BB0  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5699  001BB2  6EDA               	movwf	fsr2h,c
  5700  001BB4  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5701  001BB8  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5702  001BBC  0E00               	movlw	0
  5703  001BBE  6E17               	movwf	(___awmod@divisor+1)^0,c
  5704  001BC0  0E0A               	movlw	10
  5705  001BC2  6E16               	movwf	___awmod@divisor^0,c
  5706  001BC4  EC8B  F027         	call	___awmod	;wreg free
  5707  001BC8  5014               	movf	?___awmod^0,w,c
  5708  001BCA  0F30               	addlw	48
  5709  001BCC  6EDF               	movwf	indf2,c
  5710  001BCE                     
  5711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5712  001BCE  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5713  001BD2  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5714  001BD6  0E00               	movlw	0
  5715  001BD8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5716  001BDA  0E0A               	movlw	10
  5717  001BDC  6E16               	movwf	___awdiv@divisor^0,c
  5718  001BDE  EC68  F026         	call	___awdiv	;wreg free
  5719  001BE2  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5720  001BE6  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5721  001BEA                     
  5722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5723  001BEA  0100               	movlb	0	; () banked
  5724  001BEC  07AB               	decf	efgtoa@p& (0+255),f,b
  5725  001BEE  A0D8               	btfss	status,0,c
  5726  001BF0  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5727  001BF2                     
  5728                           ; BSR set to: 0
  5729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5730  001BF2  07AD               	decf	efgtoa@w& (0+255),f,b
  5731  001BF4  A0D8               	btfss	status,0,c
  5732  001BF6  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5733  001BF8                     l8590:
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5737  001BF8  51BF               	movf	efgtoa@e& (0+255),w,b
  5738  001BFA  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5739  001BFC  A4D8               	btfss	status,2,c
  5740  001BFE  EF03  F00E         	goto	u9411
  5741  001C02  EF05  F00E         	goto	u9410
  5742  001C06                     u9411:
  5743  001C06  EFD1  F00D         	goto	l8580
  5744  001C0A                     u9410:
  5745  001C0A                     
  5746                           ; BSR set to: 0
  5747  001C0A  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5748  001C0C  EF12  F00E         	goto	u9420
  5749  001C10  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5750  001C12  E106               	bnz	u9421
  5751  001C14  05AB               	decf	efgtoa@p& (0+255),w,b
  5752  001C16  B0D8               	btfsc	status,0,c
  5753  001C18  EF10  F00E         	goto	u9421
  5754  001C1C  EF12  F00E         	goto	u9420
  5755  001C20                     u9421:
  5756  001C20  EFD1  F00D         	goto	l8580
  5757  001C24                     u9420:
  5758  001C24                     
  5759                           ; BSR set to: 0
  5760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5761  001C24  07B9               	decf	efgtoa@i& (0+255),f,b
  5762  001C26  A0D8               	btfss	status,0,c
  5763  001C28  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5764  001C2A                     
  5765                           ; BSR set to: 0
  5766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5767  001C2A  51A9               	movf	efgtoa@sign& (0+255),w,b
  5768  001C2C  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5769  001C2E  A4D8               	btfss	status,2,c
  5770  001C30  EF1C  F00E         	goto	u9431
  5771  001C34  EF1E  F00E         	goto	u9430
  5772  001C38                     u9431:
  5773  001C38  EF24  F00E         	goto	l8600
  5774  001C3C                     u9430:
  5775  001C3C                     
  5776                           ; BSR set to: 0
  5777  001C3C  0E00               	movlw	0
  5778  001C3E  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5779  001C40  0E2B               	movlw	43
  5780  001C42  6F95               	movwf	_efgtoa$3563& (0+255),b
  5781  001C44  EF28  F00E         	goto	l8602
  5782  001C48                     l8600:
  5783                           
  5784                           ; BSR set to: 0
  5785  001C48  0E00               	movlw	0
  5786  001C4A  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5787  001C4C  0E2D               	movlw	45
  5788  001C4E  6F95               	movwf	_efgtoa$3563& (0+255),b
  5789  001C50                     l8602:
  5790                           
  5791                           ; BSR set to: 0
  5792  001C50  0E34               	movlw	low _dbuf
  5793  001C52  25B9               	addwf	efgtoa@i& (0+255),w,b
  5794  001C54  6ED9               	movwf	fsr2l,c
  5795  001C56  0E01               	movlw	high _dbuf
  5796  001C58  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5797  001C5A  6EDA               	movwf	fsr2h,c
  5798  001C5C  0060  F257  FFDF   	movff	_efgtoa$3563,indf2
  5799  001C62                     
  5800                           ; BSR set to: 0
  5801                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5802  001C62  07AD               	decf	efgtoa@w& (0+255),f,b
  5803  001C64  A0D8               	btfss	status,0,c
  5804  001C66  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5805  001C68                     
  5806                           ; BSR set to: 0
  5807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5808  001C68  07B9               	decf	efgtoa@i& (0+255),f,b
  5809  001C6A  A0D8               	btfss	status,0,c
  5810  001C6C  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5811  001C6E                     
  5812                           ; BSR set to: 0
  5813  001C6E  0EBF               	movlw	191
  5814  001C70  6F8A               	movwf	??_efgtoa& (0+255),b
  5815  001C72  0EFF               	movlw	255
  5816  001C74  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5817  001C76  5189               	movf	efgtoa@c& (0+255),w,b
  5818  001C78  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5819  001C7A  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5820  001C7C  518A               	movf	??_efgtoa& (0+255),w,b
  5821  001C7E  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5822  001C80  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5823  001C82  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5824  001C84  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5825  001C86  E10A               	bnz	u9440
  5826  001C88  0E1A               	movlw	26
  5827  001C8A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5828  001C8C  A0D8               	btfss	status,0,c
  5829  001C8E  EF4B  F00E         	goto	u9441
  5830  001C92  EF4E  F00E         	goto	u9440
  5831  001C96                     u9441:
  5832  001C96  0E01               	movlw	1
  5833  001C98  EF4F  F00E         	goto	u9450
  5834  001C9C                     u9440:
  5835  001C9C  0E00               	movlw	0
  5836  001C9E                     u9450:
  5837  001C9E  6F99               	movwf	_efgtoa$3565& (0+255),b
  5838  001CA0  6B9A               	clrf	(_efgtoa$3565+1)& (0+255),b
  5839  001CA2                     
  5840                           ; BSR set to: 0
  5841  001CA2  5199               	movf	_efgtoa$3565& (0+255),w,b
  5842  001CA4  119A               	iorwf	(_efgtoa$3565+1)& (0+255),w,b
  5843  001CA6  A4D8               	btfss	status,2,c
  5844  001CA8  EF58  F00E         	goto	u9461
  5845  001CAC  EF5A  F00E         	goto	u9460
  5846  001CB0                     u9461:
  5847  001CB0  EF60  F00E         	goto	l8616
  5848  001CB4                     u9460:
  5849  001CB4                     
  5850                           ; BSR set to: 0
  5851  001CB4  0E00               	movlw	0
  5852  001CB6  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5853  001CB8  0E65               	movlw	101
  5854  001CBA  6F97               	movwf	_efgtoa$3564& (0+255),b
  5855  001CBC  EF64  F00E         	goto	l8618
  5856  001CC0                     l8616:
  5857                           
  5858                           ; BSR set to: 0
  5859  001CC0  0E00               	movlw	0
  5860  001CC2  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5861  001CC4  0E45               	movlw	69
  5862  001CC6  6F97               	movwf	_efgtoa$3564& (0+255),b
  5863  001CC8                     l8618:
  5864                           
  5865                           ; BSR set to: 0
  5866  001CC8  0E34               	movlw	low _dbuf
  5867  001CCA  25B9               	addwf	efgtoa@i& (0+255),w,b
  5868  001CCC  6ED9               	movwf	fsr2l,c
  5869  001CCE  0E01               	movlw	high _dbuf
  5870  001CD0  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5871  001CD2  6EDA               	movwf	fsr2h,c
  5872  001CD4  0060  F25F  FFDF   	movff	_efgtoa$3564,indf2
  5873  001CDA                     
  5874                           ; BSR set to: 0
  5875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5876  001CDA  07AD               	decf	efgtoa@w& (0+255),f,b
  5877  001CDC  A0D8               	btfss	status,0,c
  5878  001CDE  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5879  001CE0                     
  5880                           ; BSR set to: 0
  5881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5882  001CE0  0E34               	movlw	low _dbuf
  5883  001CE2  25C1               	addwf	efgtoa@n& (0+255),w,b
  5884  001CE4  6E14               	movwf	strcpy@dest^0,c
  5885  001CE6  0E01               	movlw	high _dbuf
  5886  001CE8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5887  001CEA  6E15               	movwf	(strcpy@dest+1)^0,c
  5888  001CEC  0E34               	movlw	low _dbuf
  5889  001CEE  25B9               	addwf	efgtoa@i& (0+255),w,b
  5890  001CF0  6E16               	movwf	strcpy@src^0,c
  5891  001CF2  0E01               	movlw	high _dbuf
  5892  001CF4  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5893  001CF6  6E17               	movwf	(strcpy@src+1)^0,c
  5894  001CF8  ECA0  F029         	call	_strcpy	;wreg free
  5895  001CFC                     l8624:
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5898  001CFC  C083  F026         	movff	efgtoa@fp,pad@fp
  5899  001D00  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5900  001D04  0E34               	movlw	low _dbuf
  5901  001D06  6E28               	movwf	pad@buf^0,c
  5902  001D08  0E01               	movlw	high _dbuf
  5903  001D0A  6E29               	movwf	(pad@buf+1)^0,c
  5904  001D0C  C0AD  F02A         	movff	efgtoa@w,pad@p
  5905  001D10  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5906  001D14  ECCA  F026         	call	_pad	;wreg free
  5907  001D18  C026  F083         	movff	?_pad,?_efgtoa
  5908  001D1C  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5909  001D20                     l2164:
  5910  001D20  0012               	return		;funcret
  5911  001D22                     __end_of_efgtoa:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function _tolower *****************
  5915 ;; Defined at:
  5916 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  c               2   25[COMRAM] int 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  2   25[COMRAM] int 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;Total ram usage:        8 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 9
  5937 ;; This function calls:
  5938 ;;		_isupper
  5939 ;; This function is called by:
  5940 ;;		_efgtoa
  5941 ;;		_vfpfcnvrt
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text11
  5946  005410                     __ptext11:
  5947                           	callstack 0
  5948  005410                     _tolower:
  5949                           	callstack 16
  5950  005410  0EBF               	movlw	191
  5951  005412  6E1C               	movwf	??_tolower^0,c
  5952  005414  0EFF               	movlw	255
  5953  005416  6E1D               	movwf	(??_tolower+1)^0,c
  5954  005418  C01A  F01E         	movff	tolower@c,??_tolower+2
  5955  00541C  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5956  005420  501C               	movf	??_tolower^0,w,c
  5957  005422  261E               	addwf	(??_tolower+2)^0,f,c
  5958  005424  501D               	movf	(??_tolower+1)^0,w,c
  5959  005426  221F               	addwfc	(??_tolower+3)^0,f,c
  5960  005428  501F               	movf	(??_tolower+3)^0,w,c
  5961  00542A  E10A               	bnz	u8650
  5962  00542C  0E1A               	movlw	26
  5963  00542E  5C1E               	subwf	(??_tolower+2)^0,w,c
  5964  005430  A0D8               	btfss	status,0,c
  5965  005432  EF1D  F02A         	goto	u8651
  5966  005436  EF20  F02A         	goto	u8650
  5967  00543A                     u8651:
  5968  00543A  0E01               	movlw	1
  5969  00543C  EF21  F02A         	goto	u8660
  5970  005440                     u8650:
  5971  005440  0E00               	movlw	0
  5972  005442                     u8660:
  5973  005442  6E20               	movwf	_tolower$3676^0,c
  5974  005444  6A21               	clrf	(_tolower$3676+1)^0,c
  5975  005446  5020               	movf	_tolower$3676^0,w,c
  5976  005448  1021               	iorwf	(_tolower$3676+1)^0,w,c
  5977  00544A  B4D8               	btfsc	status,2,c
  5978  00544C  EF2A  F02A         	goto	u8671
  5979  005450  EF2C  F02A         	goto	u8670
  5980  005454                     u8671:
  5981  005454  EF33  F02A         	goto	l2346
  5982  005458                     u8670:
  5983  005458  0E20               	movlw	32
  5984  00545A  101A               	iorwf	tolower@c^0,w,c
  5985  00545C  6E1A               	movwf	?_tolower^0,c
  5986  00545E  501B               	movf	(tolower@c+1)^0,w,c
  5987  005460  6E1B               	movwf	(?_tolower+1)^0,c
  5988  005462  EF37  F02A         	goto	l2351
  5989  005466                     l2346:
  5990  005466  C01A  F01A         	movff	tolower@c,?_tolower
  5991  00546A  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5992  00546E                     l2351:
  5993  00546E  0012               	return		;funcret
  5994  005470                     __end_of_tolower:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _isupper *****************
  5998 ;; Defined at:
  5999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  c               2   19[COMRAM] int 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;		None
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  2   19[COMRAM] int 
  6006 ;; Registers used:
  6007 ;;		wreg, status,2, status,0
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;Total ram usage:        6 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; Hardware stack levels required when called: 8
  6020 ;; This function calls:
  6021 ;;		Nothing
  6022 ;; This function is called by:
  6023 ;;		_efgtoa
  6024 ;;		_vfpfcnvrt
  6025 ;;		_tolower
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text12
  6030  005866                     __ptext12:
  6031                           	callstack 0
  6032  005866                     _isupper:
  6033                           	callstack 16
  6034  005866  0EBF               	movlw	191
  6035  005868  6E16               	movwf	??_isupper^0,c
  6036  00586A  0EFF               	movlw	255
  6037  00586C  6E17               	movwf	(??_isupper+1)^0,c
  6038  00586E  C014  F018         	movff	isupper@c,??_isupper+2
  6039  005872  C015  F019         	movff	isupper@c+1,??_isupper+3
  6040  005876  5016               	movf	??_isupper^0,w,c
  6041  005878  2618               	addwf	(??_isupper+2)^0,f,c
  6042  00587A  5017               	movf	(??_isupper+1)^0,w,c
  6043  00587C  2219               	addwfc	(??_isupper+3)^0,f,c
  6044  00587E  5019               	movf	(??_isupper+3)^0,w,c
  6045  005880  E10A               	bnz	u7660
  6046  005882  0E1A               	movlw	26
  6047  005884  5C18               	subwf	(??_isupper+2)^0,w,c
  6048  005886  A0D8               	btfss	status,0,c
  6049  005888  EF48  F02C         	goto	u7661
  6050  00588C  EF4B  F02C         	goto	u7660
  6051  005890                     u7661:
  6052  005890  0E01               	movlw	1
  6053  005892  EF4C  F02C         	goto	u7670
  6054  005896                     u7660:
  6055  005896  0E00               	movlw	0
  6056  005898                     u7670:
  6057  005898  6E14               	movwf	?_isupper^0,c
  6058  00589A  6A15               	clrf	(?_isupper+1)^0,c
  6059  00589C  0012               	return		;funcret
  6060  00589E                     __end_of_isupper:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function _strcpy *****************
  6064 ;; Defined at:
  6065 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6068 ;;		 -> dbuf(80), 
  6069 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6070 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6071 ;;		 -> dbuf(80), 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  d               2   27[COMRAM] PTR unsigned char 
  6074 ;;		 -> dbuf(80), 
  6075 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6076 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6077 ;;		 -> dbuf(80), 
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  2   19[COMRAM] PTR unsigned char 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;Total ram usage:       10 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 8
  6094 ;; This function calls:
  6095 ;;		Nothing
  6096 ;; This function is called by:
  6097 ;;		_efgtoa
  6098 ;; This function uses a non-reentrant model
  6099 ;;
  6100                           
  6101                           	psect	text13
  6102  005340                     __ptext13:
  6103                           	callstack 0
  6104  005340                     _strcpy:
  6105                           	callstack 16
  6106  005340  C016  F01A         	movff	strcpy@src,strcpy@s
  6107  005344  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6108  005348  C014  F01C         	movff	strcpy@dest,strcpy@d
  6109  00534C  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6110  005350                     l8218:
  6111  005350  501A               	movf	strcpy@s^0,w,c
  6112  005352  6E18               	movwf	??_strcpy^0,c
  6113  005354  501B               	movf	(strcpy@s+1)^0,w,c
  6114  005356  6E19               	movwf	(??_strcpy+1)^0,c
  6115  005358  4A1A               	infsnz	strcpy@s^0,f,c
  6116  00535A  2A1B               	incf	(strcpy@s+1)^0,f,c
  6117  00535C  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6118  005362  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6119  005368  0E00               	movlw	low (__smallconst shr (0+16))
  6120  00536A  6EF8               	movwf	tblptru,c
  6121  00536C  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6122  005372  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6123  005378  4A1C               	infsnz	strcpy@d^0,f,c
  6124  00537A  2A1D               	incf	(strcpy@d+1)^0,f,c
  6125  00537C  0E0F               	movlw	(high __ramtop+-1)
  6126  00537E  64F7               	cpfsgt	tblptrh,c
  6127  005380  D003               	bra	u8637
  6128  005382  0008               	tblrd		*
  6129  005384  50F5               	movf	tablat,w,c
  6130  005386  D007               	bra	u8630
  6131  005388                     u8637:
  6132  005388  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6133  00538E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6134  005394  50E7               	movf	indf1,w,c
  6135  005396                     u8630:
  6136  005396  6EDF               	movwf	indf2,c
  6137  005398  50DF               	movf	indf2,w,c
  6138  00539A  A4D8               	btfss	status,2,c
  6139  00539C  EFD2  F029         	goto	u8641
  6140  0053A0  EFD4  F029         	goto	u8640
  6141  0053A4                     u8641:
  6142  0053A4  EFA8  F029         	goto	l8218
  6143  0053A8                     u8640:
  6144  0053A8  0012               	return		;funcret
  6145  0053AA                     __end_of_strcpy:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _floorf *****************
  6149 ;; Defined at:
  6150 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  x               4   44[COMRAM] float 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  u               4    6[BANK0 ] struct .
  6155 ;;  m               4    0[BANK0 ] unsigned long 
  6156 ;;  e               2    4[BANK0 ] int 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  4   44[COMRAM] float 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2, status,0
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;Total ram usage:       20 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 8
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_efgtoa
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text14
  6181  0036AE                     __ptext14:
  6182                           	callstack 0
  6183  0036AE                     _floorf:
  6184                           	callstack 16
  6185  0036AE  C118  F066         	movff	floorf@F527,floorf@u
  6186  0036B2  C119  F067         	movff	floorf@F527+1,floorf@u+1
  6187  0036B6  C11A  F068         	movff	floorf@F527+2,floorf@u+2
  6188  0036BA  C11B  F069         	movff	floorf@F527+3,floorf@u+3
  6189  0036BE  C02D  F066         	movff	floorf@x,floorf@u
  6190  0036C2  C02E  F067         	movff	floorf@x+1,floorf@u+1
  6191  0036C6  C02F  F068         	movff	floorf@x+2,floorf@u+2
  6192  0036CA  C030  F069         	movff	floorf@x+3,floorf@u+3
  6193  0036CE  0E81               	movlw	129
  6194  0036D0  6E31               	movwf	??_floorf^0,c
  6195  0036D2  0EFF               	movlw	255
  6196  0036D4  6E32               	movwf	(??_floorf+1)^0,c
  6197  0036D6  C066  F033         	movff	floorf@u,??_floorf+2
  6198  0036DA  C067  F034         	movff	floorf@u+1,??_floorf+3
  6199  0036DE  C068  F035         	movff	floorf@u+2,??_floorf+4
  6200  0036E2  C069  F036         	movff	floorf@u+3,??_floorf+5
  6201  0036E6  0E18               	movlw	24
  6202  0036E8  EF7B  F01B         	goto	u8680
  6203  0036EC                     u8685:
  6204  0036EC  90D8               	bcf	status,0,c
  6205  0036EE  3236               	rrcf	(??_floorf+5)^0,f,c
  6206  0036F0  3235               	rrcf	(??_floorf+4)^0,f,c
  6207  0036F2  3234               	rrcf	(??_floorf+3)^0,f,c
  6208  0036F4  3233               	rrcf	(??_floorf+2)^0,f,c
  6209  0036F6                     u8680:
  6210  0036F6  2EE8               	decfsz	wreg,f,c
  6211  0036F8  EF76  F01B         	goto	u8685
  6212  0036FC  5033               	movf	(??_floorf+2)^0,w,c
  6213  0036FE  2431               	addwf	??_floorf^0,w,c
  6214  003700  0100               	movlb	0	; () banked
  6215  003702  6F64               	movwf	floorf@e& (0+255),b
  6216  003704  0E00               	movlw	0
  6217  003706  2032               	addwfc	(??_floorf+1)^0,w,c
  6218  003708  6F65               	movwf	(floorf@e+1)& (0+255),b
  6219  00370A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6220  00370C  EF91  F01B         	goto	u8691
  6221  003710  5165               	movf	(floorf@e+1)& (0+255),w,b
  6222  003712  E109               	bnz	u8690
  6223  003714  0E17               	movlw	23
  6224  003716  5D64               	subwf	floorf@e& (0+255),w,b
  6225  003718  A0D8               	btfss	status,0,c
  6226  00371A  EF91  F01B         	goto	u8691
  6227  00371E  EF93  F01B         	goto	u8690
  6228  003722                     u8691:
  6229  003722  EF9D  F01B         	goto	l8236
  6230  003726                     u8690:
  6231  003726                     l8234:
  6232                           
  6233                           ; BSR set to: 0
  6234  003726  C02D  F02D         	movff	floorf@x,?_floorf
  6235  00372A  C02E  F02E         	movff	floorf@x+1,?_floorf+1
  6236  00372E  C02F  F02F         	movff	floorf@x+2,?_floorf+2
  6237  003732  C030  F030         	movff	floorf@x+3,?_floorf+3
  6238  003736  EF61  F01C         	goto	l2287
  6239  00373A                     l8236:
  6240                           
  6241                           ; BSR set to: 0
  6242  00373A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6243  00373C  EFA2  F01B         	goto	u8701
  6244  003740  EFA4  F01B         	goto	u8700
  6245  003744                     u8701:
  6246  003744  EF15  F01C         	goto	l8246
  6247  003748                     u8700:
  6248  003748                     
  6249                           ; BSR set to: 0
  6250  003748  C064  F031         	movff	floorf@e,??_floorf
  6251  00374C  0EFF               	movlw	255
  6252  00374E  6E32               	movwf	(??_floorf+1)^0,c
  6253  003750  0EFF               	movlw	255
  6254  003752  6E33               	movwf	(??_floorf+2)^0,c
  6255  003754  0E7F               	movlw	127
  6256  003756  6E34               	movwf	(??_floorf+3)^0,c
  6257  003758  0E00               	movlw	0
  6258  00375A  6E35               	movwf	(??_floorf+4)^0,c
  6259  00375C                     u8715:
  6260  00375C  6631               	tstfsz	??_floorf^0,c
  6261  00375E  EFB3  F01B         	goto	u8716
  6262  003762  EFBB  F01B         	goto	u8717
  6263  003766                     u8716:
  6264  003766  3435               	rlcf	(??_floorf+4)^0,w,c
  6265  003768  3235               	rrcf	(??_floorf+4)^0,f,c
  6266  00376A  3234               	rrcf	(??_floorf+3)^0,f,c
  6267  00376C  3233               	rrcf	(??_floorf+2)^0,f,c
  6268  00376E  3232               	rrcf	(??_floorf+1)^0,f,c
  6269  003770  2E31               	decfsz	??_floorf^0,f,c
  6270  003772  EFAE  F01B         	goto	u8715
  6271  003776                     u8717:
  6272  003776  C032  F060         	movff	??_floorf+1,floorf@m
  6273  00377A  C033  F061         	movff	??_floorf+2,floorf@m+1
  6274  00377E  C034  F062         	movff	??_floorf+3,floorf@m+2
  6275  003782  C035  F063         	movff	??_floorf+4,floorf@m+3
  6276  003786  0100               	movlb	0	; () banked
  6277  003788  5160               	movf	floorf@m& (0+255),w,b
  6278  00378A  1566               	andwf	floorf@u& (0+255),w,b
  6279  00378C  6E31               	movwf	??_floorf^0,c
  6280  00378E  5161               	movf	(floorf@m+1)& (0+255),w,b
  6281  003790  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6282  003792  6E32               	movwf	(??_floorf+1)^0,c
  6283  003794  5162               	movf	(floorf@m+2)& (0+255),w,b
  6284  003796  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6285  003798  6E33               	movwf	(??_floorf+2)^0,c
  6286  00379A  5163               	movf	(floorf@m+3)& (0+255),w,b
  6287  00379C  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6288  00379E  6E34               	movwf	(??_floorf+3)^0,c
  6289  0037A0  5031               	movf	??_floorf^0,w,c
  6290  0037A2  1032               	iorwf	(??_floorf+1)^0,w,c
  6291  0037A4  1033               	iorwf	(??_floorf+2)^0,w,c
  6292  0037A6  1034               	iorwf	(??_floorf+3)^0,w,c
  6293  0037A8  A4D8               	btfss	status,2,c
  6294  0037AA  EFD9  F01B         	goto	u8721
  6295  0037AE  EFDB  F01B         	goto	u8720
  6296  0037B2                     u8721:
  6297  0037B2  EFDD  F01B         	goto	l8242
  6298  0037B6                     u8720:
  6299  0037B6  EF93  F01B         	goto	l8234
  6300  0037BA                     l8242:
  6301                           
  6302                           ; BSR set to: 0
  6303  0037BA  C066  F031         	movff	floorf@u,??_floorf
  6304  0037BE  C067  F032         	movff	floorf@u+1,??_floorf+1
  6305  0037C2  C068  F033         	movff	floorf@u+2,??_floorf+2
  6306  0037C6  C069  F034         	movff	floorf@u+3,??_floorf+3
  6307  0037CA  0E20               	movlw	32
  6308  0037CC  EFED  F01B         	goto	u8730
  6309  0037D0                     u8735:
  6310  0037D0  90D8               	bcf	status,0,c
  6311  0037D2  3234               	rrcf	(??_floorf+3)^0,f,c
  6312  0037D4  3233               	rrcf	(??_floorf+2)^0,f,c
  6313  0037D6  3232               	rrcf	(??_floorf+1)^0,f,c
  6314  0037D8  3231               	rrcf	??_floorf^0,f,c
  6315  0037DA                     u8730:
  6316  0037DA  2EE8               	decfsz	wreg,f,c
  6317  0037DC  EFE8  F01B         	goto	u8735
  6318  0037E0  5031               	movf	??_floorf^0,w,c
  6319  0037E2  1032               	iorwf	(??_floorf+1)^0,w,c
  6320  0037E4  1033               	iorwf	(??_floorf+2)^0,w,c
  6321  0037E6  1034               	iorwf	(??_floorf+3)^0,w,c
  6322  0037E8  B4D8               	btfsc	status,2,c
  6323  0037EA  EFF9  F01B         	goto	u8741
  6324  0037EE  EFFB  F01B         	goto	u8740
  6325  0037F2                     u8741:
  6326  0037F2  EF03  F01C         	goto	l2290
  6327  0037F6                     u8740:
  6328  0037F6                     
  6329                           ; BSR set to: 0
  6330  0037F6  5160               	movf	floorf@m& (0+255),w,b
  6331  0037F8  2766               	addwf	floorf@u& (0+255),f,b
  6332  0037FA  5161               	movf	(floorf@m+1)& (0+255),w,b
  6333  0037FC  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6334  0037FE  5162               	movf	(floorf@m+2)& (0+255),w,b
  6335  003800  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6336  003802  5163               	movf	(floorf@m+3)& (0+255),w,b
  6337  003804  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6338  003806                     l2290:
  6339                           
  6340                           ; BSR set to: 0
  6341  003806  1D60               	comf	floorf@m& (0+255),w,b
  6342  003808  6E31               	movwf	??_floorf^0,c
  6343  00380A  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6344  00380C  6E32               	movwf	(??_floorf+1)^0,c
  6345  00380E  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6346  003810  6E33               	movwf	(??_floorf+2)^0,c
  6347  003812  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6348  003814  6E34               	movwf	(??_floorf+3)^0,c
  6349  003816  5031               	movf	??_floorf^0,w,c
  6350  003818  1766               	andwf	floorf@u& (0+255),f,b
  6351  00381A  5032               	movf	(??_floorf+1)^0,w,c
  6352  00381C  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6353  00381E  5033               	movf	(??_floorf+2)^0,w,c
  6354  003820  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6355  003822  5034               	movf	(??_floorf+3)^0,w,c
  6356  003824  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6357  003826  EF59  F01C         	goto	l8254
  6358  00382A                     l8246:
  6359                           
  6360                           ; BSR set to: 0
  6361  00382A  C066  F031         	movff	floorf@u,??_floorf
  6362  00382E  C067  F032         	movff	floorf@u+1,??_floorf+1
  6363  003832  C068  F033         	movff	floorf@u+2,??_floorf+2
  6364  003836  C069  F034         	movff	floorf@u+3,??_floorf+3
  6365  00383A  0E20               	movlw	32
  6366  00383C  EF25  F01C         	goto	u8750
  6367  003840                     u8755:
  6368  003840  90D8               	bcf	status,0,c
  6369  003842  3234               	rrcf	(??_floorf+3)^0,f,c
  6370  003844  3233               	rrcf	(??_floorf+2)^0,f,c
  6371  003846  3232               	rrcf	(??_floorf+1)^0,f,c
  6372  003848  3231               	rrcf	??_floorf^0,f,c
  6373  00384A                     u8750:
  6374  00384A  2EE8               	decfsz	wreg,f,c
  6375  00384C  EF20  F01C         	goto	u8755
  6376  003850  5031               	movf	??_floorf^0,w,c
  6377  003852  1032               	iorwf	(??_floorf+1)^0,w,c
  6378  003854  1033               	iorwf	(??_floorf+2)^0,w,c
  6379  003856  1034               	iorwf	(??_floorf+3)^0,w,c
  6380  003858  A4D8               	btfss	status,2,c
  6381  00385A  EF31  F01C         	goto	u8761
  6382  00385E  EF33  F01C         	goto	u8760
  6383  003862                     u8761:
  6384  003862  EF3D  F01C         	goto	l8250
  6385  003866                     u8760:
  6386  003866                     
  6387                           ; BSR set to: 0
  6388  003866  0E00               	movlw	0
  6389  003868  6F66               	movwf	floorf@u& (0+255),b
  6390  00386A  0E00               	movlw	0
  6391  00386C  6F67               	movwf	(floorf@u+1)& (0+255),b
  6392  00386E  0E00               	movlw	0
  6393  003870  6F68               	movwf	(floorf@u+2)& (0+255),b
  6394  003872  0E00               	movlw	0
  6395  003874  6F69               	movwf	(floorf@u+3)& (0+255),b
  6396  003876  EF59  F01C         	goto	l8254
  6397  00387A                     l8250:
  6398                           
  6399                           ; BSR set to: 0
  6400  00387A  90D8               	bcf	status,0,c
  6401  00387C  3566               	rlcf	floorf@u& (0+255),w,b
  6402  00387E  6E31               	movwf	??_floorf^0,c
  6403  003880  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6404  003882  6E32               	movwf	(??_floorf+1)^0,c
  6405  003884  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6406  003886  6E33               	movwf	(??_floorf+2)^0,c
  6407  003888  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6408  00388A  6E34               	movwf	(??_floorf+3)^0,c
  6409  00388C  5031               	movf	??_floorf^0,w,c
  6410  00388E  1032               	iorwf	(??_floorf+1)^0,w,c
  6411  003890  1033               	iorwf	(??_floorf+2)^0,w,c
  6412  003892  1034               	iorwf	(??_floorf+3)^0,w,c
  6413  003894  B4D8               	btfsc	status,2,c
  6414  003896  EF4F  F01C         	goto	u8771
  6415  00389A  EF51  F01C         	goto	u8770
  6416  00389E                     u8771:
  6417  00389E  EF59  F01C         	goto	l8254
  6418  0038A2                     u8770:
  6419  0038A2                     
  6420                           ; BSR set to: 0
  6421  0038A2  0E00               	movlw	0
  6422  0038A4  6F66               	movwf	floorf@u& (0+255),b
  6423  0038A6  0E00               	movlw	0
  6424  0038A8  6F67               	movwf	(floorf@u+1)& (0+255),b
  6425  0038AA  0E80               	movlw	128
  6426  0038AC  6F68               	movwf	(floorf@u+2)& (0+255),b
  6427  0038AE  0EBF               	movlw	191
  6428  0038B0  6F69               	movwf	(floorf@u+3)& (0+255),b
  6429  0038B2                     l8254:
  6430                           
  6431                           ; BSR set to: 0
  6432  0038B2  C066  F02D         	movff	floorf@u,?_floorf
  6433  0038B6  C067  F02E         	movff	floorf@u+1,?_floorf+1
  6434  0038BA  C068  F02F         	movff	floorf@u+2,?_floorf+2
  6435  0038BE  C069  F030         	movff	floorf@u+3,?_floorf+3
  6436  0038C2                     l2287:
  6437                           
  6438                           ; BSR set to: 0
  6439  0038C2  0012               	return		;funcret
  6440  0038C4                     __end_of_floorf:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function ___fpclassifyf *****************
  6444 ;; Defined at:
  6445 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  x               4   19[COMRAM] float 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;  u               4   29[COMRAM] struct .
  6450 ;;  e               2   27[COMRAM] int 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  2   19[COMRAM] int 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:       14 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 8
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_efgtoa
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text15
  6475  004932                     __ptext15:
  6476                           	callstack 0
  6477  004932                     ___fpclassifyf:
  6478                           	callstack 16
  6479  004932  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6480  004936  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6481  00493A  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6482  00493E  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6483  004942  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6484  004946  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6485  00494A  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6486  00494E  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6487  004952  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6488  004956  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6489  00495A  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6490  00495E  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6491  004962  0E18               	movlw	24
  6492  004964  EFB9  F024         	goto	u8560
  6493  004968                     u8565:
  6494  004968  90D8               	bcf	status,0,c
  6495  00496A  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6496  00496C  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6497  00496E  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6498  004970  3218               	rrcf	??___fpclassifyf^0,f,c
  6499  004972                     u8560:
  6500  004972  2EE8               	decfsz	wreg,f,c
  6501  004974  EFB4  F024         	goto	u8565
  6502  004978  5018               	movf	??___fpclassifyf^0,w,c
  6503  00497A  6E1C               	movwf	___fpclassifyf@e^0,c
  6504  00497C  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6505  00497E  501C               	movf	___fpclassifyf@e^0,w,c
  6506  004980  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6507  004982  A4D8               	btfss	status,2,c
  6508  004984  EFC6  F024         	goto	u8571
  6509  004988  EFC8  F024         	goto	u8570
  6510  00498C                     u8571:
  6511  00498C  EFE8  F024         	goto	l8206
  6512  004990                     u8570:
  6513  004990  90D8               	bcf	status,0,c
  6514  004992  341E               	rlcf	___fpclassifyf@u^0,w,c
  6515  004994  6E18               	movwf	??___fpclassifyf^0,c
  6516  004996  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6517  004998  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6518  00499A  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6519  00499C  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6520  00499E  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6521  0049A0  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6522  0049A2  5018               	movf	??___fpclassifyf^0,w,c
  6523  0049A4  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6524  0049A6  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6525  0049A8  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6526  0049AA  A4D8               	btfss	status,2,c
  6527  0049AC  EFDA  F024         	goto	u8581
  6528  0049B0  EFDC  F024         	goto	u8580
  6529  0049B4                     u8581:
  6530  0049B4  EFE2  F024         	goto	l8202
  6531  0049B8                     u8580:
  6532  0049B8  0E00               	movlw	0
  6533  0049BA  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6534  0049BC  0E02               	movlw	2
  6535  0049BE  6E14               	movwf	?___fpclassifyf^0,c
  6536  0049C0  EF17  F025         	goto	l2273
  6537  0049C4                     l8202:
  6538  0049C4  0E00               	movlw	0
  6539  0049C6  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6540  0049C8  0E03               	movlw	3
  6541  0049CA  6E14               	movwf	?___fpclassifyf^0,c
  6542  0049CC  EF17  F025         	goto	l2273
  6543  0049D0                     l8206:
  6544  0049D0  281C               	incf	___fpclassifyf@e^0,w,c
  6545  0049D2  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6546  0049D4  A4D8               	btfss	status,2,c
  6547  0049D6  EFEF  F024         	goto	u8591
  6548  0049DA  EFF1  F024         	goto	u8590
  6549  0049DE                     u8591:
  6550  0049DE  EF13  F025         	goto	l8212
  6551  0049E2                     u8590:
  6552  0049E2  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6553  0049E6  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6554  0049EA  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6555  0049EE  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6556  0049F2  0E09               	movlw	9
  6557  0049F4                     u8605:
  6558  0049F4  90D8               	bcf	status,0,c
  6559  0049F6  3618               	rlcf	??___fpclassifyf^0,f,c
  6560  0049F8  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6561  0049FA  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6562  0049FC  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6563  0049FE  2EE8               	decfsz	wreg,f,c
  6564  004A00  EFFA  F024         	goto	u8605
  6565  004A04  5018               	movf	??___fpclassifyf^0,w,c
  6566  004A06  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6567  004A08  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6568  004A0A  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6569  004A0C  B4D8               	btfsc	status,2,c
  6570  004A0E  EF0B  F025         	goto	u8611
  6571  004A12  EF0E  F025         	goto	u8610
  6572  004A16                     u8611:
  6573  004A16  0E01               	movlw	1
  6574  004A18  EF0F  F025         	goto	u8620
  6575  004A1C                     u8610:
  6576  004A1C  0E00               	movlw	0
  6577  004A1E                     u8620:
  6578  004A1E  6E14               	movwf	?___fpclassifyf^0,c
  6579  004A20  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6580  004A22  EF17  F025         	goto	l2273
  6581  004A26                     l8212:
  6582  004A26  0E00               	movlw	0
  6583  004A28  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6584  004A2A  0E04               	movlw	4
  6585  004A2C  6E14               	movwf	?___fpclassifyf^0,c
  6586  004A2E                     l2273:
  6587  004A2E  0012               	return		;funcret
  6588  004A30                     __end_of___fpclassifyf:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function ___flsub *****************
  6592 ;; Defined at:
  6593 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  b               4   25[BANK0 ] int 
  6596 ;;  a               4   29[BANK0 ] int 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;		None
  6599 ;; Return value:  Size  Location     Type
  6600 ;;                  4   25[BANK0 ] int 
  6601 ;; Registers used:
  6602 ;;		wreg, status,2, status,0, cstack
  6603 ;; Tracked objects:
  6604 ;;		On entry : 0/0
  6605 ;;		On exit  : 0/0
  6606 ;;		Unchanged: 0/0
  6607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6608 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;Total ram usage:        8 bytes
  6613 ;; Hardware stack levels used: 1
  6614 ;; Hardware stack levels required when called: 9
  6615 ;; This function calls:
  6616 ;;		___fladd
  6617 ;; This function is called by:
  6618 ;;		_efgtoa
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text16
  6623  0056A6                     __ptext16:
  6624                           	callstack 0
  6625  0056A6                     ___flsub:
  6626                           	callstack 15
  6627  0056A6  0E00               	movlw	0
  6628  0056A8  0100               	movlb	0	; () banked
  6629  0056AA  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6630  0056AC  0E00               	movlw	0
  6631  0056AE  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6632  0056B0  0E00               	movlw	0
  6633  0056B2  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6634  0056B4  0E80               	movlw	128
  6635  0056B6  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6636  0056B8                     
  6637                           ; BSR set to: 0
  6638  0056B8  C079  F06D         	movff	___flsub@b,___fladd@b
  6639  0056BC  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6640  0056C0  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6641  0056C4  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6642  0056C8  C07D  F071         	movff	___flsub@a,___fladd@a
  6643  0056CC  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6644  0056D0  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6645  0056D4  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6646  0056D8  EC22  F011         	call	___fladd	;wreg free
  6647  0056DC  C06D  F079         	movff	?___fladd,?___flsub
  6648  0056E0  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6649  0056E4  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6650  0056E8  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6651  0056EC  0012               	return		;funcret
  6652  0056EE                     __end_of___flsub:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function ___flneg *****************
  6656 ;; Defined at:
  6657 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  f1              4   19[COMRAM] int 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  4   19[COMRAM] int 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;Total ram usage:        4 bytes
  6676 ;; Hardware stack levels used: 1
  6677 ;; Hardware stack levels required when called: 8
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_efgtoa
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           	psect	text17
  6686  00589E                     __ptext17:
  6687                           	callstack 0
  6688  00589E                     ___flneg:
  6689                           	callstack 16
  6690  00589E  5014               	movf	___flneg@f1^0,w,c
  6691  0058A0  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6692  0058A2  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6693  0058A4  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6694  0058A6  B4D8               	btfsc	status,2,c
  6695  0058A8  EF58  F02C         	goto	u8431
  6696  0058AC  EF5A  F02C         	goto	u8430
  6697  0058B0                     u8431:
  6698  0058B0  EF62  F02C         	goto	l8120
  6699  0058B4                     u8430:
  6700  0058B4  0E00               	movlw	0
  6701  0058B6  1A14               	xorwf	___flneg@f1^0,f,c
  6702  0058B8  0E00               	movlw	0
  6703  0058BA  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6704  0058BC  0E00               	movlw	0
  6705  0058BE  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6706  0058C0  0E80               	movlw	128
  6707  0058C2  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6708  0058C4                     l8120:
  6709  0058C4  C014  F014         	movff	___flneg@f1,?___flneg
  6710  0058C8  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6711  0058CC  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6712  0058D0  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6713  0058D4  0012               	return		;funcret
  6714  0058D6                     __end_of___flneg:
  6715                           	callstack 0
  6716                           
  6717 ;; *************** function ___fleq *****************
  6718 ;; Defined at:
  6719 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  ff1             4   19[COMRAM] int 
  6722 ;;  ff2             4   23[COMRAM] int 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;		None               void
  6727 ;; Registers used:
  6728 ;;		wreg, status,2, status,0
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 0/0
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6734 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6738 ;;Total ram usage:       12 bytes
  6739 ;; Hardware stack levels used: 1
  6740 ;; Hardware stack levels required when called: 8
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_efgtoa
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           	psect	text18
  6749  004FC6                     __ptext18:
  6750                           	callstack 0
  6751  004FC6                     ___fleq:
  6752                           	callstack 16
  6753  004FC6  0E00               	movlw	0
  6754  004FC8  1414               	andwf	___fleq@ff1^0,w,c
  6755  004FCA  6E1C               	movwf	??___fleq^0,c
  6756  004FCC  0E00               	movlw	0
  6757  004FCE  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6758  004FD0  6E1D               	movwf	(??___fleq+1)^0,c
  6759  004FD2  0E80               	movlw	128
  6760  004FD4  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6761  004FD6  6E1E               	movwf	(??___fleq+2)^0,c
  6762  004FD8  0E7F               	movlw	127
  6763  004FDA  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6764  004FDC  6E1F               	movwf	(??___fleq+3)^0,c
  6765  004FDE  501C               	movf	??___fleq^0,w,c
  6766  004FE0  101D               	iorwf	(??___fleq+1)^0,w,c
  6767  004FE2  101E               	iorwf	(??___fleq+2)^0,w,c
  6768  004FE4  101F               	iorwf	(??___fleq+3)^0,w,c
  6769  004FE6  A4D8               	btfss	status,2,c
  6770  004FE8  EFF8  F027         	goto	u8351
  6771  004FEC  EFFA  F027         	goto	u8350
  6772  004FF0                     u8351:
  6773  004FF0  EF02  F028         	goto	l8082
  6774  004FF4                     u8350:
  6775  004FF4  0E00               	movlw	0
  6776  004FF6  6E14               	movwf	___fleq@ff1^0,c
  6777  004FF8  0E00               	movlw	0
  6778  004FFA  6E15               	movwf	(___fleq@ff1+1)^0,c
  6779  004FFC  0E00               	movlw	0
  6780  004FFE  6E16               	movwf	(___fleq@ff1+2)^0,c
  6781  005000  0E00               	movlw	0
  6782  005002  6E17               	movwf	(___fleq@ff1+3)^0,c
  6783  005004                     l8082:
  6784  005004  0E00               	movlw	0
  6785  005006  1418               	andwf	___fleq@ff2^0,w,c
  6786  005008  6E1C               	movwf	??___fleq^0,c
  6787  00500A  0E00               	movlw	0
  6788  00500C  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6789  00500E  6E1D               	movwf	(??___fleq+1)^0,c
  6790  005010  0E80               	movlw	128
  6791  005012  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6792  005014  6E1E               	movwf	(??___fleq+2)^0,c
  6793  005016  0E7F               	movlw	127
  6794  005018  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6795  00501A  6E1F               	movwf	(??___fleq+3)^0,c
  6796  00501C  501C               	movf	??___fleq^0,w,c
  6797  00501E  101D               	iorwf	(??___fleq+1)^0,w,c
  6798  005020  101E               	iorwf	(??___fleq+2)^0,w,c
  6799  005022  101F               	iorwf	(??___fleq+3)^0,w,c
  6800  005024  A4D8               	btfss	status,2,c
  6801  005026  EF17  F028         	goto	u8361
  6802  00502A  EF19  F028         	goto	u8360
  6803  00502E                     u8361:
  6804  00502E  EF21  F028         	goto	l8086
  6805  005032                     u8360:
  6806  005032  0E00               	movlw	0
  6807  005034  6E18               	movwf	___fleq@ff2^0,c
  6808  005036  0E00               	movlw	0
  6809  005038  6E19               	movwf	(___fleq@ff2+1)^0,c
  6810  00503A  0E00               	movlw	0
  6811  00503C  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6812  00503E  0E00               	movlw	0
  6813  005040  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6814  005042                     l8086:
  6815  005042  5018               	movf	___fleq@ff2^0,w,c
  6816  005044  1814               	xorwf	___fleq@ff1^0,w,c
  6817  005046  E10F               	bnz	u8370
  6818  005048  5019               	movf	(___fleq@ff2+1)^0,w,c
  6819  00504A  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6820  00504C  E10C               	bnz	u8370
  6821  00504E  501A               	movf	(___fleq@ff2+2)^0,w,c
  6822  005050  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6823  005052  E109               	bnz	u8370
  6824  005054  501B               	movf	(___fleq@ff2+3)^0,w,c
  6825  005056  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6826  005058  B4D8               	btfsc	status,2,c
  6827  00505A  EF31  F028         	goto	u8371
  6828  00505E  EF33  F028         	goto	u8370
  6829  005062                     u8371:
  6830  005062  EF36  F028         	goto	l8090
  6831  005066                     u8370:
  6832  005066  90D8               	bcf	status,0,c
  6833  005068  EF37  F028         	goto	l1657
  6834  00506C                     l8090:
  6835  00506C  80D8               	bsf	status,0,c
  6836  00506E                     l1657:
  6837  00506E  0012               	return		;funcret
  6838  005070                     __end_of___fleq:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function ___fldiv *****************
  6842 ;; Defined at:
  6843 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  b               4   19[COMRAM] int 
  6846 ;;  a               4   23[COMRAM] int 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  grs             4   38[COMRAM] unsigned long 
  6849 ;;  rem             4   31[COMRAM] unsigned long 
  6850 ;;  new_exp         2   36[COMRAM] short 
  6851 ;;  aexp            1   43[COMRAM] unsigned char 
  6852 ;;  bexp            1   42[COMRAM] unsigned char 
  6853 ;;  sign            1   35[COMRAM] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4   19[COMRAM] unsigned char 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;Total ram usage:       25 bytes
  6868 ;; Hardware stack levels used: 1
  6869 ;; Hardware stack levels required when called: 8
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_efgtoa
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text19
  6878  002B56                     __ptext19:
  6879                           	callstack 0
  6880  002B56                     ___fldiv:
  6881                           	callstack 16
  6882  002B56  5017               	movf	(___fldiv@b+3)^0,w,c
  6883  002B58  0B80               	andlw	128
  6884  002B5A  6E24               	movwf	___fldiv@sign^0,c
  6885  002B5C  5017               	movf	(___fldiv@b+3)^0,w,c
  6886  002B5E  2417               	addwf	(___fldiv@b+3)^0,w,c
  6887  002B60  6E2B               	movwf	___fldiv@bexp^0,c
  6888  002B62  AE16               	btfss	(___fldiv@b+2)^0,7,c
  6889  002B64  EFB6  F015         	goto	u7811
  6890  002B68  EFB8  F015         	goto	u7810
  6891  002B6C                     u7811:
  6892  002B6C  EFB9  F015         	goto	l7730
  6893  002B70                     u7810:
  6894  002B70  802B               	bsf	___fldiv@bexp^0,0,c
  6895  002B72                     l7730:
  6896  002B72  502B               	movf	___fldiv@bexp^0,w,c
  6897  002B74  B4D8               	btfsc	status,2,c
  6898  002B76  EFBF  F015         	goto	u7821
  6899  002B7A  EFC1  F015         	goto	u7820
  6900  002B7E                     u7821:
  6901  002B7E  EFD6  F015         	goto	l7740
  6902  002B82                     u7820:
  6903  002B82  282B               	incf	___fldiv@bexp^0,w,c
  6904  002B84  A4D8               	btfss	status,2,c
  6905  002B86  EFC7  F015         	goto	u7831
  6906  002B8A  EFC9  F015         	goto	u7830
  6907  002B8E                     u7831:
  6908  002B8E  EFD1  F015         	goto	l7736
  6909  002B92                     u7830:
  6910  002B92  0E00               	movlw	0
  6911  002B94  6E14               	movwf	___fldiv@b^0,c
  6912  002B96  0E00               	movlw	0
  6913  002B98  6E15               	movwf	(___fldiv@b+1)^0,c
  6914  002B9A  0E00               	movlw	0
  6915  002B9C  6E16               	movwf	(___fldiv@b+2)^0,c
  6916  002B9E  0E00               	movlw	0
  6917  002BA0  6E17               	movwf	(___fldiv@b+3)^0,c
  6918  002BA2                     l7736:
  6919  002BA2  8E16               	bsf	(___fldiv@b+2)^0,7,c
  6920  002BA4  0E00               	movlw	0
  6921  002BA6  6E17               	movwf	(___fldiv@b+3)^0,c
  6922  002BA8  EFDE  F015         	goto	l7742
  6923  002BAC                     l7740:
  6924  002BAC  0E00               	movlw	0
  6925  002BAE  6E14               	movwf	___fldiv@b^0,c
  6926  002BB0  0E00               	movlw	0
  6927  002BB2  6E15               	movwf	(___fldiv@b+1)^0,c
  6928  002BB4  0E00               	movlw	0
  6929  002BB6  6E16               	movwf	(___fldiv@b+2)^0,c
  6930  002BB8  0E00               	movlw	0
  6931  002BBA  6E17               	movwf	(___fldiv@b+3)^0,c
  6932  002BBC                     l7742:
  6933  002BBC  501B               	movf	(___fldiv@a+3)^0,w,c
  6934  002BBE  0B80               	andlw	128
  6935  002BC0  1A24               	xorwf	___fldiv@sign^0,f,c
  6936  002BC2  501B               	movf	(___fldiv@a+3)^0,w,c
  6937  002BC4  241B               	addwf	(___fldiv@a+3)^0,w,c
  6938  002BC6  6E2C               	movwf	___fldiv@aexp^0,c
  6939  002BC8  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  6940  002BCA  EFE9  F015         	goto	u7841
  6941  002BCE  EFEB  F015         	goto	u7840
  6942  002BD2                     u7841:
  6943  002BD2  EFEC  F015         	goto	l7750
  6944  002BD6                     u7840:
  6945  002BD6  802C               	bsf	___fldiv@aexp^0,0,c
  6946  002BD8                     l7750:
  6947  002BD8  502C               	movf	___fldiv@aexp^0,w,c
  6948  002BDA  B4D8               	btfsc	status,2,c
  6949  002BDC  EFF2  F015         	goto	u7851
  6950  002BE0  EFF4  F015         	goto	u7850
  6951  002BE4                     u7851:
  6952  002BE4  EF09  F016         	goto	l7760
  6953  002BE8                     u7850:
  6954  002BE8  282C               	incf	___fldiv@aexp^0,w,c
  6955  002BEA  A4D8               	btfss	status,2,c
  6956  002BEC  EFFA  F015         	goto	u7861
  6957  002BF0  EFFC  F015         	goto	u7860
  6958  002BF4                     u7861:
  6959  002BF4  EF04  F016         	goto	l7756
  6960  002BF8                     u7860:
  6961  002BF8  0E00               	movlw	0
  6962  002BFA  6E18               	movwf	___fldiv@a^0,c
  6963  002BFC  0E00               	movlw	0
  6964  002BFE  6E19               	movwf	(___fldiv@a+1)^0,c
  6965  002C00  0E00               	movlw	0
  6966  002C02  6E1A               	movwf	(___fldiv@a+2)^0,c
  6967  002C04  0E00               	movlw	0
  6968  002C06  6E1B               	movwf	(___fldiv@a+3)^0,c
  6969  002C08                     l7756:
  6970  002C08  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  6971  002C0A  0E00               	movlw	0
  6972  002C0C  6E1B               	movwf	(___fldiv@a+3)^0,c
  6973  002C0E  EF11  F016         	goto	l7762
  6974  002C12                     l7760:
  6975  002C12  0E00               	movlw	0
  6976  002C14  6E18               	movwf	___fldiv@a^0,c
  6977  002C16  0E00               	movlw	0
  6978  002C18  6E19               	movwf	(___fldiv@a+1)^0,c
  6979  002C1A  0E00               	movlw	0
  6980  002C1C  6E1A               	movwf	(___fldiv@a+2)^0,c
  6981  002C1E  0E00               	movlw	0
  6982  002C20  6E1B               	movwf	(___fldiv@a+3)^0,c
  6983  002C22                     l7762:
  6984  002C22  5018               	movf	___fldiv@a^0,w,c
  6985  002C24  1019               	iorwf	(___fldiv@a+1)^0,w,c
  6986  002C26  101A               	iorwf	(___fldiv@a+2)^0,w,c
  6987  002C28  101B               	iorwf	(___fldiv@a+3)^0,w,c
  6988  002C2A  A4D8               	btfss	status,2,c
  6989  002C2C  EF1A  F016         	goto	u7871
  6990  002C30  EF1C  F016         	goto	u7870
  6991  002C34                     u7871:
  6992  002C34  EF34  F016         	goto	l7774
  6993  002C38                     u7870:
  6994  002C38  0E00               	movlw	0
  6995  002C3A  6E14               	movwf	___fldiv@b^0,c
  6996  002C3C  0E00               	movlw	0
  6997  002C3E  6E15               	movwf	(___fldiv@b+1)^0,c
  6998  002C40  0E00               	movlw	0
  6999  002C42  6E16               	movwf	(___fldiv@b+2)^0,c
  7000  002C44  0E00               	movlw	0
  7001  002C46  6E17               	movwf	(___fldiv@b+3)^0,c
  7002  002C48  0E80               	movlw	128
  7003  002C4A  1216               	iorwf	(___fldiv@b+2)^0,f,c
  7004  002C4C  0E7F               	movlw	127
  7005  002C4E  1217               	iorwf	(___fldiv@b+3)^0,f,c
  7006  002C50                     l7768:
  7007  002C50  5024               	movf	___fldiv@sign^0,w,c
  7008  002C52  1217               	iorwf	(___fldiv@b+3)^0,f,c
  7009  002C54  C014  F014         	movff	___fldiv@b,?___fldiv
  7010  002C58  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  7011  002C5C  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  7012  002C60  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  7013  002C64  EF77  F017         	goto	l1980
  7014  002C68                     l7774:
  7015  002C68  502B               	movf	___fldiv@bexp^0,w,c
  7016  002C6A  A4D8               	btfss	status,2,c
  7017  002C6C  EF3A  F016         	goto	u7881
  7018  002C70  EF3C  F016         	goto	u7880
  7019  002C74                     u7881:
  7020  002C74  EF46  F016         	goto	l7782
  7021  002C78                     u7880:
  7022  002C78  0E00               	movlw	0
  7023  002C7A  6E14               	movwf	?___fldiv^0,c
  7024  002C7C  0E00               	movlw	0
  7025  002C7E  6E15               	movwf	(?___fldiv+1)^0,c
  7026  002C80  0E00               	movlw	0
  7027  002C82  6E16               	movwf	(?___fldiv+2)^0,c
  7028  002C84  0E00               	movlw	0
  7029  002C86  6E17               	movwf	(?___fldiv+3)^0,c
  7030  002C88  EF77  F017         	goto	l1980
  7031  002C8C                     l7782:
  7032  002C8C  502C               	movf	___fldiv@aexp^0,w,c
  7033  002C8E  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  7034  002C92  6A1D               	clrf	(??___fldiv+1)^0,c
  7035  002C94  5E1C               	subwf	??___fldiv^0,f,c
  7036  002C96  0E00               	movlw	0
  7037  002C98  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  7038  002C9A  0E7F               	movlw	127
  7039  002C9C  241C               	addwf	??___fldiv^0,w,c
  7040  002C9E  6E25               	movwf	___fldiv@new_exp^0,c
  7041  002CA0  0E00               	movlw	0
  7042  002CA2  201D               	addwfc	(??___fldiv+1)^0,w,c
  7043  002CA4  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7044  002CA6  C014  F020         	movff	___fldiv@b,___fldiv@rem
  7045  002CAA  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  7046  002CAE  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  7047  002CB2  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  7048  002CB6  0E00               	movlw	0
  7049  002CB8  6E14               	movwf	___fldiv@b^0,c
  7050  002CBA  0E00               	movlw	0
  7051  002CBC  6E15               	movwf	(___fldiv@b+1)^0,c
  7052  002CBE  0E00               	movlw	0
  7053  002CC0  6E16               	movwf	(___fldiv@b+2)^0,c
  7054  002CC2  0E00               	movlw	0
  7055  002CC4  6E17               	movwf	(___fldiv@b+3)^0,c
  7056  002CC6  0E00               	movlw	0
  7057  002CC8  6E27               	movwf	___fldiv@grs^0,c
  7058  002CCA  0E00               	movlw	0
  7059  002CCC  6E28               	movwf	(___fldiv@grs+1)^0,c
  7060  002CCE  0E00               	movlw	0
  7061  002CD0  6E29               	movwf	(___fldiv@grs+2)^0,c
  7062  002CD2  0E00               	movlw	0
  7063  002CD4  6E2A               	movwf	(___fldiv@grs+3)^0,c
  7064  002CD6  0E00               	movlw	0
  7065  002CD8  6E2C               	movwf	___fldiv@aexp^0,c
  7066  002CDA  EFA7  F016         	goto	l1982
  7067  002CDE                     l7792:
  7068  002CDE  502C               	movf	___fldiv@aexp^0,w,c
  7069  002CE0  B4D8               	btfsc	status,2,c
  7070  002CE2  EF75  F016         	goto	u7891
  7071  002CE6  EF77  F016         	goto	u7890
  7072  002CEA                     u7891:
  7073  002CEA  EF8E  F016         	goto	l7800
  7074  002CEE                     u7890:
  7075  002CEE  90D8               	bcf	status,0,c
  7076  002CF0  3620               	rlcf	___fldiv@rem^0,f,c
  7077  002CF2  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  7078  002CF4  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  7079  002CF6  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  7080  002CF8  90D8               	bcf	status,0,c
  7081  002CFA  3614               	rlcf	___fldiv@b^0,f,c
  7082  002CFC  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7083  002CFE  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7084  002D00  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7085  002D02  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7086  002D04  EF86  F016         	goto	u7901
  7087  002D08  EF88  F016         	goto	u7900
  7088  002D0C                     u7901:
  7089  002D0C  EF89  F016         	goto	l1985
  7090  002D10                     u7900:
  7091  002D10  8014               	bsf	___fldiv@b^0,0,c
  7092  002D12                     l1985:
  7093  002D12  90D8               	bcf	status,0,c
  7094  002D14  3627               	rlcf	___fldiv@grs^0,f,c
  7095  002D16  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7096  002D18  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7097  002D1A  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7098  002D1C                     l7800:
  7099  002D1C  5018               	movf	___fldiv@a^0,w,c
  7100  002D1E  5C20               	subwf	___fldiv@rem^0,w,c
  7101  002D20  5019               	movf	(___fldiv@a+1)^0,w,c
  7102  002D22  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  7103  002D24  501A               	movf	(___fldiv@a+2)^0,w,c
  7104  002D26  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  7105  002D28  501B               	movf	(___fldiv@a+3)^0,w,c
  7106  002D2A  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  7107  002D2C  A0D8               	btfss	status,0,c
  7108  002D2E  EF9B  F016         	goto	u7911
  7109  002D32  EF9D  F016         	goto	u7910
  7110  002D36                     u7911:
  7111  002D36  EFA6  F016         	goto	l7806
  7112  002D3A                     u7910:
  7113  002D3A  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  7114  002D3C  5018               	movf	___fldiv@a^0,w,c
  7115  002D3E  5E20               	subwf	___fldiv@rem^0,f,c
  7116  002D40  5019               	movf	(___fldiv@a+1)^0,w,c
  7117  002D42  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  7118  002D44  501A               	movf	(___fldiv@a+2)^0,w,c
  7119  002D46  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  7120  002D48  501B               	movf	(___fldiv@a+3)^0,w,c
  7121  002D4A  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  7122  002D4C                     l7806:
  7123  002D4C  2A2C               	incf	___fldiv@aexp^0,f,c
  7124  002D4E                     l1982:
  7125  002D4E  0E19               	movlw	25
  7126  002D50  642C               	cpfsgt	___fldiv@aexp^0,c
  7127  002D52  EFAD  F016         	goto	u7921
  7128  002D56  EFAF  F016         	goto	u7920
  7129  002D5A                     u7921:
  7130  002D5A  EF6F  F016         	goto	l7792
  7131  002D5E                     u7920:
  7132  002D5E  5020               	movf	___fldiv@rem^0,w,c
  7133  002D60  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  7134  002D62  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  7135  002D64  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  7136  002D66  B4D8               	btfsc	status,2,c
  7137  002D68  EFB8  F016         	goto	u7931
  7138  002D6C  EFBA  F016         	goto	u7930
  7139  002D70                     u7931:
  7140  002D70  EFD2  F016         	goto	l7818
  7141  002D74                     u7930:
  7142  002D74  8027               	bsf	___fldiv@grs^0,0,c
  7143  002D76  EFD2  F016         	goto	l7818
  7144  002D7A                     l7812:
  7145  002D7A  90D8               	bcf	status,0,c
  7146  002D7C  3614               	rlcf	___fldiv@b^0,f,c
  7147  002D7E  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7148  002D80  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7149  002D82  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7150  002D84  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7151  002D86  EFC7  F016         	goto	u7941
  7152  002D8A  EFC9  F016         	goto	u7940
  7153  002D8E                     u7941:
  7154  002D8E  EFCA  F016         	goto	l1991
  7155  002D92                     u7940:
  7156  002D92  8014               	bsf	___fldiv@b^0,0,c
  7157  002D94                     l1991:
  7158  002D94  90D8               	bcf	status,0,c
  7159  002D96  3627               	rlcf	___fldiv@grs^0,f,c
  7160  002D98  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7161  002D9A  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7162  002D9C  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7163  002D9E  0625               	decf	___fldiv@new_exp^0,f,c
  7164  002DA0  A0D8               	btfss	status,0,c
  7165  002DA2  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  7166  002DA4                     l7818:
  7167  002DA4  AE16               	btfss	(___fldiv@b+2)^0,7,c
  7168  002DA6  EFD7  F016         	goto	u7951
  7169  002DAA  EFD9  F016         	goto	u7950
  7170  002DAE                     u7951:
  7171  002DAE  EFBD  F016         	goto	l7812
  7172  002DB2                     u7950:
  7173  002DB2  0E00               	movlw	0
  7174  002DB4  6E2C               	movwf	___fldiv@aexp^0,c
  7175  002DB6  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7176  002DB8  EFE0  F016         	goto	u7961
  7177  002DBC  EFE2  F016         	goto	u7960
  7178  002DC0                     u7961:
  7179  002DC0  EF06  F017         	goto	l1993
  7180  002DC4                     u7960:
  7181  002DC4  0EFF               	movlw	255
  7182  002DC6  1427               	andwf	___fldiv@grs^0,w,c
  7183  002DC8  6E1C               	movwf	??___fldiv^0,c
  7184  002DCA  0EFF               	movlw	255
  7185  002DCC  1428               	andwf	(___fldiv@grs+1)^0,w,c
  7186  002DCE  6E1D               	movwf	(??___fldiv+1)^0,c
  7187  002DD0  0EFF               	movlw	255
  7188  002DD2  1429               	andwf	(___fldiv@grs+2)^0,w,c
  7189  002DD4  6E1E               	movwf	(??___fldiv+2)^0,c
  7190  002DD6  0E7F               	movlw	127
  7191  002DD8  142A               	andwf	(___fldiv@grs+3)^0,w,c
  7192  002DDA  6E1F               	movwf	(??___fldiv+3)^0,c
  7193  002DDC  501C               	movf	??___fldiv^0,w,c
  7194  002DDE  101D               	iorwf	(??___fldiv+1)^0,w,c
  7195  002DE0  101E               	iorwf	(??___fldiv+2)^0,w,c
  7196  002DE2  101F               	iorwf	(??___fldiv+3)^0,w,c
  7197  002DE4  B4D8               	btfsc	status,2,c
  7198  002DE6  EFF7  F016         	goto	u7971
  7199  002DEA  EFF9  F016         	goto	u7970
  7200  002DEE                     u7971:
  7201  002DEE  EFFD  F016         	goto	l1994
  7202  002DF2                     u7970:
  7203  002DF2                     l7826:
  7204  002DF2  0E01               	movlw	1
  7205  002DF4  6E2C               	movwf	___fldiv@aexp^0,c
  7206  002DF6  EF06  F017         	goto	l1993
  7207  002DFA                     l1994:
  7208  002DFA  A014               	btfss	___fldiv@b^0,0,c
  7209  002DFC  EF02  F017         	goto	u7981
  7210  002E00  EF04  F017         	goto	u7980
  7211  002E04                     u7981:
  7212  002E04  EF06  F017         	goto	l1993
  7213  002E08                     u7980:
  7214  002E08  EFF9  F016         	goto	l7826
  7215  002E0C                     l1993:
  7216  002E0C  502C               	movf	___fldiv@aexp^0,w,c
  7217  002E0E  B4D8               	btfsc	status,2,c
  7218  002E10  EF0C  F017         	goto	u7991
  7219  002E14  EF0E  F017         	goto	u7990
  7220  002E18                     u7991:
  7221  002E18  EF32  F017         	goto	l7838
  7222  002E1C                     u7990:
  7223  002E1C  0E01               	movlw	1
  7224  002E1E  2614               	addwf	___fldiv@b^0,f,c
  7225  002E20  0E00               	movlw	0
  7226  002E22  2215               	addwfc	(___fldiv@b+1)^0,f,c
  7227  002E24  2216               	addwfc	(___fldiv@b+2)^0,f,c
  7228  002E26  2217               	addwfc	(___fldiv@b+3)^0,f,c
  7229  002E28  A017               	btfss	(___fldiv@b+3)^0,0,c
  7230  002E2A  EF19  F017         	goto	u8001
  7231  002E2E  EF1B  F017         	goto	u8000
  7232  002E32                     u8001:
  7233  002E32  EF32  F017         	goto	l7838
  7234  002E36                     u8000:
  7235  002E36  C014  F01C         	movff	___fldiv@b,??___fldiv
  7236  002E3A  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  7237  002E3E  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  7238  002E42  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  7239  002E46  341F               	rlcf	(??___fldiv+3)^0,w,c
  7240  002E48  321F               	rrcf	(??___fldiv+3)^0,f,c
  7241  002E4A  321E               	rrcf	(??___fldiv+2)^0,f,c
  7242  002E4C  321D               	rrcf	(??___fldiv+1)^0,f,c
  7243  002E4E  321C               	rrcf	??___fldiv^0,f,c
  7244  002E50  C01C  F014         	movff	??___fldiv,___fldiv@b
  7245  002E54  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  7246  002E58  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  7247  002E5C  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  7248  002E60  4A25               	infsnz	___fldiv@new_exp^0,f,c
  7249  002E62  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  7250  002E64                     l7838:
  7251  002E64  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7252  002E66  EF3D  F017         	goto	u8011
  7253  002E6A  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7254  002E6C  E108               	bnz	u8010
  7255  002E6E  2825               	incf	___fldiv@new_exp^0,w,c
  7256  002E70  A0D8               	btfss	status,0,c
  7257  002E72  EF3D  F017         	goto	u8011
  7258  002E76  EF3F  F017         	goto	u8010
  7259  002E7A                     u8011:
  7260  002E7A  EF4A  F017         	goto	l7842
  7261  002E7E                     u8010:
  7262  002E7E  0E00               	movlw	0
  7263  002E80  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7264  002E82  6825               	setf	___fldiv@new_exp^0,c
  7265  002E84  0E00               	movlw	0
  7266  002E86  6E14               	movwf	___fldiv@b^0,c
  7267  002E88  0E00               	movlw	0
  7268  002E8A  6E15               	movwf	(___fldiv@b+1)^0,c
  7269  002E8C  0E00               	movlw	0
  7270  002E8E  6E16               	movwf	(___fldiv@b+2)^0,c
  7271  002E90  0E00               	movlw	0
  7272  002E92  6E17               	movwf	(___fldiv@b+3)^0,c
  7273  002E94                     l7842:
  7274  002E94  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7275  002E96  EF57  F017         	goto	u8020
  7276  002E9A  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7277  002E9C  E106               	bnz	u8021
  7278  002E9E  0425               	decf	___fldiv@new_exp^0,w,c
  7279  002EA0  B0D8               	btfsc	status,0,c
  7280  002EA2  EF55  F017         	goto	u8021
  7281  002EA6  EF57  F017         	goto	u8020
  7282  002EAA                     u8021:
  7283  002EAA  EF65  F017         	goto	l7846
  7284  002EAE                     u8020:
  7285  002EAE  0E00               	movlw	0
  7286  002EB0  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7287  002EB2  0E00               	movlw	0
  7288  002EB4  6E25               	movwf	___fldiv@new_exp^0,c
  7289  002EB6  0E00               	movlw	0
  7290  002EB8  6E14               	movwf	___fldiv@b^0,c
  7291  002EBA  0E00               	movlw	0
  7292  002EBC  6E15               	movwf	(___fldiv@b+1)^0,c
  7293  002EBE  0E00               	movlw	0
  7294  002EC0  6E16               	movwf	(___fldiv@b+2)^0,c
  7295  002EC2  0E00               	movlw	0
  7296  002EC4  6E17               	movwf	(___fldiv@b+3)^0,c
  7297  002EC6  0E00               	movlw	0
  7298  002EC8  6E24               	movwf	___fldiv@sign^0,c
  7299  002ECA                     l7846:
  7300  002ECA  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  7301  002ECE  A02B               	btfss	___fldiv@bexp^0,0,c
  7302  002ED0  EF6C  F017         	goto	u8031
  7303  002ED4  EF6E  F017         	goto	u8030
  7304  002ED8                     u8031:
  7305  002ED8  EF71  F017         	goto	l7852
  7306  002EDC                     u8030:
  7307  002EDC  8E16               	bsf	(___fldiv@b+2)^0,7,c
  7308  002EDE  EF72  F017         	goto	l7854
  7309  002EE2                     l7852:
  7310  002EE2  9E16               	bcf	(___fldiv@b+2)^0,7,c
  7311  002EE4                     l7854:
  7312  002EE4  90D8               	bcf	status,0,c
  7313  002EE6  302B               	rrcf	___fldiv@bexp^0,w,c
  7314  002EE8  6E17               	movwf	(___fldiv@b+3)^0,c
  7315  002EEA  EF28  F016         	goto	l7768
  7316  002EEE                     l1980:
  7317  002EEE  0012               	return		;funcret
  7318  002EF0                     __end_of___fldiv:
  7319                           	callstack 0
  7320                           
  7321 ;; *************** function ___awmod *****************
  7322 ;; Defined at:
  7323 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  dividend        2   19[COMRAM] int 
  7326 ;;  divisor         2   21[COMRAM] int 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  sign            1   24[COMRAM] unsigned char 
  7329 ;;  counter         1   23[COMRAM] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  2   19[COMRAM] int 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7342 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;Total ram usage:        6 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 8
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_efgtoa
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text20
  7354  004F16                     __ptext20:
  7355                           	callstack 0
  7356  004F16                     ___awmod:
  7357                           	callstack 16
  7358  004F16  0E00               	movlw	0
  7359  004F18  6E19               	movwf	___awmod@sign^0,c
  7360  004F1A  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7361  004F1C  EF94  F027         	goto	u8290
  7362  004F20  EF92  F027         	goto	u8291
  7363  004F24                     u8291:
  7364  004F24  EF9A  F027         	goto	l8050
  7365  004F28                     u8290:
  7366  004F28  6C14               	negf	___awmod@dividend^0,c
  7367  004F2A  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7368  004F2C  B0D8               	btfsc	status,0,c
  7369  004F2E  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7370  004F30  0E01               	movlw	1
  7371  004F32  6E19               	movwf	___awmod@sign^0,c
  7372  004F34                     l8050:
  7373  004F34  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7374  004F36  EFA1  F027         	goto	u8300
  7375  004F3A  EF9F  F027         	goto	u8301
  7376  004F3E                     u8301:
  7377  004F3E  EFA5  F027         	goto	l8054
  7378  004F42                     u8300:
  7379  004F42  6C16               	negf	___awmod@divisor^0,c
  7380  004F44  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7381  004F46  B0D8               	btfsc	status,0,c
  7382  004F48  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7383  004F4A                     l8054:
  7384  004F4A  5016               	movf	___awmod@divisor^0,w,c
  7385  004F4C  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7386  004F4E  B4D8               	btfsc	status,2,c
  7387  004F50  EFAC  F027         	goto	u8311
  7388  004F54  EFAE  F027         	goto	u8310
  7389  004F58                     u8311:
  7390  004F58  EFD2  F027         	goto	l8070
  7391  004F5C                     u8310:
  7392  004F5C  0E01               	movlw	1
  7393  004F5E  6E18               	movwf	___awmod@counter^0,c
  7394  004F60  EFB6  F027         	goto	l8060
  7395  004F64                     l8058:
  7396  004F64  90D8               	bcf	status,0,c
  7397  004F66  3616               	rlcf	___awmod@divisor^0,f,c
  7398  004F68  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7399  004F6A  2A18               	incf	___awmod@counter^0,f,c
  7400  004F6C                     l8060:
  7401  004F6C  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7402  004F6E  EFBB  F027         	goto	u8321
  7403  004F72  EFBD  F027         	goto	u8320
  7404  004F76                     u8321:
  7405  004F76  EFB2  F027         	goto	l8058
  7406  004F7A                     u8320:
  7407  004F7A                     l8062:
  7408  004F7A  5016               	movf	___awmod@divisor^0,w,c
  7409  004F7C  5C14               	subwf	___awmod@dividend^0,w,c
  7410  004F7E  5017               	movf	(___awmod@divisor+1)^0,w,c
  7411  004F80  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7412  004F82  A0D8               	btfss	status,0,c
  7413  004F84  EFC6  F027         	goto	u8331
  7414  004F88  EFC8  F027         	goto	u8330
  7415  004F8C                     u8331:
  7416  004F8C  EFCC  F027         	goto	l8066
  7417  004F90                     u8330:
  7418  004F90  5016               	movf	___awmod@divisor^0,w,c
  7419  004F92  5E14               	subwf	___awmod@dividend^0,f,c
  7420  004F94  5017               	movf	(___awmod@divisor+1)^0,w,c
  7421  004F96  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7422  004F98                     l8066:
  7423  004F98  90D8               	bcf	status,0,c
  7424  004F9A  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7425  004F9C  3216               	rrcf	___awmod@divisor^0,f,c
  7426  004F9E  2E18               	decfsz	___awmod@counter^0,f,c
  7427  004FA0  EFBD  F027         	goto	l8062
  7428  004FA4                     l8070:
  7429  004FA4  5019               	movf	___awmod@sign^0,w,c
  7430  004FA6  B4D8               	btfsc	status,2,c
  7431  004FA8  EFD8  F027         	goto	u8341
  7432  004FAC  EFDA  F027         	goto	u8340
  7433  004FB0                     u8341:
  7434  004FB0  EFDE  F027         	goto	l8074
  7435  004FB4                     u8340:
  7436  004FB4  6C14               	negf	___awmod@dividend^0,c
  7437  004FB6  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7438  004FB8  B0D8               	btfsc	status,0,c
  7439  004FBA  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7440  004FBC                     l8074:
  7441  004FBC  C014  F014         	movff	___awmod@dividend,?___awmod
  7442  004FC0  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7443  004FC4  0012               	return		;funcret
  7444  004FC6                     __end_of___awmod:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function _dtoa *****************
  7448 ;; Defined at:
  7449 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7452 ;;		 -> NULL(0), 
  7453 ;;  d               8    2[BANK0 ] long long 
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;  n               8   18[BANK0 ] long long 
  7456 ;;  i               2   26[BANK0 ] int 
  7457 ;;  s               2   16[BANK0 ] int 
  7458 ;;  w               2   14[BANK0 ] int 
  7459 ;;  p               2   12[BANK0 ] int 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  2    0[BANK0 ] int 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7469 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7473 ;;Total ram usage:       36 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; Hardware stack levels required when called: 13
  7476 ;; This function calls:
  7477 ;;		___aodiv
  7478 ;;		___aomod
  7479 ;;		_abs
  7480 ;;		_pad
  7481 ;; This function is called by:
  7482 ;;		_vfpfcnvrt
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text21
  7487  002EF0                     __ptext21:
  7488                           	callstack 0
  7489  002EF0                     _dtoa:
  7490                           	callstack 12
  7491  002EF0                     
  7492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7493  002EF0  C062  F072         	movff	dtoa@d,dtoa@n
  7494  002EF4  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7495  002EF8  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7496  002EFC  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7497  002F00  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7498  002F04  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7499  002F08  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7500  002F0C  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7501  002F10                     
  7502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7503  002F10  0100               	movlb	0	; () banked
  7504  002F12  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7505  002F14  EF8E  F017         	goto	u8781
  7506  002F18  EF91  F017         	goto	u8780
  7507  002F1C                     u8781:
  7508  002F1C  0E01               	movlw	1
  7509  002F1E  EF92  F017         	goto	u8790
  7510  002F22                     u8780:
  7511  002F22  0E00               	movlw	0
  7512  002F24                     u8790:
  7513  002F24  6F70               	movwf	dtoa@s& (0+255),b
  7514  002F26  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7515                           
  7516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7517  002F28  5170               	movf	dtoa@s& (0+255),w,b
  7518  002F2A  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7519  002F2C  B4D8               	btfsc	status,2,c
  7520  002F2E  EF9B  F017         	goto	u8801
  7521  002F32  EF9D  F017         	goto	u8800
  7522  002F36                     u8801:
  7523  002F36  EFAD  F017         	goto	l8264
  7524  002F3A                     u8800:
  7525  002F3A                     
  7526                           ; BSR set to: 0
  7527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7528  002F3A  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7529  002F3C  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7530  002F3E  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7531  002F40  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7532  002F42  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7533  002F44  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7534  002F46  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7535  002F48  6D72               	negf	dtoa@n& (0+255),b
  7536  002F4A  0E00               	movlw	0
  7537  002F4C  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7538  002F4E  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7539  002F50  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7540  002F52  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7541  002F54  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7542  002F56  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7543  002F58  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7544  002F5A                     l8264:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7548  002F5A  BE3D               	btfsc	(_prec+1)^0,7,c
  7549  002F5C  EFB2  F017         	goto	u8811
  7550  002F60  EFB4  F017         	goto	u8810
  7551  002F64                     u8811:
  7552  002F64  EFB5  F017         	goto	l8268
  7553  002F68                     u8810:
  7554  002F68                     
  7555                           ; BSR set to: 0
  7556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7557  002F68  923E               	bcf	_flags^0,1,c
  7558  002F6A                     l8268:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7562  002F6A  BE3D               	btfsc	(_prec+1)^0,7,c
  7563  002F6C  EFC2  F017         	goto	u8820
  7564  002F70  503D               	movf	(_prec+1)^0,w,c
  7565  002F72  E106               	bnz	u8821
  7566  002F74  043C               	decf	_prec^0,w,c
  7567  002F76  B0D8               	btfsc	status,0,c
  7568  002F78  EFC0  F017         	goto	u8821
  7569  002F7C  EFC2  F017         	goto	u8820
  7570  002F80                     u8821:
  7571  002F80  EFC8  F017         	goto	l2126
  7572  002F84                     u8820:
  7573  002F84                     
  7574                           ; BSR set to: 0
  7575  002F84  0E00               	movlw	0
  7576  002F86  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7577  002F88  0E01               	movlw	1
  7578  002F8A  6F6C               	movwf	dtoa@p& (0+255),b
  7579  002F8C  EFCC  F017         	goto	l2128
  7580  002F90                     l2126:
  7581                           
  7582                           ; BSR set to: 0
  7583  002F90  C03C  F06C         	movff	_prec,dtoa@p
  7584  002F94  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7585  002F98                     l2128:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7589  002F98  C03A  F06E         	movff	_width,dtoa@w
  7590  002F9C  C03B  F06F         	movff	_width+1,dtoa@w+1
  7591  002FA0                     
  7592                           ; BSR set to: 0
  7593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7594  002FA0  5170               	movf	dtoa@s& (0+255),w,b
  7595  002FA2  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7596  002FA4  A4D8               	btfss	status,2,c
  7597  002FA6  EFD7  F017         	goto	u8831
  7598  002FAA  EFD9  F017         	goto	u8830
  7599  002FAE                     u8831:
  7600  002FAE  EFE0  F017         	goto	l8276
  7601  002FB2                     u8830:
  7602  002FB2                     
  7603                           ; BSR set to: 0
  7604  002FB2  A43E               	btfss	_flags^0,2,c
  7605  002FB4  EFDE  F017         	goto	u8841
  7606  002FB8  EFE0  F017         	goto	u8840
  7607  002FBC                     u8841:
  7608  002FBC  EFE3  F017         	goto	l8278
  7609  002FC0                     u8840:
  7610  002FC0                     l8276:
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7614  002FC0  076E               	decf	dtoa@w& (0+255),f,b
  7615  002FC2  A0D8               	btfss	status,0,c
  7616  002FC4  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7617  002FC6                     l8278:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7621  002FC6  0E00               	movlw	0
  7622  002FC8  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7623  002FCA  0E4F               	movlw	79
  7624  002FCC  6F7A               	movwf	dtoa@i& (0+255),b
  7625  002FCE                     
  7626                           ; BSR set to: 0
  7627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7628  002FCE  0E00               	movlw	0
  7629  002FD0  0101               	movlb	1	; () banked
  7630  002FD2  6F83               	movwf	(_dbuf+79)& (0+255),b
  7631                           
  7632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7633  002FD4  EF69  F018         	goto	l8292
  7634  002FD8                     l8282:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7638  002FD8  077A               	decf	dtoa@i& (0+255),f,b
  7639  002FDA  A0D8               	btfss	status,0,c
  7640  002FDC  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7641  002FDE                     
  7642                           ; BSR set to: 0
  7643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7644  002FDE  0E34               	movlw	low _dbuf
  7645  002FE0  257A               	addwf	dtoa@i& (0+255),w,b
  7646  002FE2  6ED9               	movwf	fsr2l,c
  7647  002FE4  0E01               	movlw	high _dbuf
  7648  002FE6  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7649  002FE8  6EDA               	movwf	fsr2h,c
  7650  002FEA  C072  F014         	movff	dtoa@n,___aomod@dividend
  7651  002FEE  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7652  002FF2  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7653  002FF6  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7654  002FFA  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7655  002FFE  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7656  003002  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7657  003006  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7658  00300A  0E0A               	movlw	10
  7659  00300C  6E1C               	movwf	___aomod@divisor^0,c
  7660  00300E  0E00               	movlw	0
  7661  003010  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7662  003012  0E00               	movlw	0
  7663  003014  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7664  003016  0E00               	movlw	0
  7665  003018  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7666  00301A  0E00               	movlw	0
  7667  00301C  6E20               	movwf	(___aomod@divisor+4)^0,c
  7668  00301E  0E00               	movlw	0
  7669  003020  6E21               	movwf	(___aomod@divisor+5)^0,c
  7670  003022  0E00               	movlw	0
  7671  003024  6E22               	movwf	(___aomod@divisor+6)^0,c
  7672  003026  0E00               	movlw	0
  7673  003028  6E23               	movwf	(___aomod@divisor+7)^0,c
  7674  00302A  EC96  F020         	call	___aomod	;wreg free
  7675  00302E  C014  F031         	movff	?___aomod,??_dtoa
  7676  003032  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7677  003036  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7678  00303A  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7679  00303E  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7680  003042  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7681  003046  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7682  00304A  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7683  00304E  C031  F026         	movff	??_dtoa,abs@a
  7684  003052  C033  F027         	movff	??_dtoa+2,abs@a+1
  7685  003056  ECBB  F02B         	call	_abs	;wreg free
  7686  00305A  5026               	movf	?_abs^0,w,c
  7687  00305C  0F30               	addlw	48
  7688  00305E  6EDF               	movwf	indf2,c
  7689  003060                     
  7690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7691  003060  0100               	movlb	0	; () banked
  7692  003062  076C               	decf	dtoa@p& (0+255),f,b
  7693  003064  A0D8               	btfss	status,0,c
  7694  003066  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7695  003068                     
  7696                           ; BSR set to: 0
  7697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7698  003068  076E               	decf	dtoa@w& (0+255),f,b
  7699  00306A  A0D8               	btfss	status,0,c
  7700  00306C  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7701  00306E                     
  7702                           ; BSR set to: 0
  7703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7704  00306E  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7705  003072  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7706  003076  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7707  00307A  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7708  00307E  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7709  003082  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7710  003086  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7711  00308A  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7712  00308E  0E0A               	movlw	10
  7713  003090  6E1C               	movwf	___aodiv@divisor^0,c
  7714  003092  0E00               	movlw	0
  7715  003094  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7716  003096  0E00               	movlw	0
  7717  003098  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7718  00309A  0E00               	movlw	0
  7719  00309C  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7720  00309E  0E00               	movlw	0
  7721  0030A0  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7722  0030A2  0E00               	movlw	0
  7723  0030A4  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7724  0030A6  0E00               	movlw	0
  7725  0030A8  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7726  0030AA  0E00               	movlw	0
  7727  0030AC  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7728  0030AE  EC13  F01F         	call	___aodiv	;wreg free
  7729  0030B2  C014  F072         	movff	?___aodiv,dtoa@n
  7730  0030B6  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7731  0030BA  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7732  0030BE  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7733  0030C2  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7734  0030C6  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7735  0030CA  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7736  0030CE  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7737  0030D2                     l8292:
  7738                           
  7739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7740  0030D2  0100               	movlb	0	; () banked
  7741  0030D4  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7742  0030D6  EF75  F018         	goto	u8851
  7743  0030DA  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7744  0030DC  E108               	bnz	u8850
  7745  0030DE  057A               	decf	dtoa@i& (0+255),w,b
  7746  0030E0  A0D8               	btfss	status,0,c
  7747  0030E2  EF75  F018         	goto	u8851
  7748  0030E6  EF77  F018         	goto	u8850
  7749  0030EA                     u8851:
  7750  0030EA  EFA7  F018         	goto	l8302
  7751  0030EE                     u8850:
  7752  0030EE                     
  7753                           ; BSR set to: 0
  7754  0030EE  5172               	movf	dtoa@n& (0+255),w,b
  7755  0030F0  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7756  0030F2  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7757  0030F4  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7758  0030F6  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7759  0030F8  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7760  0030FA  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7761  0030FC  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7762  0030FE  A4D8               	btfss	status,2,c
  7763  003100  EF84  F018         	goto	u8861
  7764  003104  EF86  F018         	goto	u8860
  7765  003108                     u8861:
  7766  003108  EFEC  F017         	goto	l8282
  7767  00310C                     u8860:
  7768  00310C                     
  7769                           ; BSR set to: 0
  7770  00310C  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7771  00310E  EF93  F018         	goto	u8870
  7772  003112  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7773  003114  E106               	bnz	u8871
  7774  003116  056C               	decf	dtoa@p& (0+255),w,b
  7775  003118  B0D8               	btfsc	status,0,c
  7776  00311A  EF91  F018         	goto	u8871
  7777  00311E  EF93  F018         	goto	u8870
  7778  003122                     u8871:
  7779  003122  EFEC  F017         	goto	l8282
  7780  003126                     u8870:
  7781  003126                     
  7782                           ; BSR set to: 0
  7783  003126  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7784  003128  EF9E  F018         	goto	u8881
  7785  00312C  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7786  00312E  E108               	bnz	u8880
  7787  003130  056E               	decf	dtoa@w& (0+255),w,b
  7788  003132  A0D8               	btfss	status,0,c
  7789  003134  EF9E  F018         	goto	u8881
  7790  003138  EFA0  F018         	goto	u8880
  7791  00313C                     u8881:
  7792  00313C  EFA7  F018         	goto	l8302
  7793  003140                     u8880:
  7794  003140                     
  7795                           ; BSR set to: 0
  7796  003140  B23E               	btfsc	_flags^0,1,c
  7797  003142  EFA5  F018         	goto	u8891
  7798  003146  EFA7  F018         	goto	u8890
  7799  00314A                     u8891:
  7800  00314A  EFEC  F017         	goto	l8282
  7801  00314E                     u8890:
  7802  00314E                     l8302:
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7806  00314E  5170               	movf	dtoa@s& (0+255),w,b
  7807  003150  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7808  003152  A4D8               	btfss	status,2,c
  7809  003154  EFAE  F018         	goto	u8901
  7810  003158  EFB0  F018         	goto	u8900
  7811  00315C                     u8901:
  7812  00315C  EFB7  F018         	goto	l8306
  7813  003160                     u8900:
  7814  003160                     
  7815                           ; BSR set to: 0
  7816  003160  A43E               	btfss	_flags^0,2,c
  7817  003162  EFB5  F018         	goto	u8911
  7818  003166  EFB7  F018         	goto	u8910
  7819  00316A                     u8911:
  7820  00316A  EFD6  F018         	goto	l8316
  7821  00316E                     u8910:
  7822  00316E                     l8306:
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7826  00316E  077A               	decf	dtoa@i& (0+255),f,b
  7827  003170  A0D8               	btfss	status,0,c
  7828  003172  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7829  003174                     
  7830                           ; BSR set to: 0
  7831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7832  003174  5170               	movf	dtoa@s& (0+255),w,b
  7833  003176  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7834  003178  A4D8               	btfss	status,2,c
  7835  00317A  EFC1  F018         	goto	u8921
  7836  00317E  EFC3  F018         	goto	u8920
  7837  003182                     u8921:
  7838  003182  EFC9  F018         	goto	l8312
  7839  003186                     u8920:
  7840  003186                     
  7841                           ; BSR set to: 0
  7842  003186  0E00               	movlw	0
  7843  003188  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7844  00318A  0E2B               	movlw	43
  7845  00318C  6F6A               	movwf	_dtoa$3530& (0+255),b
  7846  00318E  EFCD  F018         	goto	l8314
  7847  003192                     l8312:
  7848                           
  7849                           ; BSR set to: 0
  7850  003192  0E00               	movlw	0
  7851  003194  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7852  003196  0E2D               	movlw	45
  7853  003198  6F6A               	movwf	_dtoa$3530& (0+255),b
  7854  00319A                     l8314:
  7855                           
  7856                           ; BSR set to: 0
  7857  00319A  0E34               	movlw	low _dbuf
  7858  00319C  257A               	addwf	dtoa@i& (0+255),w,b
  7859  00319E  6ED9               	movwf	fsr2l,c
  7860  0031A0  0E01               	movlw	high _dbuf
  7861  0031A2  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7862  0031A4  6EDA               	movwf	fsr2h,c
  7863  0031A6  0060  F1AB  FFDF   	movff	_dtoa$3530,indf2
  7864  0031AC                     l8316:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7868  0031AC  C060  F026         	movff	dtoa@fp,pad@fp
  7869  0031B0  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7870  0031B4  0E34               	movlw	low _dbuf
  7871  0031B6  257A               	addwf	dtoa@i& (0+255),w,b
  7872  0031B8  6E28               	movwf	pad@buf^0,c
  7873  0031BA  0E01               	movlw	high _dbuf
  7874  0031BC  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7875  0031BE  6E29               	movwf	(pad@buf+1)^0,c
  7876  0031C0  C06E  F02A         	movff	dtoa@w,pad@p
  7877  0031C4  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7878  0031C8  ECCA  F026         	call	_pad	;wreg free
  7879  0031CC  C026  F060         	movff	?_pad,?_dtoa
  7880  0031D0  C027  F061         	movff	?_pad+1,?_dtoa+1
  7881  0031D4  0012               	return		;funcret
  7882  0031D6                     __end_of_dtoa:
  7883                           	callstack 0
  7884                           
  7885 ;; *************** function _pad *****************
  7886 ;; Defined at:
  7887 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7890 ;;		 -> NULL(0), 
  7891 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7892 ;;		 -> dbuf(80), 
  7893 ;;  p               2   41[COMRAM] int 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  w               2   46[COMRAM] int 
  7896 ;;  i               2   44[COMRAM] int 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  2   37[COMRAM] int 
  7899 ;; Registers used:
  7900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7906 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7909 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7910 ;;Total ram usage:       11 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 12
  7913 ;; This function calls:
  7914 ;;		_fputc
  7915 ;;		_fputs
  7916 ;;		_strlen
  7917 ;; This function is called by:
  7918 ;;		_dtoa
  7919 ;;		_efgtoa
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text22
  7924  004D94                     __ptext22:
  7925                           	callstack 0
  7926  004D94                     _pad:
  7927                           	callstack 12
  7928  004D94                     
  7929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7930  004D94  A03E               	btfss	_flags^0,0,c
  7931  004D96  EFCF  F026         	goto	u8511
  7932  004D9A  EFD1  F026         	goto	u8510
  7933  004D9E                     u8511:
  7934  004D9E  EFDB  F026         	goto	l8172
  7935  004DA2                     u8510:
  7936  004DA2                     
  7937                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7938  004DA2  C028  F01F         	movff	pad@buf,fputs@s
  7939  004DA6  C029  F020         	movff	pad@buf+1,fputs@s+1
  7940  004DAA  C026  F021         	movff	pad@fp,fputs@fp
  7941  004DAE  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7942  004DB2  EC77  F02B         	call	_fputs	;wreg free
  7943  004DB6                     l8172:
  7944                           
  7945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7946  004DB6  BE2B               	btfsc	(pad@p+1)^0,7,c
  7947  004DB8  EFE0  F026         	goto	u8521
  7948  004DBC  EFE2  F026         	goto	u8520
  7949  004DC0                     u8521:
  7950  004DC0  EFE8  F026         	goto	l8176
  7951  004DC4                     u8520:
  7952  004DC4  C02A  F02F         	movff	pad@p,pad@w
  7953  004DC8  C02B  F030         	movff	pad@p+1,pad@w+1
  7954  004DCC  EFEC  F026         	goto	l2115
  7955  004DD0                     l8176:
  7956  004DD0  0E00               	movlw	0
  7957  004DD2  6E30               	movwf	(pad@w+1)^0,c
  7958  004DD4  0E00               	movlw	0
  7959  004DD6  6E2F               	movwf	pad@w^0,c
  7960  004DD8                     l2115:
  7961                           
  7962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7963  004DD8  0E00               	movlw	0
  7964  004DDA  6E2E               	movwf	(pad@i+1)^0,c
  7965  004DDC  0E00               	movlw	0
  7966  004DDE  6E2D               	movwf	pad@i^0,c
  7967                           
  7968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7969  004DE0  EFFE  F026         	goto	l8182
  7970  004DE4                     l8178:
  7971                           
  7972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7973  004DE4  0E00               	movlw	0
  7974  004DE6  6E17               	movwf	(fputc@c+1)^0,c
  7975  004DE8  0E20               	movlw	32
  7976  004DEA  6E16               	movwf	fputc@c^0,c
  7977  004DEC  C026  F018         	movff	pad@fp,fputc@fp
  7978  004DF0  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7979  004DF4  EC8A  F028         	call	_fputc	;wreg free
  7980  004DF8                     
  7981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7982  004DF8  4A2D               	infsnz	pad@i^0,f,c
  7983  004DFA  2A2E               	incf	(pad@i+1)^0,f,c
  7984  004DFC                     l8182:
  7985                           
  7986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7987  004DFC  502F               	movf	pad@w^0,w,c
  7988  004DFE  5C2D               	subwf	pad@i^0,w,c
  7989  004E00  502E               	movf	(pad@i+1)^0,w,c
  7990  004E02  0A80               	xorlw	128
  7991  004E04  6E2C               	movwf	??_pad^0,c
  7992  004E06  5030               	movf	(pad@w+1)^0,w,c
  7993  004E08  0A80               	xorlw	128
  7994  004E0A  582C               	subwfb	??_pad^0,w,c
  7995  004E0C  A0D8               	btfss	status,0,c
  7996  004E0E  EF0B  F027         	goto	u8531
  7997  004E12  EF0D  F027         	goto	u8530
  7998  004E16                     u8531:
  7999  004E16  EFF2  F026         	goto	l8178
  8000  004E1A                     u8530:
  8001  004E1A                     
  8002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8003  004E1A  B03E               	btfsc	_flags^0,0,c
  8004  004E1C  EF12  F027         	goto	u8541
  8005  004E20  EF14  F027         	goto	u8540
  8006  004E24                     u8541:
  8007  004E24  EF1E  F027         	goto	l8186
  8008  004E28                     u8540:
  8009  004E28                     
  8010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8011  004E28  C028  F01F         	movff	pad@buf,fputs@s
  8012  004E2C  C029  F020         	movff	pad@buf+1,fputs@s+1
  8013  004E30  C026  F021         	movff	pad@fp,fputs@fp
  8014  004E34  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8015  004E38  EC77  F02B         	call	_fputs	;wreg free
  8016  004E3C                     l8186:
  8017                           
  8018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8019  004E3C  C028  F014         	movff	pad@buf,strlen@s
  8020  004E40  C029  F015         	movff	pad@buf+1,strlen@s+1
  8021  004E44  ECDB  F02B         	call	_strlen	;wreg free
  8022  004E48  502F               	movf	pad@w^0,w,c
  8023  004E4A  2414               	addwf	?_strlen^0,w,c
  8024  004E4C  6E26               	movwf	?_pad^0,c
  8025  004E4E  5030               	movf	(pad@w+1)^0,w,c
  8026  004E50  2015               	addwfc	(?_strlen+1)^0,w,c
  8027  004E52  6E27               	movwf	(?_pad+1)^0,c
  8028  004E54  0012               	return		;funcret
  8029  004E56                     __end_of_pad:
  8030                           	callstack 0
  8031                           
  8032 ;; *************** function _strlen *****************
  8033 ;; Defined at:
  8034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8037 ;;		 -> dbuf(80), 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  a               2   21[COMRAM] PTR const unsigned char 
  8040 ;;		 -> dbuf(80), 
  8041 ;; Return value:  Size  Location     Type
  8042 ;;                  2   19[COMRAM] unsigned int 
  8043 ;; Registers used:
  8044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8045 ;; Tracked objects:
  8046 ;;		On entry : 0/0
  8047 ;;		On exit  : 0/0
  8048 ;;		Unchanged: 0/0
  8049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;Total ram usage:        4 bytes
  8055 ;; Hardware stack levels used: 1
  8056 ;; Hardware stack levels required when called: 8
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_pad
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text23
  8065  0057B6                     __ptext23:
  8066                           	callstack 0
  8067  0057B6                     _strlen:
  8068                           	callstack 15
  8069  0057B6  C014  F016         	movff	strlen@s,strlen@a
  8070  0057BA  C015  F017         	movff	strlen@s+1,strlen@a+1
  8071  0057BE  EFE3  F02B         	goto	l7634
  8072  0057C2                     l7632:
  8073  0057C2  4A14               	infsnz	strlen@s^0,f,c
  8074  0057C4  2A15               	incf	(strlen@s+1)^0,f,c
  8075  0057C6                     l7634:
  8076  0057C6  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8077  0057CC  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8078  0057D2  50DF               	movf	indf2,w,c
  8079  0057D4  A4D8               	btfss	status,2,c
  8080  0057D6  EFEF  F02B         	goto	u7651
  8081  0057DA  EFF1  F02B         	goto	u7650
  8082  0057DE                     u7651:
  8083  0057DE  EFE1  F02B         	goto	l7632
  8084  0057E2                     u7650:
  8085  0057E2  5016               	movf	strlen@a^0,w,c
  8086  0057E4  5C14               	subwf	strlen@s^0,w,c
  8087  0057E6  6E14               	movwf	?_strlen^0,c
  8088  0057E8  5017               	movf	(strlen@a+1)^0,w,c
  8089  0057EA  5815               	subwfb	(strlen@s+1)^0,w,c
  8090  0057EC  6E15               	movwf	(?_strlen+1)^0,c
  8091  0057EE  0012               	return		;funcret
  8092  0057F0                     __end_of_strlen:
  8093                           	callstack 0
  8094                           
  8095 ;; *************** function _fputs *****************
  8096 ;; Defined at:
  8097 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8100 ;;		 -> dbuf(80), 
  8101 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8102 ;;		 -> NULL(0), 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  i               2   35[COMRAM] int 
  8105 ;;  c               1   34[COMRAM] unsigned char 
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  2   30[COMRAM] int 
  8108 ;; Registers used:
  8109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8116 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;Total ram usage:        7 bytes
  8120 ;; Hardware stack levels used: 1
  8121 ;; Hardware stack levels required when called: 11
  8122 ;; This function calls:
  8123 ;;		_fputc
  8124 ;; This function is called by:
  8125 ;;		_pad
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text24
  8130  0056EE                     __ptext24:
  8131                           	callstack 0
  8132  0056EE                     _fputs:
  8133                           	callstack 12
  8134  0056EE  0E00               	movlw	0
  8135  0056F0  6E25               	movwf	(fputs@i+1)^0,c
  8136  0056F2  0E00               	movlw	0
  8137  0056F4  6E24               	movwf	fputs@i^0,c
  8138  0056F6  EF88  F02B         	goto	l7628
  8139  0056FA                     l7624:
  8140  0056FA  C023  F016         	movff	fputs@c,fputc@c
  8141  0056FE  6A17               	clrf	(fputc@c+1)^0,c
  8142  005700  C021  F018         	movff	fputs@fp,fputc@fp
  8143  005704  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8144  005708  EC8A  F028         	call	_fputc	;wreg free
  8145  00570C  4A24               	infsnz	fputs@i^0,f,c
  8146  00570E  2A25               	incf	(fputs@i+1)^0,f,c
  8147  005710                     l7628:
  8148  005710  5024               	movf	fputs@i^0,w,c
  8149  005712  241F               	addwf	fputs@s^0,w,c
  8150  005714  6ED9               	movwf	fsr2l,c
  8151  005716  5025               	movf	(fputs@i+1)^0,w,c
  8152  005718  2020               	addwfc	(fputs@s+1)^0,w,c
  8153  00571A  6EDA               	movwf	fsr2h,c
  8154  00571C  50DF               	movf	indf2,w,c
  8155  00571E  6E23               	movwf	fputs@c^0,c
  8156  005720  5023               	movf	fputs@c^0,w,c
  8157  005722  A4D8               	btfss	status,2,c
  8158  005724  EF96  F02B         	goto	u7641
  8159  005728  EF98  F02B         	goto	u7640
  8160  00572C                     u7641:
  8161  00572C  EF7D  F02B         	goto	l7624
  8162  005730                     u7640:
  8163  005730  0012               	return		;funcret
  8164  005732                     __end_of_fputs:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _fputc *****************
  8168 ;; Defined at:
  8169 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  c               2   21[COMRAM] int 
  8172 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8173 ;;		 -> NULL(0), 
  8174 ;; Auto vars:     Size  Location     Type
  8175 ;;		None
  8176 ;; Return value:  Size  Location     Type
  8177 ;;                  2   21[COMRAM] int 
  8178 ;; Registers used:
  8179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8180 ;; Tracked objects:
  8181 ;;		On entry : 0/0
  8182 ;;		On exit  : 0/0
  8183 ;;		Unchanged: 0/0
  8184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8187 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8188 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;Total ram usage:        9 bytes
  8190 ;; Hardware stack levels used: 1
  8191 ;; Hardware stack levels required when called: 10
  8192 ;; This function calls:
  8193 ;;		_putch
  8194 ;; This function is called by:
  8195 ;;		_pad
  8196 ;;		_vfpfcnvrt
  8197 ;;		_fputs
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text25
  8202  005114                     __ptext25:
  8203                           	callstack 0
  8204  005114                     _fputc:
  8205                           	callstack 15
  8206  005114  5018               	movf	fputc@fp^0,w,c
  8207  005116  1019               	iorwf	(fputc@fp+1)^0,w,c
  8208  005118  B4D8               	btfsc	status,2,c
  8209  00511A  EF91  F028         	goto	u7211
  8210  00511E  EF93  F028         	goto	u7210
  8211  005122                     u7211:
  8212  005122  EF9C  F028         	goto	l7410
  8213  005126                     u7210:
  8214  005126  5018               	movf	fputc@fp^0,w,c
  8215  005128  1019               	iorwf	(fputc@fp+1)^0,w,c
  8216  00512A  A4D8               	btfss	status,2,c
  8217  00512C  EF9A  F028         	goto	u7221
  8218  005130  EF9C  F028         	goto	u7220
  8219  005134                     u7221:
  8220  005134  EFA1  F028         	goto	l7412
  8221  005138                     u7220:
  8222  005138                     l7410:
  8223  005138  5016               	movf	fputc@c^0,w,c
  8224  00513A  EC1C  F02F         	call	_putch
  8225  00513E  EFD4  F028         	goto	l2312
  8226  005142                     l7412:
  8227  005142  EE20 F004          	lfsr	2,4
  8228  005146  5018               	movf	fputc@fp^0,w,c
  8229  005148  26D9               	addwf	fsr2l,f,c
  8230  00514A  5019               	movf	(fputc@fp+1)^0,w,c
  8231  00514C  22DA               	addwfc	fsr2h,f,c
  8232  00514E  50DE               	movf	postinc2,w,c
  8233  005150  10DE               	iorwf	postinc2,w,c
  8234  005152  B4D8               	btfsc	status,2,c
  8235  005154  EFAE  F028         	goto	u7231
  8236  005158  EFB0  F028         	goto	u7230
  8237  00515C                     u7231:
  8238  00515C  EFCB  F028         	goto	l7416
  8239  005160                     u7230:
  8240  005160  EE20 F004          	lfsr	2,4
  8241  005164  5018               	movf	fputc@fp^0,w,c
  8242  005166  26D9               	addwf	fsr2l,f,c
  8243  005168  5019               	movf	(fputc@fp+1)^0,w,c
  8244  00516A  22DA               	addwfc	fsr2h,f,c
  8245  00516C  EE10 F002          	lfsr	1,2
  8246  005170  5018               	movf	fputc@fp^0,w,c
  8247  005172  26E1               	addwf	fsr1l,f,c
  8248  005174  5019               	movf	(fputc@fp+1)^0,w,c
  8249  005176  22E2               	addwfc	fsr1h,f,c
  8250  005178  50DE               	movf	postinc2,w,c
  8251  00517A  5CE6               	subwf	postinc1,w,c
  8252  00517C  50E6               	movf	postinc1,w,c
  8253  00517E  0A80               	xorlw	128
  8254  005180  6E1E               	movwf	(??_fputc+4)^0,c
  8255  005182  50DE               	movf	postinc2,w,c
  8256  005184  0A80               	xorlw	128
  8257  005186  581E               	subwfb	(??_fputc+4)^0,w,c
  8258  005188  B0D8               	btfsc	status,0,c
  8259  00518A  EFC9  F028         	goto	u7241
  8260  00518E  EFCB  F028         	goto	u7240
  8261  005192                     u7241:
  8262  005192  EFD4  F028         	goto	l2312
  8263  005196                     u7240:
  8264  005196                     l7416:
  8265  005196  EE20 F002          	lfsr	2,2
  8266  00519A  5018               	movf	fputc@fp^0,w,c
  8267  00519C  26D9               	addwf	fsr2l,f,c
  8268  00519E  5019               	movf	(fputc@fp+1)^0,w,c
  8269  0051A0  22DA               	addwfc	fsr2h,f,c
  8270  0051A2  2ADE               	incf	postinc2,f,c
  8271  0051A4  0E00               	movlw	0
  8272  0051A6  22DD               	addwfc	postdec2,f,c
  8273  0051A8                     l2312:
  8274  0051A8  0012               	return		;funcret
  8275  0051AA                     __end_of_fputc:
  8276                           	callstack 0
  8277                           
  8278 ;; *************** function _putch *****************
  8279 ;; Defined at:
  8280 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  txData          1    wreg     unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  txData          1   20[COMRAM] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;Total ram usage:        1 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 9
  8301 ;; This function calls:
  8302 ;;		_UART1_Write
  8303 ;; This function is called by:
  8304 ;;		_fputc
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text26
  8309  005E38                     __ptext26:
  8310                           	callstack 0
  8311  005E38                     _putch:
  8312                           	callstack 15
  8313                           
  8314                           ;incstack = 0
  8315                           ;putch@txData stored from wreg
  8316  005E38  6E15               	movwf	putch@txData^0,c
  8317  005E3A                     
  8318                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8319  005E3A  5015               	movf	putch@txData^0,w,c
  8320  005E3C  EC38  F02A         	call	_UART1_Write
  8321  005E40  0012               	return		;funcret
  8322  005E42                     __end_of_putch:
  8323                           	callstack 0
  8324                           
  8325 ;; *************** function _UART1_Write *****************
  8326 ;; Defined at:
  8327 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  txData          1    wreg     unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  txData          1   19[COMRAM] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      void 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8345 ;;Total ram usage:        1 bytes
  8346 ;; Hardware stack levels used: 1
  8347 ;; Hardware stack levels required when called: 8
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_putch
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text27
  8356  005470                     __ptext27:
  8357                           	callstack 0
  8358  005470                     _UART1_Write:
  8359                           	callstack 15
  8360                           
  8361                           ;incstack = 0
  8362                           ;UART1_Write@txData stored from wreg
  8363  005470  6E14               	movwf	UART1_Write@txData^0,c
  8364  005472                     l7388:
  8365                           
  8366                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8367  005472  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8368  005474  B4D8               	btfsc	status,2,c
  8369  005476  EF3F  F02A         	goto	u7181
  8370  00547A  EF41  F02A         	goto	u7180
  8371  00547E                     u7181:
  8372  00547E  EF39  F02A         	goto	l7388
  8373  005482                     u7180:
  8374  005482                     
  8375                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8376  005482  0139               	movlb	57	; () banked
  8377  005484  B993               	btfsc	147,4,b	;volatile
  8378  005486  EF47  F02A         	goto	u7191
  8379  00548A  EF49  F02A         	goto	u7190
  8380  00548E                     u7191:
  8381  00548E  EF4E  F02A         	goto	l309
  8382  005492                     u7190:
  8383  005492                     
  8384                           ; BSR set to: 57
  8385                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8386  005492  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8387                           
  8388                           ;mcc_generated_files/uart1.c: 211:     }
  8389  005498  EF64  F02A         	goto	l7402
  8390  00549C                     l309:
  8391                           
  8392                           ; BSR set to: 57
  8393                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8394  00549C  9993               	bcf	147,4,b	;volatile
  8395  00549E                     
  8396                           ; BSR set to: 57
  8397                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8398  00549E  0E10               	movlw	low _uart1TxBuffer
  8399  0054A0  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8400  0054A2  6ED9               	movwf	fsr2l,c
  8401  0054A4  6ADA               	clrf	fsr2h,c
  8402  0054A6  0E01               	movlw	high _uart1TxBuffer
  8403  0054A8  22DA               	addwfc	fsr2h,f,c
  8404  0054AA  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8405  0054B0                     
  8406                           ; BSR set to: 57
  8407  0054B0  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8408  0054B2                     
  8409                           ; BSR set to: 57
  8410                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8411  0054B2  0E07               	movlw	7
  8412  0054B4  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8413  0054B6  EF5F  F02A         	goto	u7201
  8414  0054BA  EF61  F02A         	goto	u7200
  8415  0054BE                     u7201:
  8416  0054BE  EF63  F02A         	goto	l7400
  8417  0054C2                     u7200:
  8418  0054C2                     
  8419                           ; BSR set to: 57
  8420                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8421  0054C2  0E00               	movlw	0
  8422  0054C4  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8423  0054C6                     l7400:
  8424                           
  8425                           ; BSR set to: 57
  8426                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8427  0054C6  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8428  0054C8                     l7402:
  8429                           
  8430                           ; BSR set to: 57
  8431                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8432  0054C8  8993               	bsf	147,4,b	;volatile
  8433  0054CA                     
  8434                           ; BSR set to: 57
  8435  0054CA  0012               	return		;funcret
  8436  0054CC                     __end_of_UART1_Write:
  8437                           	callstack 0
  8438                           
  8439 ;; *************** function _abs *****************
  8440 ;; Defined at:
  8441 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;  a               2   37[COMRAM] int 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  2   37[COMRAM] int 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2, status,0
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;Total ram usage:        4 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; Hardware stack levels required when called: 8
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_dtoa
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text28
  8470  005776                     __ptext28:
  8471                           	callstack 0
  8472  005776                     _abs:
  8473                           	callstack 16
  8474  005776  BE27               	btfsc	(abs@a+1)^0,7,c
  8475  005778  EFC8  F02B         	goto	u8550
  8476  00577C  5027               	movf	(abs@a+1)^0,w,c
  8477  00577E  E106               	bnz	u8551
  8478  005780  0426               	decf	abs@a^0,w,c
  8479  005782  B0D8               	btfsc	status,0,c
  8480  005784  EFC6  F02B         	goto	u8551
  8481  005788  EFC8  F02B         	goto	u8550
  8482  00578C                     u8551:
  8483  00578C  EFD6  F02B         	goto	l2278
  8484  005790                     u8550:
  8485  005790  C026  F028         	movff	abs@a,??_abs
  8486  005794  C027  F029         	movff	abs@a+1,??_abs+1
  8487  005798  1E28               	comf	??_abs^0,f,c
  8488  00579A  1E29               	comf	(??_abs+1)^0,f,c
  8489  00579C  4A28               	infsnz	??_abs^0,f,c
  8490  00579E  2A29               	incf	(??_abs+1)^0,f,c
  8491  0057A0  C028  F026         	movff	??_abs,?_abs
  8492  0057A4  C029  F027         	movff	??_abs+1,?_abs+1
  8493  0057A8  EFDA  F02B         	goto	l2281
  8494  0057AC                     l2278:
  8495  0057AC  C026  F026         	movff	abs@a,?_abs
  8496  0057B0  C027  F027         	movff	abs@a+1,?_abs+1
  8497  0057B4                     l2281:
  8498  0057B4  0012               	return		;funcret
  8499  0057B6                     __end_of_abs:
  8500                           	callstack 0
  8501                           
  8502 ;; *************** function ___aomod *****************
  8503 ;; Defined at:
  8504 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  dividend        8   19[COMRAM] long long 
  8507 ;;  divisor         8   27[COMRAM] long long 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  sign            1   36[COMRAM] unsigned char 
  8510 ;;  counter         1   35[COMRAM] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  8   19[COMRAM] long long 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8520 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8523 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8524 ;;Total ram usage:       18 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 8
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_dtoa
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           	psect	text29
  8535  00412C                     __ptext29:
  8536                           	callstack 0
  8537  00412C                     ___aomod:
  8538                           	callstack 16
  8539  00412C  0E00               	movlw	0
  8540  00412E  6E25               	movwf	___aomod@sign^0,c
  8541  004130  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8542  004132  EF9F  F020         	goto	u7750
  8543  004136  EF9D  F020         	goto	u7751
  8544  00413A                     u7751:
  8545  00413A  EFB1  F020         	goto	l7696
  8546  00413E                     u7750:
  8547  00413E  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8548  004140  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8549  004142  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8550  004144  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8551  004146  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8552  004148  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8553  00414A  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8554  00414C  6C14               	negf	___aomod@dividend^0,c
  8555  00414E  0E00               	movlw	0
  8556  004150  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8557  004152  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8558  004154  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8559  004156  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8560  004158  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8561  00415A  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8562  00415C  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8563  00415E  0E01               	movlw	1
  8564  004160  6E25               	movwf	___aomod@sign^0,c
  8565  004162                     l7696:
  8566  004162  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8567  004164  EFB8  F020         	goto	u7760
  8568  004168  EFB6  F020         	goto	u7761
  8569  00416C                     u7761:
  8570  00416C  EFC8  F020         	goto	l7700
  8571  004170                     u7760:
  8572  004170  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8573  004172  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8574  004174  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8575  004176  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8576  004178  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8577  00417A  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8578  00417C  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8579  00417E  6C1C               	negf	___aomod@divisor^0,c
  8580  004180  0E00               	movlw	0
  8581  004182  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8582  004184  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8583  004186  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8584  004188  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8585  00418A  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8586  00418C  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8587  00418E  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8588  004190                     l7700:
  8589  004190  501C               	movf	___aomod@divisor^0,w,c
  8590  004192  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8591  004194  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8592  004196  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8593  004198  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8594  00419A  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8595  00419C  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8596  00419E  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8597  0041A0  B4D8               	btfsc	status,2,c
  8598  0041A2  EFD5  F020         	goto	u7771
  8599  0041A6  EFD7  F020         	goto	u7770
  8600  0041AA                     u7771:
  8601  0041AA  EF1F  F021         	goto	l7716
  8602  0041AE                     u7770:
  8603  0041AE  0E01               	movlw	1
  8604  0041B0  6E24               	movwf	___aomod@counter^0,c
  8605  0041B2  EFE5  F020         	goto	l7706
  8606  0041B6                     l7704:
  8607  0041B6  90D8               	bcf	status,0,c
  8608  0041B8  361C               	rlcf	___aomod@divisor^0,f,c
  8609  0041BA  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8610  0041BC  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8611  0041BE  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8612  0041C0  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8613  0041C2  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8614  0041C4  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8615  0041C6  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8616  0041C8  2A24               	incf	___aomod@counter^0,f,c
  8617  0041CA                     l7706:
  8618  0041CA  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8619  0041CC  EFEA  F020         	goto	u7781
  8620  0041D0  EFEC  F020         	goto	u7780
  8621  0041D4                     u7781:
  8622  0041D4  EFDB  F020         	goto	l7704
  8623  0041D8                     u7780:
  8624  0041D8                     l7708:
  8625  0041D8  501C               	movf	___aomod@divisor^0,w,c
  8626  0041DA  5C14               	subwf	___aomod@dividend^0,w,c
  8627  0041DC  501D               	movf	(___aomod@divisor+1)^0,w,c
  8628  0041DE  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8629  0041E0  501E               	movf	(___aomod@divisor+2)^0,w,c
  8630  0041E2  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8631  0041E4  501F               	movf	(___aomod@divisor+3)^0,w,c
  8632  0041E6  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8633  0041E8  5020               	movf	(___aomod@divisor+4)^0,w,c
  8634  0041EA  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8635  0041EC  5021               	movf	(___aomod@divisor+5)^0,w,c
  8636  0041EE  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8637  0041F0  5022               	movf	(___aomod@divisor+6)^0,w,c
  8638  0041F2  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8639  0041F4  5023               	movf	(___aomod@divisor+7)^0,w,c
  8640  0041F6  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8641  0041F8  A0D8               	btfss	status,0,c
  8642  0041FA  EF01  F021         	goto	u7791
  8643  0041FE  EF03  F021         	goto	u7790
  8644  004202                     u7791:
  8645  004202  EF13  F021         	goto	l7712
  8646  004206                     u7790:
  8647  004206  501C               	movf	___aomod@divisor^0,w,c
  8648  004208  5E14               	subwf	___aomod@dividend^0,f,c
  8649  00420A  501D               	movf	(___aomod@divisor+1)^0,w,c
  8650  00420C  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8651  00420E  501E               	movf	(___aomod@divisor+2)^0,w,c
  8652  004210  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8653  004212  501F               	movf	(___aomod@divisor+3)^0,w,c
  8654  004214  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8655  004216  5020               	movf	(___aomod@divisor+4)^0,w,c
  8656  004218  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8657  00421A  5021               	movf	(___aomod@divisor+5)^0,w,c
  8658  00421C  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8659  00421E  5022               	movf	(___aomod@divisor+6)^0,w,c
  8660  004220  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8661  004222  5023               	movf	(___aomod@divisor+7)^0,w,c
  8662  004224  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8663  004226                     l7712:
  8664  004226  90D8               	bcf	status,0,c
  8665  004228  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8666  00422A  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8667  00422C  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8668  00422E  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8669  004230  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8670  004232  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8671  004234  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8672  004236  321C               	rrcf	___aomod@divisor^0,f,c
  8673  004238  2E24               	decfsz	___aomod@counter^0,f,c
  8674  00423A  EFEC  F020         	goto	l7708
  8675  00423E                     l7716:
  8676  00423E  5025               	movf	___aomod@sign^0,w,c
  8677  004240  B4D8               	btfsc	status,2,c
  8678  004242  EF25  F021         	goto	u7801
  8679  004246  EF27  F021         	goto	u7800
  8680  00424A                     u7801:
  8681  00424A  EF37  F021         	goto	l7720
  8682  00424E                     u7800:
  8683  00424E  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8684  004250  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8685  004252  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8686  004254  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8687  004256  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8688  004258  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8689  00425A  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8690  00425C  6C14               	negf	___aomod@dividend^0,c
  8691  00425E  0E00               	movlw	0
  8692  004260  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8693  004262  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8694  004264  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8695  004266  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8696  004268  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8697  00426A  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8698  00426C  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8699  00426E                     l7720:
  8700  00426E  C014  F014         	movff	___aomod@dividend,?___aomod
  8701  004272  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8702  004276  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8703  00427A  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8704  00427E  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8705  004282  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8706  004286  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8707  00428A  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8708  00428E  0012               	return		;funcret
  8709  004290                     __end_of___aomod:
  8710                           	callstack 0
  8711                           
  8712 ;; *************** function ___aodiv *****************
  8713 ;; Defined at:
  8714 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  dividend        8   19[COMRAM] long long 
  8717 ;;  divisor         8   27[COMRAM] long long 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  quotient        8   37[COMRAM] long long 
  8720 ;;  sign            1   36[COMRAM] unsigned char 
  8721 ;;  counter         1   35[COMRAM] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  8   19[COMRAM] long long 
  8724 ;; Registers used:
  8725 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8731 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8732 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;Total ram usage:       26 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 8
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_dtoa
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text30
  8746  003E26                     __ptext30:
  8747                           	callstack 0
  8748  003E26                     ___aodiv:
  8749                           	callstack 16
  8750  003E26  0E00               	movlw	0
  8751  003E28  6E25               	movwf	___aodiv@sign^0,c
  8752  003E2A  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8753  003E2C  EF1C  F01F         	goto	u7680
  8754  003E30  EF1A  F01F         	goto	u7681
  8755  003E34                     u7681:
  8756  003E34  EF2E  F01F         	goto	l7652
  8757  003E38                     u7680:
  8758  003E38  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8759  003E3A  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8760  003E3C  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8761  003E3E  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8762  003E40  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8763  003E42  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8764  003E44  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8765  003E46  6C1C               	negf	___aodiv@divisor^0,c
  8766  003E48  0E00               	movlw	0
  8767  003E4A  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8768  003E4C  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8769  003E4E  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8770  003E50  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8771  003E52  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8772  003E54  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8773  003E56  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8774  003E58  0E01               	movlw	1
  8775  003E5A  6E25               	movwf	___aodiv@sign^0,c
  8776  003E5C                     l7652:
  8777  003E5C  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8778  003E5E  EF35  F01F         	goto	u7690
  8779  003E62  EF33  F01F         	goto	u7691
  8780  003E66                     u7691:
  8781  003E66  EF47  F01F         	goto	l7658
  8782  003E6A                     u7690:
  8783  003E6A  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8784  003E6C  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8785  003E6E  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8786  003E70  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8787  003E72  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8788  003E74  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8789  003E76  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8790  003E78  6C14               	negf	___aodiv@dividend^0,c
  8791  003E7A  0E00               	movlw	0
  8792  003E7C  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8793  003E7E  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8794  003E80  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8795  003E82  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8796  003E84  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8797  003E86  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8798  003E88  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8799  003E8A  0E01               	movlw	1
  8800  003E8C  1A25               	xorwf	___aodiv@sign^0,f,c
  8801  003E8E                     l7658:
  8802  003E8E  EE20  F026         	lfsr	2,___aodiv@quotient
  8803  003E92  0E07               	movlw	7
  8804  003E94                     u7701:
  8805  003E94  6ADE               	clrf	postinc2,c
  8806  003E96  06E8               	decf	wreg,f,c
  8807  003E98  E2FD               	bc	u7701
  8808  003E9A  501C               	movf	___aodiv@divisor^0,w,c
  8809  003E9C  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8810  003E9E  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8811  003EA0  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8812  003EA2  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8813  003EA4  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8814  003EA6  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8815  003EA8  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8816  003EAA  B4D8               	btfsc	status,2,c
  8817  003EAC  EF5A  F01F         	goto	u7711
  8818  003EB0  EF5C  F01F         	goto	u7710
  8819  003EB4                     u7711:
  8820  003EB4  EFAE  F01F         	goto	l7680
  8821  003EB8                     u7710:
  8822  003EB8  0E01               	movlw	1
  8823  003EBA  6E24               	movwf	___aodiv@counter^0,c
  8824  003EBC  EF6A  F01F         	goto	l7666
  8825  003EC0                     l7664:
  8826  003EC0  90D8               	bcf	status,0,c
  8827  003EC2  361C               	rlcf	___aodiv@divisor^0,f,c
  8828  003EC4  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8829  003EC6  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8830  003EC8  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8831  003ECA  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8832  003ECC  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8833  003ECE  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8834  003ED0  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8835  003ED2  2A24               	incf	___aodiv@counter^0,f,c
  8836  003ED4                     l7666:
  8837  003ED4  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8838  003ED6  EF6F  F01F         	goto	u7721
  8839  003EDA  EF71  F01F         	goto	u7720
  8840  003EDE                     u7721:
  8841  003EDE  EF60  F01F         	goto	l7664
  8842  003EE2                     u7720:
  8843  003EE2                     l7668:
  8844  003EE2  90D8               	bcf	status,0,c
  8845  003EE4  3626               	rlcf	___aodiv@quotient^0,f,c
  8846  003EE6  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8847  003EE8  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8848  003EEA  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8849  003EEC  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8850  003EEE  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8851  003EF0  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8852  003EF2  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8853  003EF4  501C               	movf	___aodiv@divisor^0,w,c
  8854  003EF6  5C14               	subwf	___aodiv@dividend^0,w,c
  8855  003EF8  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8856  003EFA  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8857  003EFC  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8858  003EFE  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8859  003F00  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8860  003F02  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8861  003F04  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8862  003F06  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8863  003F08  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8864  003F0A  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8865  003F0C  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8866  003F0E  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8867  003F10  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8868  003F12  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8869  003F14  A0D8               	btfss	status,0,c
  8870  003F16  EF8F  F01F         	goto	u7731
  8871  003F1A  EF91  F01F         	goto	u7730
  8872  003F1E                     u7731:
  8873  003F1E  EFA2  F01F         	goto	l7676
  8874  003F22                     u7730:
  8875  003F22  501C               	movf	___aodiv@divisor^0,w,c
  8876  003F24  5E14               	subwf	___aodiv@dividend^0,f,c
  8877  003F26  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8878  003F28  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8879  003F2A  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8880  003F2C  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8881  003F2E  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8882  003F30  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8883  003F32  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8884  003F34  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8885  003F36  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8886  003F38  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8887  003F3A  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8888  003F3C  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8889  003F3E  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8890  003F40  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8891  003F42  8026               	bsf	___aodiv@quotient^0,0,c
  8892  003F44                     l7676:
  8893  003F44  90D8               	bcf	status,0,c
  8894  003F46  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8895  003F48  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8896  003F4A  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8897  003F4C  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8898  003F4E  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8899  003F50  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8900  003F52  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8901  003F54  321C               	rrcf	___aodiv@divisor^0,f,c
  8902  003F56  2E24               	decfsz	___aodiv@counter^0,f,c
  8903  003F58  EF71  F01F         	goto	l7668
  8904  003F5C                     l7680:
  8905  003F5C  5025               	movf	___aodiv@sign^0,w,c
  8906  003F5E  B4D8               	btfsc	status,2,c
  8907  003F60  EFB4  F01F         	goto	u7741
  8908  003F64  EFB6  F01F         	goto	u7740
  8909  003F68                     u7741:
  8910  003F68  EFC6  F01F         	goto	l7684
  8911  003F6C                     u7740:
  8912  003F6C  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8913  003F6E  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8914  003F70  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8915  003F72  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8916  003F74  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8917  003F76  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8918  003F78  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8919  003F7A  6C26               	negf	___aodiv@quotient^0,c
  8920  003F7C  0E00               	movlw	0
  8921  003F7E  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8922  003F80  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8923  003F82  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8924  003F84  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8925  003F86  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8926  003F88  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8927  003F8A  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8928  003F8C                     l7684:
  8929  003F8C  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8930  003F90  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8931  003F94  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8932  003F98  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8933  003F9C  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8934  003FA0  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8935  003FA4  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8936  003FA8  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8937  003FAC  0012               	return		;funcret
  8938  003FAE                     __end_of___aodiv:
  8939                           	callstack 0
  8940                           
  8941 ;; *************** function _checkBatt *****************
  8942 ;; Defined at:
  8943 ;;		line 83 in file "main.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;		None
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      _Bool 
  8950 ;; Registers used:
  8951 ;;		wreg, status,2, status,0, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;Total ram usage:        0 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 10
  8964 ;; This function calls:
  8965 ;;		___flge
  8966 ;;		___xxtofl
  8967 ;;		_getBatteryVoltage
  8968 ;;		_setSteering
  8969 ;; This function is called by:
  8970 ;;		_loop
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text31
  8975  00523E                     __ptext31:
  8976                           	callstack 0
  8977  00523E                     _checkBatt:
  8978                           	callstack 19
  8979  00523E                     
  8980                           ;main.c: 84:     ++battCheckCount;
  8981  00523E  0101               	movlb	1	; () banked
  8982  005240  4B30               	infsnz	_battCheckCount& (0+255),f,b
  8983  005242  2B31               	incf	(_battCheckCount+1)& (0+255),f,b
  8984  005244                     
  8985                           ; BSR set to: 1
  8986                           ;main.c: 85:     if (battCheckCount > (500)) {
  8987  005244  0EF5               	movlw	245
  8988  005246  5D30               	subwf	_battCheckCount& (0+255),w,b
  8989  005248  0E01               	movlw	1
  8990  00524A  5931               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8991  00524C  A0D8               	btfss	status,0,c
  8992  00524E  EF2B  F029         	goto	u9931
  8993  005252  EF2D  F029         	goto	u9930
  8994  005256                     u9931:
  8995  005256  EF66  F029         	goto	l8968
  8996  00525A                     u9930:
  8997  00525A                     
  8998                           ; BSR set to: 1
  8999                           ;main.c: 86:         battCheckCount = 0;
  9000  00525A  0E00               	movlw	0
  9001  00525C  6F31               	movwf	(_battCheckCount+1)& (0+255),b
  9002  00525E  0E00               	movlw	0
  9003  005260  6F30               	movwf	_battCheckCount& (0+255),b
  9004  005262                     
  9005                           ; BSR set to: 1
  9006                           ;main.c: 87:         getBatteryVoltage();
  9007  005262  EC0D  F02F         	call	_getBatteryVoltage	;wreg free
  9008  005266                     
  9009                           ;main.c: 89:         if (BatteryVolt < (6.8) * 409.6f) {
  9010  005266  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  9011  00526A  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  9012  00526E  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9013  005270  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9014  005272  0E00               	movlw	0
  9015  005274  EC67  F01D         	call	___xxtofl
  9016  005278  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  9017  00527C  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  9018  005280  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  9019  005284  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  9020  005288  0E7B               	movlw	123
  9021  00528A  0100               	movlb	0	; () banked
  9022  00528C  6F71               	movwf	___flge@ff2& (0+255),b
  9023  00528E  0E14               	movlw	20
  9024  005290  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9025  005292  0E2E               	movlw	46
  9026  005294  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9027  005296  0E45               	movlw	69
  9028  005298  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9029  00529A  EC16  F024         	call	___flge	;wreg free
  9030  00529E  0100               	movlb	0	; () banked
  9031  0052A0  B0D8               	btfsc	status,0,c
  9032  0052A2  EF55  F029         	goto	u9941
  9033  0052A6  EF57  F029         	goto	u9940
  9034  0052AA                     u9941:
  9035  0052AA  EF66  F029         	goto	l8968
  9036  0052AE                     u9940:
  9037  0052AE                     
  9038                           ; BSR set to: 0
  9039                           ;main.c: 90:             setSpeed = 0;
  9040  0052AE  0E00               	movlw	0
  9041  0052B0  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  9042  0052B2  0E00               	movlw	0
  9043  0052B4  6FEB               	movwf	_setSpeed& (0+255),b
  9044  0052B6                     
  9045                           ; BSR set to: 0
  9046                           ;main.c: 91:             setSteering(0, Front);
  9047  0052B6  0E00               	movlw	0
  9048  0052B8  6E1D               	movwf	(setSteering@steering+1)^0,c
  9049  0052BA  0E00               	movlw	0
  9050  0052BC  6E1C               	movwf	setSteering@steering^0,c
  9051  0052BE  0E03               	movlw	3
  9052  0052C0  6E1E               	movwf	setSteering@steeringMode^0,c
  9053  0052C2  EC41  F01E         	call	_setSteering	;wreg free
  9054  0052C6                     
  9055                           ;main.c: 92:             return 1;
  9056  0052C6  0E01               	movlw	1
  9057  0052C8  EF67  F029         	goto	l1257
  9058  0052CC                     l8968:
  9059                           
  9060                           ;main.c: 95:     return 0;
  9061  0052CC  0E00               	movlw	0
  9062  0052CE                     l1257:
  9063  0052CE  0012               	return		;funcret
  9064  0052D0                     __end_of_checkBatt:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function _setSteering *****************
  9068 ;; Defined at:
  9069 ;;		line 396 in file "main.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  steering        2   27[COMRAM] short 
  9072 ;;  steeringMode    1   29[COMRAM] enum E17304
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  steeringB       2   34[COMRAM] short 
  9075 ;;  steeringF       2   32[COMRAM] short 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9088 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;Total ram usage:        9 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 9
  9092 ;; This function calls:
  9093 ;;		_PWM5_LoadDutyValue
  9094 ;;		_PWM6_LoadDutyValue
  9095 ;;		___awdiv
  9096 ;; This function is called by:
  9097 ;;		_loop
  9098 ;;		_checkBatt
  9099 ;;		_startAccell
  9100 ;;		_calcSteering
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text32
  9105  003C82                     __ptext32:
  9106                           	callstack 0
  9107  003C82                     _setSteering:
  9108                           	callstack 19
  9109  003C82  0E00               	movlw	0
  9110  003C84  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9111  003C86  0E00               	movlw	0
  9112  003C88  6E23               	movwf	setSteering@steeringB^0,c
  9113                           
  9114                           ;main.c: 398:     switch (steeringMode) {
  9115  003C8A  EF95  F01E         	goto	l8750
  9116  003C8E                     l1382:
  9117                           
  9118                           ;main.c: 400:             steeringF = (+steering);
  9119  003C8E  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9120  003C92  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9121                           
  9122                           ;main.c: 401:             steeringB = -steering;
  9123  003C96  C01C  F01F         	movff	setSteering@steering,??_setSteering
  9124  003C9A  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  9125  003C9E  1E1F               	comf	??_setSteering^0,f,c
  9126  003CA0  1E20               	comf	(??_setSteering+1)^0,f,c
  9127  003CA2  4A1F               	infsnz	??_setSteering^0,f,c
  9128  003CA4  2A20               	incf	(??_setSteering+1)^0,f,c
  9129  003CA6  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  9130  003CAA  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  9131                           
  9132                           ;main.c: 402:             break;
  9133  003CAE  EFB6  F01E         	goto	l8752
  9134  003CB2                     l1384:
  9135                           
  9136                           ;main.c: 404:             steeringF = (+steering);
  9137  003CB2  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9138  003CB6  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9139                           
  9140                           ;main.c: 405:             steeringB = (+steering);
  9141  003CBA  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9142  003CBE  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9143                           
  9144                           ;main.c: 406:             break;
  9145  003CC2  EFB6  F01E         	goto	l8752
  9146  003CC6                     l1385:
  9147                           
  9148                           ;main.c: 408:             steeringF = (+steering);
  9149  003CC6  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9150  003CCA  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9151  003CCE                     
  9152                           ;main.c: 409:             steeringB = (-steering / (2));
  9153  003CCE  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  9154  003CD2  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  9155  003CD6  0EFF               	movlw	255
  9156  003CD8  6E17               	movwf	(___awdiv@divisor+1)^0,c
  9157  003CDA  0EFE               	movlw	254
  9158  003CDC  6E16               	movwf	___awdiv@divisor^0,c
  9159  003CDE  EC68  F026         	call	___awdiv	;wreg free
  9160  003CE2  C014  F023         	movff	?___awdiv,setSteering@steeringB
  9161  003CE6  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  9162                           
  9163                           ;main.c: 410:             break;
  9164  003CEA  EFB6  F01E         	goto	l8752
  9165  003CEE                     l1386:
  9166                           
  9167                           ;main.c: 412:             steeringF = (+steering);
  9168  003CEE  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9169  003CF2  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9170  003CF6                     
  9171                           ;main.c: 413:             steeringB = 0;
  9172  003CF6  0E00               	movlw	0
  9173  003CF8  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9174  003CFA  0E00               	movlw	0
  9175  003CFC  6E23               	movwf	setSteering@steeringB^0,c
  9176                           
  9177                           ;main.c: 414:             break;
  9178  003CFE  EFB6  F01E         	goto	l8752
  9179  003D02                     l8742:
  9180                           
  9181                           ;main.c: 416:             steeringF = 0;
  9182  003D02  0E00               	movlw	0
  9183  003D04  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9184  003D06  0E00               	movlw	0
  9185  003D08  6E21               	movwf	setSteering@steeringF^0,c
  9186  003D0A                     
  9187                           ;main.c: 417:             steeringB = (+steering);
  9188  003D0A  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9189  003D0E  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9190                           
  9191                           ;main.c: 418:             break;
  9192  003D12  EFB6  F01E         	goto	l8752
  9193  003D16                     l8746:
  9194                           
  9195                           ;main.c: 420:             steeringF = 0;
  9196  003D16  0E00               	movlw	0
  9197  003D18  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9198  003D1A  0E00               	movlw	0
  9199  003D1C  6E21               	movwf	setSteering@steeringF^0,c
  9200                           
  9201                           ;main.c: 421:             steeringB = 0;
  9202  003D1E  0E00               	movlw	0
  9203  003D20  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9204  003D22  0E00               	movlw	0
  9205  003D24  6E23               	movwf	setSteering@steeringB^0,c
  9206                           
  9207                           ;main.c: 422:             break;
  9208  003D26  EFB6  F01E         	goto	l8752
  9209  003D2A                     l8750:
  9210  003D2A  501E               	movf	setSteering@steeringMode^0,w,c
  9211  003D2C  6E1F               	movwf	??_setSteering^0,c
  9212  003D2E  6A20               	clrf	(??_setSteering+1)^0,c
  9213                           
  9214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9215                           ; Switch size 1, requested type "simple"
  9216                           ; Number of cases is 1, Range of values is 0 to 0
  9217                           ; switch strategies available:
  9218                           ; Name         Instructions Cycles
  9219                           ; simple_byte            4     3 (average)
  9220                           ;	Chosen strategy is simple_byte
  9221  003D30  5020               	movf	(??_setSteering+1)^0,w,c
  9222  003D32  0A00               	xorlw	0	; case 0
  9223  003D34  B4D8               	btfsc	status,2,c
  9224  003D36  EF9F  F01E         	goto	l9314
  9225  003D3A  EF8B  F01E         	goto	l8746
  9226  003D3E                     l9314:
  9227                           
  9228                           ; Switch size 1, requested type "simple"
  9229                           ; Number of cases is 5, Range of values is 0 to 4
  9230                           ; switch strategies available:
  9231                           ; Name         Instructions Cycles
  9232                           ; simple_byte           16     9 (average)
  9233                           ;	Chosen strategy is simple_byte
  9234  003D3E  501F               	movf	??_setSteering^0,w,c
  9235  003D40  0A00               	xorlw	0	; case 0
  9236  003D42  B4D8               	btfsc	status,2,c
  9237  003D44  EF47  F01E         	goto	l1382
  9238  003D48  0A01               	xorlw	1	; case 1
  9239  003D4A  B4D8               	btfsc	status,2,c
  9240  003D4C  EF59  F01E         	goto	l1384
  9241  003D50  0A03               	xorlw	3	; case 2
  9242  003D52  B4D8               	btfsc	status,2,c
  9243  003D54  EF63  F01E         	goto	l1385
  9244  003D58  0A01               	xorlw	1	; case 3
  9245  003D5A  B4D8               	btfsc	status,2,c
  9246  003D5C  EF77  F01E         	goto	l1386
  9247  003D60  0A07               	xorlw	7	; case 4
  9248  003D62  B4D8               	btfsc	status,2,c
  9249  003D64  EF81  F01E         	goto	l8742
  9250  003D68  EF8B  F01E         	goto	l8746
  9251  003D6C                     l8752:
  9252                           
  9253                           ;main.c: 425:     if (steeringF > ((65))) {
  9254  003D6C  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  9255  003D6E  EFC2  F01E         	goto	u9671
  9256  003D72  5022               	movf	(setSteering@steeringF+1)^0,w,c
  9257  003D74  E109               	bnz	u9670
  9258  003D76  0E42               	movlw	66
  9259  003D78  5C21               	subwf	setSteering@steeringF^0,w,c
  9260  003D7A  A0D8               	btfss	status,0,c
  9261  003D7C  EFC2  F01E         	goto	u9671
  9262  003D80  EFC4  F01E         	goto	u9670
  9263  003D84                     u9671:
  9264  003D84  EFCA  F01E         	goto	l8756
  9265  003D88                     u9670:
  9266  003D88                     
  9267                           ;main.c: 426:         steeringF = ((65));
  9268  003D88  0E00               	movlw	0
  9269  003D8A  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9270  003D8C  0E41               	movlw	65
  9271  003D8E  6E21               	movwf	setSteering@steeringF^0,c
  9272                           
  9273                           ;main.c: 427:     } else if (steeringF < (-(65))) {
  9274  003D90  EFDC  F01E         	goto	l8760
  9275  003D94                     l8756:
  9276  003D94  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  9277  003D96  EFD6  F01E         	goto	u9681
  9278  003D9A  0EBF               	movlw	191
  9279  003D9C  5C21               	subwf	setSteering@steeringF^0,w,c
  9280  003D9E  0EFF               	movlw	255
  9281  003DA0  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  9282  003DA2  B0D8               	btfsc	status,0,c
  9283  003DA4  EFD6  F01E         	goto	u9681
  9284  003DA8  EFD8  F01E         	goto	u9680
  9285  003DAC                     u9681:
  9286  003DAC  EFDC  F01E         	goto	l8760
  9287  003DB0                     u9680:
  9288  003DB0                     
  9289                           ;main.c: 428:         steeringF = (-(65));
  9290  003DB0  0EFF               	movlw	255
  9291  003DB2  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9292  003DB4  0EBF               	movlw	191
  9293  003DB6  6E21               	movwf	setSteering@steeringF^0,c
  9294  003DB8                     l8760:
  9295                           
  9296                           ;main.c: 431:     if (steeringB > ((40))) {
  9297  003DB8  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  9298  003DBA  EFE8  F01E         	goto	u9691
  9299  003DBE  5024               	movf	(setSteering@steeringB+1)^0,w,c
  9300  003DC0  E109               	bnz	u9690
  9301  003DC2  0E29               	movlw	41
  9302  003DC4  5C23               	subwf	setSteering@steeringB^0,w,c
  9303  003DC6  A0D8               	btfss	status,0,c
  9304  003DC8  EFE8  F01E         	goto	u9691
  9305  003DCC  EFEA  F01E         	goto	u9690
  9306  003DD0                     u9691:
  9307  003DD0  EFF0  F01E         	goto	l8764
  9308  003DD4                     u9690:
  9309  003DD4                     
  9310                           ;main.c: 432:         steeringB = ((40));
  9311  003DD4  0E00               	movlw	0
  9312  003DD6  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9313  003DD8  0E28               	movlw	40
  9314  003DDA  6E23               	movwf	setSteering@steeringB^0,c
  9315                           
  9316                           ;main.c: 433:     } else if (steeringB < (-(40))) {
  9317  003DDC  EF02  F01F         	goto	l8768
  9318  003DE0                     l8764:
  9319  003DE0  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  9320  003DE2  EFFC  F01E         	goto	u9701
  9321  003DE6  0ED8               	movlw	216
  9322  003DE8  5C23               	subwf	setSteering@steeringB^0,w,c
  9323  003DEA  0EFF               	movlw	255
  9324  003DEC  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  9325  003DEE  B0D8               	btfsc	status,0,c
  9326  003DF0  EFFC  F01E         	goto	u9701
  9327  003DF4  EFFE  F01E         	goto	u9700
  9328  003DF8                     u9701:
  9329  003DF8  EF02  F01F         	goto	l8768
  9330  003DFC                     u9700:
  9331  003DFC                     
  9332                           ;main.c: 434:         steeringB = (-(40));
  9333  003DFC  0EFF               	movlw	255
  9334  003DFE  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9335  003E00  0ED8               	movlw	216
  9336  003E02  6E23               	movwf	setSteering@steeringB^0,c
  9337  003E04                     l8768:
  9338                           
  9339                           ;main.c: 438:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9340  003E04  0E60               	movlw	96
  9341  003E06  2421               	addwf	setSteering@steeringF^0,w,c
  9342  003E08  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9343  003E0A  0E01               	movlw	1
  9344  003E0C  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  9345  003E0E  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9346  003E10  ECA4  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9347  003E14                     
  9348                           ;main.c: 439:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9349  003E14  0E65               	movlw	101
  9350  003E16  2423               	addwf	setSteering@steeringB^0,w,c
  9351  003E18  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9352  003E1A  0E01               	movlw	1
  9353  003E1C  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  9354  003E1E  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9355  003E20  ECBE  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9356  003E24  0012               	return		;funcret
  9357  003E26                     __end_of_setSteering:
  9358                           	callstack 0
  9359                           
  9360 ;; *************** function _PWM6_LoadDutyValue *****************
  9361 ;; Defined at:
  9362 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;		None
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      void 
  9369 ;; Registers used:
  9370 ;;		wreg, status,2, status,0
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;Total ram usage:        4 bytes
  9381 ;; Hardware stack levels used: 1
  9382 ;; Hardware stack levels required when called: 8
  9383 ;; This function calls:
  9384 ;;		Nothing
  9385 ;; This function is called by:
  9386 ;;		_setSteering
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text33
  9391  005948                     __ptext33:
  9392                           	callstack 0
  9393  005948                     _PWM6_LoadDutyValue:
  9394                           	callstack 19
  9395  005948                     
  9396                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9397  005948  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9398  00594C  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9399  005950  90D8               	bcf	status,0,c
  9400  005952  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9401  005954  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9402  005956  90D8               	bcf	status,0,c
  9403  005958  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9404  00595A  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9405  00595C  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9406  00595E  6E69               	movwf	105,c	;volatile
  9407                           
  9408                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9409  005960  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9410  005964  0E03               	movlw	3
  9411  005966  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9412  005968  0E06               	movlw	6
  9413  00596A  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9414  00596C                     u9535:
  9415  00596C  90D8               	bcf	status,0,c
  9416  00596E  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9417  005970  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9418  005972  EFB6  F02C         	goto	u9535
  9419  005976  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9420  005978  6E68               	movwf	104,c	;volatile
  9421  00597A  0012               	return		;funcret
  9422  00597C                     __end_of_PWM6_LoadDutyValue:
  9423                           	callstack 0
  9424                           
  9425 ;; *************** function _PWM5_LoadDutyValue *****************
  9426 ;; Defined at:
  9427 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9430 ;; Auto vars:     Size  Location     Type
  9431 ;;		None
  9432 ;; Return value:  Size  Location     Type
  9433 ;;                  1    wreg      void 
  9434 ;; Registers used:
  9435 ;;		wreg, status,2, status,0
  9436 ;; Tracked objects:
  9437 ;;		On entry : 0/0
  9438 ;;		On exit  : 0/0
  9439 ;;		Unchanged: 0/0
  9440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9444 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9445 ;;Total ram usage:        4 bytes
  9446 ;; Hardware stack levels used: 1
  9447 ;; Hardware stack levels required when called: 8
  9448 ;; This function calls:
  9449 ;;		Nothing
  9450 ;; This function is called by:
  9451 ;;		_setSteering
  9452 ;; This function uses a non-reentrant model
  9453 ;;
  9454                           
  9455                           	psect	text34
  9456  00597C                     __ptext34:
  9457                           	callstack 0
  9458  00597C                     _PWM5_LoadDutyValue:
  9459                           	callstack 19
  9460  00597C                     
  9461                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9462  00597C  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9463  005980  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9464  005984  90D8               	bcf	status,0,c
  9465  005986  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9466  005988  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9467  00598A  90D8               	bcf	status,0,c
  9468  00598C  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9469  00598E  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9470  005990  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9471  005992  6E6D               	movwf	109,c	;volatile
  9472                           
  9473                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9474  005994  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9475  005998  0E03               	movlw	3
  9476  00599A  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9477  00599C  0E06               	movlw	6
  9478  00599E  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9479  0059A0                     u9525:
  9480  0059A0  90D8               	bcf	status,0,c
  9481  0059A2  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9482  0059A4  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9483  0059A6  EFD0  F02C         	goto	u9525
  9484  0059AA  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9485  0059AC  6E6C               	movwf	108,c	;volatile
  9486  0059AE  0012               	return		;funcret
  9487  0059B0                     __end_of_PWM5_LoadDutyValue:
  9488                           	callstack 0
  9489                           
  9490 ;; *************** function _getBatteryVoltage *****************
  9491 ;; Defined at:
  9492 ;;		line 78 in file "main.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2, status,0, cstack
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; Hardware stack levels required when called: 9
  9513 ;; This function calls:
  9514 ;;		_ADCC_GetSingleConversion
  9515 ;; This function is called by:
  9516 ;;		_loop
  9517 ;;		_checkBatt
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           	psect	text35
  9522  005E1A                     __ptext35:
  9523                           	callstack 0
  9524  005E1A                     _getBatteryVoltage:
  9525                           	callstack 20
  9526  005E1A                     
  9527                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9528  005E1A  0E22               	movlw	34
  9529  005E1C  EC40  F02D         	call	_ADCC_GetSingleConversion
  9530  005E20  C014  F0E5         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9531  005E24  C015  F0E6         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9532  005E28  0012               	return		;funcret
  9533  005E2A                     __end_of_getBatteryVoltage:
  9534                           	callstack 0
  9535                           
  9536 ;; *************** function _ADCC_GetSingleConversion *****************
  9537 ;; Defined at:
  9538 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  channel         1    wreg     enum E16058
  9541 ;; Auto vars:     Size  Location     Type
  9542 ;;  channel         1   23[COMRAM] enum E16058
  9543 ;; Return value:  Size  Location     Type
  9544 ;;                  2   19[COMRAM] unsigned short 
  9545 ;; Registers used:
  9546 ;;		wreg, status,2, status,0
  9547 ;; Tracked objects:
  9548 ;;		On entry : 0/0
  9549 ;;		On exit  : 0/0
  9550 ;;		Unchanged: 0/0
  9551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9555 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9556 ;;Total ram usage:        5 bytes
  9557 ;; Hardware stack levels used: 1
  9558 ;; Hardware stack levels required when called: 8
  9559 ;; This function calls:
  9560 ;;		Nothing
  9561 ;; This function is called by:
  9562 ;;		_getBatteryVoltage
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text36
  9567  005A80                     __ptext36:
  9568                           	callstack 0
  9569  005A80                     _ADCC_GetSingleConversion:
  9570                           	callstack 20
  9571                           
  9572                           ;incstack = 0
  9573                           ;ADCC_GetSingleConversion@channel stored from wreg
  9574  005A80  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9575  005A82                     
  9576                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9577  005A82  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9578  005A88                     
  9579                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9580  005A88  013E               	movlb	62	; () banked
  9581  005A8A  8FF8               	bsf	248,7,b	;volatile
  9582  005A8C                     
  9583                           ; BSR set to: 62
  9584                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9585  005A8C  9DF8               	bcf	248,6,b	;volatile
  9586  005A8E                     
  9587                           ; BSR set to: 62
  9588                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9589  005A8E  81F8               	bsf	248,0,b	;volatile
  9590  005A90                     l1054:
  9591                           
  9592                           ; BSR set to: 62
  9593                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9594  005A90  B1F8               	btfsc	248,0,b	;volatile
  9595  005A92  EF4D  F02D         	goto	u6101
  9596  005A96  EF4F  F02D         	goto	u6100
  9597  005A9A                     u6101:
  9598  005A9A  EF48  F02D         	goto	l1054
  9599  005A9E                     u6100:
  9600  005A9E                     
  9601                           ; BSR set to: 62
  9602                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9603  005A9E  51F0               	movf	240,w,b	;volatile
  9604  005AA0  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9605  005AA2  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9606  005AA4  51EF               	movf	239,w,b	;volatile
  9607  005AA6  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9608  005AA8  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9609  005AAA  0E00               	movlw	0
  9610  005AAC  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9611  005AAE  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9612  005AB0                     
  9613                           ; BSR set to: 62
  9614  005AB0  0012               	return		;funcret
  9615  005AB2                     __end_of_ADCC_GetSingleConversion:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function ___flge *****************
  9619 ;; Defined at:
  9620 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  ff1             4   13[BANK0 ] unsigned short 
  9623 ;;  ff2             4   17[BANK0 ] unsigned short 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;		None               void
  9628 ;; Registers used:
  9629 ;;		wreg, status,2, status,0
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9635 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9638 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9639 ;;Total ram usage:       12 bytes
  9640 ;; Hardware stack levels used: 1
  9641 ;; Hardware stack levels required when called: 8
  9642 ;; This function calls:
  9643 ;;		Nothing
  9644 ;; This function is called by:
  9645 ;;		_loop
  9646 ;;		_checkBatt
  9647 ;;		_startAccell
  9648 ;;		_efgtoa
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text37
  9653  00482C                     __ptext37:
  9654                           	callstack 0
  9655  00482C                     ___flge:
  9656                           	callstack 16
  9657  00482C  0E00               	movlw	0
  9658  00482E  0100               	movlb	0	; () banked
  9659  004830  156D               	andwf	___flge@ff1& (0+255),w,b
  9660  004832  6E36               	movwf	??___flge^0,c
  9661  004834  0E00               	movlw	0
  9662  004836  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9663  004838  6E37               	movwf	(??___flge+1)^0,c
  9664  00483A  0E80               	movlw	128
  9665  00483C  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9666  00483E  6E38               	movwf	(??___flge+2)^0,c
  9667  004840  0E7F               	movlw	127
  9668  004842  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9669  004844  6E39               	movwf	(??___flge+3)^0,c
  9670  004846  5036               	movf	??___flge^0,w,c
  9671  004848  1037               	iorwf	(??___flge+1)^0,w,c
  9672  00484A  1038               	iorwf	(??___flge+2)^0,w,c
  9673  00484C  1039               	iorwf	(??___flge+3)^0,w,c
  9674  00484E  A4D8               	btfss	status,2,c
  9675  004850  EF2C  F024         	goto	u8381
  9676  004854  EF2E  F024         	goto	u8380
  9677  004858                     u8381:
  9678  004858  EF36  F024         	goto	l8098
  9679  00485C                     u8380:
  9680  00485C                     
  9681                           ; BSR set to: 0
  9682  00485C  0E00               	movlw	0
  9683  00485E  6F6D               	movwf	___flge@ff1& (0+255),b
  9684  004860  0E00               	movlw	0
  9685  004862  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9686  004864  0E00               	movlw	0
  9687  004866  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9688  004868  0E00               	movlw	0
  9689  00486A  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9690  00486C                     l8098:
  9691                           
  9692                           ; BSR set to: 0
  9693  00486C  0E00               	movlw	0
  9694  00486E  1571               	andwf	___flge@ff2& (0+255),w,b
  9695  004870  6E36               	movwf	??___flge^0,c
  9696  004872  0E00               	movlw	0
  9697  004874  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9698  004876  6E37               	movwf	(??___flge+1)^0,c
  9699  004878  0E80               	movlw	128
  9700  00487A  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9701  00487C  6E38               	movwf	(??___flge+2)^0,c
  9702  00487E  0E7F               	movlw	127
  9703  004880  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9704  004882  6E39               	movwf	(??___flge+3)^0,c
  9705  004884  5036               	movf	??___flge^0,w,c
  9706  004886  1037               	iorwf	(??___flge+1)^0,w,c
  9707  004888  1038               	iorwf	(??___flge+2)^0,w,c
  9708  00488A  1039               	iorwf	(??___flge+3)^0,w,c
  9709  00488C  A4D8               	btfss	status,2,c
  9710  00488E  EF4B  F024         	goto	u8391
  9711  004892  EF4D  F024         	goto	u8390
  9712  004896                     u8391:
  9713  004896  EF55  F024         	goto	l8102
  9714  00489A                     u8390:
  9715  00489A                     
  9716                           ; BSR set to: 0
  9717  00489A  0E00               	movlw	0
  9718  00489C  6F71               	movwf	___flge@ff2& (0+255),b
  9719  00489E  0E00               	movlw	0
  9720  0048A0  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9721  0048A2  0E00               	movlw	0
  9722  0048A4  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9723  0048A6  0E00               	movlw	0
  9724  0048A8  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9725  0048AA                     l8102:
  9726                           
  9727                           ; BSR set to: 0
  9728  0048AA  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9729  0048AC  EF5A  F024         	goto	u8401
  9730  0048B0  EF5C  F024         	goto	u8400
  9731  0048B4                     u8401:
  9732  0048B4  EF65  F024         	goto	l8106
  9733  0048B8                     u8400:
  9734  0048B8                     
  9735                           ; BSR set to: 0
  9736  0048B8  6D6D               	negf	___flge@ff1& (0+255),b
  9737  0048BA  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9738  0048BC  B0D8               	btfsc	status,0,c
  9739  0048BE  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9740  0048C0  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9741  0048C2  B0D8               	btfsc	status,0,c
  9742  0048C4  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9743  0048C6  0E80               	movlw	128
  9744  0048C8  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9745  0048CA                     l8106:
  9746                           
  9747                           ; BSR set to: 0
  9748  0048CA  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9749  0048CC  EF6A  F024         	goto	u8411
  9750  0048D0  EF6C  F024         	goto	u8410
  9751  0048D4                     u8411:
  9752  0048D4  EF75  F024         	goto	l1663
  9753  0048D8                     u8410:
  9754  0048D8                     
  9755                           ; BSR set to: 0
  9756  0048D8  6D71               	negf	___flge@ff2& (0+255),b
  9757  0048DA  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9758  0048DC  B0D8               	btfsc	status,0,c
  9759  0048DE  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9760  0048E0  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9761  0048E2  B0D8               	btfsc	status,0,c
  9762  0048E4  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9763  0048E6  0E80               	movlw	128
  9764  0048E8  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9765  0048EA                     l1663:
  9766                           
  9767                           ; BSR set to: 0
  9768  0048EA  0E00               	movlw	0
  9769  0048EC  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9770  0048EE  0E00               	movlw	0
  9771  0048F0  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9772  0048F2  0E00               	movlw	0
  9773  0048F4  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9774  0048F6  0E80               	movlw	128
  9775  0048F8  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9776  0048FA  0E00               	movlw	0
  9777  0048FC  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9778  0048FE  0E00               	movlw	0
  9779  004900  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9780  004902  0E00               	movlw	0
  9781  004904  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9782  004906  0E80               	movlw	128
  9783  004908  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9784  00490A  5171               	movf	___flge@ff2& (0+255),w,b
  9785  00490C  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9786  00490E  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9787  004910  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9788  004912  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9789  004914  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9790  004916  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9791  004918  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9792  00491A  B0D8               	btfsc	status,0,c
  9793  00491C  EF92  F024         	goto	u8421
  9794  004920  EF94  F024         	goto	u8420
  9795  004924                     u8421:
  9796  004924  EF97  F024         	goto	l8112
  9797  004928                     u8420:
  9798  004928                     
  9799                           ; BSR set to: 0
  9800  004928  90D8               	bcf	status,0,c
  9801  00492A  EF98  F024         	goto	l1668
  9802  00492E                     l8112:
  9803                           
  9804                           ; BSR set to: 0
  9805  00492E  80D8               	bsf	status,0,c
  9806  004930                     l1668:
  9807                           
  9808                           ; BSR set to: 0
  9809  004930  0012               	return		;funcret
  9810  004932                     __end_of___flge:
  9811                           	callstack 0
  9812                           
  9813 ;; *************** function _calcSpeed *****************
  9814 ;; Defined at:
  9815 ;;		line 288 in file "main.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  speed           2   39[BANK0 ] short 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9830 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;Total ram usage:        6 bytes
  9834 ;; Hardware stack levels used: 1
  9835 ;; Hardware stack levels required when called: 9
  9836 ;; This function calls:
  9837 ;;		___fladd
  9838 ;;		___flmul
  9839 ;;		___fltol
  9840 ;;		___xxtofl
  9841 ;; This function is called by:
  9842 ;;		_loop
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text38
  9847  0038C4                     __ptext38:
  9848                           	callstack 0
  9849  0038C4                     _calcSpeed:
  9850                           	callstack 20
  9851  0038C4                     
  9852                           ;main.c: 289:     int16_t speed = 0;
  9853  0038C4  0E00               	movlw	0
  9854  0038C6  0100               	movlb	0	; () banked
  9855  0038C8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9856  0038CA  0E00               	movlw	0
  9857  0038CC  6F87               	movwf	calcSpeed@speed& (0+255),b
  9858                           
  9859                           ;main.c: 291:     switch (driveMode) {
  9860  0038CE  EF18  F01D         	goto	l9086
  9861  0038D2                     l9050:
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;main.c: 293:             if (distFront > (30)) {
  9865  0038D2  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9866  0038D4  E109               	bnz	u10120
  9867  0038D6  0E1F               	movlw	31
  9868  0038D8  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9869  0038DA  A0D8               	btfss	status,0,c
  9870  0038DC  EF72  F01C         	goto	u10121
  9871  0038E0  EF74  F01C         	goto	u10120
  9872  0038E4                     u10121:
  9873  0038E4  EF76  F01C         	goto	l9054
  9874  0038E8                     u10120:
  9875  0038E8                     
  9876                           ; BSR set to: 0
  9877                           ;main.c: 294:                 driveMode = Straight;
  9878  0038E8  0E01               	movlw	1
  9879  0038EA  6FFE               	movwf	_driveMode& (0+255),b
  9880  0038EC                     l9054:
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;main.c: 296:             if (setSpeed > (100)) {
  9884  0038EC  BFEC               	btfsc	(_setSpeed+1)& (0+255),7,b
  9885  0038EE  EF82  F01C         	goto	u10131
  9886  0038F2  51EC               	movf	(_setSpeed+1)& (0+255),w,b
  9887  0038F4  E109               	bnz	u10130
  9888  0038F6  0E65               	movlw	101
  9889  0038F8  5DEB               	subwf	_setSpeed& (0+255),w,b
  9890  0038FA  A0D8               	btfss	status,0,c
  9891  0038FC  EF82  F01C         	goto	u10131
  9892  003900  EF84  F01C         	goto	u10130
  9893  003904                     u10131:
  9894  003904  EF9F  F01C         	goto	l9064
  9895  003908                     u10130:
  9896  003908                     
  9897                           ; BSR set to: 0
  9898                           ;main.c: 297:                     speed = setSpeed;
  9899  003908  C0EB  F087         	movff	_setSpeed,calcSpeed@speed
  9900  00390C  C0EC  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9901  003910                     
  9902                           ; BSR set to: 0
  9903                           ;main.c: 298:                 if (distFront < (15)) {
  9904  003910  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9905  003912  E107               	bnz	u10141
  9906  003914  0E0F               	movlw	15
  9907  003916  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9908  003918  B0D8               	btfsc	status,0,c
  9909  00391A  EF91  F01C         	goto	u10141
  9910  00391E  EF93  F01C         	goto	u10140
  9911  003922                     u10141:
  9912  003922  EF99  F01C         	goto	l9062
  9913  003926                     u10140:
  9914  003926                     
  9915                           ; BSR set to: 0
  9916                           ;main.c: 299:                     speed -= 4;
  9917  003926  0EFC               	movlw	252
  9918  003928  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9919  00392A  0EFF               	movlw	255
  9920  00392C  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9921                           
  9922                           ;main.c: 300:                 } else {
  9923  00392E  EF3D  F01D         	goto	l9088
  9924  003932                     l9062:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;main.c: 301:                     speed -= 2;
  9928  003932  0EFE               	movlw	254
  9929  003934  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9930  003936  0EFF               	movlw	255
  9931  003938  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9932  00393A  EF3D  F01D         	goto	l9088
  9933  00393E                     l9064:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;main.c: 304:                 speed = (100);
  9937  00393E  0E00               	movlw	0
  9938  003940  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9939  003942  0E64               	movlw	100
  9940  003944  6F87               	movwf	calcSpeed@speed& (0+255),b
  9941  003946  EF3D  F01D         	goto	l9088
  9942  00394A                     l9066:
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;main.c: 308:             if (distFront < (30)) {
  9946  00394A  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9947  00394C  E107               	bnz	u10151
  9948  00394E  0E1E               	movlw	30
  9949  003950  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9950  003952  B0D8               	btfsc	status,0,c
  9951  003954  EFAE  F01C         	goto	u10151
  9952  003958  EFB0  F01C         	goto	u10150
  9953  00395C                     u10151:
  9954  00395C  EFB2  F01C         	goto	l9070
  9955  003960                     u10150:
  9956  003960                     
  9957                           ; BSR set to: 0
  9958                           ;main.c: 309:                 driveMode = Brake;
  9959  003960  0E02               	movlw	2
  9960  003962  6FFE               	movwf	_driveMode& (0+255),b
  9961  003964                     l9070:
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;main.c: 312:             if (distFront >= (150)) {
  9965  003964  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9966  003966  E109               	bnz	u10160
  9967  003968  0E96               	movlw	150
  9968  00396A  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9969  00396C  A0D8               	btfss	status,0,c
  9970  00396E  EFBB  F01C         	goto	u10161
  9971  003972  EFBD  F01C         	goto	u10160
  9972  003976                     u10161:
  9973  003976  EF06  F01D         	goto	l9074
  9974  00397A                     u10160:
  9975  00397A                     
  9976                           ; BSR set to: 0
  9977                           ;main.c: 313:                 speed = (int16_t) ((0.7) * (distFront - (150)) + (275));
  9978  00397A  0E00               	movlw	0
  9979  00397C  6F71               	movwf	___fladd@a& (0+255),b
  9980  00397E  0E80               	movlw	128
  9981  003980  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9982  003982  0E89               	movlw	137
  9983  003984  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9984  003986  0E43               	movlw	67
  9985  003988  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9986  00398A  0E33               	movlw	51
  9987  00398C  6E2E               	movwf	___flmul@a^0,c
  9988  00398E  0E33               	movlw	51
  9989  003990  6E2F               	movwf	(___flmul@a+1)^0,c
  9990  003992  0E33               	movlw	51
  9991  003994  6E30               	movwf	(___flmul@a+2)^0,c
  9992  003996  0E3F               	movlw	63
  9993  003998  6E31               	movwf	(___flmul@a+3)^0,c
  9994  00399A  0E6A               	movlw	106
  9995  00399C  6F83               	movwf	??_calcSpeed& (0+255),b
  9996  00399E  0EFF               	movlw	255
  9997  0039A0  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9998  0039A2  C0FC  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9999  0039A6  C0FD  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
 10000  0039AA  5183               	movf	??_calcSpeed& (0+255),w,b
 10001  0039AC  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
 10002  0039AE  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10003  0039B0  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
 10004  0039B2  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
 10005  0039B6  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
 10006  0039BA  6A1E               	clrf	(___xxtofl@val+2)^0,c
 10007  0039BC  6A1F               	clrf	(___xxtofl@val+3)^0,c
 10008  0039BE  0E00               	movlw	0
 10009  0039C0  EC67  F01D         	call	___xxtofl
 10010  0039C4  C01C  F02A         	movff	?___xxtofl,___flmul@b
 10011  0039C8  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 10012  0039CC  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 10013  0039D0  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 10014  0039D4  EC83  F013         	call	___flmul	;wreg free
 10015  0039D8  C02A  F06D         	movff	?___flmul,___fladd@b
 10016  0039DC  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
 10017  0039E0  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
 10018  0039E4  C02D  F070         	movff	?___flmul+3,___fladd@b+3
 10019  0039E8  EC22  F011         	call	___fladd	;wreg free
 10020  0039EC  C06D  F079         	movff	?___fladd,___fltol@f1
 10021  0039F0  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
 10022  0039F4  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
 10023  0039F8  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
 10024  0039FC  EC0F  F023         	call	___fltol	;wreg free
 10025  003A00  C079  F087         	movff	?___fltol,calcSpeed@speed
 10026  003A04  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10027                           
 10028                           ;main.c: 314:             } else {
 10029  003A08  EF3D  F01D         	goto	l9088
 10030  003A0C                     l9074:
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;main.c: 315:                 speed = (275);
 10034  003A0C  0E01               	movlw	1
 10035  003A0E  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10036  003A10  0E13               	movlw	19
 10037  003A12  6F87               	movwf	calcSpeed@speed& (0+255),b
 10038  003A14  EF3D  F01D         	goto	l9088
 10039  003A18                     l9076:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;main.c: 320:             speed = (-125);
 10043  003A18  0EFF               	movlw	255
 10044  003A1A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10045  003A1C  0E83               	movlw	131
 10046  003A1E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10047                           
 10048                           ;main.c: 321:             break;
 10049  003A20  EF3D  F01D         	goto	l9088
 10050  003A24                     l9080:
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;main.c: 326:             speed = (200);
 10054  003A24  0E00               	movlw	0
 10055  003A26  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10056  003A28  0EC8               	movlw	200
 10057  003A2A  6F87               	movwf	calcSpeed@speed& (0+255),b
 10058                           
 10059                           ;main.c: 327:             break;
 10060  003A2C  EF3D  F01D         	goto	l9088
 10061  003A30                     l9086:
 10062                           
 10063                           ; BSR set to: 0
 10064  003A30  51FE               	movf	_driveMode& (0+255),w,b
 10065  003A32  6F83               	movwf	??_calcSpeed& (0+255),b
 10066  003A34  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10067                           
 10068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10069                           ; Switch size 1, requested type "simple"
 10070                           ; Number of cases is 1, Range of values is 0 to 0
 10071                           ; switch strategies available:
 10072                           ; Name         Instructions Cycles
 10073                           ; simple_byte            4     3 (average)
 10074                           ;	Chosen strategy is simple_byte
 10075  003A36  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10076  003A38  0A00               	xorlw	0	; case 0
 10077  003A3A  B4D8               	btfsc	status,2,c
 10078  003A3C  EF22  F01D         	goto	l9316
 10079  003A40  EF3D  F01D         	goto	l9088
 10080  003A44                     l9316:
 10081                           
 10082                           ; BSR set to: 0
 10083                           ; Switch size 1, requested type "simple"
 10084                           ; Number of cases is 6, Range of values is 1 to 6
 10085                           ; switch strategies available:
 10086                           ; Name         Instructions Cycles
 10087                           ; simple_byte           19    10 (average)
 10088                           ;	Chosen strategy is simple_byte
 10089  003A44  5183               	movf	??_calcSpeed& (0+255),w,b
 10090  003A46  0A01               	xorlw	1	; case 1
 10091  003A48  B4D8               	btfsc	status,2,c
 10092  003A4A  EFA5  F01C         	goto	l9066
 10093  003A4E  0A03               	xorlw	3	; case 2
 10094  003A50  B4D8               	btfsc	status,2,c
 10095  003A52  EF69  F01C         	goto	l9050
 10096  003A56  0A01               	xorlw	1	; case 3
 10097  003A58  B4D8               	btfsc	status,2,c
 10098  003A5A  EF0C  F01D         	goto	l9076
 10099  003A5E  0A07               	xorlw	7	; case 4
 10100  003A60  B4D8               	btfsc	status,2,c
 10101  003A62  EF0C  F01D         	goto	l9076
 10102  003A66  0A01               	xorlw	1	; case 5
 10103  003A68  B4D8               	btfsc	status,2,c
 10104  003A6A  EF12  F01D         	goto	l9080
 10105  003A6E  0A03               	xorlw	3	; case 6
 10106  003A70  B4D8               	btfsc	status,2,c
 10107  003A72  EF12  F01D         	goto	l9080
 10108  003A76  EF3D  F01D         	goto	l9088
 10109  003A7A                     l9088:
 10110                           
 10111                           ;main.c: 333:     if (speed > (400)) {
 10112  003A7A  0100               	movlb	0	; () banked
 10113  003A7C  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10114  003A7E  EF4A  F01D         	goto	u10171
 10115  003A82  0E91               	movlw	145
 10116  003A84  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10117  003A86  0E01               	movlw	1
 10118  003A88  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10119  003A8A  A0D8               	btfss	status,0,c
 10120  003A8C  EF4A  F01D         	goto	u10171
 10121  003A90  EF4C  F01D         	goto	u10170
 10122  003A94                     u10171:
 10123  003A94  EF50  F01D         	goto	l9092
 10124  003A98                     u10170:
 10125  003A98                     
 10126                           ; BSR set to: 0
 10127                           ;main.c: 334:         speed = (400);
 10128  003A98  0E01               	movlw	1
 10129  003A9A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10130  003A9C  0E90               	movlw	144
 10131  003A9E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10132  003AA0                     l9092:
 10133                           
 10134                           ; BSR set to: 0
 10135                           ;main.c: 336:     if (speed < (-250)) {
 10136  003AA0  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10137  003AA2  EF5C  F01D         	goto	u10181
 10138  003AA6  0E06               	movlw	6
 10139  003AA8  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10140  003AAA  0EFF               	movlw	255
 10141  003AAC  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10142  003AAE  B0D8               	btfsc	status,0,c
 10143  003AB0  EF5C  F01D         	goto	u10181
 10144  003AB4  EF5E  F01D         	goto	u10180
 10145  003AB8                     u10181:
 10146  003AB8  EF62  F01D         	goto	l9096
 10147  003ABC                     u10180:
 10148  003ABC                     
 10149                           ; BSR set to: 0
 10150                           ;main.c: 337:         speed = (-250);
 10151  003ABC  0EFF               	movlw	255
 10152  003ABE  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10153  003AC0  0E06               	movlw	6
 10154  003AC2  6F87               	movwf	calcSpeed@speed& (0+255),b
 10155  003AC4                     l9096:
 10156                           
 10157                           ; BSR set to: 0
 10158                           ;main.c: 339:     setSpeed = speed;
 10159  003AC4  C087  F0EB         	movff	calcSpeed@speed,_setSpeed
 10160  003AC8  C088  F0EC         	movff	calcSpeed@speed+1,_setSpeed+1
 10161  003ACC                     
 10162                           ; BSR set to: 0
 10163  003ACC  0012               	return		;funcret
 10164  003ACE                     __end_of_calcSpeed:
 10165                           	callstack 0
 10166                           
 10167 ;; *************** function ___fladd *****************
 10168 ;; Defined at:
 10169 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  b               4   13[BANK0 ] void 
 10172 ;;  a               4   17[BANK0 ] void 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  grs             1   24[BANK0 ] unsigned char 
 10175 ;;  bexp            1   23[BANK0 ] unsigned char 
 10176 ;;  aexp            1   22[BANK0 ] unsigned char 
 10177 ;;  signs           1   21[BANK0 ] unsigned char 
 10178 ;; Return value:  Size  Location     Type
 10179 ;;                  4   13[BANK0 ] unsigned char 
 10180 ;; Registers used:
 10181 ;;		wreg, status,2, status,0
 10182 ;; Tracked objects:
 10183 ;;		On entry : 0/0
 10184 ;;		On exit  : 0/0
 10185 ;;		Unchanged: 0/0
 10186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10187 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10190 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10191 ;;Total ram usage:       16 bytes
 10192 ;; Hardware stack levels used: 1
 10193 ;; Hardware stack levels required when called: 8
 10194 ;; This function calls:
 10195 ;;		Nothing
 10196 ;; This function is called by:
 10197 ;;		_calcSpeed
 10198 ;;		___flsub
 10199 ;;		_efgtoa
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text39
 10204  002244                     __ptext39:
 10205                           	callstack 0
 10206  002244                     ___fladd:
 10207                           	callstack 15
 10208  002244  0100               	movlb	0	; () banked
 10209  002246  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10210  002248  0B80               	andlw	128
 10211  00224A  6F75               	movwf	___fladd@signs& (0+255),b
 10212  00224C  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10213  00224E  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10214  002250  6F77               	movwf	___fladd@bexp& (0+255),b
 10215  002252                     
 10216                           ; BSR set to: 0
 10217  002252  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10218  002254  EF2E  F011         	goto	u7251
 10219  002258  EF30  F011         	goto	u7250
 10220  00225C                     u7251:
 10221  00225C  EF31  F011         	goto	l7426
 10222  002260                     u7250:
 10223  002260                     
 10224                           ; BSR set to: 0
 10225  002260  8177               	bsf	___fladd@bexp& (0+255),0,b
 10226  002262                     l7426:
 10227                           
 10228                           ; BSR set to: 0
 10229  002262  5177               	movf	___fladd@bexp& (0+255),w,b
 10230  002264  B4D8               	btfsc	status,2,c
 10231  002266  EF37  F011         	goto	u7261
 10232  00226A  EF39  F011         	goto	u7260
 10233  00226E                     u7261:
 10234  00226E  EF4E  F011         	goto	l7436
 10235  002272                     u7260:
 10236  002272                     
 10237                           ; BSR set to: 0
 10238  002272  2977               	incf	___fladd@bexp& (0+255),w,b
 10239  002274  A4D8               	btfss	status,2,c
 10240  002276  EF3F  F011         	goto	u7271
 10241  00227A  EF41  F011         	goto	u7270
 10242  00227E                     u7271:
 10243  00227E  EF49  F011         	goto	l7432
 10244  002282                     u7270:
 10245  002282                     
 10246                           ; BSR set to: 0
 10247  002282  0E00               	movlw	0
 10248  002284  6F6D               	movwf	___fladd@b& (0+255),b
 10249  002286  0E00               	movlw	0
 10250  002288  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10251  00228A  0E00               	movlw	0
 10252  00228C  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10253  00228E  0E00               	movlw	0
 10254  002290  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10255  002292                     l7432:
 10256                           
 10257                           ; BSR set to: 0
 10258  002292  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10259  002294                     
 10260                           ; BSR set to: 0
 10261  002294  0E00               	movlw	0
 10262  002296  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10263  002298  EF56  F011         	goto	l7438
 10264  00229C                     l7436:
 10265                           
 10266                           ; BSR set to: 0
 10267  00229C  0E00               	movlw	0
 10268  00229E  6F6D               	movwf	___fladd@b& (0+255),b
 10269  0022A0  0E00               	movlw	0
 10270  0022A2  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10271  0022A4  0E00               	movlw	0
 10272  0022A6  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10273  0022A8  0E00               	movlw	0
 10274  0022AA  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10275  0022AC                     l7438:
 10276                           
 10277                           ; BSR set to: 0
 10278  0022AC  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10279  0022AE  0B80               	andlw	128
 10280  0022B0  6F76               	movwf	___fladd@aexp& (0+255),b
 10281  0022B2                     
 10282                           ; BSR set to: 0
 10283  0022B2  5175               	movf	___fladd@signs& (0+255),w,b
 10284  0022B4  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10285  0022B6  B4D8               	btfsc	status,2,c
 10286  0022B8  EF60  F011         	goto	u7281
 10287  0022BC  EF62  F011         	goto	u7280
 10288  0022C0                     u7281:
 10289  0022C0  EF63  F011         	goto	l7444
 10290  0022C4                     u7280:
 10291  0022C4                     
 10292                           ; BSR set to: 0
 10293  0022C4  8D75               	bsf	___fladd@signs& (0+255),6,b
 10294  0022C6                     l7444:
 10295                           
 10296                           ; BSR set to: 0
 10297  0022C6  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10298  0022C8  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10299  0022CA  6F76               	movwf	___fladd@aexp& (0+255),b
 10300  0022CC                     
 10301                           ; BSR set to: 0
 10302  0022CC  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10303  0022CE  EF6B  F011         	goto	u7291
 10304  0022D2  EF6D  F011         	goto	u7290
 10305  0022D6                     u7291:
 10306  0022D6  EF6E  F011         	goto	l7450
 10307  0022DA                     u7290:
 10308  0022DA                     
 10309                           ; BSR set to: 0
 10310  0022DA  8176               	bsf	___fladd@aexp& (0+255),0,b
 10311  0022DC                     l7450:
 10312                           
 10313                           ; BSR set to: 0
 10314  0022DC  5176               	movf	___fladd@aexp& (0+255),w,b
 10315  0022DE  B4D8               	btfsc	status,2,c
 10316  0022E0  EF74  F011         	goto	u7301
 10317  0022E4  EF76  F011         	goto	u7300
 10318  0022E8                     u7301:
 10319  0022E8  EF8B  F011         	goto	l7460
 10320  0022EC                     u7300:
 10321  0022EC                     
 10322                           ; BSR set to: 0
 10323  0022EC  2976               	incf	___fladd@aexp& (0+255),w,b
 10324  0022EE  A4D8               	btfss	status,2,c
 10325  0022F0  EF7C  F011         	goto	u7311
 10326  0022F4  EF7E  F011         	goto	u7310
 10327  0022F8                     u7311:
 10328  0022F8  EF86  F011         	goto	l7456
 10329  0022FC                     u7310:
 10330  0022FC                     
 10331                           ; BSR set to: 0
 10332  0022FC  0E00               	movlw	0
 10333  0022FE  6F71               	movwf	___fladd@a& (0+255),b
 10334  002300  0E00               	movlw	0
 10335  002302  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10336  002304  0E00               	movlw	0
 10337  002306  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10338  002308  0E00               	movlw	0
 10339  00230A  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10340  00230C                     l7456:
 10341                           
 10342                           ; BSR set to: 0
 10343  00230C  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10344  00230E                     
 10345                           ; BSR set to: 0
 10346  00230E  0E00               	movlw	0
 10347  002310  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10348  002312  EF93  F011         	goto	l7462
 10349  002316                     l7460:
 10350                           
 10351                           ; BSR set to: 0
 10352  002316  0E00               	movlw	0
 10353  002318  6F71               	movwf	___fladd@a& (0+255),b
 10354  00231A  0E00               	movlw	0
 10355  00231C  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10356  00231E  0E00               	movlw	0
 10357  002320  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10358  002322  0E00               	movlw	0
 10359  002324  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10360  002326                     l7462:
 10361                           
 10362                           ; BSR set to: 0
 10363  002326  5177               	movf	___fladd@bexp& (0+255),w,b
 10364  002328  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10365  00232A  B0D8               	btfsc	status,0,c
 10366  00232C  EF9A  F011         	goto	u7321
 10367  002330  EF9C  F011         	goto	u7320
 10368  002334                     u7321:
 10369  002334  EFC3  F011         	goto	l7498
 10370  002338                     u7320:
 10371  002338                     
 10372                           ; BSR set to: 0
 10373  002338  AD75               	btfss	___fladd@signs& (0+255),6,b
 10374  00233A  EFA1  F011         	goto	u7331
 10375  00233E  EFA3  F011         	goto	u7330
 10376  002342                     u7331:
 10377  002342  EFA5  F011         	goto	l7468
 10378  002346                     u7330:
 10379  002346                     
 10380                           ; BSR set to: 0
 10381  002346  0E80               	movlw	128
 10382  002348  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10383  00234A                     l7468:
 10384                           
 10385                           ; BSR set to: 0
 10386  00234A  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10387  00234E                     
 10388                           ; BSR set to: 0
 10389  00234E  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10390  002352                     
 10391                           ; BSR set to: 0
 10392  002352  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10393  002356                     
 10394                           ; BSR set to: 0
 10395  002356  C06D  F078         	movff	___fladd@b,___fladd@grs
 10396  00235A                     
 10397                           ; BSR set to: 0
 10398  00235A  C071  F06D         	movff	___fladd@a,___fladd@b
 10399  00235E                     
 10400                           ; BSR set to: 0
 10401  00235E  C078  F071         	movff	___fladd@grs,___fladd@a
 10402  002362                     
 10403                           ; BSR set to: 0
 10404  002362  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10405  002366                     
 10406                           ; BSR set to: 0
 10407  002366  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10408  00236A                     
 10409                           ; BSR set to: 0
 10410  00236A  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10411  00236E                     
 10412                           ; BSR set to: 0
 10413  00236E  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10414  002372                     
 10415                           ; BSR set to: 0
 10416  002372  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10417  002376                     
 10418                           ; BSR set to: 0
 10419  002376  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10420  00237A                     
 10421                           ; BSR set to: 0
 10422  00237A  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10423  00237E                     
 10424                           ; BSR set to: 0
 10425  00237E  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10426  002382                     
 10427                           ; BSR set to: 0
 10428  002382  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10429  002386                     l7498:
 10430                           
 10431                           ; BSR set to: 0
 10432  002386  0E00               	movlw	0
 10433  002388  6F78               	movwf	___fladd@grs& (0+255),b
 10434  00238A                     
 10435                           ; BSR set to: 0
 10436  00238A  5177               	movf	___fladd@bexp& (0+255),w,b
 10437  00238C  C076  F036         	movff	___fladd@aexp,??___fladd
 10438  002390  6A37               	clrf	(??___fladd+1)^0,c
 10439  002392  5E36               	subwf	??___fladd^0,f,c
 10440  002394  0E00               	movlw	0
 10441  002396  5A37               	subwfb	(??___fladd+1)^0,f,c
 10442  002398  BE37               	btfsc	(??___fladd+1)^0,7,c
 10443  00239A  EFD8  F011         	goto	u7341
 10444  00239E  5037               	movf	(??___fladd+1)^0,w,c
 10445  0023A0  E109               	bnz	u7340
 10446  0023A2  0E1A               	movlw	26
 10447  0023A4  5C36               	subwf	??___fladd^0,w,c
 10448  0023A6  A0D8               	btfss	status,0,c
 10449  0023A8  EFD8  F011         	goto	u7341
 10450  0023AC  EFDA  F011         	goto	u7340
 10451  0023B0                     u7341:
 10452  0023B0  EF11  F012         	goto	l1927
 10453  0023B4                     u7340:
 10454  0023B4                     
 10455                           ; BSR set to: 0
 10456  0023B4  516D               	movf	___fladd@b& (0+255),w,b
 10457  0023B6  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10458  0023B8  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10459  0023BA  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10460  0023BC  A4D8               	btfss	status,2,c
 10461  0023BE  EFE3  F011         	goto	u7351
 10462  0023C2  EFE6  F011         	goto	u7350
 10463  0023C6                     u7351:
 10464  0023C6  0E01               	movlw	1
 10465  0023C8  EFE7  F011         	goto	u7360
 10466  0023CC                     u7350:
 10467  0023CC  0E00               	movlw	0
 10468  0023CE                     u7360:
 10469  0023CE  6F78               	movwf	___fladd@grs& (0+255),b
 10470  0023D0                     
 10471                           ; BSR set to: 0
 10472  0023D0  0E00               	movlw	0
 10473  0023D2  6F6D               	movwf	___fladd@b& (0+255),b
 10474  0023D4  0E00               	movlw	0
 10475  0023D6  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10476  0023D8  0E00               	movlw	0
 10477  0023DA  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10478  0023DC  0E00               	movlw	0
 10479  0023DE  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10480  0023E0                     
 10481                           ; BSR set to: 0
 10482  0023E0  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10483  0023E4  EF1A  F012         	goto	l1926
 10484  0023E8                     l1928:
 10485                           
 10486                           ; BSR set to: 0
 10487  0023E8  A178               	btfss	___fladd@grs& (0+255),0,b
 10488  0023EA  EFF9  F011         	goto	u7371
 10489  0023EE  EFFB  F011         	goto	u7370
 10490  0023F2                     u7371:
 10491  0023F2  EF01  F012         	goto	l7510
 10492  0023F6                     u7370:
 10493  0023F6                     
 10494                           ; BSR set to: 0
 10495  0023F6  90D8               	bcf	status,0,c
 10496  0023F8  3178               	rrcf	___fladd@grs& (0+255),w,b
 10497  0023FA  0901               	iorlw	1
 10498  0023FC  6F78               	movwf	___fladd@grs& (0+255),b
 10499  0023FE  EF03  F012         	goto	l7512
 10500  002402                     l7510:
 10501                           
 10502                           ; BSR set to: 0
 10503  002402  90D8               	bcf	status,0,c
 10504  002404  3378               	rrcf	___fladd@grs& (0+255),f,b
 10505  002406                     l7512:
 10506                           
 10507                           ; BSR set to: 0
 10508  002406  A16D               	btfss	___fladd@b& (0+255),0,b
 10509  002408  EF08  F012         	goto	u7381
 10510  00240C  EF0A  F012         	goto	u7380
 10511  002410                     u7381:
 10512  002410  EF0B  F012         	goto	l7516
 10513  002414                     u7380:
 10514  002414                     
 10515                           ; BSR set to: 0
 10516  002414  8F78               	bsf	___fladd@grs& (0+255),7,b
 10517  002416                     l7516:
 10518                           
 10519                           ; BSR set to: 0
 10520  002416  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10521  002418  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10522  00241A  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10523  00241C  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10524  00241E  336D               	rrcf	___fladd@b& (0+255),f,b
 10525  002420                     
 10526                           ; BSR set to: 0
 10527  002420  2B77               	incf	___fladd@bexp& (0+255),f,b
 10528  002422                     l1927:
 10529                           
 10530                           ; BSR set to: 0
 10531  002422  5176               	movf	___fladd@aexp& (0+255),w,b
 10532  002424  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10533  002426  A0D8               	btfss	status,0,c
 10534  002428  EF18  F012         	goto	u7391
 10535  00242C  EF1A  F012         	goto	u7390
 10536  002430                     u7391:
 10537  002430  EFF4  F011         	goto	l1928
 10538  002434                     u7390:
 10539  002434                     l1926:
 10540                           
 10541                           ; BSR set to: 0
 10542  002434  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10543  002436  EF1F  F012         	goto	u7401
 10544  00243A  EF21  F012         	goto	u7400
 10545  00243E                     u7401:
 10546  00243E  EF61  F012         	goto	l7544
 10547  002442                     u7400:
 10548  002442                     
 10549                           ; BSR set to: 0
 10550  002442  5177               	movf	___fladd@bexp& (0+255),w,b
 10551  002444  A4D8               	btfss	status,2,c
 10552  002446  EF27  F012         	goto	u7411
 10553  00244A  EF29  F012         	goto	u7410
 10554  00244E                     u7411:
 10555  00244E  EF33  F012         	goto	l7526
 10556  002452                     u7410:
 10557  002452                     
 10558                           ; BSR set to: 0
 10559  002452  0E00               	movlw	0
 10560  002454  6F6D               	movwf	?___fladd& (0+255),b
 10561  002456  0E00               	movlw	0
 10562  002458  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10563  00245A  0E00               	movlw	0
 10564  00245C  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10565  00245E  0E00               	movlw	0
 10566  002460  6F70               	movwf	(?___fladd+3)& (0+255),b
 10567  002462  EF82  F013         	goto	l1935
 10568  002466                     l7526:
 10569                           
 10570                           ; BSR set to: 0
 10571  002466  5171               	movf	___fladd@a& (0+255),w,b
 10572  002468  276D               	addwf	___fladd@b& (0+255),f,b
 10573  00246A  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10574  00246C  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10575  00246E  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10576  002470  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10577  002472  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10578  002474  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10579  002476                     
 10580                           ; BSR set to: 0
 10581  002476  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10582  002478  EF40  F012         	goto	u7421
 10583  00247C  EF42  F012         	goto	u7420
 10584  002480                     u7421:
 10585  002480  EFEE  F012         	goto	l7580
 10586  002484                     u7420:
 10587  002484                     
 10588                           ; BSR set to: 0
 10589  002484  A178               	btfss	___fladd@grs& (0+255),0,b
 10590  002486  EF47  F012         	goto	u7431
 10591  00248A  EF49  F012         	goto	u7430
 10592  00248E                     u7431:
 10593  00248E  EF4F  F012         	goto	l7534
 10594  002492                     u7430:
 10595  002492                     
 10596                           ; BSR set to: 0
 10597  002492  90D8               	bcf	status,0,c
 10598  002494  3178               	rrcf	___fladd@grs& (0+255),w,b
 10599  002496  0901               	iorlw	1
 10600  002498  6F78               	movwf	___fladd@grs& (0+255),b
 10601  00249A  EF51  F012         	goto	l7536
 10602  00249E                     l7534:
 10603                           
 10604                           ; BSR set to: 0
 10605  00249E  90D8               	bcf	status,0,c
 10606  0024A0  3378               	rrcf	___fladd@grs& (0+255),f,b
 10607  0024A2                     l7536:
 10608                           
 10609                           ; BSR set to: 0
 10610  0024A2  A16D               	btfss	___fladd@b& (0+255),0,b
 10611  0024A4  EF56  F012         	goto	u7441
 10612  0024A8  EF58  F012         	goto	u7440
 10613  0024AC                     u7441:
 10614  0024AC  EF59  F012         	goto	l7540
 10615  0024B0                     u7440:
 10616  0024B0                     
 10617                           ; BSR set to: 0
 10618  0024B0  8F78               	bsf	___fladd@grs& (0+255),7,b
 10619  0024B2                     l7540:
 10620                           
 10621                           ; BSR set to: 0
 10622  0024B2  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10623  0024B4  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10624  0024B6  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10625  0024B8  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10626  0024BA  336D               	rrcf	___fladd@b& (0+255),f,b
 10627  0024BC                     
 10628                           ; BSR set to: 0
 10629  0024BC  2B77               	incf	___fladd@bexp& (0+255),f,b
 10630  0024BE  EFEE  F012         	goto	l7580
 10631  0024C2                     l7544:
 10632                           
 10633                           ; BSR set to: 0
 10634  0024C2  5171               	movf	___fladd@a& (0+255),w,b
 10635  0024C4  5D6D               	subwf	___fladd@b& (0+255),w,b
 10636  0024C6  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10637  0024C8  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10638  0024CA  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10639  0024CC  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10640  0024CE  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10641  0024D0  0A80               	xorlw	128
 10642  0024D2  6E36               	movwf	??___fladd^0,c
 10643  0024D4  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10644  0024D6  0A80               	xorlw	128
 10645  0024D8  5836               	subwfb	??___fladd^0,w,c
 10646  0024DA  B0D8               	btfsc	status,0,c
 10647  0024DC  EF72  F012         	goto	u7451
 10648  0024E0  EF74  F012         	goto	u7450
 10649  0024E4                     u7451:
 10650  0024E4  EF9F  F012         	goto	l7554
 10651  0024E8                     u7450:
 10652  0024E8                     
 10653                           ; BSR set to: 0
 10654  0024E8  516D               	movf	___fladd@b& (0+255),w,b
 10655  0024EA  5D71               	subwf	___fladd@a& (0+255),w,b
 10656  0024EC  6E36               	movwf	??___fladd^0,c
 10657  0024EE  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10658  0024F0  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10659  0024F2  6E37               	movwf	(??___fladd+1)^0,c
 10660  0024F4  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10661  0024F6  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10662  0024F8  6E38               	movwf	(??___fladd+2)^0,c
 10663  0024FA  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10664  0024FC  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10665  0024FE  6E39               	movwf	(??___fladd+3)^0,c
 10666  002500  0EFF               	movlw	255
 10667  002502  2436               	addwf	??___fladd^0,w,c
 10668  002504  6F6D               	movwf	___fladd@b& (0+255),b
 10669  002506  0EFF               	movlw	255
 10670  002508  2037               	addwfc	(??___fladd+1)^0,w,c
 10671  00250A  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10672  00250C  0EFF               	movlw	255
 10673  00250E  2038               	addwfc	(??___fladd+2)^0,w,c
 10674  002510  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10675  002512  0EFF               	movlw	255
 10676  002514  2039               	addwfc	(??___fladd+3)^0,w,c
 10677  002516  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10678  002518  0E80               	movlw	128
 10679  00251A  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10680  00251C                     
 10681                           ; BSR set to: 0
 10682  00251C  6D78               	negf	___fladd@grs& (0+255),b
 10683  00251E                     
 10684                           ; BSR set to: 0
 10685  00251E  5178               	movf	___fladd@grs& (0+255),w,b
 10686  002520  A4D8               	btfss	status,2,c
 10687  002522  EF95  F012         	goto	u7461
 10688  002526  EF97  F012         	goto	u7460
 10689  00252A                     u7461:
 10690  00252A  EFA7  F012         	goto	l1943
 10691  00252E                     u7460:
 10692  00252E                     
 10693                           ; BSR set to: 0
 10694  00252E  0E01               	movlw	1
 10695  002530  276D               	addwf	___fladd@b& (0+255),f,b
 10696  002532  0E00               	movlw	0
 10697  002534  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10698  002536  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10699  002538  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10700  00253A  EFA7  F012         	goto	l1943
 10701  00253E                     l7554:
 10702                           
 10703                           ; BSR set to: 0
 10704  00253E  5171               	movf	___fladd@a& (0+255),w,b
 10705  002540  5F6D               	subwf	___fladd@b& (0+255),f,b
 10706  002542  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10707  002544  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10708  002546  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10709  002548  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10710  00254A  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10711  00254C  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10712  00254E                     l1943:
 10713                           
 10714                           ; BSR set to: 0
 10715  00254E  516D               	movf	___fladd@b& (0+255),w,b
 10716  002550  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10717  002552  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10718  002554  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10719  002556  A4D8               	btfss	status,2,c
 10720  002558  EFB0  F012         	goto	u7471
 10721  00255C  EFB2  F012         	goto	u7470
 10722  002560                     u7471:
 10723  002560  EFE7  F012         	goto	l7578
 10724  002564                     u7470:
 10725  002564                     
 10726                           ; BSR set to: 0
 10727  002564  5178               	movf	___fladd@grs& (0+255),w,b
 10728  002566  A4D8               	btfss	status,2,c
 10729  002568  EFB8  F012         	goto	u7481
 10730  00256C  EFBA  F012         	goto	u7480
 10731  002570                     u7481:
 10732  002570  EFE7  F012         	goto	l7578
 10733  002574                     u7480:
 10734  002574                     
 10735                           ; BSR set to: 0
 10736  002574  0E00               	movlw	0
 10737  002576  6F6D               	movwf	?___fladd& (0+255),b
 10738  002578  0E00               	movlw	0
 10739  00257A  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10740  00257C  0E00               	movlw	0
 10741  00257E  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10742  002580  0E00               	movlw	0
 10743  002582  6F70               	movwf	(?___fladd+3)& (0+255),b
 10744  002584  EF82  F013         	goto	l1935
 10745  002588                     l7562:
 10746                           
 10747                           ; BSR set to: 0
 10748  002588  90D8               	bcf	status,0,c
 10749  00258A  376D               	rlcf	___fladd@b& (0+255),f,b
 10750  00258C  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10751  00258E  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10752  002590  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10753  002592                     
 10754                           ; BSR set to: 0
 10755  002592  AF78               	btfss	___fladd@grs& (0+255),7,b
 10756  002594  EFCE  F012         	goto	u7491
 10757  002598  EFD0  F012         	goto	u7490
 10758  00259C                     u7491:
 10759  00259C  EFD1  F012         	goto	l7568
 10760  0025A0                     u7490:
 10761  0025A0                     
 10762                           ; BSR set to: 0
 10763  0025A0  816D               	bsf	___fladd@b& (0+255),0,b
 10764  0025A2                     l7568:
 10765                           
 10766                           ; BSR set to: 0
 10767  0025A2  A178               	btfss	___fladd@grs& (0+255),0,b
 10768  0025A4  EFD6  F012         	goto	u7501
 10769  0025A8  EFD8  F012         	goto	u7500
 10770  0025AC                     u7501:
 10771  0025AC  EFDC  F012         	goto	l7572
 10772  0025B0                     u7500:
 10773  0025B0                     
 10774                           ; BSR set to: 0
 10775  0025B0  80D8               	bsf	status,0,c
 10776  0025B2  3778               	rlcf	___fladd@grs& (0+255),f,b
 10777  0025B4  EFDE  F012         	goto	l7574
 10778  0025B8                     l7572:
 10779                           
 10780                           ; BSR set to: 0
 10781  0025B8  90D8               	bcf	status,0,c
 10782  0025BA  3778               	rlcf	___fladd@grs& (0+255),f,b
 10783  0025BC                     l7574:
 10784                           
 10785                           ; BSR set to: 0
 10786  0025BC  5177               	movf	___fladd@bexp& (0+255),w,b
 10787  0025BE  B4D8               	btfsc	status,2,c
 10788  0025C0  EFE4  F012         	goto	u7511
 10789  0025C4  EFE6  F012         	goto	u7510
 10790  0025C8                     u7511:
 10791  0025C8  EFE7  F012         	goto	l7578
 10792  0025CC                     u7510:
 10793  0025CC                     
 10794                           ; BSR set to: 0
 10795  0025CC  0777               	decf	___fladd@bexp& (0+255),f,b
 10796  0025CE                     l7578:
 10797                           
 10798                           ; BSR set to: 0
 10799  0025CE  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10800  0025D0  EFEC  F012         	goto	u7521
 10801  0025D4  EFEE  F012         	goto	u7520
 10802  0025D8                     u7521:
 10803  0025D8  EFC4  F012         	goto	l7562
 10804  0025DC                     u7520:
 10805  0025DC                     l7580:
 10806                           
 10807                           ; BSR set to: 0
 10808  0025DC  0E00               	movlw	0
 10809  0025DE  6F76               	movwf	___fladd@aexp& (0+255),b
 10810  0025E0                     
 10811                           ; BSR set to: 0
 10812  0025E0  AF78               	btfss	___fladd@grs& (0+255),7,b
 10813  0025E2  EFF5  F012         	goto	u7531
 10814  0025E6  EFF7  F012         	goto	u7530
 10815  0025EA                     u7531:
 10816  0025EA  EF0F  F013         	goto	l1952
 10817  0025EE                     u7530:
 10818  0025EE                     
 10819                           ; BSR set to: 0
 10820  0025EE  C078  F036         	movff	___fladd@grs,??___fladd
 10821  0025F2  0E7F               	movlw	127
 10822  0025F4  1636               	andwf	??___fladd^0,f,c
 10823  0025F6  B4D8               	btfsc	status,2,c
 10824  0025F8  EF00  F013         	goto	u7541
 10825  0025FC  EF02  F013         	goto	u7540
 10826  002600                     u7541:
 10827  002600  EF06  F013         	goto	l1953
 10828  002604                     u7540:
 10829  002604                     l7586:
 10830                           
 10831                           ; BSR set to: 0
 10832  002604  0E01               	movlw	1
 10833  002606  6F76               	movwf	___fladd@aexp& (0+255),b
 10834  002608  EF0F  F013         	goto	l1952
 10835  00260C                     l1953:
 10836                           
 10837                           ; BSR set to: 0
 10838  00260C  A16D               	btfss	___fladd@b& (0+255),0,b
 10839  00260E  EF0B  F013         	goto	u7551
 10840  002612  EF0D  F013         	goto	u7550
 10841  002616                     u7551:
 10842  002616  EF0F  F013         	goto	l1952
 10843  00261A                     u7550:
 10844  00261A  EF02  F013         	goto	l7586
 10845  00261E                     l1952:
 10846                           
 10847                           ; BSR set to: 0
 10848  00261E  5176               	movf	___fladd@aexp& (0+255),w,b
 10849  002620  B4D8               	btfsc	status,2,c
 10850  002622  EF15  F013         	goto	u7561
 10851  002626  EF17  F013         	goto	u7560
 10852  00262A                     u7561:
 10853  00262A  EF42  F013         	goto	l7598
 10854  00262E                     u7560:
 10855  00262E                     
 10856                           ; BSR set to: 0
 10857  00262E  0E01               	movlw	1
 10858  002630  276D               	addwf	___fladd@b& (0+255),f,b
 10859  002632  0E00               	movlw	0
 10860  002634  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10861  002636  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10862  002638  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10863  00263A                     
 10864                           ; BSR set to: 0
 10865  00263A  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10866  00263C  EF22  F013         	goto	u7571
 10867  002640  EF24  F013         	goto	u7570
 10868  002644                     u7571:
 10869  002644  EF42  F013         	goto	l7598
 10870  002648                     u7570:
 10871  002648                     
 10872                           ; BSR set to: 0
 10873  002648  C06D  F036         	movff	___fladd@b,??___fladd
 10874  00264C  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10875  002650  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10876  002654  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10877  002658  3439               	rlcf	(??___fladd+3)^0,w,c
 10878  00265A  3239               	rrcf	(??___fladd+3)^0,f,c
 10879  00265C  3238               	rrcf	(??___fladd+2)^0,f,c
 10880  00265E  3237               	rrcf	(??___fladd+1)^0,f,c
 10881  002660  3236               	rrcf	??___fladd^0,f,c
 10882  002662  C036  F06D         	movff	??___fladd,___fladd@b
 10883  002666  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10884  00266A  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10885  00266E  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10886  002672  2977               	incf	___fladd@bexp& (0+255),w,b
 10887  002674  B4D8               	btfsc	status,2,c
 10888  002676  EF3F  F013         	goto	u7581
 10889  00267A  EF41  F013         	goto	u7580
 10890  00267E                     u7581:
 10891  00267E  EF42  F013         	goto	l7598
 10892  002682                     u7580:
 10893  002682                     
 10894                           ; BSR set to: 0
 10895  002682  2B77               	incf	___fladd@bexp& (0+255),f,b
 10896  002684                     l7598:
 10897                           
 10898                           ; BSR set to: 0
 10899  002684  2977               	incf	___fladd@bexp& (0+255),w,b
 10900  002686  B4D8               	btfsc	status,2,c
 10901  002688  EF48  F013         	goto	u7591
 10902  00268C  EF4A  F013         	goto	u7590
 10903  002690                     u7591:
 10904  002690  EF52  F013         	goto	l7602
 10905  002694                     u7590:
 10906  002694                     
 10907                           ; BSR set to: 0
 10908  002694  5177               	movf	___fladd@bexp& (0+255),w,b
 10909  002696  A4D8               	btfss	status,2,c
 10910  002698  EF50  F013         	goto	u7601
 10911  00269C  EF52  F013         	goto	u7600
 10912  0026A0                     u7601:
 10913  0026A0  EF64  F013         	goto	l7606
 10914  0026A4                     u7600:
 10915  0026A4                     l7602:
 10916                           
 10917                           ; BSR set to: 0
 10918  0026A4  0E00               	movlw	0
 10919  0026A6  6F6D               	movwf	___fladd@b& (0+255),b
 10920  0026A8  0E00               	movlw	0
 10921  0026AA  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10922  0026AC  0E00               	movlw	0
 10923  0026AE  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10924  0026B0  0E00               	movlw	0
 10925  0026B2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10926  0026B4  5177               	movf	___fladd@bexp& (0+255),w,b
 10927  0026B6  A4D8               	btfss	status,2,c
 10928  0026B8  EF60  F013         	goto	u7611
 10929  0026BC  EF62  F013         	goto	u7610
 10930  0026C0                     u7611:
 10931  0026C0  EF64  F013         	goto	l7606
 10932  0026C4                     u7610:
 10933  0026C4                     
 10934                           ; BSR set to: 0
 10935  0026C4  0E00               	movlw	0
 10936  0026C6  6F75               	movwf	___fladd@signs& (0+255),b
 10937  0026C8                     l7606:
 10938                           
 10939                           ; BSR set to: 0
 10940  0026C8  A177               	btfss	___fladd@bexp& (0+255),0,b
 10941  0026CA  EF69  F013         	goto	u7621
 10942  0026CE  EF6B  F013         	goto	u7620
 10943  0026D2                     u7621:
 10944  0026D2  EF6E  F013         	goto	l7610
 10945  0026D6                     u7620:
 10946  0026D6                     
 10947                           ; BSR set to: 0
 10948  0026D6  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10949  0026D8  EF6F  F013         	goto	l7612
 10950  0026DC                     l7610:
 10951                           
 10952                           ; BSR set to: 0
 10953  0026DC  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10954  0026DE                     l7612:
 10955                           
 10956                           ; BSR set to: 0
 10957  0026DE  90D8               	bcf	status,0,c
 10958  0026E0  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10959  0026E2  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10960  0026E4                     
 10961                           ; BSR set to: 0
 10962  0026E4  AF75               	btfss	___fladd@signs& (0+255),7,b
 10963  0026E6  EF77  F013         	goto	u7631
 10964  0026EA  EF79  F013         	goto	u7630
 10965  0026EE                     u7631:
 10966  0026EE  EF7A  F013         	goto	l7618
 10967  0026F2                     u7630:
 10968  0026F2                     
 10969                           ; BSR set to: 0
 10970  0026F2  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10971  0026F4                     l7618:
 10972                           
 10973                           ; BSR set to: 0
 10974  0026F4  C06D  F06D         	movff	___fladd@b,?___fladd
 10975  0026F8  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10976  0026FC  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10977  002700  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10978  002704                     l1935:
 10979                           
 10980                           ; BSR set to: 0
 10981  002704  0012               	return		;funcret
 10982  002706                     __end_of___fladd:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function _calcMotorPow *****************
 10986 ;; Defined at:
 10987 ;;		line 342 in file "main.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10992 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10993 ;;  addMPow         1   41[BANK0 ] char 
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1    wreg      void 
 10996 ;; Registers used:
 10997 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10998 ;; Tracked objects:
 10999 ;;		On entry : 0/0
 11000 ;;		On exit  : 0/0
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11006 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;Total ram usage:        7 bytes
 11008 ;; Hardware stack levels used: 1
 11009 ;; Hardware stack levels required when called: 10
 11010 ;; This function calls:
 11011 ;;		___awdiv
 11012 ;;		___flmul
 11013 ;;		___fltol
 11014 ;;		___xxtofl
 11015 ;;		_actSpeed
 11016 ;;		_setMotor
 11017 ;; This function is called by:
 11018 ;;		_loop
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text40
 11023  004290                     __ptext40:
 11024                           	callstack 0
 11025  004290                     _calcMotorPow:
 11026                           	callstack 19
 11027  004290                     
 11028                           ;main.c: 343:     currentSpeed = actSpeed();
 11029  004290  ECD5  F028         	call	_actSpeed	;wreg free
 11030  004294  C022  F0E9         	movff	?_actSpeed,_currentSpeed
 11031  004298  C023  F0EA         	movff	?_actSpeed+1,_currentSpeed+1
 11032  00429C                     
 11033                           ;main.c: 345:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11034  00429C  0100               	movlb	0	; () banked
 11035  00429E  51E9               	movf	_currentSpeed& (0+255),w,b
 11036  0042A0  5DEB               	subwf	_setSpeed& (0+255),w,b
 11037  0042A2  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11038  0042A4  51EA               	movf	(_currentSpeed+1)& (0+255),w,b
 11039  0042A6  59EC               	subwfb	(_setSpeed+1)& (0+255),w,b
 11040  0042A8  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11041  0042AA                     
 11042                           ; BSR set to: 0
 11043                           ;main.c: 346:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11044  0042AA  0101               	movlb	1	; () banked
 11045  0042AC  512C               	movf	_oldSpeed& (0+255),w,b
 11046  0042AE  0100               	movlb	0	; () banked
 11047  0042B0  5DE9               	subwf	_currentSpeed& (0+255),w,b
 11048  0042B2  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11049  0042B4  0101               	movlb	1	; () banked
 11050  0042B6  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11051  0042B8  0100               	movlb	0	; () banked
 11052  0042BA  59EA               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11053  0042BC  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11054  0042BE                     
 11055                           ; BSR set to: 0
 11056                           ;main.c: 352:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11057  0042BE  0E0A               	movlw	10
 11058  0042C0  6E2E               	movwf	___flmul@a^0,c
 11059  0042C2  0ED7               	movlw	215
 11060  0042C4  6E2F               	movwf	(___flmul@a+1)^0,c
 11061  0042C6  0EA3               	movlw	163
 11062  0042C8  6E30               	movwf	(___flmul@a+2)^0,c
 11063  0042CA  0E3C               	movlw	60
 11064  0042CC  6E31               	movwf	(___flmul@a+3)^0,c
 11065  0042CE  0E00               	movlw	0
 11066  0042D0  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11067  0042D2  0E02               	movlw	2
 11068  0042D4  6E16               	movwf	___awdiv@divisor^0,c
 11069  0042D6  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11070  0042DA  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11071  0042DE  EC68  F026         	call	___awdiv	;wreg free
 11072  0042E2  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11073  0042E6  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11074  0042EA  5014               	movf	?___awdiv^0,w,c
 11075  0042EC  0100               	movlb	0	; () banked
 11076  0042EE  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11077  0042F0  5015               	movf	(?___awdiv+1)^0,w,c
 11078  0042F2  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11079  0042F4  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11080  0042F8  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11081  0042FC  0E00               	movlw	0
 11082  0042FE  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11083  004300  0EFF               	movlw	-1
 11084  004302  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11085  004304  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11086  004306  0E01               	movlw	1
 11087  004308  EC67  F01D         	call	___xxtofl
 11088  00430C  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11089  004310  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11090  004314  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11091  004318  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11092  00431C  EC83  F013         	call	___flmul	;wreg free
 11093  004320  C02A  F079         	movff	?___flmul,___fltol@f1
 11094  004324  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11095  004328  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11096  00432C  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11097  004330  EC0F  F023         	call	___fltol	;wreg free
 11098  004334  0100               	movlb	0	; () banked
 11099  004336  5179               	movf	?___fltol& (0+255),w,b
 11100  004338  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11101  00433A                     
 11102                           ; BSR set to: 0
 11103                           ;main.c: 354:     if (addMPow > (3)) {
 11104  00433A  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11105  00433C  0A80               	xorlw	128
 11106  00433E  0F7C               	addlw	-132
 11107  004340  A0D8               	btfss	status,0,c
 11108  004342  EFA5  F021         	goto	u10191
 11109  004346  EFA7  F021         	goto	u10190
 11110  00434A                     u10191:
 11111  00434A  EFAB  F021         	goto	l9116
 11112  00434E                     u10190:
 11113  00434E                     
 11114                           ; BSR set to: 0
 11115                           ;main.c: 355:         addMPow = (3);
 11116  00434E  0E03               	movlw	3
 11117  004350  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11118                           
 11119                           ;main.c: 356:     } else if (addMPow < -(3)) {
 11120  004352  EFB7  F021         	goto	l9120
 11121  004356                     l9116:
 11122                           
 11123                           ; BSR set to: 0
 11124  004356  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11125  004358  0A80               	xorlw	128
 11126  00435A  0F83               	addlw	131
 11127  00435C  B0D8               	btfsc	status,0,c
 11128  00435E  EFB3  F021         	goto	u10201
 11129  004362  EFB5  F021         	goto	u10200
 11130  004366                     u10201:
 11131  004366  EFB7  F021         	goto	l9120
 11132  00436A                     u10200:
 11133  00436A                     
 11134                           ; BSR set to: 0
 11135                           ;main.c: 357:         addMPow = -(3);
 11136  00436A  0EFD               	movlw	253
 11137  00436C  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11138  00436E                     l9120:
 11139                           
 11140                           ; BSR set to: 0
 11141                           ;main.c: 360:     actMotorPow += addMPow;
 11142  00436E  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11143  004370  27E7               	addwf	_actMotorPow& (0+255),f,b
 11144  004372  0E00               	movlw	0
 11145  004374  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11146  004376  0EFF               	movlw	255
 11147  004378  23E8               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11148  00437A                     
 11149                           ; BSR set to: 0
 11150                           ;main.c: 362:     if (actMotorPow > (700)) {
 11151  00437A  BFE8               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11152  00437C  EFC9  F021         	goto	u10211
 11153  004380  0EBD               	movlw	189
 11154  004382  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11155  004384  0E02               	movlw	2
 11156  004386  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11157  004388  A0D8               	btfss	status,0,c
 11158  00438A  EFC9  F021         	goto	u10211
 11159  00438E  EFCB  F021         	goto	u10210
 11160  004392                     u10211:
 11161  004392  EFD1  F021         	goto	l9126
 11162  004396                     u10210:
 11163  004396                     
 11164                           ; BSR set to: 0
 11165                           ;main.c: 363:         actMotorPow = (700);
 11166  004396  0E02               	movlw	2
 11167  004398  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11168  00439A  0EBC               	movlw	188
 11169  00439C  6FE7               	movwf	_actMotorPow& (0+255),b
 11170                           
 11171                           ;main.c: 364:     } else if (actMotorPow < (-400)) {
 11172  00439E  EFE3  F021         	goto	l9130
 11173  0043A2                     l9126:
 11174                           
 11175                           ; BSR set to: 0
 11176  0043A2  AFE8               	btfss	(_actMotorPow+1)& (0+255),7,b
 11177  0043A4  EFDD  F021         	goto	u10221
 11178  0043A8  0E70               	movlw	112
 11179  0043AA  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11180  0043AC  0EFE               	movlw	254
 11181  0043AE  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11182  0043B0  B0D8               	btfsc	status,0,c
 11183  0043B2  EFDD  F021         	goto	u10221
 11184  0043B6  EFDF  F021         	goto	u10220
 11185  0043BA                     u10221:
 11186  0043BA  EFE3  F021         	goto	l9130
 11187  0043BE                     u10220:
 11188  0043BE                     
 11189                           ; BSR set to: 0
 11190                           ;main.c: 365:         actMotorPow = (-400);
 11191  0043BE  0EFE               	movlw	254
 11192  0043C0  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11193  0043C2  0E70               	movlw	112
 11194  0043C4  6FE7               	movwf	_actMotorPow& (0+255),b
 11195  0043C6                     l9130:
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;main.c: 368:     setMotor(actMotorPow);
 11199  0043C6  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
 11200  0043CA  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11201  0043CE  EC92  F025         	call	_setMotor	;wreg free
 11202  0043D2                     
 11203                           ;main.c: 370:     oldSpeed = currentSpeed;
 11204  0043D2  C0E9  F12C         	movff	_currentSpeed,_oldSpeed
 11205  0043D6  C0EA  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11206  0043DA  0012               	return		;funcret
 11207  0043DC                     __end_of_calcMotorPow:
 11208                           	callstack 0
 11209                           
 11210 ;; *************** function _setMotor *****************
 11211 ;; Defined at:
 11212 ;;		line 373 in file "main.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;  motorPower      2   23[COMRAM] short 
 11215 ;; Auto vars:     Size  Location     Type
 11216 ;;		None
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  1    wreg      void 
 11219 ;; Registers used:
 11220 ;;		wreg, status,2, status,0, cstack
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/0
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11229 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;Total ram usage:        4 bytes
 11231 ;; Hardware stack levels used: 1
 11232 ;; Hardware stack levels required when called: 9
 11233 ;; This function calls:
 11234 ;;		_PWM7_LoadDutyValue
 11235 ;;		_PWM8_LoadDutyValue
 11236 ;; This function is called by:
 11237 ;;		_loop
 11238 ;;		_startAccell
 11239 ;;		_calcMotorPow
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           	psect	text41
 11244  004B24                     __ptext41:
 11245                           	callstack 0
 11246  004B24                     _setMotor:
 11247                           	callstack 19
 11248  004B24                     
 11249                           ;main.c: 374:     if (motorPower >= (40)) {
 11250  004B24  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11251  004B26  EF9E  F025         	goto	u9821
 11252  004B2A  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11253  004B2C  E109               	bnz	u9820
 11254  004B2E  0E28               	movlw	40
 11255  004B30  5C18               	subwf	setMotor@motorPower^0,w,c
 11256  004B32  A0D8               	btfss	status,0,c
 11257  004B34  EF9E  F025         	goto	u9821
 11258  004B38  EFA0  F025         	goto	u9820
 11259  004B3C                     u9821:
 11260  004B3C  EFC0  F025         	goto	l8840
 11261  004B40                     u9820:
 11262  004B40                     
 11263                           ;main.c: 375:         if (motorPower > (700)) {
 11264  004B40  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11265  004B42  EFAC  F025         	goto	u9831
 11266  004B46  0EBD               	movlw	189
 11267  004B48  5C18               	subwf	setMotor@motorPower^0,w,c
 11268  004B4A  0E02               	movlw	2
 11269  004B4C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11270  004B4E  A0D8               	btfss	status,0,c
 11271  004B50  EFAC  F025         	goto	u9831
 11272  004B54  EFAE  F025         	goto	u9830
 11273  004B58                     u9831:
 11274  004B58  EFB2  F025         	goto	l8836
 11275  004B5C                     u9830:
 11276  004B5C                     
 11277                           ;main.c: 376:             motorPower = (700);
 11278  004B5C  0E02               	movlw	2
 11279  004B5E  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11280  004B60  0EBC               	movlw	188
 11281  004B62  6E18               	movwf	setMotor@motorPower^0,c
 11282  004B64                     l8836:
 11283                           
 11284                           ;main.c: 378:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11285  004B64  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11286  004B68  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11287  004B6C  ECF2  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11288  004B70                     
 11289                           ;main.c: 379:         PWM8_LoadDutyValue(0);
 11290  004B70  0E00               	movlw	0
 11291  004B72  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11292  004B74  0E00               	movlw	0
 11293  004B76  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11294  004B78  ECD8  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11295                           
 11296                           ;main.c: 380:     } else if (motorPower <= -(40)) {
 11297  004B7C  EF02  F026         	goto	l1378
 11298  004B80                     l8840:
 11299  004B80  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11300  004B82  EFCC  F025         	goto	u9841
 11301  004B86  0ED9               	movlw	217
 11302  004B88  5C18               	subwf	setMotor@motorPower^0,w,c
 11303  004B8A  0EFF               	movlw	255
 11304  004B8C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11305  004B8E  B0D8               	btfsc	status,0,c
 11306  004B90  EFCC  F025         	goto	u9841
 11307  004B94  EFCE  F025         	goto	u9840
 11308  004B98                     u9841:
 11309  004B98  EFF6  F025         	goto	l8850
 11310  004B9C                     u9840:
 11311  004B9C                     
 11312                           ;main.c: 381:         if (motorPower < (-400)) {
 11313  004B9C  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11314  004B9E  EFDA  F025         	goto	u9851
 11315  004BA2  0E70               	movlw	112
 11316  004BA4  5C18               	subwf	setMotor@motorPower^0,w,c
 11317  004BA6  0EFE               	movlw	254
 11318  004BA8  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11319  004BAA  B0D8               	btfsc	status,0,c
 11320  004BAC  EFDA  F025         	goto	u9851
 11321  004BB0  EFDC  F025         	goto	u9850
 11322  004BB4                     u9851:
 11323  004BB4  EFE0  F025         	goto	l8846
 11324  004BB8                     u9850:
 11325  004BB8                     
 11326                           ;main.c: 382:             motorPower = (-400);
 11327  004BB8  0EFE               	movlw	254
 11328  004BBA  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11329  004BBC  0E70               	movlw	112
 11330  004BBE  6E18               	movwf	setMotor@motorPower^0,c
 11331  004BC0                     l8846:
 11332                           
 11333                           ;main.c: 384:         PWM7_LoadDutyValue(0);
 11334  004BC0  0E00               	movlw	0
 11335  004BC2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11336  004BC4  0E00               	movlw	0
 11337  004BC6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11338  004BC8  ECF2  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11339  004BCC                     
 11340                           ;main.c: 385:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11341  004BCC  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11342  004BD0  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11343  004BD4  1E1A               	comf	??_setMotor^0,f,c
 11344  004BD6  1E1B               	comf	(??_setMotor+1)^0,f,c
 11345  004BD8  4A1A               	infsnz	??_setMotor^0,f,c
 11346  004BDA  2A1B               	incf	(??_setMotor+1)^0,f,c
 11347  004BDC  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11348  004BE0  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11349  004BE4  ECD8  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11350                           
 11351                           ;main.c: 386:     } else {
 11352  004BE8  EF02  F026         	goto	l1378
 11353  004BEC                     l8850:
 11354                           
 11355                           ;main.c: 388:         PWM7_LoadDutyValue(0);
 11356  004BEC  0E00               	movlw	0
 11357  004BEE  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11358  004BF0  0E00               	movlw	0
 11359  004BF2  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11360  004BF4  ECF2  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11361                           
 11362                           ;main.c: 389:         PWM8_LoadDutyValue(0);
 11363  004BF8  0E00               	movlw	0
 11364  004BFA  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11365  004BFC  0E00               	movlw	0
 11366  004BFE  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11367  004C00  ECD8  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11368  004C04                     l1378:
 11369  004C04  0012               	return		;funcret
 11370  004C06                     __end_of_setMotor:
 11371                           	callstack 0
 11372                           
 11373 ;; *************** function _PWM8_LoadDutyValue *****************
 11374 ;; Defined at:
 11375 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      void 
 11382 ;; Registers used:
 11383 ;;		wreg, status,2, status,0
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11393 ;;Total ram usage:        4 bytes
 11394 ;; Hardware stack levels used: 1
 11395 ;; Hardware stack levels required when called: 8
 11396 ;; This function calls:
 11397 ;;		Nothing
 11398 ;; This function is called by:
 11399 ;;		_setMotor
 11400 ;; This function uses a non-reentrant model
 11401 ;;
 11402                           
 11403                           	psect	text42
 11404  0059B0                     __ptext42:
 11405                           	callstack 0
 11406  0059B0                     _PWM8_LoadDutyValue:
 11407                           	callstack 19
 11408  0059B0                     
 11409                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11410  0059B0  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11411  0059B4  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11412  0059B8  90D8               	bcf	status,0,c
 11413  0059BA  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11414  0059BC  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11415  0059BE  90D8               	bcf	status,0,c
 11416  0059C0  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11417  0059C2  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11418  0059C4  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11419  0059C6  6E61               	movwf	97,c	;volatile
 11420                           
 11421                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11422  0059C8  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11423  0059CC  0E03               	movlw	3
 11424  0059CE  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11425  0059D0  0E06               	movlw	6
 11426  0059D2  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11427  0059D4                     u9665:
 11428  0059D4  90D8               	bcf	status,0,c
 11429  0059D6  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11430  0059D8  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11431  0059DA  EFEA  F02C         	goto	u9665
 11432  0059DE  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11433  0059E0  6E60               	movwf	96,c	;volatile
 11434  0059E2  0012               	return		;funcret
 11435  0059E4                     __end_of_PWM8_LoadDutyValue:
 11436                           	callstack 0
 11437                           
 11438 ;; *************** function _PWM7_LoadDutyValue *****************
 11439 ;; Defined at:
 11440 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11441 ;; Parameters:    Size  Location     Type
 11442 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;		None
 11445 ;; Return value:  Size  Location     Type
 11446 ;;                  1    wreg      void 
 11447 ;; Registers used:
 11448 ;;		wreg, status,2, status,0
 11449 ;; Tracked objects:
 11450 ;;		On entry : 0/0
 11451 ;;		On exit  : 0/0
 11452 ;;		Unchanged: 0/0
 11453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11454 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11457 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11458 ;;Total ram usage:        4 bytes
 11459 ;; Hardware stack levels used: 1
 11460 ;; Hardware stack levels required when called: 8
 11461 ;; This function calls:
 11462 ;;		Nothing
 11463 ;; This function is called by:
 11464 ;;		_setMotor
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           	psect	text43
 11469  0059E4                     __ptext43:
 11470                           	callstack 0
 11471  0059E4                     _PWM7_LoadDutyValue:
 11472                           	callstack 19
 11473  0059E4                     
 11474                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11475  0059E4  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11476  0059E8  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11477  0059EC  90D8               	bcf	status,0,c
 11478  0059EE  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11479  0059F0  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11480  0059F2  90D8               	bcf	status,0,c
 11481  0059F4  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11482  0059F6  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11483  0059F8  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11484  0059FA  6E65               	movwf	101,c	;volatile
 11485                           
 11486                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11487  0059FC  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11488  005A00  0E03               	movlw	3
 11489  005A02  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11490  005A04  0E06               	movlw	6
 11491  005A06  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11492  005A08                     u9655:
 11493  005A08  90D8               	bcf	status,0,c
 11494  005A0A  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11495  005A0C  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11496  005A0E  EF04  F02D         	goto	u9655
 11497  005A12  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11498  005A14  6E64               	movwf	100,c	;volatile
 11499  005A16  0012               	return		;funcret
 11500  005A18                     __end_of_PWM7_LoadDutyValue:
 11501                           	callstack 0
 11502                           
 11503 ;; *************** function _actSpeed *****************
 11504 ;; Defined at:
 11505 ;;		line 66 in file "main.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;		None
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  speed           2   35[COMRAM] short 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  2   33[COMRAM] short 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0, cstack
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11519 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11523 ;;Total ram usage:        4 bytes
 11524 ;; Hardware stack levels used: 1
 11525 ;; Hardware stack levels required when called: 9
 11526 ;; This function calls:
 11527 ;;		___aldiv
 11528 ;; This function is called by:
 11529 ;;		_calcMotorPow
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text44
 11534  0051AA                     __ptext44:
 11535                           	callstack 0
 11536  0051AA                     _actSpeed:
 11537                           	callstack 19
 11538  0051AA                     
 11539                           ;main.c: 67:     int16_t speed = 0;
 11540  0051AA  0E00               	movlw	0
 11541  0051AC  6E25               	movwf	(actSpeed@speed+1)^0,c
 11542  0051AE  0E00               	movlw	0
 11543  0051B0  6E24               	movwf	actSpeed@speed^0,c
 11544  0051B2                     
 11545                           ;main.c: 68:     if (smtPeriod) {
 11546  0051B2  5048               	movf	_smtPeriod^0,w,c	;volatile
 11547  0051B4  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11548  0051B6  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11549  0051B8  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11550  0051BA  B4D8               	btfsc	status,2,c
 11551  0051BC  EFE2  F028         	goto	u6421
 11552  0051C0  EFE4  F028         	goto	u6420
 11553  0051C4                     u6421:
 11554  0051C4  EF1A  F029         	goto	l6662
 11555  0051C8                     u6420:
 11556  0051C8                     
 11557                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
 11558  0051C8  013C               	movlb	60	; () banked
 11559  0051CA  AB60               	btfss	96,5,b	;volatile
 11560  0051CC  EFEA  F028         	goto	u6431
 11561  0051D0  EFEC  F028         	goto	u6430
 11562  0051D4                     u6431:
 11563  0051D4  EF04  F029         	goto	l6660
 11564  0051D8                     u6430:
 11565  0051D8                     
 11566                           ; BSR set to: 60
 11567                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11568  0051D8  0E20               	movlw	32
 11569  0051DA  6E14               	movwf	___aldiv@dividend^0,c
 11570  0051DC  0EA1               	movlw	161
 11571  0051DE  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11572  0051E0  0E07               	movlw	7
 11573  0051E2  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11574  0051E4  0E00               	movlw	0
 11575  0051E6  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11576  0051E8  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11577  0051EC  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11578  0051F0  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11579  0051F4  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11580  0051F8  EC89  F022         	call	___aldiv	;wreg free
 11581  0051FC  C014  F024         	movff	?___aldiv,actSpeed@speed
 11582  005200  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11583                           
 11584                           ;main.c: 71:         } else {
 11585  005204  EF1A  F029         	goto	l6662
 11586  005208                     l6660:
 11587                           
 11588                           ; BSR set to: 60
 11589                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11590  005208  0EE0               	movlw	224
 11591  00520A  6E14               	movwf	___aldiv@dividend^0,c
 11592  00520C  0E5E               	movlw	94
 11593  00520E  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11594  005210  0EF8               	movlw	248
 11595  005212  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11596  005214  0EFF               	movlw	255
 11597  005216  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11598  005218  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11599  00521C  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11600  005220  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11601  005224  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11602  005228  EC89  F022         	call	___aldiv	;wreg free
 11603  00522C  C014  F024         	movff	?___aldiv,actSpeed@speed
 11604  005230  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11605  005234                     l6662:
 11606                           
 11607                           ;main.c: 75:     return speed;
 11608  005234  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11609  005238  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11610  00523C  0012               	return		;funcret
 11611  00523E                     __end_of_actSpeed:
 11612                           	callstack 0
 11613                           
 11614 ;; *************** function ___aldiv *****************
 11615 ;; Defined at:
 11616 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11617 ;; Parameters:    Size  Location     Type
 11618 ;;  dividend        4   19[COMRAM] long 
 11619 ;;  divisor         4   23[COMRAM] long 
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;  quotient        4   29[COMRAM] long 
 11622 ;;  sign            1   28[COMRAM] unsigned char 
 11623 ;;  counter         1   27[COMRAM] unsigned char 
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  4   19[COMRAM] long 
 11626 ;; Registers used:
 11627 ;;		wreg, status,2, status,0
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11633 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11637 ;;Total ram usage:       14 bytes
 11638 ;; Hardware stack levels used: 1
 11639 ;; Hardware stack levels required when called: 8
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_actSpeed
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text45
 11648  004512                     __ptext45:
 11649                           	callstack 0
 11650  004512                     ___aldiv:
 11651                           	callstack 19
 11652  004512  0E00               	movlw	0
 11653  004514  6E1D               	movwf	___aldiv@sign^0,c
 11654  004516  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11655  004518  EF92  F022         	goto	u6150
 11656  00451C  EF90  F022         	goto	u6151
 11657  004520                     u6151:
 11658  004520  EF9C  F022         	goto	l6438
 11659  004524                     u6150:
 11660  004524  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11661  004526  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11662  004528  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11663  00452A  6C18               	negf	___aldiv@divisor^0,c
 11664  00452C  0E00               	movlw	0
 11665  00452E  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11666  004530  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11667  004532  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11668  004534  0E01               	movlw	1
 11669  004536  6E1D               	movwf	___aldiv@sign^0,c
 11670  004538                     l6438:
 11671  004538  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11672  00453A  EFA3  F022         	goto	u6160
 11673  00453E  EFA1  F022         	goto	u6161
 11674  004542                     u6161:
 11675  004542  EFAD  F022         	goto	l6444
 11676  004546                     u6160:
 11677  004546  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11678  004548  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11679  00454A  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11680  00454C  6C14               	negf	___aldiv@dividend^0,c
 11681  00454E  0E00               	movlw	0
 11682  004550  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11683  004552  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11684  004554  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11685  004556  0E01               	movlw	1
 11686  004558  1A1D               	xorwf	___aldiv@sign^0,f,c
 11687  00455A                     l6444:
 11688  00455A  0E00               	movlw	0
 11689  00455C  6E1E               	movwf	___aldiv@quotient^0,c
 11690  00455E  0E00               	movlw	0
 11691  004560  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11692  004562  0E00               	movlw	0
 11693  004564  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11694  004566  0E00               	movlw	0
 11695  004568  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11696  00456A  5018               	movf	___aldiv@divisor^0,w,c
 11697  00456C  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11698  00456E  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11699  004570  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11700  004572  B4D8               	btfsc	status,2,c
 11701  004574  EFBE  F022         	goto	u6171
 11702  004578  EFC0  F022         	goto	u6170
 11703  00457C                     u6171:
 11704  00457C  EFF6  F022         	goto	l6466
 11705  004580                     u6170:
 11706  004580  0E01               	movlw	1
 11707  004582  6E1C               	movwf	___aldiv@counter^0,c
 11708  004584  EFCA  F022         	goto	l6452
 11709  004588                     l6450:
 11710  004588  90D8               	bcf	status,0,c
 11711  00458A  3618               	rlcf	___aldiv@divisor^0,f,c
 11712  00458C  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11713  00458E  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11714  004590  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11715  004592  2A1C               	incf	___aldiv@counter^0,f,c
 11716  004594                     l6452:
 11717  004594  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11718  004596  EFCF  F022         	goto	u6181
 11719  00459A  EFD1  F022         	goto	u6180
 11720  00459E                     u6181:
 11721  00459E  EFC4  F022         	goto	l6450
 11722  0045A2                     u6180:
 11723  0045A2                     l6454:
 11724  0045A2  90D8               	bcf	status,0,c
 11725  0045A4  361E               	rlcf	___aldiv@quotient^0,f,c
 11726  0045A6  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11727  0045A8  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11728  0045AA  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11729  0045AC  5018               	movf	___aldiv@divisor^0,w,c
 11730  0045AE  5C14               	subwf	___aldiv@dividend^0,w,c
 11731  0045B0  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11732  0045B2  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11733  0045B4  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11734  0045B6  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11735  0045B8  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11736  0045BA  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11737  0045BC  A0D8               	btfss	status,0,c
 11738  0045BE  EFE3  F022         	goto	u6191
 11739  0045C2  EFE5  F022         	goto	u6190
 11740  0045C6                     u6191:
 11741  0045C6  EFEE  F022         	goto	l6462
 11742  0045CA                     u6190:
 11743  0045CA  5018               	movf	___aldiv@divisor^0,w,c
 11744  0045CC  5E14               	subwf	___aldiv@dividend^0,f,c
 11745  0045CE  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11746  0045D0  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11747  0045D2  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11748  0045D4  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11749  0045D6  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11750  0045D8  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11751  0045DA  801E               	bsf	___aldiv@quotient^0,0,c
 11752  0045DC                     l6462:
 11753  0045DC  90D8               	bcf	status,0,c
 11754  0045DE  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11755  0045E0  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11756  0045E2  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11757  0045E4  3218               	rrcf	___aldiv@divisor^0,f,c
 11758  0045E6  2E1C               	decfsz	___aldiv@counter^0,f,c
 11759  0045E8  EFD1  F022         	goto	l6454
 11760  0045EC                     l6466:
 11761  0045EC  501D               	movf	___aldiv@sign^0,w,c
 11762  0045EE  B4D8               	btfsc	status,2,c
 11763  0045F0  EFFC  F022         	goto	u6201
 11764  0045F4  EFFE  F022         	goto	u6200
 11765  0045F8                     u6201:
 11766  0045F8  EF06  F023         	goto	l6470
 11767  0045FC                     u6200:
 11768  0045FC  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11769  0045FE  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11770  004600  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11771  004602  6C1E               	negf	___aldiv@quotient^0,c
 11772  004604  0E00               	movlw	0
 11773  004606  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11774  004608  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11775  00460A  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11776  00460C                     l6470:
 11777  00460C  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11778  004610  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11779  004614  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11780  004618  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11781  00461C  0012               	return		;funcret
 11782  00461E                     __end_of___aldiv:
 11783                           	callstack 0
 11784                           
 11785 ;; *************** function ___xxtofl *****************
 11786 ;; Defined at:
 11787 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  sign            1    wreg     unsigned char 
 11790 ;;  val             4   27[COMRAM] long 
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  sign            1   35[COMRAM] unsigned char 
 11793 ;;  arg             4   37[COMRAM] unsigned long 
 11794 ;;  exp             1   36[COMRAM] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  4   27[COMRAM] unsigned char 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11804 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11805 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11806 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11807 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11808 ;;Total ram usage:       14 bytes
 11809 ;; Hardware stack levels used: 1
 11810 ;; Hardware stack levels required when called: 8
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		_loop
 11815 ;;		_checkBatt
 11816 ;;		_startAccell
 11817 ;;		_calcSteering
 11818 ;;		_calcSpeed
 11819 ;;		_calcMotorPow
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text46
 11824  003ACE                     __ptext46:
 11825                           	callstack 0
 11826  003ACE                     ___xxtofl:
 11827                           	callstack 19
 11828                           
 11829                           ;incstack = 0
 11830                           ;___xxtofl@sign stored from wreg
 11831  003ACE  6E24               	movwf	___xxtofl@sign^0,c
 11832  003AD0  5024               	movf	___xxtofl@sign^0,w,c
 11833  003AD2  B4D8               	btfsc	status,2,c
 11834  003AD4  EF6E  F01D         	goto	u9711
 11835  003AD8  EF70  F01D         	goto	u9710
 11836  003ADC                     u9711:
 11837  003ADC  EF92  F01D         	goto	l2053
 11838  003AE0                     u9710:
 11839  003AE0  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11840  003AE2  EF77  F01D         	goto	u9720
 11841  003AE6  EF75  F01D         	goto	u9721
 11842  003AEA                     u9721:
 11843  003AEA  EF92  F01D         	goto	l2053
 11844  003AEE                     u9720:
 11845  003AEE  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11846  003AF2  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11847  003AF6  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11848  003AFA  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11849  003AFE  1E20               	comf	??___xxtofl^0,f,c
 11850  003B00  1E21               	comf	(??___xxtofl+1)^0,f,c
 11851  003B02  1E22               	comf	(??___xxtofl+2)^0,f,c
 11852  003B04  1E23               	comf	(??___xxtofl+3)^0,f,c
 11853  003B06  2A20               	incf	??___xxtofl^0,f,c
 11854  003B08  0E00               	movlw	0
 11855  003B0A  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11856  003B0C  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11857  003B0E  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11858  003B10  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11859  003B14  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11860  003B18  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11861  003B1C  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11862  003B20  EF9A  F01D         	goto	l8782
 11863  003B24                     l2053:
 11864  003B24  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11865  003B28  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11866  003B2C  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11867  003B30  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11868  003B34                     l8782:
 11869  003B34  501C               	movf	___xxtofl@val^0,w,c
 11870  003B36  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11871  003B38  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11872  003B3A  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11873  003B3C  A4D8               	btfss	status,2,c
 11874  003B3E  EFA3  F01D         	goto	u9731
 11875  003B42  EFA5  F01D         	goto	u9730
 11876  003B46                     u9731:
 11877  003B46  EFAF  F01D         	goto	l8788
 11878  003B4A                     u9730:
 11879  003B4A  0E00               	movlw	0
 11880  003B4C  6E1C               	movwf	?___xxtofl^0,c
 11881  003B4E  0E00               	movlw	0
 11882  003B50  6E1D               	movwf	(?___xxtofl+1)^0,c
 11883  003B52  0E00               	movlw	0
 11884  003B54  6E1E               	movwf	(?___xxtofl+2)^0,c
 11885  003B56  0E00               	movlw	0
 11886  003B58  6E1F               	movwf	(?___xxtofl+3)^0,c
 11887  003B5A  EF40  F01E         	goto	l2056
 11888  003B5E                     l8788:
 11889  003B5E  0E96               	movlw	150
 11890  003B60  6E25               	movwf	___xxtofl@exp^0,c
 11891  003B62  EFB9  F01D         	goto	l8792
 11892  003B66                     l8790:
 11893  003B66  2A25               	incf	___xxtofl@exp^0,f,c
 11894  003B68  90D8               	bcf	status,0,c
 11895  003B6A  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11896  003B6C  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11897  003B6E  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11898  003B70  3226               	rrcf	___xxtofl@arg^0,f,c
 11899  003B72                     l8792:
 11900  003B72  0E00               	movlw	0
 11901  003B74  1426               	andwf	___xxtofl@arg^0,w,c
 11902  003B76  6E20               	movwf	??___xxtofl^0,c
 11903  003B78  0E00               	movlw	0
 11904  003B7A  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11905  003B7C  6E21               	movwf	(??___xxtofl+1)^0,c
 11906  003B7E  0E00               	movlw	0
 11907  003B80  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11908  003B82  6E22               	movwf	(??___xxtofl+2)^0,c
 11909  003B84  0EFE               	movlw	254
 11910  003B86  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11911  003B88  6E23               	movwf	(??___xxtofl+3)^0,c
 11912  003B8A  5020               	movf	??___xxtofl^0,w,c
 11913  003B8C  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11914  003B8E  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11915  003B90  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11916  003B92  A4D8               	btfss	status,2,c
 11917  003B94  EFCE  F01D         	goto	u9741
 11918  003B98  EFD0  F01D         	goto	u9740
 11919  003B9C                     u9741:
 11920  003B9C  EFB3  F01D         	goto	l8790
 11921  003BA0                     u9740:
 11922  003BA0  EFDE  F01D         	goto	l2060
 11923  003BA4                     l8794:
 11924  003BA4  2A25               	incf	___xxtofl@exp^0,f,c
 11925  003BA6  0E01               	movlw	1
 11926  003BA8  2626               	addwf	___xxtofl@arg^0,f,c
 11927  003BAA  0E00               	movlw	0
 11928  003BAC  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11929  003BAE  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11930  003BB0  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11931  003BB2  90D8               	bcf	status,0,c
 11932  003BB4  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11933  003BB6  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11934  003BB8  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11935  003BBA  3226               	rrcf	___xxtofl@arg^0,f,c
 11936  003BBC                     l2060:
 11937  003BBC  0E00               	movlw	0
 11938  003BBE  1426               	andwf	___xxtofl@arg^0,w,c
 11939  003BC0  6E20               	movwf	??___xxtofl^0,c
 11940  003BC2  0E00               	movlw	0
 11941  003BC4  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11942  003BC6  6E21               	movwf	(??___xxtofl+1)^0,c
 11943  003BC8  0E00               	movlw	0
 11944  003BCA  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11945  003BCC  6E22               	movwf	(??___xxtofl+2)^0,c
 11946  003BCE  0EFF               	movlw	255
 11947  003BD0  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11948  003BD2  6E23               	movwf	(??___xxtofl+3)^0,c
 11949  003BD4  5020               	movf	??___xxtofl^0,w,c
 11950  003BD6  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11951  003BD8  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11952  003BDA  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11953  003BDC  A4D8               	btfss	status,2,c
 11954  003BDE  EFF3  F01D         	goto	u9751
 11955  003BE2  EFF5  F01D         	goto	u9750
 11956  003BE6                     u9751:
 11957  003BE6  EFD2  F01D         	goto	l8794
 11958  003BEA                     u9750:
 11959  003BEA  EFFD  F01D         	goto	l8802
 11960  003BEE                     l8800:
 11961  003BEE  0625               	decf	___xxtofl@exp^0,f,c
 11962  003BF0  90D8               	bcf	status,0,c
 11963  003BF2  3626               	rlcf	___xxtofl@arg^0,f,c
 11964  003BF4  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11965  003BF6  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11966  003BF8  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11967  003BFA                     l8802:
 11968  003BFA  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11969  003BFC  EF02  F01E         	goto	u9761
 11970  003C00  EF04  F01E         	goto	u9760
 11971  003C04                     u9761:
 11972  003C04  EF0C  F01E         	goto	l2067
 11973  003C08                     u9760:
 11974  003C08  0E02               	movlw	2
 11975  003C0A  6025               	cpfslt	___xxtofl@exp^0,c
 11976  003C0C  EF0A  F01E         	goto	u9771
 11977  003C10  EF0C  F01E         	goto	u9770
 11978  003C14                     u9771:
 11979  003C14  EFF7  F01D         	goto	l8800
 11980  003C18                     u9770:
 11981  003C18                     l2067:
 11982  003C18  B025               	btfsc	___xxtofl@exp^0,0,c
 11983  003C1A  EF11  F01E         	goto	u9781
 11984  003C1E  EF13  F01E         	goto	u9780
 11985  003C22                     u9781:
 11986  003C22  EF14  F01E         	goto	l8808
 11987  003C26                     u9780:
 11988  003C26  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11989  003C28                     l8808:
 11990  003C28  90D8               	bcf	status,0,c
 11991  003C2A  3225               	rrcf	___xxtofl@exp^0,f,c
 11992  003C2C  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11993  003C30  6A21               	clrf	(??___xxtofl+1)^0,c
 11994  003C32  6A22               	clrf	(??___xxtofl+2)^0,c
 11995  003C34  6A23               	clrf	(??___xxtofl+3)^0,c
 11996  003C36  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11997  003C3A  6A22               	clrf	(??___xxtofl+2)^0,c
 11998  003C3C  6A21               	clrf	(??___xxtofl+1)^0,c
 11999  003C3E  6A20               	clrf	??___xxtofl^0,c
 12000  003C40  5020               	movf	??___xxtofl^0,w,c
 12001  003C42  1226               	iorwf	___xxtofl@arg^0,f,c
 12002  003C44  5021               	movf	(??___xxtofl+1)^0,w,c
 12003  003C46  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 12004  003C48  5022               	movf	(??___xxtofl+2)^0,w,c
 12005  003C4A  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 12006  003C4C  5023               	movf	(??___xxtofl+3)^0,w,c
 12007  003C4E  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 12008  003C50  5024               	movf	___xxtofl@sign^0,w,c
 12009  003C52  B4D8               	btfsc	status,2,c
 12010  003C54  EF2E  F01E         	goto	u9791
 12011  003C58  EF30  F01E         	goto	u9790
 12012  003C5C                     u9791:
 12013  003C5C  EF38  F01E         	goto	l8818
 12014  003C60                     u9790:
 12015  003C60  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 12016  003C62  EF37  F01E         	goto	u9800
 12017  003C66  EF35  F01E         	goto	u9801
 12018  003C6A                     u9801:
 12019  003C6A  EF38  F01E         	goto	l8818
 12020  003C6E                     u9800:
 12021  003C6E  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 12022  003C70                     l8818:
 12023  003C70  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 12024  003C74  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12025  003C78  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12026  003C7C  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12027  003C80                     l2056:
 12028  003C80  0012               	return		;funcret
 12029  003C82                     __end_of___xxtofl:
 12030                           	callstack 0
 12031                           
 12032 ;; *************** function ___fltol *****************
 12033 ;; Defined at:
 12034 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;  f1              4   25[BANK0 ] unsigned char 
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;  exp1            1   34[BANK0 ] unsigned char 
 12039 ;;  sign1           1   33[BANK0 ] unsigned char 
 12040 ;; Return value:  Size  Location     Type
 12041 ;;                  4   25[BANK0 ] long 
 12042 ;; Registers used:
 12043 ;;		wreg, status,2, status,0
 12044 ;; Tracked objects:
 12045 ;;		On entry : 0/0
 12046 ;;		On exit  : 0/0
 12047 ;;		Unchanged: 0/0
 12048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12052 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12053 ;;Total ram usage:       10 bytes
 12054 ;; Hardware stack levels used: 1
 12055 ;; Hardware stack levels required when called: 8
 12056 ;; This function calls:
 12057 ;;		Nothing
 12058 ;; This function is called by:
 12059 ;;		_startAccell
 12060 ;;		_calcSteering
 12061 ;;		_calcSpeed
 12062 ;;		_calcMotorPow
 12063 ;;		_efgtoa
 12064 ;; This function uses a non-reentrant model
 12065 ;;
 12066                           
 12067                           	psect	text47
 12068  00461E                     __ptext47:
 12069                           	callstack 0
 12070  00461E                     ___fltol:
 12071                           	callstack 16
 12072  00461E  0100               	movlb	0	; () banked
 12073  004620  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12074  004622  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12075  004624  6F82               	movwf	___fltol@exp1& (0+255),b
 12076  004626  5182               	movf	___fltol@exp1& (0+255),w,b
 12077  004628  A4D8               	btfss	status,2,c
 12078  00462A  EF19  F023         	goto	u8441
 12079  00462E  EF1B  F023         	goto	u8440
 12080  004632                     u8441:
 12081  004632  EF25  F023         	goto	l8130
 12082  004636                     u8440:
 12083  004636                     l8126:
 12084                           
 12085                           ; BSR set to: 0
 12086  004636  0E00               	movlw	0
 12087  004638  6F79               	movwf	?___fltol& (0+255),b
 12088  00463A  0E00               	movlw	0
 12089  00463C  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12090  00463E  0E00               	movlw	0
 12091  004640  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12092  004642  0E00               	movlw	0
 12093  004644  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12094  004646  EF92  F023         	goto	l1695
 12095  00464A                     l8130:
 12096                           
 12097                           ; BSR set to: 0
 12098  00464A  C079  F07D         	movff	___fltol@f1,??___fltol
 12099  00464E  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12100  004652  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12101  004656  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12102  00465A  0E20               	movlw	32
 12103  00465C  EF35  F023         	goto	u8450
 12104  004660                     u8455:
 12105  004660  90D8               	bcf	status,0,c
 12106  004662  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12107  004664  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12108  004666  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12109  004668  337D               	rrcf	??___fltol& (0+255),f,b
 12110  00466A                     u8450:
 12111  00466A  2EE8               	decfsz	wreg,f,c
 12112  00466C  EF30  F023         	goto	u8455
 12113  004670  517D               	movf	??___fltol& (0+255),w,b
 12114  004672  6F81               	movwf	___fltol@sign1& (0+255),b
 12115  004674                     
 12116                           ; BSR set to: 0
 12117  004674  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12118  004676                     
 12119                           ; BSR set to: 0
 12120  004676  0EFF               	movlw	255
 12121  004678  1779               	andwf	___fltol@f1& (0+255),f,b
 12122  00467A  0EFF               	movlw	255
 12123  00467C  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12124  00467E  0EFF               	movlw	255
 12125  004680  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12126  004682  0E00               	movlw	0
 12127  004684  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12128  004686                     
 12129                           ; BSR set to: 0
 12130  004686  0E96               	movlw	150
 12131  004688  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12132  00468A                     
 12133                           ; BSR set to: 0
 12134  00468A  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12135  00468C  EF4C  F023         	goto	u8460
 12136  004690  EF4A  F023         	goto	u8461
 12137  004694                     u8461:
 12138  004694  EF62  F023         	goto	l8150
 12139  004698                     u8460:
 12140  004698                     
 12141                           ; BSR set to: 0
 12142  004698  5182               	movf	___fltol@exp1& (0+255),w,b
 12143  00469A  0A80               	xorlw	128
 12144  00469C  0F97               	addlw	151
 12145  00469E  B0D8               	btfsc	status,0,c
 12146  0046A0  EF54  F023         	goto	u8471
 12147  0046A4  EF56  F023         	goto	u8470
 12148  0046A8                     u8471:
 12149  0046A8  EF58  F023         	goto	l8146
 12150  0046AC                     u8470:
 12151  0046AC  EF1B  F023         	goto	l8126
 12152  0046B0                     l8146:
 12153                           
 12154                           ; BSR set to: 0
 12155  0046B0  90D8               	bcf	status,0,c
 12156  0046B2  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12157  0046B4  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12158  0046B6  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12159  0046B8  3379               	rrcf	___fltol@f1& (0+255),f,b
 12160  0046BA                     
 12161                           ; BSR set to: 0
 12162  0046BA  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12163  0046BC  EF58  F023         	goto	l8146
 12164  0046C0  EF7A  F023         	goto	l8160
 12165  0046C4                     l8150:
 12166                           
 12167                           ; BSR set to: 0
 12168  0046C4  0E1F               	movlw	31
 12169  0046C6  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12170  0046C8  EF68  F023         	goto	u8481
 12171  0046CC  EF6A  F023         	goto	u8480
 12172  0046D0                     u8481:
 12173  0046D0  EF72  F023         	goto	l8158
 12174  0046D4                     u8480:
 12175  0046D4  EF1B  F023         	goto	l8126
 12176  0046D8                     l8156:
 12177                           
 12178                           ; BSR set to: 0
 12179  0046D8  90D8               	bcf	status,0,c
 12180  0046DA  3779               	rlcf	___fltol@f1& (0+255),f,b
 12181  0046DC  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12182  0046DE  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12183  0046E0  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12184  0046E2  0782               	decf	___fltol@exp1& (0+255),f,b
 12185  0046E4                     l8158:
 12186                           
 12187                           ; BSR set to: 0
 12188  0046E4  5182               	movf	___fltol@exp1& (0+255),w,b
 12189  0046E6  A4D8               	btfss	status,2,c
 12190  0046E8  EF78  F023         	goto	u8491
 12191  0046EC  EF7A  F023         	goto	u8490
 12192  0046F0                     u8491:
 12193  0046F0  EF6C  F023         	goto	l8156
 12194  0046F4                     u8490:
 12195  0046F4                     l8160:
 12196                           
 12197                           ; BSR set to: 0
 12198  0046F4  5181               	movf	___fltol@sign1& (0+255),w,b
 12199  0046F6  B4D8               	btfsc	status,2,c
 12200  0046F8  EF80  F023         	goto	u8501
 12201  0046FC  EF82  F023         	goto	u8500
 12202  004700                     u8501:
 12203  004700  EF8A  F023         	goto	l8164
 12204  004704                     u8500:
 12205  004704                     
 12206                           ; BSR set to: 0
 12207  004704  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12208  004706  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12209  004708  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12210  00470A  6D79               	negf	___fltol@f1& (0+255),b
 12211  00470C  0E00               	movlw	0
 12212  00470E  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12213  004710  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12214  004712  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12215  004714                     l8164:
 12216                           
 12217                           ; BSR set to: 0
 12218  004714  C079  F079         	movff	___fltol@f1,?___fltol
 12219  004718  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12220  00471C  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12221  004720  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12222  004724                     l1695:
 12223                           
 12224                           ; BSR set to: 0
 12225  004724  0012               	return		;funcret
 12226  004726                     __end_of___fltol:
 12227                           	callstack 0
 12228                           
 12229 ;; *************** function ___flmul *****************
 12230 ;; Defined at:
 12231 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12232 ;; Parameters:    Size  Location     Type
 12233 ;;  b               4   41[COMRAM] long 
 12234 ;;  a               4   45[COMRAM] long 
 12235 ;; Auto vars:     Size  Location     Type
 12236 ;;  prod            4    7[BANK0 ] struct .
 12237 ;;  grs             4    2[BANK0 ] unsigned long 
 12238 ;;  temp            2   11[BANK0 ] struct .
 12239 ;;  bexp            1    6[BANK0 ] unsigned char 
 12240 ;;  aexp            1    1[BANK0 ] unsigned char 
 12241 ;;  sign            1    0[BANK0 ] unsigned char 
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  4   41[COMRAM] unsigned char 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0, prodl, prodh
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12252 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12254 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12255 ;;Total ram usage:       25 bytes
 12256 ;; Hardware stack levels used: 1
 12257 ;; Hardware stack levels required when called: 8
 12258 ;; This function calls:
 12259 ;;		Nothing
 12260 ;; This function is called by:
 12261 ;;		_startAccell
 12262 ;;		_calcSteering
 12263 ;;		_calcSpeed
 12264 ;;		_calcMotorPow
 12265 ;;		_efgtoa
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           	psect	text48
 12270  002706                     __ptext48:
 12271                           	callstack 0
 12272  002706                     ___flmul:
 12273                           	callstack 16
 12274  002706  502D               	movf	(___flmul@b+3)^0,w,c
 12275  002708  0B80               	andlw	128
 12276  00270A  0100               	movlb	0	; () banked
 12277  00270C  6F60               	movwf	___flmul@sign& (0+255),b
 12278  00270E  502D               	movf	(___flmul@b+3)^0,w,c
 12279  002710  242D               	addwf	(___flmul@b+3)^0,w,c
 12280  002712  6F66               	movwf	___flmul@bexp& (0+255),b
 12281  002714                     
 12282                           ; BSR set to: 0
 12283  002714  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12284  002716  EF8F  F013         	goto	u8041
 12285  00271A  EF91  F013         	goto	u8040
 12286  00271E                     u8041:
 12287  00271E  EF92  F013         	goto	l7868
 12288  002722                     u8040:
 12289  002722                     
 12290                           ; BSR set to: 0
 12291  002722  8166               	bsf	___flmul@bexp& (0+255),0,b
 12292  002724                     l7868:
 12293                           
 12294                           ; BSR set to: 0
 12295  002724  5166               	movf	___flmul@bexp& (0+255),w,b
 12296  002726  B4D8               	btfsc	status,2,c
 12297  002728  EF98  F013         	goto	u8051
 12298  00272C  EF9A  F013         	goto	u8050
 12299  002730                     u8051:
 12300  002730  EFAD  F013         	goto	l7876
 12301  002734                     u8050:
 12302  002734                     
 12303                           ; BSR set to: 0
 12304  002734  2966               	incf	___flmul@bexp& (0+255),w,b
 12305  002736  A4D8               	btfss	status,2,c
 12306  002738  EFA0  F013         	goto	u8061
 12307  00273C  EFA2  F013         	goto	u8060
 12308  002740                     u8061:
 12309  002740  EFAA  F013         	goto	l7874
 12310  002744                     u8060:
 12311  002744                     
 12312                           ; BSR set to: 0
 12313  002744  0E00               	movlw	0
 12314  002746  6E2A               	movwf	___flmul@b^0,c
 12315  002748  0E00               	movlw	0
 12316  00274A  6E2B               	movwf	(___flmul@b+1)^0,c
 12317  00274C  0E00               	movlw	0
 12318  00274E  6E2C               	movwf	(___flmul@b+2)^0,c
 12319  002750  0E00               	movlw	0
 12320  002752  6E2D               	movwf	(___flmul@b+3)^0,c
 12321  002754                     l7874:
 12322                           
 12323                           ; BSR set to: 0
 12324  002754  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12325  002756  EFB5  F013         	goto	l7878
 12326  00275A                     l7876:
 12327                           
 12328                           ; BSR set to: 0
 12329  00275A  0E00               	movlw	0
 12330  00275C  6E2A               	movwf	___flmul@b^0,c
 12331  00275E  0E00               	movlw	0
 12332  002760  6E2B               	movwf	(___flmul@b+1)^0,c
 12333  002762  0E00               	movlw	0
 12334  002764  6E2C               	movwf	(___flmul@b+2)^0,c
 12335  002766  0E00               	movlw	0
 12336  002768  6E2D               	movwf	(___flmul@b+3)^0,c
 12337  00276A                     l7878:
 12338                           
 12339                           ; BSR set to: 0
 12340  00276A  5031               	movf	(___flmul@a+3)^0,w,c
 12341  00276C  0B80               	andlw	128
 12342  00276E  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12343  002770                     
 12344                           ; BSR set to: 0
 12345  002770  5031               	movf	(___flmul@a+3)^0,w,c
 12346  002772  2431               	addwf	(___flmul@a+3)^0,w,c
 12347  002774  6F61               	movwf	___flmul@aexp& (0+255),b
 12348  002776                     
 12349                           ; BSR set to: 0
 12350  002776  AE30               	btfss	(___flmul@a+2)^0,7,c
 12351  002778  EFC0  F013         	goto	u8071
 12352  00277C  EFC2  F013         	goto	u8070
 12353  002780                     u8071:
 12354  002780  EFC3  F013         	goto	l7886
 12355  002784                     u8070:
 12356  002784                     
 12357                           ; BSR set to: 0
 12358  002784  8161               	bsf	___flmul@aexp& (0+255),0,b
 12359  002786                     l7886:
 12360                           
 12361                           ; BSR set to: 0
 12362  002786  5161               	movf	___flmul@aexp& (0+255),w,b
 12363  002788  B4D8               	btfsc	status,2,c
 12364  00278A  EFC9  F013         	goto	u8081
 12365  00278E  EFCB  F013         	goto	u8080
 12366  002792                     u8081:
 12367  002792  EFDE  F013         	goto	l7894
 12368  002796                     u8080:
 12369  002796                     
 12370                           ; BSR set to: 0
 12371  002796  2961               	incf	___flmul@aexp& (0+255),w,b
 12372  002798  A4D8               	btfss	status,2,c
 12373  00279A  EFD1  F013         	goto	u8091
 12374  00279E  EFD3  F013         	goto	u8090
 12375  0027A2                     u8091:
 12376  0027A2  EFDB  F013         	goto	l7892
 12377  0027A6                     u8090:
 12378  0027A6                     
 12379                           ; BSR set to: 0
 12380  0027A6  0E00               	movlw	0
 12381  0027A8  6E2E               	movwf	___flmul@a^0,c
 12382  0027AA  0E00               	movlw	0
 12383  0027AC  6E2F               	movwf	(___flmul@a+1)^0,c
 12384  0027AE  0E00               	movlw	0
 12385  0027B0  6E30               	movwf	(___flmul@a+2)^0,c
 12386  0027B2  0E00               	movlw	0
 12387  0027B4  6E31               	movwf	(___flmul@a+3)^0,c
 12388  0027B6                     l7892:
 12389                           
 12390                           ; BSR set to: 0
 12391  0027B6  8E30               	bsf	(___flmul@a+2)^0,7,c
 12392  0027B8  EFE6  F013         	goto	l2012
 12393  0027BC                     l7894:
 12394                           
 12395                           ; BSR set to: 0
 12396  0027BC  0E00               	movlw	0
 12397  0027BE  6E2E               	movwf	___flmul@a^0,c
 12398  0027C0  0E00               	movlw	0
 12399  0027C2  6E2F               	movwf	(___flmul@a+1)^0,c
 12400  0027C4  0E00               	movlw	0
 12401  0027C6  6E30               	movwf	(___flmul@a+2)^0,c
 12402  0027C8  0E00               	movlw	0
 12403  0027CA  6E31               	movwf	(___flmul@a+3)^0,c
 12404  0027CC                     l2012:
 12405                           
 12406                           ; BSR set to: 0
 12407  0027CC  5161               	movf	___flmul@aexp& (0+255),w,b
 12408  0027CE  B4D8               	btfsc	status,2,c
 12409  0027D0  EFEC  F013         	goto	u8101
 12410  0027D4  EFEE  F013         	goto	u8100
 12411  0027D8                     u8101:
 12412  0027D8  EFF6  F013         	goto	l7898
 12413  0027DC                     u8100:
 12414  0027DC                     
 12415                           ; BSR set to: 0
 12416  0027DC  5166               	movf	___flmul@bexp& (0+255),w,b
 12417  0027DE  A4D8               	btfss	status,2,c
 12418  0027E0  EFF4  F013         	goto	u8111
 12419  0027E4  EFF6  F013         	goto	u8110
 12420  0027E8                     u8111:
 12421  0027E8  EF00  F014         	goto	l7902
 12422  0027EC                     u8110:
 12423  0027EC                     l7898:
 12424                           
 12425                           ; BSR set to: 0
 12426  0027EC  0E00               	movlw	0
 12427  0027EE  6E2A               	movwf	?___flmul^0,c
 12428  0027F0  0E00               	movlw	0
 12429  0027F2  6E2B               	movwf	(?___flmul+1)^0,c
 12430  0027F4  0E00               	movlw	0
 12431  0027F6  6E2C               	movwf	(?___flmul+2)^0,c
 12432  0027F8  0E00               	movlw	0
 12433  0027FA  6E2D               	movwf	(?___flmul+3)^0,c
 12434  0027FC  EFAA  F015         	goto	l2016
 12435  002800                     l7902:
 12436                           
 12437                           ; BSR set to: 0
 12438  002800  5030               	movf	(___flmul@a+2)^0,w,c
 12439  002802  022A               	mulwf	___flmul@b^0,c
 12440  002804  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12441  00280A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12442  002810                     
 12443                           ; BSR set to: 0
 12444  002810  516B               	movf	___flmul@temp& (0+255),w,b
 12445  002812  6F62               	movwf	___flmul@grs& (0+255),b
 12446  002814  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12447  002816  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12448  002818  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12449  00281A                     
 12450                           ; BSR set to: 0
 12451  00281A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12452  00281C  6F67               	movwf	___flmul@prod& (0+255),b
 12453  00281E  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12454  002820  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12455  002822  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12456  002824  502F               	movf	(___flmul@a+1)^0,w,c
 12457  002826  022B               	mulwf	(___flmul@b+1)^0,c
 12458  002828  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12459  00282E  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12460  002834                     
 12461                           ; BSR set to: 0
 12462  002834  516B               	movf	___flmul@temp& (0+255),w,b
 12463  002836  2762               	addwf	___flmul@grs& (0+255),f,b
 12464  002838  0E00               	movlw	0
 12465  00283A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12466  00283C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12467  00283E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12468  002840                     
 12469                           ; BSR set to: 0
 12470  002840  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12471  002842  2767               	addwf	___flmul@prod& (0+255),f,b
 12472  002844  0E00               	movlw	0
 12473  002846  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12474  002848  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12475  00284A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12476  00284C  502E               	movf	___flmul@a^0,w,c
 12477  00284E  022C               	mulwf	(___flmul@b+2)^0,c
 12478  002850  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12479  002856  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12480  00285C                     
 12481                           ; BSR set to: 0
 12482  00285C  516B               	movf	___flmul@temp& (0+255),w,b
 12483  00285E  2762               	addwf	___flmul@grs& (0+255),f,b
 12484  002860  0E00               	movlw	0
 12485  002862  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12486  002864  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12487  002866  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12488  002868                     
 12489                           ; BSR set to: 0
 12490  002868  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12491  00286A  2767               	addwf	___flmul@prod& (0+255),f,b
 12492  00286C  0E00               	movlw	0
 12493  00286E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12494  002870  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12495  002872  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12496  002874                     
 12497                           ; BSR set to: 0
 12498  002874  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12499  002878  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12500  00287C  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12501  002880  6B62               	clrf	___flmul@grs& (0+255),b
 12502  002882                     
 12503                           ; BSR set to: 0
 12504  002882  502E               	movf	___flmul@a^0,w,c
 12505  002884  022B               	mulwf	(___flmul@b+1)^0,c
 12506  002886  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12507  00288C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12508  002892                     
 12509                           ; BSR set to: 0
 12510  002892  516B               	movf	___flmul@temp& (0+255),w,b
 12511  002894  2762               	addwf	___flmul@grs& (0+255),f,b
 12512  002896  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12513  002898  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12514  00289A  0E00               	movlw	0
 12515  00289C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12516  00289E  0E00               	movlw	0
 12517  0028A0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12518  0028A2                     
 12519                           ; BSR set to: 0
 12520  0028A2  502F               	movf	(___flmul@a+1)^0,w,c
 12521  0028A4  022A               	mulwf	___flmul@b^0,c
 12522  0028A6  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12523  0028AC  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12524  0028B2                     
 12525                           ; BSR set to: 0
 12526  0028B2  516B               	movf	___flmul@temp& (0+255),w,b
 12527  0028B4  2762               	addwf	___flmul@grs& (0+255),f,b
 12528  0028B6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12529  0028B8  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12530  0028BA  0E00               	movlw	0
 12531  0028BC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12532  0028BE  0E00               	movlw	0
 12533  0028C0  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12534  0028C2                     
 12535                           ; BSR set to: 0
 12536  0028C2  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12537  0028C6  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12538  0028CA  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12539  0028CE  6B62               	clrf	___flmul@grs& (0+255),b
 12540  0028D0  502E               	movf	___flmul@a^0,w,c
 12541  0028D2  022A               	mulwf	___flmul@b^0,c
 12542  0028D4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12543  0028DA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12544  0028E0                     
 12545                           ; BSR set to: 0
 12546  0028E0  516B               	movf	___flmul@temp& (0+255),w,b
 12547  0028E2  2762               	addwf	___flmul@grs& (0+255),f,b
 12548  0028E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12549  0028E6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12550  0028E8  0E00               	movlw	0
 12551  0028EA  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12552  0028EC  0E00               	movlw	0
 12553  0028EE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12554  0028F0                     
 12555                           ; BSR set to: 0
 12556  0028F0  5030               	movf	(___flmul@a+2)^0,w,c
 12557  0028F2  022B               	mulwf	(___flmul@b+1)^0,c
 12558  0028F4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12559  0028FA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12560  002900  516B               	movf	___flmul@temp& (0+255),w,b
 12561  002902  2767               	addwf	___flmul@prod& (0+255),f,b
 12562  002904  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12563  002906  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12564  002908  0E00               	movlw	0
 12565  00290A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12566  00290C  0E00               	movlw	0
 12567  00290E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12568  002910                     
 12569                           ; BSR set to: 0
 12570  002910  502F               	movf	(___flmul@a+1)^0,w,c
 12571  002912  022C               	mulwf	(___flmul@b+2)^0,c
 12572  002914  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12573  00291A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12574  002920                     
 12575                           ; BSR set to: 0
 12576  002920  516B               	movf	___flmul@temp& (0+255),w,b
 12577  002922  2767               	addwf	___flmul@prod& (0+255),f,b
 12578  002924  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12579  002926  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12580  002928  0E00               	movlw	0
 12581  00292A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12582  00292C  0E00               	movlw	0
 12583  00292E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12584  002930  5030               	movf	(___flmul@a+2)^0,w,c
 12585  002932  022C               	mulwf	(___flmul@b+2)^0,c
 12586  002934  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12587  00293A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12588  002940                     
 12589                           ; BSR set to: 0
 12590  002940  516B               	movf	___flmul@temp& (0+255),w,b
 12591  002942  6E32               	movwf	??___flmul^0,c
 12592  002944  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12593  002946  6E33               	movwf	(??___flmul+1)^0,c
 12594  002948  6A34               	clrf	(??___flmul+2)^0,c
 12595  00294A  6A35               	clrf	(??___flmul+3)^0,c
 12596  00294C  C034  F035         	movff	??___flmul+2,??___flmul+3
 12597  002950  C033  F034         	movff	??___flmul+1,??___flmul+2
 12598  002954  C032  F033         	movff	??___flmul,??___flmul+1
 12599  002958  6A32               	clrf	??___flmul^0,c
 12600  00295A  5032               	movf	??___flmul^0,w,c
 12601  00295C  2767               	addwf	___flmul@prod& (0+255),f,b
 12602  00295E  5033               	movf	(??___flmul+1)^0,w,c
 12603  002960  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12604  002962  5034               	movf	(??___flmul+2)^0,w,c
 12605  002964  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12606  002966  5035               	movf	(??___flmul+3)^0,w,c
 12607  002968  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12608  00296A                     
 12609                           ; BSR set to: 0
 12610  00296A  C062  F032         	movff	___flmul@grs,??___flmul
 12611  00296E  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12612  002972  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12613  002976  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12614  00297A  0E19               	movlw	25
 12615  00297C  EFC5  F014         	goto	u8120
 12616  002980                     u8125:
 12617  002980  90D8               	bcf	status,0,c
 12618  002982  3235               	rrcf	(??___flmul+3)^0,f,c
 12619  002984  3234               	rrcf	(??___flmul+2)^0,f,c
 12620  002986  3233               	rrcf	(??___flmul+1)^0,f,c
 12621  002988  3232               	rrcf	??___flmul^0,f,c
 12622  00298A                     u8120:
 12623  00298A  2EE8               	decfsz	wreg,f,c
 12624  00298C  EFC0  F014         	goto	u8125
 12625  002990  5032               	movf	??___flmul^0,w,c
 12626  002992  2767               	addwf	___flmul@prod& (0+255),f,b
 12627  002994  5033               	movf	(??___flmul+1)^0,w,c
 12628  002996  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12629  002998  5034               	movf	(??___flmul+2)^0,w,c
 12630  00299A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12631  00299C  5035               	movf	(??___flmul+3)^0,w,c
 12632  00299E  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12633  0029A0                     
 12634                           ; BSR set to: 0
 12635  0029A0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12636  0029A4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12637  0029A8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12638  0029AC  6B62               	clrf	___flmul@grs& (0+255),b
 12639  0029AE                     
 12640                           ; BSR set to: 0
 12641  0029AE  5161               	movf	___flmul@aexp& (0+255),w,b
 12642  0029B0  C066  F032         	movff	___flmul@bexp,??___flmul
 12643  0029B4  6A33               	clrf	(??___flmul+1)^0,c
 12644  0029B6  2632               	addwf	??___flmul^0,f,c
 12645  0029B8  0E00               	movlw	0
 12646  0029BA  2233               	addwfc	(??___flmul+1)^0,f,c
 12647  0029BC  0E82               	movlw	130
 12648  0029BE  2432               	addwf	??___flmul^0,w,c
 12649  0029C0  6F6B               	movwf	___flmul@temp& (0+255),b
 12650  0029C2  0EFF               	movlw	255
 12651  0029C4  2033               	addwfc	(??___flmul+1)^0,w,c
 12652  0029C6  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12653  0029C8  EFFB  F014         	goto	l7950
 12654  0029CC                     l7944:
 12655                           
 12656                           ; BSR set to: 0
 12657  0029CC  90D8               	bcf	status,0,c
 12658  0029CE  3767               	rlcf	___flmul@prod& (0+255),f,b
 12659  0029D0  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12660  0029D2  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12661  0029D4  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12662  0029D6                     
 12663                           ; BSR set to: 0
 12664  0029D6  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12665  0029D8  EFF0  F014         	goto	u8131
 12666  0029DC  EFF2  F014         	goto	u8130
 12667  0029E0                     u8131:
 12668  0029E0  EFF3  F014         	goto	l2019
 12669  0029E4                     u8130:
 12670  0029E4                     
 12671                           ; BSR set to: 0
 12672  0029E4  8167               	bsf	___flmul@prod& (0+255),0,b
 12673  0029E6                     l2019:
 12674                           
 12675                           ; BSR set to: 0
 12676  0029E6  90D8               	bcf	status,0,c
 12677  0029E8  3762               	rlcf	___flmul@grs& (0+255),f,b
 12678  0029EA  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12679  0029EC  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12680  0029EE  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12681  0029F0  076B               	decf	___flmul@temp& (0+255),f,b
 12682  0029F2  A0D8               	btfss	status,0,c
 12683  0029F4  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12684  0029F6                     l7950:
 12685                           
 12686                           ; BSR set to: 0
 12687  0029F6  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12688  0029F8  EF00  F015         	goto	u8141
 12689  0029FC  EF02  F015         	goto	u8140
 12690  002A00                     u8141:
 12691  002A00  EFE6  F014         	goto	l7944
 12692  002A04                     u8140:
 12693  002A04                     
 12694                           ; BSR set to: 0
 12695  002A04  0E00               	movlw	0
 12696  002A06  6F61               	movwf	___flmul@aexp& (0+255),b
 12697  002A08                     
 12698                           ; BSR set to: 0
 12699  002A08  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12700  002A0A  EF09  F015         	goto	u8151
 12701  002A0E  EF0B  F015         	goto	u8150
 12702  002A12                     u8151:
 12703  002A12  EF2F  F015         	goto	l2021
 12704  002A16                     u8150:
 12705  002A16                     
 12706                           ; BSR set to: 0
 12707  002A16  0EFF               	movlw	255
 12708  002A18  1562               	andwf	___flmul@grs& (0+255),w,b
 12709  002A1A  6E32               	movwf	??___flmul^0,c
 12710  002A1C  0EFF               	movlw	255
 12711  002A1E  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12712  002A20  6E33               	movwf	(??___flmul+1)^0,c
 12713  002A22  0EFF               	movlw	255
 12714  002A24  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12715  002A26  6E34               	movwf	(??___flmul+2)^0,c
 12716  002A28  0E7F               	movlw	127
 12717  002A2A  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12718  002A2C  6E35               	movwf	(??___flmul+3)^0,c
 12719  002A2E  5032               	movf	??___flmul^0,w,c
 12720  002A30  1033               	iorwf	(??___flmul+1)^0,w,c
 12721  002A32  1034               	iorwf	(??___flmul+2)^0,w,c
 12722  002A34  1035               	iorwf	(??___flmul+3)^0,w,c
 12723  002A36  B4D8               	btfsc	status,2,c
 12724  002A38  EF20  F015         	goto	u8161
 12725  002A3C  EF22  F015         	goto	u8160
 12726  002A40                     u8161:
 12727  002A40  EF26  F015         	goto	l2022
 12728  002A44                     u8160:
 12729  002A44                     l7958:
 12730                           
 12731                           ; BSR set to: 0
 12732  002A44  0E01               	movlw	1
 12733  002A46  6F61               	movwf	___flmul@aexp& (0+255),b
 12734  002A48  EF2F  F015         	goto	l2021
 12735  002A4C                     l2022:
 12736                           
 12737                           ; BSR set to: 0
 12738  002A4C  A167               	btfss	___flmul@prod& (0+255),0,b
 12739  002A4E  EF2B  F015         	goto	u8171
 12740  002A52  EF2D  F015         	goto	u8170
 12741  002A56                     u8171:
 12742  002A56  EF2F  F015         	goto	l2021
 12743  002A5A                     u8170:
 12744  002A5A  EF22  F015         	goto	l7958
 12745  002A5E                     l2021:
 12746                           
 12747                           ; BSR set to: 0
 12748  002A5E  5161               	movf	___flmul@aexp& (0+255),w,b
 12749  002A60  B4D8               	btfsc	status,2,c
 12750  002A62  EF35  F015         	goto	u8181
 12751  002A66  EF37  F015         	goto	u8180
 12752  002A6A                     u8181:
 12753  002A6A  EF5B  F015         	goto	l7970
 12754  002A6E                     u8180:
 12755  002A6E                     
 12756                           ; BSR set to: 0
 12757  002A6E  0E01               	movlw	1
 12758  002A70  2767               	addwf	___flmul@prod& (0+255),f,b
 12759  002A72  0E00               	movlw	0
 12760  002A74  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12761  002A76  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12762  002A78  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12763  002A7A                     
 12764                           ; BSR set to: 0
 12765  002A7A  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12766  002A7C  EF42  F015         	goto	u8191
 12767  002A80  EF44  F015         	goto	u8190
 12768  002A84                     u8191:
 12769  002A84  EF5B  F015         	goto	l7970
 12770  002A88                     u8190:
 12771  002A88                     
 12772                           ; BSR set to: 0
 12773  002A88  C067  F032         	movff	___flmul@prod,??___flmul
 12774  002A8C  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12775  002A90  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12776  002A94  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12777  002A98  3435               	rlcf	(??___flmul+3)^0,w,c
 12778  002A9A  3235               	rrcf	(??___flmul+3)^0,f,c
 12779  002A9C  3234               	rrcf	(??___flmul+2)^0,f,c
 12780  002A9E  3233               	rrcf	(??___flmul+1)^0,f,c
 12781  002AA0  3232               	rrcf	??___flmul^0,f,c
 12782  002AA2  C032  F067         	movff	??___flmul,___flmul@prod
 12783  002AA6  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12784  002AAA  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12785  002AAE  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12786  002AB2                     
 12787                           ; BSR set to: 0
 12788  002AB2  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12789  002AB4  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12790  002AB6                     l7970:
 12791                           
 12792                           ; BSR set to: 0
 12793  002AB6  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12794  002AB8  EF66  F015         	goto	u8201
 12795  002ABC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12796  002ABE  E108               	bnz	u8200
 12797  002AC0  296B               	incf	___flmul@temp& (0+255),w,b
 12798  002AC2  A0D8               	btfss	status,0,c
 12799  002AC4  EF66  F015         	goto	u8201
 12800  002AC8  EF68  F015         	goto	u8200
 12801  002ACC                     u8201:
 12802  002ACC  EF72  F015         	goto	l7974
 12803  002AD0                     u8200:
 12804  002AD0                     
 12805                           ; BSR set to: 0
 12806  002AD0  0E00               	movlw	0
 12807  002AD2  6F67               	movwf	___flmul@prod& (0+255),b
 12808  002AD4  0E00               	movlw	0
 12809  002AD6  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12810  002AD8  0E80               	movlw	128
 12811  002ADA  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12812  002ADC  0E7F               	movlw	127
 12813  002ADE  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12814  002AE0  EFA0  F015         	goto	l7986
 12815  002AE4                     l7974:
 12816                           
 12817                           ; BSR set to: 0
 12818  002AE4  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12819  002AE6  EF7F  F015         	goto	u8210
 12820  002AEA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12821  002AEC  E106               	bnz	u8211
 12822  002AEE  056B               	decf	___flmul@temp& (0+255),w,b
 12823  002AF0  B0D8               	btfsc	status,0,c
 12824  002AF2  EF7D  F015         	goto	u8211
 12825  002AF6  EF7F  F015         	goto	u8210
 12826  002AFA                     u8211:
 12827  002AFA  EF8B  F015         	goto	l2029
 12828  002AFE                     u8210:
 12829  002AFE                     
 12830                           ; BSR set to: 0
 12831  002AFE  0E00               	movlw	0
 12832  002B00  6F67               	movwf	___flmul@prod& (0+255),b
 12833  002B02  0E00               	movlw	0
 12834  002B04  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12835  002B06  0E00               	movlw	0
 12836  002B08  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12837  002B0A  0E00               	movlw	0
 12838  002B0C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12839  002B0E  0E00               	movlw	0
 12840  002B10  6F60               	movwf	___flmul@sign& (0+255),b
 12841  002B12  EFA0  F015         	goto	l7986
 12842  002B16                     l2029:
 12843                           
 12844                           ; BSR set to: 0
 12845  002B16  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12846  002B1A                     
 12847                           ; BSR set to: 0
 12848  002B1A  0EFF               	movlw	255
 12849  002B1C  1767               	andwf	___flmul@prod& (0+255),f,b
 12850  002B1E  0EFF               	movlw	255
 12851  002B20  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12852  002B22  0E7F               	movlw	127
 12853  002B24  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12854  002B26  0E00               	movlw	0
 12855  002B28  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12856  002B2A                     
 12857                           ; BSR set to: 0
 12858  002B2A  A166               	btfss	___flmul@bexp& (0+255),0,b
 12859  002B2C  EF9A  F015         	goto	u8221
 12860  002B30  EF9C  F015         	goto	u8220
 12861  002B34                     u8221:
 12862  002B34  EF9D  F015         	goto	l7984
 12863  002B38                     u8220:
 12864  002B38                     
 12865                           ; BSR set to: 0
 12866  002B38  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12867  002B3A                     l7984:
 12868                           
 12869                           ; BSR set to: 0
 12870  002B3A  90D8               	bcf	status,0,c
 12871  002B3C  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12872  002B3E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12873  002B40                     l7986:
 12874                           
 12875                           ; BSR set to: 0
 12876  002B40  5160               	movf	___flmul@sign& (0+255),w,b
 12877  002B42  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12878  002B44                     
 12879                           ; BSR set to: 0
 12880  002B44  C067  F02A         	movff	___flmul@prod,?___flmul
 12881  002B48  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12882  002B4C  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12883  002B50  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12884  002B54                     l2016:
 12885                           
 12886                           ; BSR set to: 0
 12887  002B54  0012               	return		;funcret
 12888  002B56                     __end_of___flmul:
 12889                           	callstack 0
 12890                           
 12891 ;; *************** function ___awdiv *****************
 12892 ;; Defined at:
 12893 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  dividend        2   19[COMRAM] int 
 12896 ;;  divisor         2   21[COMRAM] int 
 12897 ;; Auto vars:     Size  Location     Type
 12898 ;;  quotient        2   25[COMRAM] int 
 12899 ;;  sign            1   24[COMRAM] unsigned char 
 12900 ;;  counter         1   23[COMRAM] unsigned char 
 12901 ;; Return value:  Size  Location     Type
 12902 ;;                  2   19[COMRAM] int 
 12903 ;; Registers used:
 12904 ;;		wreg, status,2, status,0
 12905 ;; Tracked objects:
 12906 ;;		On entry : 0/0
 12907 ;;		On exit  : 0/0
 12908 ;;		Unchanged: 0/0
 12909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12914 ;;Total ram usage:        8 bytes
 12915 ;; Hardware stack levels used: 1
 12916 ;; Hardware stack levels required when called: 8
 12917 ;; This function calls:
 12918 ;;		Nothing
 12919 ;; This function is called by:
 12920 ;;		_calcSteering
 12921 ;;		_calcMotorPow
 12922 ;;		_setSteering
 12923 ;;		_efgtoa
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text49
 12928  004CD0                     __ptext49:
 12929                           	callstack 0
 12930  004CD0                     ___awdiv:
 12931                           	callstack 19
 12932  004CD0  0E00               	movlw	0
 12933  004CD2  6E19               	movwf	___awdiv@sign^0,c
 12934  004CD4  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12935  004CD6  EF71  F026         	goto	u8230
 12936  004CDA  EF6F  F026         	goto	u8231
 12937  004CDE                     u8231:
 12938  004CDE  EF77  F026         	goto	l8006
 12939  004CE2                     u8230:
 12940  004CE2  6C16               	negf	___awdiv@divisor^0,c
 12941  004CE4  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12942  004CE6  B0D8               	btfsc	status,0,c
 12943  004CE8  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12944  004CEA  0E01               	movlw	1
 12945  004CEC  6E19               	movwf	___awdiv@sign^0,c
 12946  004CEE                     l8006:
 12947  004CEE  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12948  004CF0  EF7E  F026         	goto	u8240
 12949  004CF4  EF7C  F026         	goto	u8241
 12950  004CF8                     u8241:
 12951  004CF8  EF84  F026         	goto	l8012
 12952  004CFC                     u8240:
 12953  004CFC  6C14               	negf	___awdiv@dividend^0,c
 12954  004CFE  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12955  004D00  B0D8               	btfsc	status,0,c
 12956  004D02  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12957  004D04  0E01               	movlw	1
 12958  004D06  1A19               	xorwf	___awdiv@sign^0,f,c
 12959  004D08                     l8012:
 12960  004D08  0E00               	movlw	0
 12961  004D0A  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12962  004D0C  0E00               	movlw	0
 12963  004D0E  6E1A               	movwf	___awdiv@quotient^0,c
 12964  004D10  5016               	movf	___awdiv@divisor^0,w,c
 12965  004D12  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12966  004D14  B4D8               	btfsc	status,2,c
 12967  004D16  EF8F  F026         	goto	u8251
 12968  004D1A  EF91  F026         	goto	u8250
 12969  004D1E                     u8251:
 12970  004D1E  EFB9  F026         	goto	l8034
 12971  004D22                     u8250:
 12972  004D22  0E01               	movlw	1
 12973  004D24  6E18               	movwf	___awdiv@counter^0,c
 12974  004D26  EF99  F026         	goto	l8020
 12975  004D2A                     l8018:
 12976  004D2A  90D8               	bcf	status,0,c
 12977  004D2C  3616               	rlcf	___awdiv@divisor^0,f,c
 12978  004D2E  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12979  004D30  2A18               	incf	___awdiv@counter^0,f,c
 12980  004D32                     l8020:
 12981  004D32  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12982  004D34  EF9E  F026         	goto	u8261
 12983  004D38  EFA0  F026         	goto	u8260
 12984  004D3C                     u8261:
 12985  004D3C  EF95  F026         	goto	l8018
 12986  004D40                     u8260:
 12987  004D40                     l8022:
 12988  004D40  90D8               	bcf	status,0,c
 12989  004D42  361A               	rlcf	___awdiv@quotient^0,f,c
 12990  004D44  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12991  004D46  5016               	movf	___awdiv@divisor^0,w,c
 12992  004D48  5C14               	subwf	___awdiv@dividend^0,w,c
 12993  004D4A  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12994  004D4C  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12995  004D4E  A0D8               	btfss	status,0,c
 12996  004D50  EFAC  F026         	goto	u8271
 12997  004D54  EFAE  F026         	goto	u8270
 12998  004D58                     u8271:
 12999  004D58  EFB3  F026         	goto	l8030
 13000  004D5C                     u8270:
 13001  004D5C  5016               	movf	___awdiv@divisor^0,w,c
 13002  004D5E  5E14               	subwf	___awdiv@dividend^0,f,c
 13003  004D60  5017               	movf	(___awdiv@divisor+1)^0,w,c
 13004  004D62  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 13005  004D64  801A               	bsf	___awdiv@quotient^0,0,c
 13006  004D66                     l8030:
 13007  004D66  90D8               	bcf	status,0,c
 13008  004D68  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 13009  004D6A  3216               	rrcf	___awdiv@divisor^0,f,c
 13010  004D6C  2E18               	decfsz	___awdiv@counter^0,f,c
 13011  004D6E  EFA0  F026         	goto	l8022
 13012  004D72                     l8034:
 13013  004D72  5019               	movf	___awdiv@sign^0,w,c
 13014  004D74  B4D8               	btfsc	status,2,c
 13015  004D76  EFBF  F026         	goto	u8281
 13016  004D7A  EFC1  F026         	goto	u8280
 13017  004D7E                     u8281:
 13018  004D7E  EFC5  F026         	goto	l8038
 13019  004D82                     u8280:
 13020  004D82  6C1A               	negf	___awdiv@quotient^0,c
 13021  004D84  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 13022  004D86  B0D8               	btfsc	status,0,c
 13023  004D88  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 13024  004D8A                     l8038:
 13025  004D8A  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 13026  004D8E  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13027  004D92  0012               	return		;funcret
 13028  004D94                     __end_of___awdiv:
 13029                           	callstack 0
 13030                           
 13031 ;; *************** function _SYSTEM_Initialize *****************
 13032 ;; Defined at:
 13033 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;		None
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;		None
 13038 ;; Return value:  Size  Location     Type
 13039 ;;                  1    wreg      void 
 13040 ;; Registers used:
 13041 ;;		wreg, status,2, status,0, cstack
 13042 ;; Tracked objects:
 13043 ;;		On entry : 0/0
 13044 ;;		On exit  : 0/0
 13045 ;;		Unchanged: 0/0
 13046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13051 ;;Total ram usage:        0 bytes
 13052 ;; Hardware stack levels used: 1
 13053 ;; Hardware stack levels required when called: 10
 13054 ;; This function calls:
 13055 ;;		_ADCC_Initialize
 13056 ;;		_CCP3_Initialize
 13057 ;;		_CCP4_Initialize
 13058 ;;		_CLC3_Initialize
 13059 ;;		_INTERRUPT_Initialize
 13060 ;;		_OSCILLATOR_Initialize
 13061 ;;		_PIN_MANAGER_Initialize
 13062 ;;		_PMD_Initialize
 13063 ;;		_PWM5_Initialize
 13064 ;;		_PWM6_Initialize
 13065 ;;		_PWM7_Initialize
 13066 ;;		_PWM8_Initialize
 13067 ;;		_SMT1_Initialize
 13068 ;;		_TMR2_Initialize
 13069 ;;		_TMR3_Initialize
 13070 ;;		_TMR4_Initialize
 13071 ;;		_TMR5_Initialize
 13072 ;;		_UART1_Initialize
 13073 ;; This function is called by:
 13074 ;;		_main
 13075 ;; This function uses a non-reentrant model
 13076 ;;
 13077                           
 13078                           	psect	text50
 13079  0055C8                     __ptext50:
 13080                           	callstack 0
 13081  0055C8                     _SYSTEM_Initialize:
 13082                           	callstack 20
 13083  0055C8                     
 13084                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13085  0055C8  ECBE  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13086                           
 13087                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13088  0055CC  EC80  F02E         	call	_PMD_Initialize	;wreg free
 13089                           
 13090                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13091  0055D0  EC03  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 13092                           
 13093                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13094  0055D4  EC01  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 13095  0055D8                     
 13096                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13097  0055D8  ECD2  F02D         	call	_CCP3_Initialize	;wreg free
 13098  0055DC                     
 13099                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13100  0055DC  EC66  F02A         	call	_ADCC_Initialize	;wreg free
 13101                           
 13102                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13103  0055E0  EC00  F02E         	call	_TMR4_Initialize	;wreg free
 13104  0055E4                     
 13105                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13106  0055E4  EC73  F02D         	call	_SMT1_Initialize	;wreg free
 13107  0055E8                     
 13108                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13109  0055E8  ECD1  F02E         	call	_PWM8_Initialize	;wreg free
 13110  0055EC                     
 13111                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13112  0055EC  ECC3  F02E         	call	_TMR2_Initialize	;wreg free
 13113  0055F0                     
 13114                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13115  0055F0  ECE9  F02E         	call	_PWM6_Initialize	;wreg free
 13116                           
 13117                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13118  0055F4  ECBB  F02D         	call	_CCP4_Initialize	;wreg free
 13119  0055F8                     
 13120                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13121  0055F8  EC16  F02E         	call	_CLC3_Initialize	;wreg free
 13122  0055FC                     
 13123                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13124  0055FC  EC6B  F02C         	call	_TMR3_Initialize	;wreg free
 13125                           
 13126                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13127  005600  ECF5  F02E         	call	_PWM5_Initialize	;wreg free
 13128  005604                     
 13129                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13130  005604  EC09  F02B         	call	_TMR5_Initialize	;wreg free
 13131  005608                     
 13132                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13133  005608  ECDD  F02E         	call	_PWM7_Initialize	;wreg free
 13134                           
 13135                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13136  00560C  EC38  F028         	call	_UART1_Initialize	;wreg free
 13137  005610  0012               	return		;funcret
 13138  005612                     __end_of_SYSTEM_Initialize:
 13139                           	callstack 0
 13140                           
 13141 ;; *************** function _UART1_Initialize *****************
 13142 ;; Defined at:
 13143 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;		None
 13146 ;; Auto vars:     Size  Location     Type
 13147 ;;		None
 13148 ;; Return value:  Size  Location     Type
 13149 ;;                  1    wreg      void 
 13150 ;; Registers used:
 13151 ;;		wreg, status,2, status,0, cstack
 13152 ;; Tracked objects:
 13153 ;;		On entry : 0/0
 13154 ;;		On exit  : 0/0
 13155 ;;		Unchanged: 0/0
 13156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;Total ram usage:        0 bytes
 13162 ;; Hardware stack levels used: 1
 13163 ;; Hardware stack levels required when called: 9
 13164 ;; This function calls:
 13165 ;;		_UART1_SetErrorHandler
 13166 ;;		_UART1_SetFramingErrorHandler
 13167 ;;		_UART1_SetOverrunErrorHandler
 13168 ;;		_UART1_SetRxInterruptHandler
 13169 ;;		_UART1_SetTxInterruptHandler
 13170 ;; This function is called by:
 13171 ;;		_SYSTEM_Initialize
 13172 ;; This function uses a non-reentrant model
 13173 ;;
 13174                           
 13175                           	psect	text51
 13176  005070                     __ptext51:
 13177                           	callstack 0
 13178  005070                     _UART1_Initialize:
 13179                           	callstack 20
 13180  005070                     
 13181                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13182  005070  0139               	movlb	57	; () banked
 13183  005072  9793               	bcf	147,3,b	;volatile
 13184  005074                     
 13185                           ; BSR set to: 57
 13186                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13187  005074  0E56               	movlw	low _UART1_Receive_ISR
 13188  005076  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13189  005078  0E4E               	movlw	high _UART1_Receive_ISR
 13190  00507A  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13191  00507C  EC26  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13192  005080                     
 13193                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13194  005080  0139               	movlb	57	; () banked
 13195  005082  9993               	bcf	147,4,b	;volatile
 13196                           
 13197                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13198  005084  0E32               	movlw	low _UART1_Transmit_ISR
 13199  005086  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13200  005088  0E57               	movlw	high _UART1_Transmit_ISR
 13201  00508A  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13202  00508C  EC21  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13203  005090                     
 13204                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13205  005090  0E00               	movlw	0
 13206  005092  013D               	movlb	61	; () banked
 13207  005094  6FEC               	movwf	236,b	;volatile
 13208  005096                     
 13209                           ; BSR set to: 61
 13210                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13211  005096  0E00               	movlw	0
 13212  005098  6FED               	movwf	237,b	;volatile
 13213  00509A                     
 13214                           ; BSR set to: 61
 13215                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13216  00509A  0E00               	movlw	0
 13217  00509C  6FEE               	movwf	238,b	;volatile
 13218  00509E                     
 13219                           ; BSR set to: 61
 13220                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13221  00509E  0E00               	movlw	0
 13222  0050A0  6FEF               	movwf	239,b	;volatile
 13223  0050A2                     
 13224                           ; BSR set to: 61
 13225                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13226  0050A2  0E00               	movlw	0
 13227  0050A4  6FF0               	movwf	240,b	;volatile
 13228  0050A6                     
 13229                           ; BSR set to: 61
 13230                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13231  0050A6  0E00               	movlw	0
 13232  0050A8  6FF1               	movwf	241,b	;volatile
 13233  0050AA                     
 13234                           ; BSR set to: 61
 13235                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13236  0050AA  0EB0               	movlw	176
 13237  0050AC  6FF2               	movwf	242,b	;volatile
 13238  0050AE                     
 13239                           ; BSR set to: 61
 13240                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13241  0050AE  0E80               	movlw	128
 13242  0050B0  6FF3               	movwf	243,b	;volatile
 13243  0050B2                     
 13244                           ; BSR set to: 61
 13245                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13246  0050B2  0E00               	movlw	0
 13247  0050B4  6FF4               	movwf	244,b	;volatile
 13248  0050B6                     
 13249                           ; BSR set to: 61
 13250                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13251  0050B6  0E8A               	movlw	138
 13252  0050B8  6FF5               	movwf	245,b	;volatile
 13253  0050BA                     
 13254                           ; BSR set to: 61
 13255                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13256  0050BA  0E00               	movlw	0
 13257  0050BC  6FF6               	movwf	246,b	;volatile
 13258  0050BE                     
 13259                           ; BSR set to: 61
 13260                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13261  0050BE  0E00               	movlw	0
 13262  0050C0  6FF7               	movwf	247,b	;volatile
 13263  0050C2                     
 13264                           ; BSR set to: 61
 13265                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13266  0050C2  0E00               	movlw	0
 13267  0050C4  6FF8               	movwf	248,b	;volatile
 13268  0050C6                     
 13269                           ; BSR set to: 61
 13270                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13271  0050C6  0E00               	movlw	0
 13272  0050C8  6FF9               	movwf	249,b	;volatile
 13273  0050CA                     
 13274                           ; BSR set to: 61
 13275                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13276  0050CA  0E00               	movlw	0
 13277  0050CC  6FFA               	movwf	250,b	;volatile
 13278  0050CE                     
 13279                           ; BSR set to: 61
 13280                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13281  0050CE  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
 13282  0050D0  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13283  0050D2  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 13284  0050D4  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13285  0050D6  EC30  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 13286  0050DA                     
 13287                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13288  0050DA  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
 13289  0050DC  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13290  0050DE  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 13291  0050E0  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13292  0050E2  EC2B  F02F         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13293  0050E6                     
 13294                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13295  0050E6  0E9C               	movlw	low _UART1_DefaultErrorHandler
 13296  0050E8  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13297  0050EA  0E5E               	movlw	high _UART1_DefaultErrorHandler
 13298  0050EC  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13299  0050EE  EC35  F02F         	call	_UART1_SetErrorHandler	;wreg free
 13300                           
 13301                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13302  0050F2  0E00               	movlw	0
 13303  0050F4  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13304                           
 13305                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13306  0050F6  0E00               	movlw	0
 13307  0050F8  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13308                           
 13309                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13310  0050FA  0E00               	movlw	0
 13311  0050FC  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13312                           
 13313                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13314  0050FE  0E08               	movlw	8
 13315  005100  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13316                           
 13317                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13318  005102  0E00               	movlw	0
 13319  005104  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13320                           
 13321                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13322  005106  0E00               	movlw	0
 13323  005108  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13324                           
 13325                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13326  00510A  0E00               	movlw	0
 13327  00510C  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13328  00510E                     
 13329                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13330  00510E  0139               	movlb	57	; () banked
 13331  005110  8793               	bsf	147,3,b	;volatile
 13332  005112                     
 13333                           ; BSR set to: 57
 13334  005112  0012               	return		;funcret
 13335  005114                     __end_of_UART1_Initialize:
 13336                           	callstack 0
 13337                           
 13338 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13339 ;; Defined at:
 13340 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13343 ;;		 -> UART1_Transmit_ISR(1), 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;		None
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  1    wreg      void 
 13348 ;; Registers used:
 13349 ;;		wreg, status,2, status,0
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;Total ram usage:        2 bytes
 13360 ;; Hardware stack levels used: 1
 13361 ;; Hardware stack levels required when called: 8
 13362 ;; This function calls:
 13363 ;;		Nothing
 13364 ;; This function is called by:
 13365 ;;		_UART1_Initialize
 13366 ;; This function uses a non-reentrant model
 13367 ;;
 13368                           
 13369                           	psect	text52
 13370  005E42                     __ptext52:
 13371                           	callstack 0
 13372  005E42                     _UART1_SetTxInterruptHandler:
 13373                           	callstack 20
 13374  005E42                     
 13375                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13376  005E42  C014  F196         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13377  005E46  C015  F197         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13378  005E4A  0012               	return		;funcret
 13379  005E4C                     __end_of_UART1_SetTxInterruptHandler:
 13380                           	callstack 0
 13381                           
 13382 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13383 ;; Defined at:
 13384 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13385 ;; Parameters:    Size  Location     Type
 13386 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13387 ;;		 -> UART1_Receive_ISR(1), 
 13388 ;; Auto vars:     Size  Location     Type
 13389 ;;		None
 13390 ;; Return value:  Size  Location     Type
 13391 ;;                  1    wreg      void 
 13392 ;; Registers used:
 13393 ;;		wreg, status,2, status,0
 13394 ;; Tracked objects:
 13395 ;;		On entry : 0/0
 13396 ;;		On exit  : 0/0
 13397 ;;		Unchanged: 0/0
 13398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13403 ;;Total ram usage:        2 bytes
 13404 ;; Hardware stack levels used: 1
 13405 ;; Hardware stack levels required when called: 8
 13406 ;; This function calls:
 13407 ;;		Nothing
 13408 ;; This function is called by:
 13409 ;;		_UART1_Initialize
 13410 ;; This function uses a non-reentrant model
 13411 ;;
 13412                           
 13413                           	psect	text53
 13414  005E4C                     __ptext53:
 13415                           	callstack 0
 13416  005E4C                     _UART1_SetRxInterruptHandler:
 13417                           	callstack 20
 13418  005E4C                     
 13419                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13420  005E4C  C014  F198         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13421  005E50  C015  F199         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13422  005E54  0012               	return		;funcret
 13423  005E56                     __end_of_UART1_SetRxInterruptHandler:
 13424                           	callstack 0
 13425                           
 13426 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13427 ;; Defined at:
 13428 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13429 ;; Parameters:    Size  Location     Type
 13430 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13431 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13432 ;; Auto vars:     Size  Location     Type
 13433 ;;		None
 13434 ;; Return value:  Size  Location     Type
 13435 ;;                  1    wreg      void 
 13436 ;; Registers used:
 13437 ;;		wreg, status,2, status,0
 13438 ;; Tracked objects:
 13439 ;;		On entry : 0/0
 13440 ;;		On exit  : 0/0
 13441 ;;		Unchanged: 0/0
 13442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13447 ;;Total ram usage:        2 bytes
 13448 ;; Hardware stack levels used: 1
 13449 ;; Hardware stack levels required when called: 8
 13450 ;; This function calls:
 13451 ;;		Nothing
 13452 ;; This function is called by:
 13453 ;;		_UART1_Initialize
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           	psect	text54
 13458  005E56                     __ptext54:
 13459                           	callstack 0
 13460  005E56                     _UART1_SetOverrunErrorHandler:
 13461                           	callstack 20
 13462  005E56                     
 13463                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13464  005E56  C014  F192         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13465  005E5A  C015  F193         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13466  005E5E  0012               	return		;funcret
 13467  005E60                     __end_of_UART1_SetOverrunErrorHandler:
 13468                           	callstack 0
 13469                           
 13470 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13471 ;; Defined at:
 13472 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13475 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13476 ;; Auto vars:     Size  Location     Type
 13477 ;;		None
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      void 
 13480 ;; Registers used:
 13481 ;;		wreg, status,2, status,0
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13491 ;;Total ram usage:        2 bytes
 13492 ;; Hardware stack levels used: 1
 13493 ;; Hardware stack levels required when called: 8
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		_UART1_Initialize
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           	psect	text55
 13502  005E60                     __ptext55:
 13503                           	callstack 0
 13504  005E60                     _UART1_SetFramingErrorHandler:
 13505                           	callstack 20
 13506  005E60                     
 13507                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13508  005E60  C014  F194         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13509  005E64  C015  F195         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13510  005E68  0012               	return		;funcret
 13511  005E6A                     __end_of_UART1_SetFramingErrorHandler:
 13512                           	callstack 0
 13513                           
 13514 ;; *************** function _UART1_SetErrorHandler *****************
 13515 ;; Defined at:
 13516 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13517 ;; Parameters:    Size  Location     Type
 13518 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13519 ;;		 -> UART1_DefaultErrorHandler(1), 
 13520 ;; Auto vars:     Size  Location     Type
 13521 ;;		None
 13522 ;; Return value:  Size  Location     Type
 13523 ;;                  1    wreg      void 
 13524 ;; Registers used:
 13525 ;;		wreg, status,2, status,0
 13526 ;; Tracked objects:
 13527 ;;		On entry : 0/0
 13528 ;;		On exit  : 0/0
 13529 ;;		Unchanged: 0/0
 13530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13535 ;;Total ram usage:        2 bytes
 13536 ;; Hardware stack levels used: 1
 13537 ;; Hardware stack levels required when called: 8
 13538 ;; This function calls:
 13539 ;;		Nothing
 13540 ;; This function is called by:
 13541 ;;		_UART1_Initialize
 13542 ;; This function uses a non-reentrant model
 13543 ;;
 13544                           
 13545                           	psect	text56
 13546  005E6A                     __ptext56:
 13547                           	callstack 0
 13548  005E6A                     _UART1_SetErrorHandler:
 13549                           	callstack 20
 13550  005E6A                     
 13551                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13552  005E6A  C014  F190         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13553  005E6E  C015  F191         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13554  005E72  0012               	return		;funcret
 13555  005E74                     __end_of_UART1_SetErrorHandler:
 13556                           	callstack 0
 13557                           
 13558 ;; *************** function _TMR5_Initialize *****************
 13559 ;; Defined at:
 13560 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;		None
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      void 
 13567 ;; Registers used:
 13568 ;;		wreg, status,2, status,0, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;Total ram usage:        2 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 9
 13581 ;; This function calls:
 13582 ;;		_TMR5_SetGateInterruptHandler
 13583 ;; This function is called by:
 13584 ;;		_SYSTEM_Initialize
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text57
 13589  005612                     __ptext57:
 13590                           	callstack 0
 13591  005612                     _TMR5_Initialize:
 13592                           	callstack 20
 13593  005612                     
 13594                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13595  005612  0EC0               	movlw	192
 13596  005614  6E9B               	movwf	155,c	;volatile
 13597                           
 13598                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13599  005616  0E00               	movlw	0
 13600  005618  6E9C               	movwf	156,c	;volatile
 13601                           
 13602                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13603  00561A  0E05               	movlw	5
 13604  00561C  6E9D               	movwf	157,c	;volatile
 13605                           
 13606                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13607  00561E  0E00               	movlw	0
 13608  005620  6E99               	movwf	153,c	;volatile
 13609                           
 13610                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13611  005622  0E00               	movlw	0
 13612  005624  6E98               	movwf	152,c	;volatile
 13613  005626                     
 13614                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13615  005626  0139               	movlb	57	; () banked
 13616  005628  9DA8               	bcf	168,6,b	;volatile
 13617  00562A                     
 13618                           ; BSR set to: 57
 13619                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13620  00562A  5098               	movf	152,w,c	;volatile
 13621  00562C  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13622  005632  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13623  005634  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13624  005638  6A16               	clrf	??_TMR5_Initialize^0,c
 13625  00563A  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13626  00563C  0101               	movlb	1	; () banked
 13627  00563E  6F8A               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13628  005640  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13629  005642  6F8B               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13630  005644                     
 13631                           ; BSR set to: 1
 13632                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13633  005644  0139               	movlb	57	; () banked
 13634  005646  9FA8               	bcf	168,7,b	;volatile
 13635  005648                     
 13636                           ; BSR set to: 57
 13637                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13638  005648  8F98               	bsf	152,7,b	;volatile
 13639  00564A                     
 13640                           ; BSR set to: 57
 13641                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13642  00564A  0E68               	movlw	low _TMR5_DefaultGateInterruptHandler
 13643  00564C  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13644  00564E  0E5D               	movlw	high _TMR5_DefaultGateInterruptHandler
 13645  005650  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13646  005652  EC3A  F02F         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13647  005656                     
 13648                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13649  005656  0E03               	movlw	3
 13650  005658  6E9A               	movwf	154,c	;volatile
 13651  00565A  0012               	return		;funcret
 13652  00565C                     __end_of_TMR5_Initialize:
 13653                           	callstack 0
 13654                           
 13655 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13656 ;; Defined at:
 13657 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13660 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1    wreg      void 
 13665 ;; Registers used:
 13666 ;;		wreg, status,2, status,0
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13672 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13676 ;;Total ram usage:        2 bytes
 13677 ;; Hardware stack levels used: 1
 13678 ;; Hardware stack levels required when called: 8
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_TMR5_Initialize
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text58
 13687  005E74                     __ptext58:
 13688                           	callstack 0
 13689  005E74                     _TMR5_SetGateInterruptHandler:
 13690                           	callstack 20
 13691  005E74                     
 13692                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13693  005E74  C014  F188         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13694  005E78  C015  F189         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13695  005E7C  0012               	return		;funcret
 13696  005E7E                     __end_of_TMR5_SetGateInterruptHandler:
 13697                           	callstack 0
 13698                           
 13699 ;; *************** function _TMR4_Initialize *****************
 13700 ;; Defined at:
 13701 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;		None
 13704 ;; Auto vars:     Size  Location     Type
 13705 ;;		None
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  1    wreg      void 
 13708 ;; Registers used:
 13709 ;;		wreg, status,2, status,0, cstack
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13719 ;;Total ram usage:        0 bytes
 13720 ;; Hardware stack levels used: 1
 13721 ;; Hardware stack levels required when called: 9
 13722 ;; This function calls:
 13723 ;;		_TMR4_SetInterruptHandler
 13724 ;; This function is called by:
 13725 ;;		_SYSTEM_Initialize
 13726 ;; This function uses a non-reentrant model
 13727 ;;
 13728                           
 13729                           	psect	text59
 13730  005C00                     __ptext59:
 13731                           	callstack 0
 13732  005C00                     _TMR4_Initialize:
 13733                           	callstack 20
 13734  005C00                     
 13735                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13736  005C00  0E01               	movlw	1
 13737  005C02  6EA2               	movwf	162,c	;volatile
 13738                           
 13739                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13740  005C04  0E00               	movlw	0
 13741  005C06  6EA1               	movwf	161,c	;volatile
 13742                           
 13743                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13744  005C08  0E00               	movlw	0
 13745  005C0A  6EA3               	movwf	163,c	;volatile
 13746                           
 13747                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13748  005C0C  0EF9               	movlw	249
 13749  005C0E  6E9F               	movwf	159,c	;volatile
 13750                           
 13751                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13752  005C10  0E00               	movlw	0
 13753  005C12  6E9E               	movwf	158,c	;volatile
 13754  005C14                     
 13755                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13756  005C14  0139               	movlb	57	; () banked
 13757  005C16  91A7               	bcf	167,0,b	;volatile
 13758  005C18                     
 13759                           ; BSR set to: 57
 13760                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13761  005C18  8197               	bsf	151,0,b	;volatile
 13762  005C1A                     
 13763                           ; BSR set to: 57
 13764                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13765  005C1A  0EAE               	movlw	low _TMR4_DefaultInterruptHandler
 13766  005C1C  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13767  005C1E  0E5E               	movlw	high _TMR4_DefaultInterruptHandler
 13768  005C20  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13769  005C22  EC3F  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
 13770  005C26                     
 13771                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13772  005C26  0EE0               	movlw	224
 13773  005C28  6EA0               	movwf	160,c	;volatile
 13774  005C2A  0012               	return		;funcret
 13775  005C2C                     __end_of_TMR4_Initialize:
 13776                           	callstack 0
 13777                           
 13778 ;; *************** function _TMR4_SetInterruptHandler *****************
 13779 ;; Defined at:
 13780 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13781 ;; Parameters:    Size  Location     Type
 13782 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13783 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13784 ;; Auto vars:     Size  Location     Type
 13785 ;;		None
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  1    wreg      void 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/0
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;Total ram usage:        2 bytes
 13800 ;; Hardware stack levels used: 1
 13801 ;; Hardware stack levels required when called: 8
 13802 ;; This function calls:
 13803 ;;		Nothing
 13804 ;; This function is called by:
 13805 ;;		_TMR4_Initialize
 13806 ;;		_main
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text60
 13811  005E7E                     __ptext60:
 13812                           	callstack 0
 13813  005E7E                     _TMR4_SetInterruptHandler:
 13814                           	callstack 22
 13815  005E7E                     
 13816                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13817  005E7E  C014  F184         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13818  005E82  C015  F185         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13819  005E86  0012               	return		;funcret
 13820  005E88                     __end_of_TMR4_SetInterruptHandler:
 13821                           	callstack 0
 13822                           
 13823 ;; *************** function _TMR3_Initialize *****************
 13824 ;; Defined at:
 13825 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;		None
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      void 
 13832 ;; Registers used:
 13833 ;;		wreg, status,2, status,0
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13842 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13843 ;;Total ram usage:        2 bytes
 13844 ;; Hardware stack levels used: 1
 13845 ;; Hardware stack levels required when called: 8
 13846 ;; This function calls:
 13847 ;;		Nothing
 13848 ;; This function is called by:
 13849 ;;		_SYSTEM_Initialize
 13850 ;; This function uses a non-reentrant model
 13851 ;;
 13852                           
 13853                           	psect	text61
 13854  0058D6                     __ptext61:
 13855                           	callstack 0
 13856  0058D6                     _TMR3_Initialize:
 13857                           	callstack 21
 13858  0058D6                     
 13859                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13860  0058D6  0E00               	movlw	0
 13861  0058D8  6EA7               	movwf	167,c	;volatile
 13862                           
 13863                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13864  0058DA  0E00               	movlw	0
 13865  0058DC  6EA8               	movwf	168,c	;volatile
 13866                           
 13867                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13868  0058DE  0E05               	movlw	5
 13869  0058E0  6EA9               	movwf	169,c	;volatile
 13870                           
 13871                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13872  0058E2  0E00               	movlw	0
 13873  0058E4  6EA5               	movwf	165,c	;volatile
 13874                           
 13875                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13876  0058E6  0E00               	movlw	0
 13877  0058E8  6EA4               	movwf	164,c	;volatile
 13878  0058EA                     
 13879                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13880  0058EA  0139               	movlb	57	; () banked
 13881  0058EC  9DA6               	bcf	166,6,b	;volatile
 13882  0058EE                     
 13883                           ; BSR set to: 57
 13884                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13885  0058EE  50A4               	movf	164,w,c	;volatile
 13886  0058F0  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13887  0058F6  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13888  0058F8  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13889  0058FC  6A14               	clrf	??_TMR3_Initialize^0,c
 13890  0058FE  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13891  005900  0101               	movlb	1	; () banked
 13892  005902  6F86               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13893  005904  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13894  005906  6F87               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13895  005908                     
 13896                           ; BSR set to: 1
 13897                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13898  005908  0E01               	movlw	1
 13899  00590A  6EA6               	movwf	166,c	;volatile
 13900  00590C                     
 13901                           ; BSR set to: 1
 13902  00590C  0012               	return		;funcret
 13903  00590E                     __end_of_TMR3_Initialize:
 13904                           	callstack 0
 13905                           
 13906 ;; *************** function _TMR2_Initialize *****************
 13907 ;; Defined at:
 13908 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13909 ;; Parameters:    Size  Location     Type
 13910 ;;		None
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;		None
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  1    wreg      void 
 13915 ;; Registers used:
 13916 ;;		wreg, status,2
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13926 ;;Total ram usage:        0 bytes
 13927 ;; Hardware stack levels used: 1
 13928 ;; Hardware stack levels required when called: 8
 13929 ;; This function calls:
 13930 ;;		Nothing
 13931 ;; This function is called by:
 13932 ;;		_SYSTEM_Initialize
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text62
 13937  005D86                     __ptext62:
 13938                           	callstack 0
 13939  005D86                     _TMR2_Initialize:
 13940                           	callstack 21
 13941  005D86                     
 13942                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13943  005D86  0E05               	movlw	5
 13944  005D88  6EAE               	movwf	174,c	;volatile
 13945                           
 13946                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13947  005D8A  0E00               	movlw	0
 13948  005D8C  6EAD               	movwf	173,c	;volatile
 13949                           
 13950                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13951  005D8E  0E00               	movlw	0
 13952  005D90  6EAF               	movwf	175,c	;volatile
 13953  005D92                     
 13954                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13955  005D92  68AB               	setf	171,c	;volatile
 13956                           
 13957                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13958  005D94  0E00               	movlw	0
 13959  005D96  6EAA               	movwf	170,c	;volatile
 13960  005D98                     
 13961                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13962  005D98  0139               	movlb	57	; () banked
 13963  005D9A  95A4               	bcf	164,2,b	;volatile
 13964                           
 13965                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13966  005D9C  0EB0               	movlw	176
 13967  005D9E  6EAC               	movwf	172,c	;volatile
 13968  005DA0                     
 13969                           ; BSR set to: 57
 13970  005DA0  0012               	return		;funcret
 13971  005DA2                     __end_of_TMR2_Initialize:
 13972                           	callstack 0
 13973                           
 13974 ;; *************** function _SMT1_Initialize *****************
 13975 ;; Defined at:
 13976 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;		None
 13979 ;; Auto vars:     Size  Location     Type
 13980 ;;		None
 13981 ;; Return value:  Size  Location     Type
 13982 ;;                  1    wreg      void 
 13983 ;; Registers used:
 13984 ;;		wreg, status,2
 13985 ;; Tracked objects:
 13986 ;;		On entry : 0/0
 13987 ;;		On exit  : 0/0
 13988 ;;		Unchanged: 0/0
 13989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;Total ram usage:        0 bytes
 13995 ;; Hardware stack levels used: 1
 13996 ;; Hardware stack levels required when called: 8
 13997 ;; This function calls:
 13998 ;;		Nothing
 13999 ;; This function is called by:
 14000 ;;		_SYSTEM_Initialize
 14001 ;; This function uses a non-reentrant model
 14002 ;;
 14003                           
 14004                           	psect	text63
 14005  005AE6                     __ptext63:
 14006                           	callstack 0
 14007  005AE6                     _SMT1_Initialize:
 14008                           	callstack 21
 14009  005AE6                     
 14010                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 14011  005AE6  0E80               	movlw	128
 14012  005AE8  013F               	movlb	63	; () banked
 14013  005AEA  6F1E               	movwf	30,b	;volatile
 14014                           
 14015                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 14016  005AEC  0E42               	movlw	66
 14017  005AEE  6F1F               	movwf	31,b	;volatile
 14018                           
 14019                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 14020  005AF0  0E00               	movlw	0
 14021  005AF2  6F20               	movwf	32,b	;volatile
 14022                           
 14023                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 14024  005AF4  0E04               	movlw	4
 14025  005AF6  6F21               	movwf	33,b	;volatile
 14026                           
 14027                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14028  005AF8  0E00               	movlw	0
 14029  005AFA  6F23               	movwf	35,b	;volatile
 14030                           
 14031                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14032  005AFC  0E00               	movlw	0
 14033  005AFE  6F22               	movwf	34,b	;volatile
 14034                           
 14035                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14036  005B00  0E01               	movlw	1
 14037  005B02  6F1D               	movwf	29,b	;volatile
 14038  005B04                     
 14039                           ; BSR set to: 63
 14040                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14041  005B04  691C               	setf	28,b	;volatile
 14042  005B06                     
 14043                           ; BSR set to: 63
 14044                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14045  005B06  691B               	setf	27,b	;volatile
 14046  005B08                     
 14047                           ; BSR set to: 63
 14048                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14049  005B08  0139               	movlb	57	; () banked
 14050  005B0A  8B91               	bsf	145,5,b	;volatile
 14051  005B0C                     
 14052                           ; BSR set to: 57
 14053                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14054  005B0C  8F91               	bsf	145,7,b	;volatile
 14055  005B0E                     
 14056                           ; BSR set to: 57
 14057                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14058  005B0E  8D91               	bsf	145,6,b	;volatile
 14059  005B10                     
 14060                           ; BSR set to: 57
 14061                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14062  005B10  013F               	movlb	63	; () banked
 14063  005B12  8F1F               	bsf	31,7,b	;volatile
 14064  005B14                     
 14065                           ; BSR set to: 63
 14066  005B14  0012               	return		;funcret
 14067  005B16                     __end_of_SMT1_Initialize:
 14068                           	callstack 0
 14069                           
 14070 ;; *************** function _PWM8_Initialize *****************
 14071 ;; Defined at:
 14072 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14073 ;; Parameters:    Size  Location     Type
 14074 ;;		None
 14075 ;; Auto vars:     Size  Location     Type
 14076 ;;		None
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  1    wreg      void 
 14079 ;; Registers used:
 14080 ;;		wreg, status,2
 14081 ;; Tracked objects:
 14082 ;;		On entry : 0/0
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14090 ;;Total ram usage:        0 bytes
 14091 ;; Hardware stack levels used: 1
 14092 ;; Hardware stack levels required when called: 8
 14093 ;; This function calls:
 14094 ;;		Nothing
 14095 ;; This function is called by:
 14096 ;;		_SYSTEM_Initialize
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text64
 14101  005DA2                     __ptext64:
 14102                           	callstack 0
 14103  005DA2                     _PWM8_Initialize:
 14104                           	callstack 21
 14105  005DA2                     
 14106                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14107  005DA2  0E80               	movlw	128
 14108  005DA4  6E62               	movwf	98,c	;volatile
 14109                           
 14110                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14111  005DA6  0E00               	movlw	0
 14112  005DA8  6E61               	movwf	97,c	;volatile
 14113                           
 14114                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14115  005DAA  0E00               	movlw	0
 14116  005DAC  6E60               	movwf	96,c	;volatile
 14117                           
 14118                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14119  005DAE  013F               	movlb	63	; () banked
 14120  005DB0  515F               	movf	95,w,b	;volatile
 14121  005DB2  0B3F               	andlw	-193
 14122  005DB4  0980               	iorlw	128
 14123  005DB6  6F5F               	movwf	95,b	;volatile
 14124  005DB8                     
 14125                           ; BSR set to: 63
 14126  005DB8  0012               	return		;funcret
 14127  005DBA                     __end_of_PWM8_Initialize:
 14128                           	callstack 0
 14129                           
 14130 ;; *************** function _PWM7_Initialize *****************
 14131 ;; Defined at:
 14132 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;		None
 14135 ;; Auto vars:     Size  Location     Type
 14136 ;;		None
 14137 ;; Return value:  Size  Location     Type
 14138 ;;                  1    wreg      void 
 14139 ;; Registers used:
 14140 ;;		wreg, status,2
 14141 ;; Tracked objects:
 14142 ;;		On entry : 0/0
 14143 ;;		On exit  : 0/0
 14144 ;;		Unchanged: 0/0
 14145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14150 ;;Total ram usage:        0 bytes
 14151 ;; Hardware stack levels used: 1
 14152 ;; Hardware stack levels required when called: 8
 14153 ;; This function calls:
 14154 ;;		Nothing
 14155 ;; This function is called by:
 14156 ;;		_SYSTEM_Initialize
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           	psect	text65
 14161  005DBA                     __ptext65:
 14162                           	callstack 0
 14163  005DBA                     _PWM7_Initialize:
 14164                           	callstack 21
 14165  005DBA                     
 14166                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14167  005DBA  0E80               	movlw	128
 14168  005DBC  6E66               	movwf	102,c	;volatile
 14169                           
 14170                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14171  005DBE  0E00               	movlw	0
 14172  005DC0  6E65               	movwf	101,c	;volatile
 14173                           
 14174                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14175  005DC2  0E00               	movlw	0
 14176  005DC4  6E64               	movwf	100,c	;volatile
 14177                           
 14178                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14179  005DC6  013F               	movlb	63	; () banked
 14180  005DC8  515F               	movf	95,w,b	;volatile
 14181  005DCA  0BCF               	andlw	-49
 14182  005DCC  0920               	iorlw	32
 14183  005DCE  6F5F               	movwf	95,b	;volatile
 14184  005DD0                     
 14185                           ; BSR set to: 63
 14186  005DD0  0012               	return		;funcret
 14187  005DD2                     __end_of_PWM7_Initialize:
 14188                           	callstack 0
 14189                           
 14190 ;; *************** function _PWM6_Initialize *****************
 14191 ;; Defined at:
 14192 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14193 ;; Parameters:    Size  Location     Type
 14194 ;;		None
 14195 ;; Auto vars:     Size  Location     Type
 14196 ;;		None
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      void 
 14199 ;; Registers used:
 14200 ;;		wreg, status,2
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14210 ;;Total ram usage:        0 bytes
 14211 ;; Hardware stack levels used: 1
 14212 ;; Hardware stack levels required when called: 8
 14213 ;; This function calls:
 14214 ;;		Nothing
 14215 ;; This function is called by:
 14216 ;;		_SYSTEM_Initialize
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text66
 14221  005DD2                     __ptext66:
 14222                           	callstack 0
 14223  005DD2                     _PWM6_Initialize:
 14224                           	callstack 21
 14225  005DD2                     
 14226                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14227  005DD2  0E80               	movlw	128
 14228  005DD4  6E6A               	movwf	106,c	;volatile
 14229                           
 14230                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14231  005DD6  0E59               	movlw	89
 14232  005DD8  6E69               	movwf	105,c	;volatile
 14233                           
 14234                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14235  005DDA  0E40               	movlw	64
 14236  005DDC  6E68               	movwf	104,c	;volatile
 14237                           
 14238                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14239  005DDE  013F               	movlb	63	; () banked
 14240  005DE0  515F               	movf	95,w,b	;volatile
 14241  005DE2  0BF3               	andlw	-13
 14242  005DE4  0904               	iorlw	4
 14243  005DE6  6F5F               	movwf	95,b	;volatile
 14244  005DE8                     
 14245                           ; BSR set to: 63
 14246  005DE8  0012               	return		;funcret
 14247  005DEA                     __end_of_PWM6_Initialize:
 14248                           	callstack 0
 14249                           
 14250 ;; *************** function _PWM5_Initialize *****************
 14251 ;; Defined at:
 14252 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;		None
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;		None
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      void 
 14259 ;; Registers used:
 14260 ;;		wreg, status,2
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14270 ;;Total ram usage:        0 bytes
 14271 ;; Hardware stack levels used: 1
 14272 ;; Hardware stack levels required when called: 8
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_SYSTEM_Initialize
 14277 ;; This function uses a non-reentrant model
 14278 ;;
 14279                           
 14280                           	psect	text67
 14281  005DEA                     __ptext67:
 14282                           	callstack 0
 14283  005DEA                     _PWM5_Initialize:
 14284                           	callstack 21
 14285  005DEA                     
 14286                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14287  005DEA  0E80               	movlw	128
 14288  005DEC  6E6E               	movwf	110,c	;volatile
 14289                           
 14290                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14291  005DEE  0E59               	movlw	89
 14292  005DF0  6E6D               	movwf	109,c	;volatile
 14293                           
 14294                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14295  005DF2  0E40               	movlw	64
 14296  005DF4  6E6C               	movwf	108,c	;volatile
 14297                           
 14298                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14299  005DF6  013F               	movlb	63	; () banked
 14300  005DF8  515F               	movf	95,w,b	;volatile
 14301  005DFA  0BFC               	andlw	-4
 14302  005DFC  0901               	iorlw	1
 14303  005DFE  6F5F               	movwf	95,b	;volatile
 14304  005E00                     
 14305                           ; BSR set to: 63
 14306  005E00  0012               	return		;funcret
 14307  005E02                     __end_of_PWM5_Initialize:
 14308                           	callstack 0
 14309                           
 14310 ;; *************** function _PMD_Initialize *****************
 14311 ;; Defined at:
 14312 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;		None
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  1    wreg      void 
 14319 ;; Registers used:
 14320 ;;		wreg, status,2
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;Total ram usage:        0 bytes
 14331 ;; Hardware stack levels used: 1
 14332 ;; Hardware stack levels required when called: 8
 14333 ;; This function calls:
 14334 ;;		Nothing
 14335 ;; This function is called by:
 14336 ;;		_SYSTEM_Initialize
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340                           	psect	text68
 14341  005D00                     __ptext68:
 14342                           	callstack 0
 14343  005D00                     _PMD_Initialize:
 14344                           	callstack 21
 14345  005D00                     
 14346                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14347  005D00  0E00               	movlw	0
 14348  005D02  0139               	movlb	57	; () banked
 14349  005D04  6FC0               	movwf	192,b	;volatile
 14350                           
 14351                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14352  005D06  0E00               	movlw	0
 14353  005D08  6FC1               	movwf	193,b	;volatile
 14354                           
 14355                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14356  005D0A  0E00               	movlw	0
 14357  005D0C  6FC2               	movwf	194,b	;volatile
 14358                           
 14359                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14360  005D0E  0E00               	movlw	0
 14361  005D10  6FC3               	movwf	195,b	;volatile
 14362                           
 14363                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14364  005D12  0E00               	movlw	0
 14365  005D14  6FC4               	movwf	196,b	;volatile
 14366                           
 14367                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14368  005D16  0E00               	movlw	0
 14369  005D18  6FC5               	movwf	197,b	;volatile
 14370                           
 14371                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14372  005D1A  0E00               	movlw	0
 14373  005D1C  6FC6               	movwf	198,b	;volatile
 14374                           
 14375                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14376  005D1E  0E00               	movlw	0
 14377  005D20  6FC7               	movwf	199,b	;volatile
 14378  005D22                     
 14379                           ; BSR set to: 57
 14380  005D22  0012               	return		;funcret
 14381  005D24                     __end_of_PMD_Initialize:
 14382                           	callstack 0
 14383                           
 14384 ;; *************** function _PIN_MANAGER_Initialize *****************
 14385 ;; Defined at:
 14386 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14387 ;; Parameters:    Size  Location     Type
 14388 ;;		None
 14389 ;; Auto vars:     Size  Location     Type
 14390 ;;		None
 14391 ;; Return value:  Size  Location     Type
 14392 ;;                  1    wreg      void 
 14393 ;; Registers used:
 14394 ;;		wreg, status,2
 14395 ;; Tracked objects:
 14396 ;;		On entry : 0/0
 14397 ;;		On exit  : 0/0
 14398 ;;		Unchanged: 0/0
 14399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14404 ;;Total ram usage:        0 bytes
 14405 ;; Hardware stack levels used: 1
 14406 ;; Hardware stack levels required when called: 8
 14407 ;; This function calls:
 14408 ;;		Nothing
 14409 ;; This function is called by:
 14410 ;;		_SYSTEM_Initialize
 14411 ;; This function uses a non-reentrant model
 14412 ;;
 14413                           
 14414                           	psect	text69
 14415  004C06                     __ptext69:
 14416                           	callstack 0
 14417  004C06                     _PIN_MANAGER_Initialize:
 14418                           	callstack 21
 14419  004C06                     
 14420                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14421  004C06  0E00               	movlw	0
 14422  004C08  6EBE               	movwf	190,c	;volatile
 14423                           
 14424                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14425  004C0A  0E00               	movlw	0
 14426  004C0C  6EBD               	movwf	189,c	;volatile
 14427                           
 14428                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14429  004C0E  0E24               	movlw	36
 14430  004C10  6EBA               	movwf	186,c	;volatile
 14431                           
 14432                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14433  004C12  0E00               	movlw	0
 14434  004C14  6EBB               	movwf	187,c	;volatile
 14435                           
 14436                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14437  004C16  0E00               	movlw	0
 14438  004C18  6EBC               	movwf	188,c	;volatile
 14439                           
 14440                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14441  004C1A  0E07               	movlw	7
 14442  004C1C  6EC6               	movwf	198,c	;volatile
 14443                           
 14444                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14445  004C1E  0EC0               	movlw	192
 14446  004C20  6EC2               	movwf	194,c	;volatile
 14447                           
 14448                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14449  004C22  0EF7               	movlw	247
 14450  004C24  6EC3               	movwf	195,c	;volatile
 14451  004C26                     
 14452                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14453  004C26  68C4               	setf	196,c	;volatile
 14454  004C28                     
 14455                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14456  004C28  68C5               	setf	197,c	;volatile
 14457                           
 14458                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14459  004C2A  0E1F               	movlw	31
 14460  004C2C  013A               	movlb	58	; () banked
 14461  004C2E  6F70               	movwf	112,b	;volatile
 14462  004C30                     
 14463                           ; BSR set to: 58
 14464                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14465  004C30  6960               	setf	96,b	;volatile
 14466                           
 14467                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14468  004C32  0EC0               	movlw	192
 14469  004C34  6F50               	movwf	80,b	;volatile
 14470                           
 14471                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14472  004C36  0E07               	movlw	7
 14473  004C38  6F80               	movwf	128,b	;volatile
 14474                           
 14475                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14476  004C3A  0E7F               	movlw	127
 14477  004C3C  6F40               	movwf	64,b	;volatile
 14478                           
 14479                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14480  004C3E  0E00               	movlw	0
 14481  004C40  6F71               	movwf	113,b	;volatile
 14482                           
 14483                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14484  004C42  0E00               	movlw	0
 14485  004C44  6F81               	movwf	129,b	;volatile
 14486                           
 14487                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14488  004C46  0E00               	movlw	0
 14489  004C48  6F51               	movwf	81,b	;volatile
 14490                           
 14491                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14492  004C4A  0E00               	movlw	0
 14493  004C4C  6F41               	movwf	65,b	;volatile
 14494                           
 14495                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14496  004C4E  0E00               	movlw	0
 14497  004C50  6F61               	movwf	97,b	;volatile
 14498                           
 14499                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14500  004C52  0E00               	movlw	0
 14501  004C54  6F5A               	movwf	90,b	;volatile
 14502                           
 14503                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14504  004C56  0E00               	movlw	0
 14505  004C58  6F5B               	movwf	91,b	;volatile
 14506                           
 14507                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14508  004C5A  0E00               	movlw	0
 14509  004C5C  6F6A               	movwf	106,b	;volatile
 14510                           
 14511                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14512  004C5E  0E00               	movlw	0
 14513  004C60  6F6B               	movwf	107,b	;volatile
 14514                           
 14515                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14516  004C62  0E00               	movlw	0
 14517  004C64  6F7A               	movwf	122,b	;volatile
 14518                           
 14519                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14520  004C66  0E00               	movlw	0
 14521  004C68  6F7B               	movwf	123,b	;volatile
 14522                           
 14523                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14524  004C6A  0E00               	movlw	0
 14525  004C6C  6F82               	movwf	130,b	;volatile
 14526                           
 14527                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14528  004C6E  0E00               	movlw	0
 14529  004C70  6F42               	movwf	66,b	;volatile
 14530                           
 14531                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14532  004C72  0E00               	movlw	0
 14533  004C74  6F52               	movwf	82,b	;volatile
 14534                           
 14535                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14536  004C76  0E00               	movlw	0
 14537  004C78  6F62               	movwf	98,b	;volatile
 14538                           
 14539                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14540  004C7A  0E00               	movlw	0
 14541  004C7C  6F72               	movwf	114,b	;volatile
 14542  004C7E                     
 14543                           ; BSR set to: 58
 14544                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14545  004C7E  6943               	setf	67,b	;volatile
 14546  004C80                     
 14547                           ; BSR set to: 58
 14548                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14549  004C80  6953               	setf	83,b	;volatile
 14550  004C82                     
 14551                           ; BSR set to: 58
 14552                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14553  004C82  6963               	setf	99,b	;volatile
 14554  004C84                     
 14555                           ; BSR set to: 58
 14556                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14557  004C84  6973               	setf	115,b	;volatile
 14558                           
 14559                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14560  004C86  0E07               	movlw	7
 14561  004C88  6F83               	movwf	131,b	;volatile
 14562  004C8A                     
 14563                           ; BSR set to: 58
 14564                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14565  004C8A  6944               	setf	68,b	;volatile
 14566  004C8C                     
 14567                           ; BSR set to: 58
 14568                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14569  004C8C  6954               	setf	84,b	;volatile
 14570  004C8E                     
 14571                           ; BSR set to: 58
 14572                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14573  004C8E  6964               	setf	100,b	;volatile
 14574  004C90                     
 14575                           ; BSR set to: 58
 14576                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14577  004C90  6974               	setf	116,b	;volatile
 14578                           
 14579                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14580  004C92  0E0F               	movlw	15
 14581  004C94  6F84               	movwf	132,b	;volatile
 14582                           
 14583                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14584  004C96  0E1F               	movlw	31
 14585  004C98  6FCF               	movwf	207,b	;volatile
 14586                           
 14587                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14588  004C9A  0E09               	movlw	9
 14589  004C9C  6FDC               	movwf	220,b	;volatile
 14590                           
 14591                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14592  004C9E  0E0E               	movlw	14
 14593  004CA0  6F01               	movwf	1,b	;volatile
 14594                           
 14595                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14596  004CA2  0E0A               	movlw	10
 14597  004CA4  6FE5               	movwf	229,b	;volatile
 14598                           
 14599                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14600  004CA6  0E0D               	movlw	13
 14601  004CA8  6F00               	movwf	0,b	;volatile
 14602                           
 14603                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14604  004CAA  0E1D               	movlw	29
 14605  004CAC  6FC9               	movwf	201,b	;volatile
 14606                           
 14607                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14608  004CAE  0E10               	movlw	16
 14609  004CB0  6F04               	movwf	4,b	;volatile
 14610                           
 14611                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14612  004CB2  0E07               	movlw	7
 14613  004CB4  6FD9               	movwf	217,b	;volatile
 14614                           
 14615                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14616  004CB6  0E09               	movlw	9
 14617  004CB8  6FD1               	movwf	209,b	;volatile
 14618                           
 14619                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14620  004CBA  0E0F               	movlw	15
 14621  004CBC  6F03               	movwf	3,b	;volatile
 14622                           
 14623                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14624  004CBE  0E13               	movlw	19
 14625  004CC0  6F0B               	movwf	11,b	;volatile
 14626                           
 14627                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14628  004CC2  0E08               	movlw	8
 14629  004CC4  6FDB               	movwf	219,b	;volatile
 14630                           
 14631                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14632  004CC6  0E08               	movlw	8
 14633  004CC8  6FD2               	movwf	210,b	;volatile
 14634                           
 14635                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14636  004CCA  0E1E               	movlw	30
 14637  004CCC  6FD0               	movwf	208,b	;volatile
 14638  004CCE                     
 14639                           ; BSR set to: 58
 14640  004CCE  0012               	return		;funcret
 14641  004CD0                     __end_of_PIN_MANAGER_Initialize:
 14642                           	callstack 0
 14643                           
 14644 ;; *************** function _OSCILLATOR_Initialize *****************
 14645 ;; Defined at:
 14646 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14647 ;; Parameters:    Size  Location     Type
 14648 ;;		None
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;		None
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  1    wreg      void 
 14653 ;; Registers used:
 14654 ;;		wreg, status,2
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14664 ;;Total ram usage:        0 bytes
 14665 ;; Hardware stack levels used: 1
 14666 ;; Hardware stack levels required when called: 8
 14667 ;; This function calls:
 14668 ;;		Nothing
 14669 ;; This function is called by:
 14670 ;;		_SYSTEM_Initialize
 14671 ;; This function uses a non-reentrant model
 14672 ;;
 14673                           
 14674                           	psect	text70
 14675  005E02                     __ptext70:
 14676                           	callstack 0
 14677  005E02                     _OSCILLATOR_Initialize:
 14678                           	callstack 21
 14679  005E02                     
 14680                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14681  005E02  0E60               	movlw	96
 14682  005E04  0139               	movlb	57	; () banked
 14683  005E06  6FD9               	movwf	217,b	;volatile
 14684                           
 14685                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14686  005E08  0E00               	movlw	0
 14687  005E0A  6FDB               	movwf	219,b	;volatile
 14688                           
 14689                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14690  005E0C  0E00               	movlw	0
 14691  005E0E  6FDD               	movwf	221,b	;volatile
 14692                           
 14693                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14694  005E10  0E08               	movlw	8
 14695  005E12  6FDF               	movwf	223,b	;volatile
 14696                           
 14697                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14698  005E14  0E00               	movlw	0
 14699  005E16  6FDE               	movwf	222,b	;volatile
 14700  005E18                     
 14701                           ; BSR set to: 57
 14702  005E18  0012               	return		;funcret
 14703  005E1A                     __end_of_OSCILLATOR_Initialize:
 14704                           	callstack 0
 14705                           
 14706 ;; *************** function _INTERRUPT_Initialize *****************
 14707 ;; Defined at:
 14708 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;		None
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;  state           1   19[COMRAM] _Bool 
 14713 ;; Return value:  Size  Location     Type
 14714 ;;                  1    wreg      void 
 14715 ;; Registers used:
 14716 ;;		wreg, status,2
 14717 ;; Tracked objects:
 14718 ;;		On entry : 0/0
 14719 ;;		On exit  : 0/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14726 ;;Total ram usage:        1 bytes
 14727 ;; Hardware stack levels used: 1
 14728 ;; Hardware stack levels required when called: 8
 14729 ;; This function calls:
 14730 ;;		Nothing
 14731 ;; This function is called by:
 14732 ;;		_SYSTEM_Initialize
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text71
 14737  00557C                     __ptext71:
 14738                           	callstack 0
 14739  00557C                     _INTERRUPT_Initialize:
 14740                           	callstack 21
 14741  00557C                     
 14742                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14743  00557C  8AD2               	bsf	210,5,c	;volatile
 14744  00557E                     
 14745                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14746  00557E  0E00               	movlw	0
 14747  005580  BED2               	btfsc	16338,7,c	;volatile
 14748  005582  0E01               	movlw	1
 14749  005584  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14750  005586                     
 14751                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14752  005586  9ED2               	bcf	16338,7,c	;volatile
 14753                           
 14754                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14755  005588  0E55               	movlw	85
 14756  00558A  6ED4               	movwf	212,c	;volatile
 14757                           
 14758                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14759  00558C  0EAA               	movlw	170
 14760  00558E  6ED4               	movwf	212,c	;volatile
 14761  005590                     
 14762                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14763  005590  90D4               	bcf	212,0,c	;volatile
 14764                           
 14765                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14766  005592  0E00               	movlw	0
 14767  005594  6ED7               	movwf	215,c	;volatile
 14768                           
 14769                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14770  005596  0E00               	movlw	0
 14771  005598  6ED6               	movwf	214,c	;volatile
 14772                           
 14773                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14774  00559A  0E08               	movlw	8
 14775  00559C  6ED5               	movwf	213,c	;volatile
 14776                           
 14777                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14778  00559E  0E55               	movlw	85
 14779  0055A0  6ED4               	movwf	212,c	;volatile
 14780                           
 14781                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14782  0055A2  0EAA               	movlw	170
 14783  0055A4  6ED4               	movwf	212,c	;volatile
 14784  0055A6                     
 14785                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14786  0055A6  80D4               	bsf	212,0,c	;volatile
 14787  0055A8                     
 14788                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14789  0055A8  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14790  0055AA  D002               	bra	u2845
 14791  0055AC  9ED2               	bcf	16338,7,c	;volatile
 14792  0055AE  D001               	bra	u2846
 14793  0055B0                     u2845:
 14794  0055B0  8ED2               	bsf	16338,7,c	;volatile
 14795  0055B2                     u2846:
 14796  0055B2                     
 14797                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14798  0055B2  0139               	movlb	57	; () banked
 14799  0055B4  9983               	bcf	131,4,b	;volatile
 14800  0055B6                     
 14801                           ; BSR set to: 57
 14802                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14803  0055B6  9783               	bcf	131,3,b	;volatile
 14804  0055B8                     
 14805                           ; BSR set to: 57
 14806                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14807  0055B8  8F81               	bsf	129,7,b	;volatile
 14808  0055BA                     
 14809                           ; BSR set to: 57
 14810                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14811  0055BA  8B81               	bsf	129,5,b	;volatile
 14812  0055BC                     
 14813                           ; BSR set to: 57
 14814                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14815  0055BC  8D81               	bsf	129,6,b	;volatile
 14816  0055BE                     
 14817                           ; BSR set to: 57
 14818                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14819  0055BE  818A               	bsf	138,0,b	;volatile
 14820  0055C0                     
 14821                           ; BSR set to: 57
 14822                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14823  0055C0  8F88               	bsf	136,7,b	;volatile
 14824  0055C2                     
 14825                           ; BSR set to: 57
 14826                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14827  0055C2  9187               	bcf	135,0,b	;volatile
 14828  0055C4                     
 14829                           ; BSR set to: 57
 14830                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14831  0055C4  8389               	bsf	137,1,b	;volatile
 14832  0055C6                     
 14833                           ; BSR set to: 57
 14834  0055C6  0012               	return		;funcret
 14835  0055C8                     __end_of_INTERRUPT_Initialize:
 14836                           	callstack 0
 14837                           
 14838 ;; *************** function _CLC3_Initialize *****************
 14839 ;; Defined at:
 14840 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14841 ;; Parameters:    Size  Location     Type
 14842 ;;		None
 14843 ;; Auto vars:     Size  Location     Type
 14844 ;;		None
 14845 ;; Return value:  Size  Location     Type
 14846 ;;                  1    wreg      void 
 14847 ;; Registers used:
 14848 ;;		wreg, status,2
 14849 ;; Tracked objects:
 14850 ;;		On entry : 0/0
 14851 ;;		On exit  : 0/0
 14852 ;;		Unchanged: 0/0
 14853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14858 ;;Total ram usage:        0 bytes
 14859 ;; Hardware stack levels used: 1
 14860 ;; Hardware stack levels required when called: 8
 14861 ;; This function calls:
 14862 ;;		Nothing
 14863 ;; This function is called by:
 14864 ;;		_SYSTEM_Initialize
 14865 ;; This function uses a non-reentrant model
 14866 ;;
 14867                           
 14868                           	psect	text72
 14869  005C2C                     __ptext72:
 14870                           	callstack 0
 14871  005C2C                     _CLC3_Initialize:
 14872                           	callstack 21
 14873  005C2C                     
 14874                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14875  005C2C  0E00               	movlw	0
 14876  005C2E  013C               	movlb	60	; () banked
 14877  005C30  6F61               	movwf	97,b	;volatile
 14878                           
 14879                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14880  005C32  0E03               	movlw	3
 14881  005C34  6F62               	movwf	98,b	;volatile
 14882                           
 14883                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14884  005C36  0E02               	movlw	2
 14885  005C38  6F63               	movwf	99,b	;volatile
 14886                           
 14887                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14888  005C3A  0E00               	movlw	0
 14889  005C3C  6F64               	movwf	100,b	;volatile
 14890                           
 14891                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14892  005C3E  0E00               	movlw	0
 14893  005C40  6F65               	movwf	101,b	;volatile
 14894                           
 14895                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14896  005C42  0E02               	movlw	2
 14897  005C44  6F66               	movwf	102,b	;volatile
 14898                           
 14899                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14900  005C46  0E08               	movlw	8
 14901  005C48  6F67               	movwf	103,b	;volatile
 14902                           
 14903                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14904  005C4A  0E00               	movlw	0
 14905  005C4C  6F68               	movwf	104,b	;volatile
 14906                           
 14907                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14908  005C4E  0E00               	movlw	0
 14909  005C50  6F69               	movwf	105,b	;volatile
 14910                           
 14911                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14912  005C52  0E85               	movlw	133
 14913  005C54  6F60               	movwf	96,b	;volatile
 14914  005C56                     
 14915                           ; BSR set to: 60
 14916  005C56  0012               	return		;funcret
 14917  005C58                     __end_of_CLC3_Initialize:
 14918                           	callstack 0
 14919                           
 14920 ;; *************** function _CCP4_Initialize *****************
 14921 ;; Defined at:
 14922 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14923 ;; Parameters:    Size  Location     Type
 14924 ;;		None
 14925 ;; Auto vars:     Size  Location     Type
 14926 ;;		None
 14927 ;; Return value:  Size  Location     Type
 14928 ;;                  1    wreg      void 
 14929 ;; Registers used:
 14930 ;;		wreg, status,2, status,0, cstack
 14931 ;; Tracked objects:
 14932 ;;		On entry : 0/0
 14933 ;;		On exit  : 0/0
 14934 ;;		Unchanged: 0/0
 14935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14940 ;;Total ram usage:        0 bytes
 14941 ;; Hardware stack levels used: 1
 14942 ;; Hardware stack levels required when called: 9
 14943 ;; This function calls:
 14944 ;;		_CCP4_SetCallBack
 14945 ;; This function is called by:
 14946 ;;		_SYSTEM_Initialize
 14947 ;; This function uses a non-reentrant model
 14948 ;;
 14949                           
 14950                           	psect	text73
 14951  005B76                     __ptext73:
 14952                           	callstack 0
 14953  005B76                     _CCP4_Initialize:
 14954                           	callstack 20
 14955  005B76                     
 14956                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14957  005B76  0E83               	movlw	131
 14958  005B78  6E72               	movwf	114,c	;volatile
 14959                           
 14960                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14961  005B7A  0E00               	movlw	0
 14962  005B7C  6E73               	movwf	115,c	;volatile
 14963                           
 14964                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14965  005B7E  0E00               	movlw	0
 14966  005B80  6E71               	movwf	113,c	;volatile
 14967                           
 14968                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14969  005B82  0E00               	movlw	0
 14970  005B84  6E70               	movwf	112,c	;volatile
 14971  005B86                     
 14972                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14973  005B86  0E46               	movlw	low _CCP4_DefaultCallBack
 14974  005B88  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14975  005B8A  0E5B               	movlw	high _CCP4_DefaultCallBack
 14976  005B8C  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14977  005B8E  EC44  F02F         	call	_CCP4_SetCallBack	;wreg free
 14978  005B92                     
 14979                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14980  005B92  013F               	movlb	63	; () banked
 14981  005B94  515E               	movf	94,w,b	;volatile
 14982  005B96  0B3F               	andlw	-193
 14983  005B98  0980               	iorlw	128
 14984  005B9A  6F5E               	movwf	94,b	;volatile
 14985  005B9C                     
 14986                           ; BSR set to: 63
 14987                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14988  005B9C  0139               	movlb	57	; () banked
 14989  005B9E  91AA               	bcf	170,0,b	;volatile
 14990  005BA0                     
 14991                           ; BSR set to: 57
 14992                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14993  005BA0  819A               	bsf	154,0,b	;volatile
 14994  005BA2                     
 14995                           ; BSR set to: 57
 14996  005BA2  0012               	return		;funcret
 14997  005BA4                     __end_of_CCP4_Initialize:
 14998                           	callstack 0
 14999                           
 15000 ;; *************** function _CCP4_SetCallBack *****************
 15001 ;; Defined at:
 15002 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15005 ;;		 -> CCP4_DefaultCallBack(1), 
 15006 ;; Auto vars:     Size  Location     Type
 15007 ;;		None
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  1    wreg      void 
 15010 ;; Registers used:
 15011 ;;		wreg, status,2, status,0
 15012 ;; Tracked objects:
 15013 ;;		On entry : 0/0
 15014 ;;		On exit  : 0/0
 15015 ;;		Unchanged: 0/0
 15016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15020 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15021 ;;Total ram usage:        2 bytes
 15022 ;; Hardware stack levels used: 1
 15023 ;; Hardware stack levels required when called: 8
 15024 ;; This function calls:
 15025 ;;		Nothing
 15026 ;; This function is called by:
 15027 ;;		_CCP4_Initialize
 15028 ;; This function uses a non-reentrant model
 15029 ;;
 15030                           
 15031                           	psect	text74
 15032  005E88                     __ptext74:
 15033                           	callstack 0
 15034  005E88                     _CCP4_SetCallBack:
 15035                           	callstack 20
 15036  005E88                     
 15037                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15038  005E88  C014  F18C         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15039  005E8C  C015  F18D         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15040  005E90  0012               	return		;funcret
 15041  005E92                     __end_of_CCP4_SetCallBack:
 15042                           	callstack 0
 15043                           
 15044 ;; *************** function _CCP3_Initialize *****************
 15045 ;; Defined at:
 15046 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15047 ;; Parameters:    Size  Location     Type
 15048 ;;		None
 15049 ;; Auto vars:     Size  Location     Type
 15050 ;;		None
 15051 ;; Return value:  Size  Location     Type
 15052 ;;                  1    wreg      void 
 15053 ;; Registers used:
 15054 ;;		wreg, status,2, status,0, cstack
 15055 ;; Tracked objects:
 15056 ;;		On entry : 0/0
 15057 ;;		On exit  : 0/0
 15058 ;;		Unchanged: 0/0
 15059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15064 ;;Total ram usage:        0 bytes
 15065 ;; Hardware stack levels used: 1
 15066 ;; Hardware stack levels required when called: 9
 15067 ;; This function calls:
 15068 ;;		_CCP3_SetCallBack
 15069 ;; This function is called by:
 15070 ;;		_SYSTEM_Initialize
 15071 ;; This function uses a non-reentrant model
 15072 ;;
 15073                           
 15074                           	psect	text75
 15075  005BA4                     __ptext75:
 15076                           	callstack 0
 15077  005BA4                     _CCP3_Initialize:
 15078                           	callstack 20
 15079  005BA4                     
 15080                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15081  005BA4  0E83               	movlw	131
 15082  005BA6  6E76               	movwf	118,c	;volatile
 15083                           
 15084                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15085  005BA8  0E00               	movlw	0
 15086  005BAA  6E77               	movwf	119,c	;volatile
 15087                           
 15088                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15089  005BAC  0E00               	movlw	0
 15090  005BAE  6E75               	movwf	117,c	;volatile
 15091                           
 15092                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15093  005BB0  0E00               	movlw	0
 15094  005BB2  6E74               	movwf	116,c	;volatile
 15095  005BB4                     
 15096                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15097  005BB4  0E16               	movlw	low _CCP3_DefaultCallBack
 15098  005BB6  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15099  005BB8  0E5B               	movlw	high _CCP3_DefaultCallBack
 15100  005BBA  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15101  005BBC  EC49  F02F         	call	_CCP3_SetCallBack	;wreg free
 15102  005BC0                     
 15103                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15104  005BC0  013F               	movlb	63	; () banked
 15105  005BC2  515E               	movf	94,w,b	;volatile
 15106  005BC4  0BCF               	andlw	-49
 15107  005BC6  0920               	iorlw	32
 15108  005BC8  6F5E               	movwf	94,b	;volatile
 15109  005BCA                     
 15110                           ; BSR set to: 63
 15111                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15112  005BCA  0139               	movlb	57	; () banked
 15113  005BCC  93A9               	bcf	169,1,b	;volatile
 15114  005BCE                     
 15115                           ; BSR set to: 57
 15116                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15117  005BCE  8399               	bsf	153,1,b	;volatile
 15118  005BD0                     
 15119                           ; BSR set to: 57
 15120  005BD0  0012               	return		;funcret
 15121  005BD2                     __end_of_CCP3_Initialize:
 15122                           	callstack 0
 15123                           
 15124 ;; *************** function _CCP3_SetCallBack *****************
 15125 ;; Defined at:
 15126 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15129 ;;		 -> CCP3_DefaultCallBack(1), 
 15130 ;; Auto vars:     Size  Location     Type
 15131 ;;		None
 15132 ;; Return value:  Size  Location     Type
 15133 ;;                  1    wreg      void 
 15134 ;; Registers used:
 15135 ;;		wreg, status,2, status,0
 15136 ;; Tracked objects:
 15137 ;;		On entry : 0/0
 15138 ;;		On exit  : 0/0
 15139 ;;		Unchanged: 0/0
 15140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15145 ;;Total ram usage:        2 bytes
 15146 ;; Hardware stack levels used: 1
 15147 ;; Hardware stack levels required when called: 8
 15148 ;; This function calls:
 15149 ;;		Nothing
 15150 ;; This function is called by:
 15151 ;;		_CCP3_Initialize
 15152 ;; This function uses a non-reentrant model
 15153 ;;
 15154                           
 15155                           	psect	text76
 15156  005E92                     __ptext76:
 15157                           	callstack 0
 15158  005E92                     _CCP3_SetCallBack:
 15159                           	callstack 20
 15160  005E92                     
 15161                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15162  005E92  C014  F18E         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15163  005E96  C015  F18F         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15164  005E9A  0012               	return		;funcret
 15165  005E9C                     __end_of_CCP3_SetCallBack:
 15166                           	callstack 0
 15167                           
 15168 ;; *************** function _ADCC_Initialize *****************
 15169 ;; Defined at:
 15170 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15171 ;; Parameters:    Size  Location     Type
 15172 ;;		None
 15173 ;; Auto vars:     Size  Location     Type
 15174 ;;		None
 15175 ;; Return value:  Size  Location     Type
 15176 ;;                  1    wreg      void 
 15177 ;; Registers used:
 15178 ;;		wreg, status,2
 15179 ;; Tracked objects:
 15180 ;;		On entry : 0/0
 15181 ;;		On exit  : 0/0
 15182 ;;		Unchanged: 0/0
 15183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;Total ram usage:        0 bytes
 15189 ;; Hardware stack levels used: 1
 15190 ;; Hardware stack levels required when called: 8
 15191 ;; This function calls:
 15192 ;;		Nothing
 15193 ;; This function is called by:
 15194 ;;		_SYSTEM_Initialize
 15195 ;; This function uses a non-reentrant model
 15196 ;;
 15197                           
 15198                           	psect	text77
 15199  0054CC                     __ptext77:
 15200                           	callstack 0
 15201  0054CC                     _ADCC_Initialize:
 15202                           	callstack 21
 15203  0054CC                     
 15204                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15205  0054CC  0E00               	movlw	0
 15206  0054CE  013E               	movlb	62	; () banked
 15207  0054D0  6FDE               	movwf	222,b	;volatile
 15208                           
 15209                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15210  0054D2  0E00               	movlw	0
 15211  0054D4  6FDF               	movwf	223,b	;volatile
 15212                           
 15213                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15214  0054D6  0E00               	movlw	0
 15215  0054D8  6FE0               	movwf	224,b	;volatile
 15216                           
 15217                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15218  0054DA  0E00               	movlw	0
 15219  0054DC  6FE1               	movwf	225,b	;volatile
 15220                           
 15221                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15222  0054DE  0E00               	movlw	0
 15223  0054E0  6FE4               	movwf	228,b	;volatile
 15224                           
 15225                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15226  0054E2  0E00               	movlw	0
 15227  0054E4  6FE5               	movwf	229,b	;volatile
 15228                           
 15229                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15230  0054E6  0E00               	movlw	0
 15231  0054E8  6FEA               	movwf	234,b	;volatile
 15232                           
 15233                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15234  0054EA  0E00               	movlw	0
 15235  0054EC  6FEC               	movwf	236,b	;volatile
 15236                           
 15237                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15238  0054EE  0E00               	movlw	0
 15239  0054F0  6FF1               	movwf	241,b	;volatile
 15240                           
 15241                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15242  0054F2  0E58               	movlw	88
 15243  0054F4  6FF3               	movwf	243,b	;volatile
 15244                           
 15245                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15246  0054F6  0E02               	movlw	2
 15247  0054F8  6FF4               	movwf	244,b	;volatile
 15248                           
 15249                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15250  0054FA  0E00               	movlw	0
 15251  0054FC  6FF5               	movwf	245,b	;volatile
 15252                           
 15253                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15254  0054FE  0E00               	movlw	0
 15255  005500  6FF6               	movwf	246,b	;volatile
 15256                           
 15257                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15258  005502  0E00               	movlw	0
 15259  005504  6FF7               	movwf	247,b	;volatile
 15260                           
 15261                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15262  005506  0E00               	movlw	0
 15263  005508  6FF9               	movwf	249,b	;volatile
 15264                           
 15265                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15266  00550A  0E00               	movlw	0
 15267  00550C  6FFA               	movwf	250,b	;volatile
 15268                           
 15269                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15270  00550E  0E00               	movlw	0
 15271  005510  6FFB               	movwf	251,b	;volatile
 15272                           
 15273                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15274  005512  0E00               	movlw	0
 15275  005514  6FFC               	movwf	252,b	;volatile
 15276                           
 15277                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15278  005516  0E00               	movlw	0
 15279  005518  6FFD               	movwf	253,b	;volatile
 15280                           
 15281                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15282  00551A  0E00               	movlw	0
 15283  00551C  6FFE               	movwf	254,b	;volatile
 15284                           
 15285                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15286  00551E  0E1F               	movlw	31
 15287  005520  6FFF               	movwf	255,b	;volatile
 15288                           
 15289                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15290  005522  0E84               	movlw	132
 15291  005524  6FF8               	movwf	248,b	;volatile
 15292  005526                     
 15293                           ; BSR set to: 62
 15294  005526  0012               	return		;funcret
 15295  005528                     __end_of_ADCC_Initialize:
 15296                           	callstack 0
 15297                           
 15298 ;; *************** function _UART1_tx_vect_isr *****************
 15299 ;; Defined at:
 15300 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;		None
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;		None
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15317 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;Total ram usage:        1 bytes
 15319 ;; Hardware stack levels used: 1
 15320 ;; Hardware stack levels required when called: 5
 15321 ;; This function calls:
 15322 ;;		Absolute function
 15323 ;;		_UART1_Transmit_ISR
 15324 ;; This function is called by:
 15325 ;;		Interrupt level 1
 15326 ;; This function uses a non-reentrant model
 15327 ;;
 15328                           
 15329                           	psect	text78
 15330  0057F0                     __ptext78:
 15331                           	callstack 0
 15332  0057F0                     _UART1_tx_vect_isr:
 15333                           	callstack 14
 15334                           
 15335                           ; BSR set to: 62
 15336                           ;incstack = 0
 15337  0057F0  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15338  0057F6                     
 15339                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15340  0057F6  0101               	movlb	1	; () banked
 15341  0057F8  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15342  0057FA  1197               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15343  0057FC  B4D8               	btfsc	status,2,c
 15344  0057FE  EF03  F02C         	goto	i1u707_21
 15345  005802  EF05  F02C         	goto	i1u707_20
 15346  005806                     i1u707_21:
 15347  005806  EF11  F02C         	goto	i1l324
 15348  00580A                     i1u707_20:
 15349  00580A                     
 15350                           ; BSR set to: 1
 15351                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15352  00580A  D802               	call	i1u708_28
 15353  00580C  EF11  F02C         	goto	i1u708_29
 15354  005810                     i1u708_28:
 15355  005810  0005               	push	
 15356  005812  6EFA               	movwf	pclath,c
 15357  005814  5196               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15358  005816  6EFD               	movwf	tosl,c
 15359  005818  5197               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15360  00581A  6EFE               	movwf	tosh,c
 15361  00581C  6AFF               	clrf	tosu,c
 15362  00581E  50FA               	movf	pclath,w,c
 15363  005820  0012               	return		;indir
 15364  005822                     i1u708_29:
 15365  005822                     i1l324:
 15366  005822  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15367  005828  0011               	retfie		f
 15368  00582A                     __end_of_UART1_tx_vect_isr:
 15369                           	callstack 0
 15370                           
 15371 ;; *************** function _UART1_Transmit_ISR *****************
 15372 ;; Defined at:
 15373 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15374 ;; Parameters:    Size  Location     Type
 15375 ;;		None
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;		None
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      void 
 15380 ;; Registers used:
 15381 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15382 ;; Tracked objects:
 15383 ;;		On entry : 0/0
 15384 ;;		On exit  : 0/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;Total ram usage:        0 bytes
 15392 ;; Hardware stack levels used: 1
 15393 ;; Hardware stack levels required when called: 4
 15394 ;; This function calls:
 15395 ;;		Nothing
 15396 ;; This function is called by:
 15397 ;;		_UART1_Initialize
 15398 ;;		_UART1_tx_vect_isr
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           	psect	text79
 15403  005732                     __ptext79:
 15404                           	callstack 0
 15405  005732                     _UART1_Transmit_ISR:
 15406                           	callstack 14
 15407  005732                     
 15408                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15409  005732  0E08               	movlw	8
 15410  005734  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15411  005736  EF9F  F02B         	goto	i1u688_21
 15412  00573A  EFA1  F02B         	goto	i1u688_20
 15413  00573E                     i1u688_21:
 15414  00573E  EFB8  F02B         	goto	i1l333
 15415  005742                     i1u688_20:
 15416  005742                     
 15417                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15418  005742  0E10               	movlw	low _uart1TxBuffer
 15419  005744  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15420  005746  6ED9               	movwf	fsr2l,c
 15421  005748  6ADA               	clrf	fsr2h,c
 15422  00574A  0E01               	movlw	high _uart1TxBuffer
 15423  00574C  22DA               	addwfc	fsr2h,f,c
 15424  00574E  50DF               	movf	indf2,w,c
 15425  005750  013D               	movlb	61	; () banked
 15426  005752  6FEA               	movwf	234,b	;volatile
 15427  005754                     
 15428                           ; BSR set to: 61
 15429  005754  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15430  005756                     
 15431                           ; BSR set to: 61
 15432                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15433  005756  0E07               	movlw	7
 15434  005758  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15435  00575A  EFB1  F02B         	goto	i1u689_21
 15436  00575E  EFB3  F02B         	goto	i1u689_20
 15437  005762                     i1u689_21:
 15438  005762  EFB5  F02B         	goto	i1l7088
 15439  005766                     i1u689_20:
 15440  005766                     
 15441                           ; BSR set to: 61
 15442                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15443  005766  0E00               	movlw	0
 15444  005768  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15445  00576A                     i1l7088:
 15446                           
 15447                           ; BSR set to: 61
 15448                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15449  00576A  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15450                           
 15451                           ;mcc_generated_files/uart1.c: 264:     }
 15452  00576C  EFBA  F02B         	goto	i1l336
 15453  005770                     i1l333:
 15454                           
 15455                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15456  005770  0139               	movlb	57	; () banked
 15457  005772  9993               	bcf	147,4,b	;volatile
 15458  005774                     i1l336:
 15459  005774  0012               	return		;funcret
 15460  005776                     __end_of_UART1_Transmit_ISR:
 15461                           	callstack 0
 15462                           
 15463 ;; *************** function _UART1_rx_vect_isr *****************
 15464 ;; Defined at:
 15465 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;		None
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;		None
 15470 ;; Return value:  Size  Location     Type
 15471 ;;                  1    wreg      void 
 15472 ;; Registers used:
 15473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15483 ;;Total ram usage:        1 bytes
 15484 ;; Hardware stack levels used: 1
 15485 ;; Hardware stack levels required when called: 7
 15486 ;; This function calls:
 15487 ;;		Absolute function
 15488 ;;		_UART1_Receive_ISR
 15489 ;; This function is called by:
 15490 ;;		Interrupt level 1
 15491 ;; This function uses a non-reentrant model
 15492 ;;
 15493                           
 15494                           	psect	text80
 15495  00582C                     __ptext80:
 15496                           	callstack 0
 15497  00582C                     _UART1_rx_vect_isr:
 15498                           	callstack 12
 15499                           
 15500                           ;incstack = 0
 15501  00582C  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15502  005832                     
 15503                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15504  005832  0101               	movlb	1	; () banked
 15505  005834  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15506  005836  1199               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15507  005838  B4D8               	btfsc	status,2,c
 15508  00583A  EF21  F02C         	goto	i1u709_21
 15509  00583E  EF23  F02C         	goto	i1u709_20
 15510  005842                     i1u709_21:
 15511  005842  EF2F  F02C         	goto	i1l330
 15512  005846                     i1u709_20:
 15513  005846                     
 15514                           ; BSR set to: 1
 15515                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15516  005846  D802               	call	i1u710_28
 15517  005848  EF2F  F02C         	goto	i1u710_29
 15518  00584C                     i1u710_28:
 15519  00584C  0005               	push	
 15520  00584E  6EFA               	movwf	pclath,c
 15521  005850  5198               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15522  005852  6EFD               	movwf	tosl,c
 15523  005854  5199               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15524  005856  6EFE               	movwf	tosh,c
 15525  005858  6AFF               	clrf	tosu,c
 15526  00585A  50FA               	movf	pclath,w,c
 15527  00585C  0012               	return		;indir
 15528  00585E                     i1u710_29:
 15529  00585E                     i1l330:
 15530  00585E  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15531  005864  0011               	retfie		f
 15532  005866                     __end_of_UART1_rx_vect_isr:
 15533                           	callstack 0
 15534                           
 15535 ;; *************** function _UART1_Receive_ISR *****************
 15536 ;; Defined at:
 15537 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      void 
 15544 ;; Registers used:
 15545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15555 ;;Total ram usage:        0 bytes
 15556 ;; Hardware stack levels used: 1
 15557 ;; Hardware stack levels required when called: 6
 15558 ;; This function calls:
 15559 ;;		Absolute function
 15560 ;;		_UART1_DefaultErrorHandler
 15561 ;;		_UART1_DefaultFramingErrorHandler
 15562 ;;		_UART1_DefaultOverrunErrorHandler
 15563 ;;		_UART1_RxDataHandler
 15564 ;; This function is called by:
 15565 ;;		_UART1_Initialize
 15566 ;;		_UART1_rx_vect_isr
 15567 ;; This function uses a non-reentrant model
 15568 ;;
 15569                           
 15570                           	psect	text81
 15571  004E56                     __ptext81:
 15572                           	callstack 0
 15573  004E56                     _UART1_Receive_ISR:
 15574                           	callstack 12
 15575  004E56                     
 15576                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15577  004E56  0E00               	movlw	low _uart1RxStatusBuffer
 15578  004E58  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15579  004E5A  6ED9               	movwf	fsr2l,c
 15580  004E5C  6ADA               	clrf	fsr2h,c
 15581  004E5E  0E01               	movlw	high _uart1RxStatusBuffer
 15582  004E60  22DA               	addwfc	fsr2h,f,c
 15583  004E62  0E00               	movlw	0
 15584  004E64  6EDF               	movwf	indf2,c
 15585  004E66                     
 15586                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15587  004E66  013D               	movlb	61	; () banked
 15588  004E68  A7F9               	btfss	249,3,b	;volatile
 15589  004E6A  EF39  F027         	goto	i1u690_21
 15590  004E6E  EF3B  F027         	goto	i1u690_20
 15591  004E72                     i1u690_21:
 15592  004E72  EF4F  F027         	goto	i1l7098
 15593  004E76                     i1u690_20:
 15594  004E76                     
 15595                           ; BSR set to: 61
 15596                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15597  004E76  0E00               	movlw	low _uart1RxStatusBuffer
 15598  004E78  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15599  004E7A  6ED9               	movwf	fsr2l,c
 15600  004E7C  6ADA               	clrf	fsr2h,c
 15601  004E7E  0E01               	movlw	high _uart1RxStatusBuffer
 15602  004E80  22DA               	addwfc	fsr2h,f,c
 15603  004E82  0101               	movlb	1	; () banked
 15604  004E84  82DF               	bsf	indf2,1,c
 15605  004E86                     
 15606                           ; BSR set to: 1
 15607                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15608  004E86  D802               	call	i1u691_28
 15609  004E88  EF4F  F027         	goto	i1u691_29
 15610  004E8C                     i1u691_28:
 15611  004E8C  0005               	push	
 15612  004E8E  6EFA               	movwf	pclath,c
 15613  004E90  5194               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15614  004E92  6EFD               	movwf	tosl,c
 15615  004E94  5195               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15616  004E96  6EFE               	movwf	tosh,c
 15617  004E98  6AFF               	clrf	tosu,c
 15618  004E9A  50FA               	movf	pclath,w,c
 15619  004E9C  0012               	return		;indir
 15620  004E9E                     i1u691_29:
 15621  004E9E                     i1l7098:
 15622                           
 15623                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15624  004E9E  013D               	movlb	61	; () banked
 15625  004EA0  A3F9               	btfss	249,1,b	;volatile
 15626  004EA2  EF55  F027         	goto	i1u692_21
 15627  004EA6  EF57  F027         	goto	i1u692_20
 15628  004EAA                     i1u692_21:
 15629  004EAA  EF6B  F027         	goto	i1l7104
 15630  004EAE                     i1u692_20:
 15631  004EAE                     
 15632                           ; BSR set to: 61
 15633                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15634  004EAE  0E00               	movlw	low _uart1RxStatusBuffer
 15635  004EB0  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15636  004EB2  6ED9               	movwf	fsr2l,c
 15637  004EB4  6ADA               	clrf	fsr2h,c
 15638  004EB6  0E01               	movlw	high _uart1RxStatusBuffer
 15639  004EB8  22DA               	addwfc	fsr2h,f,c
 15640  004EBA  0101               	movlb	1	; () banked
 15641  004EBC  84DF               	bsf	indf2,2,c
 15642  004EBE                     
 15643                           ; BSR set to: 1
 15644                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15645  004EBE  D802               	call	i1u693_28
 15646  004EC0  EF6B  F027         	goto	i1u693_29
 15647  004EC4                     i1u693_28:
 15648  004EC4  0005               	push	
 15649  004EC6  6EFA               	movwf	pclath,c
 15650  004EC8  5192               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15651  004ECA  6EFD               	movwf	tosl,c
 15652  004ECC  5193               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15653  004ECE  6EFE               	movwf	tosh,c
 15654  004ED0  6AFF               	clrf	tosu,c
 15655  004ED2  50FA               	movf	pclath,w,c
 15656  004ED4  0012               	return		;indir
 15657  004ED6                     i1u693_29:
 15658  004ED6                     i1l7104:
 15659                           
 15660                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15661  004ED6  0E00               	movlw	low _uart1RxStatusBuffer
 15662  004ED8  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15663  004EDA  6ED9               	movwf	fsr2l,c
 15664  004EDC  6ADA               	clrf	fsr2h,c
 15665  004EDE  0E01               	movlw	high _uart1RxStatusBuffer
 15666  004EE0  22DA               	addwfc	fsr2h,f,c
 15667  004EE2  50DF               	movf	indf2,w,c
 15668  004EE4  B4D8               	btfsc	status,2,c
 15669  004EE6  EF77  F027         	goto	i1u694_21
 15670  004EEA  EF79  F027         	goto	i1u694_20
 15671  004EEE                     i1u694_21:
 15672  004EEE  EF88  F027         	goto	i1l7108
 15673  004EF2                     i1u694_20:
 15674  004EF2                     
 15675                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15676  004EF2  D802               	call	i1u695_28
 15677  004EF4  EF86  F027         	goto	i1u695_29
 15678  004EF8                     i1u695_28:
 15679  004EF8  0005               	push	
 15680  004EFA  6EFA               	movwf	pclath,c
 15681  004EFC  0101               	movlb	1	; () banked
 15682  004EFE  5190               	movf	_UART1_ErrorHandler& (0+255),w,b
 15683  004F00  6EFD               	movwf	tosl,c
 15684  004F02  5191               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15685  004F04  6EFE               	movwf	tosh,c
 15686  004F06  6AFF               	clrf	tosu,c
 15687  004F08  50FA               	movf	pclath,w,c
 15688  004F0A  0012               	return		;indir
 15689  004F0C                     i1u695_29:
 15690                           
 15691                           ;mcc_generated_files/uart1.c: 290:     } else {
 15692  004F0C  EF8A  F027         	goto	i1l343
 15693  004F10                     i1l7108:
 15694                           
 15695                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15696  004F10  EC2C  F02E         	call	_UART1_RxDataHandler	;wreg free
 15697  004F14                     i1l343:
 15698  004F14  0012               	return		;funcret
 15699  004F16                     __end_of_UART1_Receive_ISR:
 15700                           	callstack 0
 15701                           
 15702 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15703 ;; Defined at:
 15704 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15705 ;; Parameters:    Size  Location     Type
 15706 ;;		None
 15707 ;; Auto vars:     Size  Location     Type
 15708 ;;		None
 15709 ;; Return value:  Size  Location     Type
 15710 ;;                  1    wreg      void 
 15711 ;; Registers used:
 15712 ;;		None
 15713 ;; Tracked objects:
 15714 ;;		On entry : 0/0
 15715 ;;		On exit  : 0/0
 15716 ;;		Unchanged: 0/0
 15717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15722 ;;Total ram usage:        0 bytes
 15723 ;; Hardware stack levels used: 1
 15724 ;; Hardware stack levels required when called: 4
 15725 ;; This function calls:
 15726 ;;		Nothing
 15727 ;; This function is called by:
 15728 ;;		_UART1_Initialize
 15729 ;;		_UART1_Receive_ISR
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733                           	psect	text82
 15734  005EAA                     __ptext82:
 15735                           	callstack 0
 15736  005EAA                     _UART1_DefaultOverrunErrorHandler:
 15737                           	callstack 13
 15738  005EAA  0012               	return		;funcret
 15739  005EAC                     __end_of_UART1_DefaultOverrunErrorHandler:
 15740                           	callstack 0
 15741                           
 15742 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15743 ;; Defined at:
 15744 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;		None
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;		None
 15749 ;; Return value:  Size  Location     Type
 15750 ;;                  1    wreg      void 
 15751 ;; Registers used:
 15752 ;;		None
 15753 ;; Tracked objects:
 15754 ;;		On entry : 0/0
 15755 ;;		On exit  : 0/0
 15756 ;;		Unchanged: 0/0
 15757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15762 ;;Total ram usage:        0 bytes
 15763 ;; Hardware stack levels used: 1
 15764 ;; Hardware stack levels required when called: 4
 15765 ;; This function calls:
 15766 ;;		Nothing
 15767 ;; This function is called by:
 15768 ;;		_UART1_Initialize
 15769 ;;		_UART1_Receive_ISR
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           	psect	text83
 15774  005EAC                     __ptext83:
 15775                           	callstack 0
 15776  005EAC                     _UART1_DefaultFramingErrorHandler:
 15777                           	callstack 13
 15778  005EAC  0012               	return		;funcret
 15779  005EAE                     __end_of_UART1_DefaultFramingErrorHandler:
 15780                           	callstack 0
 15781                           
 15782 ;; *************** function _UART1_DefaultErrorHandler *****************
 15783 ;; Defined at:
 15784 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;		None
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used: 1
 15804 ;; Hardware stack levels required when called: 5
 15805 ;; This function calls:
 15806 ;;		_UART1_RxDataHandler
 15807 ;; This function is called by:
 15808 ;;		_UART1_Initialize
 15809 ;;		_UART1_Receive_ISR
 15810 ;; This function uses a non-reentrant model
 15811 ;;
 15812                           
 15813                           	psect	text84
 15814  005E9C                     __ptext84:
 15815                           	callstack 0
 15816  005E9C                     _UART1_DefaultErrorHandler:
 15817                           	callstack 12
 15818  005E9C                     
 15819                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15820  005E9C  EC2C  F02E         	call	_UART1_RxDataHandler	;wreg free
 15821  005EA0  0012               	return		;funcret
 15822  005EA2                     __end_of_UART1_DefaultErrorHandler:
 15823                           	callstack 0
 15824                           
 15825 ;; *************** function _UART1_RxDataHandler *****************
 15826 ;; Defined at:
 15827 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15828 ;; Parameters:    Size  Location     Type
 15829 ;;		None
 15830 ;; Auto vars:     Size  Location     Type
 15831 ;;		None
 15832 ;; Return value:  Size  Location     Type
 15833 ;;                  1    wreg      void 
 15834 ;; Registers used:
 15835 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15836 ;; Tracked objects:
 15837 ;;		On entry : 0/0
 15838 ;;		On exit  : 0/0
 15839 ;;		Unchanged: 0/0
 15840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15845 ;;Total ram usage:        0 bytes
 15846 ;; Hardware stack levels used: 1
 15847 ;; Hardware stack levels required when called: 4
 15848 ;; This function calls:
 15849 ;;		Nothing
 15850 ;; This function is called by:
 15851 ;;		_UART1_Receive_ISR
 15852 ;;		_UART1_DefaultErrorHandler
 15853 ;; This function uses a non-reentrant model
 15854 ;;
 15855                           
 15856                           	psect	text85
 15857  005C58                     __ptext85:
 15858                           	callstack 0
 15859  005C58                     _UART1_RxDataHandler:
 15860                           	callstack 13
 15861  005C58                     
 15862                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15863  005C58  0E08               	movlw	low _uart1RxBuffer
 15864  005C5A  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15865  005C5C  6ED9               	movwf	fsr2l,c
 15866  005C5E  6ADA               	clrf	fsr2h,c
 15867  005C60  0E01               	movlw	high _uart1RxBuffer
 15868  005C62  22DA               	addwfc	fsr2h,f,c
 15869  005C64  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15870  005C6A  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15871  005C6C                     
 15872                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15873  005C6C  0E07               	movlw	7
 15874  005C6E  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15875  005C70  EF3C  F02E         	goto	i1u632_21
 15876  005C74  EF3E  F02E         	goto	i1u632_20
 15877  005C78                     i1u632_21:
 15878  005C78  EF40  F02E         	goto	i1l6546
 15879  005C7C                     i1u632_20:
 15880  005C7C                     
 15881                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15882  005C7C  0E00               	movlw	0
 15883  005C7E  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15884  005C80                     i1l6546:
 15885                           
 15886                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15887  005C80  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15888  005C82  0012               	return		;funcret
 15889  005C84                     __end_of_UART1_RxDataHandler:
 15890                           	callstack 0
 15891                           
 15892 ;; *************** function _TMR4_ISR *****************
 15893 ;; Defined at:
 15894 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15895 ;; Parameters:    Size  Location     Type
 15896 ;;		None
 15897 ;; Auto vars:     Size  Location     Type
 15898 ;;		None
 15899 ;; Return value:  Size  Location     Type
 15900 ;;                  1    wreg      void 
 15901 ;; Registers used:
 15902 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15903 ;; Tracked objects:
 15904 ;;		On entry : 0/0
 15905 ;;		On exit  : 0/0
 15906 ;;		Unchanged: 0/0
 15907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15912 ;;Total ram usage:        1 bytes
 15913 ;; Hardware stack levels used: 1
 15914 ;; Hardware stack levels required when called: 6
 15915 ;; This function calls:
 15916 ;;		_TMR4_CallBack
 15917 ;; This function is called by:
 15918 ;;		Interrupt level 1
 15919 ;; This function uses a non-reentrant model
 15920 ;;
 15921                           
 15922                           	psect	text86
 15923  005910                     __ptext86:
 15924                           	callstack 0
 15925  005910                     _TMR4_ISR:
 15926                           	callstack 13
 15927                           
 15928                           ;incstack = 0
 15929  005910  006F FF60  F013    	movff	status,??_TMR4_ISR
 15930  005916                     
 15931                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15932  005916  0139               	movlb	57	; () banked
 15933  005918  91A7               	bcf	167,0,b	;volatile
 15934  00591A                     
 15935                           ; BSR set to: 57
 15936                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15937  00591A  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 15938  00591C  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 15939  00591E  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 15940  005920  E109               	bnz	i1u715_20
 15941  005922  0E0A               	movlw	10
 15942  005924  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 15943  005926  A0D8               	btfss	status,0,c
 15944  005928  EF98  F02C         	goto	i1u715_21
 15945  00592C  EF9A  F02C         	goto	i1u715_20
 15946  005930                     i1u715_21:
 15947  005930  EFA0  F02C         	goto	i1l688
 15948  005934                     i1u715_20:
 15949  005934                     
 15950                           ; BSR set to: 57
 15951                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15952  005934  ECE9  F02D         	call	_TMR4_CallBack	;wreg free
 15953  005938                     
 15954                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15955  005938  0E00               	movlw	0
 15956  00593A  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 15957  00593C  0E00               	movlw	0
 15958  00593E  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 15959  005940                     i1l688:
 15960  005940  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15961  005946  0011               	retfie		f
 15962  005948                     __end_of_TMR4_ISR:
 15963                           	callstack 0
 15964                           
 15965 ;; *************** function _TMR4_CallBack *****************
 15966 ;; Defined at:
 15967 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;		None
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;		None
 15972 ;; Return value:  Size  Location     Type
 15973 ;;                  1    wreg      void 
 15974 ;; Registers used:
 15975 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15976 ;; Tracked objects:
 15977 ;;		On entry : 0/0
 15978 ;;		On exit  : 0/0
 15979 ;;		Unchanged: 0/0
 15980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15985 ;;Total ram usage:        0 bytes
 15986 ;; Hardware stack levels used: 1
 15987 ;; Hardware stack levels required when called: 5
 15988 ;; This function calls:
 15989 ;;		Absolute function
 15990 ;;		_TMR4_10msISR
 15991 ;;		_TMR4_DefaultInterruptHandler
 15992 ;; This function is called by:
 15993 ;;		_TMR4_ISR
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           	psect	text87
 15998  005BD2                     __ptext87:
 15999                           	callstack 0
 16000  005BD2                     _TMR4_CallBack:
 16001                           	callstack 13
 16002  005BD2                     
 16003                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 16004  005BD2  0101               	movlb	1	; () banked
 16005  005BD4  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16006  005BD6  1185               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16007  005BD8  B4D8               	btfsc	status,2,c
 16008  005BDA  EFF1  F02D         	goto	i1u699_21
 16009  005BDE  EFF3  F02D         	goto	i1u699_20
 16010  005BE2                     i1u699_21:
 16011  005BE2  EFFF  F02D         	goto	i1l692
 16012  005BE6                     i1u699_20:
 16013  005BE6                     
 16014                           ; BSR set to: 1
 16015                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 16016  005BE6  D802               	call	i1u700_28
 16017  005BE8  EFFF  F02D         	goto	i1u700_29
 16018  005BEC                     i1u700_28:
 16019  005BEC  0005               	push	
 16020  005BEE  6EFA               	movwf	pclath,c
 16021  005BF0  5184               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16022  005BF2  6EFD               	movwf	tosl,c
 16023  005BF4  5185               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16024  005BF6  6EFE               	movwf	tosh,c
 16025  005BF8  6AFF               	clrf	tosu,c
 16026  005BFA  50FA               	movf	pclath,w,c
 16027  005BFC  0012               	return		;indir
 16028  005BFE                     i1u700_29:
 16029  005BFE                     i1l692:
 16030  005BFE  0012               	return		;funcret
 16031  005C00                     __end_of_TMR4_CallBack:
 16032                           	callstack 0
 16033                           
 16034 ;; *************** function _TMR4_10msISR *****************
 16035 ;; Defined at:
 16036 ;;		line 62 in file "main.c"
 16037 ;; Parameters:    Size  Location     Type
 16038 ;;		None
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;		None
 16041 ;; Return value:  Size  Location     Type
 16042 ;;                  1    wreg      void 
 16043 ;; Registers used:
 16044 ;;		status,2, status,0
 16045 ;; Tracked objects:
 16046 ;;		On entry : 0/0
 16047 ;;		On exit  : 0/0
 16048 ;;		Unchanged: 0/0
 16049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16054 ;;Total ram usage:        0 bytes
 16055 ;; Hardware stack levels used: 1
 16056 ;; Hardware stack levels required when called: 4
 16057 ;; This function calls:
 16058 ;;		Nothing
 16059 ;; This function is called by:
 16060 ;;		_main
 16061 ;;		_TMR4_CallBack
 16062 ;; This function uses a non-reentrant model
 16063 ;;
 16064                           
 16065                           	psect	text88
 16066  005EA2                     __ptext88:
 16067                           	callstack 0
 16068  005EA2                     _TMR4_10msISR:
 16069                           	callstack 13
 16070  005EA2                     
 16071                           ;main.c: 63:     ++cycle10ms;
 16072  005EA2  0100               	movlb	0	; () banked
 16073  005EA4  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16074  005EA6                     
 16075                           ; BSR set to: 0
 16076  005EA6  0012               	return		;funcret
 16077  005EA8                     __end_of_TMR4_10msISR:
 16078                           	callstack 0
 16079                           
 16080 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16081 ;; Defined at:
 16082 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;		None
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;		None
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  1    wreg      void 
 16089 ;; Registers used:
 16090 ;;		None
 16091 ;; Tracked objects:
 16092 ;;		On entry : 0/0
 16093 ;;		On exit  : 0/0
 16094 ;;		Unchanged: 0/0
 16095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16100 ;;Total ram usage:        0 bytes
 16101 ;; Hardware stack levels used: 1
 16102 ;; Hardware stack levels required when called: 4
 16103 ;; This function calls:
 16104 ;;		Nothing
 16105 ;; This function is called by:
 16106 ;;		_TMR4_Initialize
 16107 ;;		_TMR4_CallBack
 16108 ;; This function uses a non-reentrant model
 16109 ;;
 16110                           
 16111                           	psect	text89
 16112  005EAE                     __ptext89:
 16113                           	callstack 0
 16114  005EAE                     _TMR4_DefaultInterruptHandler:
 16115                           	callstack 13
 16116  005EAE  0012               	return		;funcret
 16117  005EB0                     __end_of_TMR4_DefaultInterruptHandler:
 16118                           	callstack 0
 16119                           
 16120 ;; *************** function _Default_ISR *****************
 16121 ;; Defined at:
 16122 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16123 ;; Parameters:    Size  Location     Type
 16124 ;;		None
 16125 ;; Auto vars:     Size  Location     Type
 16126 ;;		None
 16127 ;; Return value:  Size  Location     Type
 16128 ;;                  1    wreg      void 
 16129 ;; Registers used:
 16130 ;;		None
 16131 ;; Tracked objects:
 16132 ;;		On entry : 0/0
 16133 ;;		On exit  : 0/0
 16134 ;;		Unchanged: 0/0
 16135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;Total ram usage:        0 bytes
 16141 ;; Hardware stack levels used: 1
 16142 ;; This function calls:
 16143 ;;		Nothing
 16144 ;; This function is called by:
 16145 ;;		Interrupt level 2
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	text90
 16150  005EB0                     __ptext90:
 16151                           	callstack 0
 16152  005EB0                     _Default_ISR:
 16153                           	callstack 15
 16154  005EB0  0011               	retfie		f
 16155  005EB2                     __end_of_Default_ISR:
 16156                           	callstack 0
 16157                           
 16158 ;; *************** function _CCP3_CaptureISR *****************
 16159 ;; Defined at:
 16160 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16161 ;; Parameters:    Size  Location     Type
 16162 ;;		None
 16163 ;; Auto vars:     Size  Location     Type
 16164 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16165 ;; Return value:  Size  Location     Type
 16166 ;;                  1    wreg      void 
 16167 ;; Registers used:
 16168 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16169 ;; Tracked objects:
 16170 ;;		On entry : 0/0
 16171 ;;		On exit  : 0/0
 16172 ;;		Unchanged: 0/0
 16173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;Total ram usage:        2 bytes
 16179 ;; Hardware stack levels used: 1
 16180 ;; Hardware stack levels required when called: 1
 16181 ;; This function calls:
 16182 ;;		Absolute function
 16183 ;;		_CCP3_DefaultCallBack
 16184 ;; This function is called by:
 16185 ;;		Interrupt level 2
 16186 ;; This function uses a non-reentrant model
 16187 ;;
 16188                           
 16189                           	psect	text91
 16190  005A18                     __ptext91:
 16191                           	callstack 0
 16192  005A18                     _CCP3_CaptureISR:
 16193                           	callstack 14
 16194  005A18                     
 16195                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16196  005A18  0139               	movlb	57	; () banked
 16197  005A1A  93A9               	bcf	169,1,b	;volatile
 16198                           
 16199                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16200  005A1C  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16201                           
 16202                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16203  005A22  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16204  005A28                     
 16205                           ; BSR set to: 57
 16206                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16207  005A28  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16208  005A2C  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16209  005A30  D802               	call	i2u711_48
 16210  005A32  EF25  F02D         	goto	i2u711_49
 16211  005A36                     i2u711_48:
 16212  005A36  0005               	push	
 16213  005A38  6EFA               	movwf	pclath,c
 16214  005A3A  0101               	movlb	1	; () banked
 16215  005A3C  518E               	movf	_CCP3_CallBack& (0+255),w,b
 16216  005A3E  6EFD               	movwf	tosl,c
 16217  005A40  518F               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16218  005A42  6EFE               	movwf	tosh,c
 16219  005A44  6AFF               	clrf	tosu,c
 16220  005A46  50FA               	movf	pclath,w,c
 16221  005A48  0012               	return		;indir
 16222  005A4A                     i2u711_49:
 16223  005A4A  0011               	retfie		f
 16224  005A4C                     __end_of_CCP3_CaptureISR:
 16225                           	callstack 0
 16226                           
 16227 ;; *************** function _CCP3_DefaultCallBack *****************
 16228 ;; Defined at:
 16229 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16230 ;; Parameters:    Size  Location     Type
 16231 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  1    wreg      void 
 16236 ;; Registers used:
 16237 ;;		wreg, status,2, status,0
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16247 ;;Total ram usage:        2 bytes
 16248 ;; Hardware stack levels used: 1
 16249 ;; This function calls:
 16250 ;;		Nothing
 16251 ;; This function is called by:
 16252 ;;		_CCP3_Initialize
 16253 ;;		_CCP3_CaptureISR
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text92
 16258  005B16                     __ptext92:
 16259                           	callstack 0
 16260  005B16                     _CCP3_DefaultCallBack:
 16261                           	callstack 14
 16262  005B16                     
 16263                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16264  005B16  AECD               	btfss	205,7,c	;volatile
 16265  005B18  EF90  F02D         	goto	i2u696_41
 16266  005B1C  EF92  F02D         	goto	i2u696_40
 16267  005B20                     i2u696_41:
 16268  005B20  EF98  F02D         	goto	i2l7114
 16269  005B24                     i2u696_40:
 16270  005B24                     
 16271                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16272  005B24  C001  F0F5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16273  005B28  C002  F0F6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16274                           
 16275                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16276  005B2C  EFA2  F02D         	goto	i2l438
 16277  005B30                     i2l7114:
 16278                           
 16279                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16280  005B30  0100               	movlb	0	; () banked
 16281  005B32  51F5               	movf	_distLeftM& (0+255),w,b
 16282  005B34  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16283  005B36  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 16284  005B38  51F6               	movf	(_distLeftM+1)& (0+255),w,b
 16285  005B3A  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16286  005B3C  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16287  005B3E                     
 16288                           ; BSR set to: 0
 16289                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16290  005B3E  90D8               	bcf	status,0,c
 16291  005B40  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16292  005B42  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 16293  005B44                     i2l438:
 16294  005B44  0012               	return		;funcret
 16295  005B46                     __end_of_CCP3_DefaultCallBack:
 16296                           	callstack 0
 16297                           
 16298 ;; *************** function _CCP4_CaptureISR *****************
 16299 ;; Defined at:
 16300 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16301 ;; Parameters:    Size  Location     Type
 16302 ;;		None
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16318 ;;Total ram usage:        2 bytes
 16319 ;; Hardware stack levels used: 1
 16320 ;; Hardware stack levels required when called: 1
 16321 ;; This function calls:
 16322 ;;		Absolute function
 16323 ;;		_CCP4_DefaultCallBack
 16324 ;; This function is called by:
 16325 ;;		Interrupt level 2
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text93
 16330  005A4C                     __ptext93:
 16331                           	callstack 0
 16332  005A4C                     _CCP4_CaptureISR:
 16333                           	callstack 14
 16334  005A4C                     
 16335                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16336  005A4C  0139               	movlb	57	; () banked
 16337  005A4E  91AA               	bcf	170,0,b	;volatile
 16338                           
 16339                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16340  005A50  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16341                           
 16342                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16343  005A56  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16344  005A5C                     
 16345                           ; BSR set to: 57
 16346                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16347  005A5C  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16348  005A60  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16349  005A64  D802               	call	i2u712_48
 16350  005A66  EF3F  F02D         	goto	i2u712_49
 16351  005A6A                     i2u712_48:
 16352  005A6A  0005               	push	
 16353  005A6C  6EFA               	movwf	pclath,c
 16354  005A6E  0101               	movlb	1	; () banked
 16355  005A70  518C               	movf	_CCP4_CallBack& (0+255),w,b
 16356  005A72  6EFD               	movwf	tosl,c
 16357  005A74  518D               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16358  005A76  6EFE               	movwf	tosh,c
 16359  005A78  6AFF               	clrf	tosu,c
 16360  005A7A  50FA               	movf	pclath,w,c
 16361  005A7C  0012               	return		;indir
 16362  005A7E                     i2u712_49:
 16363  005A7E  0011               	retfie		f
 16364  005A80                     __end_of_CCP4_CaptureISR:
 16365                           	callstack 0
 16366                           
 16367 ;; *************** function _CCP4_DefaultCallBack *****************
 16368 ;; Defined at:
 16369 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16370 ;; Parameters:    Size  Location     Type
 16371 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16372 ;; Auto vars:     Size  Location     Type
 16373 ;;		None
 16374 ;; Return value:  Size  Location     Type
 16375 ;;                  1    wreg      void 
 16376 ;; Registers used:
 16377 ;;		wreg, status,2, status,0
 16378 ;; Tracked objects:
 16379 ;;		On entry : 0/0
 16380 ;;		On exit  : 0/0
 16381 ;;		Unchanged: 0/0
 16382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;Total ram usage:        2 bytes
 16388 ;; Hardware stack levels used: 1
 16389 ;; This function calls:
 16390 ;;		Nothing
 16391 ;; This function is called by:
 16392 ;;		_CCP4_Initialize
 16393 ;;		_CCP4_CaptureISR
 16394 ;; This function uses a non-reentrant model
 16395 ;;
 16396                           
 16397                           	psect	text94
 16398  005B46                     __ptext94:
 16399                           	callstack 0
 16400  005B46                     _CCP4_DefaultCallBack:
 16401                           	callstack 14
 16402  005B46                     
 16403                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16404  005B46  ACCD               	btfss	205,6,c	;volatile
 16405  005B48  EFA8  F02D         	goto	i2u697_41
 16406  005B4C  EFAA  F02D         	goto	i2u697_40
 16407  005B50                     i2u697_41:
 16408  005B50  EFB0  F02D         	goto	i2l7122
 16409  005B54                     i2u697_40:
 16410  005B54                     
 16411                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16412  005B54  C005  F0F1         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16413  005B58  C006  F0F2         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16414                           
 16415                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16416  005B5C  EFBA  F02D         	goto	i2l476
 16417  005B60                     i2l7122:
 16418                           
 16419                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16420  005B60  0100               	movlb	0	; () banked
 16421  005B62  51F1               	movf	_distRightM& (0+255),w,b
 16422  005B64  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16423  005B66  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16424  005B68  51F2               	movf	(_distRightM+1)& (0+255),w,b
 16425  005B6A  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16426  005B6C  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16427  005B6E                     
 16428                           ; BSR set to: 0
 16429                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16430  005B6E  90D8               	bcf	status,0,c
 16431  005B70  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16432  005B72  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16433  005B74                     i2l476:
 16434  005B74  0012               	return		;funcret
 16435  005B76                     __end_of_CCP4_DefaultCallBack:
 16436                           	callstack 0
 16437                           
 16438 ;; *************** function _TMR5_GATE_ISR *****************
 16439 ;; Defined at:
 16440 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16441 ;; Parameters:    Size  Location     Type
 16442 ;;		None
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;		None
 16445 ;; Return value:  Size  Location     Type
 16446 ;;                  1    wreg      void 
 16447 ;; Registers used:
 16448 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16449 ;; Tracked objects:
 16450 ;;		On entry : 0/0
 16451 ;;		On exit  : 0/0
 16452 ;;		Unchanged: 0/0
 16453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16458 ;;Total ram usage:        0 bytes
 16459 ;; Hardware stack levels used: 1
 16460 ;; Hardware stack levels required when called: 3
 16461 ;; This function calls:
 16462 ;;		Absolute function
 16463 ;;		_TMR5_DefaultGateInterruptHandler
 16464 ;; This function is called by:
 16465 ;;		Interrupt level 2
 16466 ;; This function uses a non-reentrant model
 16467 ;;
 16468                           
 16469                           	psect	text95
 16470  005AB4                     __ptext95:
 16471                           	callstack 0
 16472  005AB4                     _TMR5_GATE_ISR:
 16473                           	callstack 12
 16474  005AB4                     
 16475                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16476  005AB4  0139               	movlb	57	; () banked
 16477  005AB6  9FA8               	bcf	168,7,b	;volatile
 16478  005AB8                     
 16479                           ; BSR set to: 57
 16480                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16481  005AB8  0101               	movlb	1	; () banked
 16482  005ABA  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16483  005ABC  1189               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16484  005ABE  B4D8               	btfsc	status,2,c
 16485  005AC0  EF64  F02D         	goto	i2u713_41
 16486  005AC4  EF66  F02D         	goto	i2u713_40
 16487  005AC8                     i2u713_41:
 16488  005AC8  EF72  F02D         	goto	i2l552
 16489  005ACC                     i2u713_40:
 16490  005ACC                     
 16491                           ; BSR set to: 1
 16492                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16493  005ACC  D802               	call	i2u714_48
 16494  005ACE  EF72  F02D         	goto	i2u714_49
 16495  005AD2                     i2u714_48:
 16496  005AD2  0005               	push	
 16497  005AD4  6EFA               	movwf	pclath,c
 16498  005AD6  5188               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16499  005AD8  6EFD               	movwf	tosl,c
 16500  005ADA  5189               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16501  005ADC  6EFE               	movwf	tosh,c
 16502  005ADE  6AFF               	clrf	tosu,c
 16503  005AE0  50FA               	movf	pclath,w,c
 16504  005AE2  0012               	return		;indir
 16505  005AE4                     i2u714_49:
 16506  005AE4                     i2l552:
 16507  005AE4  0011               	retfie		f
 16508  005AE6                     __end_of_TMR5_GATE_ISR:
 16509                           	callstack 0
 16510                           
 16511 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16512 ;; Defined at:
 16513 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;		None
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;		None
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  1    wreg      void 
 16520 ;; Registers used:
 16521 ;;		wreg, status,2, status,0, cstack
 16522 ;; Tracked objects:
 16523 ;;		On entry : 0/0
 16524 ;;		On exit  : 0/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16531 ;;Total ram usage:        0 bytes
 16532 ;; Hardware stack levels used: 1
 16533 ;; Hardware stack levels required when called: 2
 16534 ;; This function calls:
 16535 ;;		_TMR5_ReadTimer
 16536 ;;		_TMR5_Reload
 16537 ;; This function is called by:
 16538 ;;		_TMR5_Initialize
 16539 ;;		_TMR5_GATE_ISR
 16540 ;; This function uses a non-reentrant model
 16541 ;;
 16542                           
 16543                           	psect	text96
 16544  005D68                     __ptext96:
 16545                           	callstack 0
 16546  005D68                     _TMR5_DefaultGateInterruptHandler:
 16547                           	callstack 12
 16548  005D68                     
 16549                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16550  005D68  EC92  F02E         	call	_TMR5_ReadTimer	;wreg free
 16551  005D6C  C009  F0FC         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16552  005D70  C00A  F0FD         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16553  005D74                     
 16554                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16555  005D74  0100               	movlb	0	; () banked
 16556  005D76  90D8               	bcf	status,0,c
 16557  005D78  33FD               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16558  005D7A  33FC               	rrcf	_distFront& (0+255),f,b	;volatile
 16559  005D7C                     
 16560                           ; BSR set to: 0
 16561                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16562  005D7C  EC15  F02F         	call	_TMR5_Reload	;wreg free
 16563  005D80                     
 16564                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16565  005D80  0139               	movlb	57	; () banked
 16566  005D82  9FA8               	bcf	168,7,b	;volatile
 16567  005D84                     
 16568                           ; BSR set to: 57
 16569  005D84  0012               	return		;funcret
 16570  005D86                     __end_of_TMR5_DefaultGateInterruptHandler:
 16571                           	callstack 0
 16572                           
 16573 ;; *************** function _TMR5_Reload *****************
 16574 ;; Defined at:
 16575 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;		None
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;		None
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      void 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, cstack
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16593 ;;Total ram usage:        0 bytes
 16594 ;; Hardware stack levels used: 1
 16595 ;; Hardware stack levels required when called: 1
 16596 ;; This function calls:
 16597 ;;		_TMR5_WriteTimer
 16598 ;; This function is called by:
 16599 ;;		_TMR5_DefaultGateInterruptHandler
 16600 ;; This function uses a non-reentrant model
 16601 ;;
 16602                           
 16603                           	psect	text97
 16604  005E2A                     __ptext97:
 16605                           	callstack 0
 16606  005E2A                     _TMR5_Reload:
 16607                           	callstack 12
 16608  005E2A                     
 16609                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16610  005E2A  C18A  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16611  005E2E  C18B  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16612  005E32  EC42  F02E         	call	_TMR5_WriteTimer	;wreg free
 16613  005E36  0012               	return		;funcret
 16614  005E38                     __end_of_TMR5_Reload:
 16615                           	callstack 0
 16616                           
 16617 ;; *************** function _TMR5_WriteTimer *****************
 16618 ;; Defined at:
 16619 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16620 ;; Parameters:    Size  Location     Type
 16621 ;;  timerVal        2    8[COMRAM] unsigned short 
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;		None
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, status,2
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16637 ;;Total ram usage:        2 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; This function calls:
 16640 ;;		Nothing
 16641 ;; This function is called by:
 16642 ;;		_TMR5_Reload
 16643 ;; This function uses a non-reentrant model
 16644 ;;
 16645                           
 16646                           	psect	text98
 16647  005C84                     __ptext98:
 16648                           	callstack 0
 16649  005C84                     _TMR5_WriteTimer:
 16650                           	callstack 12
 16651  005C84                     
 16652                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16653  005C84  A49A               	btfss	154,2,c	;volatile
 16654  005C86  EF47  F02E         	goto	i2u633_41
 16655  005C8A  EF49  F02E         	goto	i2u633_40
 16656  005C8E                     i2u633_41:
 16657  005C8E  EF52  F02E         	goto	i2l6564
 16658  005C92                     i2u633_40:
 16659  005C92                     
 16660                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16661  005C92  909A               	bcf	154,0,c	;volatile
 16662  005C94                     
 16663                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16664  005C94  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16665  005C96  6E99               	movwf	153,c	;volatile
 16666  005C98                     
 16667                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16668  005C98  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16669  005C9E                     
 16670                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16671  005C9E  809A               	bsf	154,0,c	;volatile
 16672                           
 16673                           ;mcc_generated_files/tmr5.c: 146:     }
 16674  005CA0  EF57  F02E         	goto	i2l534
 16675  005CA4                     i2l6564:
 16676                           
 16677                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16678  005CA4  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16679  005CA6  6E99               	movwf	153,c	;volatile
 16680  005CA8                     
 16681                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16682  005CA8  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16683  005CAE                     i2l534:
 16684  005CAE  0012               	return		;funcret
 16685  005CB0                     __end_of_TMR5_WriteTimer:
 16686                           	callstack 0
 16687                           
 16688 ;; *************** function _TMR5_ReadTimer *****************
 16689 ;; Defined at:
 16690 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16691 ;; Parameters:    Size  Location     Type
 16692 ;;		None
 16693 ;; Auto vars:     Size  Location     Type
 16694 ;;  readVal         2   12[COMRAM] unsigned short 
 16695 ;;  readValLow      1   15[COMRAM] unsigned char 
 16696 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16697 ;; Return value:  Size  Location     Type
 16698 ;;                  2    8[COMRAM] unsigned short 
 16699 ;; Registers used:
 16700 ;;		wreg, status,2
 16701 ;; Tracked objects:
 16702 ;;		On entry : 0/0
 16703 ;;		On exit  : 0/0
 16704 ;;		Unchanged: 0/0
 16705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16706 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16707 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16709 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16710 ;;Total ram usage:        8 bytes
 16711 ;; Hardware stack levels used: 1
 16712 ;; This function calls:
 16713 ;;		Nothing
 16714 ;; This function is called by:
 16715 ;;		_TMR5_DefaultGateInterruptHandler
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           	psect	text99
 16720  005D24                     __ptext99:
 16721                           	callstack 0
 16722  005D24                     _TMR5_ReadTimer:
 16723                           	callstack 13
 16724  005D24                     
 16725                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16726  005D24  829A               	bsf	154,1,c	;volatile
 16727                           
 16728                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16729  005D26  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16730                           
 16731                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16732  005D2C  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16733  005D32                     
 16734                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16735  005D32  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16736  005D34  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16737  005D36  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16738  005D38  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16739  005D3A  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16740  005D3E                     
 16741                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16742  005D3E  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16743  005D42  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16744  005D46  0012               	return		;funcret
 16745  005D48                     __end_of_TMR5_ReadTimer:
 16746                           	callstack 0
 16747                           
 16748 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16749 ;; Defined at:
 16750 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;		None
 16753 ;; Auto vars:     Size  Location     Type
 16754 ;;		None
 16755 ;; Return value:  Size  Location     Type
 16756 ;;                  1    wreg      void 
 16757 ;; Registers used:
 16758 ;;		wreg, status,2, status,0
 16759 ;; Tracked objects:
 16760 ;;		On entry : 0/0
 16761 ;;		On exit  : 0/0
 16762 ;;		Unchanged: 0/0
 16763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16768 ;;Total ram usage:        0 bytes
 16769 ;; Hardware stack levels used: 1
 16770 ;; This function calls:
 16771 ;;		Nothing
 16772 ;; This function is called by:
 16773 ;;		Interrupt level 2
 16774 ;; This function uses a non-reentrant model
 16775 ;;
 16776                           
 16777                           	psect	text100
 16778  00565C                     __ptext100:
 16779                           	callstack 0
 16780  00565C                     _SMT1_PR_ACQ_ISR:
 16781                           	callstack 15
 16782  00565C                     
 16783                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16784  00565C  0139               	movlb	57	; () banked
 16785  00565E  9DA1               	bcf	161,6,b	;volatile
 16786  005660                     
 16787                           ; BSR set to: 57
 16788                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16789  005660  013F               	movlb	63	; () banked
 16790  005662  5115               	movf	21,w,b	;volatile
 16791  005664  6E48               	movwf	_smtPeriod^0,c	;volatile
 16792  005666  5116               	movf	22,w,b	;volatile
 16793  005668  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16794  00566A  5117               	movf	23,w,b	;volatile
 16795  00566C  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16796  00566E  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16797  005670                     
 16798                           ; BSR set to: 63
 16799                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16800  005670  013C               	movlb	60	; () banked
 16801  005672  AB60               	btfss	96,5,b	;volatile
 16802  005674  EF3E  F02B         	goto	i2u716_41
 16803  005678  EF40  F02B         	goto	i2u716_40
 16804  00567C                     i2u716_41:
 16805  00567C  EF49  F02B         	goto	i2l7242
 16806  005680                     i2u716_40:
 16807  005680                     
 16808                           ; BSR set to: 60
 16809  005680  0E01               	movlw	1
 16810  005682  0101               	movlb	1	; () banked
 16811  005684  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16812  005686  0E00               	movlw	0
 16813  005688  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16814  00568A  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16815  00568C  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16816  00568E  EF52  F02B         	goto	i2l856
 16817  005692                     i2l7242:
 16818                           
 16819                           ; BSR set to: 60
 16820  005692  0EFF               	movlw	255
 16821  005694  0101               	movlb	1	; () banked
 16822  005696  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16823  005698  0EFF               	movlw	255
 16824  00569A  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16825  00569C  0EFF               	movlw	255
 16826  00569E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16827  0056A0  0EFF               	movlw	255
 16828  0056A2  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16829  0056A4                     i2l856:
 16830                           
 16831                           ; BSR set to: 1
 16832  0056A4  0011               	retfie		f
 16833  0056A6                     __end_of_SMT1_PR_ACQ_ISR:
 16834                           	callstack 0
 16835                           
 16836 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16837 ;; Defined at:
 16838 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16839 ;; Parameters:    Size  Location     Type
 16840 ;;		None
 16841 ;; Auto vars:     Size  Location     Type
 16842 ;;		None
 16843 ;; Return value:  Size  Location     Type
 16844 ;;                  1    wreg      void 
 16845 ;; Registers used:
 16846 ;;		wreg, status,2, status,0
 16847 ;; Tracked objects:
 16848 ;;		On entry : 0/0
 16849 ;;		On exit  : 0/0
 16850 ;;		Unchanged: 0/0
 16851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16856 ;;Total ram usage:        0 bytes
 16857 ;; Hardware stack levels used: 1
 16858 ;; This function calls:
 16859 ;;		Nothing
 16860 ;; This function is called by:
 16861 ;;		Interrupt level 2
 16862 ;; This function uses a non-reentrant model
 16863 ;;
 16864                           
 16865                           	psect	text101
 16866  005528                     __ptext101:
 16867                           	callstack 0
 16868  005528                     _SMT1_PW_ACQ_ISR:
 16869                           	callstack 15
 16870  005528                     
 16871                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16872  005528  0139               	movlb	57	; () banked
 16873  00552A  9FA1               	bcf	161,7,b	;volatile
 16874  00552C                     
 16875                           ; BSR set to: 57
 16876                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16877  00552C  013F               	movlb	63	; () banked
 16878  00552E  5118               	movf	24,w,b	;volatile
 16879  005530  0101               	movlb	1	; () banked
 16880  005532  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16881  005534  013F               	movlb	63	; () banked
 16882  005536  5119               	movf	25,w,b	;volatile
 16883  005538  0101               	movlb	1	; () banked
 16884  00553A  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16885  00553C  013F               	movlb	63	; () banked
 16886  00553E  511A               	movf	26,w,b	;volatile
 16887  005540  0101               	movlb	1	; () banked
 16888  005542  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16889  005544  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16890  005546                     
 16891                           ; BSR set to: 1
 16892                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16893  005546  013C               	movlb	60	; () banked
 16894  005548  AB60               	btfss	96,5,b	;volatile
 16895  00554A  EFA9  F02A         	goto	i2u717_41
 16896  00554E  EFAB  F02A         	goto	i2u717_40
 16897  005552                     i2u717_41:
 16898  005552  EFB4  F02A         	goto	i2l7252
 16899  005556                     i2u717_40:
 16900  005556                     
 16901                           ; BSR set to: 60
 16902  005556  0E01               	movlw	1
 16903  005558  0101               	movlb	1	; () banked
 16904  00555A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16905  00555C  0E00               	movlw	0
 16906  00555E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16907  005560  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16908  005562  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16909  005564  EFBD  F02A         	goto	i2l863
 16910  005568                     i2l7252:
 16911                           
 16912                           ; BSR set to: 60
 16913  005568  0EFF               	movlw	255
 16914  00556A  0101               	movlb	1	; () banked
 16915  00556C  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16916  00556E  0EFF               	movlw	255
 16917  005570  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16918  005572  0EFF               	movlw	255
 16919  005574  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16920  005576  0EFF               	movlw	255
 16921  005578  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16922  00557A                     i2l863:
 16923                           
 16924                           ; BSR set to: 1
 16925  00557A  0011               	retfie		f
 16926  00557C                     __end_of_SMT1_PW_ACQ_ISR:
 16927                           	callstack 0
 16928                           
 16929 ;; *************** function _SMT1_Overflow_ISR *****************
 16930 ;; Defined at:
 16931 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;		None
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;                  1    wreg      void 
 16938 ;; Registers used:
 16939 ;;		wreg, status,2
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/0
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used: 1
 16951 ;; This function calls:
 16952 ;;		Nothing
 16953 ;; This function is called by:
 16954 ;;		Interrupt level 2
 16955 ;; This function uses a non-reentrant model
 16956 ;;
 16957                           
 16958                           	psect	text102
 16959  005CD8                     __ptext102:
 16960                           	callstack 0
 16961  005CD8                     _SMT1_Overflow_ISR:
 16962                           	callstack 15
 16963  005CD8                     
 16964                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16965  005CD8  0139               	movlb	57	; () banked
 16966  005CDA  9BA1               	bcf	161,5,b	;volatile
 16967  005CDC                     
 16968                           ; BSR set to: 57
 16969                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16970  005CDC  0E00               	movlw	0
 16971  005CDE  6E48               	movwf	_smtPeriod^0,c	;volatile
 16972  005CE0  0E00               	movlw	0
 16973  005CE2  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16974  005CE4  0E00               	movlw	0
 16975  005CE6  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16976  005CE8  0E00               	movlw	0
 16977  005CEA  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 16978                           
 16979                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16980  005CEC  0E00               	movlw	0
 16981  005CEE  0101               	movlb	1	; () banked
 16982  005CF0  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16983  005CF2  0E00               	movlw	0
 16984  005CF4  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16985  005CF6  0E00               	movlw	0
 16986  005CF8  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16987  005CFA  0E00               	movlw	0
 16988  005CFC  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16989  005CFE                     
 16990                           ; BSR set to: 1
 16991  005CFE  0011               	retfie		f
 16992  005D00                     __end_of_SMT1_Overflow_ISR:
 16993                           	callstack 0
 16994                           
 16995                           ;
 16996                           ; Interrupt Vector Table @ 0x8
 16997                           ;
 16998                           
 16999                           	psect	ivt0x8
 17000  000008                     __pivt0x8:
 17001                           	callstack 0
 17002  000008                     ivt0x8_base:
 17003                           	callstack 0
 17004                           
 17005                           ; Vector 0 : SWINT
 17006  000008  17AC               	dw	_Default_ISR shr (0+2)
 17007                           
 17008                           ; Vector 1 : HLVD
 17009  00000A  17AC               	dw	_Default_ISR shr (0+2)
 17010                           
 17011                           ; Vector 2 : OSF
 17012  00000C  17AC               	dw	_Default_ISR shr (0+2)
 17013                           
 17014                           ; Vector 3 : CSW
 17015  00000E  17AC               	dw	_Default_ISR shr (0+2)
 17016                           
 17017                           ; Vector 4 : NVM
 17018  000010  17AC               	dw	_Default_ISR shr (0+2)
 17019                           
 17020                           ; Vector 5 : SCAN
 17021  000012  17AC               	dw	_Default_ISR shr (0+2)
 17022                           
 17023                           ; Vector 6 : CRC
 17024  000014  17AC               	dw	_Default_ISR shr (0+2)
 17025                           
 17026                           ; Vector 7 : IOC
 17027  000016  17AC               	dw	_Default_ISR shr (0+2)
 17028                           
 17029                           ; Vector 8 : INT0
 17030  000018  17AC               	dw	_Default_ISR shr (0+2)
 17031                           
 17032                           ; Vector 9 : ZCD
 17033  00001A  17AC               	dw	_Default_ISR shr (0+2)
 17034                           
 17035                           ; Vector 10 : AD
 17036  00001C  17AC               	dw	_Default_ISR shr (0+2)
 17037                           
 17038                           ; Vector 11 : ADT
 17039  00001E  17AC               	dw	_Default_ISR shr (0+2)
 17040                           
 17041                           ; Vector 12 : CMP1
 17042  000020  17AC               	dw	_Default_ISR shr (0+2)
 17043                           
 17044                           ; Vector 13 : SMT1
 17045  000022  1736               	dw	_SMT1_Overflow_ISR shr (0+2)
 17046                           
 17047                           ; Vector 14 : SMT1PRA
 17048  000024  1597               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17049                           
 17050                           ; Vector 15 : SMT1PRW
 17051  000026  154A               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17052                           
 17053                           ; Vector 16 : DMA1SCNT
 17054  000028  17AC               	dw	_Default_ISR shr (0+2)
 17055                           
 17056                           ; Vector 17 : DMA1DCNT
 17057  00002A  17AC               	dw	_Default_ISR shr (0+2)
 17058                           
 17059                           ; Vector 18 : DMA1OR
 17060  00002C  17AC               	dw	_Default_ISR shr (0+2)
 17061                           
 17062                           ; Vector 19 : DMA1A
 17063  00002E  17AC               	dw	_Default_ISR shr (0+2)
 17064                           
 17065                           ; Vector 20 : SPI1RX
 17066  000030  17AC               	dw	_Default_ISR shr (0+2)
 17067                           
 17068                           ; Vector 21 : SPI1TX
 17069  000032  17AC               	dw	_Default_ISR shr (0+2)
 17070                           
 17071                           ; Vector 22 : SPI1
 17072  000034  17AC               	dw	_Default_ISR shr (0+2)
 17073                           
 17074                           ; Vector 23 : I2C1RX
 17075  000036  17AC               	dw	_Default_ISR shr (0+2)
 17076                           
 17077                           ; Vector 24 : I2C1TX
 17078  000038  17AC               	dw	_Default_ISR shr (0+2)
 17079                           
 17080                           ; Vector 25 : I2C1
 17081  00003A  17AC               	dw	_Default_ISR shr (0+2)
 17082                           
 17083                           ; Vector 26 : I2C1E
 17084  00003C  17AC               	dw	_Default_ISR shr (0+2)
 17085                           
 17086                           ; Vector 27 : U1RX
 17087  00003E  160B               	dw	_UART1_rx_vect_isr shr (0+2)
 17088                           
 17089                           ; Vector 28 : U1TX
 17090  000040  15FC               	dw	_UART1_tx_vect_isr shr (0+2)
 17091                           
 17092                           ; Vector 29 : U1E
 17093  000042  17AC               	dw	_Default_ISR shr (0+2)
 17094                           
 17095                           ; Vector 30 : U1
 17096  000044  17AC               	dw	_Default_ISR shr (0+2)
 17097                           
 17098                           ; Vector 31 : TMR0
 17099  000046  17AC               	dw	_Default_ISR shr (0+2)
 17100                           
 17101                           ; Vector 32 : TMR1
 17102  000048  17AC               	dw	_Default_ISR shr (0+2)
 17103                           
 17104                           ; Vector 33 : TMR1G
 17105  00004A  17AC               	dw	_Default_ISR shr (0+2)
 17106                           
 17107                           ; Vector 34 : TMR2
 17108  00004C  17AC               	dw	_Default_ISR shr (0+2)
 17109                           
 17110                           ; Vector 35 : CCP1
 17111  00004E  17AC               	dw	_Default_ISR shr (0+2)
 17112                           
 17113                           ; Vector 36 : Undefined
 17114  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17115                           
 17116                           ; Vector 37 : NCO1
 17117  000052  17AC               	dw	_Default_ISR shr (0+2)
 17118                           
 17119                           ; Vector 38 : CWG1
 17120  000054  17AC               	dw	_Default_ISR shr (0+2)
 17121                           
 17122                           ; Vector 39 : CLC1
 17123  000056  17AC               	dw	_Default_ISR shr (0+2)
 17124                           
 17125                           ; Vector 40 : INT1
 17126  000058  17AC               	dw	_Default_ISR shr (0+2)
 17127                           
 17128                           ; Vector 41 : CMP2
 17129  00005A  17AC               	dw	_Default_ISR shr (0+2)
 17130                           
 17131                           ; Vector 42 : DMA2SCNT
 17132  00005C  17AC               	dw	_Default_ISR shr (0+2)
 17133                           
 17134                           ; Vector 43 : DMA2DCNT
 17135  00005E  17AC               	dw	_Default_ISR shr (0+2)
 17136                           
 17137                           ; Vector 44 : DMA2OR
 17138  000060  17AC               	dw	_Default_ISR shr (0+2)
 17139                           
 17140                           ; Vector 45 : DMA2A
 17141  000062  17AC               	dw	_Default_ISR shr (0+2)
 17142                           
 17143                           ; Vector 46 : I2C2RX
 17144  000064  17AC               	dw	_Default_ISR shr (0+2)
 17145                           
 17146                           ; Vector 47 : I2C2TX
 17147  000066  17AC               	dw	_Default_ISR shr (0+2)
 17148                           
 17149                           ; Vector 48 : I2C2
 17150  000068  17AC               	dw	_Default_ISR shr (0+2)
 17151                           
 17152                           ; Vector 49 : I2C2E
 17153  00006A  17AC               	dw	_Default_ISR shr (0+2)
 17154                           
 17155                           ; Vector 50 : U2RX
 17156  00006C  17AC               	dw	_Default_ISR shr (0+2)
 17157                           
 17158                           ; Vector 51 : U2TX
 17159  00006E  17AC               	dw	_Default_ISR shr (0+2)
 17160                           
 17161                           ; Vector 52 : U2E
 17162  000070  17AC               	dw	_Default_ISR shr (0+2)
 17163                           
 17164                           ; Vector 53 : U2
 17165  000072  17AC               	dw	_Default_ISR shr (0+2)
 17166                           
 17167                           ; Vector 54 : TMR3
 17168  000074  17AC               	dw	_Default_ISR shr (0+2)
 17169                           
 17170                           ; Vector 55 : TMR3G
 17171  000076  17AC               	dw	_Default_ISR shr (0+2)
 17172                           
 17173                           ; Vector 56 : TMR4
 17174  000078  1644               	dw	_TMR4_ISR shr (0+2)
 17175                           
 17176                           ; Vector 57 : CCP2
 17177  00007A  17AC               	dw	_Default_ISR shr (0+2)
 17178                           
 17179                           ; Vector 58 : Undefined
 17180  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17181                           
 17182                           ; Vector 59 : CWG2
 17183  00007E  17AC               	dw	_Default_ISR shr (0+2)
 17184                           
 17185                           ; Vector 60 : CLC2
 17186  000080  17AC               	dw	_Default_ISR shr (0+2)
 17187                           
 17188                           ; Vector 61 : INT2
 17189  000082  17AC               	dw	_Default_ISR shr (0+2)
 17190                           
 17191                           ; Vector 62 : Undefined
 17192  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17193                           
 17194                           ; Vector 63 : Undefined
 17195  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17196                           
 17197                           ; Vector 64 : Undefined
 17198  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17199                           
 17200                           ; Vector 65 : Undefined
 17201  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17202                           
 17203                           ; Vector 66 : Undefined
 17204  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17205                           
 17206                           ; Vector 67 : Undefined
 17207  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17208                           
 17209                           ; Vector 68 : Undefined
 17210  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17211                           
 17212                           ; Vector 69 : Undefined
 17213  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17214                           
 17215                           ; Vector 70 : TMR5
 17216  000094  17AC               	dw	_Default_ISR shr (0+2)
 17217                           
 17218                           ; Vector 71 : TMR5G
 17219  000096  16AD               	dw	_TMR5_GATE_ISR shr (0+2)
 17220                           
 17221                           ; Vector 72 : TMR6
 17222  000098  17AC               	dw	_Default_ISR shr (0+2)
 17223                           
 17224                           ; Vector 73 : CCP3
 17225  00009A  1686               	dw	_CCP3_CaptureISR shr (0+2)
 17226                           
 17227                           ; Vector 74 : CWG3
 17228  00009C  17AC               	dw	_Default_ISR shr (0+2)
 17229                           
 17230                           ; Vector 75 : CLC3
 17231  00009E  17AC               	dw	_Default_ISR shr (0+2)
 17232                           
 17233                           ; Vector 76 : Undefined
 17234  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17235                           
 17236                           ; Vector 77 : Undefined
 17237  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17238                           
 17239                           ; Vector 78 : Undefined
 17240  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17241                           
 17242                           ; Vector 79 : Undefined
 17243  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17244                           
 17245                           ; Vector 80 : CCP4
 17246  0000A8  1693               	dw	_CCP4_CaptureISR shr (0+2)
 17247                           
 17248                           ; Vector 81 : CLC4
 17249  0000AA  17AC               	dw	_Default_ISR shr (0+2)
 17250  0000AC                     ivt0x8_undefint:
 17251                           	callstack 0
 17252  0000AC  00FF               	reset	
 17253                           
 17254                           	psect	text103
 17255  000000                     __ptext103:
 17256                           	callstack 0
 17257  000000                     
 17258                           	psect	rparam
 17259  0000                     
 17260                           	psect	idloc
 17261                           
 17262                           ;Config register IDLOC0 @ 0x200000
 17263                           ;	unspecified, using default values
 17264  200000                     	org	2097152
 17265  200000  0FFF               	dw	4095
 17266                           
 17267                           ;Config register IDLOC1 @ 0x200002
 17268                           ;	unspecified, using default values
 17269  200002                     	org	2097154
 17270  200002  0FFF               	dw	4095
 17271                           
 17272                           ;Config register IDLOC2 @ 0x200004
 17273                           ;	unspecified, using default values
 17274  200004                     	org	2097156
 17275  200004  0FFF               	dw	4095
 17276                           
 17277                           ;Config register IDLOC3 @ 0x200006
 17278                           ;	unspecified, using default values
 17279  200006                     	org	2097158
 17280  200006  0FFF               	dw	4095
 17281                           
 17282                           ;Config register IDLOC4 @ 0x200008
 17283                           ;	unspecified, using default values
 17284  200008                     	org	2097160
 17285  200008  0FFF               	dw	4095
 17286                           
 17287                           ;Config register IDLOC5 @ 0x20000A
 17288                           ;	unspecified, using default values
 17289  20000A                     	org	2097162
 17290  20000A  0FFF               	dw	4095
 17291                           
 17292                           ;Config register IDLOC6 @ 0x20000C
 17293                           ;	unspecified, using default values
 17294  20000C                     	org	2097164
 17295  20000C  0FFF               	dw	4095
 17296                           
 17297                           ;Config register IDLOC7 @ 0x20000E
 17298                           ;	unspecified, using default values
 17299  20000E                     	org	2097166
 17300  20000E  0FFF               	dw	4095
 17301                           
 17302                           	psect	config
 17303                           
 17304                           ;Config register CONFIG1L @ 0x300000
 17305                           ;	External Oscillator Selection
 17306                           ;	FEXTOSC = OFF, Oscillator not enabled
 17307                           ;	Reset Oscillator Selection
 17308                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17309  300000                     	org	3145728
 17310  300000  8C                 	db	140
 17311                           
 17312                           ;Config register CONFIG1H @ 0x300001
 17313                           ;	Clock out Enable bit
 17314                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17315                           ;	PRLOCKED One-Way Set Enable bit
 17316                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17317                           ;	Clock Switch Enable bit
 17318                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17319                           ;	Fail-Safe Clock Monitor Enable bit
 17320                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17321  300001                     	org	3145729
 17322  300001  FF                 	db	255
 17323                           
 17324                           ;Config register CONFIG2L @ 0x300002
 17325                           ;	MCLR Enable bit
 17326                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17327                           ;	Power-up timer selection bits
 17328                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17329                           ;	Multi-vector enable bit
 17330                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17331                           ;	IVTLOCK bit One-way set enable bit
 17332                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17333                           ;	Low Power BOR Enable bit
 17334                           ;	LPBOREN = OFF, ULPBOR disabled
 17335                           ;	Brown-out Reset Enable bits
 17336                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17337  300002                     	org	3145730
 17338  300002  FF                 	db	255
 17339                           
 17340                           ;Config register CONFIG2H @ 0x300003
 17341                           ;	Brown-out Reset Voltage Selection bits
 17342                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17343                           ;	ZCD Disable bit
 17344                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17345                           ;	PPSLOCK bit One-Way Set Enable bit
 17346                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17347                           ;	Stack Full/Underflow Reset Enable bit
 17348                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17349                           ;	Debugger Enable bit
 17350                           ;	DEBUG = OFF, Background debugger disabled
 17351                           ;	Extended Instruction Set Enable bit
 17352                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17353  300003                     	org	3145731
 17354  300003  FF                 	db	255
 17355                           
 17356                           ;Config register CONFIG3L @ 0x300004
 17357                           ;	WDT Period selection bits
 17358                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17359                           ;	WDT operating mode
 17360                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17361  300004                     	org	3145732
 17362  300004  9F                 	db	159
 17363                           
 17364                           ;Config register CONFIG3H @ 0x300005
 17365                           ;	WDT Window Select bits
 17366                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17367                           ;	WDT input clock selector
 17368                           ;	WDTCCS = SC, Software Control
 17369  300005                     	org	3145733
 17370  300005  FF                 	db	255
 17371                           
 17372                           ;Config register CONFIG4L @ 0x300006
 17373                           ;	Boot Block Size selection bits
 17374                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17375                           ;	Boot Block enable bit
 17376                           ;	BBEN = OFF, Boot block disabled
 17377                           ;	Storage Area Flash enable bit
 17378                           ;	SAFEN = OFF, SAF disabled
 17379                           ;	Application Block write protection bit
 17380                           ;	WRTAPP = OFF, Application Block not write protected
 17381  300006                     	org	3145734
 17382  300006  FF                 	db	255
 17383                           
 17384                           ;Config register CONFIG4H @ 0x300007
 17385                           ;	Configuration Register Write Protection bit
 17386                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17387                           ;	Boot Block Write Protection bit
 17388                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17389                           ;	Data EEPROM Write Protection bit
 17390                           ;	WRTD = OFF, Data EEPROM not write-protected
 17391                           ;	SAF Write protection bit
 17392                           ;	WRTSAF = OFF, SAF not Write Protected
 17393                           ;	Low Voltage Programming Enable bit
 17394                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17395  300007                     	org	3145735
 17396  300007  FF                 	db	255
 17397                           
 17398                           ;Config register CONFIG5L @ 0x300008
 17399                           ;	PFM and Data EEPROM Code Protection bit
 17400                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17401  300008                     	org	3145736
 17402  300008  FF                 	db	255
 17403                           
 17404                           ;Config register CONFIG5H @ 0x300009
 17405                           ;	unspecified, using default values
 17406  300009                     	org	3145737
 17407  300009  FF                 	db	255
 17408                           tosu	equ	0x3FFF
 17409                           tosh	equ	0x3FFE
 17410                           tosl	equ	0x3FFD
 17411                           stkptr	equ	0x3FFC
 17412                           pclatu	equ	0x3FFB
 17413                           pclath	equ	0x3FFA
 17414                           pcl	equ	0x3FF9
 17415                           tblptru	equ	0x3FF8
 17416                           tblptrh	equ	0x3FF7
 17417                           tblptrl	equ	0x3FF6
 17418                           tablat	equ	0x3FF5
 17419                           prodh	equ	0x3FF4
 17420                           prodl	equ	0x3FF3
 17421                           indf0	equ	0x3FEF
 17422                           postinc0	equ	0x3FEE
 17423                           postdec0	equ	0x3FED
 17424                           preinc0	equ	0x3FEC
 17425                           plusw0	equ	0x3FEB
 17426                           fsr0h	equ	0x3FEA
 17427                           fsr0l	equ	0x3FE9
 17428                           wreg	equ	0x3FE8
 17429                           indf1	equ	0x3FE7
 17430                           postinc1	equ	0x3FE6
 17431                           postdec1	equ	0x3FE5
 17432                           preinc1	equ	0x3FE4
 17433                           plusw1	equ	0x3FE3
 17434                           fsr1h	equ	0x3FE2
 17435                           fsr1l	equ	0x3FE1
 17436                           bsr	equ	0x3FE0
 17437                           indf2	equ	0x3FDF
 17438                           postinc2	equ	0x3FDE
 17439                           postdec2	equ	0x3FDD
 17440                           preinc2	equ	0x3FDC
 17441                           plusw2	equ	0x3FDB
 17442                           fsr2h	equ	0x3FDA
 17443                           fsr2l	equ	0x3FD9
 17444                           status	equ	0x3FD8

Data Sizes:
    Strings     113
    Constant    0
    Data        3
    BSS         175
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3433_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[16]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _startAccell->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _calcSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    ___flsub->___fladd
    _checkBatt->___flge
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _startAccell->_printf
    _getCurve->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  207813
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  206666
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   70309
                                             14 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0   11959
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45105
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44944
                                              6 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   44215
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43709
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32330
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             44 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2723
                                             19 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    6892
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    4328
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1526
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9960
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    9389
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4313
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1165
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
     _getReverse
     _printf
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B0       7       68.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      32        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 15:11:42 2024

                             _CCP4_Initialize 5B76                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 002C                                  ___fldiv@bexp 002B  
                                 _startAccell 3FAE                                  ___fldiv@sign 0024  
                                          l72 5E18                                            l75 5D22  
                                          l69 5610                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 54CA                                           l404 55C6  
                                         l308 5482                                           l309 549C  
                                         l318 5E40                                           l520 565A  
                                         l441 5BD0                                           l362 5E5E  
                                         l371 5E4A                                           l188 4CCE  
                                         l284 5112                                           l365 5E72  
                                         l359 5E68                                           l368 5E54  
                                         l712 5A16                                           l449 5E9A  
                                         l482 5BA2                                           l723 5DB8  
                                         l555 5E7C                                           l644 5C2A  
                                         l740 59AE                                           l709 5DD0  
                                         l581 590C                                           l726 59E2  
                                         l479 5E90                                           l751 5DE8  
                                         l737 5E00                                           l754 597A  
                                         l923 5DA0                                           l695 5E86  
                                         l795 5B14                                           l893 5C56  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 5776  
                                         _pad 4D94                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5D86  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5E88  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 5732                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 5A80                                  ___fltol@exp1 0082  
                                        l1042 5526                                          ?_abs 0026  
                                        l2012 27CC                                          l2021 2A5E  
                                        l2022 2A4C                                          l1054 5A90  
                                        l1311 4818                                          l2016 2B54  
                                        l2120 4E54                                          l1312 482A  
                                        l1240 4510                                          l1224 43F8  
                                        l1057 5AB0                                          l2210 18D0  
                                        l2019 29E6                                          l2115 4DD8  
                                        l2060 3BBC                                          l1252 5E28  
                                        l1324 358A                                          l2029 2B16  
                                        l2053 3B24                                          l2118 4E1A  
                                        l2126 2F90                                          l1319 34F8  
                                        l4000 55A8                                          l2056 3C80  
                                        l1360 3ACC                                          l1512 3FAC  
                                        l2312 51A8                                          l2320 5730  
                                        l2128 2F98                                          l1249 523C  
                                        l1257 52CE                                          l4010 55BC  
                                        l4002 55B2                                          l2146 31D4  
                                        l2067 3C18                                          l1339 36AC  
                             _timer3ReloadVal 0186                                          l4012 55BE  
                                        l4004 55B6                                          l4020 5D00  
                                        l2332 57EE                                          l2164 1D20  
                                        l2076 5CD6                                          l1525 428E  
                                        l1277 346C                                          l1269 412A  
                                        l4014 55C0                                          l4006 55B8  
                                        l4030 4C7E                                          l4022 4C06  
                                        l1382 3C8E                                          l2326 53A8  
                                        l2182 1492                                          l2262 5336  
                                        l2351 546E                                          l2263 533E  
                                        l4104 5C2C                                          l4016 55C2  
                                        l4008 55BA                                          l4040 4C8C  
                                        l4032 4C80                                          l4024 4C26  
                                        l1384 3CB2                                          l2336 4B22  
                                        l2256 213C                                          l2248 2242  
                                        l1369 43DA                                          l1385 3CC6  
                                        l2281 57B4                                          l2273 4A2E  
                                        l1297 347C                                          l4018 55C4  
                                        l4042 4C8E                                          l4034 4C82  
                                        l4026 4C28                                          l4114 5DEA  
                                        l4130 5DBA                                          l1378 4C04  
                                        l1386 3CEE                                          l1642 4FC4  
                                        l2290 3806                                          l2346 5466  
                                        l1395 3E24                                          l4044 4C90  
                                        l4036 4C84                                          l4028 4C30  
                                        l1629 4D92                                          l1477 461C  
                                        l4046 5E02                                          l4038 4C8A  
                                        l4070 5AE6                                          l2278 57AC  
                                        l1663 48EA                                          l2287 38C2  
                                        l4080 5B0E                                          l4072 5B04  
                                        l1672 58D4                                          l1657 506E  
                                        l2297 589C                                          l4058 54CC  
                                        l4082 5B10                                          l4074 5B06  
                                        l4090 5D98                                          l4092 5DD2  
                                        l4084 5DA2                                          l4076 5B08  
                                        l1668 4930                                          l4078 5B0C  
                                        l4086 5D86                                          l1926 2434  
                                        l1695 4724                                          l1943 254E  
                                        l1935 2704                                          l1927 2422  
                                        l4088 5D92                                          l1952 261E  
                                        l1928 23E8                                          l1953 260C  
                                        l1980 2EEE                                          l1982 2D4E  
                                        ?_pad 0026                                          l1991 2D94  
                                        l7040 55E4                                          l8000 4CD4  
                                        l1968 56EC                                          l1993 2E0C  
                                        l1985 2D12                                          l7050 55FC  
                                        l7042 55E8                                          l7034 55C8  
                                        l8010 4D04                                          l8002 4CE2  
                                        l1994 2DFA                                          l7052 5604  
                                        l7044 55EC                                          l7036 55D8  
                                        l8020 4D32                                          l8012 4D08  
                                        l8004 4CEA                                          l8100 489A  
                                        l7054 5608                                          l7046 55F0  
                                        l7038 55DC                                          l8030 4D66  
                                        l8022 4D40                                          l8014 4D10  
                                        l8006 4CEE                                          l6430 4512  
                                        l8110 4928                                          l8102 48AA  
                                        l7048 55F8                                          l8032 4D6C  
                                        l8024 4D46                                          l8016 4D22  
                                        l8008 4CFC                                          l6440 4546  
                                        l6432 4516                                          l8112 492E  
                                        l8104 48B8                                          l7400 54C6  
                                        l8120 58C4                                          l8200 49B8  
                                        l9000 330E                                          l6530 5E42  
                                        l8026 4D5C                                          l8018 4D2A  
                                        l8034 4D72                                          l8130 464A  
                                        l6450 4588                                          l6442 4556  
                                        l6434 4524                                          l8106 48CA  
                                        l7402 54C8                                          l7410 5138  
                                        l8050 4F34                                          l8042 4F16  
                                        l8202 49C4                                          l9010 3376  
                                        l9002 3324                                          l6700 58EE  
                                        l6532 5E60                                          l8036 4D82  
                                        l8028 4D64                                          l8140 4698  
                                        l8132 4674                                          l8124 461E  
                                        l6460 45DA                                          l6452 4594  
                                        l6444 455A                                          l6436 4534  
                                        l7500 238A                                          l7420 2244  
                                        l8108 48D8                                          l6380 5A88  
                                        l7404 5E3A                                          l7412 5142  
                                        l8300 3140                                          l8060 4F6C  
                                        l8052 4F42                                          l8044 4F1A  
                                        l8116 589E                                          l8212 4A26  
                                        l8220 5410                                          l9020 33BC  
                                        l9012 3388                                          l9004 3336  
                                        l6550 5E88                                          l3990 557C  
                                        l6702 5908                                          l6710 5644  
                                        l6534 5E56                                          l8038 4D8A  
                                        l8150 46C4                                          l8134 4676  
                                        l8126 4636                                          l6470 460C  
                                        l6462 45DC                                          l6454 45A2  
                                        l6446 456A                                          l6438 4538  
                                        l9110 42BE                                          l9102 4290  
                                        l7510 2402                                          l7502 23B4  
                                        l7430 2282                                          l7422 2252  
                                        l6382 5A8C                                          l7414 5160  
                                        l7406 5114                                          l8310 3186  
                                        l8302 314E                                          l8062 4F7A  
                                        l8070 4FA4                                          l8054 4F4A  
                                        l8046 4F28                                          l8118 58B4  
                                        l8206 49D0                                          l8230 36AE  
                                        l9030 33FE                                          l9022 33C2  
                                        l9014 3396                                          l9006 334C  
                                        l3992 557E                                          l6552 5E74  
                                        l6712 5648                                          l6704 5612  
                                        l6536 5E6A                                          l6528 5E4C  
                                        l6720 5074                                          l8160 46F4  
                                        l8136 4686                                          l6464 45E6  
                                        l6456 45AC                                          l6448 4580  
                                        l9120 436E                                          l9112 433A  
                                        l9104 429C                                          l7600 2694  
                                        l7520 2442                                          l7512 2406  
                                        l7504 23D0                                          l7440 22B2  
                                        l7432 2292                                          l7424 2260  
                                        l6384 5A8E                                          l7416 5196  
                                        l7408 5126                                          l8312 3192  
                                        l8304 3160                                          l8072 4FB4  
                                        l8064 4F90                                          l8056 4F5C  
                                        l8048 4F30                                          l8080 4FF4  
                                        l8208 49E2                                          l8232 36CE  
                                        l8216 5340                                          l8224 5446  
                                        l8400 13F0                                          l8320 1074  
                                        l9024 33C6                                          l9016 33A4  
                                        l9008 3362                                          l3994 5586  
                                        l6714 564A                                          l6706 5626  
                                        l6730 509E                                          l6722 5080  
                                        l8162 4704                                          l8146 46B0  
                                        l8138 468A                                          l6458 45CA  
                                        l6466 45EC                                          l9130 43C6  
                                        l9122 437A                                          l9114 434E  
                                        l9106 42AA                                          l7610 26DC  
                                        l7602 26A4                                          l7530 2484  
                                        l7522 2452                                          l7514 2414  
                                        l7506 23E0                                          l7450 22DC  
                                        l7442 22C4                                          l7434 2294  
                                        l7426 2262                                          l9050 38D2  
                                        l6386 5A9E                                          l6378 5A82  
                                        l8170 4DA2                                          l8314 319A  
                                        l8306 316E                                          l8074 4FBC  
                                        l8066 4F98                                          l8058 4F64  
                                        l8090 506C                                          l8082 5004  
                                        l8250 387A                                          l8242 37BA  
                                        l8234 3726                                          l8218 5350  
                                        l8226 5458                                          l8410 1452  
                                        l8402 13F8                                          l8330 10C8  
                                        l8322 107E                                          l9034 3410  
                                        l9018 33B2                                          l9026 33CE  
                                        l9042 342E                                          l6548 5E92  
                                        l3996 5590                                          l6716 5656  
                                        l6708 562A                                          l6740 50B2  
                                        l6732 50A2                                          l6724 5090  
                                        l8164 4714                                          l8156 46D8  
                                        l8148 46BA                                          l6468 45FC  
                                        l6660 5208                                          l6652 51AA  
                                        l9132 43D2                                          l9124 4396  
                                        l9116 4356                                          l9108 42BE  
                                        l7612 26DE                                          l7604 26C4  
                                        l7540 24B2                                          l7532 2492  
                                        l7516 2416                                          l7508 23F6  
                                        l7452 22EC                                          l7460 2316  
                                        l7444 22C6                                          l7428 2272  
                                        l7436 229C                                          l9060 3926  
                                        l9052 38E8                                          l7700 4190  
                                        l8180 4DF8                                          l8172 4DB6  
                                        l8308 3174                                          l8316 31AC  
                                        l8260 2F10                                          l8068 4F9E  
                                        l8084 5032                                          l8252 38A2  
                                        l8244 37F6                                          l8236 373A  
                                        l8500 18C8                                          l8412 1464  
                                        l8404 142C                                          l8340 110C  
                                        l8332 10D2                                          l8324 108E  
                                        l9036 3422                                          l9028 33E0  
                                        l9140 441C                                          l6670 5BC0  
                                        l3998 55A6                                          l6750 50C6  
                                        l6742 50B6                                          l6734 50A6  
                                        l6726 5096                                          l6718 5070  
                                        l8158 46E4                                          l6662 5234  
                                        l6654 51B2                                          l9126 43A2  
                                        l9118 436A                                          l7614 26E4  
                                        l7606 26C8                                          l7550 251E  
                                        l7542 24BC                                          l7534 249E  
                                        l7526 2466                                          l7518 2420  
                                        l7470 234E                                          l7462 2326  
                                        l7454 22FC                                          l7446 22CC  
                                        l7438 22AC                                          l9070 3964  
                                        l9062 3932                                          l9054 38EC  
                                        l8094 482C                                          l7710 4206  
                                        l7702 41AE                                          l8190 5776  
                                        l7390 5492                                          l7622 56EE  
                                        l7630 57B6                                          l8182 4DFC  
                                        l8174 4DC4                                          l8270 2F84  
                                        l8262 2F3A                                          l8086 5042  
                                        l8078 4FC6                                          l8254 38B2  
                                        l8238 3748                                          l8246 382A  
                                        l8510 1984                                          l8502 18EC  
                                        l8430 1514                                          l8414 146C  
                                        l8406 143C                                          l8342 1118  
                                        l8350 112E                                          l8334 10DA  
                                        l8326 109C                                          l9310 366E  
                                        l9150 4476                                          l9142 4420  
                                        l9134 43DC                                          l6672 5BCA  
                                        l6568 5E7E                                          l6680 5C18  
                                        l6760 510E                                          l6752 50CA  
                                        l6744 50BA                                          l6736 50AA  
                                        l6728 509A                                          l6656 51C8  
                                        l9128 43BE                                          l7616 26F2  
                                        l7608 26D6                                          l7552 252E  
                                        l7536 24A2                                          l7528 2476  
                                        l7544 24C2                                          l7480 2362  
                                        l7472 2352                                          l7464 2338  
                                        l7456 230C                                          l7448 22DA  
                                        l9080 3A24                                          l9072 397A  
                                        l9056 3908                                          l9064 393E  
                                        l9048 38C4                                          l8096 485C  
                                        l6592 5E1A                                          l7720 426E  
                                        l7712 4226                                          l7704 41B6  
                                        l8192 5790                                          l7392 549E  
                                        l7624 56FA                                          l7632 57C2  
                                        l8184 4E28                                          l8176 4DD0  
                                        l8168 4D94                                          l8280 2FCE  
                                        l8272 2FA0                                          l8264 2F5A  
                                        l7800 2D1C                                          l8088 5066  
                                        l8248 3866                                          l7640 5866  
                                        l8600 1C48                                          l8520 19CC  
                                        l8512 1992                                          l8504 1950  
                                        l8440 154C                                          l8432 151C  
                                        l8424 14B0                                          l8416 1486  
                                        l8408 1440                                          l8360 11B8  
                                        l8352 1154                                          l8344 1120  
                                        l8336 10EC                                          l8328 10A4  
                                        l9312 3446                                          l6920 476C  
                                        l6912 4726                                          l9160 44A0  
                                        l9152 447E                                          l9144 4468  
                                        l9136 4406                                          l6674 5BCE  
                                        l6666 5BA4                                          l6690 5B92  
                                        l6682 5C1A                                          l6754 50CE  
                                        l6746 50BE                                          l6738 50AE  
                                        l6658 51D8                                          l7618 26F4  
                                        l7570 25B0                                          l7562 2588  
                                        l7546 24E8                                          l7554 253E  
                                        l7538 24B0                                          l7490 2376  
                                        l7482 2366                                          l7474 2356  
                                        l7466 2346                                          l7458 230E  
                                        l9090 3A98                                          l9074 3A0C  
                                        l9066 394A                                          l9058 3910  
                                        l8098 486C                                          l9314 3D3E  
                                        l7650 3E58                                          l7714 4238  
                                        l7706 41CA                                          l7394 54B0  
                                        l7386 5472                                          l7626 570C  
                                        l7634 57C6                                          l8186 4E3C  
                                        l8178 4DE4                                          l8290 306E  
                                        l8282 2FD8                                          l8274 2FB2  
                                        l8266 2F68                                          l8258 2EF0  
                                        l7810 2D74                                          l7802 2D3A  
                                        l7730 2B72                                          l8194 4932  
                                        l8602 1C50                                          l8530 19F6  
                                        l8522 19D0                                          l8506 195E  
                                        l8514 199A                                          l8450 1596  
                                        l8442 155A                                          l8426 14C2  
                                        l8434 1520                                          l8418 149E  
                                        l8370 1228                                          l8362 11D0  
                                        l8346 1124                                          l8338 10FA  
                                        l6930 47B8                                          l6922 4776  
                                        l6914 473E                                          l9170 44F8  
                                        l9162 44AE                                          l9154 4486  
                                        l9146 446C                                          l9138 4418  
                                        l6668 5BB4                                          l6692 5B9C  
                                        l6684 5C26                                          l6676 5C00  
                                        l6756 50DA                                          l6748 50C2  
                                        l7572 25B8                                          l7564 2592  
                                        l7556 2564                                          l7548 251C  
                                        l7580 25DC                                          l7492 237A  
                                        l7484 236A                                          l7476 235A  
                                        l7468 234A                                          l9092 3AA0  
                                        l9316 3A44                                          l9076 3A18  
                                        l9068 3960                                          l7660 3E9A  
                                        l7652 3E5C                                          l7644 3E26  
                                        l7708 41D8                                          l7716 423E  
                                        l7396 54B2                                          l7388 5472  
                                        l7628 5710                                          l7636 57E2  
                                        l8284 2FDE                                          l8292 30D2  
                                        l8276 2FC0                                          l8268 2F6A  
                                        l7820 2DB2                                          l7812 2D7A  
                                        l7804 2D3C                                          l7732 2B82  
                                        l7740 2BAC                                          l7724 2B56  
                                        l8196 4952                                          l8620 1CDA  
                                        l8612 1CA2                                          l8604 1C62  
                                        l8540 1A2A                                          l8532 19FC  
                                        l8524 19D6                                          l8516 19AE  
                                        l8508 1972                                          l8460 15DC  
                                        l8452 15A8                                          l8444 155E  
                                        l8436 1528                                          l8428 14DE  
                                        l8380 12A4                                          l8364 11DA  
                                        l8356 118A                                          l8348 1128  
                                        l8700 20B0                                          l6940 4812  
                                        l6932 47CE                                          l6924 478E  
                                        l6916 4748                                          l9308 355C  
                                        l9172 44FC                                          l9164 44BE  
                                        l9156 448A                                          l9148 4472  
                                        l9180 5D48                                          l6694 5BA0  
                                        l6686 5B76                                          l6678 5C14  
                                        l6758 50E6                                          l7910 2840  
                                        l7902 2800                                          l7590 262E  
                                        l7582 25E0                                          l7574 25BC  
                                        l7566 25A0                                          l7558 2574  
                                        l7494 237E                                          l7486 236E  
                                        l7478 235E                                          l9094 3ABC  
                                        l9086 3A30                                          l7670 3EF4  
                                        l7662 3EB8                                          l7654 3E6A  
                                        l7646 3E2A                                          l7718 424E  
                                        l7398 54C2                                          l8294 30EE  
                                        l8286 3060                                          l8278 2FC6  
                                        l7830 2E1C                                          l7822 2DB6  
                                        l7814 2D84                                          l7806 2D4C  
                                        l7750 2BD8                                          l7742 2BBC  
                                        l7734 2B92                                          l7726 2B62  
                                        l8198 4990                                          l8622 1CE0  
                                        l8614 1CB4                                          l8606 1C68  
                                        l8526 19E2                                          l8518 19BC  
                                        l8534 1A02                                          l8542 1A30  
                                        l8550 1AC8                                          l8470 16F0  
                                        l8462 1640                                          l8446 1570  
                                        l8454 15B0                                          l8438 153A  
                                        l8382 12AE                                          l8374 125E  
                                        l8358 119C                                          l8630 4A5A  
                                        l8710 21AA                                          l8702 20F8  
                                        l6942 4812                                          l6934 47D6  
                                        l6926 4792                                          l6918 475A  
                                        l9174 4500                                          l9166 44D2  
                                        l9158 449C                                          l9182 5D4C  
                                        l6688 5B86                                          l6696 58D6  
                                        l7920 2892                                          l7912 285C  
                                        l7904 2810                                          l8800 3BEE  
                                        l7592 263A                                          l7584 25EE  
                                        l7576 25CC                                          l7568 25A2  
                                        l7496 2382                                          l7488 2372  
                                        l9096 3AC4                                          l9088 3A7A  
                                        l7672 3F22                                          l7664 3EC0  
                                        l7680 3F5C                                          l7656 3E8A  
                                        l7648 3E38                                          l8296 310C  
                                        l8288 3068                                          l7840 2E7E  
                                        l7832 2E28                                          l7824 2DC4  
                                        l7816 2D92                                          l7808 2D5E  
                                        l7752 2BE8                                          l7760 2C12  
                                        l7744 2BC2                                          l7736 2BA2  
                                        l7728 2B70                                          l8616 1CC0  
                                        l8608 1C6E                                          l8624 1CFC  
                                        l8560 1B32                                          l8552 1AE6  
                                        l8544 1A88                                          l8536 1A14  
                                        l8528 19F2                                          l8480 17AE  
                                        l8472 1724                                          l8464 1698  
                                        l8456 15B8                                          l8448 157E  
                                        l8392 1326                                          l8376 1270  
                                        l8368 1202                                          l8640 4AB2  
                                        l8720 21F0                                          l8712 21BC  
                                        l8704 2150                                          l6928 47A6  
                                        l6936 47DA                                          l9176 4504  
                                        l9168 44E6                                          l9184 5D4E  
                                        l6698 58EA                                          l7930 28F0  
                                        l7922 28A2                                          l7914 2868  
                                        l7906 281A                                          l8810 3C2C  
                                        l8802 3BFA                                          l7594 2648  
                                        l7586 2604                                          l7578 25CE  
                                        l7498 2386                                          l8650 5948  
                                        l7682 3F6C                                          l7674 3F42  
                                        l7666 3ED4                                          l7658 3E8E  
                                        l7690 4130                                          l8298 3126  
                                        l7850 2EDC                                          l7842 2E94  
                                        l7834 2E36                                          l7826 2DF2  
                                        l7818 2DA4                                          l7770 2C54  
                                        l7762 2C22                                          l7754 2BF8  
                                        l7746 2BC8                                          l7738 2BA4  
                                        l8618 1CC8                                          l8570 1B70  
                                        l8562 1B36                                          l8554 1B02  
                                        l8546 1ABC                                          l8538 1A26  
                                        l8490 1882                                          l8482 17BE  
                                        l8474 1758                                          l8466 16CC  
                                        l8458 15C8                                          l8394 135A  
                                        l8378 128C                                          l8386 12D6  
                                        l8642 4AC4                                          l8634 4A66  
                                        l8714 21D0                                          l6938 47F0  
                                        l9178 4508                                          l9186 5D5C  
                                        l7940 29A0                                          l7932 2910  
                                        l7924 28B2                                          l7916 2874  
                                        l7908 2834                                          l8812 3C50  
                                        l8804 3C08                                          l8732 59E4  
                                        l7596 2682                                          l8740 3CF6  
                                        l7684 3F8C                                          l7676 3F44  
                                        l7668 3EE2                                          l7692 413E  
                                        l7852 2EE2                                          l7844 2EAE  
                                        l7836 2E60                                          l7764 2C38  
                                        l7756 2C08                                          l7748 2BD6  
                                        l8580 1BA2                                          l8572 1B78  
                                        l8564 1B46                                          l8556 1B14  
                                        l8548 1AC4                                          l8492 1896  
                                        l8484 17F2                                          l8476 176C  
                                        l8468 16D2                                          l8396 1360  
                                        l8388 12F0                                          l8644 4AF6  
                                        l8636 4A74                                          l8628 4A30  
                                        l8708 217C                                          l8660 1D76  
                                        l8724 21FE                                          l8652 1D22  
                                        l7950 29F6                                          l7942 29AE  
                                        l7934 2920                                          l7926 28C2  
                                        l7918 2882                                          l7870 2734  
                                        l7862 2706                                          l8814 3C60  
                                        l8806 3C26                                          l8734 59B0  
                                        l8830 4B24                                          l7598 2684  
                                        l8742 3D02                                          l8750 3D2A  
                                        l7678 3F56                                          l7694 415E  
                                        l7854 2EE4                                          l7846 2ECA  
                                        l7838 2E64                                          l7790 2CD6  
                                        l7782 2C8C                                          l7766 2C48  
                                        l7774 2C68                                          l7758 2C0A  
                                        l8582 1BA8                                          l8590 1BF8  
                                        l8574 1B86                                          l8566 1B58  
                                        l8558 1B22                                          l8486 184A  
                                        l8494 189A                                          l8478 179E  
                                        l8398 13BC                                          l8638 4A90  
                                        l8726 222C                                          l8718 21DE  
                                        l8670 1E42                                          l8662 1DA2  
                                        l8654 1D50                                          l8822 52D0  
                                        l8910 3FAE                                          l7952 2A04  
                                        l7944 29CC                                          l7936 2940  
                                        l7928 28E0                                          l7880 2770  
                                        l7872 2744                                          l7864 2714  
                                        l8816 3C6E                                          l8808 3C28  
                                        l8832 4B40                                          l8840 4B80  
                                        l8648 597C                                          l8760 3DB8  
                                        l8744 3D0A                                          l8752 3D6C  
                                        l8736 3C82                                          l7696 4162  
                                        l7688 412C                                          l7848 2ECE  
                                        l7792 2CDE                                          l7784 2CA6  
                                        l7776 2C78                                          l7768 2C50  
                                        l8592 1C0A                                          l8584 1BCE  
                                        l8576 1B8E                                          l8568 1B60  
                                        l8496 18AA                                          l8488 184E  
                                        l8680 1F32                                          l8672 1E70  
                                        l8664 1DB2                                          l8656 1D62  
                                        l8824 52D8                                          l8920 404A  
                                        l8912 3FBE                                          l7962 2A6E  
                                        l7970 2AB6                                          l7954 2A08  
                                        l7946 29D6                                          l7938 296A  
                                        l7890 27A6                                          l7882 2776  
                                        l7874 2754                                          l7866 2722  
                                        l8818 3C70                                          l8842 4B9C  
                                        l8850 4BEC                                          l8834 4B5C  
                                        l8770 3E14                                          l8762 3DD4  
                                        l8754 3D88                                          l8746 3D16  
                                        l8738 3CCE                                          l7698 4170  
                                        l7794 2CEE                                          l7786 2CB6  
                                        l7778 2C78                                          l8594 1C24  
                                        l8586 1BEA                                          l8578 1B96  
                                        l8498 18BC                                          l8682 1F44  
                                        l8674 1E9E                                          l8666 1DF2  
                                        l8658 1D72                                          l8826 52E6  
                                        l8930 4092                                          l8922 4066  
                                        l8914 3FC4                                          l7980 2B2A  
                                        l7972 2AD0                                          l7964 2A7A  
                                        l7956 2A16                                          l7948 29E4  
                                        l7892 27B6                                          l7884 2784  
                                        l7876 275A                                          l7868 2724  
                                        l8780 3AEE                                          l8844 4BB8  
                                        l8836 4B64                                          l8764 3DE0  
                                        l8756 3D94                                          l7796 2D02  
                                        l7788 2CC6                                          l8596 1C2A  
                                        l8588 1BF2                                          l8684 1F66  
                                        l8692 1FE8                                          l8676 1EFA  
                                        l8668 1E02                                          l8828 5314  
                                        l8852 5CB0                                          l8860 34F8  
                                        l8940 4102                                          l8924 4072  
                                        l8932 40A2                                          l8916 3FF4  
                                        l7982 2B38                                          l7974 2AE4  
                                        l7966 2A88                                          l7958 2A44  
                                        l7894 27BC                                          l7886 2786  
                                        l7878 276A                                          l8790 3B66  
                                        l8782 3B34                                          l8846 4BC0  
                                        l8838 4B70                                          l8766 3DFC  
                                        l8758 3DB0                                          l8950 523E  
                                        l7798 2D10                                          l8598 1C3C  
                                        l8694 2016                                          l8686 1F78  
                                        l8854 5CBA                                          l8862 3514  
                                        l8870 3548                                          l8942 410C  
                                        l8934 40D8                                          l8926 4088  
                                        l8918 4016                                          l7984 2B3A  
                                        l7976 2AFE                                          l7968 2AB2  
                                        l7896 27DC                                          l7888 2796  
                                        l8792 3B72                                          l8784 3B4A  
                                        l8776 3AD0                                          l8848 4BCC  
                                        l8768 3E04                                          l8960 52AE  
                                        l8952 5244                                          l7992 56A6  
                                        l8688 1FBC                                          l8880 35FA  
                                        l8872 358E                                          l8864 3520  
                                        l8944 4110                                          l8936 40E0  
                                        l8928 408C                                          l7978 2B1A  
                                        l7986 2B40                                          l7898 27EC  
                                        l8794 3BA4                                          l8778 3AE0  
                                        l8962 52B6                                          l8954 525A  
                                        l7994 56B8                                          l8698 209E  
                                        l8890 3646                                          l8882 360E  
                                        l8874 35A2                                          l8866 353C  
                                        l8858 347E                                          l8946 4122  
                                        l8938 40EC                                          l7988 2B44  
                                        l8796 3BA6                                          l8788 3B5E  
                                        l8964 52C6                                          l8956 5262  
                                        l8980 3252                                          l8972 31D6  
                                        l8884 3620                                          l8876 35B6  
                                        l8948 4126                                          l7998 4CD0  
                                        l8798 3BB2                                          l8958 5266  
                                        l8990 32C4                                          l8982 3262  
                                        l8974 3202                                          l8878 35E6  
                                        STR_1 103E                                          l8968 52CC  
                                        l8992 32D6                                          l8984 3280  
                                        l8976 321E                                          l8888 3634  
                                        l8896 365A                                          STR_2 1055  
                                        STR_3 1025                                          l8994 32E2  
                                        l8986 329C                                          l8978 323A  
                                        STR_4 1001                                          STR_5 1015  
                                        l8996 32EA                                          l8988 32B4  
                                        STR_6 104A                                          STR_7 1032  
                                        l8998 32FC                                          STR_8 105F  
                                        STR_9 1067                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        u6100 5A9E                                          u6101 5A9A  
                                        u6200 45FC                                          u6201 45F8  
                                        _PMD0 0039C0                                          u2845 55B0  
                                        _PMD1 0039C1                                          u2846 55B2  
                                        u6150 4524                                          _PMD2 0039C2  
                                        u6151 4520                                          _PMD3 0039C3  
                                        u6160 4546                                          u7200 54C2  
                                        u8000 2E36                                          _PMD4 0039C4  
                                        u6161 4542                                          u7201 54BE  
                                        u8001 2E32                                          _PMD5 0039C5  
                                        u6170 4580                                          u7210 5126  
                                        u8010 2E7E                                          _PMD6 0039C6  
                                        u6171 457C                                          u7211 5122  
                                        u8011 2E7A                                          _PMD7 0039C7  
                                        u8100 27DC                                          u6180 45A2  
                                        u6420 51C8                                          u7300 22EC  
                                        u7220 5138                                          u8020 2EAE  
                                        u8101 27D8                                          u6181 459E  
                                        u6421 51C4                                          u7301 22E8  
                                        u7221 5134                                          u8021 2EAA  
                                        u8110 27EC                                          u6190 45CA  
                                        u6430 51D8                                          u7310 22FC  
                                        u7230 5160                                          u8030 2EDC  
                                        u8111 27E8                                          u6191 45C6  
                                        u6431 51D4                                          u7311 22F8  
                                        u7231 515C                                          u8031 2ED8  
                                        u8200 2AD0                                          u8120 298A  
                                        u8040 2722                                          u7400 2442  
                                        u7320 2338                                          u7240 5196  
                                        u9000 119C                                          u8201 2ACC  
                                        u8041 271E                                          u7401 243E  
                                        u7321 2334                                          u7241 5192  
                                        u9001 1198                                          u8210 2AFE  
                                        u8130 29E4                                          u8050 2734  
                                        u7410 2452                                          u7330 2346  
                                        u7250 2260                                          u9010 1228  
                                        u8211 2AFA                                          u8131 29E0  
                                        u8051 2730                                          u7411 244E  
                                        u7331 2342                                          u7251 225C  
                                        u9011 1224                                          u8220 2B38  
                                        u8140 2A04                                          u8060 2744  
                                        u7500 25B0                                          u7420 2484  
                                        u7340 23B4                                          u7260 2272  
                                        u7180 5482                                          u8300 4F42  
                                        u9100 1486                                          u9020 1258  
                                        u6700 47A6                                          u8221 2B34  
                                        u8141 2A00                                          u8125 2980  
                                        u8061 2740                                          u7501 25AC  
                                        u7421 2480                                          u7341 23B0  
                                        u7261 226E                                          u7181 547E  
                                        u8301 4F3E                                          u9101 1482  
                                        u9021 1252                                          u6701 47A2  
                                        u8230 4CE2                                          u8150 2A16  
                                        u8070 2784                                          u7510 25CC  
                                        u7430 2492                                          u7350 23CC  
                                        u7270 2282                                          u7190 5492  
                                        u8310 4F5C                                          u9110 14AC  
                                        u9030 125A                                          u6710 47B8  
                                        u8231 4CDE                                          u8151 2A12  
                                        u8071 2780                                          u7511 25C8  
                                        u7431 248E                                          u7351 23C6  
                                        u7271 227E                                          u7191 548E  
                                        u8311 4F58                                          u9111 14A8  
                                        u6711 47B4                                          u8240 4CFC  
                                        u8160 2A44                                          u8080 2796  
                                        u7600 26A4                                          u7520 25DC  
                                        u7440 24B0                                          u7360 23CE  
                                        u7280 22C4                                          u8400 48B8  
                                        u8320 4F7A                                          u9200 15A8  
                                        u9120 14C2                                          u9040 1270  
                                        u6720 47CE                                          u8241 4CF8  
                                        u8161 2A40                                          u8081 2792  
                                        u7601 26A0                                          u7521 25D8  
                                        u7441 24AC                                          u7281 22C0  
                                        u8401 48B4                                          u8321 4F76  
                                        u9201 15A4                                          u9121 14BE  
                                        u9041 126C                                          u6721 47CA  
                                        u8250 4D22                                          u8170 2A5A  
                                        u8090 27A6                                          u7610 26C4  
                                        u7530 25EE                                          u7450 24E8  
                                        u7370 23F6                                          u7290 22DA  
                                        u8410 48D8                                          u8330 4F90  
                                        u9210 16F0                                          u9130 14DE  
                                        u9050 1322                                          u6730 47F0  
                                        u8251 4D1E                                          u8171 2A56  
                                        u8091 27A2                                          u7611 26C0  
                                        u7531 25EA                                          u7451 24E4  
                                        u7371 23F2                                          u7291 22D6  
                                        u8411 48D4                                          u8331 4F8C  
                                        u9211 16EC                                          u9131 14DA  
                                        u9051 131E                                          u6731 47EC  
                                        u8260 4D40                                          u8180 2A6E  
                                        u8500 4704                                          u7620 26D6  
                                        u7540 2604                                          u7460 252E  
                                        u7380 2414                                          u8420 4928  
                                        u8340 4FB4                                          u9300 1984  
                                        u9220 1758                                          u9140 1514  
                                        u9060 13B8                                          u6740 480E  
                                        u6660 473E                                          u8261 4D3C  
                                        u8181 2A6A                                          u8501 4700  
                                        u7621 26D2                                          u7541 2600  
                                        u7461 252A                                          u7381 2410  
                                        u8421 4924                                          u7701 3E94  
                                        u8341 4FB0                                          u9301 1980  
                                        u9221 1754                                          u9141 1510  
                                        u9061 13B4                                          u6741 480A  
                                        u6661 473A                                          u8270 4D5C  
                                        u8190 2A88                                          u7630 26F2  
                                        u7550 261A                                          u7470 2564  
                                        u7390 2434                                          u7710 3EB8  
                                        u8510 4DA2                                          u8350 4FF4  
                                        u8430 58B4                                          u9310 1992  
                                        u9230 179E                                          u9150 153A  
                                        u9070 142C                                          u6670 475A  
                                        u8271 4D58                                          u8191 2A84  
                                        u7631 26EE                                          u7551 2616  
                                        u7471 2560                                          u7391 2430  
                                        u7711 3EB4                                          u8511 4D9E  
                                        u8351 4FF0                                          u8431 58B0  
                                        u9311 198E                                          u9231 179A  
                                        u9151 1536                                          u9071 1428  
                                        u6671 4756                                          u8280 4D82  
                                        u8440 4636                                          u7560 262E  
                                        u7480 2574                                          u7720 3EE2  
                                        u7800 424E                                          u7640 5730  
                                        u8520 4DC4                                          u8360 5032  
                                        u9400 1B86                                          u9320 19AE  
                                        u9240 17AE                                          u9160 154C  
                                        u9080 1452                                          u6680 476C  
                                        u8281 4D7E                                          u8441 4632  
                                        u7561 262A                                          u7481 2570  
                                        u7721 3EDE                                          u7801 424A  
                                        u7641 572C                                          u8521 4DC0  
                                        u8361 502E                                          u9401 1B82  
                                        u9321 19AA                                          u9241 17AA  
                                        u9161 1548                                          u9081 144E  
                                        u6681 4768                                          u8450 466A  
                                        u7570 2648                                          u7490 25A0  
                                        u7730 3F22                                          u7650 57E2  
                                        u8530 4E1A                                          u8290 4F28  
                                        u7810 2B70                                          u8370 5066  
                                        u8610 4A1C                                          u9410 1C0A  
                                        u9330 19BC                                          u9250 184A  
                                        u9170 155A                                          u9090 1464  
                                        u6690 478E                                          u7571 2644  
                                        u7491 259C                                          u7731 3F1E  
                                        u7651 57DE                                          u8531 4E16  
                                        u8291 4F24                                          u7811 2B6C  
                                        u8371 5062                                          u8611 4A16  
                                        u9411 1C06                                          u9331 19B8  
                                        u9251 1846                                          u9171 1556  
                                        u9091 1460                                          u6691 478A  
                                        u8460 4698                                          u7580 2682  
                                        u8380 485C                                          u7740 3F6C  
                                        u8540 4E28                                          u7900 2D10  
                                        u7820 2B82                                          u8620 4A1E  
                                        u8700 3748                                          u7660 5896  
                                        u9420 1C24                                          u9340 1A14  
                                        u9260 1896                                          u9180 1570  
                                        u9500 4AC4                                          u8461 4694  
                                        u7581 267E                                          u8381 4858  
                                        u7741 3F68                                          u8541 4E24  
                                        u7901 2D0C                                          u7821 2B7E  
                                        u8605 49F4                                          u8701 3744  
                                        u7661 5890                                          u9421 1C20  
                                        u9341 1A10                                          u9261 1892  
                                        u9181 156C                                          u9501 4AC0  
                                        u8470 46AC                                          u7590 2694  
                                        u8390 489A                                          u7750 413E  
                                        u8550 5790                                          u7910 2D3A  
                                        u7830 2B92                                          u8630 5396  
                                        u7670 5898                                          u9430 1C3C  
                                        u9350 1AE6                                          u9270 18BC  
                                        u9190 157E                                          u9510 4AF6  
                                        u8471 46A8                                          u8455 4660  
                                        u7591 2690                                          u8391 4896  
                                        u7751 413A                                          u8551 578C  
                                        u7911 2D36                                          u7831 2B8E  
                                        u9431 1C38                                          u9351 1AE2  
                                        u9271 18B8                                          u9191 157A  
                                        u9511 4AF2                                          u8480 46D4  
                                        u7680 3E38                                          u7760 4170  
                                        u8800 2F3A                                          u7920 2D5E  
                                        u7840 2BD6                                          u8560 4972  
                                        u8720 37B6                                          u8640 53A8  
                                        u9440 1C9C                                          u9360 1B02  
                                        u9280 195E                                          u9600 2016  
                                        u8481 46D0                                          u7681 3E34  
                                        u7761 416C                                          u8801 2F36  
                                        u7921 2D5A                                          u7841 2BD2  
                                        u8721 37B2                                          u8641 53A4  
                                        u9441 1C96                                          u9361 1AFE  
                                        u9281 195A                                          u9601 2012  
                                        u8490 46F4                                          u7690 3E6A  
                                        u7770 41AE                                          u8810 2F68  
                                        u7930 2D74                                          u7850 2BE8  
                                        u8570 4990                                          u8730 37DA  
                                        u8650 5440                                          u9450 1C9E  
                                        u9370 1B14                                          u9290 1972  
                                        u9610 2098                                          u8491 46F0  
                                        u7691 3E66                                          u7771 41AA  
                                        u8811 2F64                                          u7931 2D70  
                                        u7851 2BE4                                          u8571 498C  
                                        u8715 375C                                          u8651 543A  
                                        u9371 1B10                                          u9291 196E  
                                        u9611 2092                                          u9700 3DFC  
                                        u7780 41D8                                          u8900 3160  
                                        u8820 2F84                                          u7940 2D92  
                                        u7860 2BF8                                          u8580 49B8  
                                        u8740 37F6                                          u8716 3766  
                                        u8660 5442                                          u9460 1CB4  
                                        u9380 1B22                                          u9620 209A  
                                        u9540 1D50                                          u9525 59A0  
                                        u9701 3DF8                                          u7781 41D4  
                                        u8901 315C                                          u8821 2F80  
                                        u7941 2D8E                                          u7861 2BF4  
                                        u8581 49B4                                          u8565 4968  
                                        u8741 37F2                                          u8717 3776  
                                        u8637 5388                                          u9461 1CB0  
                                        u9381 1B1E                                          u9541 1D4C  
                                        u9710 3AE0                                          u7790 4206  
                                        u8910 316E                                          u8830 2FB2  
                                        u7950 2DB2                                          u7870 2C38  
                                        u8590 49E2                                          u8750 384A  
                                        u8670 5458                                          u9390 1B58  
                                        u9470 4A5A                                          u9630 20B0  
                                        u9550 1DB2                                          u9711 3ADC  
                                        u9535 596C                                          u7791 4202  
                                        u8911 316A                                          u8831 2FAE  
                                        u7951 2DAE                                          u7871 2C34  
                                        u8591 49DE                                          u8735 37D0  
                                        u8671 5454                                          u9391 1B54  
                                        u9471 4A56                                          u9631 20AC  
                                        u9551 1DAE                                          u9800 3C6E  
                                        u9720 3AEE                                          u8920 3186  
                                        u8840 2FC0                                          u7960 2DC4  
                                        u7880 2C78                                          u8760 3866  
                                        u8680 36F6                                          u9480 4A90  
                                        u9640 21AA                                          u9560 1E02  
                                        u9801 3C6A                                          u9721 3AEA  
                                        u8921 3182                                          u8841 2FBC  
                                        u7961 2DC0                                          u7881 2C74  
                                        u8761 3862                                          u9481 4A8C  
                                        u9641 21A6                                          u9561 1DFE  
                                        u9730 3B4A                                          u8850 30EE  
                                        u7970 2DF2                                          u7890 2CEE  
                                        u8770 38A2                                          u8690 3726  
                                        u8930 109C                                          u9490 4AB2  
                                        u9570 1E70                                          u9810 5336  
                                        u9731 3B46                                          u8851 30EA  
                                        u7971 2DEE                                          u7891 2CEA  
                                        u8771 389E                                          u8755 3840  
                                        u8691 3722                                          u8931 1098  
                                        u9491 4AAE                                          u9571 1E6C  
                                        u9811 5332                                          u9740 3BA0  
                                        u9820 4B40                                          u8860 310C  
                                        u8780 2F22                                          u7980 2E08  
                                        u8940 10EC                                          u9580 1E9E  
                                        u9900 40A2                                          u9741 3B9C  
                                        u9821 4B3C                                          u8861 3108  
                                        u8781 2F1C                                          u7981 2E04  
                                        u8685 36EC                                          u8941 10E8  
                                        u9581 1E9A                                          u9901 409E  
                                        u9750 3BEA                                          u9830 4B5C  
                                        u9670 3D88                                          u8870 3126  
                                        u8790 2F24                                          u7990 2E1C  
                                        u8950 10FA                                          u9590 1F44  
                                        u9910 40D8                                          u9751 3BE6  
                                        u9655 5A08                                          u9831 4B58  
                                        u9671 3D84                                          u8871 3122  
                                        u7991 2E18                                          u8951 10F6  
                                        u9591 1F40                                          u9911 40D4  
                                        u9760 3C08                                          u9840 4B9C  
                                        u9680 3DB0                                          u8880 3140  
                                        u8960 110C                                          u9920 4122  
                                        u9761 3C04                                          u9665 59D4  
                                        u9841 4B98                                          u9681 3DAC  
                                        u8881 313C                                          u8961 1108  
                                        u9921 411E                                          u9770 3C18  
                                        u9850 4BB8                                          u9690 3DD4  
                                        u9930 525A                                          u8890 314E  
                                        u8970 1154                                          u9771 3C14  
                                        u9851 4BB4                                          u9691 3DD0  
                                        u9931 5256                                          u8891 314A  
                                        u8971 1150                                          u9780 3C26  
                                        u9940 52AE                                          u8980 1184  
                                        u9860 3514                                          u9781 3C22  
                                        u9941 52AA                                          u8981 117E  
                                        u9861 3510                                          u9790 3C60  
                                        u8990 1186                                          u9950 321E  
                                        u9870 353C                                          u9791 3C5C  
                                        u9951 321A                                          u9871 3538  
                                        u9960 323A                                          u9880 3620  
                                        u9961 3236                                          u9881 361C  
                                        u9970 3252                                          u9890 3646  
                                        _TMR2 003FAA                                          u9971 324E  
                                        u9891 3642                                          u9980 3280  
                                        _TMR4 003F9E                                          u9981 327C  
                                        u9990 329C                                          u9991 3298  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 0134  
                                        _main 5D48                                          _dtoa 2EF0  
                                        _loop 43DC                                          _prec 003C  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                               ___fpclassifyf 4932                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 018A                               ___fldiv@new_exp 0025  
                             _TMR3_Initialize 58D6                               _PWM5_Initialize 5DEA  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3676 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 582C                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 59B0                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 5E1A                                 ___fltol@sign1 0081  
                             __end_of___aldiv 461E                               __end_of___aodiv 3FAE  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 5BD2                               __end_of___fladd 2706  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 4290  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2EF0                                         _ADREF 003EFD  
                             __end_of___awdiv 4D94                               __end_of___flneg 58D6  
                                       ?_loop 0001                                         STR_12 1063  
                                       STR_13 106B                                         STR_16 106F  
                                       STR_18 106F                               __end_of___awmod 4FC6  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2B56                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 56EE                               __end_of___fltol 4726  
                                       u10000 32B4                                         u10001 32B0  
                                       u10010 32D6                                         u10011 32D2  
                                       u10100 33FE                                         u10020 32FC  
                                       u10101 33FA                                         u10021 32F8  
                                       u10110 3422                                         u10030 330E  
                                       u10111 341E                                         u10031 330A  
                                       u10200 436A                                         u10120 38E8  
                                       u10040 3324                                         u10201 4366  
                                       u10121 38E4                                         u10041 3320  
                                       u10210 4396                                         u10130 3908  
                                       u10050 3336                                         u10211 4392  
                                       u10131 3904                                         u10051 3332  
                                       u10220 43BE                                         u10140 3926  
                                       u10060 334C                                         u10221 43BA  
                                       u10141 3922                                         u10061 3348  
                                       u10150 3960                                         u10070 3362  
                                       u10230 4406                                         u10151 395C  
                                       u10071 335E                                         u10231 4402  
                                       u10160 397A                                         u10080 3388  
                                       u10240 4418                                         u10161 3976  
                                       u10081 3384                                         u10241 4414  
                                       u10170 3A98                                         u10090 33E0  
                                       u10250 4468                                         u10171 3A94  
                                       u10091 33DC                                         u10251 4464  
                                       u10180 3ABC                                         u10260 449C  
                                       u10181 3AB8                                         u10261 4498  
                                       u10190 434E                                         u10270 44AE  
                                       u10191 434A                                         u10271 44AA  
                                       u10280 44E6                                         u10281 44E2  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 585E  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5822                                         i1l333 5770  
                                       i1l350 5EAC                                         i1l343 4F14  
                                       i1l336 5774                                         i1l353 5EAA  
                                       _U1TXB 003DEA                                         i1l347 5C82  
                                       i1l356 5EA0                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5EB0  
                                       i1l692 5BFE                                         i2l534 5CAE  
                                       i2l438 5B44                                         i2l446 5A4A  
                                       i2l552 5AE4                                         i1l688 5940  
                                       i2l529 5D46                                         i2l537 5E36  
                                       i1l698 5EAE                                         i2l476 5B74  
                                       i2l558 5D84                                         i2l487 5A7E  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 557A  
                                       i2l856 56A4                                         i2l868 5CFE  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5EB0                               _TMR4_Initialize 5C00  
                             _PWM6_Initialize 5DD2                             _UART1_tx_vect_isr 57F0  
                            __end_of_TMR4_ISR 5948                       setSteering@steeringMode 001E  
                                       _delay 00F9                                         _flags 003E  
                                       _fputc 5114                                         _fputs 56EE  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 003A  
                                       _putch 5E38                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 589E                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E5  
                       __size_of_calcSteering 0230                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5E56                   _UART1_SetRxInterruptHandler 5E4C  
                     __end_of_CCP4_Initialize 5BA4                                ?___fpclassifyf 0014  
                             __end_of_tolower 5470                               __end_of_strncmp 4B24  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 5EAE  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5EAC  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 5866  
                             _TMR5_Initialize 5612                               _PWM7_Initialize 5DBA  
                             __initialization 53AA                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 5D68  
                                __end_of_dtoa 31D6                                  __end_of_loop 4512  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 5DA2  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 4290  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 582A  
                             _PWM8_Initialize 5DA2                              _UART1_Initialize 5070  
                                _calcSteering 347E                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 59B0  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1243 5EA6                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 5E02                       __end_of_TMR3_Initialize 590E  
                                      i1l7100 4EAE                                        i1l7102 4EBE  
                                      i1l7032 5EA2                                        i1l7104 4ED6  
                                      i1l7106 4EF2                                        i1l7202 57F6  
                                      i1l7108 4F10                                        i1l7204 580A  
                                      i1l7150 5BE6                                        i1l7230 5934  
                                      i1l7206 5832                                        i1l7232 5938  
                                      i1l7208 5846                                        i1l7080 5742  
                                      i1l7226 5916                                        i1l7090 4E56  
                                      i1l7082 5754                                        i1l7148 5BD2  
                                      i1l7228 591A                                        i1l6540 5C6A  
                                      i1l7092 4E66                                        i1l7084 5756  
                                      i1l6542 5C6C                                        i1l7094 4E76  
                                      i1l7086 5766                                        i1l7078 5732  
                                      i1l6544 5C7C                                        i1l7096 4E86  
                                      i1l7088 576A                                        i1l6546 5C80  
                                      i1l6538 5C58                                        i1l7098 4E9E  
                                      i1l6762 5E9C                                        i2l7110 5B16  
                                      i2l7120 5B54                                        i2l7112 5B24  
                                      _INLVLA 003A44                                        i2l7130 5D7C  
                                      i2l7122 5B60                                        i2l7114 5B30  
                                      i2l7210 5A18                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l7132 5D80  
                                      i2l7220 5AB8                                        i2l7124 5B6E  
                                      i2l7116 5B3E                                        i2l7212 5A28  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7126 5D68                                        i2l7222 5ACC  
                                      i2l7118 5B46                                        i2l7214 5A4C  
                                      i2l7240 5680                                        i2l7128 5D74  
                                      i2l7216 5A5C                                        i2l7250 5556  
                                      i2l7242 5692                                        i2l7234 565C  
                                      i2l7218 5AB4                                        i2l7252 5568  
                                      i2l7244 5528                                        i2l7236 5660  
                                      i2l7254 5CD8                                        i2l7246 552C  
                                      i2l7238 5670                                        i2l7256 5CDC  
                                      i2l7248 5546                                        i2l6560 5C98  
                                      i2l6562 5C9E                                        i2l6554 5C84  
                                      i2l6556 5C92                                        i2l6564 5CA4  
                                      i2l6566 5CA8                                        i2l6558 5C94  
                                      i2l6764 5D24                                        i2l6772 5E2A  
                                      i2l6766 5D32                                        i2l6768 5D3E  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 523E                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 5E6A                              __end_of___xxtofl 3C82  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 347E  
                    __end_of_CCP3_SetCallBack 5E9C                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00E3  
                                      ___flge 482C                                        ___fleq 4FC6  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 001C                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                        _efgtoa 1074  
                               _CCP3_CallBack 018E                                        _floorf 36AE  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 5DEA  
                     __end_of_TMR4_Initialize 5C2C                                        clear_0 53E0  
                                      clear_1 53EC                                        clear_2 53F8  
                            ___awdiv@quotient 001A                                        _motPow 012E  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 018C                                        _smtWay 0120  
                                      _printf 5CB0                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 5340                                        _strlen 57B6  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4C06  
                             _ADCC_Initialize 54CC          __end_of_TMR4_DefaultInterruptHandler 5EB0  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 5EAE  
                                      fputc@c 0016                                _PMD_Initialize 5D00  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 5AE6  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 5340  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 5E60  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 5E56  
                   _UART1_DefaultErrorHandler 5E9C                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 01AC  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 5DD2  
                     __end_of_TMR5_Initialize 565C                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 55C8  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 540A                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 5C84                            __size_of_calcSpeed 020A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 5E92  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 5C00  
                                __pidataBANK0 5EB2                                  __pidataBANK1 5EA8  
                          __size_of_checkBatt 0092                                  ?_startAccell 0001  
                         ??_SYSTEM_Initialize 0018                                     ?_TMR4_ISR 0001  
                             startAccell@MPow 01A8                                ivt0x8_undefint 00AC  
                               __end_of_fputc 51AA                                 __end_of_fputs 5732  
                             fp__TMR4_10msISR 0000                                 __end_of_putch 5E42  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 5DBA  
                      __end_of_PMD_Initialize 5D24                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003A  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 0194  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                           _calcSteering$4174 0085                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5612                                       ??_fputs 0023  
                             _CLC3_Initialize 5C2C                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00E5  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                                    __pnvCOMRAM 004C  
                    __size_of_SMT1_PW_ACQ_ISR 0054                         _TMR4_InterruptHandler 0184  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                                       ?___flge 006D  
                                     ?___fleq 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 5528                    __end_of_PWM6_LoadDutyValue 597C  
                                     ?_efgtoa 0083          __end_of_TMR5_SetGateInterruptHandler 5E7E  
       __size_of_TMR5_SetGateInterruptHandler 000A                  _TMR5_SetGateInterruptHandler 5E74  
                                     _CCP3CAP 003F77                                       _CCP4CAP 003F73  
                                     _CCP3CON 003F76                                       _CCP4CON 003F72  
                                     _ADFLTRH 003EE7                                       ?_floorf 002D  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0030  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                                     ?_printf 01A0                               ?_PMD_Initialize 0001  
                           _UART1_Receive_ISR 4E56                                    _getReverse 4726  
                                     ?_strcpy 0014                                       ?_strlen 0014  
                                     _U1ERRIE 003DFA                                     ?_actSpeed 0022  
                                     _U1ERRIR 003DF9                                 ?_TMR4_10msISR 0001  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 005C  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 597C  
                                  _distRightM 00F1                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 3ACE                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 0522                                       _SMT1CLK 003F21  
                                     _OSCTUNE 0039DE                                       _SMT1CPR 003F15  
                                     _SMT1CPW 003F18                                       _PWM5DCH 003F6D  
                                     _PWM5DCL 003F6C                                       _PWM6DCH 003F69  
                                     _PWM6DCL 003F68                                       _PWM7DCH 003F65  
                                     _PWM7DCL 003F64                                       _SMT1SIG 003F22  
                                     _PWM8DCH 003F61                                       _PWM5CON 003F6E  
                                     _PWM8DCL 003F60                                       _SMT1PRH 003F1C  
                                     _PWM6CON 003F6A                                       _SMT1PRL 003F1B  
                                     _PWM7CON 003F66                                       _SMT1PRU 003F1D  
                                   ?_getCurve 0001                                       _SMT1WIN 003F23  
                                     _SMT1TMR 003F12                                       _PWM8CON 003F62  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                       _SLRCOND 003A73  
                                     _SLRCONE 003A83                             __end_of_checkBatt 52D0  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 5CB0  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01A4                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 5114  
                                     ___aldiv 4512                               __size_of___flge 0106  
                             __size_of___fleq 00AA                                       ___aodiv 3E26  
                                     ___fladd 2244                                       ___aomod 412C  
                                     ___fldiv 2B56                                       ___awdiv 4CD0  
                                     ___flneg 589E                                       ___awmod 4F16  
                                     ___flmul 2706                                       ___flsub 56A6  
                                     ___fltol 461E                     __end_of_UART1_Receive_ISR 4F16  
                                   ?_vfprintf 019A                          ??_PWM5_LoadDutyValue 0016  
                                __psmallconst 1000                               __size_of_efgtoa 0CAE  
                             __size_of_floorf 0216                                       __pcinit 53AA  
                   _TMR5_GateInterruptHandler 0188                              ?_PWM8_Initialize 0001  
                                     __ramtop 1000                   __size_of_UART1_Transmit_ISR 0044  
               ?_TMR5_SetGateInterruptHandler 0014                                       __ptext0 5D48  
                                     __ptext1 43DC                                       __ptext2 3FAE  
                                     __ptext3 347E                                       __ptext4 4726  
                                     __ptext5 31D6                                       __ptext6 5CB0  
                                     __ptext7 52D0                                       __ptext8 1D22  
                                     __ptext9 4A30                               __size_of_printf 0028  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                               __size_of_strcpy 006A  
                             __size_of_strlen 003A                       __end_of_CLC3_Initialize 5C58  
                       _OSCILLATOR_Initialize 5E02                                     _T2CONbits 003FAC  
                                __size_of_abs 0040                                  __size_of_pad 00C2  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
                            ___awmod@dividend 0014                 __size_of_CCP4_DefaultCallBack 0030  
                            ___aldiv@dividend 0014                                     _T4CONbits 003FA0  
                    ??_PIN_MANAGER_Initialize 0014             __size_of_TMR4_SetInterruptHandler 000A  
                                   _T2HLTbits 003FAD                                     _T5CONbits 003F9A  
                   ?_TMR4_SetInterruptHandler 0014                                       _isupper 5866  
                                     efgtoa@c 0089                                       efgtoa@d 00A7  
                                     efgtoa@e 00BF                                       efgtoa@f 0085  
                                     efgtoa@g 00BB                                       efgtoa@h 00B1  
                                     efgtoa@i 00B9                                       efgtoa@l 00B5  
                                     efgtoa@m 00A1                                       efgtoa@n 00C1  
                                     efgtoa@p 00AB                                       efgtoa@t 009B  
                                     efgtoa@u 00C3                                       efgtoa@w 00AD  
                                   _IPR10bits 00398A                                       _smtDuty 0124  
                                   _T4HLTbits 003FA1                                    ??_getCurve 01A8  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                                     _tolower 5410                                       _strncmp 4A30  
                        end_of_initialization 540A                                       floorf@e 0064  
                                   _T2RSTbits 003FAF                                       floorf@m 0060  
                                     floorf@u 0066                                       floorf@x 002D  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                                       fputc@fp 0018  
                           ??_SMT1_PR_ACQ_ISR 0011           __end_of_UART1_SetTxInterruptHandler 5E4C  
                 _UART1_SetTxInterruptHandler 5E42                                       fputs@fp 0021  
              ??_UART1_SetOverrunErrorHandler 0016                                    ??_setMotor 001A  
                    __size_of_SMT1_Initialize 0030                             __end_of_vfpfcnvrt 2244  
                                  efgtoa@mode 00B0                             ?_CCP3_SetCallBack 0014  
                                  efgtoa@sign 00A9                              ___aldiv@quotient 001E  
                                     postdec2 003FDD                             ??_SMT1_PW_ACQ_ISR 0011  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                              ?_ADCC_Initialize 0001  
                          ??_CCP3_SetCallBack 0016                                    ??_vfprintf 003A  
            __end_of_ADCC_GetSingleConversion 5AB2                             UART1_Write@txData 0014  
                         _UART1_RxDataHandler 5C58                                       strcpy@d 001C  
                                     strlen@a 0016                                       strcpy@s 001A  
                                     strlen@s 0014                          __size_of_startAccell 017E  
                                 ?_getReverse 0001                                     _PORTBbits 003FCB  
                                   _PORTDbits 003FCD                      __size_of_CCP3_CaptureISR 0034  
                                 ___fladd@grs 0078                            getCurve@deltaRight 01AA  
                               ___xxtofl@sign 0024                                   ___fldiv@grs 0027  
                                 ___fldiv@rem 0020                          ?_UART1_RxDataHandler 0001  
                            ?_TMR5_WriteTimer 0009                          setSteering@steeringB 0023  
                        setSteering@steeringF 0021                       TMR5_WriteTimer@timerVal 0009  
                                 ___flmul@grs 0062                      __size_of_CCP4_CaptureISR 0034  
           CCP4_DefaultCallBack@capturedValue 0005                             ?_CCP4_SetCallBack 0014  
                __end_of_INTERRUPT_Initialize 55C8                                __end_of___flge 4932  
                              __end_of___fleq 5070                    __size_of_UART1_Receive_ISR 00C0  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                                 vfpfcnvrt@ap 00CB                                   vfpfcnvrt@ct 00DF  
                                 vfpfcnvrt@fp 00C7                                   vfpfcnvrt@ll 00D1  
                              __end_of_efgtoa 1D22                             __size_of_TMR4_ISR 0038  
                              __end_of_floorf 38C4                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 5CD8  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 53AA                                __end_of_strlen 57F0  
                              _TMR5_ReadTimer 5D24                           start_initialization 53AA  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 57B6                                   __end_of_pad 4E56  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00E7  
                       __end_of___fpclassifyf 4A30                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 0106                          __end_of_TMR4_10msISR 5EA8  
                                _middleOffSet 01AE                                   vfprintf@fmt 019C  
                                    ??___flge 0036                                      ??___fleq 001C  
                            ??_PMD_Initialize 0014                        __size_of_TMR5_GATE_ISR 0032  
                                _oldDistRight 00ED                      __size_of_CCP4_Initialize 002E  
                                    ??_efgtoa 008A                                   __pdataBANK0 00FE  
                                 __pdataBANK1 01AE                                      ??_floorf 0031  
                  __end_of_PWM7_LoadDutyValue 5A18                             ??_SMT1_Initialize 0014  
                                    ??_printf 003A                                      ??_strcpy 0018  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 5D48  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 0071  
                                   ___fladd@b 006D                           calcMotorPow@addMPow 0089  
                    _ADCC_GetSingleConversion 5A80                                     ___fldiv@a 0018  
                                   ___fldiv@b 0014                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 0040                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                                   ___flsub@a 007D                                     ___flsub@b 0079  
                          _UART1_ErrorHandler 0190                                 __pcstackBANK0 0060  
                               __pcstackBANK1 019A                             __size_of_actSpeed 0094  
                            ___aodiv@dividend 0014                            _PWM6_LoadDutyValue 5948  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 0198                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 5B46                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 38C4                             __size_of_getCurve 02A8  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 523E  
                                _currentSpeed 00E9                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 0184                                   _efgtoa$3554 008F  
                                 _efgtoa$3563 0095                                   _efgtoa$3555 0091  
                                 _efgtoa$3564 0097                                   _efgtoa$3565 0099  
                                 _efgtoa$3559 0093                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4C06                                     _dtoa$3530 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5E6A  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 5E60  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 5E88                                      ?___fldiv 0014  
                                    ?___awdiv 0014                                     __ptext100 565C  
                                   __ptext101 5528                                     __ptext102 5CD8  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
                                   __ptext103 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                            ??_UART1_Initialize 0016  
                                   _distLeftM 00F5                                     _distFront 00FC  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 00F3                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FA                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FE  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 5EAC  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5EAA  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 565C                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 5AB4  
                                   _curveMode 00FB                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 557C                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 5528  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5B76                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u700_28 5BEC  
                                    i1u700_29 5BFE                                      i1u710_28 584C  
                                    i1u710_29 585E                                      i1u632_20 5C7C  
                                    i1u632_21 5C78                                      i1u715_20 5934  
                                    i1u707_20 580A                                      i1u715_21 5930  
                                    i1u707_21 5806                                      i1u709_20 5846  
                                    i1u708_28 5810                                      i1u709_21 5842  
                                    i1u708_29 5822                                      _PIR1bits 0039A1  
                                    i1u690_20 4E76                                      i1u690_21 4E72  
                                    i1u692_20 4EAE                                      i1u691_28 4E8C  
                                    i1u692_21 4EAA                                      i1u691_29 4E9E  
                                    i1u694_20 4EF2                                      i1u693_28 4EC4  
                                    i1u694_21 4EEE                                      i1u693_29 4ED6  
                                    _PIR4bits 0039A4                                      i1u695_28 4EF8  
                                    i1u688_20 5742                                      i1u695_29 4F0C  
                                    i1u688_21 573E                                      i2u711_48 5A36  
                                    i2u711_49 5A4A                                      i1u689_20 5766  
                                    i1u689_21 5762                                      i2u633_40 5C92  
                                    i2u713_40 5ACC                                      i2u712_48 5A6A  
                                    i2u633_41 5C8E                                      i2u713_41 5AC8  
                                    i2u712_49 5A7E                                      i1u699_20 5BE6  
                                    i1u699_21 5BE2                                      i2u714_48 5AD2  
                                    i2u714_49 5AE4                                      _PIR6bits 0039A6  
                                    i2u716_40 5680                                      i2u716_41 567C  
                                    i2u717_40 5556                                      i2u717_41 5552  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      i2u696_40 5B24  
                                    i2u696_41 5B20                                      i2u697_40 5B54  
                                    i2u697_41 5B50                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 5CD8                                      _TMR4_ISR 5910  
                  __end_of_UART1_Transmit_ISR 5776                                 _TMR4_CallBack 5BD2  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D22                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 5E1A                                  ??_getReverse 0014  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 0083  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 54CC                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00E2                                    vfpfcnvrt@f 00DB  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 482C                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5D00  
                         __end_of_setSteering 3E26                                    vfprintf@ap 019E  
                                    __Lrparam 0000                                    vfprintf@fp 019A  
                                 _oldDistLeft 00EF                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 5E2A                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039A                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 5B16                       __end_of_SMT1_PR_ACQ_ISR 56A6  
                                  ?_vfpfcnvrt 00C7                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 5E7E  
                          ___fpclassifyf@F465 011C                                      _actSpeed 51AA  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 5EA2  
                                    ___xxtofl 3ACE                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 5E38                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 557C  
                                    _getCurve 31D6                                      __ptext10 1074  
                                    __ptext11 5410                                      __ptext20 4F16  
                                    __ptext12 5866                                      __ptext21 2EF0  
                                    __ptext13 5340                                      __ptext30 3E26  
                                    __ptext22 4D94                                      __ptext14 36AE  
                                    __ptext31 523E                                      __ptext23 57B6  
                                    __ptext15 4932                                      __ptext40 4290  
                                    __ptext32 3C82                                      __ptext24 56EE  
                                    __ptext16 56A6                                      __ptext41 4B24  
                                    __ptext33 5948                                      __ptext25 5114  
                                    __ptext17 589E                                      __ptext50 55C8  
                                    __ptext42 59B0                                      __ptext34 597C  
                                    __ptext26 5E38                                      __ptext18 4FC6  
                                    __ptext51 5070                                      __ptext43 59E4  
                                    __ptext35 5E1A                                      __ptext27 5470  
                                    __ptext19 2B56                                      __ptext60 5E7E  
                                    __ptext52 5E42                                      __ptext44 51AA  
                                    __ptext36 5A80                                      __ptext28 5776  
                                    __ptext61 58D6                                      __ptext53 5E4C  
                                    __ptext45 4512                                      __ptext37 482C  
                                    __ptext29 412C                                      __ptext70 5E02  
                                    __ptext62 5D86                                      __ptext54 5E56  
                                    __ptext46 3ACE                                      __ptext38 38C4  
                                    __ptext71 557C                                      __ptext63 5AE6  
                                    __ptext55 5E60                                      __ptext47 461E  
                                    __ptext39 2244                                      __ptext80 582C  
                                    __ptext72 5C2C                                      __ptext64 5DA2  
                                    __ptext56 5E6A                                      __ptext48 2706  
                                    __ptext81 4E56                                      __ptext73 5B76  
                                    __ptext65 5DBA                                      __ptext57 5612  
                                    __ptext49 4CD0                                      __ptext90 5EB0  
                                    __ptext82 5EAA                                      __ptext74 5E88  
                                    __ptext66 5DD2                                      __ptext58 5E74  
                                    __ptext91 5A18                                      __ptext83 5EAC  
                                    __ptext75 5BA4                                      __ptext67 5DEA  
                                    __ptext59 5C00                                      __ptext92 5B16  
                                    __ptext84 5E9C                                      __ptext76 5E92  
                                    __ptext68 5D00                                      __ptext93 5A4C  
                                    __ptext85 5C58                                      __ptext77 54CC  
                                    __ptext69 4C06                                      __ptext94 5B46  
                                    __ptext86 5910                                      __ptext78 57F0  
                                    __ptext95 5AB4                                      __ptext87 5BD2  
                                    __ptext79 5732                                      __ptext96 5D68  
                                    __ptext88 5EA2                                      __ptext97 5E2A  
                                    __ptext89 5EAE                                      __ptext98 5C84  
                                    __ptext99 5D24                              __size_of_isupper 0038  
                                    _distLeft 00F7                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 5E74  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0136  
                             _SMT1_Initialize 5AE6                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4B24                                      _setSpeed 00EB  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 0192  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 52D0                                     printf@fmt 01A0  
                  __end_of_PWM8_LoadDutyValue 59E4                               _CCP3_CaptureISR 5A18  
                                 _UART1_Write 5470                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 5D86  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 5D68  
                            ___aomod@dividend 0014                           __end_of_startAccell 412C  
                              _battCheckCount 0130                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0132  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3583 00D9  
                 __end_of_UART1_RxDataHandler 5C84                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5B46                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 59E4  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3C82  
                             _CCP4_CaptureISR 5A4C                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 43DC                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 36AE  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01A6                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5EA2                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5E2A                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5E92  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5BA4                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 0087                      _UART1_TxInterruptHandler 0196  
                               ___fladd@signs 0075                           __end_of_Default_ISR 5EB2  
                     __end_of_SMT1_Initialize 5B16                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 4CD0                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5A4C  
