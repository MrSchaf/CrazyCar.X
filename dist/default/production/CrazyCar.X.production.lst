

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 18:41:01 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=4,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=4,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1
    73                           	psect	text60,global,reloc=4,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=4,class=CODE,delta=1
    78                           	psect	text65,global,reloc=4,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=4,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=4,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	text74,global,reloc=4,class=CODE,delta=1
    88                           	psect	text75,global,reloc=4,class=CODE,delta=1
    89                           	psect	text76,global,reloc=4,class=CODE,delta=1
    90                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	text77,global,reloc=4,class=CODE,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96  0000                     
    97                           ; Version 2.20
    98                           ; Generated 05/05/2020 GMT
    99                           ; 
   100                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F46K42 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataCOMRAM
   133  002812                     __pidataCOMRAM:
   134                           	callstack 0
   135                           
   136                           ;initializer for _driveMode
   137  002812  01                 	db	1
   138                           
   139                           	psect	nvBANK0
   140  0000CC                     __pnvBANK0:
   141                           	callstack 0
   142  0000CC                     _TMR4_InterruptHandler:
   143                           	callstack 0
   144  0000CC                     	ds	2
   145  0000CE                     _timer3ReloadVal:
   146                           	callstack 0
   147  0000CE                     	ds	2
   148  0000D0                     _TMR5_GateInterruptHandler:
   149                           	callstack 0
   150  0000D0                     	ds	2
   151  0000D2                     _timer5ReloadVal:
   152                           	callstack 0
   153  0000D2                     	ds	2
   154  0000D4                     _CCP4_CallBack:
   155                           	callstack 0
   156  0000D4                     	ds	2
   157  0000D6                     _CCP3_CallBack:
   158                           	callstack 0
   159  0000D6                     	ds	2
   160  0000D8                     _UART1_ErrorHandler:
   161                           	callstack 0
   162  0000D8                     	ds	2
   163  0000DA                     _UART1_OverrunErrorHandler:
   164                           	callstack 0
   165  0000DA                     	ds	2
   166  0000DC                     _UART1_FramingErrorHandler:
   167                           	callstack 0
   168  0000DC                     	ds	2
   169  0000DE                     _UART1_TxInterruptHandler:
   170                           	callstack 0
   171  0000DE                     	ds	2
   172  0000E0                     _UART1_RxInterruptHandler:
   173                           	callstack 0
   174  0000E0                     	ds	2
   175  0000E2                     _uart1TxBufferRemaining:
   176                           	callstack 0
   177  0000E2                     	ds	1
   178  0000                     _PIR4bits	set	14756
   179  0000                     _PIR1bits	set	14753
   180  0000                     _PIE1bits	set	14737
   181  0000                     _PIE7bits	set	14743
   182  0000                     _PIR7bits	set	14759
   183  0000                     _PIR6bits	set	14758
   184  0000                     _PIE8bits	set	14744
   185  0000                     _PIR8bits	set	14760
   186  0000                     _PIE10bits	set	14746
   187  0000                     _PIR10bits	set	14762
   188  0000                     _PIE9bits	set	14745
   189  0000                     _PIR9bits	set	14761
   190  0000                     _IPR9bits	set	14729
   191  0000                     _IPR7bits	set	14727
   192  0000                     _IPR8bits	set	14728
   193  0000                     _IPR10bits	set	14730
   194  0000                     _IPR1bits	set	14721
   195  0000                     _IPR3bits	set	14723
   196  0000                     _PIE3bits	set	14739
   197  0000                     _PMD7	set	14791
   198  0000                     _PMD6	set	14790
   199  0000                     _PMD5	set	14789
   200  0000                     _PMD4	set	14788
   201  0000                     _PMD3	set	14787
   202  0000                     _PMD2	set	14786
   203  0000                     _PMD1	set	14785
   204  0000                     _PMD0	set	14784
   205  0000                     _OSCTUNE	set	14814
   206  0000                     _OSCFRQ	set	14815
   207  0000                     _OSCEN	set	14813
   208  0000                     _OSCCON3	set	14811
   209  0000                     _OSCCON1	set	14809
   210  0000                     _CCP4PPS	set	15056
   211  0000                     _SMT1SIGPPS	set	15058
   212  0000                     _CLCIN2PPS	set	15067
   213  0000                     _RB3PPS	set	14859
   214  0000                     _RA3PPS	set	14851
   215  0000                     _SMT1WINPPS	set	15057
   216  0000                     _CLCIN0PPS	set	15065
   217  0000                     _RA4PPS	set	14852
   218  0000                     _T5GPPS	set	15049
   219  0000                     _RA0PPS	set	14848
   220  0000                     _U1RXPPS	set	15077
   221  0000                     _RA1PPS	set	14849
   222  0000                     _CLCIN3PPS	set	15068
   223  0000                     _CCP3PPS	set	15055
   224  0000                     _INLVLE	set	14980
   225  0000                     _INLVLD	set	14964
   226  0000                     _INLVLC	set	14948
   227  0000                     _INLVLB	set	14932
   228  0000                     _INLVLA	set	14916
   229  0000                     _SLRCONE	set	14979
   230  0000                     _SLRCOND	set	14963
   231  0000                     _SLRCONC	set	14947
   232  0000                     _SLRCONB	set	14931
   233  0000                     _SLRCONA	set	14915
   234  0000                     _ODCOND	set	14962
   235  0000                     _ODCONC	set	14946
   236  0000                     _ODCONB	set	14930
   237  0000                     _ODCONA	set	14914
   238  0000                     _ODCONE	set	14978
   239  0000                     _RD1I2C	set	14971
   240  0000                     _RD0I2C	set	14970
   241  0000                     _RC4I2C	set	14955
   242  0000                     _RC3I2C	set	14954
   243  0000                     _RB2I2C	set	14939
   244  0000                     _RB1I2C	set	14938
   245  0000                     _WPUC	set	14945
   246  0000                     _WPUA	set	14913
   247  0000                     _WPUB	set	14929
   248  0000                     _WPUE	set	14977
   249  0000                     _WPUD	set	14961
   250  0000                     _ANSELA	set	14912
   251  0000                     _ANSELE	set	14976
   252  0000                     _ANSELB	set	14928
   253  0000                     _ANSELC	set	14944
   254  0000                     _ANSELD	set	14960
   255  0000                     _CLC3CON	set	15456
   256  0000                     _CLC3GLS3	set	15465
   257  0000                     _CLC3GLS2	set	15464
   258  0000                     _CLC3GLS1	set	15463
   259  0000                     _CLC3GLS0	set	15462
   260  0000                     _CLC3SEL3	set	15461
   261  0000                     _CLC3SEL2	set	15460
   262  0000                     _CLC3SEL1	set	15459
   263  0000                     _CLC3SEL0	set	15458
   264  0000                     _CLC3POL	set	15457
   265  0000                     _CLC3CONbits	set	15456
   266  0000                     _U1RXB	set	15848
   267  0000                     _U1TXB	set	15850
   268  0000                     _U1ERRIRbits	set	15865
   269  0000                     _U1ERRIE	set	15866
   270  0000                     _U1ERRIR	set	15865
   271  0000                     _U1UIR	set	15864
   272  0000                     _U1FIFO	set	15863
   273  0000                     _U1BRGH	set	15862
   274  0000                     _U1BRGL	set	15861
   275  0000                     _U1CON2	set	15860
   276  0000                     _U1CON1	set	15859
   277  0000                     _U1CON0	set	15858
   278  0000                     _U1P3H	set	15857
   279  0000                     _U1P3L	set	15856
   280  0000                     _U1P2H	set	15855
   281  0000                     _U1P2L	set	15854
   282  0000                     _U1P1H	set	15853
   283  0000                     _U1P1L	set	15852
   284  0000                     _ADCON1bits	set	16121
   285  0000                     _ADERRL	set	16098
   286  0000                     _ADERRH	set	16099
   287  0000                     _ADPREVL	set	16109
   288  0000                     _ADPREVH	set	16110
   289  0000                     _ADFLTRL	set	16102
   290  0000                     _ADFLTRH	set	16103
   291  0000                     _ADSTATbits	set	16124
   292  0000                     _ADACCL	set	16104
   293  0000                     _ADACCH	set	16105
   294  0000                     _ADCON2bits	set	16122
   295  0000                     _ADCNT	set	16107
   296  0000                     _ADCON3bits	set	16123
   297  0000                     _ADRESL	set	16111
   298  0000                     _ADRESH	set	16112
   299  0000                     _ADCON0bits	set	16120
   300  0000                     _ADCON0	set	16120
   301  0000                     _ADCLK	set	16127
   302  0000                     _ADACT	set	16126
   303  0000                     _ADREF	set	16125
   304  0000                     _ADSTAT	set	16124
   305  0000                     _ADCON3	set	16123
   306  0000                     _ADCON2	set	16122
   307  0000                     _ADCON1	set	16121
   308  0000                     _ADPREH	set	16119
   309  0000                     _ADPREL	set	16118
   310  0000                     _ADCAP	set	16117
   311  0000                     _ADACQH	set	16116
   312  0000                     _ADACQL	set	16115
   313  0000                     _ADPCH	set	16113
   314  0000                     _ADRPT	set	16108
   315  0000                     _ADACCU	set	16106
   316  0000                     _ADSTPTH	set	16101
   317  0000                     _ADSTPTL	set	16100
   318  0000                     _ADUTHH	set	16097
   319  0000                     _ADUTHL	set	16096
   320  0000                     _ADLTHH	set	16095
   321  0000                     _ADLTHL	set	16094
   322  0000                     _SMT1TMR	set	16146
   323  0000                     _SMT1CPR	set	16149
   324  0000                     _SMT1CPW	set	16152
   325  0000                     _SMT1PR	set	16155
   326  0000                     _SMT1STATbits	set	16160
   327  0000                     _SMT1CON0bits	set	16158
   328  0000                     _SMT1CON1bits	set	16159
   329  0000                     _SMT1PRL	set	16155
   330  0000                     _SMT1PRH	set	16156
   331  0000                     _SMT1PRU	set	16157
   332  0000                     _SMT1SIG	set	16162
   333  0000                     _SMT1WIN	set	16163
   334  0000                     _SMT1CLK	set	16161
   335  0000                     _SMT1STAT	set	16160
   336  0000                     _SMT1CON1	set	16159
   337  0000                     _SMT1CON0	set	16158
   338  0000                     _CCPTMRS1bits	set	16223
   339  0000                     _CCPTMRS0bits	set	16222
   340  0000                     _PORTBbits	set	16331
   341  0000                     _PR2	set	16299
   342  0000                     _TMR2	set	16298
   343  0000                     _T2CONbits	set	16300
   344  0000                     _T2RSTbits	set	16303
   345  0000                     _T2HLTbits	set	16301
   346  0000                     _T2CON	set	16300
   347  0000                     _T2TMR	set	16298
   348  0000                     _T2PR	set	16299
   349  0000                     _T2RST	set	16303
   350  0000                     _T2HLT	set	16301
   351  0000                     _T2CLKCON	set	16302
   352  0000                     _PWM6DCL	set	16232
   353  0000                     _PWM6DCH	set	16233
   354  0000                     _PWM6CON	set	16234
   355  0000                     _PWM5DCL	set	16236
   356  0000                     _PWM5DCH	set	16237
   357  0000                     _PWM5CON	set	16238
   358  0000                     _PWM8DCL	set	16224
   359  0000                     _PWM8DCH	set	16225
   360  0000                     _PWM8CON	set	16226
   361  0000                     _PWM7DCL	set	16228
   362  0000                     _PWM7DCH	set	16229
   363  0000                     _PWM7CON	set	16230
   364  0000                     _PR4	set	16287
   365  0000                     _TMR4	set	16286
   366  0000                     _T4CONbits	set	16288
   367  0000                     _T4RSTbits	set	16291
   368  0000                     _T4HLTbits	set	16289
   369  0000                     _T4CON	set	16288
   370  0000                     _T4TMR	set	16286
   371  0000                     _T4PR	set	16287
   372  0000                     _T4RST	set	16291
   373  0000                     _T4HLT	set	16289
   374  0000                     _T4CLKCON	set	16290
   375  0000                     _T3GCONbits	set	16295
   376  0000                     _T3CONbits	set	16294
   377  0000                     _T3CON	set	16294
   378  0000                     _TMR3L	set	16292
   379  0000                     _TMR3H	set	16293
   380  0000                     _T3CLK	set	16297
   381  0000                     _T3GATE	set	16296
   382  0000                     _T3GCON	set	16295
   383  0000                     _T5GCONbits	set	16283
   384  0000                     _T5CONbits	set	16282
   385  0000                     _T5CON	set	16282
   386  0000                     _TMR5L	set	16280
   387  0000                     _TMR5H	set	16281
   388  0000                     _T5CLK	set	16285
   389  0000                     _T5GATE	set	16284
   390  0000                     _T5GCON	set	16283
   391  0000                     _CCPR4L	set	16240
   392  0000                     _CCPR4H	set	16241
   393  0000                     _CCP4CAP	set	16243
   394  0000                     _CCP4CON	set	16242
   395  0000                     _CCPR3L	set	16244
   396  0000                     _CCPR3H	set	16245
   397  0000                     _CCP3CAP	set	16247
   398  0000                     _CCP3CON	set	16246
   399  0000                     _PORTDbits	set	16333
   400  0000                     _IVTBASEL	set	16341
   401  0000                     _IVTBASEH	set	16342
   402  0000                     _IVTBASEU	set	16343
   403  0000                     _IVTLOCKbits	set	16340
   404  0000                     _IVTLOCK	set	16340
   405  0000                     _INTCON0bits	set	16338
   406  0000                     _TRISD	set	16325
   407  0000                     _TRISC	set	16324
   408  0000                     _TRISB	set	16323
   409  0000                     _TRISA	set	16322
   410  0000                     _TRISE	set	16326
   411  0000                     _LATC	set	16316
   412  0000                     _LATB	set	16315
   413  0000                     _LATA	set	16314
   414  0000                     _LATD	set	16317
   415  0000                     _LATE	set	16318
   416  0000                     _GIE	set	130711
   417                           
   418                           ; #config settings
   419                           
   420                           	psect	cinit
   421  0021A6                     __pcinit:
   422                           	callstack 0
   423  0021A6                     start_initialization:
   424                           	callstack 0
   425  0021A6                     __initialization:
   426                           	callstack 0
   427                           
   428                           ; Initialize objects allocated to COMRAM (1 bytes)
   429                           ; load TBLPTR registers with __pidataCOMRAM
   430  0021A6  0E12               	movlw	low __pidataCOMRAM
   431  0021A8  6EF6               	movwf	tblptrl,c
   432  0021AA  0E28               	movlw	high __pidataCOMRAM
   433  0021AC  6EF7               	movwf	tblptrh,c
   434  0021AE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   435  0021B0  6EF8               	movwf	tblptru,c
   436  0021B2  0009               	tblrd		*+	;fetch initializer
   437  0021B4  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   438                           
   439                           ; Clear objects allocated to BANK0 (63 bytes)
   440  0021BA  EE00  F060         	lfsr	0,__pbssBANK0
   441  0021BE  0E3F               	movlw	63
   442  0021C0                     clear_0:
   443  0021C0  6AEE               	clrf	postinc0,c
   444  0021C2  06E8               	decf	wreg,f,c
   445  0021C4  E1FD               	bnz	clear_0
   446                           
   447                           ; Clear objects allocated to COMRAM (18 bytes)
   448  0021C6  EE00  F03A         	lfsr	0,__pbssCOMRAM
   449  0021CA  0E12               	movlw	18
   450  0021CC                     clear_1:
   451  0021CC  6AEE               	clrf	postinc0,c
   452  0021CE  06E8               	decf	wreg,f,c
   453  0021D0  E1FD               	bnz	clear_1
   454                           
   455                           ;
   456                           ; Setup IVTBASE
   457                           ;
   458  0021D2  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   459  0021D4  6ED5               	movwf	213,c
   460  0021D6  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   461  0021D8  6ED6               	movwf	214,c
   462  0021DA  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   463  0021DC  6ED7               	movwf	215,c
   464  0021DE                     end_of_initialization:
   465                           	callstack 0
   466  0021DE                     __end_of__initialization:
   467                           	callstack 0
   468  0021DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   469  0021E0  6EF8               	movwf	tblptru,c
   470  0021E2  0100               	movlb	0
   471  0021E4  EF5A  F013         	goto	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMRAM
   474  00003A                     __pbssCOMRAM:
   475                           	callstack 0
   476  00003A                     _oldDistLeft:
   477                           	callstack 0
   478  00003A                     	ds	2
   479  00003C                     TMR4_ISR@CountCallBack:
   480                           	callstack 0
   481  00003C                     	ds	2
   482  00003E                     _delay:
   483                           	callstack 0
   484  00003E                     	ds	1
   485  00003F                     _curveMode:
   486                           	callstack 0
   487  00003F                     	ds	1
   488  000040                     _uart1RxLastError:
   489                           	callstack 0
   490  000040                     	ds	1
   491  000041                     _uart1RxCount:
   492                           	callstack 0
   493  000041                     	ds	1
   494  000042                     _uart1RxTail:
   495                           	callstack 0
   496  000042                     	ds	1
   497  000043                     _uart1RxHead:
   498                           	callstack 0
   499  000043                     	ds	1
   500  000044                     _uart1TxTail:
   501                           	callstack 0
   502  000044                     	ds	1
   503  000045                     _uart1TxHead:
   504                           	callstack 0
   505  000045                     	ds	1
   506  000046                     _smtPeriod:
   507                           	callstack 0
   508  000046                     	ds	4
   509  00004A                     _distFront:
   510                           	callstack 0
   511  00004A                     	ds	2
   512                           
   513                           	psect	dataCOMRAM
   514  00004C                     __pdataCOMRAM:
   515                           	callstack 0
   516  00004C                     _driveMode:
   517                           	callstack 0
   518  00004C                     	ds	1
   519                           
   520                           	psect	bssBANK0
   521  000060                     __pbssBANK0:
   522                           	callstack 0
   523  000060                     _uart1RxStatusBuffer:
   524                           	callstack 0
   525  000060                     	ds	8
   526  000068                     _uart1RxBuffer:
   527                           	callstack 0
   528  000068                     	ds	8
   529  000070                     _uart1TxBuffer:
   530                           	callstack 0
   531  000070                     	ds	8
   532  000078                     _smtWay:
   533                           	callstack 0
   534  000078                     	ds	4
   535  00007C                     _smtDuty:
   536                           	callstack 0
   537  00007C                     	ds	4
   538  000080                     _BatteryVolt:
   539                           	callstack 0
   540  000080                     	ds	2
   541  000082                     _reverseTime:
   542                           	callstack 0
   543  000082                     	ds	2
   544  000084                     _actMotorPow:
   545                           	callstack 0
   546  000084                     	ds	2
   547  000086                     _oldSpeed:
   548                           	callstack 0
   549  000086                     	ds	2
   550  000088                     _currentSpeed:
   551                           	callstack 0
   552  000088                     	ds	2
   553  00008A                     _setSpeed:
   554                           	callstack 0
   555  00008A                     	ds	2
   556  00008C                     _motPow:
   557                           	callstack 0
   558  00008C                     	ds	2
   559  00008E                     _middleOffSet:
   560                           	callstack 0
   561  00008E                     	ds	2
   562  000090                     _battCheckCount:
   563                           	callstack 0
   564  000090                     	ds	2
   565  000092                     _oldDistRight:
   566                           	callstack 0
   567  000092                     	ds	2
   568  000094                     _reverseCount:
   569                           	callstack 0
   570  000094                     	ds	2
   571  000096                     _distRightM:
   572                           	callstack 0
   573  000096                     	ds	2
   574  000098                     _distRight:
   575                           	callstack 0
   576  000098                     	ds	2
   577  00009A                     _distLeftM:
   578                           	callstack 0
   579  00009A                     	ds	2
   580  00009C                     _distLeft:
   581                           	callstack 0
   582  00009C                     	ds	2
   583  00009E                     _cycle10ms:
   584                           	callstack 0
   585  00009E                     	ds	1
   586                           
   587                           	psect	cstackBANK0
   588  00009F                     __pcstackBANK0:
   589                           	callstack 0
   590  00009F                     ___flmul@sign:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x0
   594  00009F                     	ds	1
   595  0000A0                     ___flmul@aexp:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x1
   599  0000A0                     	ds	1
   600  0000A1                     ___flmul@grs:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x2
   604  0000A1                     	ds	4
   605  0000A5                     ___flmul@bexp:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x6
   609  0000A5                     	ds	1
   610  0000A6                     ___flmul@prod:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x7
   614  0000A6                     	ds	4
   615  0000AA                     ___flmul@temp:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0xB
   619  0000AA                     	ds	2
   620  0000AC                     ?___fladd:
   621                           	callstack 0
   622  0000AC                     ___fladd@b:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0xD
   626  0000AC                     	ds	4
   627  0000B0                     ___fladd@a:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x11
   631  0000B0                     	ds	4
   632  0000B4                     ___fladd@signs:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x15
   636  0000B4                     	ds	1
   637  0000B5                     ___fladd@aexp:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x16
   641  0000B5                     	ds	1
   642  0000B6                     ___fladd@bexp:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x17
   646  0000B6                     	ds	1
   647  0000B7                     ___fladd@grs:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x18
   651  0000B7                     	ds	1
   652  0000B8                     ?___fltol:
   653                           	callstack 0
   654  0000B8                     ___fltol@f1:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x19
   658  0000B8                     	ds	4
   659  0000BC                     ??___fltol:
   660                           
   661                           ; 1 bytes @ 0x1D
   662  0000BC                     	ds	4
   663  0000C0                     ___fltol@sign1:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x21
   667  0000C0                     	ds	1
   668  0000C1                     ___fltol@exp1:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x22
   672  0000C1                     	ds	1
   673  0000C2                     ??_calcSteering:
   674  0000C2                     ??_calcSpeed:
   675  0000C2                     ??_calcMotorPow:
   676                           
   677                           ; 1 bytes @ 0x23
   678  0000C2                     	ds	2
   679  0000C4                     calcMotorPow@setSpeedDelta:
   680                           	callstack 0
   681  0000C4                     _calcSteering$3897:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x25
   685  0000C4                     	ds	2
   686  0000C6                     calcSteering@delta:
   687                           	callstack 0
   688  0000C6                     calcSpeed@speed:
   689                           	callstack 0
   690  0000C6                     calcMotorPow@oldSpeedDelta:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x27
   694  0000C6                     	ds	2
   695  0000C8                     calcMotorPow@addMPow:
   696                           	callstack 0
   697  0000C8                     startAccell@MPow:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x29
   701  0000C8                     	ds	4
   702                           
   703                           	psect	cstackCOMRAM
   704  000001                     __pcstackCOMRAM:
   705                           	callstack 0
   706  000001                     CCP3_DefaultCallBack@capturedValue:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x0
   710  000001                     	ds	2
   711  000003                     CCP3_CaptureISR@module:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2
   715  000003                     	ds	2
   716  000005                     CCP4_DefaultCallBack@capturedValue:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x4
   720  000005                     	ds	2
   721  000007                     CCP4_CaptureISR@module:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x6
   725  000007                     	ds	2
   726  000009                     ?_TMR5_ReadTimer:
   727                           	callstack 0
   728  000009                     TMR5_WriteTimer@timerVal:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x8
   732  000009                     	ds	2
   733  00000B                     ??_TMR5_ReadTimer:
   734  00000B                     
   735                           ; 1 bytes @ 0xA
   736  00000B                     	ds	2
   737  00000D                     TMR5_ReadTimer@readVal:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0xC
   741  00000D                     	ds	2
   742  00000F                     TMR5_ReadTimer@readValHigh:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0xE
   746  00000F                     	ds	1
   747  000010                     TMR5_ReadTimer@readValLow:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0xF
   751  000010                     	ds	1
   752  000011                     ??_UART1_tx_vect_isr:
   753  000011                     
   754                           ; 1 bytes @ 0x10
   755  000011                     	ds	1
   756  000012                     ??_UART1_rx_vect_isr:
   757                           
   758                           ; 1 bytes @ 0x11
   759  000012                     	ds	1
   760  000013                     ??_TMR4_ISR:
   761                           
   762                           ; 1 bytes @ 0x12
   763  000013                     	ds	1
   764  000014                     ??_TMR3_Initialize:
   765  000014                     ??_getCurve:
   766  000014                     ?_ADCC_GetSingleConversion:
   767                           	callstack 0
   768  000014                     ?___awdiv:
   769                           	callstack 0
   770  000014                     ?___aldiv:
   771                           	callstack 0
   772  000014                     INTERRUPT_Initialize@state:
   773                           	callstack 0
   774  000014                     UART1_SetFramingErrorHandler@interruptHandler:
   775                           	callstack 0
   776  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
   777                           	callstack 0
   778  000014                     UART1_SetErrorHandler@interruptHandler:
   779                           	callstack 0
   780  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
   781                           	callstack 0
   782  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
   783                           	callstack 0
   784  000014                     CCP3_SetCallBack@customCallBack:
   785                           	callstack 0
   786  000014                     CCP4_SetCallBack@customCallBack:
   787                           	callstack 0
   788  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
   789                           	callstack 0
   790  000014                     TMR4_SetInterruptHandler@InterruptHandler:
   791                           	callstack 0
   792  000014                     PWM7_LoadDutyValue@dutyValue:
   793                           	callstack 0
   794  000014                     PWM8_LoadDutyValue@dutyValue:
   795                           	callstack 0
   796  000014                     PWM5_LoadDutyValue@dutyValue:
   797                           	callstack 0
   798  000014                     PWM6_LoadDutyValue@dutyValue:
   799                           	callstack 0
   800  000014                     ___awdiv@dividend:
   801                           	callstack 0
   802  000014                     ___aldiv@dividend:
   803                           	callstack 0
   804  000014                     ___flge@ff1:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x13
   808  000014                     	ds	2
   809  000016                     ??_TMR5_Initialize:
   810  000016                     ??_PWM7_LoadDutyValue:
   811  000016                     ??_PWM8_LoadDutyValue:
   812  000016                     ??_PWM5_LoadDutyValue:
   813  000016                     ??_PWM6_LoadDutyValue:
   814  000016                     ??_ADCC_GetSingleConversion:
   815  000016                     getCurve@deltaRight:
   816                           	callstack 0
   817  000016                     ___awdiv@divisor:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x15
   821  000016                     	ds	2
   822  000018                     ADCC_GetSingleConversion@channel:
   823                           	callstack 0
   824  000018                     ___awdiv@counter:
   825                           	callstack 0
   826  000018                     getCurve@deltaLeft:
   827                           	callstack 0
   828  000018                     setMotor@motorPower:
   829                           	callstack 0
   830  000018                     ___aldiv@divisor:
   831                           	callstack 0
   832  000018                     ___flge@ff2:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x17
   836  000018                     	ds	1
   837  000019                     ___awdiv@sign:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x18
   841  000019                     	ds	1
   842  00001A                     ??_setMotor:
   843  00001A                     ___awdiv@quotient:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x19
   847  00001A                     	ds	2
   848  00001C                     ??___flge:
   849  00001C                     ?___xxtofl:
   850                           	callstack 0
   851  00001C                     ___aldiv@counter:
   852                           	callstack 0
   853  00001C                     setSteering@steering:
   854                           	callstack 0
   855  00001C                     ___xxtofl@val:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x1B
   859  00001C                     	ds	1
   860  00001D                     ___aldiv@sign:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0x1C
   864  00001D                     	ds	1
   865  00001E                     setSteering@steeringMode:
   866                           	callstack 0
   867  00001E                     ___aldiv@quotient:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x1D
   871  00001E                     	ds	1
   872  00001F                     ??_setSteering:
   873                           
   874                           ; 1 bytes @ 0x1E
   875  00001F                     	ds	1
   876  000020                     ??___xxtofl:
   877                           
   878                           ; 1 bytes @ 0x1F
   879  000020                     	ds	1
   880  000021                     setSteering@steeringF:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x20
   884  000021                     	ds	1
   885  000022                     ?_actSpeed:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x21
   889  000022                     	ds	1
   890  000023                     setSteering@steeringB:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x22
   894  000023                     	ds	1
   895  000024                     ___xxtofl@sign:
   896                           	callstack 0
   897  000024                     actSpeed@speed:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x23
   901  000024                     	ds	1
   902  000025                     ___xxtofl@exp:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x24
   906  000025                     	ds	1
   907  000026                     ___xxtofl@arg:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x25
   911  000026                     	ds	4
   912  00002A                     ?___flmul:
   913                           	callstack 0
   914  00002A                     ___flmul@b:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x29
   918  00002A                     	ds	4
   919  00002E                     ___flmul@a:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x2D
   923  00002E                     	ds	4
   924  000032                     ??___flmul:
   925                           
   926                           ; 1 bytes @ 0x31
   927  000032                     	ds	4
   928  000036                     ??___fladd:
   929                           
   930                           ; 1 bytes @ 0x35
   931  000036                     	ds	4
   932  00003A                     
   933                           ; 1 bytes @ 0x39
   934 ;;
   935 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   936 ;;
   937 ;; *************** function _main *****************
   938 ;; Defined at:
   939 ;;		line 8 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels required when called: 13
   959 ;; This function calls:
   960 ;;		_SYSTEM_Initialize
   961 ;;		_TMR4_SetInterruptHandler
   962 ;;		_loop
   963 ;; This function is called by:
   964 ;;		Startup code after reset
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text0
   969  0026B4                     __ptext0:
   970                           	callstack 0
   971  0026B4                     _main:
   972                           	callstack 18
   973  0026B4                     
   974                           ;main.c: 9:     SYSTEM_Initialize();
   975  0026B4  EC40  F010         	call	_SYSTEM_Initialize	;wreg free
   976  0026B8                     
   977                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
   978  0026B8  8ED2               	bsf	210,7,c	;volatile
   979  0026BA                     
   980                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
   981  0026BA  8CD2               	bsf	210,6,c	;volatile
   982                           
   983                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
   984  0026BC  0E02               	movlw	low _TMR4_10msISR
   985  0026BE  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
   986  0026C0  0E28               	movlw	high _TMR4_10msISR
   987  0026C2  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
   988  0026C4  ECEF  F013         	call	_TMR4_SetInterruptHandler	;wreg free
   989  0026C8                     l5862:
   990                           
   991                           ;main.c: 15:         loop();
   992  0026C8  EC16  F00D         	call	_loop	;wreg free
   993  0026CC  EF64  F013         	goto	l5862
   994  0026D0  EF57  F000         	goto	start
   995  0026D4                     __end_of_main:
   996                           	callstack 0
   997                           
   998 ;; *************** function _loop *****************
   999 ;; Defined at:
  1000 ;;		line 19 in file "main.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 12
  1021 ;; This function calls:
  1022 ;;		___xxtofl
  1023 ;;		_calcMotorPow
  1024 ;;		_calcSpeed
  1025 ;;		_calcSteering
  1026 ;;		_getBatteryVoltage
  1027 ;;		_getCurve
  1028 ;;		_getReverse
  1029 ;;		_setMotor
  1030 ;;		_setSteering
  1031 ;;		_startAccell
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text1
  1038  001A2C                     __ptext1:
  1039                           	callstack 0
  1040  001A2C                     _loop:
  1041                           	callstack 18
  1042  001A2C                     
  1043                           ;main.c: 20:     setMotor(0);
  1044  001A2C  0E00               	movlw	0
  1045  001A2E  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1046  001A30  0E00               	movlw	0
  1047  001A32  6E18               	movwf	setMotor@motorPower^0,c
  1048  001A34  EC8A  F00D         	call	_setMotor	;wreg free
  1049                           
  1050                           ;main.c: 21:     setSteering(0, Front);
  1051  001A38  0E00               	movlw	0
  1052  001A3A  6E1D               	movwf	(setSteering@steering+1)^0,c
  1053  001A3C  0E00               	movlw	0
  1054  001A3E  6E1C               	movwf	setSteering@steering^0,c
  1055  001A40  0E03               	movlw	3
  1056  001A42  6E1E               	movwf	setSteering@steeringMode^0,c
  1057  001A44  ECFF  F008         	call	_setSteering	;wreg free
  1058  001A48                     l1220:
  1059  001A48  B8CB               	btfsc	203,4,c	;volatile
  1060  001A4A  EF29  F00D         	goto	u4651
  1061  001A4E  EF2B  F00D         	goto	u4650
  1062  001A52                     u4651:
  1063  001A52  EF24  F00D         	goto	l1220
  1064  001A56                     u4650:
  1065  001A56                     l5818:
  1066  001A56  0100               	movlb	0	; () banked
  1067  001A58  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1068  001A5A  B4D8               	btfsc	status,2,c
  1069  001A5C  EF32  F00D         	goto	u4661
  1070  001A60  EF34  F00D         	goto	u4660
  1071  001A64                     u4661:
  1072  001A64  EF2B  F00D         	goto	l5818
  1073  001A68                     u4660:
  1074  001A68                     
  1075                           ; BSR set to: 0
  1076                           ;main.c: 26:         cycle10ms = 0;
  1077  001A68  0E00               	movlw	0
  1078  001A6A  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1079  001A6C                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 28:         getBatteryVoltage();
  1082  001A6C  ECC2  F013         	call	_getBatteryVoltage	;wreg free
  1083  001A70                     
  1084                           ;main.c: 29:     } while (BatteryVolt < ((0) * 409.6));
  1085  001A70  C080  F01C         	movff	_BatteryVolt,___xxtofl@val
  1086  001A74  C081  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1087  001A78  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1088  001A7A  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1089  001A7C  0E00               	movlw	0
  1090  001A7E  EC25  F008         	call	___xxtofl
  1091  001A82  BE1F               	btfsc	(?___xxtofl+3)^0,7,c
  1092  001A84  EF46  F00D         	goto	u4671
  1093  001A88  EF48  F00D         	goto	u4670
  1094  001A8C                     u4671:
  1095  001A8C  EF2B  F00D         	goto	l5818
  1096  001A90                     u4670:
  1097  001A90                     
  1098                           ;main.c: 31:     startAccell();
  1099  001A90  EC73  F00A         	call	_startAccell	;wreg free
  1100  001A94                     
  1101                           ;main.c: 33:     driveMode = Straight;
  1102  001A94  0E01               	movlw	1
  1103  001A96  6E4C               	movwf	_driveMode^0,c
  1104  001A98                     
  1105                           ;main.c: 34:     curveMode = OutCurve;
  1106  001A98  0E00               	movlw	0
  1107  001A9A  6E3F               	movwf	_curveMode^0,c
  1108  001A9C                     
  1109                           ;main.c: 35:     oldDistLeft = distLeft;
  1110  001A9C  C09C  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  1111  001AA0  C09D  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1112  001AA4                     
  1113                           ;main.c: 36:     oldDistRight = distRight;
  1114  001AA4  C098  F092         	movff	_distRight,_oldDistRight	;volatile
  1115  001AA8  C099  F093         	movff	_distRight+1,_oldDistRight+1	;volatile
  1116  001AAC                     
  1117                           ;main.c: 37:     cycle10ms = 0;
  1118  001AAC  0E00               	movlw	0
  1119  001AAE  0100               	movlb	0	; () banked
  1120  001AB0  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1121  001AB2                     l5838:
  1122  001AB2  0100               	movlb	0	; () banked
  1123  001AB4  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1124  001AB6  B4D8               	btfsc	status,2,c
  1125  001AB8  EF60  F00D         	goto	u4681
  1126  001ABC  EF62  F00D         	goto	u4680
  1127  001AC0                     u4681:
  1128  001AC0  EF59  F00D         	goto	l5838
  1129  001AC4                     u4680:
  1130  001AC4                     
  1131                           ; BSR set to: 0
  1132                           ;main.c: 40:         cycle10ms = 0;
  1133  001AC4  0E00               	movlw	0
  1134  001AC6  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1135  001AC8                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 42:         if (!PORTBbits.RB5) {
  1138  001AC8  BACB               	btfsc	203,5,c	;volatile
  1139  001ACA  EF69  F00D         	goto	u4691
  1140  001ACE  EF6B  F00D         	goto	u4690
  1141  001AD2                     u4691:
  1142  001AD2  EF7D  F00D         	goto	l5848
  1143  001AD6                     u4690:
  1144  001AD6                     
  1145                           ; BSR set to: 0
  1146                           ;main.c: 43:             setSpeed = 0;
  1147  001AD6  0E00               	movlw	0
  1148  001AD8  6F8B               	movwf	(_setSpeed+1)& (0+255),b
  1149  001ADA  0E00               	movlw	0
  1150  001ADC  6F8A               	movwf	_setSpeed& (0+255),b
  1151                           
  1152                           ;main.c: 44:             actMotorPow = 0;
  1153  001ADE  0E00               	movlw	0
  1154  001AE0  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1155  001AE2  0E00               	movlw	0
  1156  001AE4  6F84               	movwf	_actMotorPow& (0+255),b
  1157  001AE6                     
  1158                           ; BSR set to: 0
  1159                           ;main.c: 45:             setSteering(0, Front);
  1160  001AE6  0E00               	movlw	0
  1161  001AE8  6E1D               	movwf	(setSteering@steering+1)^0,c
  1162  001AEA  0E00               	movlw	0
  1163  001AEC  6E1C               	movwf	setSteering@steering^0,c
  1164  001AEE  0E03               	movlw	3
  1165  001AF0  6E1E               	movwf	setSteering@steeringMode^0,c
  1166  001AF2  ECFF  F008         	call	_setSteering	;wreg free
  1167                           
  1168                           ;main.c: 46:             break;
  1169  001AF6  EF89  F00D         	goto	l1235
  1170  001AFA                     l5848:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 55:         getCurve();
  1174  001AFA  ECE2  F004         	call	_getCurve	;wreg free
  1175                           
  1176                           ;main.c: 56:         getReverse();
  1177  001AFE  EC98  F00C         	call	_getReverse	;wreg free
  1178  001B02                     
  1179                           ;main.c: 58:         calcSteering();
  1180  001B02  EC08  F006         	call	_calcSteering	;wreg free
  1181  001B06                     
  1182                           ;main.c: 59:         calcSpeed();
  1183  001B06  EC20  F007         	call	_calcSpeed	;wreg free
  1184  001B0A                     
  1185                           ;main.c: 60:         calcMotorPow();
  1186  001B0A  ECD1  F009         	call	_calcMotorPow	;wreg free
  1187  001B0E  EF59  F00D         	goto	l5838
  1188  001B12                     l1235:
  1189  001B12  0012               	return		;funcret
  1190  001B14                     __end_of_loop:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _startAccell *****************
  1194 ;; Defined at:
  1195 ;;		line 100 in file "main.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;		None
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  MPow            4   41[BANK0 ] float 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;Total ram usage:        4 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 11
  1216 ;; This function calls:
  1217 ;;		___flge
  1218 ;;		___flmul
  1219 ;;		___fltol
  1220 ;;		___xxtofl
  1221 ;;		_calcSteering
  1222 ;;		_setMotor
  1223 ;;		_setSteering
  1224 ;; This function is called by:
  1225 ;;		_loop
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text2
  1230  0014E6                     __ptext2:
  1231                           	callstack 0
  1232  0014E6                     _startAccell:
  1233                           	callstack 18
  1234  0014E6                     
  1235                           ;main.c: 101:     setSteering(0, Front);
  1236  0014E6  0E00               	movlw	0
  1237  0014E8  6E1D               	movwf	(setSteering@steering+1)^0,c
  1238  0014EA  0E00               	movlw	0
  1239  0014EC  6E1C               	movwf	setSteering@steering^0,c
  1240  0014EE  0E03               	movlw	3
  1241  0014F0  6E1E               	movwf	setSteering@steeringMode^0,c
  1242  0014F2  ECFF  F008         	call	_setSteering	;wreg free
  1243  0014F6                     
  1244                           ;main.c: 102:     driveMode = Accel;
  1245  0014F6  0E00               	movlw	0
  1246  0014F8  6E4C               	movwf	_driveMode^0,c
  1247  0014FA                     
  1248                           ;main.c: 104:     actMotorPow = (40);
  1249  0014FA  0E00               	movlw	0
  1250  0014FC  0100               	movlb	0	; () banked
  1251  0014FE  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1252  001500  0E28               	movlw	40
  1253  001502  6F84               	movwf	_actMotorPow& (0+255),b
  1254                           
  1255                           ;main.c: 105:     float MPow = actMotorPow;
  1256  001504  C084  F01C         	movff	_actMotorPow,___xxtofl@val
  1257  001508  C085  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1258  00150C  0E00               	movlw	0
  1259  00150E  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1260  001510  0EFF               	movlw	-1
  1261  001512  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1262  001514  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1263  001516  0E01               	movlw	1
  1264  001518  EC25  F008         	call	___xxtofl
  1265  00151C  C01C  F0C8         	movff	?___xxtofl,startAccell@MPow
  1266  001520  C01D  F0C9         	movff	?___xxtofl+1,startAccell@MPow+1
  1267  001524  C01E  F0CA         	movff	?___xxtofl+2,startAccell@MPow+2
  1268  001528  C01F  F0CB         	movff	?___xxtofl+3,startAccell@MPow+3
  1269                           
  1270                           ;main.c: 107:     while (MPow < (230)) {
  1271  00152C  EFD3  F00A         	goto	l5712
  1272  001530                     l5702:
  1273                           
  1274                           ;main.c: 108:         MPow *= (1.1);
  1275  001530  C0C8  F02A         	movff	startAccell@MPow,___flmul@b
  1276  001534  C0C9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1277  001538  C0CA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1278  00153C  C0CB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1279  001540  0ECD               	movlw	205
  1280  001542  6E2E               	movwf	___flmul@a^0,c
  1281  001544  0ECC               	movlw	204
  1282  001546  6E2F               	movwf	(___flmul@a+1)^0,c
  1283  001548  0E8C               	movlw	140
  1284  00154A  6E30               	movwf	(___flmul@a+2)^0,c
  1285  00154C  0E3F               	movlw	63
  1286  00154E  6E31               	movwf	(___flmul@a+3)^0,c
  1287  001550  ECBA  F002         	call	___flmul	;wreg free
  1288  001554  C02A  F0C8         	movff	?___flmul,startAccell@MPow
  1289  001558  C02B  F0C9         	movff	?___flmul+1,startAccell@MPow+1
  1290  00155C  C02C  F0CA         	movff	?___flmul+2,startAccell@MPow+2
  1291  001560  C02D  F0CB         	movff	?___flmul+3,startAccell@MPow+3
  1292  001564                     
  1293                           ;main.c: 109:         actMotorPow = (int16_t) MPow;
  1294  001564  C0C8  F0B8         	movff	startAccell@MPow,___fltol@f1
  1295  001568  C0C9  F0B9         	movff	startAccell@MPow+1,___fltol@f1+1
  1296  00156C  C0CA  F0BA         	movff	startAccell@MPow+2,___fltol@f1+2
  1297  001570  C0CB  F0BB         	movff	startAccell@MPow+3,___fltol@f1+3
  1298  001574  EC92  F00B         	call	___fltol	;wreg free
  1299  001578  C0B8  F084         	movff	?___fltol,_actMotorPow
  1300  00157C  C0B9  F085         	movff	?___fltol+1,_actMotorPow+1
  1301  001580                     
  1302                           ;main.c: 110:         setMotor(actMotorPow);
  1303  001580  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1304  001584  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1305  001588  EC8A  F00D         	call	_setMotor	;wreg free
  1306                           
  1307                           ;main.c: 112:         calcSteering();
  1308  00158C  EC08  F006         	call	_calcSteering	;wreg free
  1309  001590                     
  1310                           ;main.c: 114:         cycle10ms = 0;
  1311  001590  0E00               	movlw	0
  1312  001592  0100               	movlb	0	; () banked
  1313  001594  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1314  001596                     l5710:
  1315                           
  1316                           ; BSR set to: 0
  1317  001596  519E               	movf	_cycle10ms& (0+255),w,b	;volatile
  1318  001598  B4D8               	btfsc	status,2,c
  1319  00159A  EFD1  F00A         	goto	u4511
  1320  00159E  EFD3  F00A         	goto	u4510
  1321  0015A2                     u4511:
  1322  0015A2  EFCB  F00A         	goto	l5710
  1323  0015A6                     u4510:
  1324  0015A6                     l5712:
  1325                           
  1326                           ;main.c: 107:     while (MPow < (230)) {
  1327  0015A6  C0C8  F014         	movff	startAccell@MPow,___flge@ff1
  1328  0015AA  C0C9  F015         	movff	startAccell@MPow+1,___flge@ff1+1
  1329  0015AE  C0CA  F016         	movff	startAccell@MPow+2,___flge@ff1+2
  1330  0015B2  C0CB  F017         	movff	startAccell@MPow+3,___flge@ff1+3
  1331  0015B6  0E00               	movlw	0
  1332  0015B8  6E18               	movwf	___flge@ff2^0,c
  1333  0015BA  0E00               	movlw	0
  1334  0015BC  6E19               	movwf	(___flge@ff2+1)^0,c
  1335  0015BE  0E66               	movlw	102
  1336  0015C0  6E1A               	movwf	(___flge@ff2+2)^0,c
  1337  0015C2  0E43               	movlw	67
  1338  0015C4  6E1B               	movwf	(___flge@ff2+3)^0,c
  1339  0015C6  EC16  F00C         	call	___flge	;wreg free
  1340  0015CA  A0D8               	btfss	status,0,c
  1341  0015CC  EFEA  F00A         	goto	u4521
  1342  0015D0  EFEC  F00A         	goto	u4520
  1343  0015D4                     u4521:
  1344  0015D4  EF98  F00A         	goto	l5702
  1345  0015D8                     u4520:
  1346  0015D8                     
  1347                           ;main.c: 118:     actMotorPow = (230);
  1348  0015D8  0E00               	movlw	0
  1349  0015DA  0100               	movlb	0	; () banked
  1350  0015DC  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  1351  0015DE  0EE6               	movlw	230
  1352  0015E0  6F84               	movwf	_actMotorPow& (0+255),b
  1353  0015E2                     
  1354                           ; BSR set to: 0
  1355                           ;main.c: 119:     setMotor(actMotorPow);
  1356  0015E2  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  1357  0015E6  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1358  0015EA  EC8A  F00D         	call	_setMotor	;wreg free
  1359  0015EE                     
  1360                           ;main.c: 122:     cycle10ms = 0;
  1361  0015EE  0E00               	movlw	0
  1362  0015F0  0100               	movlb	0	; () banked
  1363  0015F2  6F9E               	movwf	_cycle10ms& (0+255),b	;volatile
  1364                           
  1365                           ;main.c: 123:     while (cycle10ms < ((50) - (20))){
  1366  0015F4  EFFE  F00A         	goto	l5722
  1367  0015F8                     l5720:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;main.c: 124:         calcSteering();
  1371  0015F8  EC08  F006         	call	_calcSteering	;wreg free
  1372  0015FC                     l5722:
  1373                           
  1374                           ;main.c: 123:     while (cycle10ms < ((50) - (20))){
  1375  0015FC  0E1D               	movlw	29
  1376  0015FE  0100               	movlb	0	; () banked
  1377  001600  659E               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  1378  001602  EF05  F00B         	goto	u4531
  1379  001606  EF07  F00B         	goto	u4530
  1380  00160A                     u4531:
  1381  00160A  EFFC  F00A         	goto	l5720
  1382  00160E                     u4530:
  1383  00160E                     
  1384                           ; BSR set to: 0
  1385                           ;main.c: 126:     driveMode = Straight;
  1386  00160E  0E01               	movlw	1
  1387  001610  6E4C               	movwf	_driveMode^0,c
  1388  001612                     
  1389                           ; BSR set to: 0
  1390                           ;main.c: 127:     calcSteering();
  1391  001612  EC08  F006         	call	_calcSteering	;wreg free
  1392  001616  0012               	return		;funcret
  1393  001618                     __end_of_startAccell:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _calcSteering *****************
  1397 ;; Defined at:
  1398 ;;		line 235 in file "main.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  delta           2   39[BANK0 ] short 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;Total ram usage:        6 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 10
  1419 ;; This function calls:
  1420 ;;		___awdiv
  1421 ;;		___flmul
  1422 ;;		___fltol
  1423 ;;		___xxtofl
  1424 ;;		_setSteering
  1425 ;; This function is called by:
  1426 ;;		_loop
  1427 ;;		_startAccell
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text3
  1432  000C10                     __ptext3:
  1433                           	callstack 0
  1434  000C10                     _calcSteering:
  1435                           	callstack 18
  1436  000C10                     
  1437                           ;main.c: 236:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  1438  000C10  0EF3               	movlw	243
  1439  000C12  6E2E               	movwf	___flmul@a^0,c
  1440  000C14  0E04               	movlw	4
  1441  000C16  6E2F               	movwf	(___flmul@a+1)^0,c
  1442  000C18  0EB5               	movlw	181
  1443  000C1A  6E30               	movwf	(___flmul@a+2)^0,c
  1444  000C1C  0E3F               	movlw	63
  1445  000C1E  6E31               	movwf	(___flmul@a+3)^0,c
  1446  000C20  C08E  F01C         	movff	_middleOffSet,___xxtofl@val
  1447  000C24  C08F  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  1448  000C28  0E00               	movlw	0
  1449  000C2A  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1450  000C2C  0EFF               	movlw	-1
  1451  000C2E  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1452  000C30  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1453  000C32  0E01               	movlw	1
  1454  000C34  EC25  F008         	call	___xxtofl
  1455  000C38  C01C  F02A         	movff	?___xxtofl,___flmul@b
  1456  000C3C  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  1457  000C40  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  1458  000C44  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  1459  000C48  ECBA  F002         	call	___flmul	;wreg free
  1460  000C4C  C02A  F0B8         	movff	?___flmul,___fltol@f1
  1461  000C50  C02B  F0B9         	movff	?___flmul+1,___fltol@f1+1
  1462  000C54  C02C  F0BA         	movff	?___flmul+2,___fltol@f1+2
  1463  000C58  C02D  F0BB         	movff	?___flmul+3,___fltol@f1+3
  1464  000C5C  EC92  F00B         	call	___fltol	;wreg free
  1465  000C60  C098  F0C2         	movff	_distRight,??_calcSteering	;volatile
  1466  000C64  C099  F0C3         	movff	_distRight+1,??_calcSteering+1	;volatile
  1467  000C68  0100               	movlb	0	; () banked
  1468  000C6A  1FC2               	comf	??_calcSteering& (0+255),f,b
  1469  000C6C  1FC3               	comf	(??_calcSteering+1)& (0+255),f,b
  1470  000C6E  4BC2               	infsnz	??_calcSteering& (0+255),f,b
  1471  000C70  2BC3               	incf	(??_calcSteering+1)& (0+255),f,b
  1472  000C72  51B8               	movf	?___fltol& (0+255),w,b
  1473  000C74  5FC2               	subwf	??_calcSteering& (0+255),f,b
  1474  000C76  51B9               	movf	(?___fltol+1)& (0+255),w,b
  1475  000C78  5BC3               	subwfb	(??_calcSteering+1)& (0+255),f,b
  1476  000C7A  519C               	movf	_distLeft& (0+255),w,b	;volatile
  1477  000C7C  25C2               	addwf	??_calcSteering& (0+255),w,b
  1478  000C7E  6FC6               	movwf	calcSteering@delta& (0+255),b
  1479  000C80  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  1480  000C82  21C3               	addwfc	(??_calcSteering+1)& (0+255),w,b
  1481  000C84  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1482                           
  1483                           ;main.c: 240:     switch (driveMode) {
  1484  000C86  EF6D  F006         	goto	l5454
  1485  000C8A                     l1314:
  1486  000C8A                     l5444:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;main.c: 246:             if (delta > (25)) {
  1490  000C8A  BFC7               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  1491  000C8C  EF51  F006         	goto	u4081
  1492  000C90  51C7               	movf	(calcSteering@delta+1)& (0+255),w,b
  1493  000C92  E109               	bnz	u4080
  1494  000C94  0E1A               	movlw	26
  1495  000C96  5DC6               	subwf	calcSteering@delta& (0+255),w,b
  1496  000C98  A0D8               	btfss	status,0,c
  1497  000C9A  EF51  F006         	goto	u4081
  1498  000C9E  EF53  F006         	goto	u4080
  1499  000CA2                     u4081:
  1500  000CA2  EF59  F006         	goto	l5448
  1501  000CA6                     u4080:
  1502  000CA6                     
  1503                           ; BSR set to: 0
  1504                           ;main.c: 247:                 delta = (25);
  1505  000CA6  0E00               	movlw	0
  1506  000CA8  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1507  000CAA  0E19               	movlw	25
  1508  000CAC  6FC6               	movwf	calcSteering@delta& (0+255),b
  1509                           
  1510                           ;main.c: 248:             } else if (delta < -(25)) {
  1511  000CAE  EFF6  F006         	goto	l5480
  1512  000CB2                     l5448:
  1513                           
  1514                           ; BSR set to: 0
  1515  000CB2  AFC7               	btfss	(calcSteering@delta+1)& (0+255),7,b
  1516  000CB4  EF65  F006         	goto	u4091
  1517  000CB8  0EE7               	movlw	231
  1518  000CBA  5DC6               	subwf	calcSteering@delta& (0+255),w,b
  1519  000CBC  0EFF               	movlw	255
  1520  000CBE  59C7               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  1521  000CC0  B0D8               	btfsc	status,0,c
  1522  000CC2  EF65  F006         	goto	u4091
  1523  000CC6  EF67  F006         	goto	u4090
  1524  000CCA                     u4091:
  1525  000CCA  EF8E  F006         	goto	l1319
  1526  000CCE                     u4090:
  1527  000CCE                     
  1528                           ; BSR set to: 0
  1529                           ;main.c: 249:                 delta = -(25);
  1530  000CCE  0EFF               	movlw	255
  1531  000CD0  6FC7               	movwf	(calcSteering@delta+1)& (0+255),b
  1532  000CD2  0EE7               	movlw	231
  1533  000CD4  6FC6               	movwf	calcSteering@delta& (0+255),b
  1534  000CD6  EFF6  F006         	goto	l5480
  1535  000CDA                     l5454:
  1536                           
  1537                           ; BSR set to: 0
  1538  000CDA  504C               	movf	_driveMode^0,w,c
  1539  000CDC  6FC2               	movwf	??_calcSteering& (0+255),b
  1540  000CDE  6BC3               	clrf	(??_calcSteering+1)& (0+255),b
  1541                           
  1542                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1543                           ; Switch size 1, requested type "simple"
  1544                           ; Number of cases is 1, Range of values is 0 to 0
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            4     3 (average)
  1548                           ;	Chosen strategy is simple_byte
  1549  000CE0  51C3               	movf	(??_calcSteering+1)& (0+255),w,b
  1550  000CE2  0A00               	xorlw	0	; case 0
  1551  000CE4  B4D8               	btfsc	status,2,c
  1552  000CE6  EF77  F006         	goto	l6014
  1553  000CEA  EFF6  F006         	goto	l5480
  1554  000CEE                     l6014:
  1555                           
  1556                           ; BSR set to: 0
  1557                           ; Switch size 1, requested type "simple"
  1558                           ; Number of cases is 5, Range of values is 0 to 6
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte           16     9 (average)
  1562                           ;	Chosen strategy is simple_byte
  1563  000CEE  51C2               	movf	??_calcSteering& (0+255),w,b
  1564  000CF0  0A00               	xorlw	0	; case 0
  1565  000CF2  B4D8               	btfsc	status,2,c
  1566  000CF4  EF45  F006         	goto	l1314
  1567  000CF8  0A01               	xorlw	1	; case 1
  1568  000CFA  B4D8               	btfsc	status,2,c
  1569  000CFC  EF45  F006         	goto	l5444
  1570  000D00  0A03               	xorlw	3	; case 2
  1571  000D02  B4D8               	btfsc	status,2,c
  1572  000D04  EF45  F006         	goto	l5444
  1573  000D08  0A07               	xorlw	7	; case 5
  1574  000D0A  B4D8               	btfsc	status,2,c
  1575  000D0C  EF45  F006         	goto	l5444
  1576  000D10  0A03               	xorlw	3	; case 6
  1577  000D12  B4D8               	btfsc	status,2,c
  1578  000D14  EF45  F006         	goto	l5444
  1579  000D18  EFF6  F006         	goto	l5480
  1580  000D1C                     l1319:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;main.c: 256:     switch (driveMode) {
  1584  000D1C  EFF6  F006         	goto	l5480
  1585  000D20                     l5456:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 258:             setSteering(delta, Ratio);
  1589  000D20  C0C6  F01C         	movff	calcSteering@delta,setSteering@steering
  1590  000D24  C0C7  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1591  000D28  0E02               	movlw	2
  1592  000D2A  6E1E               	movwf	setSteering@steeringMode^0,c
  1593  000D2C  ECFF  F008         	call	_setSteering	;wreg free
  1594                           
  1595                           ;main.c: 259:             break;
  1596  000D30  EF1F  F007         	goto	l1334
  1597  000D34                     l5458:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;main.c: 261:             setSteering(delta, Front);
  1601  000D34  C0C6  F01C         	movff	calcSteering@delta,setSteering@steering
  1602  000D38  C0C7  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  1603  000D3C  0E03               	movlw	3
  1604  000D3E  6E1E               	movwf	setSteering@steeringMode^0,c
  1605  000D40  ECFF  F008         	call	_setSteering	;wreg free
  1606                           
  1607                           ;main.c: 262:             break;
  1608  000D44  EF1F  F007         	goto	l1334
  1609  000D48                     l5460:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;main.c: 264:             setSteering(delta / (2), Front);
  1613  000D48  C0C6  F014         	movff	calcSteering@delta,___awdiv@dividend
  1614  000D4C  C0C7  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  1615  000D50  0E00               	movlw	0
  1616  000D52  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1617  000D54  0E02               	movlw	2
  1618  000D56  6E16               	movwf	___awdiv@divisor^0,c
  1619  000D58  ECC3  F00E         	call	___awdiv	;wreg free
  1620  000D5C  C014  F0C4         	movff	?___awdiv,_calcSteering$3897
  1621  000D60  C015  F0C5         	movff	?___awdiv+1,_calcSteering$3897+1
  1622                           
  1623                           ;main.c: 264:             setSteering(delta / (2), Front);
  1624  000D64  C0C4  F01C         	movff	_calcSteering$3897,setSteering@steering
  1625  000D68  C0C5  F01D         	movff	_calcSteering$3897+1,setSteering@steering+1
  1626  000D6C  0E03               	movlw	3
  1627  000D6E  6E1E               	movwf	setSteering@steeringMode^0,c
  1628  000D70  ECFF  F008         	call	_setSteering	;wreg free
  1629                           
  1630                           ;main.c: 266:             break;
  1631  000D74  EF1F  F007         	goto	l1334
  1632  000D78                     l5462:
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;main.c: 268:             setSteering(-(65), Inverted);
  1636  000D78  0EFF               	movlw	255
  1637  000D7A  6E1D               	movwf	(setSteering@steering+1)^0,c
  1638  000D7C  0EBF               	movlw	191
  1639  000D7E  6E1C               	movwf	setSteering@steering^0,c
  1640  000D80  0E00               	movlw	0
  1641  000D82  6E1E               	movwf	setSteering@steeringMode^0,c
  1642  000D84  ECFF  F008         	call	_setSteering	;wreg free
  1643                           
  1644                           ;main.c: 269:             break;
  1645  000D88  EF1F  F007         	goto	l1334
  1646  000D8C                     l5464:
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;main.c: 271:             setSteering((65), Inverted);
  1650  000D8C  0E00               	movlw	0
  1651  000D8E  6E1D               	movwf	(setSteering@steering+1)^0,c
  1652  000D90  0E41               	movlw	65
  1653  000D92  6E1C               	movwf	setSteering@steering^0,c
  1654  000D94  0E00               	movlw	0
  1655  000D96  6E1E               	movwf	setSteering@steeringMode^0,c
  1656  000D98  ECFF  F008         	call	_setSteering	;wreg free
  1657                           
  1658                           ;main.c: 272:             break;
  1659  000D9C  EF1F  F007         	goto	l1334
  1660  000DA0                     l5466:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;main.c: 274:             if (curveMode == InCurve) {
  1664  000DA0  0E02               	movlw	2
  1665  000DA2  183F               	xorwf	_curveMode^0,w,c
  1666  000DA4  A4D8               	btfss	status,2,c
  1667  000DA6  EFD7  F006         	goto	u4101
  1668  000DAA  EFD9  F006         	goto	u4100
  1669  000DAE                     u4101:
  1670  000DAE  EF90  F006         	goto	l5456
  1671  000DB2                     u4100:
  1672  000DB2                     
  1673                           ; BSR set to: 0
  1674                           ;main.c: 275:                 setSteering((65), Ratio);
  1675  000DB2  0E00               	movlw	0
  1676  000DB4  6E1D               	movwf	(setSteering@steering+1)^0,c
  1677  000DB6  0E41               	movlw	65
  1678  000DB8  6E1C               	movwf	setSteering@steering^0,c
  1679  000DBA  0E02               	movlw	2
  1680  000DBC  6E1E               	movwf	setSteering@steeringMode^0,c
  1681  000DBE  ECFF  F008         	call	_setSteering	;wreg free
  1682                           
  1683                           ;main.c: 276:             } else {
  1684  000DC2  EF1F  F007         	goto	l1334
  1685  000DC6                     l5472:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 281:             if (curveMode == InCurve) {
  1689  000DC6  0E02               	movlw	2
  1690  000DC8  183F               	xorwf	_curveMode^0,w,c
  1691  000DCA  A4D8               	btfss	status,2,c
  1692  000DCC  EFEA  F006         	goto	u4111
  1693  000DD0  EFEC  F006         	goto	u4110
  1694  000DD4                     u4111:
  1695  000DD4  EF90  F006         	goto	l5456
  1696  000DD8                     u4110:
  1697  000DD8                     
  1698                           ; BSR set to: 0
  1699                           ;main.c: 282:                 setSteering(-(65), Ratio);
  1700  000DD8  0EFF               	movlw	255
  1701  000DDA  6E1D               	movwf	(setSteering@steering+1)^0,c
  1702  000DDC  0EBF               	movlw	191
  1703  000DDE  6E1C               	movwf	setSteering@steering^0,c
  1704  000DE0  0E02               	movlw	2
  1705  000DE2  6E1E               	movwf	setSteering@steeringMode^0,c
  1706  000DE4  ECFF  F008         	call	_setSteering	;wreg free
  1707                           
  1708                           ;main.c: 283:             } else {
  1709  000DE8  EF1F  F007         	goto	l1334
  1710  000DEC                     l5480:
  1711                           
  1712                           ; BSR set to: 0
  1713  000DEC  504C               	movf	_driveMode^0,w,c
  1714  000DEE  6FC2               	movwf	??_calcSteering& (0+255),b
  1715  000DF0  6BC3               	clrf	(??_calcSteering+1)& (0+255),b
  1716                           
  1717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1718                           ; Switch size 1, requested type "simple"
  1719                           ; Number of cases is 1, Range of values is 0 to 0
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte            4     3 (average)
  1723                           ;	Chosen strategy is simple_byte
  1724  000DF2  51C3               	movf	(??_calcSteering+1)& (0+255),w,b
  1725  000DF4  0A00               	xorlw	0	; case 0
  1726  000DF6  B4D8               	btfsc	status,2,c
  1727  000DF8  EF00  F007         	goto	l6016
  1728  000DFC  EF1F  F007         	goto	l1334
  1729  000E00                     l6016:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ; Switch size 1, requested type "simple"
  1733                           ; Number of cases is 7, Range of values is 0 to 6
  1734                           ; switch strategies available:
  1735                           ; Name         Instructions Cycles
  1736                           ; simple_byte           22    12 (average)
  1737                           ;	Chosen strategy is simple_byte
  1738  000E00  51C2               	movf	??_calcSteering& (0+255),w,b
  1739  000E02  0A00               	xorlw	0	; case 0
  1740  000E04  B4D8               	btfsc	status,2,c
  1741  000E06  EFA4  F006         	goto	l5460
  1742  000E0A  0A01               	xorlw	1	; case 1
  1743  000E0C  B4D8               	btfsc	status,2,c
  1744  000E0E  EF9A  F006         	goto	l5458
  1745  000E12  0A03               	xorlw	3	; case 2
  1746  000E14  B4D8               	btfsc	status,2,c
  1747  000E16  EF90  F006         	goto	l5456
  1748  000E1A  0A01               	xorlw	1	; case 3
  1749  000E1C  B4D8               	btfsc	status,2,c
  1750  000E1E  EFBC  F006         	goto	l5462
  1751  000E22  0A07               	xorlw	7	; case 4
  1752  000E24  B4D8               	btfsc	status,2,c
  1753  000E26  EFC6  F006         	goto	l5464
  1754  000E2A  0A01               	xorlw	1	; case 5
  1755  000E2C  B4D8               	btfsc	status,2,c
  1756  000E2E  EFD0  F006         	goto	l5466
  1757  000E32  0A03               	xorlw	3	; case 6
  1758  000E34  B4D8               	btfsc	status,2,c
  1759  000E36  EFE3  F006         	goto	l5472
  1760  000E3A  EF1F  F007         	goto	l1334
  1761  000E3E                     l1334:
  1762  000E3E  0012               	return		;funcret
  1763  000E40                     __end_of_calcSteering:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _setSteering *****************
  1767 ;; Defined at:
  1768 ;;		line 398 in file "main.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  steering        2   27[COMRAM] short 
  1771 ;;  steeringMode    1   29[COMRAM] enum E17304
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  steeringB       2   34[COMRAM] short 
  1774 ;;  steeringF       2   32[COMRAM] short 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      void 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1784 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;Total ram usage:        9 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 9
  1791 ;; This function calls:
  1792 ;;		_PWM5_LoadDutyValue
  1793 ;;		_PWM6_LoadDutyValue
  1794 ;;		___awdiv
  1795 ;; This function is called by:
  1796 ;;		_loop
  1797 ;;		_startAccell
  1798 ;;		_calcSteering
  1799 ;;		_checkBatt
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text4
  1804  0011FE                     __ptext4:
  1805                           	callstack 0
  1806  0011FE                     _setSteering:
  1807                           	callstack 19
  1808  0011FE  0E00               	movlw	0
  1809  001200  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1810  001202  0E00               	movlw	0
  1811  001204  6E23               	movwf	setSteering@steeringB^0,c
  1812                           
  1813                           ;main.c: 400:     switch (steeringMode) {
  1814  001206  EF53  F009         	goto	l3866
  1815  00120A                     l1377:
  1816                           
  1817                           ;main.c: 402:             steeringF = (+steering);
  1818  00120A  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1819  00120E  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1820                           
  1821                           ;main.c: 403:             steeringB = -steering;
  1822  001212  C01C  F01F         	movff	setSteering@steering,??_setSteering
  1823  001216  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  1824  00121A  1E1F               	comf	??_setSteering^0,f,c
  1825  00121C  1E20               	comf	(??_setSteering+1)^0,f,c
  1826  00121E  4A1F               	infsnz	??_setSteering^0,f,c
  1827  001220  2A20               	incf	(??_setSteering+1)^0,f,c
  1828  001222  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  1829  001226  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  1830                           
  1831                           ;main.c: 404:             break;
  1832  00122A  EF74  F009         	goto	l3868
  1833  00122E                     l1379:
  1834                           
  1835                           ;main.c: 406:             steeringF = (+steering);
  1836  00122E  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1837  001232  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1838                           
  1839                           ;main.c: 407:             steeringB = (+steering);
  1840  001236  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1841  00123A  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1842                           
  1843                           ;main.c: 408:             break;
  1844  00123E  EF74  F009         	goto	l3868
  1845  001242                     l1380:
  1846                           
  1847                           ;main.c: 410:             steeringF = (+steering);
  1848  001242  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1849  001246  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1850  00124A                     
  1851                           ;main.c: 411:             steeringB = (-steering / (2));
  1852  00124A  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  1853  00124E  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  1854  001252  0EFF               	movlw	255
  1855  001254  6E17               	movwf	(___awdiv@divisor+1)^0,c
  1856  001256  0EFE               	movlw	254
  1857  001258  6E16               	movwf	___awdiv@divisor^0,c
  1858  00125A  ECC3  F00E         	call	___awdiv	;wreg free
  1859  00125E  C014  F023         	movff	?___awdiv,setSteering@steeringB
  1860  001262  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  1861                           
  1862                           ;main.c: 412:             break;
  1863  001266  EF74  F009         	goto	l3868
  1864  00126A                     l1381:
  1865                           
  1866                           ;main.c: 414:             steeringF = (+steering);
  1867  00126A  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  1868  00126E  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  1869  001272                     
  1870                           ;main.c: 415:             steeringB = 0;
  1871  001272  0E00               	movlw	0
  1872  001274  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1873  001276  0E00               	movlw	0
  1874  001278  6E23               	movwf	setSteering@steeringB^0,c
  1875                           
  1876                           ;main.c: 416:             break;
  1877  00127A  EF74  F009         	goto	l3868
  1878  00127E                     l3858:
  1879                           
  1880                           ;main.c: 418:             steeringF = 0;
  1881  00127E  0E00               	movlw	0
  1882  001280  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1883  001282  0E00               	movlw	0
  1884  001284  6E21               	movwf	setSteering@steeringF^0,c
  1885  001286                     
  1886                           ;main.c: 419:             steeringB = (+steering);
  1887  001286  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  1888  00128A  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  1889                           
  1890                           ;main.c: 420:             break;
  1891  00128E  EF74  F009         	goto	l3868
  1892  001292                     l3862:
  1893                           
  1894                           ;main.c: 422:             steeringF = 0;
  1895  001292  0E00               	movlw	0
  1896  001294  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1897  001296  0E00               	movlw	0
  1898  001298  6E21               	movwf	setSteering@steeringF^0,c
  1899                           
  1900                           ;main.c: 423:             steeringB = 0;
  1901  00129A  0E00               	movlw	0
  1902  00129C  6E24               	movwf	(setSteering@steeringB+1)^0,c
  1903  00129E  0E00               	movlw	0
  1904  0012A0  6E23               	movwf	setSteering@steeringB^0,c
  1905                           
  1906                           ;main.c: 424:             break;
  1907  0012A2  EF74  F009         	goto	l3868
  1908  0012A6                     l3866:
  1909  0012A6  501E               	movf	setSteering@steeringMode^0,w,c
  1910  0012A8  6E1F               	movwf	??_setSteering^0,c
  1911  0012AA  6A20               	clrf	(??_setSteering+1)^0,c
  1912                           
  1913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1914                           ; Switch size 1, requested type "simple"
  1915                           ; Number of cases is 1, Range of values is 0 to 0
  1916                           ; switch strategies available:
  1917                           ; Name         Instructions Cycles
  1918                           ; simple_byte            4     3 (average)
  1919                           ;	Chosen strategy is simple_byte
  1920  0012AC  5020               	movf	(??_setSteering+1)^0,w,c
  1921  0012AE  0A00               	xorlw	0	; case 0
  1922  0012B0  B4D8               	btfsc	status,2,c
  1923  0012B2  EF5D  F009         	goto	l6018
  1924  0012B6  EF49  F009         	goto	l3862
  1925  0012BA                     l6018:
  1926                           
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 5, Range of values is 0 to 4
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte           16     9 (average)
  1932                           ;	Chosen strategy is simple_byte
  1933  0012BA  501F               	movf	??_setSteering^0,w,c
  1934  0012BC  0A00               	xorlw	0	; case 0
  1935  0012BE  B4D8               	btfsc	status,2,c
  1936  0012C0  EF05  F009         	goto	l1377
  1937  0012C4  0A01               	xorlw	1	; case 1
  1938  0012C6  B4D8               	btfsc	status,2,c
  1939  0012C8  EF17  F009         	goto	l1379
  1940  0012CC  0A03               	xorlw	3	; case 2
  1941  0012CE  B4D8               	btfsc	status,2,c
  1942  0012D0  EF21  F009         	goto	l1380
  1943  0012D4  0A01               	xorlw	1	; case 3
  1944  0012D6  B4D8               	btfsc	status,2,c
  1945  0012D8  EF35  F009         	goto	l1381
  1946  0012DC  0A07               	xorlw	7	; case 4
  1947  0012DE  B4D8               	btfsc	status,2,c
  1948  0012E0  EF3F  F009         	goto	l3858
  1949  0012E4  EF49  F009         	goto	l3862
  1950  0012E8                     l3868:
  1951                           
  1952                           ;main.c: 427:     if (steeringF > ((65))) {
  1953  0012E8  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  1954  0012EA  EF80  F009         	goto	u2031
  1955  0012EE  5022               	movf	(setSteering@steeringF+1)^0,w,c
  1956  0012F0  E109               	bnz	u2030
  1957  0012F2  0E42               	movlw	66
  1958  0012F4  5C21               	subwf	setSteering@steeringF^0,w,c
  1959  0012F6  A0D8               	btfss	status,0,c
  1960  0012F8  EF80  F009         	goto	u2031
  1961  0012FC  EF82  F009         	goto	u2030
  1962  001300                     u2031:
  1963  001300  EF88  F009         	goto	l3872
  1964  001304                     u2030:
  1965  001304                     
  1966                           ;main.c: 428:         steeringF = ((65));
  1967  001304  0E00               	movlw	0
  1968  001306  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1969  001308  0E41               	movlw	65
  1970  00130A  6E21               	movwf	setSteering@steeringF^0,c
  1971                           
  1972                           ;main.c: 429:     } else if (steeringF < (-(65))) {
  1973  00130C  EF9A  F009         	goto	l3876
  1974  001310                     l3872:
  1975  001310  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  1976  001312  EF94  F009         	goto	u2041
  1977  001316  0EBF               	movlw	191
  1978  001318  5C21               	subwf	setSteering@steeringF^0,w,c
  1979  00131A  0EFF               	movlw	255
  1980  00131C  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  1981  00131E  B0D8               	btfsc	status,0,c
  1982  001320  EF94  F009         	goto	u2041
  1983  001324  EF96  F009         	goto	u2040
  1984  001328                     u2041:
  1985  001328  EF9A  F009         	goto	l3876
  1986  00132C                     u2040:
  1987  00132C                     
  1988                           ;main.c: 430:         steeringF = (-(65));
  1989  00132C  0EFF               	movlw	255
  1990  00132E  6E22               	movwf	(setSteering@steeringF+1)^0,c
  1991  001330  0EBF               	movlw	191
  1992  001332  6E21               	movwf	setSteering@steeringF^0,c
  1993  001334                     l3876:
  1994                           
  1995                           ;main.c: 433:     if (steeringB > ((40))) {
  1996  001334  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  1997  001336  EFA6  F009         	goto	u2051
  1998  00133A  5024               	movf	(setSteering@steeringB+1)^0,w,c
  1999  00133C  E109               	bnz	u2050
  2000  00133E  0E29               	movlw	41
  2001  001340  5C23               	subwf	setSteering@steeringB^0,w,c
  2002  001342  A0D8               	btfss	status,0,c
  2003  001344  EFA6  F009         	goto	u2051
  2004  001348  EFA8  F009         	goto	u2050
  2005  00134C                     u2051:
  2006  00134C  EFAE  F009         	goto	l3880
  2007  001350                     u2050:
  2008  001350                     
  2009                           ;main.c: 434:         steeringB = ((40));
  2010  001350  0E00               	movlw	0
  2011  001352  6E24               	movwf	(setSteering@steeringB+1)^0,c
  2012  001354  0E28               	movlw	40
  2013  001356  6E23               	movwf	setSteering@steeringB^0,c
  2014                           
  2015                           ;main.c: 435:     } else if (steeringB < (-(40))) {
  2016  001358  EFC0  F009         	goto	l3884
  2017  00135C                     l3880:
  2018  00135C  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  2019  00135E  EFBA  F009         	goto	u2061
  2020  001362  0ED8               	movlw	216
  2021  001364  5C23               	subwf	setSteering@steeringB^0,w,c
  2022  001366  0EFF               	movlw	255
  2023  001368  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  2024  00136A  B0D8               	btfsc	status,0,c
  2025  00136C  EFBA  F009         	goto	u2061
  2026  001370  EFBC  F009         	goto	u2060
  2027  001374                     u2061:
  2028  001374  EFC0  F009         	goto	l3884
  2029  001378                     u2060:
  2030  001378                     
  2031                           ;main.c: 436:         steeringB = (-(40));
  2032  001378  0EFF               	movlw	255
  2033  00137A  6E24               	movwf	(setSteering@steeringB+1)^0,c
  2034  00137C  0ED8               	movlw	216
  2035  00137E  6E23               	movwf	setSteering@steeringB^0,c
  2036  001380                     l3884:
  2037                           
  2038                           ;main.c: 440:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  2039  001380  0E60               	movlw	96
  2040  001382  2421               	addwf	setSteering@steeringF^0,w,c
  2041  001384  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  2042  001386  0E01               	movlw	1
  2043  001388  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  2044  00138A  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  2045  00138C  EC9F  F011         	call	_PWM6_LoadDutyValue	;wreg free
  2046  001390                     
  2047                           ;main.c: 441:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  2048  001390  0E65               	movlw	101
  2049  001392  2423               	addwf	setSteering@steeringB^0,w,c
  2050  001394  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  2051  001396  0E01               	movlw	1
  2052  001398  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  2053  00139A  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  2054  00139C  ECB9  F011         	call	_PWM5_LoadDutyValue	;wreg free
  2055  0013A0  0012               	return		;funcret
  2056  0013A2                     __end_of_setSteering:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _PWM6_LoadDutyValue *****************
  2060 ;; Defined at:
  2061 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;		None
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, status,2, status,0
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;Total ram usage:        4 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 8
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_setSteering
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text5
  2090  00233E                     __ptext5:
  2091                           	callstack 0
  2092  00233E                     _PWM6_LoadDutyValue:
  2093                           	callstack 19
  2094  00233E                     
  2095                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2096  00233E  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2097  002342  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  2098  002346  90D8               	bcf	status,0,c
  2099  002348  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2100  00234A  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2101  00234C  90D8               	bcf	status,0,c
  2102  00234E  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  2103  002350  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  2104  002352  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2105  002354  6E69               	movwf	105,c	;volatile
  2106                           
  2107                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  2108  002356  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  2109  00235A  0E03               	movlw	3
  2110  00235C  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  2111  00235E  0E06               	movlw	6
  2112  002360  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  2113  002362                     u1945:
  2114  002362  90D8               	bcf	status,0,c
  2115  002364  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  2116  002366  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  2117  002368  EFB1  F011         	goto	u1945
  2118  00236C  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  2119  00236E  6E68               	movwf	104,c	;volatile
  2120  002370  0012               	return		;funcret
  2121  002372                     __end_of_PWM6_LoadDutyValue:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _PWM5_LoadDutyValue *****************
  2125 ;; Defined at:
  2126 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  dutyValue       2   19[COMRAM] unsigned short 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        4 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; Hardware stack levels required when called: 8
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_setSteering
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text6
  2155  002372                     __ptext6:
  2156                           	callstack 0
  2157  002372                     _PWM5_LoadDutyValue:
  2158                           	callstack 19
  2159  002372                     
  2160                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  2161  002372  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2162  002376  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  2163  00237A  90D8               	bcf	status,0,c
  2164  00237C  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2165  00237E  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2166  002380  90D8               	bcf	status,0,c
  2167  002382  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  2168  002384  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  2169  002386  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2170  002388  6E6D               	movwf	109,c	;volatile
  2171                           
  2172                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  2173  00238A  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  2174  00238E  0E03               	movlw	3
  2175  002390  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  2176  002392  0E06               	movlw	6
  2177  002394  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  2178  002396                     u1935:
  2179  002396  90D8               	bcf	status,0,c
  2180  002398  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  2181  00239A  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  2182  00239C  EFCB  F011         	goto	u1935
  2183  0023A0  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  2184  0023A2  6E6C               	movwf	108,c	;volatile
  2185  0023A4  0012               	return		;funcret
  2186  0023A6                     __end_of_PWM5_LoadDutyValue:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function ___flge *****************
  2190 ;; Defined at:
  2191 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  ff1             4   19[COMRAM] void 
  2194 ;;  ff2             4   23[COMRAM] void 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;		None               void
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2206 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:       12 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 8
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_startAccell
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text7
  2221  00182C                     __ptext7:
  2222                           	callstack 0
  2223  00182C                     ___flge:
  2224                           	callstack 20
  2225  00182C  0E00               	movlw	0
  2226  00182E  1414               	andwf	___flge@ff1^0,w,c
  2227  001830  6E1C               	movwf	??___flge^0,c
  2228  001832  0E00               	movlw	0
  2229  001834  1415               	andwf	(___flge@ff1+1)^0,w,c
  2230  001836  6E1D               	movwf	(??___flge+1)^0,c
  2231  001838  0E80               	movlw	128
  2232  00183A  1416               	andwf	(___flge@ff1+2)^0,w,c
  2233  00183C  6E1E               	movwf	(??___flge+2)^0,c
  2234  00183E  0E7F               	movlw	127
  2235  001840  1417               	andwf	(___flge@ff1+3)^0,w,c
  2236  001842  6E1F               	movwf	(??___flge+3)^0,c
  2237  001844  501C               	movf	??___flge^0,w,c
  2238  001846  101D               	iorwf	(??___flge+1)^0,w,c
  2239  001848  101E               	iorwf	(??___flge+2)^0,w,c
  2240  00184A  101F               	iorwf	(??___flge+3)^0,w,c
  2241  00184C  A4D8               	btfss	status,2,c
  2242  00184E  EF2B  F00C         	goto	u3011
  2243  001852  EF2D  F00C         	goto	u3010
  2244  001856                     u3011:
  2245  001856  EF35  F00C         	goto	l4504
  2246  00185A                     u3010:
  2247  00185A  0E00               	movlw	0
  2248  00185C  6E14               	movwf	___flge@ff1^0,c
  2249  00185E  0E00               	movlw	0
  2250  001860  6E15               	movwf	(___flge@ff1+1)^0,c
  2251  001862  0E00               	movlw	0
  2252  001864  6E16               	movwf	(___flge@ff1+2)^0,c
  2253  001866  0E00               	movlw	0
  2254  001868  6E17               	movwf	(___flge@ff1+3)^0,c
  2255  00186A                     l4504:
  2256  00186A  0E00               	movlw	0
  2257  00186C  1418               	andwf	___flge@ff2^0,w,c
  2258  00186E  6E1C               	movwf	??___flge^0,c
  2259  001870  0E00               	movlw	0
  2260  001872  1419               	andwf	(___flge@ff2+1)^0,w,c
  2261  001874  6E1D               	movwf	(??___flge+1)^0,c
  2262  001876  0E80               	movlw	128
  2263  001878  141A               	andwf	(___flge@ff2+2)^0,w,c
  2264  00187A  6E1E               	movwf	(??___flge+2)^0,c
  2265  00187C  0E7F               	movlw	127
  2266  00187E  141B               	andwf	(___flge@ff2+3)^0,w,c
  2267  001880  6E1F               	movwf	(??___flge+3)^0,c
  2268  001882  501C               	movf	??___flge^0,w,c
  2269  001884  101D               	iorwf	(??___flge+1)^0,w,c
  2270  001886  101E               	iorwf	(??___flge+2)^0,w,c
  2271  001888  101F               	iorwf	(??___flge+3)^0,w,c
  2272  00188A  A4D8               	btfss	status,2,c
  2273  00188C  EF4A  F00C         	goto	u3021
  2274  001890  EF4C  F00C         	goto	u3020
  2275  001894                     u3021:
  2276  001894  EF54  F00C         	goto	l4508
  2277  001898                     u3020:
  2278  001898  0E00               	movlw	0
  2279  00189A  6E18               	movwf	___flge@ff2^0,c
  2280  00189C  0E00               	movlw	0
  2281  00189E  6E19               	movwf	(___flge@ff2+1)^0,c
  2282  0018A0  0E00               	movlw	0
  2283  0018A2  6E1A               	movwf	(___flge@ff2+2)^0,c
  2284  0018A4  0E00               	movlw	0
  2285  0018A6  6E1B               	movwf	(___flge@ff2+3)^0,c
  2286  0018A8                     l4508:
  2287  0018A8  AE17               	btfss	(___flge@ff1+3)^0,7,c
  2288  0018AA  EF59  F00C         	goto	u3031
  2289  0018AE  EF5B  F00C         	goto	u3030
  2290  0018B2                     u3031:
  2291  0018B2  EF64  F00C         	goto	l4512
  2292  0018B6                     u3030:
  2293  0018B6  6C14               	negf	___flge@ff1^0,c
  2294  0018B8  1E15               	comf	(___flge@ff1+1)^0,f,c
  2295  0018BA  B0D8               	btfsc	status,0,c
  2296  0018BC  2A15               	incf	(___flge@ff1+1)^0,f,c
  2297  0018BE  1E16               	comf	(___flge@ff1+2)^0,f,c
  2298  0018C0  B0D8               	btfsc	status,0,c
  2299  0018C2  2A16               	incf	(___flge@ff1+2)^0,f,c
  2300  0018C4  0E80               	movlw	128
  2301  0018C6  5617               	subfwb	(___flge@ff1+3)^0,f,c
  2302  0018C8                     l4512:
  2303  0018C8  AE1B               	btfss	(___flge@ff2+3)^0,7,c
  2304  0018CA  EF69  F00C         	goto	u3041
  2305  0018CE  EF6B  F00C         	goto	u3040
  2306  0018D2                     u3041:
  2307  0018D2  EF74  F00C         	goto	l1658
  2308  0018D6                     u3040:
  2309  0018D6  6C18               	negf	___flge@ff2^0,c
  2310  0018D8  1E19               	comf	(___flge@ff2+1)^0,f,c
  2311  0018DA  B0D8               	btfsc	status,0,c
  2312  0018DC  2A19               	incf	(___flge@ff2+1)^0,f,c
  2313  0018DE  1E1A               	comf	(___flge@ff2+2)^0,f,c
  2314  0018E0  B0D8               	btfsc	status,0,c
  2315  0018E2  2A1A               	incf	(___flge@ff2+2)^0,f,c
  2316  0018E4  0E80               	movlw	128
  2317  0018E6  561B               	subfwb	(___flge@ff2+3)^0,f,c
  2318  0018E8                     l1658:
  2319  0018E8  0E00               	movlw	0
  2320  0018EA  1A14               	xorwf	___flge@ff1^0,f,c
  2321  0018EC  0E00               	movlw	0
  2322  0018EE  1A15               	xorwf	(___flge@ff1+1)^0,f,c
  2323  0018F0  0E00               	movlw	0
  2324  0018F2  1A16               	xorwf	(___flge@ff1+2)^0,f,c
  2325  0018F4  0E80               	movlw	128
  2326  0018F6  1A17               	xorwf	(___flge@ff1+3)^0,f,c
  2327  0018F8  0E00               	movlw	0
  2328  0018FA  1A18               	xorwf	___flge@ff2^0,f,c
  2329  0018FC  0E00               	movlw	0
  2330  0018FE  1A19               	xorwf	(___flge@ff2+1)^0,f,c
  2331  001900  0E00               	movlw	0
  2332  001902  1A1A               	xorwf	(___flge@ff2+2)^0,f,c
  2333  001904  0E80               	movlw	128
  2334  001906  1A1B               	xorwf	(___flge@ff2+3)^0,f,c
  2335  001908  5018               	movf	___flge@ff2^0,w,c
  2336  00190A  5C14               	subwf	___flge@ff1^0,w,c
  2337  00190C  5019               	movf	(___flge@ff2+1)^0,w,c
  2338  00190E  5815               	subwfb	(___flge@ff1+1)^0,w,c
  2339  001910  501A               	movf	(___flge@ff2+2)^0,w,c
  2340  001912  5816               	subwfb	(___flge@ff1+2)^0,w,c
  2341  001914  501B               	movf	(___flge@ff2+3)^0,w,c
  2342  001916  5817               	subwfb	(___flge@ff1+3)^0,w,c
  2343  001918  B0D8               	btfsc	status,0,c
  2344  00191A  EF91  F00C         	goto	u3051
  2345  00191E  EF93  F00C         	goto	u3050
  2346  001922                     u3051:
  2347  001922  EF96  F00C         	goto	l4518
  2348  001926                     u3050:
  2349  001926  90D8               	bcf	status,0,c
  2350  001928  EF97  F00C         	goto	l1663
  2351  00192C                     l4518:
  2352  00192C  80D8               	bsf	status,0,c
  2353  00192E                     l1663:
  2354  00192E  0012               	return		;funcret
  2355  001930                     __end_of___flge:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _getReverse *****************
  2359 ;; Defined at:
  2360 ;;		line 201 in file "main.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2, status,0
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 8
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_loop
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text8
  2389  001930                     __ptext8:
  2390                           	callstack 0
  2391  001930                     _getReverse:
  2392                           	callstack 21
  2393  001930                     
  2394                           ;main.c: 202:     if (distFront < (15)) {
  2395  001930  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2396  001932  E107               	bnz	u3261
  2397  001934  0E0F               	movlw	15
  2398  001936  5C4A               	subwf	_distFront^0,w,c	;volatile
  2399  001938  B0D8               	btfsc	status,0,c
  2400  00193A  EFA1  F00C         	goto	u3261
  2401  00193E  EFA3  F00C         	goto	u3260
  2402  001942                     u3261:
  2403  001942  EFA8  F00C         	goto	l4736
  2404  001946                     u3260:
  2405  001946                     
  2406                           ;main.c: 203:         ++reverseCount;
  2407  001946  0100               	movlb	0	; () banked
  2408  001948  4B94               	infsnz	_reverseCount& (0+255),f,b
  2409  00194A  2B95               	incf	(_reverseCount+1)& (0+255),f,b
  2410                           
  2411                           ;main.c: 204:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2412  00194C  EFBF  F00C         	goto	l4742
  2413  001950                     l4736:
  2414  001950  0E03               	movlw	3
  2415  001952  184C               	xorwf	_driveMode^0,w,c
  2416  001954  B4D8               	btfsc	status,2,c
  2417  001956  EFAF  F00C         	goto	u3271
  2418  00195A  EFB1  F00C         	goto	u3270
  2419  00195E                     u3271:
  2420  00195E  EFBF  F00C         	goto	l4742
  2421  001962                     u3270:
  2422  001962  0E04               	movlw	4
  2423  001964  184C               	xorwf	_driveMode^0,w,c
  2424  001966  B4D8               	btfsc	status,2,c
  2425  001968  EFB8  F00C         	goto	u3281
  2426  00196C  EFBA  F00C         	goto	u3280
  2427  001970                     u3281:
  2428  001970  EFBF  F00C         	goto	l4742
  2429  001974                     u3280:
  2430  001974                     
  2431                           ;main.c: 205:         reverseCount = 0;
  2432  001974  0E00               	movlw	0
  2433  001976  0100               	movlb	0	; () banked
  2434  001978  6F95               	movwf	(_reverseCount+1)& (0+255),b
  2435  00197A  0E00               	movlw	0
  2436  00197C  6F94               	movwf	_reverseCount& (0+255),b
  2437  00197E                     l4742:
  2438                           
  2439                           ;main.c: 208:     if (reverseCount > (50)) {
  2440  00197E  0100               	movlb	0	; () banked
  2441  001980  5195               	movf	(_reverseCount+1)& (0+255),w,b
  2442  001982  E109               	bnz	u3290
  2443  001984  0E33               	movlw	51
  2444  001986  5D94               	subwf	_reverseCount& (0+255),w,b
  2445  001988  A0D8               	btfss	status,0,c
  2446  00198A  EFC9  F00C         	goto	u3291
  2447  00198E  EFCB  F00C         	goto	u3290
  2448  001992                     u3291:
  2449  001992  EF15  F00D         	goto	l1307
  2450  001996                     u3290:
  2451  001996                     
  2452                           ; BSR set to: 0
  2453                           ;main.c: 209:         ++reverseTime;
  2454  001996  4B82               	infsnz	_reverseTime& (0+255),f,b
  2455  001998  2B83               	incf	(_reverseTime+1)& (0+255),f,b
  2456  00199A                     
  2457                           ; BSR set to: 0
  2458                           ;main.c: 211:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2459  00199A  0E03               	movlw	3
  2460  00199C  184C               	xorwf	_driveMode^0,w,c
  2461  00199E  B4D8               	btfsc	status,2,c
  2462  0019A0  EFD4  F00C         	goto	u3301
  2463  0019A4  EFD6  F00C         	goto	u3300
  2464  0019A8                     u3301:
  2465  0019A8  EFF0  F00C         	goto	l4756
  2466  0019AC                     u3300:
  2467  0019AC                     
  2468                           ; BSR set to: 0
  2469  0019AC  0E04               	movlw	4
  2470  0019AE  184C               	xorwf	_driveMode^0,w,c
  2471  0019B0  B4D8               	btfsc	status,2,c
  2472  0019B2  EFDD  F00C         	goto	u3311
  2473  0019B6  EFDF  F00C         	goto	u3310
  2474  0019BA                     u3311:
  2475  0019BA  EFF0  F00C         	goto	l4756
  2476  0019BE                     u3310:
  2477  0019BE                     
  2478                           ; BSR set to: 0
  2479                           ;main.c: 212:             if (distLeft > distRight) {
  2480  0019BE  519C               	movf	_distLeft& (0+255),w,b	;volatile
  2481  0019C0  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2482  0019C2  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2483  0019C4  5999               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2484  0019C6  B0D8               	btfsc	status,0,c
  2485  0019C8  EFE8  F00C         	goto	u3321
  2486  0019CC  EFEA  F00C         	goto	u3320
  2487  0019D0                     u3321:
  2488  0019D0  EFEE  F00C         	goto	l4754
  2489  0019D4                     u3320:
  2490  0019D4                     
  2491                           ; BSR set to: 0
  2492                           ;main.c: 214:                 driveMode = ReverseRight;
  2493  0019D4  0E03               	movlw	3
  2494  0019D6  6E4C               	movwf	_driveMode^0,c
  2495                           
  2496                           ;main.c: 215:             } else {
  2497  0019D8  EFF0  F00C         	goto	l4756
  2498  0019DC                     l4754:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;main.c: 217:                 driveMode = ReverseLeft;
  2502  0019DC  0E04               	movlw	4
  2503  0019DE  6E4C               	movwf	_driveMode^0,c
  2504  0019E0                     l4756:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;main.c: 221:         if (distFront > (35) || reverseTime > (300)) {
  2508  0019E0  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2509  0019E2  E107               	bnz	u3331
  2510  0019E4  0E24               	movlw	36
  2511  0019E6  5C4A               	subwf	_distFront^0,w,c	;volatile
  2512  0019E8  B0D8               	btfsc	status,0,c
  2513  0019EA  EFF9  F00C         	goto	u3331
  2514  0019EE  EFFB  F00C         	goto	u3330
  2515  0019F2                     u3331:
  2516  0019F2  EF0B  F00D         	goto	l4760
  2517  0019F6                     u3330:
  2518  0019F6                     
  2519                           ; BSR set to: 0
  2520  0019F6  BF83               	btfsc	(_reverseTime+1)& (0+255),7,b
  2521  0019F8  EF07  F00D         	goto	u3341
  2522  0019FC  0E2D               	movlw	45
  2523  0019FE  5D82               	subwf	_reverseTime& (0+255),w,b
  2524  001A00  0E01               	movlw	1
  2525  001A02  5983               	subwfb	(_reverseTime+1)& (0+255),w,b
  2526  001A04  A0D8               	btfss	status,0,c
  2527  001A06  EF07  F00D         	goto	u3341
  2528  001A0A  EF09  F00D         	goto	u3340
  2529  001A0E                     u3341:
  2530  001A0E  EF15  F00D         	goto	l1307
  2531  001A12                     u3340:
  2532  001A12  EF0B  F00D         	goto	l4762
  2533  001A16                     l4760:
  2534  001A16                     l4762:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;main.c: 224:                 driveMode = Straight;
  2538  001A16  0E01               	movlw	1
  2539  001A18  6E4C               	movwf	_driveMode^0,c
  2540  001A1A                     
  2541                           ; BSR set to: 0
  2542                           ;main.c: 229:             reverseCount = 0;
  2543  001A1A  0E00               	movlw	0
  2544  001A1C  6F95               	movwf	(_reverseCount+1)& (0+255),b
  2545  001A1E  0E00               	movlw	0
  2546  001A20  6F94               	movwf	_reverseCount& (0+255),b
  2547                           
  2548                           ;main.c: 230:             reverseTime = 0;
  2549  001A22  0E00               	movlw	0
  2550  001A24  6F83               	movwf	(_reverseTime+1)& (0+255),b
  2551  001A26  0E00               	movlw	0
  2552  001A28  6F82               	movwf	_reverseTime& (0+255),b
  2553  001A2A                     l1307:
  2554                           
  2555                           ; BSR set to: 0
  2556  001A2A  0012               	return		;funcret
  2557  001A2C                     __end_of_getReverse:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _getCurve *****************
  2561 ;; Defined at:
  2562 ;;		line 130 in file "main.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  deltaLeft       2   23[COMRAM] short 
  2567 ;;  deltaRight      2   21[COMRAM] short 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        6 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 8
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_loop
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text9
  2592  0009C4                     __ptext9:
  2593                           	callstack 0
  2594  0009C4                     _getCurve:
  2595                           	callstack 21
  2596  0009C4                     
  2597                           ;main.c: 131:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2598  0009C4  503A               	movf	_oldDistLeft^0,w,c
  2599  0009C6  0100               	movlb	0	; () banked
  2600  0009C8  5D9C               	subwf	_distLeft& (0+255),w,b	;volatile
  2601  0009CA  6E18               	movwf	getCurve@deltaLeft^0,c
  2602  0009CC  503B               	movf	(_oldDistLeft+1)^0,w,c
  2603  0009CE  599D               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2604  0009D0  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  2605                           
  2606                           ;main.c: 132:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2607  0009D2  5192               	movf	_oldDistRight& (0+255),w,b
  2608  0009D4  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2609  0009D6  6E16               	movwf	getCurve@deltaRight^0,c
  2610  0009D8  5193               	movf	(_oldDistRight+1)& (0+255),w,b
  2611  0009DA  5999               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2612  0009DC  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  2613                           
  2614                           ;main.c: 134:     switch (curveMode) {
  2615  0009DE  EFE2  F005         	goto	l4722
  2616  0009E2                     l4666:
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;main.c: 136:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (15
      +                          0)) {
  2620  0009E2  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2621  0009E4  EFFD  F004         	goto	u3091
  2622  0009E8  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2623  0009EA  E109               	bnz	u3090
  2624  0009EC  0E1F               	movlw	31
  2625  0009EE  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2626  0009F0  A0D8               	btfss	status,0,c
  2627  0009F2  EFFD  F004         	goto	u3091
  2628  0009F6  EFFF  F004         	goto	u3090
  2629  0009FA                     u3091:
  2630  0009FA  EF20  F005         	goto	l4674
  2631  0009FE                     u3090:
  2632  0009FE                     
  2633                           ; BSR set to: 0
  2634  0009FE  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2635  000A00  EF0D  F005         	goto	u3100
  2636  000A04  0E2C               	movlw	44
  2637  000A06  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2638  000A08  0E01               	movlw	1
  2639  000A0A  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  2640  000A0C  B0D8               	btfsc	status,0,c
  2641  000A0E  EF0B  F005         	goto	u3101
  2642  000A12  EF0D  F005         	goto	u3100
  2643  000A16                     u3101:
  2644  000A16  EF20  F005         	goto	l4674
  2645  000A1A                     u3100:
  2646  000A1A                     
  2647                           ; BSR set to: 0
  2648  000A1A  503B               	movf	(_oldDistLeft+1)^0,w,c
  2649  000A1C  E107               	bnz	u3111
  2650  000A1E  0E96               	movlw	150
  2651  000A20  5C3A               	subwf	_oldDistLeft^0,w,c
  2652  000A22  B0D8               	btfsc	status,0,c
  2653  000A24  EF16  F005         	goto	u3111
  2654  000A28  EF18  F005         	goto	u3110
  2655  000A2C                     u3111:
  2656  000A2C  EF20  F005         	goto	l4674
  2657  000A30                     u3110:
  2658  000A30                     
  2659                           ; BSR set to: 0
  2660                           ;main.c: 137:                 delay = 0;
  2661  000A30  0E00               	movlw	0
  2662  000A32  6E3E               	movwf	_delay^0,c
  2663                           
  2664                           ;main.c: 138:                 curveMode = BeforeCurve;
  2665  000A34  0E01               	movlw	1
  2666  000A36  6E3F               	movwf	_curveMode^0,c
  2667                           
  2668                           ;main.c: 139:                 driveMode = CurveLeft;
  2669  000A38  0E05               	movlw	5
  2670  000A3A  6E4C               	movwf	_driveMode^0,c
  2671                           
  2672                           ;main.c: 142:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (150)) {
  2673  000A3C  EFFF  F005         	goto	l1272
  2674  000A40                     l4674:
  2675                           
  2676                           ; BSR set to: 0
  2677  000A40  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2678  000A42  EF2C  F005         	goto	u3121
  2679  000A46  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  2680  000A48  E109               	bnz	u3120
  2681  000A4A  0E1F               	movlw	31
  2682  000A4C  5C16               	subwf	getCurve@deltaRight^0,w,c
  2683  000A4E  A0D8               	btfss	status,0,c
  2684  000A50  EF2C  F005         	goto	u3121
  2685  000A54  EF2E  F005         	goto	u3120
  2686  000A58                     u3121:
  2687  000A58  EFFF  F005         	goto	l1272
  2688  000A5C                     u3120:
  2689  000A5C                     
  2690                           ; BSR set to: 0
  2691  000A5C  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  2692  000A5E  EF3C  F005         	goto	u3130
  2693  000A62  0E2C               	movlw	44
  2694  000A64  5C16               	subwf	getCurve@deltaRight^0,w,c
  2695  000A66  0E01               	movlw	1
  2696  000A68  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  2697  000A6A  B0D8               	btfsc	status,0,c
  2698  000A6C  EF3A  F005         	goto	u3131
  2699  000A70  EF3C  F005         	goto	u3130
  2700  000A74                     u3131:
  2701  000A74  EFFF  F005         	goto	l1272
  2702  000A78                     u3130:
  2703  000A78                     
  2704                           ; BSR set to: 0
  2705  000A78  5193               	movf	(_oldDistRight+1)& (0+255),w,b
  2706  000A7A  E107               	bnz	u3141
  2707  000A7C  0E96               	movlw	150
  2708  000A7E  5D92               	subwf	_oldDistRight& (0+255),w,b
  2709  000A80  B0D8               	btfsc	status,0,c
  2710  000A82  EF45  F005         	goto	u3141
  2711  000A86  EF47  F005         	goto	u3140
  2712  000A8A                     u3141:
  2713  000A8A  EFFF  F005         	goto	l1272
  2714  000A8E                     u3140:
  2715  000A8E                     
  2716                           ; BSR set to: 0
  2717                           ;main.c: 143:                 delay = 0;
  2718  000A8E  0E00               	movlw	0
  2719  000A90  6E3E               	movwf	_delay^0,c
  2720                           
  2721                           ;main.c: 144:                 curveMode = BeforeCurve;
  2722  000A92  0E01               	movlw	1
  2723  000A94  6E3F               	movwf	_curveMode^0,c
  2724                           
  2725                           ;main.c: 145:                 driveMode = CurveRight;
  2726  000A96  0E06               	movlw	6
  2727  000A98  6E4C               	movwf	_driveMode^0,c
  2728  000A9A  EFFF  F005         	goto	l1272
  2729  000A9E                     l4682:
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;main.c: 152:             if (delay >= (17)) {
  2733  000A9E  0E10               	movlw	16
  2734  000AA0  643E               	cpfsgt	_delay^0,c
  2735  000AA2  EF55  F005         	goto	u3151
  2736  000AA6  EF57  F005         	goto	u3150
  2737  000AAA                     u3151:
  2738  000AAA  EF5D  F005         	goto	l4686
  2739  000AAE                     u3150:
  2740  000AAE                     
  2741                           ; BSR set to: 0
  2742                           ;main.c: 153:                 delay = 0;
  2743  000AAE  0E00               	movlw	0
  2744  000AB0  6E3E               	movwf	_delay^0,c
  2745                           
  2746                           ;main.c: 154:                 curveMode = InCurve;
  2747  000AB2  0E02               	movlw	2
  2748  000AB4  6E3F               	movwf	_curveMode^0,c
  2749                           
  2750                           ;main.c: 156:             } else {
  2751  000AB6  EFFF  F005         	goto	l1272
  2752  000ABA                     l4686:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;main.c: 157:                 ++delay;
  2756  000ABA  2A3E               	incf	_delay^0,f,c
  2757  000ABC  EFFF  F005         	goto	l1272
  2758  000AC0                     l4688:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;main.c: 161:             if (delay >= (25)) {
  2762  000AC0  0E18               	movlw	24
  2763  000AC2  643E               	cpfsgt	_delay^0,c
  2764  000AC4  EF66  F005         	goto	u3161
  2765  000AC8  EF68  F005         	goto	u3160
  2766  000ACC                     u3161:
  2767  000ACC  EF5D  F005         	goto	l4686
  2768  000AD0                     u3160:
  2769  000AD0                     
  2770                           ; BSR set to: 0
  2771                           ;main.c: 162:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (175)) {
  2772  000AD0  0E05               	movlw	5
  2773  000AD2  184C               	xorwf	_driveMode^0,w,c
  2774  000AD4  A4D8               	btfss	status,2,c
  2775  000AD6  EF6F  F005         	goto	u3171
  2776  000ADA  EF71  F005         	goto	u3170
  2777  000ADE                     u3171:
  2778  000ADE  EF7C  F005         	goto	l4694
  2779  000AE2                     u3170:
  2780  000AE2                     
  2781                           ; BSR set to: 0
  2782  000AE2  519D               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2783  000AE4  E109               	bnz	u3180
  2784  000AE6  0E2D               	movlw	45
  2785  000AE8  5D9C               	subwf	_distLeft& (0+255),w,b	;volatile
  2786  000AEA  A0D8               	btfss	status,0,c
  2787  000AEC  EF7A  F005         	goto	u3181
  2788  000AF0  EF7C  F005         	goto	u3180
  2789  000AF4                     u3181:
  2790  000AF4  EF9B  F005         	goto	l4700
  2791  000AF8                     u3180:
  2792  000AF8                     l4694:
  2793                           
  2794                           ; BSR set to: 0
  2795  000AF8  0E06               	movlw	6
  2796  000AFA  184C               	xorwf	_driveMode^0,w,c
  2797  000AFC  A4D8               	btfss	status,2,c
  2798  000AFE  EF83  F005         	goto	u3191
  2799  000B02  EF85  F005         	goto	u3190
  2800  000B06                     u3191:
  2801  000B06  EF90  F005         	goto	l4698
  2802  000B0A                     u3190:
  2803  000B0A                     
  2804                           ; BSR set to: 0
  2805  000B0A  5199               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2806  000B0C  E109               	bnz	u3200
  2807  000B0E  0E2D               	movlw	45
  2808  000B10  5D98               	subwf	_distRight& (0+255),w,b	;volatile
  2809  000B12  A0D8               	btfss	status,0,c
  2810  000B14  EF8E  F005         	goto	u3201
  2811  000B18  EF90  F005         	goto	u3200
  2812  000B1C                     u3201:
  2813  000B1C  EF9B  F005         	goto	l4700
  2814  000B20                     u3200:
  2815  000B20                     l4698:
  2816                           
  2817                           ; BSR set to: 0
  2818  000B20  504B               	movf	(_distFront+1)^0,w,c	;volatile
  2819  000B22  E109               	bnz	u3210
  2820  000B24  0EB0               	movlw	176
  2821  000B26  5C4A               	subwf	_distFront^0,w,c	;volatile
  2822  000B28  A0D8               	btfss	status,0,c
  2823  000B2A  EF99  F005         	goto	u3211
  2824  000B2E  EF9B  F005         	goto	u3210
  2825  000B32                     u3211:
  2826  000B32  EFB5  F005         	goto	l4706
  2827  000B36                     u3210:
  2828  000B36                     l4700:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main.c: 164:                     if (delay >= 70) {
  2832  000B36  0E45               	movlw	69
  2833  000B38  643E               	cpfsgt	_delay^0,c
  2834  000B3A  EFA1  F005         	goto	u3221
  2835  000B3E  EFA3  F005         	goto	u3220
  2836  000B42                     u3221:
  2837  000B42  EFA9  F005         	goto	l4704
  2838  000B46                     u3220:
  2839  000B46                     
  2840                           ; BSR set to: 0
  2841                           ;main.c: 166:                         middleOffSet = -15;
  2842  000B46  0EFF               	movlw	255
  2843  000B48  6F8F               	movwf	(_middleOffSet+1)& (0+255),b
  2844  000B4A  0EF1               	movlw	241
  2845  000B4C  6F8E               	movwf	_middleOffSet& (0+255),b
  2846                           
  2847                           ;main.c: 167:                     } else {
  2848  000B4E  EFAD  F005         	goto	l1286
  2849  000B52                     l4704:
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;main.c: 169:                         middleOffSet = 15;
  2853  000B52  0E00               	movlw	0
  2854  000B54  6F8F               	movwf	(_middleOffSet+1)& (0+255),b
  2855  000B56  0E0F               	movlw	15
  2856  000B58  6F8E               	movwf	_middleOffSet& (0+255),b
  2857  000B5A                     l1286:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;main.c: 172:                     delay = 0;
  2861  000B5A  0E00               	movlw	0
  2862  000B5C  6E3E               	movwf	_delay^0,c
  2863                           
  2864                           ;main.c: 173:                     curveMode = AfterCurve;
  2865  000B5E  0E03               	movlw	3
  2866  000B60  6E3F               	movwf	_curveMode^0,c
  2867                           
  2868                           ;main.c: 174:                     driveMode = Straight;
  2869  000B62  0E01               	movlw	1
  2870  000B64  6E4C               	movwf	_driveMode^0,c
  2871                           
  2872                           ;main.c: 177:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  2873  000B66  EF5D  F005         	goto	l4686
  2874  000B6A                     l4706:
  2875                           
  2876                           ; BSR set to: 0
  2877  000B6A  0E06               	movlw	6
  2878  000B6C  184C               	xorwf	_driveMode^0,w,c
  2879  000B6E  A4D8               	btfss	status,2,c
  2880  000B70  EFBC  F005         	goto	u3231
  2881  000B74  EFBE  F005         	goto	u3230
  2882  000B78                     u3231:
  2883  000B78  EF5D  F005         	goto	l4686
  2884  000B7C                     u3230:
  2885  000B7C                     
  2886                           ; BSR set to: 0
  2887  000B7C  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  2888  000B7E  EFCA  F005         	goto	u3241
  2889  000B82  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  2890  000B84  E109               	bnz	u3240
  2891  000B86  0E1F               	movlw	31
  2892  000B88  5C18               	subwf	getCurve@deltaLeft^0,w,c
  2893  000B8A  A0D8               	btfss	status,0,c
  2894  000B8C  EFCA  F005         	goto	u3241
  2895  000B90  EFCC  F005         	goto	u3240
  2896  000B94                     u3241:
  2897  000B94  EF5D  F005         	goto	l4686
  2898  000B98                     u3240:
  2899  000B98                     
  2900                           ; BSR set to: 0
  2901                           ;main.c: 179:                     delay = 0;
  2902  000B98  0E00               	movlw	0
  2903  000B9A  6E3E               	movwf	_delay^0,c
  2904                           
  2905                           ;main.c: 180:                     curveMode = BeforeCurve;
  2906  000B9C  0E01               	movlw	1
  2907  000B9E  6E3F               	movwf	_curveMode^0,c
  2908                           
  2909                           ;main.c: 181:                     driveMode = CurveLeft;
  2910  000BA0  0E05               	movlw	5
  2911  000BA2  6E4C               	movwf	_driveMode^0,c
  2912  000BA4  EF5D  F005         	goto	l4686
  2913  000BA8                     l4714:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;main.c: 188:             if (delay >= (1)) {
  2917  000BA8  503E               	movf	_delay^0,w,c
  2918  000BAA  B4D8               	btfsc	status,2,c
  2919  000BAC  EFDA  F005         	goto	u3251
  2920  000BB0  EFDC  F005         	goto	u3250
  2921  000BB4                     u3251:
  2922  000BB4  EF5D  F005         	goto	l4686
  2923  000BB8                     u3250:
  2924  000BB8                     
  2925                           ; BSR set to: 0
  2926                           ;main.c: 189:                 delay = 0;
  2927  000BB8  0E00               	movlw	0
  2928  000BBA  6E3E               	movwf	_delay^0,c
  2929                           
  2930                           ;main.c: 190:                 curveMode = OutCurve;
  2931  000BBC  0E00               	movlw	0
  2932  000BBE  6E3F               	movwf	_curveMode^0,c
  2933                           
  2934                           ;main.c: 192:             } else {
  2935  000BC0  EFFF  F005         	goto	l1272
  2936  000BC4                     l4722:
  2937                           
  2938                           ; BSR set to: 0
  2939  000BC4  503F               	movf	_curveMode^0,w,c
  2940  000BC6  6E14               	movwf	??_getCurve^0,c
  2941  000BC8  6A15               	clrf	(??_getCurve+1)^0,c
  2942                           
  2943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2944                           ; Switch size 1, requested type "simple"
  2945                           ; Number of cases is 1, Range of values is 0 to 0
  2946                           ; switch strategies available:
  2947                           ; Name         Instructions Cycles
  2948                           ; simple_byte            4     3 (average)
  2949                           ;	Chosen strategy is simple_byte
  2950  000BCA  5015               	movf	(??_getCurve+1)^0,w,c
  2951  000BCC  0A00               	xorlw	0	; case 0
  2952  000BCE  B4D8               	btfsc	status,2,c
  2953  000BD0  EFEC  F005         	goto	l6020
  2954  000BD4  EFFF  F005         	goto	l1272
  2955  000BD8                     l6020:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ; Switch size 1, requested type "simple"
  2959                           ; Number of cases is 4, Range of values is 0 to 3
  2960                           ; switch strategies available:
  2961                           ; Name         Instructions Cycles
  2962                           ; simple_byte           13     7 (average)
  2963                           ;	Chosen strategy is simple_byte
  2964  000BD8  5014               	movf	??_getCurve^0,w,c
  2965  000BDA  0A00               	xorlw	0	; case 0
  2966  000BDC  B4D8               	btfsc	status,2,c
  2967  000BDE  EFF1  F004         	goto	l4666
  2968  000BE2  0A01               	xorlw	1	; case 1
  2969  000BE4  B4D8               	btfsc	status,2,c
  2970  000BE6  EF4F  F005         	goto	l4682
  2971  000BEA  0A03               	xorlw	3	; case 2
  2972  000BEC  B4D8               	btfsc	status,2,c
  2973  000BEE  EF60  F005         	goto	l4688
  2974  000BF2  0A01               	xorlw	1	; case 3
  2975  000BF4  B4D8               	btfsc	status,2,c
  2976  000BF6  EFD4  F005         	goto	l4714
  2977  000BFA  EFFF  F005         	goto	l1272
  2978  000BFE                     l1272:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;main.c: 197:     oldDistLeft = distLeft;
  2982  000BFE  C09C  F03A         	movff	_distLeft,_oldDistLeft	;volatile
  2983  000C02  C09D  F03B         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  2984                           
  2985                           ;main.c: 198:     oldDistRight = distRight;
  2986  000C06  C098  F092         	movff	_distRight,_oldDistRight	;volatile
  2987  000C0A  C099  F093         	movff	_distRight+1,_oldDistRight+1	;volatile
  2988  000C0E                     
  2989                           ; BSR set to: 0
  2990  000C0E  0012               	return		;funcret
  2991  000C10                     __end_of_getCurve:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _getBatteryVoltage *****************
  2995 ;; Defined at:
  2996 ;;		line 80 in file "main.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 9
  3017 ;; This function calls:
  3018 ;;		_ADCC_GetSingleConversion
  3019 ;; This function is called by:
  3020 ;;		_loop
  3021 ;;		_checkBatt
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text10
  3026  002784                     __ptext10:
  3027                           	callstack 0
  3028  002784                     _getBatteryVoltage:
  3029                           	callstack 20
  3030  002784                     
  3031                           ;main.c: 81:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  3032  002784  0E22               	movlw	34
  3033  002786  EC22  F012         	call	_ADCC_GetSingleConversion
  3034  00278A  C014  F080         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  3035  00278E  C015  F081         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  3036  002792  0012               	return		;funcret
  3037  002794                     __end_of_getBatteryVoltage:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _ADCC_GetSingleConversion *****************
  3041 ;; Defined at:
  3042 ;;		line 137 in file "mcc_generated_files/adcc.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  channel         1    wreg     enum E16058
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;  channel         1   23[COMRAM] enum E16058
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  2   19[COMRAM] unsigned short 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;Total ram usage:        5 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 8
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_getBatteryVoltage
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text11
  3071  002444                     __ptext11:
  3072                           	callstack 0
  3073  002444                     _ADCC_GetSingleConversion:
  3074                           	callstack 20
  3075                           
  3076                           ;incstack = 0
  3077                           ;ADCC_GetSingleConversion@channel stored from wreg
  3078  002444  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  3079  002446                     
  3080                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  3081  002446  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  3082  00244C                     
  3083                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  3084  00244C  013E               	movlb	62	; () banked
  3085  00244E  8FF8               	bsf	248,7,b	;volatile
  3086  002450                     
  3087                           ; BSR set to: 62
  3088                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  3089  002450  9DF8               	bcf	248,6,b	;volatile
  3090  002452                     
  3091                           ; BSR set to: 62
  3092                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  3093  002452  81F8               	bsf	248,0,b	;volatile
  3094  002454                     l1054:
  3095                           
  3096                           ; BSR set to: 62
  3097                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  3098  002454  B1F8               	btfsc	248,0,b	;volatile
  3099  002456  EF2F  F012         	goto	u2511
  3100  00245A  EF31  F012         	goto	u2510
  3101  00245E                     u2511:
  3102  00245E  EF2A  F012         	goto	l1054
  3103  002462                     u2510:
  3104  002462                     
  3105                           ; BSR set to: 62
  3106                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3107  002462  51F0               	movf	240,w,b	;volatile
  3108  002464  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  3109  002466  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  3110  002468  51EF               	movf	239,w,b	;volatile
  3111  00246A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  3112  00246C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  3113  00246E  0E00               	movlw	0
  3114  002470  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  3115  002472  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  3116  002474                     
  3117                           ; BSR set to: 62
  3118  002474  0012               	return		;funcret
  3119  002476                     __end_of_ADCC_GetSingleConversion:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _calcSpeed *****************
  3123 ;; Defined at:
  3124 ;;		line 290 in file "main.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  speed           2   39[BANK0 ] short 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;Total ram usage:        6 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 9
  3145 ;; This function calls:
  3146 ;;		___fladd
  3147 ;;		___flmul
  3148 ;;		___fltol
  3149 ;;		___xxtofl
  3150 ;; This function is called by:
  3151 ;;		_loop
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text12
  3156  000E40                     __ptext12:
  3157                           	callstack 0
  3158  000E40                     _calcSpeed:
  3159                           	callstack 20
  3160  000E40                     
  3161                           ;main.c: 291:     int16_t speed = 0;
  3162  000E40  0E00               	movlw	0
  3163  000E42  0100               	movlb	0	; () banked
  3164  000E44  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3165  000E46  0E00               	movlw	0
  3166  000E48  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3167                           
  3168                           ;main.c: 293:     switch (driveMode) {
  3169  000E4A  EFD6  F007         	goto	l5766
  3170  000E4E                     l5730:
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;main.c: 295:             if (distFront > (30)) {
  3174  000E4E  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3175  000E50  E109               	bnz	u4540
  3176  000E52  0E1F               	movlw	31
  3177  000E54  5C4A               	subwf	_distFront^0,w,c	;volatile
  3178  000E56  A0D8               	btfss	status,0,c
  3179  000E58  EF30  F007         	goto	u4541
  3180  000E5C  EF32  F007         	goto	u4540
  3181  000E60                     u4541:
  3182  000E60  EF34  F007         	goto	l5734
  3183  000E64                     u4540:
  3184  000E64                     
  3185                           ; BSR set to: 0
  3186                           ;main.c: 296:                 driveMode = Straight;
  3187  000E64  0E01               	movlw	1
  3188  000E66  6E4C               	movwf	_driveMode^0,c
  3189  000E68                     l5734:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;main.c: 298:             if (setSpeed > (100)) {
  3193  000E68  BF8B               	btfsc	(_setSpeed+1)& (0+255),7,b
  3194  000E6A  EF40  F007         	goto	u4551
  3195  000E6E  518B               	movf	(_setSpeed+1)& (0+255),w,b
  3196  000E70  E109               	bnz	u4550
  3197  000E72  0E65               	movlw	101
  3198  000E74  5D8A               	subwf	_setSpeed& (0+255),w,b
  3199  000E76  A0D8               	btfss	status,0,c
  3200  000E78  EF40  F007         	goto	u4551
  3201  000E7C  EF42  F007         	goto	u4550
  3202  000E80                     u4551:
  3203  000E80  EF5D  F007         	goto	l5744
  3204  000E84                     u4550:
  3205  000E84                     
  3206                           ; BSR set to: 0
  3207                           ;main.c: 299:                     speed = setSpeed;
  3208  000E84  C08A  F0C6         	movff	_setSpeed,calcSpeed@speed
  3209  000E88  C08B  F0C7         	movff	_setSpeed+1,calcSpeed@speed+1
  3210  000E8C                     
  3211                           ; BSR set to: 0
  3212                           ;main.c: 300:                 if (distFront < (15)) {
  3213  000E8C  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3214  000E8E  E107               	bnz	u4561
  3215  000E90  0E0F               	movlw	15
  3216  000E92  5C4A               	subwf	_distFront^0,w,c	;volatile
  3217  000E94  B0D8               	btfsc	status,0,c
  3218  000E96  EF4F  F007         	goto	u4561
  3219  000E9A  EF51  F007         	goto	u4560
  3220  000E9E                     u4561:
  3221  000E9E  EF57  F007         	goto	l5742
  3222  000EA2                     u4560:
  3223  000EA2                     
  3224                           ; BSR set to: 0
  3225                           ;main.c: 301:                     speed -= 4;
  3226  000EA2  0EFC               	movlw	252
  3227  000EA4  27C6               	addwf	calcSpeed@speed& (0+255),f,b
  3228  000EA6  0EFF               	movlw	255
  3229  000EA8  23C7               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3230                           
  3231                           ;main.c: 302:                 } else {
  3232  000EAA  EFFB  F007         	goto	l5768
  3233  000EAE                     l5742:
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;main.c: 303:                     speed -= 2;
  3237  000EAE  0EFE               	movlw	254
  3238  000EB0  27C6               	addwf	calcSpeed@speed& (0+255),f,b
  3239  000EB2  0EFF               	movlw	255
  3240  000EB4  23C7               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  3241  000EB6  EFFB  F007         	goto	l5768
  3242  000EBA                     l5744:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;main.c: 306:                 speed = (100);
  3246  000EBA  0E00               	movlw	0
  3247  000EBC  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3248  000EBE  0E64               	movlw	100
  3249  000EC0  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3250  000EC2  EFFB  F007         	goto	l5768
  3251  000EC6                     l5746:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;main.c: 310:             if (distFront < (30)) {
  3255  000EC6  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3256  000EC8  E107               	bnz	u4571
  3257  000ECA  0E1E               	movlw	30
  3258  000ECC  5C4A               	subwf	_distFront^0,w,c	;volatile
  3259  000ECE  B0D8               	btfsc	status,0,c
  3260  000ED0  EF6C  F007         	goto	u4571
  3261  000ED4  EF6E  F007         	goto	u4570
  3262  000ED8                     u4571:
  3263  000ED8  EF70  F007         	goto	l5750
  3264  000EDC                     u4570:
  3265  000EDC                     
  3266                           ; BSR set to: 0
  3267                           ;main.c: 311:                 driveMode = Brake;
  3268  000EDC  0E02               	movlw	2
  3269  000EDE  6E4C               	movwf	_driveMode^0,c
  3270  000EE0                     l5750:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;main.c: 314:             if (distFront >= (175)) {
  3274  000EE0  504B               	movf	(_distFront+1)^0,w,c	;volatile
  3275  000EE2  E109               	bnz	u4580
  3276  000EE4  0EAF               	movlw	175
  3277  000EE6  5C4A               	subwf	_distFront^0,w,c	;volatile
  3278  000EE8  A0D8               	btfss	status,0,c
  3279  000EEA  EF79  F007         	goto	u4581
  3280  000EEE  EF7B  F007         	goto	u4580
  3281  000EF2                     u4581:
  3282  000EF2  EFC4  F007         	goto	l5754
  3283  000EF6                     u4580:
  3284  000EF6                     
  3285                           ; BSR set to: 0
  3286                           ;main.c: 315:                 speed = (int16_t) ((0.75) * (distFront - (175)) + (300));
  3287  000EF6  0E00               	movlw	0
  3288  000EF8  6FB0               	movwf	___fladd@a& (0+255),b
  3289  000EFA  0E00               	movlw	0
  3290  000EFC  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3291  000EFE  0E96               	movlw	150
  3292  000F00  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3293  000F02  0E43               	movlw	67
  3294  000F04  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3295  000F06  0E00               	movlw	0
  3296  000F08  6E2E               	movwf	___flmul@a^0,c
  3297  000F0A  0E00               	movlw	0
  3298  000F0C  6E2F               	movwf	(___flmul@a+1)^0,c
  3299  000F0E  0E40               	movlw	64
  3300  000F10  6E30               	movwf	(___flmul@a+2)^0,c
  3301  000F12  0E3F               	movlw	63
  3302  000F14  6E31               	movwf	(___flmul@a+3)^0,c
  3303  000F16  0E51               	movlw	81
  3304  000F18  6FC2               	movwf	??_calcSpeed& (0+255),b
  3305  000F1A  0EFF               	movlw	255
  3306  000F1C  6FC3               	movwf	(??_calcSpeed+1)& (0+255),b
  3307  000F1E  C04A  F0C4         	movff	_distFront,??_calcSpeed+2	;volatile
  3308  000F22  C04B  F0C5         	movff	_distFront+1,??_calcSpeed+3	;volatile
  3309  000F26  51C2               	movf	??_calcSpeed& (0+255),w,b
  3310  000F28  27C4               	addwf	(??_calcSpeed+2)& (0+255),f,b
  3311  000F2A  51C3               	movf	(??_calcSpeed+1)& (0+255),w,b
  3312  000F2C  23C5               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  3313  000F2E  C0C4  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  3314  000F32  C0C5  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  3315  000F36  6A1E               	clrf	(___xxtofl@val+2)^0,c
  3316  000F38  6A1F               	clrf	(___xxtofl@val+3)^0,c
  3317  000F3A  0E00               	movlw	0
  3318  000F3C  EC25  F008         	call	___xxtofl
  3319  000F40  C01C  F02A         	movff	?___xxtofl,___flmul@b
  3320  000F44  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  3321  000F48  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  3322  000F4C  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  3323  000F50  ECBA  F002         	call	___flmul	;wreg free
  3324  000F54  C02A  F0AC         	movff	?___flmul,___fladd@b
  3325  000F58  C02B  F0AD         	movff	?___flmul+1,___fladd@b+1
  3326  000F5C  C02C  F0AE         	movff	?___flmul+2,___fladd@b+2
  3327  000F60  C02D  F0AF         	movff	?___flmul+3,___fladd@b+3
  3328  000F64  EC59  F000         	call	___fladd	;wreg free
  3329  000F68  C0AC  F0B8         	movff	?___fladd,___fltol@f1
  3330  000F6C  C0AD  F0B9         	movff	?___fladd+1,___fltol@f1+1
  3331  000F70  C0AE  F0BA         	movff	?___fladd+2,___fltol@f1+2
  3332  000F74  C0AF  F0BB         	movff	?___fladd+3,___fltol@f1+3
  3333  000F78  EC92  F00B         	call	___fltol	;wreg free
  3334  000F7C  C0B8  F0C6         	movff	?___fltol,calcSpeed@speed
  3335  000F80  C0B9  F0C7         	movff	?___fltol+1,calcSpeed@speed+1
  3336                           
  3337                           ;main.c: 316:             } else {
  3338  000F84  EFFB  F007         	goto	l5768
  3339  000F88                     l5754:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;main.c: 317:                 speed = (300);
  3343  000F88  0E01               	movlw	1
  3344  000F8A  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3345  000F8C  0E2C               	movlw	44
  3346  000F8E  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3347  000F90  EFFB  F007         	goto	l5768
  3348  000F94                     l5756:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;main.c: 322:             speed = (-125);
  3352  000F94  0EFF               	movlw	255
  3353  000F96  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3354  000F98  0E83               	movlw	131
  3355  000F9A  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3356                           
  3357                           ;main.c: 323:             break;
  3358  000F9C  EFFB  F007         	goto	l5768
  3359  000FA0                     l5760:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;main.c: 328:             speed = (170);
  3363  000FA0  0E00               	movlw	0
  3364  000FA2  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3365  000FA4  0EAA               	movlw	170
  3366  000FA6  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3367                           
  3368                           ;main.c: 329:             break;
  3369  000FA8  EFFB  F007         	goto	l5768
  3370  000FAC                     l5766:
  3371                           
  3372                           ; BSR set to: 0
  3373  000FAC  504C               	movf	_driveMode^0,w,c
  3374  000FAE  6FC2               	movwf	??_calcSpeed& (0+255),b
  3375  000FB0  6BC3               	clrf	(??_calcSpeed+1)& (0+255),b
  3376                           
  3377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3378                           ; Switch size 1, requested type "simple"
  3379                           ; Number of cases is 1, Range of values is 0 to 0
  3380                           ; switch strategies available:
  3381                           ; Name         Instructions Cycles
  3382                           ; simple_byte            4     3 (average)
  3383                           ;	Chosen strategy is simple_byte
  3384  000FB2  51C3               	movf	(??_calcSpeed+1)& (0+255),w,b
  3385  000FB4  0A00               	xorlw	0	; case 0
  3386  000FB6  B4D8               	btfsc	status,2,c
  3387  000FB8  EFE0  F007         	goto	l6022
  3388  000FBC  EFFB  F007         	goto	l5768
  3389  000FC0                     l6022:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ; Switch size 1, requested type "simple"
  3393                           ; Number of cases is 6, Range of values is 1 to 6
  3394                           ; switch strategies available:
  3395                           ; Name         Instructions Cycles
  3396                           ; simple_byte           19    10 (average)
  3397                           ;	Chosen strategy is simple_byte
  3398  000FC0  51C2               	movf	??_calcSpeed& (0+255),w,b
  3399  000FC2  0A01               	xorlw	1	; case 1
  3400  000FC4  B4D8               	btfsc	status,2,c
  3401  000FC6  EF63  F007         	goto	l5746
  3402  000FCA  0A03               	xorlw	3	; case 2
  3403  000FCC  B4D8               	btfsc	status,2,c
  3404  000FCE  EF27  F007         	goto	l5730
  3405  000FD2  0A01               	xorlw	1	; case 3
  3406  000FD4  B4D8               	btfsc	status,2,c
  3407  000FD6  EFCA  F007         	goto	l5756
  3408  000FDA  0A07               	xorlw	7	; case 4
  3409  000FDC  B4D8               	btfsc	status,2,c
  3410  000FDE  EFCA  F007         	goto	l5756
  3411  000FE2  0A01               	xorlw	1	; case 5
  3412  000FE4  B4D8               	btfsc	status,2,c
  3413  000FE6  EFD0  F007         	goto	l5760
  3414  000FEA  0A03               	xorlw	3	; case 6
  3415  000FEC  B4D8               	btfsc	status,2,c
  3416  000FEE  EFD0  F007         	goto	l5760
  3417  000FF2  EFFB  F007         	goto	l5768
  3418  000FF6                     l5768:
  3419                           
  3420                           ;main.c: 335:     if (speed > (550)) {
  3421  000FF6  0100               	movlb	0	; () banked
  3422  000FF8  BFC7               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
  3423  000FFA  EF08  F008         	goto	u4591
  3424  000FFE  0E27               	movlw	39
  3425  001000  5DC6               	subwf	calcSpeed@speed& (0+255),w,b
  3426  001002  0E02               	movlw	2
  3427  001004  59C7               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3428  001006  A0D8               	btfss	status,0,c
  3429  001008  EF08  F008         	goto	u4591
  3430  00100C  EF0A  F008         	goto	u4590
  3431  001010                     u4591:
  3432  001010  EF0E  F008         	goto	l5772
  3433  001014                     u4590:
  3434  001014                     
  3435                           ; BSR set to: 0
  3436                           ;main.c: 336:         speed = (550);
  3437  001014  0E02               	movlw	2
  3438  001016  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3439  001018  0E26               	movlw	38
  3440  00101A  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3441  00101C                     l5772:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;main.c: 338:     if (speed < (-250)) {
  3445  00101C  AFC7               	btfss	(calcSpeed@speed+1)& (0+255),7,b
  3446  00101E  EF1A  F008         	goto	u4601
  3447  001022  0E06               	movlw	6
  3448  001024  5DC6               	subwf	calcSpeed@speed& (0+255),w,b
  3449  001026  0EFF               	movlw	255
  3450  001028  59C7               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
  3451  00102A  B0D8               	btfsc	status,0,c
  3452  00102C  EF1A  F008         	goto	u4601
  3453  001030  EF1C  F008         	goto	u4600
  3454  001034                     u4601:
  3455  001034  EF20  F008         	goto	l5776
  3456  001038                     u4600:
  3457  001038                     
  3458                           ; BSR set to: 0
  3459                           ;main.c: 339:         speed = (-250);
  3460  001038  0EFF               	movlw	255
  3461  00103A  6FC7               	movwf	(calcSpeed@speed+1)& (0+255),b
  3462  00103C  0E06               	movlw	6
  3463  00103E  6FC6               	movwf	calcSpeed@speed& (0+255),b
  3464  001040                     l5776:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;main.c: 341:     setSpeed = speed;
  3468  001040  C0C6  F08A         	movff	calcSpeed@speed,_setSpeed
  3469  001044  C0C7  F08B         	movff	calcSpeed@speed+1,_setSpeed+1
  3470  001048                     
  3471                           ; BSR set to: 0
  3472  001048  0012               	return		;funcret
  3473  00104A                     __end_of_calcSpeed:
  3474                           	callstack 0
  3475                           
  3476 ;; *************** function ___fladd *****************
  3477 ;; Defined at:
  3478 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  b               4   13[BANK0 ] void 
  3481 ;;  a               4   17[BANK0 ] void 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  grs             1   24[BANK0 ] unsigned char 
  3484 ;;  bexp            1   23[BANK0 ] unsigned char 
  3485 ;;  aexp            1   22[BANK0 ] unsigned char 
  3486 ;;  signs           1   21[BANK0 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  4   13[BANK0 ] unsigned char 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:       16 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 8
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_calcSpeed
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text13
  3511  0000B2                     __ptext13:
  3512                           	callstack 0
  3513  0000B2                     ___fladd:
  3514                           	callstack 20
  3515  0000B2  0100               	movlb	0	; () banked
  3516  0000B4  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3517  0000B6  0B80               	andlw	128
  3518  0000B8  6FB4               	movwf	___fladd@signs& (0+255),b
  3519  0000BA  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3520  0000BC  25AF               	addwf	(___fladd@b+3)& (0+255),w,b
  3521  0000BE  6FB6               	movwf	___fladd@bexp& (0+255),b
  3522  0000C0                     
  3523                           ; BSR set to: 0
  3524  0000C0  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  3525  0000C2  EF65  F000         	goto	u4121
  3526  0000C6  EF67  F000         	goto	u4120
  3527  0000CA                     u4121:
  3528  0000CA  EF68  F000         	goto	l5500
  3529  0000CE                     u4120:
  3530  0000CE                     
  3531                           ; BSR set to: 0
  3532  0000CE  81B6               	bsf	___fladd@bexp& (0+255),0,b
  3533  0000D0                     l5500:
  3534                           
  3535                           ; BSR set to: 0
  3536  0000D0  51B6               	movf	___fladd@bexp& (0+255),w,b
  3537  0000D2  B4D8               	btfsc	status,2,c
  3538  0000D4  EF6E  F000         	goto	u4131
  3539  0000D8  EF70  F000         	goto	u4130
  3540  0000DC                     u4131:
  3541  0000DC  EF85  F000         	goto	l5510
  3542  0000E0                     u4130:
  3543  0000E0                     
  3544                           ; BSR set to: 0
  3545  0000E0  29B6               	incf	___fladd@bexp& (0+255),w,b
  3546  0000E2  A4D8               	btfss	status,2,c
  3547  0000E4  EF76  F000         	goto	u4141
  3548  0000E8  EF78  F000         	goto	u4140
  3549  0000EC                     u4141:
  3550  0000EC  EF80  F000         	goto	l5506
  3551  0000F0                     u4140:
  3552  0000F0                     
  3553                           ; BSR set to: 0
  3554  0000F0  0E00               	movlw	0
  3555  0000F2  6FAC               	movwf	___fladd@b& (0+255),b
  3556  0000F4  0E00               	movlw	0
  3557  0000F6  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3558  0000F8  0E00               	movlw	0
  3559  0000FA  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3560  0000FC  0E00               	movlw	0
  3561  0000FE  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3562  000100                     l5506:
  3563                           
  3564                           ; BSR set to: 0
  3565  000100  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  3566  000102                     
  3567                           ; BSR set to: 0
  3568  000102  0E00               	movlw	0
  3569  000104  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3570  000106  EF8D  F000         	goto	l5512
  3571  00010A                     l5510:
  3572                           
  3573                           ; BSR set to: 0
  3574  00010A  0E00               	movlw	0
  3575  00010C  6FAC               	movwf	___fladd@b& (0+255),b
  3576  00010E  0E00               	movlw	0
  3577  000110  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3578  000112  0E00               	movlw	0
  3579  000114  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3580  000116  0E00               	movlw	0
  3581  000118  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3582  00011A                     l5512:
  3583                           
  3584                           ; BSR set to: 0
  3585  00011A  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3586  00011C  0B80               	andlw	128
  3587  00011E  6FB5               	movwf	___fladd@aexp& (0+255),b
  3588  000120                     
  3589                           ; BSR set to: 0
  3590  000120  51B4               	movf	___fladd@signs& (0+255),w,b
  3591  000122  19B5               	xorwf	___fladd@aexp& (0+255),w,b
  3592  000124  B4D8               	btfsc	status,2,c
  3593  000126  EF97  F000         	goto	u4151
  3594  00012A  EF99  F000         	goto	u4150
  3595  00012E                     u4151:
  3596  00012E  EF9A  F000         	goto	l5518
  3597  000132                     u4150:
  3598  000132                     
  3599                           ; BSR set to: 0
  3600  000132  8DB4               	bsf	___fladd@signs& (0+255),6,b
  3601  000134                     l5518:
  3602                           
  3603                           ; BSR set to: 0
  3604  000134  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3605  000136  25B3               	addwf	(___fladd@a+3)& (0+255),w,b
  3606  000138  6FB5               	movwf	___fladd@aexp& (0+255),b
  3607  00013A                     
  3608                           ; BSR set to: 0
  3609  00013A  AFB2               	btfss	(___fladd@a+2)& (0+255),7,b
  3610  00013C  EFA2  F000         	goto	u4161
  3611  000140  EFA4  F000         	goto	u4160
  3612  000144                     u4161:
  3613  000144  EFA5  F000         	goto	l5524
  3614  000148                     u4160:
  3615  000148                     
  3616                           ; BSR set to: 0
  3617  000148  81B5               	bsf	___fladd@aexp& (0+255),0,b
  3618  00014A                     l5524:
  3619                           
  3620                           ; BSR set to: 0
  3621  00014A  51B5               	movf	___fladd@aexp& (0+255),w,b
  3622  00014C  B4D8               	btfsc	status,2,c
  3623  00014E  EFAB  F000         	goto	u4171
  3624  000152  EFAD  F000         	goto	u4170
  3625  000156                     u4171:
  3626  000156  EFC2  F000         	goto	l5534
  3627  00015A                     u4170:
  3628  00015A                     
  3629                           ; BSR set to: 0
  3630  00015A  29B5               	incf	___fladd@aexp& (0+255),w,b
  3631  00015C  A4D8               	btfss	status,2,c
  3632  00015E  EFB3  F000         	goto	u4181
  3633  000162  EFB5  F000         	goto	u4180
  3634  000166                     u4181:
  3635  000166  EFBD  F000         	goto	l5530
  3636  00016A                     u4180:
  3637  00016A                     
  3638                           ; BSR set to: 0
  3639  00016A  0E00               	movlw	0
  3640  00016C  6FB0               	movwf	___fladd@a& (0+255),b
  3641  00016E  0E00               	movlw	0
  3642  000170  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3643  000172  0E00               	movlw	0
  3644  000174  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3645  000176  0E00               	movlw	0
  3646  000178  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3647  00017A                     l5530:
  3648                           
  3649                           ; BSR set to: 0
  3650  00017A  8FB2               	bsf	(___fladd@a+2)& (0+255),7,b
  3651  00017C                     
  3652                           ; BSR set to: 0
  3653  00017C  0E00               	movlw	0
  3654  00017E  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3655  000180  EFCA  F000         	goto	l5536
  3656  000184                     l5534:
  3657                           
  3658                           ; BSR set to: 0
  3659  000184  0E00               	movlw	0
  3660  000186  6FB0               	movwf	___fladd@a& (0+255),b
  3661  000188  0E00               	movlw	0
  3662  00018A  6FB1               	movwf	(___fladd@a+1)& (0+255),b
  3663  00018C  0E00               	movlw	0
  3664  00018E  6FB2               	movwf	(___fladd@a+2)& (0+255),b
  3665  000190  0E00               	movlw	0
  3666  000192  6FB3               	movwf	(___fladd@a+3)& (0+255),b
  3667  000194                     l5536:
  3668                           
  3669                           ; BSR set to: 0
  3670  000194  51B6               	movf	___fladd@bexp& (0+255),w,b
  3671  000196  5DB5               	subwf	___fladd@aexp& (0+255),w,b
  3672  000198  B0D8               	btfsc	status,0,c
  3673  00019A  EFD1  F000         	goto	u4191
  3674  00019E  EFD3  F000         	goto	u4190
  3675  0001A2                     u4191:
  3676  0001A2  EFFA  F000         	goto	l5572
  3677  0001A6                     u4190:
  3678  0001A6                     
  3679                           ; BSR set to: 0
  3680  0001A6  ADB4               	btfss	___fladd@signs& (0+255),6,b
  3681  0001A8  EFD8  F000         	goto	u4201
  3682  0001AC  EFDA  F000         	goto	u4200
  3683  0001B0                     u4201:
  3684  0001B0  EFDC  F000         	goto	l5542
  3685  0001B4                     u4200:
  3686  0001B4                     
  3687                           ; BSR set to: 0
  3688  0001B4  0E80               	movlw	128
  3689  0001B6  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  3690  0001B8                     l5542:
  3691                           
  3692                           ; BSR set to: 0
  3693  0001B8  C0B6  F0B7         	movff	___fladd@bexp,___fladd@grs
  3694  0001BC                     
  3695                           ; BSR set to: 0
  3696  0001BC  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  3697  0001C0                     
  3698                           ; BSR set to: 0
  3699  0001C0  C0B7  F0B5         	movff	___fladd@grs,___fladd@aexp
  3700  0001C4                     
  3701                           ; BSR set to: 0
  3702  0001C4  C0AC  F0B7         	movff	___fladd@b,___fladd@grs
  3703  0001C8                     
  3704                           ; BSR set to: 0
  3705  0001C8  C0B0  F0AC         	movff	___fladd@a,___fladd@b
  3706  0001CC                     
  3707                           ; BSR set to: 0
  3708  0001CC  C0B7  F0B0         	movff	___fladd@grs,___fladd@a
  3709  0001D0                     
  3710                           ; BSR set to: 0
  3711  0001D0  C0AD  F0B7         	movff	___fladd@b+1,___fladd@grs
  3712  0001D4                     
  3713                           ; BSR set to: 0
  3714  0001D4  C0B1  F0AD         	movff	___fladd@a+1,___fladd@b+1
  3715  0001D8                     
  3716                           ; BSR set to: 0
  3717  0001D8  C0B7  F0B1         	movff	___fladd@grs,___fladd@a+1
  3718  0001DC                     
  3719                           ; BSR set to: 0
  3720  0001DC  C0AE  F0B7         	movff	___fladd@b+2,___fladd@grs
  3721  0001E0                     
  3722                           ; BSR set to: 0
  3723  0001E0  C0B2  F0AE         	movff	___fladd@a+2,___fladd@b+2
  3724  0001E4                     
  3725                           ; BSR set to: 0
  3726  0001E4  C0B7  F0B2         	movff	___fladd@grs,___fladd@a+2
  3727  0001E8                     
  3728                           ; BSR set to: 0
  3729  0001E8  C0AF  F0B7         	movff	___fladd@b+3,___fladd@grs
  3730  0001EC                     
  3731                           ; BSR set to: 0
  3732  0001EC  C0B3  F0AF         	movff	___fladd@a+3,___fladd@b+3
  3733  0001F0                     
  3734                           ; BSR set to: 0
  3735  0001F0  C0B7  F0B3         	movff	___fladd@grs,___fladd@a+3
  3736  0001F4                     l5572:
  3737                           
  3738                           ; BSR set to: 0
  3739  0001F4  0E00               	movlw	0
  3740  0001F6  6FB7               	movwf	___fladd@grs& (0+255),b
  3741  0001F8                     
  3742                           ; BSR set to: 0
  3743  0001F8  51B6               	movf	___fladd@bexp& (0+255),w,b
  3744  0001FA  C0B5  F036         	movff	___fladd@aexp,??___fladd
  3745  0001FE  6A37               	clrf	(??___fladd+1)^0,c
  3746  000200  5E36               	subwf	??___fladd^0,f,c
  3747  000202  0E00               	movlw	0
  3748  000204  5A37               	subwfb	(??___fladd+1)^0,f,c
  3749  000206  BE37               	btfsc	(??___fladd+1)^0,7,c
  3750  000208  EF0F  F001         	goto	u4211
  3751  00020C  5037               	movf	(??___fladd+1)^0,w,c
  3752  00020E  E109               	bnz	u4210
  3753  000210  0E1A               	movlw	26
  3754  000212  5C36               	subwf	??___fladd^0,w,c
  3755  000214  A0D8               	btfss	status,0,c
  3756  000216  EF0F  F001         	goto	u4211
  3757  00021A  EF11  F001         	goto	u4210
  3758  00021E                     u4211:
  3759  00021E  EF48  F001         	goto	l1922
  3760  000222                     u4210:
  3761  000222                     
  3762                           ; BSR set to: 0
  3763  000222  51AC               	movf	___fladd@b& (0+255),w,b
  3764  000224  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  3765  000226  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  3766  000228  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  3767  00022A  A4D8               	btfss	status,2,c
  3768  00022C  EF1A  F001         	goto	u4221
  3769  000230  EF1D  F001         	goto	u4220
  3770  000234                     u4221:
  3771  000234  0E01               	movlw	1
  3772  000236  EF1E  F001         	goto	u4230
  3773  00023A                     u4220:
  3774  00023A  0E00               	movlw	0
  3775  00023C                     u4230:
  3776  00023C  6FB7               	movwf	___fladd@grs& (0+255),b
  3777  00023E                     
  3778                           ; BSR set to: 0
  3779  00023E  0E00               	movlw	0
  3780  000240  6FAC               	movwf	___fladd@b& (0+255),b
  3781  000242  0E00               	movlw	0
  3782  000244  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3783  000246  0E00               	movlw	0
  3784  000248  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3785  00024A  0E00               	movlw	0
  3786  00024C  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3787  00024E                     
  3788                           ; BSR set to: 0
  3789  00024E  C0B5  F0B6         	movff	___fladd@aexp,___fladd@bexp
  3790  000252  EF51  F001         	goto	l1921
  3791  000256                     l1923:
  3792                           
  3793                           ; BSR set to: 0
  3794  000256  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3795  000258  EF30  F001         	goto	u4241
  3796  00025C  EF32  F001         	goto	u4240
  3797  000260                     u4241:
  3798  000260  EF38  F001         	goto	l5584
  3799  000264                     u4240:
  3800  000264                     
  3801                           ; BSR set to: 0
  3802  000264  90D8               	bcf	status,0,c
  3803  000266  31B7               	rrcf	___fladd@grs& (0+255),w,b
  3804  000268  0901               	iorlw	1
  3805  00026A  6FB7               	movwf	___fladd@grs& (0+255),b
  3806  00026C  EF3A  F001         	goto	l5586
  3807  000270                     l5584:
  3808                           
  3809                           ; BSR set to: 0
  3810  000270  90D8               	bcf	status,0,c
  3811  000272  33B7               	rrcf	___fladd@grs& (0+255),f,b
  3812  000274                     l5586:
  3813                           
  3814                           ; BSR set to: 0
  3815  000274  A1AC               	btfss	___fladd@b& (0+255),0,b
  3816  000276  EF3F  F001         	goto	u4251
  3817  00027A  EF41  F001         	goto	u4250
  3818  00027E                     u4251:
  3819  00027E  EF42  F001         	goto	l5590
  3820  000282                     u4250:
  3821  000282                     
  3822                           ; BSR set to: 0
  3823  000282  8FB7               	bsf	___fladd@grs& (0+255),7,b
  3824  000284                     l5590:
  3825                           
  3826                           ; BSR set to: 0
  3827  000284  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  3828  000286  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  3829  000288  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  3830  00028A  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  3831  00028C  33AC               	rrcf	___fladd@b& (0+255),f,b
  3832  00028E                     
  3833                           ; BSR set to: 0
  3834  00028E  2BB6               	incf	___fladd@bexp& (0+255),f,b
  3835  000290                     l1922:
  3836                           
  3837                           ; BSR set to: 0
  3838  000290  51B5               	movf	___fladd@aexp& (0+255),w,b
  3839  000292  5DB6               	subwf	___fladd@bexp& (0+255),w,b
  3840  000294  A0D8               	btfss	status,0,c
  3841  000296  EF4F  F001         	goto	u4261
  3842  00029A  EF51  F001         	goto	u4260
  3843  00029E                     u4261:
  3844  00029E  EF2B  F001         	goto	l1923
  3845  0002A2                     u4260:
  3846  0002A2                     l1921:
  3847                           
  3848                           ; BSR set to: 0
  3849  0002A2  BDB4               	btfsc	___fladd@signs& (0+255),6,b
  3850  0002A4  EF56  F001         	goto	u4271
  3851  0002A8  EF58  F001         	goto	u4270
  3852  0002AC                     u4271:
  3853  0002AC  EF98  F001         	goto	l5618
  3854  0002B0                     u4270:
  3855  0002B0                     
  3856                           ; BSR set to: 0
  3857  0002B0  51B6               	movf	___fladd@bexp& (0+255),w,b
  3858  0002B2  A4D8               	btfss	status,2,c
  3859  0002B4  EF5E  F001         	goto	u4281
  3860  0002B8  EF60  F001         	goto	u4280
  3861  0002BC                     u4281:
  3862  0002BC  EF6A  F001         	goto	l5600
  3863  0002C0                     u4280:
  3864  0002C0                     
  3865                           ; BSR set to: 0
  3866  0002C0  0E00               	movlw	0
  3867  0002C2  6FAC               	movwf	?___fladd& (0+255),b
  3868  0002C4  0E00               	movlw	0
  3869  0002C6  6FAD               	movwf	(?___fladd+1)& (0+255),b
  3870  0002C8  0E00               	movlw	0
  3871  0002CA  6FAE               	movwf	(?___fladd+2)& (0+255),b
  3872  0002CC  0E00               	movlw	0
  3873  0002CE  6FAF               	movwf	(?___fladd+3)& (0+255),b
  3874  0002D0  EFB9  F002         	goto	l1930
  3875  0002D4                     l5600:
  3876                           
  3877                           ; BSR set to: 0
  3878  0002D4  51B0               	movf	___fladd@a& (0+255),w,b
  3879  0002D6  27AC               	addwf	___fladd@b& (0+255),f,b
  3880  0002D8  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3881  0002DA  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  3882  0002DC  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3883  0002DE  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  3884  0002E0  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3885  0002E2  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  3886  0002E4                     
  3887                           ; BSR set to: 0
  3888  0002E4  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  3889  0002E6  EF77  F001         	goto	u4291
  3890  0002EA  EF79  F001         	goto	u4290
  3891  0002EE                     u4291:
  3892  0002EE  EF25  F002         	goto	l5654
  3893  0002F2                     u4290:
  3894  0002F2                     
  3895                           ; BSR set to: 0
  3896  0002F2  A1B7               	btfss	___fladd@grs& (0+255),0,b
  3897  0002F4  EF7E  F001         	goto	u4301
  3898  0002F8  EF80  F001         	goto	u4300
  3899  0002FC                     u4301:
  3900  0002FC  EF86  F001         	goto	l5608
  3901  000300                     u4300:
  3902  000300                     
  3903                           ; BSR set to: 0
  3904  000300  90D8               	bcf	status,0,c
  3905  000302  31B7               	rrcf	___fladd@grs& (0+255),w,b
  3906  000304  0901               	iorlw	1
  3907  000306  6FB7               	movwf	___fladd@grs& (0+255),b
  3908  000308  EF88  F001         	goto	l5610
  3909  00030C                     l5608:
  3910                           
  3911                           ; BSR set to: 0
  3912  00030C  90D8               	bcf	status,0,c
  3913  00030E  33B7               	rrcf	___fladd@grs& (0+255),f,b
  3914  000310                     l5610:
  3915                           
  3916                           ; BSR set to: 0
  3917  000310  A1AC               	btfss	___fladd@b& (0+255),0,b
  3918  000312  EF8D  F001         	goto	u4311
  3919  000316  EF8F  F001         	goto	u4310
  3920  00031A                     u4311:
  3921  00031A  EF90  F001         	goto	l5614
  3922  00031E                     u4310:
  3923  00031E                     
  3924                           ; BSR set to: 0
  3925  00031E  8FB7               	bsf	___fladd@grs& (0+255),7,b
  3926  000320                     l5614:
  3927                           
  3928                           ; BSR set to: 0
  3929  000320  35AF               	rlcf	(___fladd@b+3)& (0+255),w,b
  3930  000322  33AF               	rrcf	(___fladd@b+3)& (0+255),f,b
  3931  000324  33AE               	rrcf	(___fladd@b+2)& (0+255),f,b
  3932  000326  33AD               	rrcf	(___fladd@b+1)& (0+255),f,b
  3933  000328  33AC               	rrcf	___fladd@b& (0+255),f,b
  3934  00032A                     
  3935                           ; BSR set to: 0
  3936  00032A  2BB6               	incf	___fladd@bexp& (0+255),f,b
  3937  00032C  EF25  F002         	goto	l5654
  3938  000330                     l5618:
  3939                           
  3940                           ; BSR set to: 0
  3941  000330  51B0               	movf	___fladd@a& (0+255),w,b
  3942  000332  5DAC               	subwf	___fladd@b& (0+255),w,b
  3943  000334  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  3944  000336  59AD               	subwfb	(___fladd@b+1)& (0+255),w,b
  3945  000338  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  3946  00033A  59AE               	subwfb	(___fladd@b+2)& (0+255),w,b
  3947  00033C  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3948  00033E  0A80               	xorlw	128
  3949  000340  6E36               	movwf	??___fladd^0,c
  3950  000342  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  3951  000344  0A80               	xorlw	128
  3952  000346  5836               	subwfb	??___fladd^0,w,c
  3953  000348  B0D8               	btfsc	status,0,c
  3954  00034A  EFA9  F001         	goto	u4321
  3955  00034E  EFAB  F001         	goto	u4320
  3956  000352                     u4321:
  3957  000352  EFD6  F001         	goto	l5628
  3958  000356                     u4320:
  3959  000356                     
  3960                           ; BSR set to: 0
  3961  000356  51AC               	movf	___fladd@b& (0+255),w,b
  3962  000358  5DB0               	subwf	___fladd@a& (0+255),w,b
  3963  00035A  6E36               	movwf	??___fladd^0,c
  3964  00035C  51AD               	movf	(___fladd@b+1)& (0+255),w,b
  3965  00035E  59B1               	subwfb	(___fladd@a+1)& (0+255),w,b
  3966  000360  6E37               	movwf	(??___fladd+1)^0,c
  3967  000362  51AE               	movf	(___fladd@b+2)& (0+255),w,b
  3968  000364  59B2               	subwfb	(___fladd@a+2)& (0+255),w,b
  3969  000366  6E38               	movwf	(??___fladd+2)^0,c
  3970  000368  51AF               	movf	(___fladd@b+3)& (0+255),w,b
  3971  00036A  59B3               	subwfb	(___fladd@a+3)& (0+255),w,b
  3972  00036C  6E39               	movwf	(??___fladd+3)^0,c
  3973  00036E  0EFF               	movlw	255
  3974  000370  2436               	addwf	??___fladd^0,w,c
  3975  000372  6FAC               	movwf	___fladd@b& (0+255),b
  3976  000374  0EFF               	movlw	255
  3977  000376  2037               	addwfc	(??___fladd+1)^0,w,c
  3978  000378  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  3979  00037A  0EFF               	movlw	255
  3980  00037C  2038               	addwfc	(??___fladd+2)^0,w,c
  3981  00037E  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  3982  000380  0EFF               	movlw	255
  3983  000382  2039               	addwfc	(??___fladd+3)^0,w,c
  3984  000384  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  3985  000386  0E80               	movlw	128
  3986  000388  1BB4               	xorwf	___fladd@signs& (0+255),f,b
  3987  00038A                     
  3988                           ; BSR set to: 0
  3989  00038A  6DB7               	negf	___fladd@grs& (0+255),b
  3990  00038C                     
  3991                           ; BSR set to: 0
  3992  00038C  51B7               	movf	___fladd@grs& (0+255),w,b
  3993  00038E  A4D8               	btfss	status,2,c
  3994  000390  EFCC  F001         	goto	u4331
  3995  000394  EFCE  F001         	goto	u4330
  3996  000398                     u4331:
  3997  000398  EFDE  F001         	goto	l1938
  3998  00039C                     u4330:
  3999  00039C                     
  4000                           ; BSR set to: 0
  4001  00039C  0E01               	movlw	1
  4002  00039E  27AC               	addwf	___fladd@b& (0+255),f,b
  4003  0003A0  0E00               	movlw	0
  4004  0003A2  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  4005  0003A4  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  4006  0003A6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  4007  0003A8  EFDE  F001         	goto	l1938
  4008  0003AC                     l5628:
  4009                           
  4010                           ; BSR set to: 0
  4011  0003AC  51B0               	movf	___fladd@a& (0+255),w,b
  4012  0003AE  5FAC               	subwf	___fladd@b& (0+255),f,b
  4013  0003B0  51B1               	movf	(___fladd@a+1)& (0+255),w,b
  4014  0003B2  5BAD               	subwfb	(___fladd@b+1)& (0+255),f,b
  4015  0003B4  51B2               	movf	(___fladd@a+2)& (0+255),w,b
  4016  0003B6  5BAE               	subwfb	(___fladd@b+2)& (0+255),f,b
  4017  0003B8  51B3               	movf	(___fladd@a+3)& (0+255),w,b
  4018  0003BA  5BAF               	subwfb	(___fladd@b+3)& (0+255),f,b
  4019  0003BC                     l1938:
  4020                           
  4021                           ; BSR set to: 0
  4022  0003BC  51AC               	movf	___fladd@b& (0+255),w,b
  4023  0003BE  11AD               	iorwf	(___fladd@b+1)& (0+255),w,b
  4024  0003C0  11AE               	iorwf	(___fladd@b+2)& (0+255),w,b
  4025  0003C2  11AF               	iorwf	(___fladd@b+3)& (0+255),w,b
  4026  0003C4  A4D8               	btfss	status,2,c
  4027  0003C6  EFE7  F001         	goto	u4341
  4028  0003CA  EFE9  F001         	goto	u4340
  4029  0003CE                     u4341:
  4030  0003CE  EF1E  F002         	goto	l5652
  4031  0003D2                     u4340:
  4032  0003D2                     
  4033                           ; BSR set to: 0
  4034  0003D2  51B7               	movf	___fladd@grs& (0+255),w,b
  4035  0003D4  A4D8               	btfss	status,2,c
  4036  0003D6  EFEF  F001         	goto	u4351
  4037  0003DA  EFF1  F001         	goto	u4350
  4038  0003DE                     u4351:
  4039  0003DE  EF1E  F002         	goto	l5652
  4040  0003E2                     u4350:
  4041  0003E2                     
  4042                           ; BSR set to: 0
  4043  0003E2  0E00               	movlw	0
  4044  0003E4  6FAC               	movwf	?___fladd& (0+255),b
  4045  0003E6  0E00               	movlw	0
  4046  0003E8  6FAD               	movwf	(?___fladd+1)& (0+255),b
  4047  0003EA  0E00               	movlw	0
  4048  0003EC  6FAE               	movwf	(?___fladd+2)& (0+255),b
  4049  0003EE  0E00               	movlw	0
  4050  0003F0  6FAF               	movwf	(?___fladd+3)& (0+255),b
  4051  0003F2  EFB9  F002         	goto	l1930
  4052  0003F6                     l5636:
  4053                           
  4054                           ; BSR set to: 0
  4055  0003F6  90D8               	bcf	status,0,c
  4056  0003F8  37AC               	rlcf	___fladd@b& (0+255),f,b
  4057  0003FA  37AD               	rlcf	(___fladd@b+1)& (0+255),f,b
  4058  0003FC  37AE               	rlcf	(___fladd@b+2)& (0+255),f,b
  4059  0003FE  37AF               	rlcf	(___fladd@b+3)& (0+255),f,b
  4060  000400                     
  4061                           ; BSR set to: 0
  4062  000400  AFB7               	btfss	___fladd@grs& (0+255),7,b
  4063  000402  EF05  F002         	goto	u4361
  4064  000406  EF07  F002         	goto	u4360
  4065  00040A                     u4361:
  4066  00040A  EF08  F002         	goto	l5642
  4067  00040E                     u4360:
  4068  00040E                     
  4069                           ; BSR set to: 0
  4070  00040E  81AC               	bsf	___fladd@b& (0+255),0,b
  4071  000410                     l5642:
  4072                           
  4073                           ; BSR set to: 0
  4074  000410  A1B7               	btfss	___fladd@grs& (0+255),0,b
  4075  000412  EF0D  F002         	goto	u4371
  4076  000416  EF0F  F002         	goto	u4370
  4077  00041A                     u4371:
  4078  00041A  EF13  F002         	goto	l5646
  4079  00041E                     u4370:
  4080  00041E                     
  4081                           ; BSR set to: 0
  4082  00041E  80D8               	bsf	status,0,c
  4083  000420  37B7               	rlcf	___fladd@grs& (0+255),f,b
  4084  000422  EF15  F002         	goto	l5648
  4085  000426                     l5646:
  4086                           
  4087                           ; BSR set to: 0
  4088  000426  90D8               	bcf	status,0,c
  4089  000428  37B7               	rlcf	___fladd@grs& (0+255),f,b
  4090  00042A                     l5648:
  4091                           
  4092                           ; BSR set to: 0
  4093  00042A  51B6               	movf	___fladd@bexp& (0+255),w,b
  4094  00042C  B4D8               	btfsc	status,2,c
  4095  00042E  EF1B  F002         	goto	u4381
  4096  000432  EF1D  F002         	goto	u4380
  4097  000436                     u4381:
  4098  000436  EF1E  F002         	goto	l5652
  4099  00043A                     u4380:
  4100  00043A                     
  4101                           ; BSR set to: 0
  4102  00043A  07B6               	decf	___fladd@bexp& (0+255),f,b
  4103  00043C                     l5652:
  4104                           
  4105                           ; BSR set to: 0
  4106  00043C  AFAE               	btfss	(___fladd@b+2)& (0+255),7,b
  4107  00043E  EF23  F002         	goto	u4391
  4108  000442  EF25  F002         	goto	u4390
  4109  000446                     u4391:
  4110  000446  EFFB  F001         	goto	l5636
  4111  00044A                     u4390:
  4112  00044A                     l5654:
  4113                           
  4114                           ; BSR set to: 0
  4115  00044A  0E00               	movlw	0
  4116  00044C  6FB5               	movwf	___fladd@aexp& (0+255),b
  4117  00044E                     
  4118                           ; BSR set to: 0
  4119  00044E  AFB7               	btfss	___fladd@grs& (0+255),7,b
  4120  000450  EF2C  F002         	goto	u4401
  4121  000454  EF2E  F002         	goto	u4400
  4122  000458                     u4401:
  4123  000458  EF46  F002         	goto	l1947
  4124  00045C                     u4400:
  4125  00045C                     
  4126                           ; BSR set to: 0
  4127  00045C  C0B7  F036         	movff	___fladd@grs,??___fladd
  4128  000460  0E7F               	movlw	127
  4129  000462  1636               	andwf	??___fladd^0,f,c
  4130  000464  B4D8               	btfsc	status,2,c
  4131  000466  EF37  F002         	goto	u4411
  4132  00046A  EF39  F002         	goto	u4410
  4133  00046E                     u4411:
  4134  00046E  EF3D  F002         	goto	l1948
  4135  000472                     u4410:
  4136  000472                     l5660:
  4137                           
  4138                           ; BSR set to: 0
  4139  000472  0E01               	movlw	1
  4140  000474  6FB5               	movwf	___fladd@aexp& (0+255),b
  4141  000476  EF46  F002         	goto	l1947
  4142  00047A                     l1948:
  4143                           
  4144                           ; BSR set to: 0
  4145  00047A  A1AC               	btfss	___fladd@b& (0+255),0,b
  4146  00047C  EF42  F002         	goto	u4421
  4147  000480  EF44  F002         	goto	u4420
  4148  000484                     u4421:
  4149  000484  EF46  F002         	goto	l1947
  4150  000488                     u4420:
  4151  000488  EF39  F002         	goto	l5660
  4152  00048C                     l1947:
  4153                           
  4154                           ; BSR set to: 0
  4155  00048C  51B5               	movf	___fladd@aexp& (0+255),w,b
  4156  00048E  B4D8               	btfsc	status,2,c
  4157  000490  EF4C  F002         	goto	u4431
  4158  000494  EF4E  F002         	goto	u4430
  4159  000498                     u4431:
  4160  000498  EF79  F002         	goto	l5672
  4161  00049C                     u4430:
  4162  00049C                     
  4163                           ; BSR set to: 0
  4164  00049C  0E01               	movlw	1
  4165  00049E  27AC               	addwf	___fladd@b& (0+255),f,b
  4166  0004A0  0E00               	movlw	0
  4167  0004A2  23AD               	addwfc	(___fladd@b+1)& (0+255),f,b
  4168  0004A4  23AE               	addwfc	(___fladd@b+2)& (0+255),f,b
  4169  0004A6  23AF               	addwfc	(___fladd@b+3)& (0+255),f,b
  4170  0004A8                     
  4171                           ; BSR set to: 0
  4172  0004A8  A1AF               	btfss	(___fladd@b+3)& (0+255),0,b
  4173  0004AA  EF59  F002         	goto	u4441
  4174  0004AE  EF5B  F002         	goto	u4440
  4175  0004B2                     u4441:
  4176  0004B2  EF79  F002         	goto	l5672
  4177  0004B6                     u4440:
  4178  0004B6                     
  4179                           ; BSR set to: 0
  4180  0004B6  C0AC  F036         	movff	___fladd@b,??___fladd
  4181  0004BA  C0AD  F037         	movff	___fladd@b+1,??___fladd+1
  4182  0004BE  C0AE  F038         	movff	___fladd@b+2,??___fladd+2
  4183  0004C2  C0AF  F039         	movff	___fladd@b+3,??___fladd+3
  4184  0004C6  3439               	rlcf	(??___fladd+3)^0,w,c
  4185  0004C8  3239               	rrcf	(??___fladd+3)^0,f,c
  4186  0004CA  3238               	rrcf	(??___fladd+2)^0,f,c
  4187  0004CC  3237               	rrcf	(??___fladd+1)^0,f,c
  4188  0004CE  3236               	rrcf	??___fladd^0,f,c
  4189  0004D0  C036  F0AC         	movff	??___fladd,___fladd@b
  4190  0004D4  C037  F0AD         	movff	??___fladd+1,___fladd@b+1
  4191  0004D8  C038  F0AE         	movff	??___fladd+2,___fladd@b+2
  4192  0004DC  C039  F0AF         	movff	??___fladd+3,___fladd@b+3
  4193  0004E0  29B6               	incf	___fladd@bexp& (0+255),w,b
  4194  0004E2  B4D8               	btfsc	status,2,c
  4195  0004E4  EF76  F002         	goto	u4451
  4196  0004E8  EF78  F002         	goto	u4450
  4197  0004EC                     u4451:
  4198  0004EC  EF79  F002         	goto	l5672
  4199  0004F0                     u4450:
  4200  0004F0                     
  4201                           ; BSR set to: 0
  4202  0004F0  2BB6               	incf	___fladd@bexp& (0+255),f,b
  4203  0004F2                     l5672:
  4204                           
  4205                           ; BSR set to: 0
  4206  0004F2  29B6               	incf	___fladd@bexp& (0+255),w,b
  4207  0004F4  B4D8               	btfsc	status,2,c
  4208  0004F6  EF7F  F002         	goto	u4461
  4209  0004FA  EF81  F002         	goto	u4460
  4210  0004FE                     u4461:
  4211  0004FE  EF89  F002         	goto	l5676
  4212  000502                     u4460:
  4213  000502                     
  4214                           ; BSR set to: 0
  4215  000502  51B6               	movf	___fladd@bexp& (0+255),w,b
  4216  000504  A4D8               	btfss	status,2,c
  4217  000506  EF87  F002         	goto	u4471
  4218  00050A  EF89  F002         	goto	u4470
  4219  00050E                     u4471:
  4220  00050E  EF9B  F002         	goto	l5680
  4221  000512                     u4470:
  4222  000512                     l5676:
  4223                           
  4224                           ; BSR set to: 0
  4225  000512  0E00               	movlw	0
  4226  000514  6FAC               	movwf	___fladd@b& (0+255),b
  4227  000516  0E00               	movlw	0
  4228  000518  6FAD               	movwf	(___fladd@b+1)& (0+255),b
  4229  00051A  0E00               	movlw	0
  4230  00051C  6FAE               	movwf	(___fladd@b+2)& (0+255),b
  4231  00051E  0E00               	movlw	0
  4232  000520  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  4233  000522  51B6               	movf	___fladd@bexp& (0+255),w,b
  4234  000524  A4D8               	btfss	status,2,c
  4235  000526  EF97  F002         	goto	u4481
  4236  00052A  EF99  F002         	goto	u4480
  4237  00052E                     u4481:
  4238  00052E  EF9B  F002         	goto	l5680
  4239  000532                     u4480:
  4240  000532                     
  4241                           ; BSR set to: 0
  4242  000532  0E00               	movlw	0
  4243  000534  6FB4               	movwf	___fladd@signs& (0+255),b
  4244  000536                     l5680:
  4245                           
  4246                           ; BSR set to: 0
  4247  000536  A1B6               	btfss	___fladd@bexp& (0+255),0,b
  4248  000538  EFA0  F002         	goto	u4491
  4249  00053C  EFA2  F002         	goto	u4490
  4250  000540                     u4491:
  4251  000540  EFA5  F002         	goto	l5684
  4252  000544                     u4490:
  4253  000544                     
  4254                           ; BSR set to: 0
  4255  000544  8FAE               	bsf	(___fladd@b+2)& (0+255),7,b
  4256  000546  EFA6  F002         	goto	l5686
  4257  00054A                     l5684:
  4258                           
  4259                           ; BSR set to: 0
  4260  00054A  9FAE               	bcf	(___fladd@b+2)& (0+255),7,b
  4261  00054C                     l5686:
  4262                           
  4263                           ; BSR set to: 0
  4264  00054C  90D8               	bcf	status,0,c
  4265  00054E  31B6               	rrcf	___fladd@bexp& (0+255),w,b
  4266  000550  6FAF               	movwf	(___fladd@b+3)& (0+255),b
  4267  000552                     
  4268                           ; BSR set to: 0
  4269  000552  AFB4               	btfss	___fladd@signs& (0+255),7,b
  4270  000554  EFAE  F002         	goto	u4501
  4271  000558  EFB0  F002         	goto	u4500
  4272  00055C                     u4501:
  4273  00055C  EFB1  F002         	goto	l5692
  4274  000560                     u4500:
  4275  000560                     
  4276                           ; BSR set to: 0
  4277  000560  8FAF               	bsf	(___fladd@b+3)& (0+255),7,b
  4278  000562                     l5692:
  4279                           
  4280                           ; BSR set to: 0
  4281  000562  C0AC  F0AC         	movff	___fladd@b,?___fladd
  4282  000566  C0AD  F0AD         	movff	___fladd@b+1,?___fladd+1
  4283  00056A  C0AE  F0AE         	movff	___fladd@b+2,?___fladd+2
  4284  00056E  C0AF  F0AF         	movff	___fladd@b+3,?___fladd+3
  4285  000572                     l1930:
  4286                           
  4287                           ; BSR set to: 0
  4288  000572  0012               	return		;funcret
  4289  000574                     __end_of___fladd:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _calcMotorPow *****************
  4293 ;; Defined at:
  4294 ;;		line 344 in file "main.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  oldSpeedDelt    2   39[BANK0 ] short 
  4299 ;;  setSpeedDelt    2   37[BANK0 ] short 
  4300 ;;  addMPow         1   41[BANK0 ] char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        7 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 10
  4317 ;; This function calls:
  4318 ;;		___awdiv
  4319 ;;		___flmul
  4320 ;;		___fltol
  4321 ;;		___xxtofl
  4322 ;;		_actSpeed
  4323 ;;		_setMotor
  4324 ;; This function is called by:
  4325 ;;		_loop
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text14
  4330  0013A2                     __ptext14:
  4331                           	callstack 0
  4332  0013A2                     _calcMotorPow:
  4333                           	callstack 19
  4334  0013A2                     
  4335                           ;main.c: 345:     currentSpeed = actSpeed();
  4336  0013A2  EC78  F00F         	call	_actSpeed	;wreg free
  4337  0013A6  C022  F088         	movff	?_actSpeed,_currentSpeed
  4338  0013AA  C023  F089         	movff	?_actSpeed+1,_currentSpeed+1
  4339  0013AE                     
  4340                           ;main.c: 347:     int16_t setSpeedDelta = setSpeed - currentSpeed;
  4341  0013AE  0100               	movlb	0	; () banked
  4342  0013B0  5188               	movf	_currentSpeed& (0+255),w,b
  4343  0013B2  5D8A               	subwf	_setSpeed& (0+255),w,b
  4344  0013B4  6FC4               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
  4345  0013B6  5189               	movf	(_currentSpeed+1)& (0+255),w,b
  4346  0013B8  598B               	subwfb	(_setSpeed+1)& (0+255),w,b
  4347  0013BA  6FC5               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
  4348  0013BC                     
  4349                           ; BSR set to: 0
  4350                           ;main.c: 348:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
  4351  0013BC  5186               	movf	_oldSpeed& (0+255),w,b
  4352  0013BE  5D88               	subwf	_currentSpeed& (0+255),w,b
  4353  0013C0  6FC6               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
  4354  0013C2  5187               	movf	(_oldSpeed+1)& (0+255),w,b
  4355  0013C4  5989               	subwfb	(_currentSpeed+1)& (0+255),w,b
  4356  0013C6  6FC7               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
  4357  0013C8                     
  4358                           ; BSR set to: 0
  4359                           ;main.c: 354:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
  4360  0013C8  0E0A               	movlw	10
  4361  0013CA  6E2E               	movwf	___flmul@a^0,c
  4362  0013CC  0ED7               	movlw	215
  4363  0013CE  6E2F               	movwf	(___flmul@a+1)^0,c
  4364  0013D0  0EA3               	movlw	163
  4365  0013D2  6E30               	movwf	(___flmul@a+2)^0,c
  4366  0013D4  0E3C               	movlw	60
  4367  0013D6  6E31               	movwf	(___flmul@a+3)^0,c
  4368  0013D8  0E00               	movlw	0
  4369  0013DA  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4370  0013DC  0E02               	movlw	2
  4371  0013DE  6E16               	movwf	___awdiv@divisor^0,c
  4372  0013E0  C0C6  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
  4373  0013E4  C0C7  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
  4374  0013E8  ECC3  F00E         	call	___awdiv	;wreg free
  4375  0013EC  C0C4  F0C2         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
  4376  0013F0  C0C5  F0C3         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
  4377  0013F4  5014               	movf	?___awdiv^0,w,c
  4378  0013F6  0100               	movlb	0	; () banked
  4379  0013F8  5FC2               	subwf	??_calcMotorPow& (0+255),f,b
  4380  0013FA  5015               	movf	(?___awdiv+1)^0,w,c
  4381  0013FC  5BC3               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
  4382  0013FE  C0C2  F01C         	movff	??_calcMotorPow,___xxtofl@val
  4383  001402  C0C3  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
  4384  001406  0E00               	movlw	0
  4385  001408  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  4386  00140A  0EFF               	movlw	-1
  4387  00140C  6E1E               	movwf	(___xxtofl@val+2)^0,c
  4388  00140E  6E1F               	movwf	(___xxtofl@val+3)^0,c
  4389  001410  0E01               	movlw	1
  4390  001412  EC25  F008         	call	___xxtofl
  4391  001416  C01C  F02A         	movff	?___xxtofl,___flmul@b
  4392  00141A  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  4393  00141E  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  4394  001422  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  4395  001426  ECBA  F002         	call	___flmul	;wreg free
  4396  00142A  C02A  F0B8         	movff	?___flmul,___fltol@f1
  4397  00142E  C02B  F0B9         	movff	?___flmul+1,___fltol@f1+1
  4398  001432  C02C  F0BA         	movff	?___flmul+2,___fltol@f1+2
  4399  001436  C02D  F0BB         	movff	?___flmul+3,___fltol@f1+3
  4400  00143A  EC92  F00B         	call	___fltol	;wreg free
  4401  00143E  0100               	movlb	0	; () banked
  4402  001440  51B8               	movf	?___fltol& (0+255),w,b
  4403  001442  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4404  001444                     
  4405                           ; BSR set to: 0
  4406                           ;main.c: 356:     if (addMPow > (10)) {
  4407  001444  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4408  001446  0A80               	xorlw	128
  4409  001448  0F75               	addlw	-139
  4410  00144A  A0D8               	btfss	status,0,c
  4411  00144C  EF2A  F00A         	goto	u4611
  4412  001450  EF2C  F00A         	goto	u4610
  4413  001454                     u4611:
  4414  001454  EF30  F00A         	goto	l5798
  4415  001458                     u4610:
  4416  001458                     
  4417                           ; BSR set to: 0
  4418                           ;main.c: 357:         addMPow = (10);
  4419  001458  0E0A               	movlw	10
  4420  00145A  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4421                           
  4422                           ;main.c: 358:     } else if (addMPow < -(10)) {
  4423  00145C  EF3C  F00A         	goto	l5802
  4424  001460                     l5798:
  4425                           
  4426                           ; BSR set to: 0
  4427  001460  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4428  001462  0A80               	xorlw	128
  4429  001464  0F8A               	addlw	138
  4430  001466  B0D8               	btfsc	status,0,c
  4431  001468  EF38  F00A         	goto	u4621
  4432  00146C  EF3A  F00A         	goto	u4620
  4433  001470                     u4621:
  4434  001470  EF3C  F00A         	goto	l5802
  4435  001474                     u4620:
  4436  001474                     
  4437                           ; BSR set to: 0
  4438                           ;main.c: 359:         addMPow = -(10);
  4439  001474  0EF6               	movlw	246
  4440  001476  6FC8               	movwf	calcMotorPow@addMPow& (0+255),b
  4441  001478                     l5802:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;main.c: 362:     actMotorPow += addMPow;
  4445  001478  51C8               	movf	calcMotorPow@addMPow& (0+255),w,b
  4446  00147A  2784               	addwf	_actMotorPow& (0+255),f,b
  4447  00147C  0E00               	movlw	0
  4448  00147E  BFC8               	btfsc	calcMotorPow@addMPow& (0+255),7,b
  4449  001480  0EFF               	movlw	255
  4450  001482  2385               	addwfc	(_actMotorPow+1)& (0+255),f,b
  4451  001484                     
  4452                           ; BSR set to: 0
  4453                           ;main.c: 364:     if (actMotorPow > (800)) {
  4454  001484  BF85               	btfsc	(_actMotorPow+1)& (0+255),7,b
  4455  001486  EF4E  F00A         	goto	u4631
  4456  00148A  0E21               	movlw	33
  4457  00148C  5D84               	subwf	_actMotorPow& (0+255),w,b
  4458  00148E  0E03               	movlw	3
  4459  001490  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4460  001492  A0D8               	btfss	status,0,c
  4461  001494  EF4E  F00A         	goto	u4631
  4462  001498  EF50  F00A         	goto	u4630
  4463  00149C                     u4631:
  4464  00149C  EF56  F00A         	goto	l5808
  4465  0014A0                     u4630:
  4466  0014A0                     
  4467                           ; BSR set to: 0
  4468                           ;main.c: 365:         actMotorPow = (800);
  4469  0014A0  0E03               	movlw	3
  4470  0014A2  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4471  0014A4  0E20               	movlw	32
  4472  0014A6  6F84               	movwf	_actMotorPow& (0+255),b
  4473                           
  4474                           ;main.c: 366:     } else if (actMotorPow < (-400)) {
  4475  0014A8  EF68  F00A         	goto	l5812
  4476  0014AC                     l5808:
  4477                           
  4478                           ; BSR set to: 0
  4479  0014AC  AF85               	btfss	(_actMotorPow+1)& (0+255),7,b
  4480  0014AE  EF62  F00A         	goto	u4641
  4481  0014B2  0E70               	movlw	112
  4482  0014B4  5D84               	subwf	_actMotorPow& (0+255),w,b
  4483  0014B6  0EFE               	movlw	254
  4484  0014B8  5985               	subwfb	(_actMotorPow+1)& (0+255),w,b
  4485  0014BA  B0D8               	btfsc	status,0,c
  4486  0014BC  EF62  F00A         	goto	u4641
  4487  0014C0  EF64  F00A         	goto	u4640
  4488  0014C4                     u4641:
  4489  0014C4  EF68  F00A         	goto	l5812
  4490  0014C8                     u4640:
  4491  0014C8                     
  4492                           ; BSR set to: 0
  4493                           ;main.c: 367:         actMotorPow = (-400);
  4494  0014C8  0EFE               	movlw	254
  4495  0014CA  6F85               	movwf	(_actMotorPow+1)& (0+255),b
  4496  0014CC  0E70               	movlw	112
  4497  0014CE  6F84               	movwf	_actMotorPow& (0+255),b
  4498  0014D0                     l5812:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;main.c: 370:     setMotor(actMotorPow);
  4502  0014D0  C084  F018         	movff	_actMotorPow,setMotor@motorPower
  4503  0014D4  C085  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  4504  0014D8  EC8A  F00D         	call	_setMotor	;wreg free
  4505  0014DC                     
  4506                           ;main.c: 372:     oldSpeed = currentSpeed;
  4507  0014DC  C088  F086         	movff	_currentSpeed,_oldSpeed
  4508  0014E0  C089  F087         	movff	_currentSpeed+1,_oldSpeed+1
  4509  0014E4  0012               	return		;funcret
  4510  0014E6                     __end_of_calcMotorPow:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function _setMotor *****************
  4514 ;; Defined at:
  4515 ;;		line 375 in file "main.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  motorPower      2   23[COMRAM] short 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;Total ram usage:        4 bytes
  4534 ;; Hardware stack levels used: 1
  4535 ;; Hardware stack levels required when called: 9
  4536 ;; This function calls:
  4537 ;;		_PWM7_LoadDutyValue
  4538 ;;		_PWM8_LoadDutyValue
  4539 ;; This function is called by:
  4540 ;;		_loop
  4541 ;;		_startAccell
  4542 ;;		_calcMotorPow
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text15
  4547  001B14                     __ptext15:
  4548                           	callstack 0
  4549  001B14                     _setMotor:
  4550                           	callstack 19
  4551  001B14                     
  4552                           ;main.c: 376:     if (motorPower >= (40)) {
  4553  001B14  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4554  001B16  EF96  F00D         	goto	u2521
  4555  001B1A  5019               	movf	(setMotor@motorPower+1)^0,w,c
  4556  001B1C  E109               	bnz	u2520
  4557  001B1E  0E28               	movlw	40
  4558  001B20  5C18               	subwf	setMotor@motorPower^0,w,c
  4559  001B22  A0D8               	btfss	status,0,c
  4560  001B24  EF96  F00D         	goto	u2521
  4561  001B28  EF98  F00D         	goto	u2520
  4562  001B2C                     u2521:
  4563  001B2C  EFB8  F00D         	goto	l4220
  4564  001B30                     u2520:
  4565  001B30                     
  4566                           ;main.c: 377:         if (motorPower > (800)) {
  4567  001B30  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
  4568  001B32  EFA4  F00D         	goto	u2531
  4569  001B36  0E21               	movlw	33
  4570  001B38  5C18               	subwf	setMotor@motorPower^0,w,c
  4571  001B3A  0E03               	movlw	3
  4572  001B3C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4573  001B3E  A0D8               	btfss	status,0,c
  4574  001B40  EFA4  F00D         	goto	u2531
  4575  001B44  EFA6  F00D         	goto	u2530
  4576  001B48                     u2531:
  4577  001B48  EFAA  F00D         	goto	l4216
  4578  001B4C                     u2530:
  4579  001B4C                     
  4580                           ;main.c: 378:             motorPower = (800);
  4581  001B4C  0E03               	movlw	3
  4582  001B4E  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4583  001B50  0E20               	movlw	32
  4584  001B52  6E18               	movwf	setMotor@motorPower^0,c
  4585  001B54                     l4216:
  4586                           
  4587                           ;main.c: 380:         PWM7_LoadDutyValue((uint16_t) (motorPower));
  4588  001B54  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
  4589  001B58  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
  4590  001B5C  ECED  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4591  001B60                     
  4592                           ;main.c: 381:         PWM8_LoadDutyValue(0);
  4593  001B60  0E00               	movlw	0
  4594  001B62  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4595  001B64  0E00               	movlw	0
  4596  001B66  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4597  001B68  ECD3  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4598                           
  4599                           ;main.c: 382:     } else if (motorPower <= -(40)) {
  4600  001B6C  EFFA  F00D         	goto	l1373
  4601  001B70                     l4220:
  4602  001B70  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4603  001B72  EFC4  F00D         	goto	u2541
  4604  001B76  0ED9               	movlw	217
  4605  001B78  5C18               	subwf	setMotor@motorPower^0,w,c
  4606  001B7A  0EFF               	movlw	255
  4607  001B7C  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4608  001B7E  B0D8               	btfsc	status,0,c
  4609  001B80  EFC4  F00D         	goto	u2541
  4610  001B84  EFC6  F00D         	goto	u2540
  4611  001B88                     u2541:
  4612  001B88  EFEE  F00D         	goto	l4230
  4613  001B8C                     u2540:
  4614  001B8C                     
  4615                           ;main.c: 383:         if (motorPower < (-400)) {
  4616  001B8C  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
  4617  001B8E  EFD2  F00D         	goto	u2551
  4618  001B92  0E70               	movlw	112
  4619  001B94  5C18               	subwf	setMotor@motorPower^0,w,c
  4620  001B96  0EFE               	movlw	254
  4621  001B98  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
  4622  001B9A  B0D8               	btfsc	status,0,c
  4623  001B9C  EFD2  F00D         	goto	u2551
  4624  001BA0  EFD4  F00D         	goto	u2550
  4625  001BA4                     u2551:
  4626  001BA4  EFD8  F00D         	goto	l4226
  4627  001BA8                     u2550:
  4628  001BA8                     
  4629                           ;main.c: 384:             motorPower = (-400);
  4630  001BA8  0EFE               	movlw	254
  4631  001BAA  6E19               	movwf	(setMotor@motorPower+1)^0,c
  4632  001BAC  0E70               	movlw	112
  4633  001BAE  6E18               	movwf	setMotor@motorPower^0,c
  4634  001BB0                     l4226:
  4635                           
  4636                           ;main.c: 386:         PWM7_LoadDutyValue(0);
  4637  001BB0  0E00               	movlw	0
  4638  001BB2  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4639  001BB4  0E00               	movlw	0
  4640  001BB6  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4641  001BB8  ECED  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4642  001BBC                     
  4643                           ;main.c: 387:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
  4644  001BBC  C018  F01A         	movff	setMotor@motorPower,??_setMotor
  4645  001BC0  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
  4646  001BC4  1E1A               	comf	??_setMotor^0,f,c
  4647  001BC6  1E1B               	comf	(??_setMotor+1)^0,f,c
  4648  001BC8  4A1A               	infsnz	??_setMotor^0,f,c
  4649  001BCA  2A1B               	incf	(??_setMotor+1)^0,f,c
  4650  001BCC  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
  4651  001BD0  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
  4652  001BD4  ECD3  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4653                           
  4654                           ;main.c: 388:     } else {
  4655  001BD8  EFFA  F00D         	goto	l1373
  4656  001BDC                     l4230:
  4657                           
  4658                           ;main.c: 390:         PWM7_LoadDutyValue(0);
  4659  001BDC  0E00               	movlw	0
  4660  001BDE  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
  4661  001BE0  0E00               	movlw	0
  4662  001BE2  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
  4663  001BE4  ECED  F011         	call	_PWM7_LoadDutyValue	;wreg free
  4664                           
  4665                           ;main.c: 391:         PWM8_LoadDutyValue(0);
  4666  001BE8  0E00               	movlw	0
  4667  001BEA  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
  4668  001BEC  0E00               	movlw	0
  4669  001BEE  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
  4670  001BF0  ECD3  F011         	call	_PWM8_LoadDutyValue	;wreg free
  4671  001BF4                     l1373:
  4672  001BF4  0012               	return		;funcret
  4673  001BF6                     __end_of_setMotor:
  4674                           	callstack 0
  4675                           
  4676 ;; *************** function _PWM8_LoadDutyValue *****************
  4677 ;; Defined at:
  4678 ;;		line 74 in file "mcc_generated_files/pwm8.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;		None
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  1    wreg      void 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4692 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;Total ram usage:        4 bytes
  4697 ;; Hardware stack levels used: 1
  4698 ;; Hardware stack levels required when called: 8
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_setMotor
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text16
  4707  0023A6                     __ptext16:
  4708                           	callstack 0
  4709  0023A6                     _PWM8_LoadDutyValue:
  4710                           	callstack 19
  4711  0023A6                     
  4712                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4713  0023A6  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4714  0023AA  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
  4715  0023AE  90D8               	bcf	status,0,c
  4716  0023B0  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4717  0023B2  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4718  0023B4  90D8               	bcf	status,0,c
  4719  0023B6  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
  4720  0023B8  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
  4721  0023BA  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4722  0023BC  6E61               	movwf	97,c	;volatile
  4723                           
  4724                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
  4725  0023BE  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
  4726  0023C2  0E03               	movlw	3
  4727  0023C4  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
  4728  0023C6  0E06               	movlw	6
  4729  0023C8  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
  4730  0023CA                     u2025:
  4731  0023CA  90D8               	bcf	status,0,c
  4732  0023CC  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
  4733  0023CE  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
  4734  0023D0  EFE5  F011         	goto	u2025
  4735  0023D4  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
  4736  0023D6  6E60               	movwf	96,c	;volatile
  4737  0023D8  0012               	return		;funcret
  4738  0023DA                     __end_of_PWM8_LoadDutyValue:
  4739                           	callstack 0
  4740                           
  4741 ;; *************** function _PWM7_LoadDutyValue *****************
  4742 ;; Defined at:
  4743 ;;		line 74 in file "mcc_generated_files/pwm7.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  dutyValue       2   19[COMRAM] unsigned short 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;Total ram usage:        4 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 8
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_setMotor
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text17
  4772  0023DA                     __ptext17:
  4773                           	callstack 0
  4774  0023DA                     _PWM7_LoadDutyValue:
  4775                           	callstack 19
  4776  0023DA                     
  4777                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4778  0023DA  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4779  0023DE  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
  4780  0023E2  90D8               	bcf	status,0,c
  4781  0023E4  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4782  0023E6  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4783  0023E8  90D8               	bcf	status,0,c
  4784  0023EA  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
  4785  0023EC  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
  4786  0023EE  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4787  0023F0  6E65               	movwf	101,c	;volatile
  4788                           
  4789                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
  4790  0023F2  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
  4791  0023F6  0E03               	movlw	3
  4792  0023F8  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
  4793  0023FA  0E06               	movlw	6
  4794  0023FC  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
  4795  0023FE                     u2015:
  4796  0023FE  90D8               	bcf	status,0,c
  4797  002400  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
  4798  002402  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
  4799  002404  EFFF  F011         	goto	u2015
  4800  002408  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
  4801  00240A  6E64               	movwf	100,c	;volatile
  4802  00240C  0012               	return		;funcret
  4803  00240E                     __end_of_PWM7_LoadDutyValue:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _actSpeed *****************
  4807 ;; Defined at:
  4808 ;;		line 68 in file "main.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  speed           2   35[COMRAM] short 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2   33[COMRAM] short 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;Total ram usage:        4 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 9
  4829 ;; This function calls:
  4830 ;;		___aldiv
  4831 ;; This function is called by:
  4832 ;;		_calcMotorPow
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text18
  4837  001EF0                     __ptext18:
  4838                           	callstack 0
  4839  001EF0                     _actSpeed:
  4840                           	callstack 19
  4841  001EF0                     
  4842                           ;main.c: 69:     int16_t speed = 0;
  4843  001EF0  0E00               	movlw	0
  4844  001EF2  6E25               	movwf	(actSpeed@speed+1)^0,c
  4845  001EF4  0E00               	movlw	0
  4846  001EF6  6E24               	movwf	actSpeed@speed^0,c
  4847  001EF8                     
  4848                           ;main.c: 70:     if (smtPeriod) {
  4849  001EF8  5046               	movf	_smtPeriod^0,w,c	;volatile
  4850  001EFA  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
  4851  001EFC  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
  4852  001EFE  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
  4853  001F00  B4D8               	btfsc	status,2,c
  4854  001F02  EF85  F00F         	goto	u2601
  4855  001F06  EF87  F00F         	goto	u2600
  4856  001F0A                     u2601:
  4857  001F0A  EFBD  F00F         	goto	l4294
  4858  001F0E                     u2600:
  4859  001F0E                     
  4860                           ;main.c: 71:         if (CLC3CONbits.LC3OUT) {
  4861  001F0E  013C               	movlb	60	; () banked
  4862  001F10  AB60               	btfss	96,5,b	;volatile
  4863  001F12  EF8D  F00F         	goto	u2611
  4864  001F16  EF8F  F00F         	goto	u2610
  4865  001F1A                     u2611:
  4866  001F1A  EFA7  F00F         	goto	l4292
  4867  001F1E                     u2610:
  4868  001F1E                     
  4869                           ; BSR set to: 60
  4870                           ;main.c: 72:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
  4871  001F1E  0E20               	movlw	32
  4872  001F20  6E14               	movwf	___aldiv@dividend^0,c
  4873  001F22  0EA1               	movlw	161
  4874  001F24  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4875  001F26  0E07               	movlw	7
  4876  001F28  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4877  001F2A  0E00               	movlw	0
  4878  001F2C  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4879  001F2E  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4880  001F32  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4881  001F36  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4882  001F3A  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4883  001F3E  EC0C  F00B         	call	___aldiv	;wreg free
  4884  001F42  C014  F024         	movff	?___aldiv,actSpeed@speed
  4885  001F46  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4886                           
  4887                           ;main.c: 73:         } else {
  4888  001F4A  EFBD  F00F         	goto	l4294
  4889  001F4E                     l4292:
  4890                           
  4891                           ; BSR set to: 60
  4892                           ;main.c: 74:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
  4893  001F4E  0EE0               	movlw	224
  4894  001F50  6E14               	movwf	___aldiv@dividend^0,c
  4895  001F52  0E5E               	movlw	94
  4896  001F54  6E15               	movwf	(___aldiv@dividend+1)^0,c
  4897  001F56  0EF8               	movlw	248
  4898  001F58  6E16               	movwf	(___aldiv@dividend+2)^0,c
  4899  001F5A  0EFF               	movlw	255
  4900  001F5C  6E17               	movwf	(___aldiv@dividend+3)^0,c
  4901  001F5E  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
  4902  001F62  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
  4903  001F66  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
  4904  001F6A  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
  4905  001F6E  EC0C  F00B         	call	___aldiv	;wreg free
  4906  001F72  C014  F024         	movff	?___aldiv,actSpeed@speed
  4907  001F76  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
  4908  001F7A                     l4294:
  4909                           
  4910                           ;main.c: 77:     return speed;
  4911  001F7A  C024  F022         	movff	actSpeed@speed,?_actSpeed
  4912  001F7E  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
  4913  001F82  0012               	return		;funcret
  4914  001F84                     __end_of_actSpeed:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function ___aldiv *****************
  4918 ;; Defined at:
  4919 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  dividend        4   19[COMRAM] long 
  4922 ;;  divisor         4   23[COMRAM] long 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  quotient        4   29[COMRAM] long 
  4925 ;;  sign            1   28[COMRAM] unsigned char 
  4926 ;;  counter         1   27[COMRAM] unsigned char 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  4   19[COMRAM] long 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4936 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;Total ram usage:       14 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 8
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_actSpeed
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text19
  4951  001618                     __ptext19:
  4952                           	callstack 0
  4953  001618                     ___aldiv:
  4954                           	callstack 19
  4955  001618  0E00               	movlw	0
  4956  00161A  6E1D               	movwf	___aldiv@sign^0,c
  4957  00161C  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
  4958  00161E  EF15  F00B         	goto	u2070
  4959  001622  EF13  F00B         	goto	u2071
  4960  001626                     u2071:
  4961  001626  EF1F  F00B         	goto	l3900
  4962  00162A                     u2070:
  4963  00162A  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
  4964  00162C  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
  4965  00162E  1E19               	comf	(___aldiv@divisor+1)^0,f,c
  4966  001630  6C18               	negf	___aldiv@divisor^0,c
  4967  001632  0E00               	movlw	0
  4968  001634  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
  4969  001636  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
  4970  001638  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
  4971  00163A  0E01               	movlw	1
  4972  00163C  6E1D               	movwf	___aldiv@sign^0,c
  4973  00163E                     l3900:
  4974  00163E  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
  4975  001640  EF26  F00B         	goto	u2080
  4976  001644  EF24  F00B         	goto	u2081
  4977  001648                     u2081:
  4978  001648  EF30  F00B         	goto	l3906
  4979  00164C                     u2080:
  4980  00164C  1E17               	comf	(___aldiv@dividend+3)^0,f,c
  4981  00164E  1E16               	comf	(___aldiv@dividend+2)^0,f,c
  4982  001650  1E15               	comf	(___aldiv@dividend+1)^0,f,c
  4983  001652  6C14               	negf	___aldiv@dividend^0,c
  4984  001654  0E00               	movlw	0
  4985  001656  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
  4986  001658  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
  4987  00165A  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
  4988  00165C  0E01               	movlw	1
  4989  00165E  1A1D               	xorwf	___aldiv@sign^0,f,c
  4990  001660                     l3906:
  4991  001660  0E00               	movlw	0
  4992  001662  6E1E               	movwf	___aldiv@quotient^0,c
  4993  001664  0E00               	movlw	0
  4994  001666  6E1F               	movwf	(___aldiv@quotient+1)^0,c
  4995  001668  0E00               	movlw	0
  4996  00166A  6E20               	movwf	(___aldiv@quotient+2)^0,c
  4997  00166C  0E00               	movlw	0
  4998  00166E  6E21               	movwf	(___aldiv@quotient+3)^0,c
  4999  001670  5018               	movf	___aldiv@divisor^0,w,c
  5000  001672  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
  5001  001674  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
  5002  001676  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
  5003  001678  B4D8               	btfsc	status,2,c
  5004  00167A  EF41  F00B         	goto	u2091
  5005  00167E  EF43  F00B         	goto	u2090
  5006  001682                     u2091:
  5007  001682  EF79  F00B         	goto	l3928
  5008  001686                     u2090:
  5009  001686  0E01               	movlw	1
  5010  001688  6E1C               	movwf	___aldiv@counter^0,c
  5011  00168A  EF4D  F00B         	goto	l3914
  5012  00168E                     l3912:
  5013  00168E  90D8               	bcf	status,0,c
  5014  001690  3618               	rlcf	___aldiv@divisor^0,f,c
  5015  001692  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
  5016  001694  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
  5017  001696  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
  5018  001698  2A1C               	incf	___aldiv@counter^0,f,c
  5019  00169A                     l3914:
  5020  00169A  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
  5021  00169C  EF52  F00B         	goto	u2101
  5022  0016A0  EF54  F00B         	goto	u2100
  5023  0016A4                     u2101:
  5024  0016A4  EF47  F00B         	goto	l3912
  5025  0016A8                     u2100:
  5026  0016A8                     l3916:
  5027  0016A8  90D8               	bcf	status,0,c
  5028  0016AA  361E               	rlcf	___aldiv@quotient^0,f,c
  5029  0016AC  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
  5030  0016AE  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
  5031  0016B0  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
  5032  0016B2  5018               	movf	___aldiv@divisor^0,w,c
  5033  0016B4  5C14               	subwf	___aldiv@dividend^0,w,c
  5034  0016B6  5019               	movf	(___aldiv@divisor+1)^0,w,c
  5035  0016B8  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
  5036  0016BA  501A               	movf	(___aldiv@divisor+2)^0,w,c
  5037  0016BC  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
  5038  0016BE  501B               	movf	(___aldiv@divisor+3)^0,w,c
  5039  0016C0  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
  5040  0016C2  A0D8               	btfss	status,0,c
  5041  0016C4  EF66  F00B         	goto	u2111
  5042  0016C8  EF68  F00B         	goto	u2110
  5043  0016CC                     u2111:
  5044  0016CC  EF71  F00B         	goto	l3924
  5045  0016D0                     u2110:
  5046  0016D0  5018               	movf	___aldiv@divisor^0,w,c
  5047  0016D2  5E14               	subwf	___aldiv@dividend^0,f,c
  5048  0016D4  5019               	movf	(___aldiv@divisor+1)^0,w,c
  5049  0016D6  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
  5050  0016D8  501A               	movf	(___aldiv@divisor+2)^0,w,c
  5051  0016DA  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
  5052  0016DC  501B               	movf	(___aldiv@divisor+3)^0,w,c
  5053  0016DE  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
  5054  0016E0  801E               	bsf	___aldiv@quotient^0,0,c
  5055  0016E2                     l3924:
  5056  0016E2  90D8               	bcf	status,0,c
  5057  0016E4  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
  5058  0016E6  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
  5059  0016E8  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
  5060  0016EA  3218               	rrcf	___aldiv@divisor^0,f,c
  5061  0016EC  2E1C               	decfsz	___aldiv@counter^0,f,c
  5062  0016EE  EF54  F00B         	goto	l3916
  5063  0016F2                     l3928:
  5064  0016F2  501D               	movf	___aldiv@sign^0,w,c
  5065  0016F4  B4D8               	btfsc	status,2,c
  5066  0016F6  EF7F  F00B         	goto	u2121
  5067  0016FA  EF81  F00B         	goto	u2120
  5068  0016FE                     u2121:
  5069  0016FE  EF89  F00B         	goto	l3932
  5070  001702                     u2120:
  5071  001702  1E21               	comf	(___aldiv@quotient+3)^0,f,c
  5072  001704  1E20               	comf	(___aldiv@quotient+2)^0,f,c
  5073  001706  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
  5074  001708  6C1E               	negf	___aldiv@quotient^0,c
  5075  00170A  0E00               	movlw	0
  5076  00170C  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
  5077  00170E  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
  5078  001710  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
  5079  001712                     l3932:
  5080  001712  C01E  F014         	movff	___aldiv@quotient,?___aldiv
  5081  001716  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
  5082  00171A  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
  5083  00171E  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
  5084  001722  0012               	return		;funcret
  5085  001724                     __end_of___aldiv:
  5086                           	callstack 0
  5087                           
  5088 ;; *************** function ___xxtofl *****************
  5089 ;; Defined at:
  5090 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  sign            1    wreg     unsigned char 
  5093 ;;  val             4   27[COMRAM] long 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  sign            1   35[COMRAM] unsigned char 
  5096 ;;  arg             4   37[COMRAM] unsigned long 
  5097 ;;  exp             1   36[COMRAM] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  4   27[COMRAM] unsigned char 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;Total ram usage:       14 bytes
  5112 ;; Hardware stack levels used: 1
  5113 ;; Hardware stack levels required when called: 8
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_loop
  5118 ;;		_startAccell
  5119 ;;		_calcSteering
  5120 ;;		_calcSpeed
  5121 ;;		_calcMotorPow
  5122 ;;		_checkBatt
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text20
  5127  00104A                     __ptext20:
  5128                           	callstack 0
  5129  00104A                     ___xxtofl:
  5130                           	callstack 19
  5131                           
  5132                           ;incstack = 0
  5133                           ;___xxtofl@sign stored from wreg
  5134  00104A  6E24               	movwf	___xxtofl@sign^0,c
  5135  00104C  5024               	movf	___xxtofl@sign^0,w,c
  5136  00104E  B4D8               	btfsc	status,2,c
  5137  001050  EF2C  F008         	goto	u2391
  5138  001054  EF2E  F008         	goto	u2390
  5139  001058                     u2391:
  5140  001058  EF50  F008         	goto	l2048
  5141  00105C                     u2390:
  5142  00105C  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5143  00105E  EF35  F008         	goto	u2400
  5144  001062  EF33  F008         	goto	u2401
  5145  001066                     u2401:
  5146  001066  EF50  F008         	goto	l2048
  5147  00106A                     u2400:
  5148  00106A  C01C  F020         	movff	___xxtofl@val,??___xxtofl
  5149  00106E  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
  5150  001072  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
  5151  001076  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
  5152  00107A  1E20               	comf	??___xxtofl^0,f,c
  5153  00107C  1E21               	comf	(??___xxtofl+1)^0,f,c
  5154  00107E  1E22               	comf	(??___xxtofl+2)^0,f,c
  5155  001080  1E23               	comf	(??___xxtofl+3)^0,f,c
  5156  001082  2A20               	incf	??___xxtofl^0,f,c
  5157  001084  0E00               	movlw	0
  5158  001086  2221               	addwfc	(??___xxtofl+1)^0,f,c
  5159  001088  2222               	addwfc	(??___xxtofl+2)^0,f,c
  5160  00108A  2223               	addwfc	(??___xxtofl+3)^0,f,c
  5161  00108C  C020  F026         	movff	??___xxtofl,___xxtofl@arg
  5162  001090  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
  5163  001094  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
  5164  001098  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
  5165  00109C  EF58  F008         	goto	l4116
  5166  0010A0                     l2048:
  5167  0010A0  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
  5168  0010A4  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5169  0010A8  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5170  0010AC  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5171  0010B0                     l4116:
  5172  0010B0  501C               	movf	___xxtofl@val^0,w,c
  5173  0010B2  101D               	iorwf	(___xxtofl@val+1)^0,w,c
  5174  0010B4  101E               	iorwf	(___xxtofl@val+2)^0,w,c
  5175  0010B6  101F               	iorwf	(___xxtofl@val+3)^0,w,c
  5176  0010B8  A4D8               	btfss	status,2,c
  5177  0010BA  EF61  F008         	goto	u2411
  5178  0010BE  EF63  F008         	goto	u2410
  5179  0010C2                     u2411:
  5180  0010C2  EF6D  F008         	goto	l4122
  5181  0010C6                     u2410:
  5182  0010C6  0E00               	movlw	0
  5183  0010C8  6E1C               	movwf	?___xxtofl^0,c
  5184  0010CA  0E00               	movlw	0
  5185  0010CC  6E1D               	movwf	(?___xxtofl+1)^0,c
  5186  0010CE  0E00               	movlw	0
  5187  0010D0  6E1E               	movwf	(?___xxtofl+2)^0,c
  5188  0010D2  0E00               	movlw	0
  5189  0010D4  6E1F               	movwf	(?___xxtofl+3)^0,c
  5190  0010D6  EFFE  F008         	goto	l2051
  5191  0010DA                     l4122:
  5192  0010DA  0E96               	movlw	150
  5193  0010DC  6E25               	movwf	___xxtofl@exp^0,c
  5194  0010DE  EF77  F008         	goto	l4126
  5195  0010E2                     l4124:
  5196  0010E2  2A25               	incf	___xxtofl@exp^0,f,c
  5197  0010E4  90D8               	bcf	status,0,c
  5198  0010E6  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5199  0010E8  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5200  0010EA  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5201  0010EC  3226               	rrcf	___xxtofl@arg^0,f,c
  5202  0010EE                     l4126:
  5203  0010EE  0E00               	movlw	0
  5204  0010F0  1426               	andwf	___xxtofl@arg^0,w,c
  5205  0010F2  6E20               	movwf	??___xxtofl^0,c
  5206  0010F4  0E00               	movlw	0
  5207  0010F6  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5208  0010F8  6E21               	movwf	(??___xxtofl+1)^0,c
  5209  0010FA  0E00               	movlw	0
  5210  0010FC  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5211  0010FE  6E22               	movwf	(??___xxtofl+2)^0,c
  5212  001100  0EFE               	movlw	254
  5213  001102  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5214  001104  6E23               	movwf	(??___xxtofl+3)^0,c
  5215  001106  5020               	movf	??___xxtofl^0,w,c
  5216  001108  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5217  00110A  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5218  00110C  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5219  00110E  A4D8               	btfss	status,2,c
  5220  001110  EF8C  F008         	goto	u2421
  5221  001114  EF8E  F008         	goto	u2420
  5222  001118                     u2421:
  5223  001118  EF71  F008         	goto	l4124
  5224  00111C                     u2420:
  5225  00111C  EF9C  F008         	goto	l2055
  5226  001120                     l4128:
  5227  001120  2A25               	incf	___xxtofl@exp^0,f,c
  5228  001122  0E01               	movlw	1
  5229  001124  2626               	addwf	___xxtofl@arg^0,f,c
  5230  001126  0E00               	movlw	0
  5231  001128  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
  5232  00112A  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
  5233  00112C  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
  5234  00112E  90D8               	bcf	status,0,c
  5235  001130  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
  5236  001132  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
  5237  001134  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
  5238  001136  3226               	rrcf	___xxtofl@arg^0,f,c
  5239  001138                     l2055:
  5240  001138  0E00               	movlw	0
  5241  00113A  1426               	andwf	___xxtofl@arg^0,w,c
  5242  00113C  6E20               	movwf	??___xxtofl^0,c
  5243  00113E  0E00               	movlw	0
  5244  001140  1427               	andwf	(___xxtofl@arg+1)^0,w,c
  5245  001142  6E21               	movwf	(??___xxtofl+1)^0,c
  5246  001144  0E00               	movlw	0
  5247  001146  1428               	andwf	(___xxtofl@arg+2)^0,w,c
  5248  001148  6E22               	movwf	(??___xxtofl+2)^0,c
  5249  00114A  0EFF               	movlw	255
  5250  00114C  1429               	andwf	(___xxtofl@arg+3)^0,w,c
  5251  00114E  6E23               	movwf	(??___xxtofl+3)^0,c
  5252  001150  5020               	movf	??___xxtofl^0,w,c
  5253  001152  1021               	iorwf	(??___xxtofl+1)^0,w,c
  5254  001154  1022               	iorwf	(??___xxtofl+2)^0,w,c
  5255  001156  1023               	iorwf	(??___xxtofl+3)^0,w,c
  5256  001158  A4D8               	btfss	status,2,c
  5257  00115A  EFB1  F008         	goto	u2431
  5258  00115E  EFB3  F008         	goto	u2430
  5259  001162                     u2431:
  5260  001162  EF90  F008         	goto	l4128
  5261  001166                     u2430:
  5262  001166  EFBB  F008         	goto	l4136
  5263  00116A                     l4134:
  5264  00116A  0625               	decf	___xxtofl@exp^0,f,c
  5265  00116C  90D8               	bcf	status,0,c
  5266  00116E  3626               	rlcf	___xxtofl@arg^0,f,c
  5267  001170  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
  5268  001172  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
  5269  001174  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
  5270  001176                     l4136:
  5271  001176  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
  5272  001178  EFC0  F008         	goto	u2441
  5273  00117C  EFC2  F008         	goto	u2440
  5274  001180                     u2441:
  5275  001180  EFCA  F008         	goto	l2062
  5276  001184                     u2440:
  5277  001184  0E02               	movlw	2
  5278  001186  6025               	cpfslt	___xxtofl@exp^0,c
  5279  001188  EFC8  F008         	goto	u2451
  5280  00118C  EFCA  F008         	goto	u2450
  5281  001190                     u2451:
  5282  001190  EFB5  F008         	goto	l4134
  5283  001194                     u2450:
  5284  001194                     l2062:
  5285  001194  B025               	btfsc	___xxtofl@exp^0,0,c
  5286  001196  EFCF  F008         	goto	u2461
  5287  00119A  EFD1  F008         	goto	u2460
  5288  00119E                     u2461:
  5289  00119E  EFD2  F008         	goto	l4142
  5290  0011A2                     u2460:
  5291  0011A2  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
  5292  0011A4                     l4142:
  5293  0011A4  90D8               	bcf	status,0,c
  5294  0011A6  3225               	rrcf	___xxtofl@exp^0,f,c
  5295  0011A8  C025  F020         	movff	___xxtofl@exp,??___xxtofl
  5296  0011AC  6A21               	clrf	(??___xxtofl+1)^0,c
  5297  0011AE  6A22               	clrf	(??___xxtofl+2)^0,c
  5298  0011B0  6A23               	clrf	(??___xxtofl+3)^0,c
  5299  0011B2  C020  F023         	movff	??___xxtofl,??___xxtofl+3
  5300  0011B6  6A22               	clrf	(??___xxtofl+2)^0,c
  5301  0011B8  6A21               	clrf	(??___xxtofl+1)^0,c
  5302  0011BA  6A20               	clrf	??___xxtofl^0,c
  5303  0011BC  5020               	movf	??___xxtofl^0,w,c
  5304  0011BE  1226               	iorwf	___xxtofl@arg^0,f,c
  5305  0011C0  5021               	movf	(??___xxtofl+1)^0,w,c
  5306  0011C2  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
  5307  0011C4  5022               	movf	(??___xxtofl+2)^0,w,c
  5308  0011C6  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
  5309  0011C8  5023               	movf	(??___xxtofl+3)^0,w,c
  5310  0011CA  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
  5311  0011CC  5024               	movf	___xxtofl@sign^0,w,c
  5312  0011CE  B4D8               	btfsc	status,2,c
  5313  0011D0  EFEC  F008         	goto	u2471
  5314  0011D4  EFEE  F008         	goto	u2470
  5315  0011D8                     u2471:
  5316  0011D8  EFF6  F008         	goto	l4152
  5317  0011DC                     u2470:
  5318  0011DC  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
  5319  0011DE  EFF5  F008         	goto	u2480
  5320  0011E2  EFF3  F008         	goto	u2481
  5321  0011E6                     u2481:
  5322  0011E6  EFF6  F008         	goto	l4152
  5323  0011EA                     u2480:
  5324  0011EA  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
  5325  0011EC                     l4152:
  5326  0011EC  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
  5327  0011F0  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
  5328  0011F4  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
  5329  0011F8  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
  5330  0011FC                     l2051:
  5331  0011FC  0012               	return		;funcret
  5332  0011FE                     __end_of___xxtofl:
  5333                           	callstack 0
  5334                           
  5335 ;; *************** function ___fltol *****************
  5336 ;; Defined at:
  5337 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  f1              4   25[BANK0 ] unsigned char 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  exp1            1   34[BANK0 ] unsigned char 
  5342 ;;  sign1           1   33[BANK0 ] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  4   25[BANK0 ] long 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5352 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;Total ram usage:       10 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 8
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_startAccell
  5363 ;;		_calcSteering
  5364 ;;		_calcSpeed
  5365 ;;		_calcMotorPow
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text21
  5370  001724                     __ptext21:
  5371                           	callstack 0
  5372  001724                     ___fltol:
  5373                           	callstack 19
  5374  001724  0100               	movlb	0	; () banked
  5375  001726  35BA               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5376  001728  35BB               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5377  00172A  6FC1               	movwf	___fltol@exp1& (0+255),b
  5378  00172C  51C1               	movf	___fltol@exp1& (0+255),w,b
  5379  00172E  A4D8               	btfss	status,2,c
  5380  001730  EF9C  F00B         	goto	u4011
  5381  001734  EF9E  F00B         	goto	u4010
  5382  001738                     u4011:
  5383  001738  EFA8  F00B         	goto	l5404
  5384  00173C                     u4010:
  5385  00173C                     l5400:
  5386                           
  5387                           ; BSR set to: 0
  5388  00173C  0E00               	movlw	0
  5389  00173E  6FB8               	movwf	?___fltol& (0+255),b
  5390  001740  0E00               	movlw	0
  5391  001742  6FB9               	movwf	(?___fltol+1)& (0+255),b
  5392  001744  0E00               	movlw	0
  5393  001746  6FBA               	movwf	(?___fltol+2)& (0+255),b
  5394  001748  0E00               	movlw	0
  5395  00174A  6FBB               	movwf	(?___fltol+3)& (0+255),b
  5396  00174C  EF15  F00C         	goto	l1690
  5397  001750                     l5404:
  5398                           
  5399                           ; BSR set to: 0
  5400  001750  C0B8  F0BC         	movff	___fltol@f1,??___fltol
  5401  001754  C0B9  F0BD         	movff	___fltol@f1+1,??___fltol+1
  5402  001758  C0BA  F0BE         	movff	___fltol@f1+2,??___fltol+2
  5403  00175C  C0BB  F0BF         	movff	___fltol@f1+3,??___fltol+3
  5404  001760  0E20               	movlw	32
  5405  001762  EFB8  F00B         	goto	u4020
  5406  001766                     u4025:
  5407  001766  90D8               	bcf	status,0,c
  5408  001768  33BF               	rrcf	(??___fltol+3)& (0+255),f,b
  5409  00176A  33BE               	rrcf	(??___fltol+2)& (0+255),f,b
  5410  00176C  33BD               	rrcf	(??___fltol+1)& (0+255),f,b
  5411  00176E  33BC               	rrcf	??___fltol& (0+255),f,b
  5412  001770                     u4020:
  5413  001770  2EE8               	decfsz	wreg,f,c
  5414  001772  EFB3  F00B         	goto	u4025
  5415  001776  51BC               	movf	??___fltol& (0+255),w,b
  5416  001778  6FC0               	movwf	___fltol@sign1& (0+255),b
  5417  00177A                     
  5418                           ; BSR set to: 0
  5419  00177A  8FBA               	bsf	(___fltol@f1+2)& (0+255),7,b
  5420  00177C                     
  5421                           ; BSR set to: 0
  5422  00177C  0EFF               	movlw	255
  5423  00177E  17B8               	andwf	___fltol@f1& (0+255),f,b
  5424  001780  0EFF               	movlw	255
  5425  001782  17B9               	andwf	(___fltol@f1+1)& (0+255),f,b
  5426  001784  0EFF               	movlw	255
  5427  001786  17BA               	andwf	(___fltol@f1+2)& (0+255),f,b
  5428  001788  0E00               	movlw	0
  5429  00178A  17BB               	andwf	(___fltol@f1+3)& (0+255),f,b
  5430  00178C                     
  5431                           ; BSR set to: 0
  5432  00178C  0E96               	movlw	150
  5433  00178E  5FC1               	subwf	___fltol@exp1& (0+255),f,b
  5434  001790                     
  5435                           ; BSR set to: 0
  5436  001790  BFC1               	btfsc	___fltol@exp1& (0+255),7,b
  5437  001792  EFCF  F00B         	goto	u4030
  5438  001796  EFCD  F00B         	goto	u4031
  5439  00179A                     u4031:
  5440  00179A  EFE5  F00B         	goto	l5424
  5441  00179E                     u4030:
  5442  00179E                     
  5443                           ; BSR set to: 0
  5444  00179E  51C1               	movf	___fltol@exp1& (0+255),w,b
  5445  0017A0  0A80               	xorlw	128
  5446  0017A2  0F97               	addlw	151
  5447  0017A4  B0D8               	btfsc	status,0,c
  5448  0017A6  EFD7  F00B         	goto	u4041
  5449  0017AA  EFD9  F00B         	goto	u4040
  5450  0017AE                     u4041:
  5451  0017AE  EFDB  F00B         	goto	l5420
  5452  0017B2                     u4040:
  5453  0017B2  EF9E  F00B         	goto	l5400
  5454  0017B6                     l5420:
  5455                           
  5456                           ; BSR set to: 0
  5457  0017B6  90D8               	bcf	status,0,c
  5458  0017B8  33BB               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5459  0017BA  33BA               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5460  0017BC  33B9               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5461  0017BE  33B8               	rrcf	___fltol@f1& (0+255),f,b
  5462  0017C0                     
  5463                           ; BSR set to: 0
  5464  0017C0  3FC1               	incfsz	___fltol@exp1& (0+255),f,b
  5465  0017C2  EFDB  F00B         	goto	l5420
  5466  0017C6  EFFD  F00B         	goto	l5434
  5467  0017CA                     l5424:
  5468                           
  5469                           ; BSR set to: 0
  5470  0017CA  0E1F               	movlw	31
  5471  0017CC  65C1               	cpfsgt	___fltol@exp1& (0+255),b
  5472  0017CE  EFEB  F00B         	goto	u4051
  5473  0017D2  EFED  F00B         	goto	u4050
  5474  0017D6                     u4051:
  5475  0017D6  EFF5  F00B         	goto	l5432
  5476  0017DA                     u4050:
  5477  0017DA  EF9E  F00B         	goto	l5400
  5478  0017DE                     l5430:
  5479                           
  5480                           ; BSR set to: 0
  5481  0017DE  90D8               	bcf	status,0,c
  5482  0017E0  37B8               	rlcf	___fltol@f1& (0+255),f,b
  5483  0017E2  37B9               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5484  0017E4  37BA               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5485  0017E6  37BB               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5486  0017E8  07C1               	decf	___fltol@exp1& (0+255),f,b
  5487  0017EA                     l5432:
  5488                           
  5489                           ; BSR set to: 0
  5490  0017EA  51C1               	movf	___fltol@exp1& (0+255),w,b
  5491  0017EC  A4D8               	btfss	status,2,c
  5492  0017EE  EFFB  F00B         	goto	u4061
  5493  0017F2  EFFD  F00B         	goto	u4060
  5494  0017F6                     u4061:
  5495  0017F6  EFEF  F00B         	goto	l5430
  5496  0017FA                     u4060:
  5497  0017FA                     l5434:
  5498                           
  5499                           ; BSR set to: 0
  5500  0017FA  51C0               	movf	___fltol@sign1& (0+255),w,b
  5501  0017FC  B4D8               	btfsc	status,2,c
  5502  0017FE  EF03  F00C         	goto	u4071
  5503  001802  EF05  F00C         	goto	u4070
  5504  001806                     u4071:
  5505  001806  EF0D  F00C         	goto	l5438
  5506  00180A                     u4070:
  5507  00180A                     
  5508                           ; BSR set to: 0
  5509  00180A  1FBB               	comf	(___fltol@f1+3)& (0+255),f,b
  5510  00180C  1FBA               	comf	(___fltol@f1+2)& (0+255),f,b
  5511  00180E  1FB9               	comf	(___fltol@f1+1)& (0+255),f,b
  5512  001810  6DB8               	negf	___fltol@f1& (0+255),b
  5513  001812  0E00               	movlw	0
  5514  001814  23B9               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5515  001816  23BA               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5516  001818  23BB               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5517  00181A                     l5438:
  5518                           
  5519                           ; BSR set to: 0
  5520  00181A  C0B8  F0B8         	movff	___fltol@f1,?___fltol
  5521  00181E  C0B9  F0B9         	movff	___fltol@f1+1,?___fltol+1
  5522  001822  C0BA  F0BA         	movff	___fltol@f1+2,?___fltol+2
  5523  001826  C0BB  F0BB         	movff	___fltol@f1+3,?___fltol+3
  5524  00182A                     l1690:
  5525                           
  5526                           ; BSR set to: 0
  5527  00182A  0012               	return		;funcret
  5528  00182C                     __end_of___fltol:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function ___flmul *****************
  5532 ;; Defined at:
  5533 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  b               4   41[COMRAM] long 
  5536 ;;  a               4   45[COMRAM] long 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  prod            4    7[BANK0 ] struct .
  5539 ;;  grs             4    2[BANK0 ] unsigned long 
  5540 ;;  temp            2   11[BANK0 ] struct .
  5541 ;;  bexp            1    6[BANK0 ] unsigned char 
  5542 ;;  aexp            1    1[BANK0 ] unsigned char 
  5543 ;;  sign            1    0[BANK0 ] unsigned char 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  4   41[COMRAM] unsigned char 
  5546 ;; Registers used:
  5547 ;;		wreg, status,2, status,0, prodl, prodh
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5553 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;Total ram usage:       25 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 8
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_startAccell
  5564 ;;		_calcSteering
  5565 ;;		_calcSpeed
  5566 ;;		_calcMotorPow
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text22
  5571  000574                     __ptext22:
  5572                           	callstack 0
  5573  000574                     ___flmul:
  5574                           	callstack 19
  5575  000574  502D               	movf	(___flmul@b+3)^0,w,c
  5576  000576  0B80               	andlw	128
  5577  000578  0100               	movlb	0	; () banked
  5578  00057A  6F9F               	movwf	___flmul@sign& (0+255),b
  5579  00057C  502D               	movf	(___flmul@b+3)^0,w,c
  5580  00057E  242D               	addwf	(___flmul@b+3)^0,w,c
  5581  000580  6FA5               	movwf	___flmul@bexp& (0+255),b
  5582  000582                     
  5583                           ; BSR set to: 0
  5584  000582  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5585  000584  EFC6  F002         	goto	u3821
  5586  000588  EFC8  F002         	goto	u3820
  5587  00058C                     u3821:
  5588  00058C  EFC9  F002         	goto	l5274
  5589  000590                     u3820:
  5590  000590                     
  5591                           ; BSR set to: 0
  5592  000590  81A5               	bsf	___flmul@bexp& (0+255),0,b
  5593  000592                     l5274:
  5594                           
  5595                           ; BSR set to: 0
  5596  000592  51A5               	movf	___flmul@bexp& (0+255),w,b
  5597  000594  B4D8               	btfsc	status,2,c
  5598  000596  EFCF  F002         	goto	u3831
  5599  00059A  EFD1  F002         	goto	u3830
  5600  00059E                     u3831:
  5601  00059E  EFE4  F002         	goto	l5282
  5602  0005A2                     u3830:
  5603  0005A2                     
  5604                           ; BSR set to: 0
  5605  0005A2  29A5               	incf	___flmul@bexp& (0+255),w,b
  5606  0005A4  A4D8               	btfss	status,2,c
  5607  0005A6  EFD7  F002         	goto	u3841
  5608  0005AA  EFD9  F002         	goto	u3840
  5609  0005AE                     u3841:
  5610  0005AE  EFE1  F002         	goto	l5280
  5611  0005B2                     u3840:
  5612  0005B2                     
  5613                           ; BSR set to: 0
  5614  0005B2  0E00               	movlw	0
  5615  0005B4  6E2A               	movwf	___flmul@b^0,c
  5616  0005B6  0E00               	movlw	0
  5617  0005B8  6E2B               	movwf	(___flmul@b+1)^0,c
  5618  0005BA  0E00               	movlw	0
  5619  0005BC  6E2C               	movwf	(___flmul@b+2)^0,c
  5620  0005BE  0E00               	movlw	0
  5621  0005C0  6E2D               	movwf	(___flmul@b+3)^0,c
  5622  0005C2                     l5280:
  5623                           
  5624                           ; BSR set to: 0
  5625  0005C2  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5626  0005C4  EFEC  F002         	goto	l5284
  5627  0005C8                     l5282:
  5628                           
  5629                           ; BSR set to: 0
  5630  0005C8  0E00               	movlw	0
  5631  0005CA  6E2A               	movwf	___flmul@b^0,c
  5632  0005CC  0E00               	movlw	0
  5633  0005CE  6E2B               	movwf	(___flmul@b+1)^0,c
  5634  0005D0  0E00               	movlw	0
  5635  0005D2  6E2C               	movwf	(___flmul@b+2)^0,c
  5636  0005D4  0E00               	movlw	0
  5637  0005D6  6E2D               	movwf	(___flmul@b+3)^0,c
  5638  0005D8                     l5284:
  5639                           
  5640                           ; BSR set to: 0
  5641  0005D8  5031               	movf	(___flmul@a+3)^0,w,c
  5642  0005DA  0B80               	andlw	128
  5643  0005DC  1B9F               	xorwf	___flmul@sign& (0+255),f,b
  5644  0005DE                     
  5645                           ; BSR set to: 0
  5646  0005DE  5031               	movf	(___flmul@a+3)^0,w,c
  5647  0005E0  2431               	addwf	(___flmul@a+3)^0,w,c
  5648  0005E2  6FA0               	movwf	___flmul@aexp& (0+255),b
  5649  0005E4                     
  5650                           ; BSR set to: 0
  5651  0005E4  AE30               	btfss	(___flmul@a+2)^0,7,c
  5652  0005E6  EFF7  F002         	goto	u3851
  5653  0005EA  EFF9  F002         	goto	u3850
  5654  0005EE                     u3851:
  5655  0005EE  EFFA  F002         	goto	l5292
  5656  0005F2                     u3850:
  5657  0005F2                     
  5658                           ; BSR set to: 0
  5659  0005F2  81A0               	bsf	___flmul@aexp& (0+255),0,b
  5660  0005F4                     l5292:
  5661                           
  5662                           ; BSR set to: 0
  5663  0005F4  51A0               	movf	___flmul@aexp& (0+255),w,b
  5664  0005F6  B4D8               	btfsc	status,2,c
  5665  0005F8  EF00  F003         	goto	u3861
  5666  0005FC  EF02  F003         	goto	u3860
  5667  000600                     u3861:
  5668  000600  EF15  F003         	goto	l5300
  5669  000604                     u3860:
  5670  000604                     
  5671                           ; BSR set to: 0
  5672  000604  29A0               	incf	___flmul@aexp& (0+255),w,b
  5673  000606  A4D8               	btfss	status,2,c
  5674  000608  EF08  F003         	goto	u3871
  5675  00060C  EF0A  F003         	goto	u3870
  5676  000610                     u3871:
  5677  000610  EF12  F003         	goto	l5298
  5678  000614                     u3870:
  5679  000614                     
  5680                           ; BSR set to: 0
  5681  000614  0E00               	movlw	0
  5682  000616  6E2E               	movwf	___flmul@a^0,c
  5683  000618  0E00               	movlw	0
  5684  00061A  6E2F               	movwf	(___flmul@a+1)^0,c
  5685  00061C  0E00               	movlw	0
  5686  00061E  6E30               	movwf	(___flmul@a+2)^0,c
  5687  000620  0E00               	movlw	0
  5688  000622  6E31               	movwf	(___flmul@a+3)^0,c
  5689  000624                     l5298:
  5690                           
  5691                           ; BSR set to: 0
  5692  000624  8E30               	bsf	(___flmul@a+2)^0,7,c
  5693  000626  EF1D  F003         	goto	l2007
  5694  00062A                     l5300:
  5695                           
  5696                           ; BSR set to: 0
  5697  00062A  0E00               	movlw	0
  5698  00062C  6E2E               	movwf	___flmul@a^0,c
  5699  00062E  0E00               	movlw	0
  5700  000630  6E2F               	movwf	(___flmul@a+1)^0,c
  5701  000632  0E00               	movlw	0
  5702  000634  6E30               	movwf	(___flmul@a+2)^0,c
  5703  000636  0E00               	movlw	0
  5704  000638  6E31               	movwf	(___flmul@a+3)^0,c
  5705  00063A                     l2007:
  5706                           
  5707                           ; BSR set to: 0
  5708  00063A  51A0               	movf	___flmul@aexp& (0+255),w,b
  5709  00063C  B4D8               	btfsc	status,2,c
  5710  00063E  EF23  F003         	goto	u3881
  5711  000642  EF25  F003         	goto	u3880
  5712  000646                     u3881:
  5713  000646  EF2D  F003         	goto	l5304
  5714  00064A                     u3880:
  5715  00064A                     
  5716                           ; BSR set to: 0
  5717  00064A  51A5               	movf	___flmul@bexp& (0+255),w,b
  5718  00064C  A4D8               	btfss	status,2,c
  5719  00064E  EF2B  F003         	goto	u3891
  5720  000652  EF2D  F003         	goto	u3890
  5721  000656                     u3891:
  5722  000656  EF37  F003         	goto	l5308
  5723  00065A                     u3890:
  5724  00065A                     l5304:
  5725                           
  5726                           ; BSR set to: 0
  5727  00065A  0E00               	movlw	0
  5728  00065C  6E2A               	movwf	?___flmul^0,c
  5729  00065E  0E00               	movlw	0
  5730  000660  6E2B               	movwf	(?___flmul+1)^0,c
  5731  000662  0E00               	movlw	0
  5732  000664  6E2C               	movwf	(?___flmul+2)^0,c
  5733  000666  0E00               	movlw	0
  5734  000668  6E2D               	movwf	(?___flmul+3)^0,c
  5735  00066A  EFE1  F004         	goto	l2011
  5736  00066E                     l5308:
  5737                           
  5738                           ; BSR set to: 0
  5739  00066E  5030               	movf	(___flmul@a+2)^0,w,c
  5740  000670  022A               	mulwf	___flmul@b^0,c
  5741  000672  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5742  000678  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5743  00067E                     
  5744                           ; BSR set to: 0
  5745  00067E  51AA               	movf	___flmul@temp& (0+255),w,b
  5746  000680  6FA1               	movwf	___flmul@grs& (0+255),b
  5747  000682  6BA2               	clrf	(___flmul@grs+1)& (0+255),b
  5748  000684  6BA3               	clrf	(___flmul@grs+2)& (0+255),b
  5749  000686  6BA4               	clrf	(___flmul@grs+3)& (0+255),b
  5750  000688                     
  5751                           ; BSR set to: 0
  5752  000688  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5753  00068A  6FA6               	movwf	___flmul@prod& (0+255),b
  5754  00068C  6BA7               	clrf	(___flmul@prod+1)& (0+255),b
  5755  00068E  6BA8               	clrf	(___flmul@prod+2)& (0+255),b
  5756  000690  6BA9               	clrf	(___flmul@prod+3)& (0+255),b
  5757  000692  502F               	movf	(___flmul@a+1)^0,w,c
  5758  000694  022B               	mulwf	(___flmul@b+1)^0,c
  5759  000696  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5760  00069C  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5761  0006A2                     
  5762                           ; BSR set to: 0
  5763  0006A2  51AA               	movf	___flmul@temp& (0+255),w,b
  5764  0006A4  27A1               	addwf	___flmul@grs& (0+255),f,b
  5765  0006A6  0E00               	movlw	0
  5766  0006A8  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5767  0006AA  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5768  0006AC  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5769  0006AE                     
  5770                           ; BSR set to: 0
  5771  0006AE  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5772  0006B0  27A6               	addwf	___flmul@prod& (0+255),f,b
  5773  0006B2  0E00               	movlw	0
  5774  0006B4  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5775  0006B6  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5776  0006B8  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5777  0006BA  502E               	movf	___flmul@a^0,w,c
  5778  0006BC  022C               	mulwf	(___flmul@b+2)^0,c
  5779  0006BE  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5780  0006C4  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5781  0006CA                     
  5782                           ; BSR set to: 0
  5783  0006CA  51AA               	movf	___flmul@temp& (0+255),w,b
  5784  0006CC  27A1               	addwf	___flmul@grs& (0+255),f,b
  5785  0006CE  0E00               	movlw	0
  5786  0006D0  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5787  0006D2  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5788  0006D4  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5789  0006D6                     
  5790                           ; BSR set to: 0
  5791  0006D6  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5792  0006D8  27A6               	addwf	___flmul@prod& (0+255),f,b
  5793  0006DA  0E00               	movlw	0
  5794  0006DC  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5795  0006DE  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5796  0006E0  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5797  0006E2                     
  5798                           ; BSR set to: 0
  5799  0006E2  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5800  0006E6  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5801  0006EA  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5802  0006EE  6BA1               	clrf	___flmul@grs& (0+255),b
  5803  0006F0                     
  5804                           ; BSR set to: 0
  5805  0006F0  502E               	movf	___flmul@a^0,w,c
  5806  0006F2  022B               	mulwf	(___flmul@b+1)^0,c
  5807  0006F4  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5808  0006FA  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5809  000700                     
  5810                           ; BSR set to: 0
  5811  000700  51AA               	movf	___flmul@temp& (0+255),w,b
  5812  000702  27A1               	addwf	___flmul@grs& (0+255),f,b
  5813  000704  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5814  000706  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5815  000708  0E00               	movlw	0
  5816  00070A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5817  00070C  0E00               	movlw	0
  5818  00070E  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5819  000710                     
  5820                           ; BSR set to: 0
  5821  000710  502F               	movf	(___flmul@a+1)^0,w,c
  5822  000712  022A               	mulwf	___flmul@b^0,c
  5823  000714  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5824  00071A  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5825  000720                     
  5826                           ; BSR set to: 0
  5827  000720  51AA               	movf	___flmul@temp& (0+255),w,b
  5828  000722  27A1               	addwf	___flmul@grs& (0+255),f,b
  5829  000724  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5830  000726  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5831  000728  0E00               	movlw	0
  5832  00072A  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5833  00072C  0E00               	movlw	0
  5834  00072E  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5835  000730                     
  5836                           ; BSR set to: 0
  5837  000730  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5838  000734  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5839  000738  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5840  00073C  6BA1               	clrf	___flmul@grs& (0+255),b
  5841  00073E  502E               	movf	___flmul@a^0,w,c
  5842  000740  022A               	mulwf	___flmul@b^0,c
  5843  000742  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5844  000748  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5845  00074E                     
  5846                           ; BSR set to: 0
  5847  00074E  51AA               	movf	___flmul@temp& (0+255),w,b
  5848  000750  27A1               	addwf	___flmul@grs& (0+255),f,b
  5849  000752  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5850  000754  23A2               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5851  000756  0E00               	movlw	0
  5852  000758  23A3               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5853  00075A  0E00               	movlw	0
  5854  00075C  23A4               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5855  00075E                     
  5856                           ; BSR set to: 0
  5857  00075E  5030               	movf	(___flmul@a+2)^0,w,c
  5858  000760  022B               	mulwf	(___flmul@b+1)^0,c
  5859  000762  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5860  000768  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5861  00076E  51AA               	movf	___flmul@temp& (0+255),w,b
  5862  000770  27A6               	addwf	___flmul@prod& (0+255),f,b
  5863  000772  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5864  000774  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5865  000776  0E00               	movlw	0
  5866  000778  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5867  00077A  0E00               	movlw	0
  5868  00077C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5869  00077E                     
  5870                           ; BSR set to: 0
  5871  00077E  502F               	movf	(___flmul@a+1)^0,w,c
  5872  000780  022C               	mulwf	(___flmul@b+2)^0,c
  5873  000782  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5874  000788  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5875  00078E                     
  5876                           ; BSR set to: 0
  5877  00078E  51AA               	movf	___flmul@temp& (0+255),w,b
  5878  000790  27A6               	addwf	___flmul@prod& (0+255),f,b
  5879  000792  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5880  000794  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5881  000796  0E00               	movlw	0
  5882  000798  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5883  00079A  0E00               	movlw	0
  5884  00079C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5885  00079E  5030               	movf	(___flmul@a+2)^0,w,c
  5886  0007A0  022C               	mulwf	(___flmul@b+2)^0,c
  5887  0007A2  006F FFCC  F0AA    	movff	prodl,___flmul@temp
  5888  0007A8  006F FFD0  F0AB    	movff	prodh,___flmul@temp+1
  5889  0007AE                     
  5890                           ; BSR set to: 0
  5891  0007AE  51AA               	movf	___flmul@temp& (0+255),w,b
  5892  0007B0  6E32               	movwf	??___flmul^0,c
  5893  0007B2  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  5894  0007B4  6E33               	movwf	(??___flmul+1)^0,c
  5895  0007B6  6A34               	clrf	(??___flmul+2)^0,c
  5896  0007B8  6A35               	clrf	(??___flmul+3)^0,c
  5897  0007BA  C034  F035         	movff	??___flmul+2,??___flmul+3
  5898  0007BE  C033  F034         	movff	??___flmul+1,??___flmul+2
  5899  0007C2  C032  F033         	movff	??___flmul,??___flmul+1
  5900  0007C6  6A32               	clrf	??___flmul^0,c
  5901  0007C8  5032               	movf	??___flmul^0,w,c
  5902  0007CA  27A6               	addwf	___flmul@prod& (0+255),f,b
  5903  0007CC  5033               	movf	(??___flmul+1)^0,w,c
  5904  0007CE  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5905  0007D0  5034               	movf	(??___flmul+2)^0,w,c
  5906  0007D2  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5907  0007D4  5035               	movf	(??___flmul+3)^0,w,c
  5908  0007D6  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5909  0007D8                     
  5910                           ; BSR set to: 0
  5911  0007D8  C0A1  F032         	movff	___flmul@grs,??___flmul
  5912  0007DC  C0A2  F033         	movff	___flmul@grs+1,??___flmul+1
  5913  0007E0  C0A3  F034         	movff	___flmul@grs+2,??___flmul+2
  5914  0007E4  C0A4  F035         	movff	___flmul@grs+3,??___flmul+3
  5915  0007E8  0E19               	movlw	25
  5916  0007EA  EFFC  F003         	goto	u3900
  5917  0007EE                     u3905:
  5918  0007EE  90D8               	bcf	status,0,c
  5919  0007F0  3235               	rrcf	(??___flmul+3)^0,f,c
  5920  0007F2  3234               	rrcf	(??___flmul+2)^0,f,c
  5921  0007F4  3233               	rrcf	(??___flmul+1)^0,f,c
  5922  0007F6  3232               	rrcf	??___flmul^0,f,c
  5923  0007F8                     u3900:
  5924  0007F8  2EE8               	decfsz	wreg,f,c
  5925  0007FA  EFF7  F003         	goto	u3905
  5926  0007FE  5032               	movf	??___flmul^0,w,c
  5927  000800  27A6               	addwf	___flmul@prod& (0+255),f,b
  5928  000802  5033               	movf	(??___flmul+1)^0,w,c
  5929  000804  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5930  000806  5034               	movf	(??___flmul+2)^0,w,c
  5931  000808  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5932  00080A  5035               	movf	(??___flmul+3)^0,w,c
  5933  00080C  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5934  00080E                     
  5935                           ; BSR set to: 0
  5936  00080E  C0A3  F0A4         	movff	___flmul@grs+2,___flmul@grs+3
  5937  000812  C0A2  F0A3         	movff	___flmul@grs+1,___flmul@grs+2
  5938  000816  C0A1  F0A2         	movff	___flmul@grs,___flmul@grs+1
  5939  00081A  6BA1               	clrf	___flmul@grs& (0+255),b
  5940  00081C                     
  5941                           ; BSR set to: 0
  5942  00081C  51A0               	movf	___flmul@aexp& (0+255),w,b
  5943  00081E  C0A5  F032         	movff	___flmul@bexp,??___flmul
  5944  000822  6A33               	clrf	(??___flmul+1)^0,c
  5945  000824  2632               	addwf	??___flmul^0,f,c
  5946  000826  0E00               	movlw	0
  5947  000828  2233               	addwfc	(??___flmul+1)^0,f,c
  5948  00082A  0E82               	movlw	130
  5949  00082C  2432               	addwf	??___flmul^0,w,c
  5950  00082E  6FAA               	movwf	___flmul@temp& (0+255),b
  5951  000830  0EFF               	movlw	255
  5952  000832  2033               	addwfc	(??___flmul+1)^0,w,c
  5953  000834  6FAB               	movwf	(___flmul@temp+1)& (0+255),b
  5954  000836  EF32  F004         	goto	l5356
  5955  00083A                     l5350:
  5956                           
  5957                           ; BSR set to: 0
  5958  00083A  90D8               	bcf	status,0,c
  5959  00083C  37A6               	rlcf	___flmul@prod& (0+255),f,b
  5960  00083E  37A7               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5961  000840  37A8               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5962  000842  37A9               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5963  000844                     
  5964                           ; BSR set to: 0
  5965  000844  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  5966  000846  EF27  F004         	goto	u3911
  5967  00084A  EF29  F004         	goto	u3910
  5968  00084E                     u3911:
  5969  00084E  EF2A  F004         	goto	l2014
  5970  000852                     u3910:
  5971  000852                     
  5972                           ; BSR set to: 0
  5973  000852  81A6               	bsf	___flmul@prod& (0+255),0,b
  5974  000854                     l2014:
  5975                           
  5976                           ; BSR set to: 0
  5977  000854  90D8               	bcf	status,0,c
  5978  000856  37A1               	rlcf	___flmul@grs& (0+255),f,b
  5979  000858  37A2               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5980  00085A  37A3               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5981  00085C  37A4               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5982  00085E  07AA               	decf	___flmul@temp& (0+255),f,b
  5983  000860  A0D8               	btfss	status,0,c
  5984  000862  07AB               	decf	(___flmul@temp+1)& (0+255),f,b
  5985  000864                     l5356:
  5986                           
  5987                           ; BSR set to: 0
  5988  000864  AFA8               	btfss	(___flmul@prod+2)& (0+255),7,b
  5989  000866  EF37  F004         	goto	u3921
  5990  00086A  EF39  F004         	goto	u3920
  5991  00086E                     u3921:
  5992  00086E  EF1D  F004         	goto	l5350
  5993  000872                     u3920:
  5994  000872                     
  5995                           ; BSR set to: 0
  5996  000872  0E00               	movlw	0
  5997  000874  6FA0               	movwf	___flmul@aexp& (0+255),b
  5998  000876                     
  5999                           ; BSR set to: 0
  6000  000876  AFA4               	btfss	(___flmul@grs+3)& (0+255),7,b
  6001  000878  EF40  F004         	goto	u3931
  6002  00087C  EF42  F004         	goto	u3930
  6003  000880                     u3931:
  6004  000880  EF66  F004         	goto	l2016
  6005  000884                     u3930:
  6006  000884                     
  6007                           ; BSR set to: 0
  6008  000884  0EFF               	movlw	255
  6009  000886  15A1               	andwf	___flmul@grs& (0+255),w,b
  6010  000888  6E32               	movwf	??___flmul^0,c
  6011  00088A  0EFF               	movlw	255
  6012  00088C  15A2               	andwf	(___flmul@grs+1)& (0+255),w,b
  6013  00088E  6E33               	movwf	(??___flmul+1)^0,c
  6014  000890  0EFF               	movlw	255
  6015  000892  15A3               	andwf	(___flmul@grs+2)& (0+255),w,b
  6016  000894  6E34               	movwf	(??___flmul+2)^0,c
  6017  000896  0E7F               	movlw	127
  6018  000898  15A4               	andwf	(___flmul@grs+3)& (0+255),w,b
  6019  00089A  6E35               	movwf	(??___flmul+3)^0,c
  6020  00089C  5032               	movf	??___flmul^0,w,c
  6021  00089E  1033               	iorwf	(??___flmul+1)^0,w,c
  6022  0008A0  1034               	iorwf	(??___flmul+2)^0,w,c
  6023  0008A2  1035               	iorwf	(??___flmul+3)^0,w,c
  6024  0008A4  B4D8               	btfsc	status,2,c
  6025  0008A6  EF57  F004         	goto	u3941
  6026  0008AA  EF59  F004         	goto	u3940
  6027  0008AE                     u3941:
  6028  0008AE  EF5D  F004         	goto	l2017
  6029  0008B2                     u3940:
  6030  0008B2                     l5364:
  6031                           
  6032                           ; BSR set to: 0
  6033  0008B2  0E01               	movlw	1
  6034  0008B4  6FA0               	movwf	___flmul@aexp& (0+255),b
  6035  0008B6  EF66  F004         	goto	l2016
  6036  0008BA                     l2017:
  6037                           
  6038                           ; BSR set to: 0
  6039  0008BA  A1A6               	btfss	___flmul@prod& (0+255),0,b
  6040  0008BC  EF62  F004         	goto	u3951
  6041  0008C0  EF64  F004         	goto	u3950
  6042  0008C4                     u3951:
  6043  0008C4  EF66  F004         	goto	l2016
  6044  0008C8                     u3950:
  6045  0008C8  EF59  F004         	goto	l5364
  6046  0008CC                     l2016:
  6047                           
  6048                           ; BSR set to: 0
  6049  0008CC  51A0               	movf	___flmul@aexp& (0+255),w,b
  6050  0008CE  B4D8               	btfsc	status,2,c
  6051  0008D0  EF6C  F004         	goto	u3961
  6052  0008D4  EF6E  F004         	goto	u3960
  6053  0008D8                     u3961:
  6054  0008D8  EF92  F004         	goto	l5376
  6055  0008DC                     u3960:
  6056  0008DC                     
  6057                           ; BSR set to: 0
  6058  0008DC  0E01               	movlw	1
  6059  0008DE  27A6               	addwf	___flmul@prod& (0+255),f,b
  6060  0008E0  0E00               	movlw	0
  6061  0008E2  23A7               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6062  0008E4  23A8               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6063  0008E6  23A9               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6064  0008E8                     
  6065                           ; BSR set to: 0
  6066  0008E8  A1A9               	btfss	(___flmul@prod+3)& (0+255),0,b
  6067  0008EA  EF79  F004         	goto	u3971
  6068  0008EE  EF7B  F004         	goto	u3970
  6069  0008F2                     u3971:
  6070  0008F2  EF92  F004         	goto	l5376
  6071  0008F6                     u3970:
  6072  0008F6                     
  6073                           ; BSR set to: 0
  6074  0008F6  C0A6  F032         	movff	___flmul@prod,??___flmul
  6075  0008FA  C0A7  F033         	movff	___flmul@prod+1,??___flmul+1
  6076  0008FE  C0A8  F034         	movff	___flmul@prod+2,??___flmul+2
  6077  000902  C0A9  F035         	movff	___flmul@prod+3,??___flmul+3
  6078  000906  3435               	rlcf	(??___flmul+3)^0,w,c
  6079  000908  3235               	rrcf	(??___flmul+3)^0,f,c
  6080  00090A  3234               	rrcf	(??___flmul+2)^0,f,c
  6081  00090C  3233               	rrcf	(??___flmul+1)^0,f,c
  6082  00090E  3232               	rrcf	??___flmul^0,f,c
  6083  000910  C032  F0A6         	movff	??___flmul,___flmul@prod
  6084  000914  C033  F0A7         	movff	??___flmul+1,___flmul@prod+1
  6085  000918  C034  F0A8         	movff	??___flmul+2,___flmul@prod+2
  6086  00091C  C035  F0A9         	movff	??___flmul+3,___flmul@prod+3
  6087  000920                     
  6088                           ; BSR set to: 0
  6089  000920  4BAA               	infsnz	___flmul@temp& (0+255),f,b
  6090  000922  2BAB               	incf	(___flmul@temp+1)& (0+255),f,b
  6091  000924                     l5376:
  6092                           
  6093                           ; BSR set to: 0
  6094  000924  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6095  000926  EF9D  F004         	goto	u3981
  6096  00092A  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  6097  00092C  E108               	bnz	u3980
  6098  00092E  29AA               	incf	___flmul@temp& (0+255),w,b
  6099  000930  A0D8               	btfss	status,0,c
  6100  000932  EF9D  F004         	goto	u3981
  6101  000936  EF9F  F004         	goto	u3980
  6102  00093A                     u3981:
  6103  00093A  EFA9  F004         	goto	l5380
  6104  00093E                     u3980:
  6105  00093E                     
  6106                           ; BSR set to: 0
  6107  00093E  0E00               	movlw	0
  6108  000940  6FA6               	movwf	___flmul@prod& (0+255),b
  6109  000942  0E00               	movlw	0
  6110  000944  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  6111  000946  0E80               	movlw	128
  6112  000948  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  6113  00094A  0E7F               	movlw	127
  6114  00094C  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  6115  00094E  EFD7  F004         	goto	l5392
  6116  000952                     l5380:
  6117                           
  6118                           ; BSR set to: 0
  6119  000952  BFAB               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6120  000954  EFB6  F004         	goto	u3990
  6121  000958  51AB               	movf	(___flmul@temp+1)& (0+255),w,b
  6122  00095A  E106               	bnz	u3991
  6123  00095C  05AA               	decf	___flmul@temp& (0+255),w,b
  6124  00095E  B0D8               	btfsc	status,0,c
  6125  000960  EFB4  F004         	goto	u3991
  6126  000964  EFB6  F004         	goto	u3990
  6127  000968                     u3991:
  6128  000968  EFC2  F004         	goto	l2024
  6129  00096C                     u3990:
  6130  00096C                     
  6131                           ; BSR set to: 0
  6132  00096C  0E00               	movlw	0
  6133  00096E  6FA6               	movwf	___flmul@prod& (0+255),b
  6134  000970  0E00               	movlw	0
  6135  000972  6FA7               	movwf	(___flmul@prod+1)& (0+255),b
  6136  000974  0E00               	movlw	0
  6137  000976  6FA8               	movwf	(___flmul@prod+2)& (0+255),b
  6138  000978  0E00               	movlw	0
  6139  00097A  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  6140  00097C  0E00               	movlw	0
  6141  00097E  6F9F               	movwf	___flmul@sign& (0+255),b
  6142  000980  EFD7  F004         	goto	l5392
  6143  000984                     l2024:
  6144                           
  6145                           ; BSR set to: 0
  6146  000984  C0AA  F0A5         	movff	___flmul@temp,___flmul@bexp
  6147  000988                     
  6148                           ; BSR set to: 0
  6149  000988  0EFF               	movlw	255
  6150  00098A  17A6               	andwf	___flmul@prod& (0+255),f,b
  6151  00098C  0EFF               	movlw	255
  6152  00098E  17A7               	andwf	(___flmul@prod+1)& (0+255),f,b
  6153  000990  0E7F               	movlw	127
  6154  000992  17A8               	andwf	(___flmul@prod+2)& (0+255),f,b
  6155  000994  0E00               	movlw	0
  6156  000996  17A9               	andwf	(___flmul@prod+3)& (0+255),f,b
  6157  000998                     
  6158                           ; BSR set to: 0
  6159  000998  A1A5               	btfss	___flmul@bexp& (0+255),0,b
  6160  00099A  EFD1  F004         	goto	u4001
  6161  00099E  EFD3  F004         	goto	u4000
  6162  0009A2                     u4001:
  6163  0009A2  EFD4  F004         	goto	l5390
  6164  0009A6                     u4000:
  6165  0009A6                     
  6166                           ; BSR set to: 0
  6167  0009A6  8FA8               	bsf	(___flmul@prod+2)& (0+255),7,b
  6168  0009A8                     l5390:
  6169                           
  6170                           ; BSR set to: 0
  6171  0009A8  90D8               	bcf	status,0,c
  6172  0009AA  31A5               	rrcf	___flmul@bexp& (0+255),w,b
  6173  0009AC  6FA9               	movwf	(___flmul@prod+3)& (0+255),b
  6174  0009AE                     l5392:
  6175                           
  6176                           ; BSR set to: 0
  6177  0009AE  519F               	movf	___flmul@sign& (0+255),w,b
  6178  0009B0  13A9               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6179  0009B2                     
  6180                           ; BSR set to: 0
  6181  0009B2  C0A6  F02A         	movff	___flmul@prod,?___flmul
  6182  0009B6  C0A7  F02B         	movff	___flmul@prod+1,?___flmul+1
  6183  0009BA  C0A8  F02C         	movff	___flmul@prod+2,?___flmul+2
  6184  0009BE  C0A9  F02D         	movff	___flmul@prod+3,?___flmul+3
  6185  0009C2                     l2011:
  6186                           
  6187                           ; BSR set to: 0
  6188  0009C2  0012               	return		;funcret
  6189  0009C4                     __end_of___flmul:
  6190                           	callstack 0
  6191                           
  6192 ;; *************** function ___awdiv *****************
  6193 ;; Defined at:
  6194 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  dividend        2   19[COMRAM] int 
  6197 ;;  divisor         2   21[COMRAM] int 
  6198 ;; Auto vars:     Size  Location     Type
  6199 ;;  quotient        2   25[COMRAM] int 
  6200 ;;  sign            1   24[COMRAM] unsigned char 
  6201 ;;  counter         1   23[COMRAM] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  2   19[COMRAM] int 
  6204 ;; Registers used:
  6205 ;;		wreg, status,2, status,0
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;Total ram usage:        8 bytes
  6216 ;; Hardware stack levels used: 1
  6217 ;; Hardware stack levels required when called: 8
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_calcSteering
  6222 ;;		_calcMotorPow
  6223 ;;		_setSteering
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text23
  6228  001D86                     __ptext23:
  6229                           	callstack 0
  6230  001D86                     ___awdiv:
  6231                           	callstack 19
  6232  001D86  0E00               	movlw	0
  6233  001D88  6E19               	movwf	___awdiv@sign^0,c
  6234  001D8A  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
  6235  001D8C  EFCC  F00E         	goto	u1950
  6236  001D90  EFCA  F00E         	goto	u1951
  6237  001D94                     u1951:
  6238  001D94  EFD2  F00E         	goto	l3812
  6239  001D98                     u1950:
  6240  001D98  6C16               	negf	___awdiv@divisor^0,c
  6241  001D9A  1E17               	comf	(___awdiv@divisor+1)^0,f,c
  6242  001D9C  B0D8               	btfsc	status,0,c
  6243  001D9E  2A17               	incf	(___awdiv@divisor+1)^0,f,c
  6244  001DA0  0E01               	movlw	1
  6245  001DA2  6E19               	movwf	___awdiv@sign^0,c
  6246  001DA4                     l3812:
  6247  001DA4  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
  6248  001DA6  EFD9  F00E         	goto	u1960
  6249  001DAA  EFD7  F00E         	goto	u1961
  6250  001DAE                     u1961:
  6251  001DAE  EFDF  F00E         	goto	l3818
  6252  001DB2                     u1960:
  6253  001DB2  6C14               	negf	___awdiv@dividend^0,c
  6254  001DB4  1E15               	comf	(___awdiv@dividend+1)^0,f,c
  6255  001DB6  B0D8               	btfsc	status,0,c
  6256  001DB8  2A15               	incf	(___awdiv@dividend+1)^0,f,c
  6257  001DBA  0E01               	movlw	1
  6258  001DBC  1A19               	xorwf	___awdiv@sign^0,f,c
  6259  001DBE                     l3818:
  6260  001DBE  0E00               	movlw	0
  6261  001DC0  6E1B               	movwf	(___awdiv@quotient+1)^0,c
  6262  001DC2  0E00               	movlw	0
  6263  001DC4  6E1A               	movwf	___awdiv@quotient^0,c
  6264  001DC6  5016               	movf	___awdiv@divisor^0,w,c
  6265  001DC8  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
  6266  001DCA  B4D8               	btfsc	status,2,c
  6267  001DCC  EFEA  F00E         	goto	u1971
  6268  001DD0  EFEC  F00E         	goto	u1970
  6269  001DD4                     u1971:
  6270  001DD4  EF14  F00F         	goto	l3840
  6271  001DD8                     u1970:
  6272  001DD8  0E01               	movlw	1
  6273  001DDA  6E18               	movwf	___awdiv@counter^0,c
  6274  001DDC  EFF4  F00E         	goto	l3826
  6275  001DE0                     l3824:
  6276  001DE0  90D8               	bcf	status,0,c
  6277  001DE2  3616               	rlcf	___awdiv@divisor^0,f,c
  6278  001DE4  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
  6279  001DE6  2A18               	incf	___awdiv@counter^0,f,c
  6280  001DE8                     l3826:
  6281  001DE8  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
  6282  001DEA  EFF9  F00E         	goto	u1981
  6283  001DEE  EFFB  F00E         	goto	u1980
  6284  001DF2                     u1981:
  6285  001DF2  EFF0  F00E         	goto	l3824
  6286  001DF6                     u1980:
  6287  001DF6                     l3828:
  6288  001DF6  90D8               	bcf	status,0,c
  6289  001DF8  361A               	rlcf	___awdiv@quotient^0,f,c
  6290  001DFA  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
  6291  001DFC  5016               	movf	___awdiv@divisor^0,w,c
  6292  001DFE  5C14               	subwf	___awdiv@dividend^0,w,c
  6293  001E00  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6294  001E02  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
  6295  001E04  A0D8               	btfss	status,0,c
  6296  001E06  EF07  F00F         	goto	u1991
  6297  001E0A  EF09  F00F         	goto	u1990
  6298  001E0E                     u1991:
  6299  001E0E  EF0E  F00F         	goto	l3836
  6300  001E12                     u1990:
  6301  001E12  5016               	movf	___awdiv@divisor^0,w,c
  6302  001E14  5E14               	subwf	___awdiv@dividend^0,f,c
  6303  001E16  5017               	movf	(___awdiv@divisor+1)^0,w,c
  6304  001E18  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
  6305  001E1A  801A               	bsf	___awdiv@quotient^0,0,c
  6306  001E1C                     l3836:
  6307  001E1C  90D8               	bcf	status,0,c
  6308  001E1E  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
  6309  001E20  3216               	rrcf	___awdiv@divisor^0,f,c
  6310  001E22  2E18               	decfsz	___awdiv@counter^0,f,c
  6311  001E24  EFFB  F00E         	goto	l3828
  6312  001E28                     l3840:
  6313  001E28  5019               	movf	___awdiv@sign^0,w,c
  6314  001E2A  B4D8               	btfsc	status,2,c
  6315  001E2C  EF1A  F00F         	goto	u2001
  6316  001E30  EF1C  F00F         	goto	u2000
  6317  001E34                     u2001:
  6318  001E34  EF20  F00F         	goto	l3844
  6319  001E38                     u2000:
  6320  001E38  6C1A               	negf	___awdiv@quotient^0,c
  6321  001E3A  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
  6322  001E3C  B0D8               	btfsc	status,0,c
  6323  001E3E  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
  6324  001E40                     l3844:
  6325  001E40  C01A  F014         	movff	___awdiv@quotient,?___awdiv
  6326  001E44  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
  6327  001E48  0012               	return		;funcret
  6328  001E4A                     __end_of___awdiv:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function _SYSTEM_Initialize *****************
  6332 ;; Defined at:
  6333 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;		None
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;		None
  6338 ;; Return value:  Size  Location     Type
  6339 ;;                  1    wreg      void 
  6340 ;; Registers used:
  6341 ;;		wreg, status,2, status,0, cstack
  6342 ;; Tracked objects:
  6343 ;;		On entry : 0/0
  6344 ;;		On exit  : 0/0
  6345 ;;		Unchanged: 0/0
  6346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;Total ram usage:        0 bytes
  6352 ;; Hardware stack levels used: 1
  6353 ;; Hardware stack levels required when called: 10
  6354 ;; This function calls:
  6355 ;;		_ADCC_Initialize
  6356 ;;		_CCP3_Initialize
  6357 ;;		_CCP4_Initialize
  6358 ;;		_CLC3_Initialize
  6359 ;;		_INTERRUPT_Initialize
  6360 ;;		_OSCILLATOR_Initialize
  6361 ;;		_PIN_MANAGER_Initialize
  6362 ;;		_PMD_Initialize
  6363 ;;		_PWM5_Initialize
  6364 ;;		_PWM6_Initialize
  6365 ;;		_PWM7_Initialize
  6366 ;;		_PWM8_Initialize
  6367 ;;		_SMT1_Initialize
  6368 ;;		_TMR2_Initialize
  6369 ;;		_TMR3_Initialize
  6370 ;;		_TMR4_Initialize
  6371 ;;		_TMR5_Initialize
  6372 ;;		_UART1_Initialize
  6373 ;; This function is called by:
  6374 ;;		_main
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text24
  6379  002080                     __ptext24:
  6380                           	callstack 0
  6381  002080                     _SYSTEM_Initialize:
  6382                           	callstack 20
  6383  002080                     
  6384                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  6385  002080  EC1A  F010         	call	_INTERRUPT_Initialize	;wreg free
  6386                           
  6387                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  6388  002084  EC36  F013         	call	_PMD_Initialize	;wreg free
  6389                           
  6390                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6391  002088  ECFB  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6392                           
  6393                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6394  00208C  ECB6  F013         	call	_OSCILLATOR_Initialize	;wreg free
  6395  002090                     
  6396                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
  6397  002090  ECB2  F012         	call	_CCP3_Initialize	;wreg free
  6398  002094                     
  6399                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  6400  002094  ECC2  F00F         	call	_ADCC_Initialize	;wreg free
  6401                           
  6402                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
  6403  002098  ECC9  F012         	call	_TMR4_Initialize	;wreg free
  6404  00209C                     
  6405                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
  6406  00209C  EC3B  F012         	call	_SMT1_Initialize	;wreg free
  6407  0020A0                     
  6408                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
  6409  0020A0  EC86  F013         	call	_PWM8_Initialize	;wreg free
  6410  0020A4                     
  6411                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
  6412  0020A4  EC6A  F013         	call	_TMR2_Initialize	;wreg free
  6413  0020A8                     
  6414                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
  6415  0020A8  EC9E  F013         	call	_PWM6_Initialize	;wreg free
  6416                           
  6417                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
  6418  0020AC  EC9B  F012         	call	_CCP4_Initialize	;wreg free
  6419  0020B0                     
  6420                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
  6421  0020B0  ECDF  F012         	call	_CLC3_Initialize	;wreg free
  6422  0020B4                     
  6423                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
  6424  0020B4  EC30  F011         	call	_TMR3_Initialize	;wreg free
  6425                           
  6426                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
  6427  0020B8  ECAA  F013         	call	_PWM5_Initialize	;wreg free
  6428  0020BC                     
  6429                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
  6430  0020BC  EC65  F010         	call	_TMR5_Initialize	;wreg free
  6431  0020C0                     
  6432                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
  6433  0020C0  EC92  F013         	call	_PWM7_Initialize	;wreg free
  6434                           
  6435                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
  6436  0020C4  EC25  F00F         	call	_UART1_Initialize	;wreg free
  6437  0020C8  0012               	return		;funcret
  6438  0020CA                     __end_of_SYSTEM_Initialize:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _UART1_Initialize *****************
  6442 ;; Defined at:
  6443 ;;		line 87 in file "mcc_generated_files/uart1.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;		None
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;		None
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, status,2, status,0, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;Total ram usage:        0 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 9
  6464 ;; This function calls:
  6465 ;;		_UART1_SetErrorHandler
  6466 ;;		_UART1_SetFramingErrorHandler
  6467 ;;		_UART1_SetOverrunErrorHandler
  6468 ;;		_UART1_SetRxInterruptHandler
  6469 ;;		_UART1_SetTxInterruptHandler
  6470 ;; This function is called by:
  6471 ;;		_SYSTEM_Initialize
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text25
  6476  001E4A                     __ptext25:
  6477                           	callstack 0
  6478  001E4A                     _UART1_Initialize:
  6479                           	callstack 20
  6480  001E4A                     
  6481                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
  6482  001E4A  0139               	movlb	57	; () banked
  6483  001E4C  9793               	bcf	147,3,b	;volatile
  6484  001E4E                     
  6485                           ; BSR set to: 57
  6486                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
  6487  001E4E  0EC0               	movlw	low _UART1_Receive_ISR
  6488  001E50  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
  6489  001E52  0E1C               	movlw	high _UART1_Receive_ISR
  6490  001E54  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
  6491  001E56  ECD6  F013         	call	_UART1_SetRxInterruptHandler	;wreg free
  6492  001E5A                     
  6493                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
  6494  001E5A  0139               	movlb	57	; () banked
  6495  001E5C  9993               	bcf	147,4,b	;volatile
  6496                           
  6497                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
  6498  001E5E  0E5E               	movlw	low _UART1_Transmit_ISR
  6499  001E60  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
  6500  001E62  0E21               	movlw	high _UART1_Transmit_ISR
  6501  001E64  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
  6502  001E66  ECD1  F013         	call	_UART1_SetTxInterruptHandler	;wreg free
  6503  001E6A                     
  6504                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
  6505  001E6A  0E00               	movlw	0
  6506  001E6C  013D               	movlb	61	; () banked
  6507  001E6E  6FEC               	movwf	236,b	;volatile
  6508  001E70                     
  6509                           ; BSR set to: 61
  6510                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
  6511  001E70  0E00               	movlw	0
  6512  001E72  6FED               	movwf	237,b	;volatile
  6513  001E74                     
  6514                           ; BSR set to: 61
  6515                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
  6516  001E74  0E00               	movlw	0
  6517  001E76  6FEE               	movwf	238,b	;volatile
  6518  001E78                     
  6519                           ; BSR set to: 61
  6520                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
  6521  001E78  0E00               	movlw	0
  6522  001E7A  6FEF               	movwf	239,b	;volatile
  6523  001E7C                     
  6524                           ; BSR set to: 61
  6525                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
  6526  001E7C  0E00               	movlw	0
  6527  001E7E  6FF0               	movwf	240,b	;volatile
  6528  001E80                     
  6529                           ; BSR set to: 61
  6530                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
  6531  001E80  0E00               	movlw	0
  6532  001E82  6FF1               	movwf	241,b	;volatile
  6533  001E84                     
  6534                           ; BSR set to: 61
  6535                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
  6536  001E84  0EB0               	movlw	176
  6537  001E86  6FF2               	movwf	242,b	;volatile
  6538  001E88                     
  6539                           ; BSR set to: 61
  6540                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
  6541  001E88  0E80               	movlw	128
  6542  001E8A  6FF3               	movwf	243,b	;volatile
  6543  001E8C                     
  6544                           ; BSR set to: 61
  6545                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
  6546  001E8C  0E00               	movlw	0
  6547  001E8E  6FF4               	movwf	244,b	;volatile
  6548  001E90                     
  6549                           ; BSR set to: 61
  6550                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
  6551  001E90  0E8A               	movlw	138
  6552  001E92  6FF5               	movwf	245,b	;volatile
  6553  001E94                     
  6554                           ; BSR set to: 61
  6555                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
  6556  001E94  0E00               	movlw	0
  6557  001E96  6FF6               	movwf	246,b	;volatile
  6558  001E98                     
  6559                           ; BSR set to: 61
  6560                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
  6561  001E98  0E00               	movlw	0
  6562  001E9A  6FF7               	movwf	247,b	;volatile
  6563  001E9C                     
  6564                           ; BSR set to: 61
  6565                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
  6566  001E9C  0E00               	movlw	0
  6567  001E9E  6FF8               	movwf	248,b	;volatile
  6568  001EA0                     
  6569                           ; BSR set to: 61
  6570                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
  6571  001EA0  0E00               	movlw	0
  6572  001EA2  6FF9               	movwf	249,b	;volatile
  6573  001EA4                     
  6574                           ; BSR set to: 61
  6575                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
  6576  001EA4  0E00               	movlw	0
  6577  001EA6  6FFA               	movwf	250,b	;volatile
  6578  001EA8                     
  6579                           ; BSR set to: 61
  6580                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  6581  001EA8  0E0A               	movlw	low _UART1_DefaultFramingErrorHandler
  6582  001EAA  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
  6583  001EAC  0E28               	movlw	high _UART1_DefaultFramingErrorHandler
  6584  001EAE  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6585  001EB0  ECE0  F013         	call	_UART1_SetFramingErrorHandler	;wreg free
  6586  001EB4                     
  6587                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  6588  001EB4  0E08               	movlw	low _UART1_DefaultOverrunErrorHandler
  6589  001EB6  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
  6590  001EB8  0E28               	movlw	high _UART1_DefaultOverrunErrorHandler
  6591  001EBA  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6592  001EBC  ECDB  F013         	call	_UART1_SetOverrunErrorHandler	;wreg free
  6593  001EC0                     
  6594                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  6595  001EC0  0EFC               	movlw	low _UART1_DefaultErrorHandler
  6596  001EC2  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
  6597  001EC4  0E27               	movlw	high _UART1_DefaultErrorHandler
  6598  001EC6  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
  6599  001EC8  ECE5  F013         	call	_UART1_SetErrorHandler	;wreg free
  6600                           
  6601                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
  6602  001ECC  0E00               	movlw	0
  6603  001ECE  6E40               	movwf	_uart1RxLastError^0,c	;volatile
  6604                           
  6605                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
  6606  001ED0  0E00               	movlw	0
  6607  001ED2  6E45               	movwf	_uart1TxHead^0,c	;volatile
  6608                           
  6609                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
  6610  001ED4  0E00               	movlw	0
  6611  001ED6  6E44               	movwf	_uart1TxTail^0,c	;volatile
  6612                           
  6613                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
  6614  001ED8  0E08               	movlw	8
  6615  001EDA  0100               	movlb	0	; () banked
  6616  001EDC  6FE2               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
  6617                           
  6618                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
  6619  001EDE  0E00               	movlw	0
  6620  001EE0  6E43               	movwf	_uart1RxHead^0,c	;volatile
  6621                           
  6622                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
  6623  001EE2  0E00               	movlw	0
  6624  001EE4  6E42               	movwf	_uart1RxTail^0,c	;volatile
  6625                           
  6626                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
  6627  001EE6  0E00               	movlw	0
  6628  001EE8  6E41               	movwf	_uart1RxCount^0,c	;volatile
  6629  001EEA                     
  6630                           ; BSR set to: 0
  6631                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
  6632  001EEA  0139               	movlb	57	; () banked
  6633  001EEC  8793               	bsf	147,3,b	;volatile
  6634  001EEE                     
  6635                           ; BSR set to: 57
  6636  001EEE  0012               	return		;funcret
  6637  001EF0                     __end_of_UART1_Initialize:
  6638                           	callstack 0
  6639                           
  6640 ;; *************** function _UART1_SetTxInterruptHandler *****************
  6641 ;; Defined at:
  6642 ;;		line 333 in file "mcc_generated_files/uart1.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6645 ;;		 -> UART1_Transmit_ISR(1), 
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;		None
  6648 ;; Return value:  Size  Location     Type
  6649 ;;                  1    wreg      void 
  6650 ;; Registers used:
  6651 ;;		wreg, status,2, status,0
  6652 ;; Tracked objects:
  6653 ;;		On entry : 0/0
  6654 ;;		On exit  : 0/0
  6655 ;;		Unchanged: 0/0
  6656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;Total ram usage:        2 bytes
  6662 ;; Hardware stack levels used: 1
  6663 ;; Hardware stack levels required when called: 8
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_UART1_Initialize
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text26
  6672  0027A2                     __ptext26:
  6673                           	callstack 0
  6674  0027A2                     _UART1_SetTxInterruptHandler:
  6675                           	callstack 20
  6676  0027A2                     
  6677                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
  6678  0027A2  C014  F0DE         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
  6679  0027A6  C015  F0DF         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
  6680  0027AA  0012               	return		;funcret
  6681  0027AC                     __end_of_UART1_SetTxInterruptHandler:
  6682                           	callstack 0
  6683                           
  6684 ;; *************** function _UART1_SetRxInterruptHandler *****************
  6685 ;; Defined at:
  6686 ;;		line 329 in file "mcc_generated_files/uart1.c"
  6687 ;; Parameters:    Size  Location     Type
  6688 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6689 ;;		 -> UART1_Receive_ISR(1), 
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		wreg, status,2, status,0
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6701 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;Total ram usage:        2 bytes
  6706 ;; Hardware stack levels used: 1
  6707 ;; Hardware stack levels required when called: 8
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_UART1_Initialize
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text27
  6716  0027AC                     __ptext27:
  6717                           	callstack 0
  6718  0027AC                     _UART1_SetRxInterruptHandler:
  6719                           	callstack 20
  6720  0027AC                     
  6721                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
  6722  0027AC  C014  F0E0         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
  6723  0027B0  C015  F0E1         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
  6724  0027B4  0012               	return		;funcret
  6725  0027B6                     __end_of_UART1_SetRxInterruptHandler:
  6726                           	callstack 0
  6727                           
  6728 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  6729 ;; Defined at:
  6730 ;;		line 319 in file "mcc_generated_files/uart1.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6733 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;		None
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  1    wreg      void 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;Total ram usage:        2 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; Hardware stack levels required when called: 8
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_UART1_Initialize
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text28
  6760  0027B6                     __ptext28:
  6761                           	callstack 0
  6762  0027B6                     _UART1_SetOverrunErrorHandler:
  6763                           	callstack 20
  6764  0027B6                     
  6765                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
  6766  0027B6  C014  F0DA         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  6767  0027BA  C015  F0DB         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  6768  0027BE  0012               	return		;funcret
  6769  0027C0                     __end_of_UART1_SetOverrunErrorHandler:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _UART1_SetFramingErrorHandler *****************
  6773 ;; Defined at:
  6774 ;;		line 315 in file "mcc_generated_files/uart1.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6777 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, status,2, status,0
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;Total ram usage:        2 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 8
  6796 ;; This function calls:
  6797 ;;		Nothing
  6798 ;; This function is called by:
  6799 ;;		_UART1_Initialize
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text29
  6804  0027C0                     __ptext29:
  6805                           	callstack 0
  6806  0027C0                     _UART1_SetFramingErrorHandler:
  6807                           	callstack 20
  6808  0027C0                     
  6809                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
  6810  0027C0  C014  F0DC         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  6811  0027C4  C015  F0DD         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  6812  0027C8  0012               	return		;funcret
  6813  0027CA                     __end_of_UART1_SetFramingErrorHandler:
  6814                           	callstack 0
  6815                           
  6816 ;; *************** function _UART1_SetErrorHandler *****************
  6817 ;; Defined at:
  6818 ;;		line 323 in file "mcc_generated_files/uart1.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  6821 ;;		 -> UART1_DefaultErrorHandler(1), 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;		None
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;Total ram usage:        2 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; Hardware stack levels required when called: 8
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		_UART1_Initialize
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text30
  6848  0027CA                     __ptext30:
  6849                           	callstack 0
  6850  0027CA                     _UART1_SetErrorHandler:
  6851                           	callstack 20
  6852  0027CA                     
  6853                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
  6854  0027CA  C014  F0D8         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  6855  0027CE  C015  F0D9         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  6856  0027D2  0012               	return		;funcret
  6857  0027D4                     __end_of_UART1_SetErrorHandler:
  6858                           	callstack 0
  6859                           
  6860 ;; *************** function _TMR5_Initialize *****************
  6861 ;; Defined at:
  6862 ;;		line 67 in file "mcc_generated_files/tmr5.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      void 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;Total ram usage:        2 bytes
  6881 ;; Hardware stack levels used: 1
  6882 ;; Hardware stack levels required when called: 9
  6883 ;; This function calls:
  6884 ;;		_TMR5_SetGateInterruptHandler
  6885 ;; This function is called by:
  6886 ;;		_SYSTEM_Initialize
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text31
  6891  0020CA                     __ptext31:
  6892                           	callstack 0
  6893  0020CA                     _TMR5_Initialize:
  6894                           	callstack 20
  6895  0020CA                     
  6896                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
  6897  0020CA  0EC0               	movlw	192
  6898  0020CC  6E9B               	movwf	155,c	;volatile
  6899                           
  6900                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
  6901  0020CE  0E00               	movlw	0
  6902  0020D0  6E9C               	movwf	156,c	;volatile
  6903                           
  6904                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
  6905  0020D2  0E05               	movlw	5
  6906  0020D4  6E9D               	movwf	157,c	;volatile
  6907                           
  6908                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
  6909  0020D6  0E00               	movlw	0
  6910  0020D8  6E99               	movwf	153,c	;volatile
  6911                           
  6912                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
  6913  0020DA  0E00               	movlw	0
  6914  0020DC  6E98               	movwf	152,c	;volatile
  6915  0020DE                     
  6916                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
  6917  0020DE  0139               	movlb	57	; () banked
  6918  0020E0  9DA8               	bcf	168,6,b	;volatile
  6919  0020E2                     
  6920                           ; BSR set to: 57
  6921                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
  6922  0020E2  5098               	movf	152,w,c	;volatile
  6923  0020E4  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
  6924  0020EA  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
  6925  0020EC  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
  6926  0020F0  6A16               	clrf	??_TMR5_Initialize^0,c
  6927  0020F2  1016               	iorwf	??_TMR5_Initialize^0,w,c
  6928  0020F4  0100               	movlb	0	; () banked
  6929  0020F6  6FD2               	movwf	_timer5ReloadVal& (0+255),b	;volatile
  6930  0020F8  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
  6931  0020FA  6FD3               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
  6932  0020FC                     
  6933                           ; BSR set to: 0
  6934                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
  6935  0020FC  0139               	movlb	57	; () banked
  6936  0020FE  9FA8               	bcf	168,7,b	;volatile
  6937  002100                     
  6938                           ; BSR set to: 57
  6939                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
  6940  002100  8F98               	bsf	152,7,b	;volatile
  6941  002102                     
  6942                           ; BSR set to: 57
  6943                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
  6944  002102  0EF0               	movlw	low _TMR5_DefaultGateInterruptHandler
  6945  002104  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
  6946  002106  0E26               	movlw	high _TMR5_DefaultGateInterruptHandler
  6947  002108  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
  6948  00210A  ECEA  F013         	call	_TMR5_SetGateInterruptHandler	;wreg free
  6949  00210E                     
  6950                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
  6951  00210E  0E03               	movlw	3
  6952  002110  6E9A               	movwf	154,c	;volatile
  6953  002112  0012               	return		;funcret
  6954  002114                     __end_of_TMR5_Initialize:
  6955                           	callstack 0
  6956                           
  6957 ;; *************** function _TMR5_SetGateInterruptHandler *****************
  6958 ;; Defined at:
  6959 ;;		line 186 in file "mcc_generated_files/tmr5.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  6962 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
  6963 ;; Auto vars:     Size  Location     Type
  6964 ;;		None
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  1    wreg      void 
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;Total ram usage:        2 bytes
  6979 ;; Hardware stack levels used: 1
  6980 ;; Hardware stack levels required when called: 8
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_TMR5_Initialize
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text32
  6989  0027D4                     __ptext32:
  6990                           	callstack 0
  6991  0027D4                     _TMR5_SetGateInterruptHandler:
  6992                           	callstack 20
  6993  0027D4                     
  6994                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
  6995  0027D4  C014  F0D0         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
  6996  0027D8  C015  F0D1         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
  6997  0027DC  0012               	return		;funcret
  6998  0027DE                     __end_of_TMR5_SetGateInterruptHandler:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function _TMR4_Initialize *****************
  7002 ;; Defined at:
  7003 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;		None
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  1    wreg      void 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7021 ;;Total ram usage:        0 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; Hardware stack levels required when called: 9
  7024 ;; This function calls:
  7025 ;;		_TMR4_SetInterruptHandler
  7026 ;; This function is called by:
  7027 ;;		_SYSTEM_Initialize
  7028 ;; This function uses a non-reentrant model
  7029 ;;
  7030                           
  7031                           	psect	text33
  7032  002592                     __ptext33:
  7033                           	callstack 0
  7034  002592                     _TMR4_Initialize:
  7035                           	callstack 20
  7036  002592                     
  7037                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  7038  002592  0E01               	movlw	1
  7039  002594  6EA2               	movwf	162,c	;volatile
  7040                           
  7041                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  7042  002596  0E00               	movlw	0
  7043  002598  6EA1               	movwf	161,c	;volatile
  7044                           
  7045                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  7046  00259A  0E00               	movlw	0
  7047  00259C  6EA3               	movwf	163,c	;volatile
  7048                           
  7049                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
  7050  00259E  0EF9               	movlw	249
  7051  0025A0  6E9F               	movwf	159,c	;volatile
  7052                           
  7053                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  7054  0025A2  0E00               	movlw	0
  7055  0025A4  6E9E               	movwf	158,c	;volatile
  7056  0025A6                     
  7057                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
  7058  0025A6  0139               	movlb	57	; () banked
  7059  0025A8  91A7               	bcf	167,0,b	;volatile
  7060  0025AA                     
  7061                           ; BSR set to: 57
  7062                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
  7063  0025AA  8197               	bsf	151,0,b	;volatile
  7064  0025AC                     
  7065                           ; BSR set to: 57
  7066                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  7067  0025AC  0E0C               	movlw	low _TMR4_DefaultInterruptHandler
  7068  0025AE  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  7069  0025B0  0E28               	movlw	high _TMR4_DefaultInterruptHandler
  7070  0025B2  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  7071  0025B4  ECEF  F013         	call	_TMR4_SetInterruptHandler	;wreg free
  7072  0025B8                     
  7073                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
  7074  0025B8  0EE0               	movlw	224
  7075  0025BA  6EA0               	movwf	160,c	;volatile
  7076  0025BC  0012               	return		;funcret
  7077  0025BE                     __end_of_TMR4_Initialize:
  7078                           	callstack 0
  7079                           
  7080 ;; *************** function _TMR4_SetInterruptHandler *****************
  7081 ;; Defined at:
  7082 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7085 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;Total ram usage:        2 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 8
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_TMR4_Initialize
  7108 ;;		_main
  7109 ;; This function uses a non-reentrant model
  7110 ;;
  7111                           
  7112                           	psect	text34
  7113  0027DE                     __ptext34:
  7114                           	callstack 0
  7115  0027DE                     _TMR4_SetInterruptHandler:
  7116                           	callstack 22
  7117  0027DE                     
  7118                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  7119  0027DE  C014  F0CC         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  7120  0027E2  C015  F0CD         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  7121  0027E6  0012               	return		;funcret
  7122  0027E8                     __end_of_TMR4_SetInterruptHandler:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function _TMR3_Initialize *****************
  7126 ;; Defined at:
  7127 ;;		line 63 in file "mcc_generated_files/tmr3.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;		None
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;Total ram usage:        2 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 8
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_SYSTEM_Initialize
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text35
  7156  002260                     __ptext35:
  7157                           	callstack 0
  7158  002260                     _TMR3_Initialize:
  7159                           	callstack 21
  7160  002260                     
  7161                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
  7162  002260  0E00               	movlw	0
  7163  002262  6EA7               	movwf	167,c	;volatile
  7164                           
  7165                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
  7166  002264  0E00               	movlw	0
  7167  002266  6EA8               	movwf	168,c	;volatile
  7168                           
  7169                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
  7170  002268  0E05               	movlw	5
  7171  00226A  6EA9               	movwf	169,c	;volatile
  7172                           
  7173                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
  7174  00226C  0E00               	movlw	0
  7175  00226E  6EA5               	movwf	165,c	;volatile
  7176                           
  7177                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
  7178  002270  0E00               	movlw	0
  7179  002272  6EA4               	movwf	164,c	;volatile
  7180  002274                     
  7181                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
  7182  002274  0139               	movlb	57	; () banked
  7183  002276  9DA6               	bcf	166,6,b	;volatile
  7184  002278                     
  7185                           ; BSR set to: 57
  7186                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  7187  002278  50A4               	movf	164,w,c	;volatile
  7188  00227A  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
  7189  002280  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
  7190  002282  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
  7191  002286  6A14               	clrf	??_TMR3_Initialize^0,c
  7192  002288  1014               	iorwf	??_TMR3_Initialize^0,w,c
  7193  00228A  0100               	movlb	0	; () banked
  7194  00228C  6FCE               	movwf	_timer3ReloadVal& (0+255),b	;volatile
  7195  00228E  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
  7196  002290  6FCF               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
  7197  002292                     
  7198                           ; BSR set to: 0
  7199                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
  7200  002292  0E01               	movlw	1
  7201  002294  6EA6               	movwf	166,c	;volatile
  7202  002296                     
  7203                           ; BSR set to: 0
  7204  002296  0012               	return		;funcret
  7205  002298                     __end_of_TMR3_Initialize:
  7206                           	callstack 0
  7207                           
  7208 ;; *************** function _TMR2_Initialize *****************
  7209 ;; Defined at:
  7210 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7211 ;; Parameters:    Size  Location     Type
  7212 ;;		None
  7213 ;; Auto vars:     Size  Location     Type
  7214 ;;		None
  7215 ;; Return value:  Size  Location     Type
  7216 ;;                  1    wreg      void 
  7217 ;; Registers used:
  7218 ;;		wreg, status,2
  7219 ;; Tracked objects:
  7220 ;;		On entry : 0/0
  7221 ;;		On exit  : 0/0
  7222 ;;		Unchanged: 0/0
  7223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7228 ;;Total ram usage:        0 bytes
  7229 ;; Hardware stack levels used: 1
  7230 ;; Hardware stack levels required when called: 8
  7231 ;; This function calls:
  7232 ;;		Nothing
  7233 ;; This function is called by:
  7234 ;;		_SYSTEM_Initialize
  7235 ;; This function uses a non-reentrant model
  7236 ;;
  7237                           
  7238                           	psect	text36
  7239  0026D4                     __ptext36:
  7240                           	callstack 0
  7241  0026D4                     _TMR2_Initialize:
  7242                           	callstack 21
  7243  0026D4                     
  7244                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
  7245  0026D4  0E05               	movlw	5
  7246  0026D6  6EAE               	movwf	174,c	;volatile
  7247                           
  7248                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  7249  0026D8  0E00               	movlw	0
  7250  0026DA  6EAD               	movwf	173,c	;volatile
  7251                           
  7252                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7253  0026DC  0E00               	movlw	0
  7254  0026DE  6EAF               	movwf	175,c	;volatile
  7255  0026E0                     
  7256                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  7257  0026E0  68AB               	setf	171,c	;volatile
  7258                           
  7259                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7260  0026E2  0E00               	movlw	0
  7261  0026E4  6EAA               	movwf	170,c	;volatile
  7262  0026E6                     
  7263                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7264  0026E6  0139               	movlb	57	; () banked
  7265  0026E8  95A4               	bcf	164,2,b	;volatile
  7266                           
  7267                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
  7268  0026EA  0EB0               	movlw	176
  7269  0026EC  6EAC               	movwf	172,c	;volatile
  7270  0026EE                     
  7271                           ; BSR set to: 57
  7272  0026EE  0012               	return		;funcret
  7273  0026F0                     __end_of_TMR2_Initialize:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _SMT1_Initialize *****************
  7277 ;; Defined at:
  7278 ;;		line 60 in file "mcc_generated_files/smt1.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg, status,2
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;Total ram usage:        0 bytes
  7297 ;; Hardware stack levels used: 1
  7298 ;; Hardware stack levels required when called: 8
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_SYSTEM_Initialize
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text37
  7307  002476                     __ptext37:
  7308                           	callstack 0
  7309  002476                     _SMT1_Initialize:
  7310                           	callstack 21
  7311  002476                     
  7312                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
  7313  002476  0E80               	movlw	128
  7314  002478  013F               	movlb	63	; () banked
  7315  00247A  6F1E               	movwf	30,b	;volatile
  7316                           
  7317                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
  7318  00247C  0E42               	movlw	66
  7319  00247E  6F1F               	movwf	31,b	;volatile
  7320                           
  7321                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
  7322  002480  0E00               	movlw	0
  7323  002482  6F20               	movwf	32,b	;volatile
  7324                           
  7325                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
  7326  002484  0E04               	movlw	4
  7327  002486  6F21               	movwf	33,b	;volatile
  7328                           
  7329                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
  7330  002488  0E00               	movlw	0
  7331  00248A  6F23               	movwf	35,b	;volatile
  7332                           
  7333                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
  7334  00248C  0E00               	movlw	0
  7335  00248E  6F22               	movwf	34,b	;volatile
  7336                           
  7337                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
  7338  002490  0E01               	movlw	1
  7339  002492  6F1D               	movwf	29,b	;volatile
  7340  002494                     
  7341                           ; BSR set to: 63
  7342                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
  7343  002494  691C               	setf	28,b	;volatile
  7344  002496                     
  7345                           ; BSR set to: 63
  7346                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
  7347  002496  691B               	setf	27,b	;volatile
  7348  002498                     
  7349                           ; BSR set to: 63
  7350                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
  7351  002498  0139               	movlb	57	; () banked
  7352  00249A  8B91               	bsf	145,5,b	;volatile
  7353  00249C                     
  7354                           ; BSR set to: 57
  7355                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
  7356  00249C  8F91               	bsf	145,7,b	;volatile
  7357  00249E                     
  7358                           ; BSR set to: 57
  7359                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
  7360  00249E  8D91               	bsf	145,6,b	;volatile
  7361  0024A0                     
  7362                           ; BSR set to: 57
  7363                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
  7364  0024A0  013F               	movlb	63	; () banked
  7365  0024A2  8F1F               	bsf	31,7,b	;volatile
  7366  0024A4                     
  7367                           ; BSR set to: 63
  7368  0024A4  0012               	return		;funcret
  7369  0024A6                     __end_of_SMT1_Initialize:
  7370                           	callstack 0
  7371                           
  7372 ;; *************** function _PWM8_Initialize *****************
  7373 ;; Defined at:
  7374 ;;		line 58 in file "mcc_generated_files/pwm8.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;Total ram usage:        0 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 8
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_SYSTEM_Initialize
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text38
  7403  00270C                     __ptext38:
  7404                           	callstack 0
  7405  00270C                     _PWM8_Initialize:
  7406                           	callstack 21
  7407  00270C                     
  7408                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
  7409  00270C  0E80               	movlw	128
  7410  00270E  6E62               	movwf	98,c	;volatile
  7411                           
  7412                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
  7413  002710  0E00               	movlw	0
  7414  002712  6E61               	movwf	97,c	;volatile
  7415                           
  7416                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
  7417  002714  0E00               	movlw	0
  7418  002716  6E60               	movwf	96,c	;volatile
  7419                           
  7420                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
  7421  002718  013F               	movlb	63	; () banked
  7422  00271A  515F               	movf	95,w,b	;volatile
  7423  00271C  0B3F               	andlw	-193
  7424  00271E  0980               	iorlw	128
  7425  002720  6F5F               	movwf	95,b	;volatile
  7426  002722                     
  7427                           ; BSR set to: 63
  7428  002722  0012               	return		;funcret
  7429  002724                     __end_of_PWM8_Initialize:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _PWM7_Initialize *****************
  7433 ;; Defined at:
  7434 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 8
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_SYSTEM_Initialize
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text39
  7463  002724                     __ptext39:
  7464                           	callstack 0
  7465  002724                     _PWM7_Initialize:
  7466                           	callstack 21
  7467  002724                     
  7468                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  7469  002724  0E80               	movlw	128
  7470  002726  6E66               	movwf	102,c	;volatile
  7471                           
  7472                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
  7473  002728  0E00               	movlw	0
  7474  00272A  6E65               	movwf	101,c	;volatile
  7475                           
  7476                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
  7477  00272C  0E00               	movlw	0
  7478  00272E  6E64               	movwf	100,c	;volatile
  7479                           
  7480                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
  7481  002730  013F               	movlb	63	; () banked
  7482  002732  515F               	movf	95,w,b	;volatile
  7483  002734  0BCF               	andlw	-49
  7484  002736  0920               	iorlw	32
  7485  002738  6F5F               	movwf	95,b	;volatile
  7486  00273A                     
  7487                           ; BSR set to: 63
  7488  00273A  0012               	return		;funcret
  7489  00273C                     __end_of_PWM7_Initialize:
  7490                           	callstack 0
  7491                           
  7492 ;; *************** function _PWM6_Initialize *****************
  7493 ;; Defined at:
  7494 ;;		line 58 in file "mcc_generated_files/pwm6.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; Hardware stack levels required when called: 8
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_SYSTEM_Initialize
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text40
  7523  00273C                     __ptext40:
  7524                           	callstack 0
  7525  00273C                     _PWM6_Initialize:
  7526                           	callstack 21
  7527  00273C                     
  7528                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
  7529  00273C  0E80               	movlw	128
  7530  00273E  6E6A               	movwf	106,c	;volatile
  7531                           
  7532                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
  7533  002740  0E59               	movlw	89
  7534  002742  6E69               	movwf	105,c	;volatile
  7535                           
  7536                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
  7537  002744  0E40               	movlw	64
  7538  002746  6E68               	movwf	104,c	;volatile
  7539                           
  7540                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
  7541  002748  013F               	movlb	63	; () banked
  7542  00274A  515F               	movf	95,w,b	;volatile
  7543  00274C  0BF3               	andlw	-13
  7544  00274E  0904               	iorlw	4
  7545  002750  6F5F               	movwf	95,b	;volatile
  7546  002752                     
  7547                           ; BSR set to: 63
  7548  002752  0012               	return		;funcret
  7549  002754                     __end_of_PWM6_Initialize:
  7550                           	callstack 0
  7551                           
  7552 ;; *************** function _PWM5_Initialize *****************
  7553 ;; Defined at:
  7554 ;;		line 58 in file "mcc_generated_files/pwm5.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;		None
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;		None
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  1    wreg      void 
  7561 ;; Registers used:
  7562 ;;		wreg, status,2
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;Total ram usage:        0 bytes
  7573 ;; Hardware stack levels used: 1
  7574 ;; Hardware stack levels required when called: 8
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_SYSTEM_Initialize
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text41
  7583  002754                     __ptext41:
  7584                           	callstack 0
  7585  002754                     _PWM5_Initialize:
  7586                           	callstack 21
  7587  002754                     
  7588                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
  7589  002754  0E80               	movlw	128
  7590  002756  6E6E               	movwf	110,c	;volatile
  7591                           
  7592                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
  7593  002758  0E59               	movlw	89
  7594  00275A  6E6D               	movwf	109,c	;volatile
  7595                           
  7596                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
  7597  00275C  0E40               	movlw	64
  7598  00275E  6E6C               	movwf	108,c	;volatile
  7599                           
  7600                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
  7601  002760  013F               	movlb	63	; () banked
  7602  002762  515F               	movf	95,w,b	;volatile
  7603  002764  0BFC               	andlw	-4
  7604  002766  0901               	iorlw	1
  7605  002768  6F5F               	movwf	95,b	;volatile
  7606  00276A                     
  7607                           ; BSR set to: 63
  7608  00276A  0012               	return		;funcret
  7609  00276C                     __end_of_PWM5_Initialize:
  7610                           	callstack 0
  7611                           
  7612 ;; *************** function _PMD_Initialize *****************
  7613 ;; Defined at:
  7614 ;;		line 86 in file "mcc_generated_files/mcc.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; Hardware stack levels required when called: 8
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_SYSTEM_Initialize
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642                           	psect	text42
  7643  00266C                     __ptext42:
  7644                           	callstack 0
  7645  00266C                     _PMD_Initialize:
  7646                           	callstack 21
  7647  00266C                     
  7648                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
  7649  00266C  0E00               	movlw	0
  7650  00266E  0139               	movlb	57	; () banked
  7651  002670  6FC0               	movwf	192,b	;volatile
  7652                           
  7653                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
  7654  002672  0E00               	movlw	0
  7655  002674  6FC1               	movwf	193,b	;volatile
  7656                           
  7657                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
  7658  002676  0E00               	movlw	0
  7659  002678  6FC2               	movwf	194,b	;volatile
  7660                           
  7661                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
  7662  00267A  0E00               	movlw	0
  7663  00267C  6FC3               	movwf	195,b	;volatile
  7664                           
  7665                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
  7666  00267E  0E00               	movlw	0
  7667  002680  6FC4               	movwf	196,b	;volatile
  7668                           
  7669                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
  7670  002682  0E00               	movlw	0
  7671  002684  6FC5               	movwf	197,b	;volatile
  7672                           
  7673                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
  7674  002686  0E00               	movlw	0
  7675  002688  6FC6               	movwf	198,b	;volatile
  7676                           
  7677                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
  7678  00268A  0E00               	movlw	0
  7679  00268C  6FC7               	movwf	199,b	;volatile
  7680  00268E                     
  7681                           ; BSR set to: 57
  7682  00268E  0012               	return		;funcret
  7683  002690                     __end_of_PMD_Initialize:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _PIN_MANAGER_Initialize *****************
  7687 ;; Defined at:
  7688 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;		None
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  1    wreg      void 
  7695 ;; Registers used:
  7696 ;;		wreg, status,2
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7706 ;;Total ram usage:        0 bytes
  7707 ;; Hardware stack levels used: 1
  7708 ;; Hardware stack levels required when called: 8
  7709 ;; This function calls:
  7710 ;;		Nothing
  7711 ;; This function is called by:
  7712 ;;		_SYSTEM_Initialize
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text43
  7717  001BF6                     __ptext43:
  7718                           	callstack 0
  7719  001BF6                     _PIN_MANAGER_Initialize:
  7720                           	callstack 21
  7721  001BF6                     
  7722                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  7723  001BF6  0E00               	movlw	0
  7724  001BF8  6EBE               	movwf	190,c	;volatile
  7725                           
  7726                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  7727  001BFA  0E00               	movlw	0
  7728  001BFC  6EBD               	movwf	189,c	;volatile
  7729                           
  7730                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
  7731  001BFE  0E24               	movlw	36
  7732  001C00  6EBA               	movwf	186,c	;volatile
  7733                           
  7734                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7735  001C02  0E00               	movlw	0
  7736  001C04  6EBB               	movwf	187,c	;volatile
  7737                           
  7738                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7739  001C06  0E00               	movlw	0
  7740  001C08  6EBC               	movwf	188,c	;volatile
  7741                           
  7742                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  7743  001C0A  0E07               	movlw	7
  7744  001C0C  6EC6               	movwf	198,c	;volatile
  7745                           
  7746                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
  7747  001C0E  0EC0               	movlw	192
  7748  001C10  6EC2               	movwf	194,c	;volatile
  7749                           
  7750                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
  7751  001C12  0EF7               	movlw	247
  7752  001C14  6EC3               	movwf	195,c	;volatile
  7753  001C16                     
  7754                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  7755  001C16  68C4               	setf	196,c	;volatile
  7756  001C18                     
  7757                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  7758  001C18  68C5               	setf	197,c	;volatile
  7759                           
  7760                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
  7761  001C1A  0E1F               	movlw	31
  7762  001C1C  013A               	movlb	58	; () banked
  7763  001C1E  6F70               	movwf	112,b	;volatile
  7764  001C20                     
  7765                           ; BSR set to: 58
  7766                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
  7767  001C20  6960               	setf	96,b	;volatile
  7768                           
  7769                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
  7770  001C22  0EC0               	movlw	192
  7771  001C24  6F50               	movwf	80,b	;volatile
  7772                           
  7773                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
  7774  001C26  0E07               	movlw	7
  7775  001C28  6F80               	movwf	128,b	;volatile
  7776                           
  7777                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
  7778  001C2A  0E7F               	movlw	127
  7779  001C2C  6F40               	movwf	64,b	;volatile
  7780                           
  7781                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  7782  001C2E  0E00               	movlw	0
  7783  001C30  6F71               	movwf	113,b	;volatile
  7784                           
  7785                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  7786  001C32  0E00               	movlw	0
  7787  001C34  6F81               	movwf	129,b	;volatile
  7788                           
  7789                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  7790  001C36  0E00               	movlw	0
  7791  001C38  6F51               	movwf	81,b	;volatile
  7792                           
  7793                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  7794  001C3A  0E00               	movlw	0
  7795  001C3C  6F41               	movwf	65,b	;volatile
  7796                           
  7797                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  7798  001C3E  0E00               	movlw	0
  7799  001C40  6F61               	movwf	97,b	;volatile
  7800                           
  7801                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
  7802  001C42  0E00               	movlw	0
  7803  001C44  6F5A               	movwf	90,b	;volatile
  7804                           
  7805                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
  7806  001C46  0E00               	movlw	0
  7807  001C48  6F5B               	movwf	91,b	;volatile
  7808                           
  7809                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
  7810  001C4A  0E00               	movlw	0
  7811  001C4C  6F6A               	movwf	106,b	;volatile
  7812                           
  7813                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
  7814  001C4E  0E00               	movlw	0
  7815  001C50  6F6B               	movwf	107,b	;volatile
  7816                           
  7817                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
  7818  001C52  0E00               	movlw	0
  7819  001C54  6F7A               	movwf	122,b	;volatile
  7820                           
  7821                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
  7822  001C56  0E00               	movlw	0
  7823  001C58  6F7B               	movwf	123,b	;volatile
  7824                           
  7825                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
  7826  001C5A  0E00               	movlw	0
  7827  001C5C  6F82               	movwf	130,b	;volatile
  7828                           
  7829                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
  7830  001C5E  0E00               	movlw	0
  7831  001C60  6F42               	movwf	66,b	;volatile
  7832                           
  7833                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
  7834  001C62  0E00               	movlw	0
  7835  001C64  6F52               	movwf	82,b	;volatile
  7836                           
  7837                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
  7838  001C66  0E00               	movlw	0
  7839  001C68  6F62               	movwf	98,b	;volatile
  7840                           
  7841                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
  7842  001C6A  0E00               	movlw	0
  7843  001C6C  6F72               	movwf	114,b	;volatile
  7844  001C6E                     
  7845                           ; BSR set to: 58
  7846                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
  7847  001C6E  6943               	setf	67,b	;volatile
  7848  001C70                     
  7849                           ; BSR set to: 58
  7850                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
  7851  001C70  6953               	setf	83,b	;volatile
  7852  001C72                     
  7853                           ; BSR set to: 58
  7854                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
  7855  001C72  6963               	setf	99,b	;volatile
  7856  001C74                     
  7857                           ; BSR set to: 58
  7858                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
  7859  001C74  6973               	setf	115,b	;volatile
  7860                           
  7861                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
  7862  001C76  0E07               	movlw	7
  7863  001C78  6F83               	movwf	131,b	;volatile
  7864  001C7A                     
  7865                           ; BSR set to: 58
  7866                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
  7867  001C7A  6944               	setf	68,b	;volatile
  7868  001C7C                     
  7869                           ; BSR set to: 58
  7870                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
  7871  001C7C  6954               	setf	84,b	;volatile
  7872  001C7E                     
  7873                           ; BSR set to: 58
  7874                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
  7875  001C7E  6964               	setf	100,b	;volatile
  7876  001C80                     
  7877                           ; BSR set to: 58
  7878                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
  7879  001C80  6974               	setf	116,b	;volatile
  7880                           
  7881                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
  7882  001C82  0E0F               	movlw	15
  7883  001C84  6F84               	movwf	132,b	;volatile
  7884                           
  7885                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
  7886  001C86  0E1F               	movlw	31
  7887  001C88  6FCF               	movwf	207,b	;volatile
  7888                           
  7889                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
  7890  001C8A  0E09               	movlw	9
  7891  001C8C  6FDC               	movwf	220,b	;volatile
  7892                           
  7893                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
  7894  001C8E  0E0E               	movlw	14
  7895  001C90  6F01               	movwf	1,b	;volatile
  7896                           
  7897                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
  7898  001C92  0E0A               	movlw	10
  7899  001C94  6FE5               	movwf	229,b	;volatile
  7900                           
  7901                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
  7902  001C96  0E0D               	movlw	13
  7903  001C98  6F00               	movwf	0,b	;volatile
  7904                           
  7905                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
  7906  001C9A  0E1D               	movlw	29
  7907  001C9C  6FC9               	movwf	201,b	;volatile
  7908                           
  7909                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
  7910  001C9E  0E10               	movlw	16
  7911  001CA0  6F04               	movwf	4,b	;volatile
  7912                           
  7913                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
  7914  001CA2  0E07               	movlw	7
  7915  001CA4  6FD9               	movwf	217,b	;volatile
  7916                           
  7917                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
  7918  001CA6  0E09               	movlw	9
  7919  001CA8  6FD1               	movwf	209,b	;volatile
  7920                           
  7921                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
  7922  001CAA  0E0F               	movlw	15
  7923  001CAC  6F03               	movwf	3,b	;volatile
  7924                           
  7925                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
  7926  001CAE  0E13               	movlw	19
  7927  001CB0  6F0B               	movwf	11,b	;volatile
  7928                           
  7929                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
  7930  001CB2  0E08               	movlw	8
  7931  001CB4  6FDB               	movwf	219,b	;volatile
  7932                           
  7933                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
  7934  001CB6  0E08               	movlw	8
  7935  001CB8  6FD2               	movwf	210,b	;volatile
  7936                           
  7937                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
  7938  001CBA  0E1E               	movlw	30
  7939  001CBC  6FD0               	movwf	208,b	;volatile
  7940  001CBE                     
  7941                           ; BSR set to: 58
  7942  001CBE  0012               	return		;funcret
  7943  001CC0                     __end_of_PIN_MANAGER_Initialize:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _OSCILLATOR_Initialize *****************
  7947 ;; Defined at:
  7948 ;;		line 72 in file "mcc_generated_files/mcc.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;		None
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;		None
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;Total ram usage:        0 bytes
  7967 ;; Hardware stack levels used: 1
  7968 ;; Hardware stack levels required when called: 8
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_SYSTEM_Initialize
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text44
  7977  00276C                     __ptext44:
  7978                           	callstack 0
  7979  00276C                     _OSCILLATOR_Initialize:
  7980                           	callstack 21
  7981  00276C                     
  7982                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
  7983  00276C  0E60               	movlw	96
  7984  00276E  0139               	movlb	57	; () banked
  7985  002770  6FD9               	movwf	217,b	;volatile
  7986                           
  7987                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
  7988  002772  0E00               	movlw	0
  7989  002774  6FDB               	movwf	219,b	;volatile
  7990                           
  7991                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
  7992  002776  0E00               	movlw	0
  7993  002778  6FDD               	movwf	221,b	;volatile
  7994                           
  7995                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
  7996  00277A  0E08               	movlw	8
  7997  00277C  6FDF               	movwf	223,b	;volatile
  7998                           
  7999                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
  8000  00277E  0E00               	movlw	0
  8001  002780  6FDE               	movwf	222,b	;volatile
  8002  002782                     
  8003                           ; BSR set to: 57
  8004  002782  0012               	return		;funcret
  8005  002784                     __end_of_OSCILLATOR_Initialize:
  8006                           	callstack 0
  8007                           
  8008 ;; *************** function _INTERRUPT_Initialize *****************
  8009 ;; Defined at:
  8010 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;		None
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  state           1   19[COMRAM] _Bool 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;Total ram usage:        1 bytes
  8029 ;; Hardware stack levels used: 1
  8030 ;; Hardware stack levels required when called: 8
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_SYSTEM_Initialize
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text45
  8039  002034                     __ptext45:
  8040                           	callstack 0
  8041  002034                     _INTERRUPT_Initialize:
  8042                           	callstack 21
  8043  002034                     
  8044                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
  8045  002034  8AD2               	bsf	210,5,c	;volatile
  8046  002036                     
  8047                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
  8048  002036  0E00               	movlw	0
  8049  002038  BED2               	btfsc	16338,7,c	;volatile
  8050  00203A  0E01               	movlw	1
  8051  00203C  6E14               	movwf	INTERRUPT_Initialize@state^0,c
  8052  00203E                     
  8053                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
  8054  00203E  9ED2               	bcf	16338,7,c	;volatile
  8055                           
  8056                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
  8057  002040  0E55               	movlw	85
  8058  002042  6ED4               	movwf	212,c	;volatile
  8059                           
  8060                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
  8061  002044  0EAA               	movlw	170
  8062  002046  6ED4               	movwf	212,c	;volatile
  8063  002048                     
  8064                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
  8065  002048  90D4               	bcf	212,0,c	;volatile
  8066                           
  8067                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
  8068  00204A  0E00               	movlw	0
  8069  00204C  6ED7               	movwf	215,c	;volatile
  8070                           
  8071                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
  8072  00204E  0E00               	movlw	0
  8073  002050  6ED6               	movwf	214,c	;volatile
  8074                           
  8075                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
  8076  002052  0E08               	movlw	8
  8077  002054  6ED5               	movwf	213,c	;volatile
  8078                           
  8079                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
  8080  002056  0E55               	movlw	85
  8081  002058  6ED4               	movwf	212,c	;volatile
  8082                           
  8083                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
  8084  00205A  0EAA               	movlw	170
  8085  00205C  6ED4               	movwf	212,c	;volatile
  8086  00205E                     
  8087                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
  8088  00205E  80D4               	bsf	212,0,c	;volatile
  8089  002060                     
  8090                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
  8091  002060  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
  8092  002062  D002               	bra	u1145
  8093  002064  9ED2               	bcf	16338,7,c	;volatile
  8094  002066  D001               	bra	u1146
  8095  002068                     u1145:
  8096  002068  8ED2               	bsf	16338,7,c	;volatile
  8097  00206A                     u1146:
  8098  00206A                     
  8099                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
  8100  00206A  0139               	movlb	57	; () banked
  8101  00206C  9983               	bcf	131,4,b	;volatile
  8102  00206E                     
  8103                           ; BSR set to: 57
  8104                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
  8105  00206E  9783               	bcf	131,3,b	;volatile
  8106  002070                     
  8107                           ; BSR set to: 57
  8108                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
  8109  002070  8F81               	bsf	129,7,b	;volatile
  8110  002072                     
  8111                           ; BSR set to: 57
  8112                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
  8113  002072  8B81               	bsf	129,5,b	;volatile
  8114  002074                     
  8115                           ; BSR set to: 57
  8116                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
  8117  002074  8D81               	bsf	129,6,b	;volatile
  8118  002076                     
  8119                           ; BSR set to: 57
  8120                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
  8121  002076  818A               	bsf	138,0,b	;volatile
  8122  002078                     
  8123                           ; BSR set to: 57
  8124                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
  8125  002078  8F88               	bsf	136,7,b	;volatile
  8126  00207A                     
  8127                           ; BSR set to: 57
  8128                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
  8129  00207A  9187               	bcf	135,0,b	;volatile
  8130  00207C                     
  8131                           ; BSR set to: 57
  8132                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
  8133  00207C  8389               	bsf	137,1,b	;volatile
  8134  00207E                     
  8135                           ; BSR set to: 57
  8136  00207E  0012               	return		;funcret
  8137  002080                     __end_of_INTERRUPT_Initialize:
  8138                           	callstack 0
  8139                           
  8140 ;; *************** function _CLC3_Initialize *****************
  8141 ;; Defined at:
  8142 ;;		line 58 in file "mcc_generated_files/clc3.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;		None
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, status,2
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;Total ram usage:        0 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; Hardware stack levels required when called: 8
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		_SYSTEM_Initialize
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text46
  8171  0025BE                     __ptext46:
  8172                           	callstack 0
  8173  0025BE                     _CLC3_Initialize:
  8174                           	callstack 21
  8175  0025BE                     
  8176                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
  8177  0025BE  0E00               	movlw	0
  8178  0025C0  013C               	movlb	60	; () banked
  8179  0025C2  6F61               	movwf	97,b	;volatile
  8180                           
  8181                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
  8182  0025C4  0E03               	movlw	3
  8183  0025C6  6F62               	movwf	98,b	;volatile
  8184                           
  8185                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
  8186  0025C8  0E02               	movlw	2
  8187  0025CA  6F63               	movwf	99,b	;volatile
  8188                           
  8189                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
  8190  0025CC  0E00               	movlw	0
  8191  0025CE  6F64               	movwf	100,b	;volatile
  8192                           
  8193                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
  8194  0025D0  0E00               	movlw	0
  8195  0025D2  6F65               	movwf	101,b	;volatile
  8196                           
  8197                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
  8198  0025D4  0E02               	movlw	2
  8199  0025D6  6F66               	movwf	102,b	;volatile
  8200                           
  8201                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
  8202  0025D8  0E08               	movlw	8
  8203  0025DA  6F67               	movwf	103,b	;volatile
  8204                           
  8205                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
  8206  0025DC  0E00               	movlw	0
  8207  0025DE  6F68               	movwf	104,b	;volatile
  8208                           
  8209                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
  8210  0025E0  0E00               	movlw	0
  8211  0025E2  6F69               	movwf	105,b	;volatile
  8212                           
  8213                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
  8214  0025E4  0E85               	movlw	133
  8215  0025E6  6F60               	movwf	96,b	;volatile
  8216  0025E8                     
  8217                           ; BSR set to: 60
  8218  0025E8  0012               	return		;funcret
  8219  0025EA                     __end_of_CLC3_Initialize:
  8220                           	callstack 0
  8221                           
  8222 ;; *************** function _CCP4_Initialize *****************
  8223 ;; Defined at:
  8224 ;;		line 78 in file "mcc_generated_files/ccp4.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, status,2, status,0, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;Total ram usage:        0 bytes
  8243 ;; Hardware stack levels used: 1
  8244 ;; Hardware stack levels required when called: 9
  8245 ;; This function calls:
  8246 ;;		_CCP4_SetCallBack
  8247 ;; This function is called by:
  8248 ;;		_SYSTEM_Initialize
  8249 ;; This function uses a non-reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text47
  8253  002536                     __ptext47:
  8254                           	callstack 0
  8255  002536                     _CCP4_Initialize:
  8256                           	callstack 20
  8257  002536                     
  8258                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
  8259  002536  0E83               	movlw	131
  8260  002538  6E72               	movwf	114,c	;volatile
  8261                           
  8262                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
  8263  00253A  0E00               	movlw	0
  8264  00253C  6E73               	movwf	115,c	;volatile
  8265                           
  8266                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
  8267  00253E  0E00               	movlw	0
  8268  002540  6E71               	movwf	113,c	;volatile
  8269                           
  8270                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
  8271  002542  0E00               	movlw	0
  8272  002544  6E70               	movwf	112,c	;volatile
  8273  002546                     
  8274                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  8275  002546  0E06               	movlw	low _CCP4_DefaultCallBack
  8276  002548  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
  8277  00254A  0E25               	movlw	high _CCP4_DefaultCallBack
  8278  00254C  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  8279  00254E  ECF4  F013         	call	_CCP4_SetCallBack	;wreg free
  8280  002552                     
  8281                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
  8282  002552  013F               	movlb	63	; () banked
  8283  002554  515E               	movf	94,w,b	;volatile
  8284  002556  0B3F               	andlw	-193
  8285  002558  0980               	iorlw	128
  8286  00255A  6F5E               	movwf	94,b	;volatile
  8287  00255C                     
  8288                           ; BSR set to: 63
  8289                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
  8290  00255C  0139               	movlb	57	; () banked
  8291  00255E  91AA               	bcf	170,0,b	;volatile
  8292  002560                     
  8293                           ; BSR set to: 57
  8294                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
  8295  002560  819A               	bsf	154,0,b	;volatile
  8296  002562                     
  8297                           ; BSR set to: 57
  8298  002562  0012               	return		;funcret
  8299  002564                     __end_of_CCP4_Initialize:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function _CCP4_SetCallBack *****************
  8303 ;; Defined at:
  8304 ;;		line 75 in file "mcc_generated_files/ccp4.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8307 ;;		 -> CCP4_DefaultCallBack(1), 
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;Total ram usage:        2 bytes
  8324 ;; Hardware stack levels used: 1
  8325 ;; Hardware stack levels required when called: 8
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_CCP4_Initialize
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text48
  8334  0027E8                     __ptext48:
  8335                           	callstack 0
  8336  0027E8                     _CCP4_SetCallBack:
  8337                           	callstack 20
  8338  0027E8                     
  8339                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
  8340  0027E8  C014  F0D4         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  8341  0027EC  C015  F0D5         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  8342  0027F0  0012               	return		;funcret
  8343  0027F2                     __end_of_CCP4_SetCallBack:
  8344                           	callstack 0
  8345                           
  8346 ;; *************** function _CCP3_Initialize *****************
  8347 ;; Defined at:
  8348 ;;		line 75 in file "mcc_generated_files/ccp3.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      void 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8366 ;;Total ram usage:        0 bytes
  8367 ;; Hardware stack levels used: 1
  8368 ;; Hardware stack levels required when called: 9
  8369 ;; This function calls:
  8370 ;;		_CCP3_SetCallBack
  8371 ;; This function is called by:
  8372 ;;		_SYSTEM_Initialize
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text49
  8377  002564                     __ptext49:
  8378                           	callstack 0
  8379  002564                     _CCP3_Initialize:
  8380                           	callstack 20
  8381  002564                     
  8382                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
  8383  002564  0E83               	movlw	131
  8384  002566  6E76               	movwf	118,c	;volatile
  8385                           
  8386                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
  8387  002568  0E00               	movlw	0
  8388  00256A  6E77               	movwf	119,c	;volatile
  8389                           
  8390                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
  8391  00256C  0E00               	movlw	0
  8392  00256E  6E75               	movwf	117,c	;volatile
  8393                           
  8394                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
  8395  002570  0E00               	movlw	0
  8396  002572  6E74               	movwf	116,c	;volatile
  8397  002574                     
  8398                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
  8399  002574  0ED6               	movlw	low _CCP3_DefaultCallBack
  8400  002576  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
  8401  002578  0E24               	movlw	high _CCP3_DefaultCallBack
  8402  00257A  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
  8403  00257C  ECF9  F013         	call	_CCP3_SetCallBack	;wreg free
  8404  002580                     
  8405                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
  8406  002580  013F               	movlb	63	; () banked
  8407  002582  515E               	movf	94,w,b	;volatile
  8408  002584  0BCF               	andlw	-49
  8409  002586  0920               	iorlw	32
  8410  002588  6F5E               	movwf	94,b	;volatile
  8411  00258A                     
  8412                           ; BSR set to: 63
  8413                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
  8414  00258A  0139               	movlb	57	; () banked
  8415  00258C  93A9               	bcf	169,1,b	;volatile
  8416  00258E                     
  8417                           ; BSR set to: 57
  8418                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
  8419  00258E  8399               	bsf	153,1,b	;volatile
  8420  002590                     
  8421                           ; BSR set to: 57
  8422  002590  0012               	return		;funcret
  8423  002592                     __end_of_CCP3_Initialize:
  8424                           	callstack 0
  8425                           
  8426 ;; *************** function _CCP3_SetCallBack *****************
  8427 ;; Defined at:
  8428 ;;		line 119 in file "mcc_generated_files/ccp3.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
  8431 ;;		 -> CCP3_DefaultCallBack(1), 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  1    wreg      void 
  8436 ;; Registers used:
  8437 ;;		wreg, status,2, status,0
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;Total ram usage:        2 bytes
  8448 ;; Hardware stack levels used: 1
  8449 ;; Hardware stack levels required when called: 8
  8450 ;; This function calls:
  8451 ;;		Nothing
  8452 ;; This function is called by:
  8453 ;;		_CCP3_Initialize
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text50
  8458  0027F2                     __ptext50:
  8459                           	callstack 0
  8460  0027F2                     _CCP3_SetCallBack:
  8461                           	callstack 20
  8462  0027F2                     
  8463                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
  8464  0027F2  C014  F0D6         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
  8465  0027F6  C015  F0D7         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
  8466  0027FA  0012               	return		;funcret
  8467  0027FC                     __end_of_CCP3_SetCallBack:
  8468                           	callstack 0
  8469                           
  8470 ;; *************** function _ADCC_Initialize *****************
  8471 ;; Defined at:
  8472 ;;		line 62 in file "mcc_generated_files/adcc.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used: 1
  8492 ;; Hardware stack levels required when called: 8
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_SYSTEM_Initialize
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text51
  8501  001F84                     __ptext51:
  8502                           	callstack 0
  8503  001F84                     _ADCC_Initialize:
  8504                           	callstack 21
  8505  001F84                     
  8506                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  8507  001F84  0E00               	movlw	0
  8508  001F86  013E               	movlb	62	; () banked
  8509  001F88  6FDE               	movwf	222,b	;volatile
  8510                           
  8511                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  8512  001F8A  0E00               	movlw	0
  8513  001F8C  6FDF               	movwf	223,b	;volatile
  8514                           
  8515                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  8516  001F8E  0E00               	movlw	0
  8517  001F90  6FE0               	movwf	224,b	;volatile
  8518                           
  8519                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  8520  001F92  0E00               	movlw	0
  8521  001F94  6FE1               	movwf	225,b	;volatile
  8522                           
  8523                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  8524  001F96  0E00               	movlw	0
  8525  001F98  6FE4               	movwf	228,b	;volatile
  8526                           
  8527                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  8528  001F9A  0E00               	movlw	0
  8529  001F9C  6FE5               	movwf	229,b	;volatile
  8530                           
  8531                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  8532  001F9E  0E00               	movlw	0
  8533  001FA0  6FEA               	movwf	234,b	;volatile
  8534                           
  8535                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  8536  001FA2  0E00               	movlw	0
  8537  001FA4  6FEC               	movwf	236,b	;volatile
  8538                           
  8539                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  8540  001FA6  0E00               	movlw	0
  8541  001FA8  6FF1               	movwf	241,b	;volatile
  8542                           
  8543                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
  8544  001FAA  0E58               	movlw	88
  8545  001FAC  6FF3               	movwf	243,b	;volatile
  8546                           
  8547                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
  8548  001FAE  0E02               	movlw	2
  8549  001FB0  6FF4               	movwf	244,b	;volatile
  8550                           
  8551                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  8552  001FB2  0E00               	movlw	0
  8553  001FB4  6FF5               	movwf	245,b	;volatile
  8554                           
  8555                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  8556  001FB6  0E00               	movlw	0
  8557  001FB8  6FF6               	movwf	246,b	;volatile
  8558                           
  8559                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  8560  001FBA  0E00               	movlw	0
  8561  001FBC  6FF7               	movwf	247,b	;volatile
  8562                           
  8563                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  8564  001FBE  0E00               	movlw	0
  8565  001FC0  6FF9               	movwf	249,b	;volatile
  8566                           
  8567                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  8568  001FC2  0E00               	movlw	0
  8569  001FC4  6FFA               	movwf	250,b	;volatile
  8570                           
  8571                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  8572  001FC6  0E00               	movlw	0
  8573  001FC8  6FFB               	movwf	251,b	;volatile
  8574                           
  8575                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  8576  001FCA  0E00               	movlw	0
  8577  001FCC  6FFC               	movwf	252,b	;volatile
  8578                           
  8579                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  8580  001FCE  0E00               	movlw	0
  8581  001FD0  6FFD               	movwf	253,b	;volatile
  8582                           
  8583                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  8584  001FD2  0E00               	movlw	0
  8585  001FD4  6FFE               	movwf	254,b	;volatile
  8586                           
  8587                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
  8588  001FD6  0E1F               	movlw	31
  8589  001FD8  6FFF               	movwf	255,b	;volatile
  8590                           
  8591                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
  8592  001FDA  0E84               	movlw	132
  8593  001FDC  6FF8               	movwf	248,b	;volatile
  8594  001FDE                     
  8595                           ; BSR set to: 62
  8596  001FDE  0012               	return		;funcret
  8597  001FE0                     __end_of_ADCC_Initialize:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function _UART1_tx_vect_isr *****************
  8601 ;; Defined at:
  8602 ;;		line 235 in file "mcc_generated_files/uart1.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;Total ram usage:        1 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 5
  8623 ;; This function calls:
  8624 ;;		Absolute function
  8625 ;;		_UART1_Transmit_ISR
  8626 ;; This function is called by:
  8627 ;;		Interrupt level 1
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           	psect	text52
  8632  0021E8                     __ptext52:
  8633                           	callstack 0
  8634  0021E8                     _UART1_tx_vect_isr:
  8635                           	callstack 20
  8636                           
  8637                           ; BSR set to: 62
  8638                           ;incstack = 0
  8639  0021E8  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
  8640  0021EE                     
  8641                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
  8642  0021EE  0100               	movlb	0	; () banked
  8643  0021F0  51DE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8644  0021F2  11DF               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8645  0021F4  B4D8               	btfsc	status,2,c
  8646  0021F6  EFFF  F010         	goto	i1u369_21
  8647  0021FA  EF01  F011         	goto	i1u369_20
  8648  0021FE                     i1u369_21:
  8649  0021FE  EF0E  F011         	goto	i1l324
  8650  002202                     i1u369_20:
  8651  002202                     
  8652                           ; BSR set to: 0
  8653                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
  8654  002202  D802               	call	i1u370_28
  8655  002204  EF0E  F011         	goto	i1u370_29
  8656  002208                     i1u370_28:
  8657  002208  0005               	push	
  8658  00220A  6EFA               	movwf	pclath,c
  8659  00220C  51DE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
  8660  00220E  6EFD               	movwf	tosl,c
  8661  002210  51DF               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
  8662  002212  6EFE               	movwf	tosh,c
  8663  002214  50F8               	movf	tblptru,w,c
  8664  002216  6EFF               	movwf	tosu,c
  8665  002218  50FA               	movf	pclath,w,c
  8666  00221A  0012               	return		;indir
  8667  00221C                     i1u370_29:
  8668  00221C                     i1l324:
  8669  00221C  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
  8670  002222  0011               	retfie		f
  8671  002224                     __end_of_UART1_tx_vect_isr:
  8672                           	callstack 0
  8673                           
  8674 ;; *************** function _UART1_Transmit_ISR *****************
  8675 ;; Defined at:
  8676 ;;		line 253 in file "mcc_generated_files/uart1.c"
  8677 ;; Parameters:    Size  Location     Type
  8678 ;;		None
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  1    wreg      void 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 4
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_UART1_Initialize
  8701 ;;		_UART1_tx_vect_isr
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text53
  8706  00215E                     __ptext53:
  8707                           	callstack 0
  8708  00215E                     _UART1_Transmit_ISR:
  8709                           	callstack 20
  8710  00215E                     
  8711                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
  8712  00215E  0E08               	movlw	8
  8713  002160  0100               	movlb	0	; () banked
  8714  002162  61E2               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
  8715  002164  EFB6  F010         	goto	i1u351_21
  8716  002168  EFB8  F010         	goto	i1u351_20
  8717  00216C                     i1u351_21:
  8718  00216C  EFD0  F010         	goto	i1l333
  8719  002170                     i1u351_20:
  8720  002170                     
  8721                           ; BSR set to: 0
  8722                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
  8723  002170  0E70               	movlw	low _uart1TxBuffer
  8724  002172  2444               	addwf	_uart1TxTail^0,w,c	;volatile
  8725  002174  6ED9               	movwf	fsr2l,c
  8726  002176  6ADA               	clrf	fsr2h,c
  8727  002178  0E00               	movlw	high _uart1TxBuffer
  8728  00217A  22DA               	addwfc	fsr2h,f,c
  8729  00217C  50DF               	movf	indf2,w,c
  8730  00217E  013D               	movlb	61	; () banked
  8731  002180  6FEA               	movwf	234,b	;volatile
  8732  002182                     
  8733                           ; BSR set to: 61
  8734  002182  2A44               	incf	_uart1TxTail^0,f,c	;volatile
  8735  002184                     
  8736                           ; BSR set to: 61
  8737                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
  8738  002184  0E07               	movlw	7
  8739  002186  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
  8740  002188  EFC8  F010         	goto	i1u352_21
  8741  00218C  EFCA  F010         	goto	i1u352_20
  8742  002190                     i1u352_21:
  8743  002190  EFCC  F010         	goto	i1l4928
  8744  002194                     i1u352_20:
  8745  002194                     
  8746                           ; BSR set to: 61
  8747                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
  8748  002194  0E00               	movlw	0
  8749  002196  6E44               	movwf	_uart1TxTail^0,c	;volatile
  8750  002198                     i1l4928:
  8751                           
  8752                           ; BSR set to: 61
  8753                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
  8754  002198  0100               	movlb	0	; () banked
  8755  00219A  2BE2               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  8756                           
  8757                           ;mcc_generated_files/uart1.c: 264:     }
  8758  00219C  EFD2  F010         	goto	i1l336
  8759  0021A0                     i1l333:
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
  8763  0021A0  0139               	movlb	57	; () banked
  8764  0021A2  9993               	bcf	147,4,b	;volatile
  8765  0021A4                     i1l336:
  8766  0021A4  0012               	return		;funcret
  8767  0021A6                     __end_of_UART1_Transmit_ISR:
  8768                           	callstack 0
  8769                           
  8770 ;; *************** function _UART1_rx_vect_isr *****************
  8771 ;; Defined at:
  8772 ;;		line 243 in file "mcc_generated_files/uart1.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;		None
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;		None
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;Total ram usage:        1 bytes
  8791 ;; Hardware stack levels used: 1
  8792 ;; Hardware stack levels required when called: 7
  8793 ;; This function calls:
  8794 ;;		Absolute function
  8795 ;;		_UART1_Receive_ISR
  8796 ;; This function is called by:
  8797 ;;		Interrupt level 1
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text54
  8802  002224                     __ptext54:
  8803                           	callstack 0
  8804  002224                     _UART1_rx_vect_isr:
  8805                           	callstack 18
  8806                           
  8807                           ;incstack = 0
  8808  002224  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
  8809  00222A                     
  8810                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
  8811  00222A  0100               	movlb	0	; () banked
  8812  00222C  51E0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8813  00222E  11E1               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8814  002230  B4D8               	btfsc	status,2,c
  8815  002232  EF1D  F011         	goto	i1u371_21
  8816  002236  EF1F  F011         	goto	i1u371_20
  8817  00223A                     i1u371_21:
  8818  00223A  EF2C  F011         	goto	i1l330
  8819  00223E                     i1u371_20:
  8820  00223E                     
  8821                           ; BSR set to: 0
  8822                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
  8823  00223E  D802               	call	i1u372_28
  8824  002240  EF2C  F011         	goto	i1u372_29
  8825  002244                     i1u372_28:
  8826  002244  0005               	push	
  8827  002246  6EFA               	movwf	pclath,c
  8828  002248  51E0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
  8829  00224A  6EFD               	movwf	tosl,c
  8830  00224C  51E1               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
  8831  00224E  6EFE               	movwf	tosh,c
  8832  002250  50F8               	movf	tblptru,w,c
  8833  002252  6EFF               	movwf	tosu,c
  8834  002254  50FA               	movf	pclath,w,c
  8835  002256  0012               	return		;indir
  8836  002258                     i1u372_29:
  8837  002258                     i1l330:
  8838  002258  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
  8839  00225E  0011               	retfie		f
  8840  002260                     __end_of_UART1_rx_vect_isr:
  8841                           	callstack 0
  8842                           
  8843 ;; *************** function _UART1_Receive_ISR *****************
  8844 ;; Defined at:
  8845 ;;		line 273 in file "mcc_generated_files/uart1.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; Hardware stack levels required when called: 6
  8866 ;; This function calls:
  8867 ;;		Absolute function
  8868 ;;		_UART1_DefaultErrorHandler
  8869 ;;		_UART1_DefaultFramingErrorHandler
  8870 ;;		_UART1_DefaultOverrunErrorHandler
  8871 ;;		_UART1_RxDataHandler
  8872 ;; This function is called by:
  8873 ;;		_UART1_Initialize
  8874 ;;		_UART1_rx_vect_isr
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	text55
  8879  001CC0                     __ptext55:
  8880                           	callstack 0
  8881  001CC0                     _UART1_Receive_ISR:
  8882                           	callstack 18
  8883  001CC0                     
  8884                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
  8885  001CC0  0E60               	movlw	low _uart1RxStatusBuffer
  8886  001CC2  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8887  001CC4  6ED9               	movwf	fsr2l,c
  8888  001CC6  6ADA               	clrf	fsr2h,c
  8889  001CC8  0E00               	movlw	high _uart1RxStatusBuffer
  8890  001CCA  22DA               	addwfc	fsr2h,f,c
  8891  001CCC  0E00               	movlw	0
  8892  001CCE  6EDF               	movwf	indf2,c
  8893  001CD0                     
  8894                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
  8895  001CD0  013D               	movlb	61	; () banked
  8896  001CD2  A7F9               	btfss	249,3,b	;volatile
  8897  001CD4  EF6E  F00E         	goto	i1u353_21
  8898  001CD8  EF70  F00E         	goto	i1u353_20
  8899  001CDC                     i1u353_21:
  8900  001CDC  EF85  F00E         	goto	i1l4938
  8901  001CE0                     i1u353_20:
  8902  001CE0                     
  8903                           ; BSR set to: 61
  8904                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
  8905  001CE0  0E60               	movlw	low _uart1RxStatusBuffer
  8906  001CE2  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8907  001CE4  6ED9               	movwf	fsr2l,c
  8908  001CE6  6ADA               	clrf	fsr2h,c
  8909  001CE8  0E00               	movlw	high _uart1RxStatusBuffer
  8910  001CEA  22DA               	addwfc	fsr2h,f,c
  8911  001CEC  0100               	movlb	0	; () banked
  8912  001CEE  82DF               	bsf	indf2,1,c
  8913  001CF0                     
  8914                           ; BSR set to: 0
  8915                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
  8916  001CF0  D802               	call	i1u354_28
  8917  001CF2  EF85  F00E         	goto	i1u354_29
  8918  001CF6                     i1u354_28:
  8919  001CF6  0005               	push	
  8920  001CF8  6EFA               	movwf	pclath,c
  8921  001CFA  51DC               	movf	_UART1_FramingErrorHandler& (0+255),w,b
  8922  001CFC  6EFD               	movwf	tosl,c
  8923  001CFE  51DD               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
  8924  001D00  6EFE               	movwf	tosh,c
  8925  001D02  50F8               	movf	tblptru,w,c
  8926  001D04  6EFF               	movwf	tosu,c
  8927  001D06  50FA               	movf	pclath,w,c
  8928  001D08  0012               	return		;indir
  8929  001D0A                     i1u354_29:
  8930  001D0A                     i1l4938:
  8931                           
  8932                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
  8933  001D0A  013D               	movlb	61	; () banked
  8934  001D0C  A3F9               	btfss	249,1,b	;volatile
  8935  001D0E  EF8B  F00E         	goto	i1u355_21
  8936  001D12  EF8D  F00E         	goto	i1u355_20
  8937  001D16                     i1u355_21:
  8938  001D16  EFA2  F00E         	goto	i1l4944
  8939  001D1A                     i1u355_20:
  8940  001D1A                     
  8941                           ; BSR set to: 61
  8942                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
  8943  001D1A  0E60               	movlw	low _uart1RxStatusBuffer
  8944  001D1C  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8945  001D1E  6ED9               	movwf	fsr2l,c
  8946  001D20  6ADA               	clrf	fsr2h,c
  8947  001D22  0E00               	movlw	high _uart1RxStatusBuffer
  8948  001D24  22DA               	addwfc	fsr2h,f,c
  8949  001D26  0100               	movlb	0	; () banked
  8950  001D28  84DF               	bsf	indf2,2,c
  8951  001D2A                     
  8952                           ; BSR set to: 0
  8953                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
  8954  001D2A  D802               	call	i1u356_28
  8955  001D2C  EFA2  F00E         	goto	i1u356_29
  8956  001D30                     i1u356_28:
  8957  001D30  0005               	push	
  8958  001D32  6EFA               	movwf	pclath,c
  8959  001D34  51DA               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
  8960  001D36  6EFD               	movwf	tosl,c
  8961  001D38  51DB               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
  8962  001D3A  6EFE               	movwf	tosh,c
  8963  001D3C  50F8               	movf	tblptru,w,c
  8964  001D3E  6EFF               	movwf	tosu,c
  8965  001D40  50FA               	movf	pclath,w,c
  8966  001D42  0012               	return		;indir
  8967  001D44                     i1u356_29:
  8968  001D44                     i1l4944:
  8969                           
  8970                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
  8971  001D44  0E60               	movlw	low _uart1RxStatusBuffer
  8972  001D46  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  8973  001D48  6ED9               	movwf	fsr2l,c
  8974  001D4A  6ADA               	clrf	fsr2h,c
  8975  001D4C  0E00               	movlw	high _uart1RxStatusBuffer
  8976  001D4E  22DA               	addwfc	fsr2h,f,c
  8977  001D50  50DF               	movf	indf2,w,c
  8978  001D52  B4D8               	btfsc	status,2,c
  8979  001D54  EFAE  F00E         	goto	i1u357_21
  8980  001D58  EFB0  F00E         	goto	i1u357_20
  8981  001D5C                     i1u357_21:
  8982  001D5C  EFC0  F00E         	goto	i1l4948
  8983  001D60                     i1u357_20:
  8984  001D60                     
  8985                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
  8986  001D60  D802               	call	i1u358_28
  8987  001D62  EFBE  F00E         	goto	i1u358_29
  8988  001D66                     i1u358_28:
  8989  001D66  0005               	push	
  8990  001D68  0100               	movlb	0	; () banked
  8991  001D6A  6EFA               	movwf	pclath,c
  8992  001D6C  51D8               	movf	_UART1_ErrorHandler& (0+255),w,b
  8993  001D6E  6EFD               	movwf	tosl,c
  8994  001D70  51D9               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
  8995  001D72  6EFE               	movwf	tosh,c
  8996  001D74  50F8               	movf	tblptru,w,c
  8997  001D76  6EFF               	movwf	tosu,c
  8998  001D78  50FA               	movf	pclath,w,c
  8999  001D7A  0012               	return		;indir
  9000  001D7C                     i1u358_29:
  9001                           
  9002                           ;mcc_generated_files/uart1.c: 290:     } else {
  9003  001D7C  EFC2  F00E         	goto	i1l343
  9004  001D80                     i1l4948:
  9005                           
  9006                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
  9007  001D80  ECF5  F012         	call	_UART1_RxDataHandler	;wreg free
  9008  001D84                     i1l343:
  9009  001D84  0012               	return		;funcret
  9010  001D86                     __end_of_UART1_Receive_ISR:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
  9014 ;; Defined at:
  9015 ;;		line 309 in file "mcc_generated_files/uart1.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		None
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9033 ;;Total ram usage:        0 bytes
  9034 ;; Hardware stack levels used: 1
  9035 ;; Hardware stack levels required when called: 4
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_UART1_Initialize
  9040 ;;		_UART1_Receive_ISR
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text56
  9045  002808                     __ptext56:
  9046                           	callstack 0
  9047  002808                     _UART1_DefaultOverrunErrorHandler:
  9048                           	callstack 19
  9049  002808  0012               	return		;funcret
  9050  00280A                     __end_of_UART1_DefaultOverrunErrorHandler:
  9051                           	callstack 0
  9052                           
  9053 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
  9054 ;; Defined at:
  9055 ;;		line 307 in file "mcc_generated_files/uart1.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;		None
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;		None
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  1    wreg      void 
  9062 ;; Registers used:
  9063 ;;		None
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9073 ;;Total ram usage:        0 bytes
  9074 ;; Hardware stack levels used: 1
  9075 ;; Hardware stack levels required when called: 4
  9076 ;; This function calls:
  9077 ;;		Nothing
  9078 ;; This function is called by:
  9079 ;;		_UART1_Initialize
  9080 ;;		_UART1_Receive_ISR
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           	psect	text57
  9085  00280A                     __ptext57:
  9086                           	callstack 0
  9087  00280A                     _UART1_DefaultFramingErrorHandler:
  9088                           	callstack 19
  9089  00280A  0012               	return		;funcret
  9090  00280C                     __end_of_UART1_DefaultFramingErrorHandler:
  9091                           	callstack 0
  9092                           
  9093 ;; *************** function _UART1_DefaultErrorHandler *****************
  9094 ;; Defined at:
  9095 ;;		line 311 in file "mcc_generated_files/uart1.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;		None
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;		None
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used: 1
  9115 ;; Hardware stack levels required when called: 5
  9116 ;; This function calls:
  9117 ;;		_UART1_RxDataHandler
  9118 ;; This function is called by:
  9119 ;;		_UART1_Initialize
  9120 ;;		_UART1_Receive_ISR
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text58
  9125  0027FC                     __ptext58:
  9126                           	callstack 0
  9127  0027FC                     _UART1_DefaultErrorHandler:
  9128                           	callstack 18
  9129  0027FC                     
  9130                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
  9131  0027FC  ECF5  F012         	call	_UART1_RxDataHandler	;wreg free
  9132  002800  0012               	return		;funcret
  9133  002802                     __end_of_UART1_DefaultErrorHandler:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function _UART1_RxDataHandler *****************
  9137 ;; Defined at:
  9138 ;;		line 297 in file "mcc_generated_files/uart1.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  1    wreg      void 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;Total ram usage:        0 bytes
  9157 ;; Hardware stack levels used: 1
  9158 ;; Hardware stack levels required when called: 4
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_UART1_Receive_ISR
  9163 ;;		_UART1_DefaultErrorHandler
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text59
  9168  0025EA                     __ptext59:
  9169                           	callstack 0
  9170  0025EA                     _UART1_RxDataHandler:
  9171                           	callstack 19
  9172  0025EA                     
  9173                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
  9174  0025EA  0E68               	movlw	low _uart1RxBuffer
  9175  0025EC  2443               	addwf	_uart1RxHead^0,w,c	;volatile
  9176  0025EE  6ED9               	movwf	fsr2l,c
  9177  0025F0  6ADA               	clrf	fsr2h,c
  9178  0025F2  0E00               	movlw	high _uart1RxBuffer
  9179  0025F4  22DA               	addwfc	fsr2h,f,c
  9180  0025F6  006F F7A3 FFDF     	movff	15848,indf2	;volatile
  9181  0025FC  2A43               	incf	_uart1RxHead^0,f,c	;volatile
  9182  0025FE                     
  9183                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
  9184  0025FE  0E07               	movlw	7
  9185  002600  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
  9186  002602  EF05  F013         	goto	i1u249_21
  9187  002606  EF07  F013         	goto	i1u249_20
  9188  00260A                     i1u249_21:
  9189  00260A  EF09  F013         	goto	i1l4174
  9190  00260E                     i1u249_20:
  9191  00260E                     
  9192                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
  9193  00260E  0E00               	movlw	0
  9194  002610  6E43               	movwf	_uart1RxHead^0,c	;volatile
  9195  002612                     i1l4174:
  9196                           
  9197                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
  9198  002612  2A41               	incf	_uart1RxCount^0,f,c	;volatile
  9199  002614  0012               	return		;funcret
  9200  002616                     __end_of_UART1_RxDataHandler:
  9201                           	callstack 0
  9202                           
  9203 ;; *************** function _TMR4_ISR *****************
  9204 ;; Defined at:
  9205 ;;		line 166 in file "mcc_generated_files/tmr4.c"
  9206 ;; Parameters:    Size  Location     Type
  9207 ;;		None
  9208 ;; Auto vars:     Size  Location     Type
  9209 ;;		None
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  1    wreg      void 
  9212 ;; Registers used:
  9213 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;Total ram usage:        1 bytes
  9224 ;; Hardware stack levels used: 1
  9225 ;; Hardware stack levels required when called: 6
  9226 ;; This function calls:
  9227 ;;		_TMR4_CallBack
  9228 ;; This function is called by:
  9229 ;;		Interrupt level 1
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text60
  9234  002298                     __ptext60:
  9235                           	callstack 0
  9236  002298                     _TMR4_ISR:
  9237                           	callstack 19
  9238                           
  9239                           ;incstack = 0
  9240  002298  006F FF60  F013    	movff	status,??_TMR4_ISR
  9241  00229E                     
  9242                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
  9243  00229E  0139               	movlb	57	; () banked
  9244  0022A0  91A7               	bcf	167,0,b	;volatile
  9245  0022A2                     
  9246                           ; BSR set to: 57
  9247                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
  9248  0022A2  4A3C               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
  9249  0022A4  2A3D               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
  9250  0022A6  503D               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
  9251  0022A8  E109               	bnz	i1u377_20
  9252  0022AA  0E0A               	movlw	10
  9253  0022AC  5C3C               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
  9254  0022AE  A0D8               	btfss	status,0,c
  9255  0022B0  EF5C  F011         	goto	i1u377_21
  9256  0022B4  EF5E  F011         	goto	i1u377_20
  9257  0022B8                     i1u377_21:
  9258  0022B8  EF64  F011         	goto	i1l688
  9259  0022BC                     i1u377_20:
  9260  0022BC                     
  9261                           ; BSR set to: 57
  9262                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
  9263  0022BC  EC53  F012         	call	_TMR4_CallBack	;wreg free
  9264  0022C0                     
  9265                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
  9266  0022C0  0E00               	movlw	0
  9267  0022C2  6E3D               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
  9268  0022C4  0E00               	movlw	0
  9269  0022C6  6E3C               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
  9270  0022C8                     i1l688:
  9271  0022C8  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
  9272  0022CE  0011               	retfie		f
  9273  0022D0                     __end_of_TMR4_ISR:
  9274                           	callstack 0
  9275                           
  9276 ;; *************** function _TMR4_CallBack *****************
  9277 ;; Defined at:
  9278 ;;		line 184 in file "mcc_generated_files/tmr4.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9296 ;;Total ram usage:        0 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; Hardware stack levels required when called: 5
  9299 ;; This function calls:
  9300 ;;		Absolute function
  9301 ;;		_TMR4_10msISR
  9302 ;;		_TMR4_DefaultInterruptHandler
  9303 ;; This function is called by:
  9304 ;;		_TMR4_ISR
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           	psect	text61
  9309  0024A6                     __ptext61:
  9310                           	callstack 0
  9311  0024A6                     _TMR4_CallBack:
  9312                           	callstack 19
  9313  0024A6                     
  9314                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
  9315  0024A6  0100               	movlb	0	; () banked
  9316  0024A8  51CC               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9317  0024AA  11CD               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9318  0024AC  B4D8               	btfsc	status,2,c
  9319  0024AE  EF5B  F012         	goto	i1u362_21
  9320  0024B2  EF5D  F012         	goto	i1u362_20
  9321  0024B6                     i1u362_21:
  9322  0024B6  EF6A  F012         	goto	i1l692
  9323  0024BA                     i1u362_20:
  9324  0024BA                     
  9325                           ; BSR set to: 0
  9326                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
  9327  0024BA  D802               	call	i1u363_28
  9328  0024BC  EF6A  F012         	goto	i1u363_29
  9329  0024C0                     i1u363_28:
  9330  0024C0  0005               	push	
  9331  0024C2  6EFA               	movwf	pclath,c
  9332  0024C4  51CC               	movf	_TMR4_InterruptHandler& (0+255),w,b
  9333  0024C6  6EFD               	movwf	tosl,c
  9334  0024C8  51CD               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
  9335  0024CA  6EFE               	movwf	tosh,c
  9336  0024CC  50F8               	movf	tblptru,w,c
  9337  0024CE  6EFF               	movwf	tosu,c
  9338  0024D0  50FA               	movf	pclath,w,c
  9339  0024D2  0012               	return		;indir
  9340  0024D4                     i1u363_29:
  9341  0024D4                     i1l692:
  9342  0024D4  0012               	return		;funcret
  9343  0024D6                     __end_of_TMR4_CallBack:
  9344                           	callstack 0
  9345                           
  9346 ;; *************** function _TMR4_10msISR *****************
  9347 ;; Defined at:
  9348 ;;		line 64 in file "main.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		status,2, status,0
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 4
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_main
  9373 ;;		_TMR4_CallBack
  9374 ;; This function uses a non-reentrant model
  9375 ;;
  9376                           
  9377                           	psect	text62
  9378  002802                     __ptext62:
  9379                           	callstack 0
  9380  002802                     _TMR4_10msISR:
  9381                           	callstack 19
  9382  002802                     
  9383                           ;main.c: 65:     ++cycle10ms;
  9384  002802  0100               	movlb	0	; () banked
  9385  002804  2B9E               	incf	_cycle10ms& (0+255),f,b	;volatile
  9386  002806                     
  9387                           ; BSR set to: 0
  9388  002806  0012               	return		;funcret
  9389  002808                     __end_of_TMR4_10msISR:
  9390                           	callstack 0
  9391                           
  9392 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  9393 ;; Defined at:
  9394 ;;		line 198 in file "mcc_generated_files/tmr4.c"
  9395 ;; Parameters:    Size  Location     Type
  9396 ;;		None
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;		None
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      void 
  9401 ;; Registers used:
  9402 ;;		None
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9412 ;;Total ram usage:        0 bytes
  9413 ;; Hardware stack levels used: 1
  9414 ;; Hardware stack levels required when called: 4
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_TMR4_Initialize
  9419 ;;		_TMR4_CallBack
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           	psect	text63
  9424  00280C                     __ptext63:
  9425                           	callstack 0
  9426  00280C                     _TMR4_DefaultInterruptHandler:
  9427                           	callstack 19
  9428  00280C  0012               	return		;funcret
  9429  00280E                     __end_of_TMR4_DefaultInterruptHandler:
  9430                           	callstack 0
  9431                           
  9432 ;; *************** function _Default_ISR *****************
  9433 ;; Defined at:
  9434 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		None
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;Total ram usage:        0 bytes
  9453 ;; Hardware stack levels used: 1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		Interrupt level 2
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           	psect	text64
  9462  002810                     __ptext64:
  9463                           	callstack 0
  9464  002810                     _Default_ISR:
  9465                           	callstack 21
  9466  002810  0011               	retfie		f
  9467  002812                     __end_of_Default_ISR:
  9468                           	callstack 0
  9469                           
  9470 ;; *************** function _CCP3_CaptureISR *****************
  9471 ;; Defined at:
  9472 ;;		line 104 in file "mcc_generated_files/ccp3.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;		None
  9475 ;; Auto vars:     Size  Location     Type
  9476 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
  9477 ;; Return value:  Size  Location     Type
  9478 ;;                  1    wreg      void 
  9479 ;; Registers used:
  9480 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9481 ;; Tracked objects:
  9482 ;;		On entry : 0/0
  9483 ;;		On exit  : 0/0
  9484 ;;		Unchanged: 0/0
  9485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;Total ram usage:        2 bytes
  9491 ;; Hardware stack levels used: 1
  9492 ;; Hardware stack levels required when called: 1
  9493 ;; This function calls:
  9494 ;;		Absolute function
  9495 ;;		_CCP3_DefaultCallBack
  9496 ;; This function is called by:
  9497 ;;		Interrupt level 2
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           	psect	text65
  9502  0022D0                     __ptext65:
  9503                           	callstack 0
  9504  0022D0                     _CCP3_CaptureISR:
  9505                           	callstack 20
  9506  0022D0                     
  9507                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
  9508  0022D0  0139               	movlb	57	; () banked
  9509  0022D2  93A9               	bcf	169,1,b	;volatile
  9510                           
  9511                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
  9512  0022D4  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
  9513                           
  9514                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
  9515  0022DA  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
  9516  0022E0                     
  9517                           ; BSR set to: 57
  9518                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
  9519  0022E0  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
  9520  0022E4  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
  9521  0022E8  D802               	call	i2u373_48
  9522  0022EA  EF82  F011         	goto	i2u373_49
  9523  0022EE                     i2u373_48:
  9524  0022EE  0005               	push	
  9525  0022F0  0100               	movlb	0	; () banked
  9526  0022F2  6EFA               	movwf	pclath,c
  9527  0022F4  51D6               	movf	_CCP3_CallBack& (0+255),w,b
  9528  0022F6  6EFD               	movwf	tosl,c
  9529  0022F8  51D7               	movf	(_CCP3_CallBack+1)& (0+255),w,b
  9530  0022FA  6EFE               	movwf	tosh,c
  9531  0022FC  50F8               	movf	tblptru,w,c
  9532  0022FE  6EFF               	movwf	tosu,c
  9533  002300  50FA               	movf	pclath,w,c
  9534  002302  0012               	return		;indir
  9535  002304                     i2u373_49:
  9536  002304  0011               	retfie		f
  9537  002306                     __end_of_CCP3_CaptureISR:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function _CCP3_DefaultCallBack *****************
  9541 ;; Defined at:
  9542 ;;		line 64 in file "mcc_generated_files/ccp3.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  capturedValu    2    0[COMRAM] unsigned short 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  1    wreg      void 
  9549 ;; Registers used:
  9550 ;;		wreg, status,2, status,0
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9560 ;;Total ram usage:        2 bytes
  9561 ;; Hardware stack levels used: 1
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_CCP3_Initialize
  9566 ;;		_CCP3_CaptureISR
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text66
  9571  0024D6                     __ptext66:
  9572                           	callstack 0
  9573  0024D6                     _CCP3_DefaultCallBack:
  9574                           	callstack 20
  9575  0024D6                     
  9576                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
  9577  0024D6  AECD               	btfss	205,7,c	;volatile
  9578  0024D8  EF70  F012         	goto	i2u359_41
  9579  0024DC  EF72  F012         	goto	i2u359_40
  9580  0024E0                     i2u359_41:
  9581  0024E0  EF78  F012         	goto	i2l4954
  9582  0024E4                     i2u359_40:
  9583  0024E4                     
  9584                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
  9585  0024E4  C001  F09A         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
  9586  0024E8  C002  F09B         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
  9587                           
  9588                           ;mcc_generated_files/ccp3.c: 69:     } else {
  9589  0024EC  EF82  F012         	goto	i2l438
  9590  0024F0                     i2l4954:
  9591                           
  9592                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
  9593  0024F0  0100               	movlb	0	; () banked
  9594  0024F2  519A               	movf	_distLeftM& (0+255),w,b
  9595  0024F4  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
  9596  0024F6  6F9C               	movwf	_distLeft& (0+255),b	;volatile
  9597  0024F8  519B               	movf	(_distLeftM+1)& (0+255),w,b
  9598  0024FA  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
  9599  0024FC  6F9D               	movwf	(_distLeft+1)& (0+255),b	;volatile
  9600  0024FE                     
  9601                           ; BSR set to: 0
  9602                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
  9603  0024FE  90D8               	bcf	status,0,c
  9604  002500  339D               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
  9605  002502  339C               	rrcf	_distLeft& (0+255),f,b	;volatile
  9606  002504                     i2l438:
  9607  002504  0012               	return		;funcret
  9608  002506                     __end_of_CCP3_DefaultCallBack:
  9609                           	callstack 0
  9610                           
  9611 ;; *************** function _CCP4_CaptureISR *****************
  9612 ;; Defined at:
  9613 ;;		line 107 in file "mcc_generated_files/ccp4.c"
  9614 ;; Parameters:    Size  Location     Type
  9615 ;;		None
  9616 ;; Auto vars:     Size  Location     Type
  9617 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  1    wreg      void 
  9620 ;; Registers used:
  9621 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9622 ;; Tracked objects:
  9623 ;;		On entry : 0/0
  9624 ;;		On exit  : 0/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9631 ;;Total ram usage:        2 bytes
  9632 ;; Hardware stack levels used: 1
  9633 ;; Hardware stack levels required when called: 1
  9634 ;; This function calls:
  9635 ;;		Absolute function
  9636 ;;		_CCP4_DefaultCallBack
  9637 ;; This function is called by:
  9638 ;;		Interrupt level 2
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text67
  9643  002308                     __ptext67:
  9644                           	callstack 0
  9645  002308                     _CCP4_CaptureISR:
  9646                           	callstack 20
  9647  002308                     
  9648                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
  9649  002308  0139               	movlb	57	; () banked
  9650  00230A  91AA               	bcf	170,0,b	;volatile
  9651                           
  9652                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
  9653  00230C  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
  9654                           
  9655                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
  9656  002312  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
  9657  002318                     
  9658                           ; BSR set to: 57
  9659                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
  9660  002318  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
  9661  00231C  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
  9662  002320  D802               	call	i2u374_48
  9663  002322  EF9E  F011         	goto	i2u374_49
  9664  002326                     i2u374_48:
  9665  002326  0005               	push	
  9666  002328  0100               	movlb	0	; () banked
  9667  00232A  6EFA               	movwf	pclath,c
  9668  00232C  51D4               	movf	_CCP4_CallBack& (0+255),w,b
  9669  00232E  6EFD               	movwf	tosl,c
  9670  002330  51D5               	movf	(_CCP4_CallBack+1)& (0+255),w,b
  9671  002332  6EFE               	movwf	tosh,c
  9672  002334  50F8               	movf	tblptru,w,c
  9673  002336  6EFF               	movwf	tosu,c
  9674  002338  50FA               	movf	pclath,w,c
  9675  00233A  0012               	return		;indir
  9676  00233C                     i2u374_49:
  9677  00233C  0011               	retfie		f
  9678  00233E                     __end_of_CCP4_CaptureISR:
  9679                           	callstack 0
  9680                           
  9681 ;; *************** function _CCP4_DefaultCallBack *****************
  9682 ;; Defined at:
  9683 ;;		line 64 in file "mcc_generated_files/ccp4.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  capturedValu    2    4[COMRAM] unsigned short 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;		None
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  1    wreg      void 
  9690 ;; Registers used:
  9691 ;;		wreg, status,2, status,0
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9701 ;;Total ram usage:        2 bytes
  9702 ;; Hardware stack levels used: 1
  9703 ;; This function calls:
  9704 ;;		Nothing
  9705 ;; This function is called by:
  9706 ;;		_CCP4_Initialize
  9707 ;;		_CCP4_CaptureISR
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text68
  9712  002506                     __ptext68:
  9713                           	callstack 0
  9714  002506                     _CCP4_DefaultCallBack:
  9715                           	callstack 20
  9716  002506                     
  9717                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
  9718  002506  ACCD               	btfss	205,6,c	;volatile
  9719  002508  EF88  F012         	goto	i2u360_41
  9720  00250C  EF8A  F012         	goto	i2u360_40
  9721  002510                     i2u360_41:
  9722  002510  EF90  F012         	goto	i2l4962
  9723  002514                     i2u360_40:
  9724  002514                     
  9725                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
  9726  002514  C005  F096         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
  9727  002518  C006  F097         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
  9728                           
  9729                           ;mcc_generated_files/ccp4.c: 70:     } else {
  9730  00251C  EF9A  F012         	goto	i2l476
  9731  002520                     i2l4962:
  9732                           
  9733                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
  9734  002520  0100               	movlb	0	; () banked
  9735  002522  5196               	movf	_distRightM& (0+255),w,b
  9736  002524  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
  9737  002526  6F98               	movwf	_distRight& (0+255),b	;volatile
  9738  002528  5197               	movf	(_distRightM+1)& (0+255),w,b
  9739  00252A  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
  9740  00252C  6F99               	movwf	(_distRight+1)& (0+255),b	;volatile
  9741  00252E                     
  9742                           ; BSR set to: 0
  9743                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
  9744  00252E  90D8               	bcf	status,0,c
  9745  002530  3399               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
  9746  002532  3398               	rrcf	_distRight& (0+255),f,b	;volatile
  9747  002534                     i2l476:
  9748  002534  0012               	return		;funcret
  9749  002536                     __end_of_CCP4_DefaultCallBack:
  9750                           	callstack 0
  9751                           
  9752 ;; *************** function _TMR5_GATE_ISR *****************
  9753 ;; Defined at:
  9754 ;;		line 175 in file "mcc_generated_files/tmr5.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      void 
  9761 ;; Registers used:
  9762 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9772 ;;Total ram usage:        0 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 3
  9775 ;; This function calls:
  9776 ;;		Absolute function
  9777 ;;		_TMR5_DefaultGateInterruptHandler
  9778 ;; This function is called by:
  9779 ;;		Interrupt level 2
  9780 ;; This function uses a non-reentrant model
  9781 ;;
  9782                           
  9783                           	psect	text69
  9784  002410                     __ptext69:
  9785                           	callstack 0
  9786  002410                     _TMR5_GATE_ISR:
  9787                           	callstack 18
  9788  002410                     
  9789                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
  9790  002410  0139               	movlb	57	; () banked
  9791  002412  9FA8               	bcf	168,7,b	;volatile
  9792  002414                     
  9793                           ; BSR set to: 57
  9794                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
  9795  002414  0100               	movlb	0	; () banked
  9796  002416  51D0               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9797  002418  11D1               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9798  00241A  B4D8               	btfsc	status,2,c
  9799  00241C  EF12  F012         	goto	i2u375_41
  9800  002420  EF14  F012         	goto	i2u375_40
  9801  002424                     i2u375_41:
  9802  002424  EF21  F012         	goto	i2l552
  9803  002428                     i2u375_40:
  9804  002428                     
  9805                           ; BSR set to: 0
  9806                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
  9807  002428  D802               	call	i2u376_48
  9808  00242A  EF21  F012         	goto	i2u376_49
  9809  00242E                     i2u376_48:
  9810  00242E  0005               	push	
  9811  002430  6EFA               	movwf	pclath,c
  9812  002432  51D0               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
  9813  002434  6EFD               	movwf	tosl,c
  9814  002436  51D1               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
  9815  002438  6EFE               	movwf	tosh,c
  9816  00243A  50F8               	movf	tblptru,w,c
  9817  00243C  6EFF               	movwf	tosu,c
  9818  00243E  50FA               	movf	pclath,w,c
  9819  002440  0012               	return		;indir
  9820  002442                     i2u376_49:
  9821  002442                     i2l552:
  9822  002442  0011               	retfie		f
  9823  002444                     __end_of_TMR5_GATE_ISR:
  9824                           	callstack 0
  9825                           
  9826 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
  9827 ;; Defined at:
  9828 ;;		line 190 in file "mcc_generated_files/tmr5.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, status,2, status,0, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;Total ram usage:        0 bytes
  9847 ;; Hardware stack levels used: 1
  9848 ;; Hardware stack levels required when called: 2
  9849 ;; This function calls:
  9850 ;;		_TMR5_ReadTimer
  9851 ;;		_TMR5_Reload
  9852 ;; This function is called by:
  9853 ;;		_TMR5_Initialize
  9854 ;;		_TMR5_GATE_ISR
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text70
  9859  0026F0                     __ptext70:
  9860                           	callstack 0
  9861  0026F0                     _TMR5_DefaultGateInterruptHandler:
  9862                           	callstack 18
  9863  0026F0                     
  9864                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
  9865  0026F0  EC48  F013         	call	_TMR5_ReadTimer	;wreg free
  9866  0026F4  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
  9867  0026F8  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
  9868  0026FC                     
  9869                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
  9870  0026FC  90D8               	bcf	status,0,c
  9871  0026FE  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
  9872  002700  324A               	rrcf	_distFront^0,f,c	;volatile
  9873  002702                     
  9874                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
  9875  002702  ECCA  F013         	call	_TMR5_Reload	;wreg free
  9876  002706                     
  9877                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
  9878  002706  0139               	movlb	57	; () banked
  9879  002708  9FA8               	bcf	168,7,b	;volatile
  9880  00270A                     
  9881                           ; BSR set to: 57
  9882  00270A  0012               	return		;funcret
  9883  00270C                     __end_of_TMR5_DefaultGateInterruptHandler:
  9884                           	callstack 0
  9885                           
  9886 ;; *************** function _TMR5_Reload *****************
  9887 ;; Defined at:
  9888 ;;		line 155 in file "mcc_generated_files/tmr5.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;		None
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;		None
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1    wreg      void 
  9895 ;; Registers used:
  9896 ;;		wreg, status,2, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 0/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;Total ram usage:        0 bytes
  9907 ;; Hardware stack levels used: 1
  9908 ;; Hardware stack levels required when called: 1
  9909 ;; This function calls:
  9910 ;;		_TMR5_WriteTimer
  9911 ;; This function is called by:
  9912 ;;		_TMR5_DefaultGateInterruptHandler
  9913 ;; This function uses a non-reentrant model
  9914 ;;
  9915                           
  9916                           	psect	text71
  9917  002794                     __ptext71:
  9918                           	callstack 0
  9919  002794                     _TMR5_Reload:
  9920                           	callstack 18
  9921  002794                     
  9922                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
  9923  002794  C0D2  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
  9924  002798  C0D3  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
  9925  00279C  EC0B  F013         	call	_TMR5_WriteTimer	;wreg free
  9926  0027A0  0012               	return		;funcret
  9927  0027A2                     __end_of_TMR5_Reload:
  9928                           	callstack 0
  9929                           
  9930 ;; *************** function _TMR5_WriteTimer *****************
  9931 ;; Defined at:
  9932 ;;		line 133 in file "mcc_generated_files/tmr5.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  timerVal        2    8[COMRAM] unsigned short 
  9935 ;; Auto vars:     Size  Location     Type
  9936 ;;		None
  9937 ;; Return value:  Size  Location     Type
  9938 ;;                  1    wreg      void 
  9939 ;; Registers used:
  9940 ;;		wreg, status,2
  9941 ;; Tracked objects:
  9942 ;;		On entry : 0/0
  9943 ;;		On exit  : 0/0
  9944 ;;		Unchanged: 0/0
  9945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9950 ;;Total ram usage:        2 bytes
  9951 ;; Hardware stack levels used: 1
  9952 ;; This function calls:
  9953 ;;		Nothing
  9954 ;; This function is called by:
  9955 ;;		_TMR5_Reload
  9956 ;; This function uses a non-reentrant model
  9957 ;;
  9958                           
  9959                           	psect	text72
  9960  002616                     __ptext72:
  9961                           	callstack 0
  9962  002616                     _TMR5_WriteTimer:
  9963                           	callstack 18
  9964  002616                     
  9965                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
  9966  002616  A49A               	btfss	154,2,c	;volatile
  9967  002618  EF10  F013         	goto	i2u250_41
  9968  00261C  EF12  F013         	goto	i2u250_40
  9969  002620                     i2u250_41:
  9970  002620  EF1B  F013         	goto	i2l4192
  9971  002624                     i2u250_40:
  9972  002624                     
  9973                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
  9974  002624  909A               	bcf	154,0,c	;volatile
  9975  002626                     
  9976                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
  9977  002626  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9978  002628  6E99               	movwf	153,c	;volatile
  9979  00262A                     
  9980                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
  9981  00262A  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9982  002630                     
  9983                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
  9984  002630  809A               	bsf	154,0,c	;volatile
  9985                           
  9986                           ;mcc_generated_files/tmr5.c: 146:     }
  9987  002632  EF20  F013         	goto	i2l534
  9988  002636                     i2l4192:
  9989                           
  9990                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
  9991  002636  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
  9992  002638  6E99               	movwf	153,c	;volatile
  9993  00263A                     
  9994                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
  9995  00263A  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  9996  002640                     i2l534:
  9997  002640  0012               	return		;funcret
  9998  002642                     __end_of_TMR5_WriteTimer:
  9999                           	callstack 0
 10000                           
 10001 ;; *************** function _TMR5_ReadTimer *****************
 10002 ;; Defined at:
 10003 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;		None
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;  readVal         2   12[COMRAM] unsigned short 
 10008 ;;  readValLow      1   15[COMRAM] unsigned char 
 10009 ;;  readValHigh     1   14[COMRAM] unsigned char 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  2    8[COMRAM] unsigned short 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10020 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10022 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10023 ;;Total ram usage:        8 bytes
 10024 ;; Hardware stack levels used: 1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_TMR5_DefaultGateInterruptHandler
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text73
 10033  002690                     __ptext73:
 10034                           	callstack 0
 10035  002690                     _TMR5_ReadTimer:
 10036                           	callstack 19
 10037  002690                     
 10038                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 10039  002690  829A               	bsf	154,1,c	;volatile
 10040                           
 10041                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 10042  002692  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 10043                           
 10044                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 10045  002698  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 10046  00269E                     
 10047                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 10048  00269E  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 10049  0026A0  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 10050  0026A2  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 10051  0026A4  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 10052  0026A6  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 10053  0026AA                     
 10054                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 10055  0026AA  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 10056  0026AE  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 10057  0026B2  0012               	return		;funcret
 10058  0026B4                     __end_of_TMR5_ReadTimer:
 10059                           	callstack 0
 10060                           
 10061 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 10062 ;; Defined at:
 10063 ;;		line 192 in file "mcc_generated_files/smt1.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;		None
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;		None
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  1    wreg      void 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10081 ;;Total ram usage:        0 bytes
 10082 ;; Hardware stack levels used: 1
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		Interrupt level 2
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text74
 10091  002114                     __ptext74:
 10092                           	callstack 0
 10093  002114                     _SMT1_PR_ACQ_ISR:
 10094                           	callstack 21
 10095  002114                     
 10096                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 10097  002114  0139               	movlb	57	; () banked
 10098  002116  9DA1               	bcf	161,6,b	;volatile
 10099  002118                     
 10100                           ; BSR set to: 57
 10101                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 10102  002118  013F               	movlb	63	; () banked
 10103  00211A  5115               	movf	21,w,b	;volatile
 10104  00211C  6E46               	movwf	_smtPeriod^0,c	;volatile
 10105  00211E  5116               	movf	22,w,b	;volatile
 10106  002120  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10107  002122  5117               	movf	23,w,b	;volatile
 10108  002124  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10109  002126  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
 10110  002128                     
 10111                           ; BSR set to: 63
 10112                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 10113  002128  013C               	movlb	60	; () banked
 10114  00212A  AB60               	btfss	96,5,b	;volatile
 10115  00212C  EF9A  F010         	goto	i2u378_41
 10116  002130  EF9C  F010         	goto	i2u378_40
 10117  002134                     i2u378_41:
 10118  002134  EFA5  F010         	goto	i2l5078
 10119  002138                     i2u378_40:
 10120  002138                     
 10121                           ; BSR set to: 60
 10122  002138  0E01               	movlw	1
 10123  00213A  0100               	movlb	0	; () banked
 10124  00213C  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10125  00213E  0E00               	movlw	0
 10126  002140  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10127  002142  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10128  002144  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10129  002146  EFAE  F010         	goto	i2l856
 10130  00214A                     i2l5078:
 10131                           
 10132                           ; BSR set to: 60
 10133  00214A  0EFF               	movlw	255
 10134  00214C  0100               	movlb	0	; () banked
 10135  00214E  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10136  002150  0EFF               	movlw	255
 10137  002152  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10138  002154  0EFF               	movlw	255
 10139  002156  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10140  002158  0EFF               	movlw	255
 10141  00215A  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10142  00215C                     i2l856:
 10143                           
 10144                           ; BSR set to: 0
 10145  00215C  0011               	retfie		f
 10146  00215E                     __end_of_SMT1_PR_ACQ_ISR:
 10147                           	callstack 0
 10148                           
 10149 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 10150 ;; Defined at:
 10151 ;;		line 203 in file "mcc_generated_files/smt1.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;		None
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;		None
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10169 ;;Total ram usage:        0 bytes
 10170 ;; Hardware stack levels used: 1
 10171 ;; This function calls:
 10172 ;;		Nothing
 10173 ;; This function is called by:
 10174 ;;		Interrupt level 2
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text75
 10179  001FE0                     __ptext75:
 10180                           	callstack 0
 10181  001FE0                     _SMT1_PW_ACQ_ISR:
 10182                           	callstack 21
 10183  001FE0                     
 10184                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 10185  001FE0  0139               	movlb	57	; () banked
 10186  001FE2  9FA1               	bcf	161,7,b	;volatile
 10187  001FE4                     
 10188                           ; BSR set to: 57
 10189                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 10190  001FE4  013F               	movlb	63	; () banked
 10191  001FE6  5118               	movf	24,w,b	;volatile
 10192  001FE8  0100               	movlb	0	; () banked
 10193  001FEA  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10194  001FEC  013F               	movlb	63	; () banked
 10195  001FEE  5119               	movf	25,w,b	;volatile
 10196  001FF0  0100               	movlb	0	; () banked
 10197  001FF2  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10198  001FF4  013F               	movlb	63	; () banked
 10199  001FF6  511A               	movf	26,w,b	;volatile
 10200  001FF8  0100               	movlb	0	; () banked
 10201  001FFA  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10202  001FFC  6B7F               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 10203  001FFE                     
 10204                           ; BSR set to: 0
 10205                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 10206  001FFE  013C               	movlb	60	; () banked
 10207  002000  AB60               	btfss	96,5,b	;volatile
 10208  002002  EF05  F010         	goto	i2u379_41
 10209  002006  EF07  F010         	goto	i2u379_40
 10210  00200A                     i2u379_41:
 10211  00200A  EF10  F010         	goto	i2l5088
 10212  00200E                     i2u379_40:
 10213  00200E                     
 10214                           ; BSR set to: 60
 10215  00200E  0E01               	movlw	1
 10216  002010  0100               	movlb	0	; () banked
 10217  002012  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10218  002014  0E00               	movlw	0
 10219  002016  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10220  002018  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10221  00201A  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10222  00201C  EF19  F010         	goto	i2l863
 10223  002020                     i2l5088:
 10224                           
 10225                           ; BSR set to: 60
 10226  002020  0EFF               	movlw	255
 10227  002022  0100               	movlb	0	; () banked
 10228  002024  2778               	addwf	_smtWay& (0+255),f,b	;volatile
 10229  002026  0EFF               	movlw	255
 10230  002028  2379               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 10231  00202A  0EFF               	movlw	255
 10232  00202C  237A               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 10233  00202E  0EFF               	movlw	255
 10234  002030  237B               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 10235  002032                     i2l863:
 10236                           
 10237                           ; BSR set to: 0
 10238  002032  0011               	retfie		f
 10239  002034                     __end_of_SMT1_PW_ACQ_ISR:
 10240                           	callstack 0
 10241                           
 10242 ;; *************** function _SMT1_Overflow_ISR *****************
 10243 ;; Defined at:
 10244 ;;		line 213 in file "mcc_generated_files/smt1.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;		None
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;		None
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  1    wreg      void 
 10251 ;; Registers used:
 10252 ;;		wreg, status,2
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10262 ;;Total ram usage:        0 bytes
 10263 ;; Hardware stack levels used: 1
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		Interrupt level 2
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text76
 10272  002644                     __ptext76:
 10273                           	callstack 0
 10274  002644                     _SMT1_Overflow_ISR:
 10275                           	callstack 21
 10276  002644                     
 10277                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 10278  002644  0139               	movlb	57	; () banked
 10279  002646  9BA1               	bcf	161,5,b	;volatile
 10280  002648                     
 10281                           ; BSR set to: 57
 10282                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 10283  002648  0E00               	movlw	0
 10284  00264A  6E46               	movwf	_smtPeriod^0,c	;volatile
 10285  00264C  0E00               	movlw	0
 10286  00264E  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 10287  002650  0E00               	movlw	0
 10288  002652  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 10289  002654  0E00               	movlw	0
 10290  002656  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 10291                           
 10292                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 10293  002658  0E00               	movlw	0
 10294  00265A  0100               	movlb	0	; () banked
 10295  00265C  6F7C               	movwf	_smtDuty& (0+255),b	;volatile
 10296  00265E  0E00               	movlw	0
 10297  002660  6F7D               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 10298  002662  0E00               	movlw	0
 10299  002664  6F7E               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 10300  002666  0E00               	movlw	0
 10301  002668  6F7F               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 10302  00266A                     
 10303                           ; BSR set to: 0
 10304  00266A  0011               	retfie		f
 10305  00266C                     __end_of_SMT1_Overflow_ISR:
 10306                           	callstack 0
 10307                           
 10308                           ;
 10309                           ; Interrupt Vector Table @ 0x8
 10310                           ;
 10311                           
 10312                           	psect	ivt0x8
 10313  000008                     __pivt0x8:
 10314                           	callstack 0
 10315  000008                     ivt0x8_base:
 10316                           	callstack 0
 10317                           
 10318                           ; Vector 0 : SWINT
 10319  000008  0A04               	dw	_Default_ISR shr (0+2)
 10320                           
 10321                           ; Vector 1 : HLVD
 10322  00000A  0A04               	dw	_Default_ISR shr (0+2)
 10323                           
 10324                           ; Vector 2 : OSF
 10325  00000C  0A04               	dw	_Default_ISR shr (0+2)
 10326                           
 10327                           ; Vector 3 : CSW
 10328  00000E  0A04               	dw	_Default_ISR shr (0+2)
 10329                           
 10330                           ; Vector 4 : NVM
 10331  000010  0A04               	dw	_Default_ISR shr (0+2)
 10332                           
 10333                           ; Vector 5 : SCAN
 10334  000012  0A04               	dw	_Default_ISR shr (0+2)
 10335                           
 10336                           ; Vector 6 : CRC
 10337  000014  0A04               	dw	_Default_ISR shr (0+2)
 10338                           
 10339                           ; Vector 7 : IOC
 10340  000016  0A04               	dw	_Default_ISR shr (0+2)
 10341                           
 10342                           ; Vector 8 : INT0
 10343  000018  0A04               	dw	_Default_ISR shr (0+2)
 10344                           
 10345                           ; Vector 9 : ZCD
 10346  00001A  0A04               	dw	_Default_ISR shr (0+2)
 10347                           
 10348                           ; Vector 10 : AD
 10349  00001C  0A04               	dw	_Default_ISR shr (0+2)
 10350                           
 10351                           ; Vector 11 : ADT
 10352  00001E  0A04               	dw	_Default_ISR shr (0+2)
 10353                           
 10354                           ; Vector 12 : CMP1
 10355  000020  0A04               	dw	_Default_ISR shr (0+2)
 10356                           
 10357                           ; Vector 13 : SMT1
 10358  000022  0991               	dw	_SMT1_Overflow_ISR shr (0+2)
 10359                           
 10360                           ; Vector 14 : SMT1PRA
 10361  000024  0845               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 10362                           
 10363                           ; Vector 15 : SMT1PRW
 10364  000026  07F8               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 10365                           
 10366                           ; Vector 16 : DMA1SCNT
 10367  000028  0A04               	dw	_Default_ISR shr (0+2)
 10368                           
 10369                           ; Vector 17 : DMA1DCNT
 10370  00002A  0A04               	dw	_Default_ISR shr (0+2)
 10371                           
 10372                           ; Vector 18 : DMA1OR
 10373  00002C  0A04               	dw	_Default_ISR shr (0+2)
 10374                           
 10375                           ; Vector 19 : DMA1A
 10376  00002E  0A04               	dw	_Default_ISR shr (0+2)
 10377                           
 10378                           ; Vector 20 : SPI1RX
 10379  000030  0A04               	dw	_Default_ISR shr (0+2)
 10380                           
 10381                           ; Vector 21 : SPI1TX
 10382  000032  0A04               	dw	_Default_ISR shr (0+2)
 10383                           
 10384                           ; Vector 22 : SPI1
 10385  000034  0A04               	dw	_Default_ISR shr (0+2)
 10386                           
 10387                           ; Vector 23 : I2C1RX
 10388  000036  0A04               	dw	_Default_ISR shr (0+2)
 10389                           
 10390                           ; Vector 24 : I2C1TX
 10391  000038  0A04               	dw	_Default_ISR shr (0+2)
 10392                           
 10393                           ; Vector 25 : I2C1
 10394  00003A  0A04               	dw	_Default_ISR shr (0+2)
 10395                           
 10396                           ; Vector 26 : I2C1E
 10397  00003C  0A04               	dw	_Default_ISR shr (0+2)
 10398                           
 10399                           ; Vector 27 : U1RX
 10400  00003E  0889               	dw	_UART1_rx_vect_isr shr (0+2)
 10401                           
 10402                           ; Vector 28 : U1TX
 10403  000040  087A               	dw	_UART1_tx_vect_isr shr (0+2)
 10404                           
 10405                           ; Vector 29 : U1E
 10406  000042  0A04               	dw	_Default_ISR shr (0+2)
 10407                           
 10408                           ; Vector 30 : U1
 10409  000044  0A04               	dw	_Default_ISR shr (0+2)
 10410                           
 10411                           ; Vector 31 : TMR0
 10412  000046  0A04               	dw	_Default_ISR shr (0+2)
 10413                           
 10414                           ; Vector 32 : TMR1
 10415  000048  0A04               	dw	_Default_ISR shr (0+2)
 10416                           
 10417                           ; Vector 33 : TMR1G
 10418  00004A  0A04               	dw	_Default_ISR shr (0+2)
 10419                           
 10420                           ; Vector 34 : TMR2
 10421  00004C  0A04               	dw	_Default_ISR shr (0+2)
 10422                           
 10423                           ; Vector 35 : CCP1
 10424  00004E  0A04               	dw	_Default_ISR shr (0+2)
 10425                           
 10426                           ; Vector 36 : Undefined
 10427  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10428                           
 10429                           ; Vector 37 : NCO1
 10430  000052  0A04               	dw	_Default_ISR shr (0+2)
 10431                           
 10432                           ; Vector 38 : CWG1
 10433  000054  0A04               	dw	_Default_ISR shr (0+2)
 10434                           
 10435                           ; Vector 39 : CLC1
 10436  000056  0A04               	dw	_Default_ISR shr (0+2)
 10437                           
 10438                           ; Vector 40 : INT1
 10439  000058  0A04               	dw	_Default_ISR shr (0+2)
 10440                           
 10441                           ; Vector 41 : CMP2
 10442  00005A  0A04               	dw	_Default_ISR shr (0+2)
 10443                           
 10444                           ; Vector 42 : DMA2SCNT
 10445  00005C  0A04               	dw	_Default_ISR shr (0+2)
 10446                           
 10447                           ; Vector 43 : DMA2DCNT
 10448  00005E  0A04               	dw	_Default_ISR shr (0+2)
 10449                           
 10450                           ; Vector 44 : DMA2OR
 10451  000060  0A04               	dw	_Default_ISR shr (0+2)
 10452                           
 10453                           ; Vector 45 : DMA2A
 10454  000062  0A04               	dw	_Default_ISR shr (0+2)
 10455                           
 10456                           ; Vector 46 : I2C2RX
 10457  000064  0A04               	dw	_Default_ISR shr (0+2)
 10458                           
 10459                           ; Vector 47 : I2C2TX
 10460  000066  0A04               	dw	_Default_ISR shr (0+2)
 10461                           
 10462                           ; Vector 48 : I2C2
 10463  000068  0A04               	dw	_Default_ISR shr (0+2)
 10464                           
 10465                           ; Vector 49 : I2C2E
 10466  00006A  0A04               	dw	_Default_ISR shr (0+2)
 10467                           
 10468                           ; Vector 50 : U2RX
 10469  00006C  0A04               	dw	_Default_ISR shr (0+2)
 10470                           
 10471                           ; Vector 51 : U2TX
 10472  00006E  0A04               	dw	_Default_ISR shr (0+2)
 10473                           
 10474                           ; Vector 52 : U2E
 10475  000070  0A04               	dw	_Default_ISR shr (0+2)
 10476                           
 10477                           ; Vector 53 : U2
 10478  000072  0A04               	dw	_Default_ISR shr (0+2)
 10479                           
 10480                           ; Vector 54 : TMR3
 10481  000074  0A04               	dw	_Default_ISR shr (0+2)
 10482                           
 10483                           ; Vector 55 : TMR3G
 10484  000076  0A04               	dw	_Default_ISR shr (0+2)
 10485                           
 10486                           ; Vector 56 : TMR4
 10487  000078  08A6               	dw	_TMR4_ISR shr (0+2)
 10488                           
 10489                           ; Vector 57 : CCP2
 10490  00007A  0A04               	dw	_Default_ISR shr (0+2)
 10491                           
 10492                           ; Vector 58 : Undefined
 10493  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10494                           
 10495                           ; Vector 59 : CWG2
 10496  00007E  0A04               	dw	_Default_ISR shr (0+2)
 10497                           
 10498                           ; Vector 60 : CLC2
 10499  000080  0A04               	dw	_Default_ISR shr (0+2)
 10500                           
 10501                           ; Vector 61 : INT2
 10502  000082  0A04               	dw	_Default_ISR shr (0+2)
 10503                           
 10504                           ; Vector 62 : Undefined
 10505  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10506                           
 10507                           ; Vector 63 : Undefined
 10508  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10509                           
 10510                           ; Vector 64 : Undefined
 10511  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10512                           
 10513                           ; Vector 65 : Undefined
 10514  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10515                           
 10516                           ; Vector 66 : Undefined
 10517  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10518                           
 10519                           ; Vector 67 : Undefined
 10520  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10521                           
 10522                           ; Vector 68 : Undefined
 10523  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10524                           
 10525                           ; Vector 69 : Undefined
 10526  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10527                           
 10528                           ; Vector 70 : TMR5
 10529  000094  0A04               	dw	_Default_ISR shr (0+2)
 10530                           
 10531                           ; Vector 71 : TMR5G
 10532  000096  0904               	dw	_TMR5_GATE_ISR shr (0+2)
 10533                           
 10534                           ; Vector 72 : TMR6
 10535  000098  0A04               	dw	_Default_ISR shr (0+2)
 10536                           
 10537                           ; Vector 73 : CCP3
 10538  00009A  08B4               	dw	_CCP3_CaptureISR shr (0+2)
 10539                           
 10540                           ; Vector 74 : CWG3
 10541  00009C  0A04               	dw	_Default_ISR shr (0+2)
 10542                           
 10543                           ; Vector 75 : CLC3
 10544  00009E  0A04               	dw	_Default_ISR shr (0+2)
 10545                           
 10546                           ; Vector 76 : Undefined
 10547  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10548                           
 10549                           ; Vector 77 : Undefined
 10550  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10551                           
 10552                           ; Vector 78 : Undefined
 10553  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10554                           
 10555                           ; Vector 79 : Undefined
 10556  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10557                           
 10558                           ; Vector 80 : CCP4
 10559  0000A8  08C2               	dw	_CCP4_CaptureISR shr (0+2)
 10560                           
 10561                           ; Vector 81 : CLC4
 10562  0000AA  0A04               	dw	_Default_ISR shr (0+2)
 10563  0000AC                     ivt0x8_undefint:
 10564                           	callstack 0
 10565  0000AC  00FF               	reset	
 10566  0000                     
 10567                           	psect	text77
 10568  000000                     __ptext77:
 10569                           	callstack 0
 10570  000000                     
 10571                           	psect	rparam
 10572  0000                     
 10573                           	psect	idloc
 10574                           
 10575                           ;Config register IDLOC0 @ 0x200000
 10576                           ;	unspecified, using default values
 10577  200000                     	org	2097152
 10578  200000  0FFF               	dw	4095
 10579                           
 10580                           ;Config register IDLOC1 @ 0x200002
 10581                           ;	unspecified, using default values
 10582  200002                     	org	2097154
 10583  200002  0FFF               	dw	4095
 10584                           
 10585                           ;Config register IDLOC2 @ 0x200004
 10586                           ;	unspecified, using default values
 10587  200004                     	org	2097156
 10588  200004  0FFF               	dw	4095
 10589                           
 10590                           ;Config register IDLOC3 @ 0x200006
 10591                           ;	unspecified, using default values
 10592  200006                     	org	2097158
 10593  200006  0FFF               	dw	4095
 10594                           
 10595                           ;Config register IDLOC4 @ 0x200008
 10596                           ;	unspecified, using default values
 10597  200008                     	org	2097160
 10598  200008  0FFF               	dw	4095
 10599                           
 10600                           ;Config register IDLOC5 @ 0x20000A
 10601                           ;	unspecified, using default values
 10602  20000A                     	org	2097162
 10603  20000A  0FFF               	dw	4095
 10604                           
 10605                           ;Config register IDLOC6 @ 0x20000C
 10606                           ;	unspecified, using default values
 10607  20000C                     	org	2097164
 10608  20000C  0FFF               	dw	4095
 10609                           
 10610                           ;Config register IDLOC7 @ 0x20000E
 10611                           ;	unspecified, using default values
 10612  20000E                     	org	2097166
 10613  20000E  0FFF               	dw	4095
 10614                           
 10615                           	psect	config
 10616                           
 10617                           ;Config register CONFIG1L @ 0x300000
 10618                           ;	External Oscillator Selection
 10619                           ;	FEXTOSC = OFF, Oscillator not enabled
 10620                           ;	Reset Oscillator Selection
 10621                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 10622  300000                     	org	3145728
 10623  300000  8C                 	db	140
 10624                           
 10625                           ;Config register CONFIG1H @ 0x300001
 10626                           ;	Clock out Enable bit
 10627                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10628                           ;	PRLOCKED One-Way Set Enable bit
 10629                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10630                           ;	Clock Switch Enable bit
 10631                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10632                           ;	Fail-Safe Clock Monitor Enable bit
 10633                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10634  300001                     	org	3145729
 10635  300001  FF                 	db	255
 10636                           
 10637                           ;Config register CONFIG2L @ 0x300002
 10638                           ;	MCLR Enable bit
 10639                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10640                           ;	Power-up timer selection bits
 10641                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10642                           ;	Multi-vector enable bit
 10643                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 10644                           ;	IVTLOCK bit One-way set enable bit
 10645                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10646                           ;	Low Power BOR Enable bit
 10647                           ;	LPBOREN = OFF, ULPBOR disabled
 10648                           ;	Brown-out Reset Enable bits
 10649                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10650  300002                     	org	3145730
 10651  300002  FF                 	db	255
 10652                           
 10653                           ;Config register CONFIG2H @ 0x300003
 10654                           ;	Brown-out Reset Voltage Selection bits
 10655                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10656                           ;	ZCD Disable bit
 10657                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10658                           ;	PPSLOCK bit One-Way Set Enable bit
 10659                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10660                           ;	Stack Full/Underflow Reset Enable bit
 10661                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10662                           ;	Debugger Enable bit
 10663                           ;	DEBUG = OFF, Background debugger disabled
 10664                           ;	Extended Instruction Set Enable bit
 10665                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10666  300003                     	org	3145731
 10667  300003  FF                 	db	255
 10668                           
 10669                           ;Config register CONFIG3L @ 0x300004
 10670                           ;	WDT Period selection bits
 10671                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10672                           ;	WDT operating mode
 10673                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10674  300004                     	org	3145732
 10675  300004  9F                 	db	159
 10676                           
 10677                           ;Config register CONFIG3H @ 0x300005
 10678                           ;	WDT Window Select bits
 10679                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10680                           ;	WDT input clock selector
 10681                           ;	WDTCCS = SC, Software Control
 10682  300005                     	org	3145733
 10683  300005  FF                 	db	255
 10684                           
 10685                           ;Config register CONFIG4L @ 0x300006
 10686                           ;	Boot Block Size selection bits
 10687                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10688                           ;	Boot Block enable bit
 10689                           ;	BBEN = OFF, Boot block disabled
 10690                           ;	Storage Area Flash enable bit
 10691                           ;	SAFEN = OFF, SAF disabled
 10692                           ;	Application Block write protection bit
 10693                           ;	WRTAPP = OFF, Application Block not write protected
 10694  300006                     	org	3145734
 10695  300006  FF                 	db	255
 10696                           
 10697                           ;Config register CONFIG4H @ 0x300007
 10698                           ;	Configuration Register Write Protection bit
 10699                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 10700                           ;	Boot Block Write Protection bit
 10701                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 10702                           ;	Data EEPROM Write Protection bit
 10703                           ;	WRTD = OFF, Data EEPROM not write-protected
 10704                           ;	SAF Write protection bit
 10705                           ;	WRTSAF = OFF, SAF not Write Protected
 10706                           ;	Low Voltage Programming Enable bit
 10707                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10708  300007                     	org	3145735
 10709  300007  FF                 	db	255
 10710                           
 10711                           ;Config register CONFIG5L @ 0x300008
 10712                           ;	PFM and Data EEPROM Code Protection bit
 10713                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10714  300008                     	org	3145736
 10715  300008  FF                 	db	255
 10716                           
 10717                           ;Config register CONFIG5H @ 0x300009
 10718                           ;	unspecified, using default values
 10719  300009                     	org	3145737
 10720  300009  FF                 	db	255
 10721                           tosu	equ	0x3FFF
 10722                           tosh	equ	0x3FFE
 10723                           tosl	equ	0x3FFD
 10724                           stkptr	equ	0x3FFC
 10725                           pclatu	equ	0x3FFB
 10726                           pclath	equ	0x3FFA
 10727                           pcl	equ	0x3FF9
 10728                           tblptru	equ	0x3FF8
 10729                           tblptrh	equ	0x3FF7
 10730                           tblptrl	equ	0x3FF6
 10731                           tablat	equ	0x3FF5
 10732                           prodh	equ	0x3FF4
 10733                           prodl	equ	0x3FF3
 10734                           indf0	equ	0x3FEF
 10735                           postinc0	equ	0x3FEE
 10736                           postdec0	equ	0x3FED
 10737                           preinc0	equ	0x3FEC
 10738                           plusw0	equ	0x3FEB
 10739                           fsr0h	equ	0x3FEA
 10740                           fsr0l	equ	0x3FE9
 10741                           wreg	equ	0x3FE8
 10742                           indf1	equ	0x3FE7
 10743                           postinc1	equ	0x3FE6
 10744                           postdec1	equ	0x3FE5
 10745                           preinc1	equ	0x3FE4
 10746                           plusw1	equ	0x3FE3
 10747                           fsr1h	equ	0x3FE2
 10748                           fsr1l	equ	0x3FE1
 10749                           bsr	equ	0x3FE0
 10750                           indf2	equ	0x3FDF
 10751                           postinc2	equ	0x3FDE
 10752                           postdec2	equ	0x3FDD
 10753                           preinc2	equ	0x3FDC
 10754                           plusw2	equ	0x3FDB
 10755                           fsr2h	equ	0x3FDA
 10756                           fsr2l	equ	0x3FD9
 10757                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         81
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160     45     131
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _loop->_startAccell
    _startAccell->_calcSteering
    _calcSteering->___fltol
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48482
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   47335
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   18127
                                             41 BANK0      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0    8864
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    3320
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     120
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     334
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    8062
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    3402
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    7068
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2     982
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     272
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     778
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     697
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3053
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     756
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_tx_vect_isr                                    1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Transmit_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _UART1_rx_vect_isr                                    1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (7) _UART1_Receive_ISR                                    0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultOverrunErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultFramingErrorHandler                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _UART1_DefaultErrorHandler                            0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (8) _UART1_RxDataHandler                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR4_10msISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (11) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (12) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___xxtofl
       ___awdiv (ARG)
     _calcMotorPow
       ___awdiv
       ___flmul
         ___awdiv (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _getBatteryVoltage
       _ADCC_GetSingleConversion
     _getCurve
     _getReverse
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2D      83       5       81.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      32        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 18:41:01 2024

                             _CCP4_Initialize 2536                        ??_CCP3_DefaultCallBack 0003  
                                 _startAccell 14E6                                            l72 2782  
                                          l75 268E                                            l69 20C8  
                                ___awdiv@sign 0019                             ??_TMR5_WriteTimer 000B  
                 __size_of_PWM6_LoadDutyValue 0034                                           l404 207E  
                                         l520 2112                                           l441 2590  
                                         l362 27BE                                           l371 27AA  
                                         l188 1CBE                                           l284 1EEE  
                                         l365 27D2                                           l359 27C8  
                                         l368 27B4                                           l712 240C  
                                         l449 27FA                                           l482 2562  
                                         l723 2722                                           l555 27DC  
                                         l644 25BC                                           l740 23A4  
                                         l709 273A                                           l581 2296  
                                         l726 23D8                                           l479 27F0  
                                         l751 2752                                           l737 276A  
                                         l754 2370                                           l923 26EE  
                                         l695 27E6                                           l795 24A4  
                                         l893 25E8                                           _GIE 01FE97  
                                         _PR2 003FAB                                           _PR4 003F9F  
                     __size_of_PMD_Initialize 0024                               _TMR2_Initialize 26D4  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 27E8  
                                ___flmul@aexp 00A0                                  ___flmul@bexp 00A5  
                          _UART1_Transmit_ISR 215E                                  ___flmul@sign 009F  
                                ___flmul@temp 00AA                                  ___flmul@prod 00A6  
                     __end_of_CCP4_CaptureISR 233E                                  ___fltol@exp1 00C1  
                                        l1042 1FDE                                          l2011 09C2  
                                        l1220 1A48                                          l2014 0854  
                                        l1054 2454                                          l2007 063A  
                                        l2024 0984                                          l2016 08CC  
                                        l2017 08BA                                          l1057 2474  
                                        l1306 1A1A                                          l1314 0C8A  
                                        l2051 11FC                                          l1307 1A2A  
                                        l1235 1B12                                          l1244 1F82  
                                        l2062 1194                                          l1334 0E3E  
                                        l2055 1138                                          l1247 2792  
                                        l1319 0D1C                                          l2048 10A0  
                                        l1272 0BFE                                          l1264 1616  
                                        l1355 1048                               _timer3ReloadVal 00CE  
                                        l1364 14E4                                          l1292 0C0E  
                                        l1380 1242                                          l1373 1BF4  
                                        l1381 126A                                          l4110 104C  
                                        l1286 0B5A                                          l1390 13A0  
                                        l1624 1E48                                          l4112 105C  
                                        l1472 1722                                          l4200 244C  
                                        l1377 120A                                          l4130 1122  
                                        l4122 10DA                                          l4114 106A  
                                        l4210 1B14                                          l4202 2450  
                                        l1379 122E                                          l4140 11A2  
                                        l4132 112E                                          l4124 10E2  
                                        l4116 10B0                                          l4212 1B30  
                                        l4220 1B70                                          l4204 2452  
                                        l4150 11EA                                          l4142 11A4  
                                        l4134 116A                                          l4126 10EE  
                                        l4118 10C6                                          l4222 1B8C  
                                        l4230 1BDC                                          l4214 1B4C  
                                        l4206 2462                                          l1663 192E  
                                        l2800 2070                                          l4160 27C0  
                                        l4152 11EC                                          l4144 11A8  
                                        l4136 1176                                          l4128 1120  
                                        l4224 1BA8                                          l4216 1B54  
                                        l1921 02A2                                          l2810 207A  
                                        l2802 2072                                          l4162 27B6  
                                        l1690 182A                                          l4146 11CC  
                                        l4138 1184                                          l4226 1BB0  
                                        l4218 1B60                                          l1930 0572  
                                        l1922 0290                                          l1658 18E8  
                                        l1923 0256                                          l2812 207C  
                                        l2804 2074                                          l2820 1C18  
                                        l4180 27D4                                          l4164 27CA  
                                        l4156 27AC                                          l5300 062A  
                                        l4148 11DC                                          l4228 1BBC  
                                        l6020 0BD8                                          l4500 182C  
                                        l2806 2076                                          l2830 1C74  
                                        l2822 1C20                                          l2814 266C  
                                        l4158 27A2                                          l5310 067E  
                                        l5302 064A                                          l6022 0FC0  
                                        l4510 18B6                                          l4502 185A  
                                        l6014 0CEE                                          l4176 27F2  
                                        l2808 2078                                          l2840 276C  
                                        l2832 1C7A                                          l2824 1C6E  
                                        l2816 1BF6                                          l4600 1E94  
                                        l5320 06D6                                          l5312 0688  
                                        l5304 065A                                          l5400 173C  
                                        l4512 18C8                                          l4504 186A  
                                        l3800 2372                                          l6016 0E00  
                                        l4530 258E                                          l4522 2564  
                                        l4178 27E8                                          l2834 1C7C  
                                        l2826 1C70                                          l2818 1C16  
                                        l4610 1EA8                                          l4602 1E98  
                                        l3810 1DA0                                          l5330 0720  
                                        l5322 06E2                                          l5314 06A2  
                                        l5410 178C                                          l4290 1F1E  
                                        l1938 03BC                                          l4514 18D6  
                                        l4506 1898                                          l3802 233E  
                                        l6018 12BA                                          l1947 048C  
                                        l2852 1F84                                          l4524 2574  
                                        l2836 1C7E                                          l2828 1C72  
                                        l2908 2754                                          l2924 2724  
                                        l4196 27DE                                          l4540 25B8  
                                        l4532 2592                                          l4612 1EB4  
                                        l4604 1E9C                                          l3820 1DC6  
                                        l3812 1DA4                                          l3804 1D86  
                                        l5340 078E                                          l5332 0730  
                                        l5324 06F0                                          l5316 06AE  
                                        l5308 066E                                          l5420 17B6  
                                        l5412 1790                                          l5404 1750  
                                        l3900 163E                                          l4292 1F4E  
                                        l4284 1EF0                                          l1948 047A  
                                        l5500 00D0                                          l4700 0B36  
                                        l4516 1926                                          l4508 18A8  
                                        l4526 2580                                          l4550 2560  
                                        l4542 2536                                          l2790 2048  
                                        l2838 1C80                                          l2870 2498  
                                        l4534 25A6                                          l4614 1EC0  
                                        l4606 1EA0                                          l3830 1DFC  
                                        l3822 1DD8                                          l3814 1DB2  
                                        l3806 1D8A                                          l5350 083A  
                                        l5342 07AE                                          l5334 074E  
                                        l5326 0700                                          l5318 06CA  
                                        l5270 0582                                          l5430 17DE  
                                        l5422 17C0                                          l5414 179E  
                                        l5406 177A                                          l3910 1686  
                                        l3902 164C                                          l4294 1F7A  
                                        l4286 1EF8                                          l5502 00E0  
                                        l5510 010A                                          l4198 2446  
                                        l4630 2784                                          l4710 0B98  
                                        l4702 0B46                                          l4518 192C  
                                        l4528 258A                                          l4544 2546  
                                        l2792 205E                                          l2784 2034  
                                        l2872 249C                                          l2864 2476  
                                        l2880 26D4                                          l4552 2260  
                                        l4536 25AA                                          l4560 20CA  
                                        l4616 1EEA                                          l4608 1EA4  
                                        l3832 1E12                                          l3824 1DE0  
                                        l3840 1E28                                          l3816 1DBA  
                                        l3808 1D98                                          l5360 0876  
                                        l5352 0844                                          l5344 07D8  
                                        l5336 075E                                          l5328 0710  
                                        l5280 05C2                                          l5272 0590  
                                        l5432 17EA                                          l5424 17CA  
                                        l5408 177C                                          l3920 16D0  
                                        l3912 168E                                          l3904 165C  
                                        l4288 1F0E                                          l5600 02D4  
                                        l5520 013A                                          l5512 011A  
                                        l5504 00F0                                          l4704 0B52  
                                        l4546 2552                                          l2794 2060  
                                        l2786 2036                                          l2874 249E  
                                        l2866 2494                                          l2882 26E0  
                                        l4554 2274                                          l4538 25AC  
                                        l4570 2102                                          l4562 20DE  
                                        l3842 1E38                                          l3834 1E1A  
                                        l3826 1DE8                                          l3818 1DBE  
                                        l5370 08E8                                          l5362 0884  
                                        l5354 0852                                          l5346 080E  
                                        l5338 077E                                          l5290 05F2  
                                        l5282 05C8                                          l5274 0592  
                                        l5434 17FA                                          l3930 1702  
                                        l3922 16E0                                          l3914 169A  
                                        l3906 1660                                          l3850 23A6  
                                        l5610 0310                                          l5602 02E4  
                                        l5530 017A                                          l5522 0148  
                                        l5514 0120                                          l5506 0100  
                                        l4714 0BA8                                          l4706 0B6A  
                                        l4722 0BC4                                          l5450 0CCE  
                                        l5442 0C10                                          l4548 255C  
                                        l2796 206A                                          l2788 203E  
                                        l2876 24A0                                          l2868 2496  
                                        l2884 26E6                                          l4556 2278  
                                        l4572 210E                                          l4564 20E2  
                                        l4580 1E6A                                          l3844 1E40  
                                        l3836 1E1C                                          l3828 1DF6  
                                        l5380 0952                                          l5372 08F6  
                                        l5364 08B2                                          l5356 0864  
                                        l5348 081C                                          l5292 05F4  
                                        l5284 05D8                                          l5276 05A2  
                                        l5268 0574                                          l5436 180A  
                                        l3932 1712                                          l3924 16E2  
                                        l3916 16A8                                          l3908 1670  
                                        l5620 0356                                          l5612 031E  
                                        l5604 02F2                                          l5540 01B4  
                                        l5532 017C                                          l5524 014A  
                                        l5516 0132                                          l5508 0102  
                                        l4716 0BB8                                          l4708 0B7C  
                                        l4740 1974                                          l4732 1930  
                                        l3860 1286                                          l3852 11FE  
                                        l5460 0D48                                          l5444 0C8A  
                                        l5700 14FA                                          l2798 206E  
                                        l2886 273C                                          l2878 270C  
                                        l4558 2292                                          l4566 20FC  
                                        l4590 1E80                                          l4582 1E70  
                                        l4574 1E4A                                          l3838 1E22  
                                        l5390 09A8                                          l5382 096C  
                                        l5374 0920                                          l5358 0872  
                                        l5294 0604                                          l5286 05DE  
                                        l5278 05B2                                          l5438 181A  
                                        l3926 16EC                                          l3918 16B2  
                                        l5630 03D2                                          l5622 038A  
                                        l5614 0320                                          l5606 0300  
                                        l5550 01C8                                          l5542 01B8  
                                        l5526 015A                                          l5534 0184  
                                        l5518 0134                                          l4670 0A1A  
                                        l4750 19BE                                          l4742 197E  
                                        l4734 1946                                          l3870 1304  
                                        l3862 1292                                          l3854 124A  
                                        l5462 0D78                                          l5446 0CA6  
                                        l5454 0CDA                                          l5710 1596  
                                        l5702 1530                                          l4568 2100  
                                        l4592 1E84                                          l4584 1E74  
                                        l4576 1E4E                                          l5384 0988  
                                        l5392 09AE                                          l5368 08DC  
                                        l5376 0924                                          l5296 0614  
                                        l5288 05E4                                          l3928 16F2  
                                        l3848 23DA                                          l5800 1474  
                                        l5640 040E                                          l5632 03E2  
                                        l5624 038C                                          l5616 032A  
                                        l5608 030C                                          l5560 01DC  
                                        l5552 01CC                                          l5544 01BC  
                                        l5536 0194                                          l5528 016A  
                                        l4680 0A8E                                          l4672 0A30  
                                        l4664 09C4                                          l4760 1A16  
                                        l4752 19D4                                          l4744 1996  
                                        l4736 1950                                          l3880 135C  
                                        l3872 1310                                          l3856 1272  
                                        l5472 0DC6                                          l5464 0D8C  
                                        l5456 0D20                                          l5480 0DEC  
                                        l5448 0CB2                                          l5720 15F8  
                                        l5704 1564                                          l5712 15A6  
                                        l2898 25BE                                          l4594 1E88  
                                        l4586 1E78                                          l4578 1E5A  
                                        l5394 09B2                                          l5386 0998  
                                        l5378 093E                                          l5298 0624  
                                        l5810 14C8                                          l5802 1478  
                                        l5650 043A                                          l5642 0410  
                                        l5626 039C                                          l5618 0330  
                                        l5570 01F0                                          l5562 01E0  
                                        l5554 01D0                                          l5546 01C0  
                                        l5538 01A6                                          l5730 0E4E  
                                        l4690 0AD0                                          l4682 0A9E  
                                        l4674 0A40                                          l4666 09E2  
                                        l4762 1A16                                          l4754 19DC  
                                        l4746 199A                                          l4738 1962  
                                        l3882 1378                                          l3874 132C  
                                        l3858 127E                                          l3866 12A6  
                                        l5474 0DD8                                          l5466 0DA0  
                                        l5458 0D34                                          l5722 15FC  
                                        l5714 15D8                                          l5706 1580  
                                        l4596 1E8C                                          l4588 1E7C  
                                        l4860 2094                                          l5388 09A6  
                                        l3892 1618                                          l5812 14D0  
                                        l5804 1484                                          l5660 0472  
                                        l5644 041E                                          l5636 03F6  
                                        l5652 043C                                          l5628 03AC  
                                        l5580 024E                                          l5564 01E4  
                                        l5556 01D4                                          l5548 01C4  
                                        l5572 01F4                                          l5740 0EA2  
                                        l5732 0E64                                          l4692 0AE2  
                                        l4684 0AAE                                          l4676 0A5C  
                                        l4668 09FE                                          l4748 19AC  
                                        l4756 19E0                                          l3884 1380  
                                        l3876 1334                                          l3868 12E8  
                                        l5468 0DB2                                          l5724 160E  
                                        l5716 15E2                                          l5708 1590  
                                        l5820 1A68                                          l4598 1E90  
                                        l4870 20B0                                          l4862 209C  
                                        l5398 1724                                          l3894 161C  
                                        l5814 14DC                                          l5806 14A0  
                                        l5670 04F0                                          l5646 0426  
                                        l5638 0400                                          l5654 044A  
                                        l5590 0284                                          l5582 0264  
                                        l5574 01F8                                          l5566 01E8  
                                        l5558 01D8                                          l5494 00B2  
                                        l5750 0EE0                                          l5742 0EAE  
                                        l5734 0E68                                          l4694 0AF8  
                                        l4686 0ABA                                          l4678 0A78  
                                        l4758 19F6                                          l3886 1390  
                                        l3878 1350                                          l5726 1612  
                                        l5718 15EE                                          l5830 1A98  
                                        l5822 1A6C                                          l4872 20B4  
                                        l4864 20A0                                          l4856 2080  
                                        l3896 162A                                          l5808 14AC  
                                        l5680 0536                                          l5664 049C  
                                        l5672 04F2                                          l5656 044E  
                                        l5648 042A                                          l5592 028E  
                                        l5584 0270                                          l5576 0222  
                                        l5568 01EC                                          l5496 00C0  
                                        l5760 0FA0                                          l5752 0EF6  
                                        l5736 0E84                                          l5744 0EBA  
                                        l5728 0E40                                          l4696 0B0A  
                                        l4688 0AC0                                          l5840 1AC4  
                                        l5832 1A9C                                          l5824 1A70  
                                        l5816 1A2C                                          l4874 20BC  
                                        l4866 20A4                                          l4858 2090  
                                        l3898 163A                                          l5690 0560  
                                        l5682 0544                                          l5674 0502  
                                        l5666 04A8                                          l5658 045C  
                                        l5594 02B0                                          l5586 0274  
                                        l5578 023E                                          l5498 00CE  
                                        l5770 1014                                          l5754 0F88  
                                        l5746 0EC6                                          l5738 0E8C  
                                        l4698 0B20                                          l5850 1B02  
                                        l5842 1AC8                                          l5834 1AA4  
                                        l5826 1A90                                          l5818 1A56  
                                        l4876 20C0                                          l4868 20A8  
                                        l5692 0562                                          l5684 054A  
                                        l5676 0512                                          l5668 04B6  
                                        l5596 02C0                                          l5588 0282  
                                        l5772 101C                                          l5756 0F94  
                                        l5748 0EDC                                          l5852 1B06  
                                        l5844 1AD6                                          l5836 1AAC  
                                        l5828 1A94                                          l5860 26BA  
                                        l5790 13C8                                          l5686 054C  
                                        l5678 0532                                          l5774 1038  
                                        l5766 0FAC                                          l5854 1B0A  
                                        l5846 1AE6                                          l5838 1AB2  
                                        l5862 26C8                                          l5792 13C8  
                                        l5784 13A2                                          l5688 0552  
                                        l5776 1040                                          l5768 0FF6  
                                        l5696 14E6                                          l5848 1AFA  
                                        l5856 26B4                                          l5794 1444  
                                        l5786 13AE                                          l5698 14F6  
                                        l5858 26B8                                          l5796 1458  
                                        l5788 13BC                                          l5798 1460  
                                        u2000 1E38                                          u2001 1E34  
                                        u2100 16A8                                          u2101 16A4  
                                        u2110 16D0                                          u2030 1304  
                                        u2111 16CC                                          u2015 23FE  
                                        u2031 1300                                          u2120 1702  
                                        u2040 132C                                          u1145 2068  
                                        u2121 16FE                                          u2025 23CA  
                                        u2041 1328                                          u1146 206A  
                                        u3010 185A                                          u2050 1350  
                                        u3011 1856                                          u2051 134C  
                                        u3100 0A1A                                          u3020 1898  
                                        u2060 1378                                          u3101 0A16  
                                        u3021 1894                                          u2061 1374  
                                        _LATA 003FBA                                          u2070 162A  
                                        u3110 0A30                                          u3030 18B6  
                                        _LATB 003FBB                                          u2071 1626  
                                        u3111 0A2C                                          u3031 18B2  
                                        _LATC 003FBC                                          u4000 09A6  
                                        u2400 106A                                          u2080 164C  
                                        u3200 0B20                                          u3120 0A5C  
                                        u3040 18D6                                          _LATD 003FBD  
                                        u4001 09A2                                          u2401 1066  
                                        u2081 1648                                          u3201 0B1C  
                                        u3121 0A58                                          u3041 18D2  
                                        _LATE 003FBE                                          u4010 173C  
                                        u2410 10C6                                          u2090 1686  
                                        u3210 0B36                                          u3130 0A78  
                                        u3050 1926                                          u4011 1738  
                                        u2411 10C2                                          u2091 1682  
                                        u3211 0B32                                          u3131 0A74  
                                        u3051 1922                                          u4020 1770  
                                        u2420 111C                                          u3220 0B46  
                                        u3140 0A8E                                          u3300 19AC  
                                        u4100 0DB2                                          u2421 1118  
                                        u3221 0B42                                          u3141 0A8A  
                                        u3301 19A8                                          u4101 0DAE  
                                        u4030 179E                                          u2430 1166  
                                        u2510 2462                                          u3230 0B7C  
                                        u3150 0AAE                                          u3310 19BE  
                                        u4110 0DD8                                          u4031 179A  
                                        u2431 1162                                          u2511 245E  
                                        u3231 0B78                                          u3151 0AAA  
                                        u3311 19BA                                          u4111 0DD4  
                                        u4040 17B2                                          u2440 1184  
                                        u2600 1F0E                                          u2520 1B30  
                                        u4200 01B4                                          u4120 00CE  
                                        u3240 0B98                                          u3160 0AD0  
                                        u3320 19D4                                          u4041 17AE  
                                        u4025 1766                                          u2441 1180  
                                        u2601 1F0A                                          u2521 1B2C  
                                        u4201 01B0                                          u4121 00CA  
                                        u3241 0B94                                          u3161 0ACC  
                                        u3321 19D0                                          u4050 17DA  
                                        u2450 1194                                          u2610 1F1E  
                                        u2530 1B4C                                          u4210 0222  
                                        u4130 00E0                                          u3250 0BB8  
                                        u3170 0AE2                                          u3090 09FE  
                                        u3330 19F6                                          _T2PR 003FAB  
                                        u4051 17D6                                          u2451 1190  
                                        u2611 1F1A                                          u2531 1B48  
                                        u4211 021E                                          u4131 00DC  
                                        u3251 0BB4                                          u3171 0ADE  
                                        u3091 09FA                                          u3331 19F2  
                                        u4060 17FA                                          u2460 11A2  
                                        u2540 1B8C                                          u4300 0300  
                                        u4220 023A                                          u4140 00F0  
                                        u3180 0AF8                                          u3340 1A12  
                                        u3260 1946                                          u4061 17F6  
                                        u2461 119E                                          u2541 1B88  
                                        u4301 02FC                                          u4221 0234  
                                        u4141 00EC                                          u3181 0AF4  
                                        u3341 1A0E                                          u3261 1942  
                                        u4070 180A                                          u2470 11DC  
                                        u2390 105C                                          u2550 1BA8  
                                        u4310 031E                                          u4230 023C  
                                        u4150 0132                                          u3190 0B0A  
                                        u3270 1962                                          u4071 1806  
                                        u2471 11D8                                          u2391 1058  
                                        u2551 1BA4                                          u4311 031A  
                                        u4151 012E                                          u3191 0B06  
                                        u3271 195E                                          u2480 11EA  
                                        u4400 045C                                          u4320 0356  
                                        u4240 0264                                          u4160 0148  
                                        u3280 1974                                          u4080 0CA6  
                                        u2481 11E6                                          u4401 0458  
                                        u4321 0352                                          u4241 0260  
                                        u4161 0144                                          u3281 1970  
                                        u4081 0CA2                                          u4410 0472  
                                        u4330 039C                                          u4250 0282  
                                        u4170 015A                                          u3290 1996  
                                        u4090 0CCE                                          _T4PR 003F9F  
                                        u4411 046E                                          u4331 0398  
                                        u4251 027E                                          u4171 0156  
                                        u3291 1992                                          u4091 0CCA  
                                        u4500 0560                                          u4420 0488  
                                        u4340 03D2                                          u4260 02A2  
                                        u4180 016A                                          u4501 055C  
                                        u4421 0484                                          u4341 03CE  
                                        u4261 029E                                          u4181 0166  
                                        u1950 1D98                                          u4430 049C  
                                        u4350 03E2                                          u4270 02B0  
                                        u4190 01A6                                          u4510 15A6  
                                        u1951 1D94                                          u4431 0498  
                                        u4351 03DE                                          u4271 02AC  
                                        u4191 01A2                                          u1935 2396  
                                        u4511 15A2                                          u1960 1DB2  
                                        u4440 04B6                                          u4360 040E  
                                        u4280 02C0                                          u4600 1038  
                                        u4520 15D8                                          u1961 1DAE  
                                        u4441 04B2                                          u4361 040A  
                                        u4281 02BC                                          u4601 1034  
                                        u1945 2362                                          u4521 15D4  
                                        u1970 1DD8                                          u4610 1458  
                                        u4450 04F0                                          u4370 041E  
                                        u4290 02F2                                          u4530 160E  
                                        u1971 1DD4                                          u4611 1454  
                                        u4451 04EC                                          u4371 041A  
                                        u4291 02EE                                          u4531 160A  
                                        u1980 1DF6                                          u3900 07F8  
                                        u3820 0590                                          u4620 1474  
                                        u4460 0502                                          u4380 043A  
                                        u4540 0E64                                          _PMD0 0039C0  
                                        u1981 1DF2                                          u3821 058C  
                                        u4621 1470                                          u4461 04FE  
                                        u4381 0436                                          u4541 0E60  
                                        _PMD1 0039C1                                          u1990 1E12  
                                        u3910 0852                                          u3830 05A2  
                                        u4630 14A0                                          u4470 0512  
                                        u4390 044A                                          u4550 0E84  
                                        _PMD2 0039C2                                          u1991 1E0E  
                                        u3911 084E                                          u3831 059E  
                                        u4631 149C                                          u4471 050E  
                                        u4391 0446                                          u4551 0E80  
                                        _PMD3 0039C3                                          u3920 0872  
                                        u3840 05B2                                          u4640 14C8  
                                        u4480 0532                                          u4560 0EA2  
                                        _PMD4 0039C4                                          u3921 086E  
                                        u3905 07EE                                          u3841 05AE  
                                        u4641 14C4                                          u4481 052E  
                                        u4561 0E9E                                          _PMD5 0039C5  
                                        u3930 0884                                          u3850 05F2  
                                        u4490 0544                                          u4570 0EDC  
                                        u4650 1A56                                          _PMD6 0039C6  
                                        u3931 0880                                          u3851 05EE  
                                        u4491 0540                                          u4571 0ED8  
                                        u4651 1A52                                          _PMD7 0039C7  
                                        u3940 08B2                                          u3860 0604  
                                        u4580 0EF6                                          u4660 1A68  
                                        u3941 08AE                                          u3861 0600  
                                        u4581 0EF2                                          u4661 1A64  
                                        u3950 08C8                                          u3870 0614  
                                        u4590 1014                                          u4670 1A90  
                                        u3951 08C4                                          u3871 0610  
                                        u4591 1010                                          u4671 1A8C  
                                        u3960 08DC                                          u3880 064A  
                                        u4680 1AC4                                          u3961 08D8  
                                        u3881 0646                                          u4681 1AC0  
                                        u3970 08F6                                          u3890 065A  
                                        u4690 1AD6                                          u3971 08F2  
                                        u3891 0656                                          u4691 1AD2  
                                        u3980 093E                                          u3981 093A  
                                        u3990 096C                                          u3991 0968  
                                        _TMR2 003FAA                                          _TMR4 003F9E  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        _main 26B4                                          _loop 1A2C  
                                        indf2 003FDF                                          fsr2l 003FD9  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 00D2  
                             _TMR3_Initialize 2260                               _PWM5_Initialize 2754  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 2224  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 23A6  
                          ?_UART1_rx_vect_isr 0001                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 2784  
                               ___fltol@sign1 00C0                               __end_of___aldiv 1724  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 2592                               __end_of___fladd 0574  
                                       ?_main 0001                                         _ADCLK 003EFF  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                                       _ADREF 003EFD                               __end_of___awdiv 1E4A  
                                       ?_loop 0001                                         _ADRPT 003EEC  
                      ??_CCP4_DefaultCallBack 0007                               __end_of___flmul 09C4  
                    TMR5_ReadTimer@readValLow 0010                               __end_of___fltol 182C  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 2258  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 221C                                         i1l333 21A0  
                                       i1l350 280A                                         i1l343 1D84  
                                       i1l336 21A4                                         i1l353 2808  
                                       _U1TXB 003DEA                                         i1l347 2614  
                                       i1l356 2800                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 2810  
                                       i1l692 24D4                                         i2l534 2640  
                                       i2l438 2504                                         i2l446 2304  
                                       i2l552 2442                                         i1l688 22C8  
                                       i2l529 26B2                                         i2l537 27A0  
                                       i1l698 280C                                         i2l476 2534  
                                       i2l558 270A                                         i2l487 233C  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 2032  
                                       i2l856 215C                                         i2l868 266A  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                       _TMR3H 003FA5                                         _TMR5H 003F99  
                                       _TMR3L 003FA4                                         _TMR5L 003F98  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                         _TRISD 003FC5  
                                       _TRISE 003FC6                                   _Default_ISR 2810  
                             _TMR4_Initialize 2592                               _PWM6_Initialize 273C  
                           _UART1_tx_vect_isr 21E8                              __end_of_TMR4_ISR 22D0  
                     setSteering@steeringMode 001E                                         _delay 003E  
                       __size_of_calcMotorPow 0144                            ?_UART1_tx_vect_isr 0001  
                            ?_SMT1_Initialize 0001                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 0080  
                       __size_of_calcSteering 0230                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 27B6                   _UART1_SetRxInterruptHandler 27AC  
                     __end_of_CCP4_Initialize 2564           fp__UART1_DefaultFramingErrorHandler 0000  
    __end_of_UART1_DefaultFramingErrorHandler 280C     __size_of_UART1_DefaultFramingErrorHandler 0002  
          ??_UART1_DefaultFramingErrorHandler 0012             ?_UART1_DefaultFramingErrorHandler 0001  
            _UART1_DefaultFramingErrorHandler 280A                           ??_UART1_tx_vect_isr 0011  
                   __end_of_UART1_rx_vect_isr 2260                               _TMR5_Initialize 20CA  
                             _PWM7_Initialize 2724                               __initialization 21A6  
                       TMR5_ReadTimer@readVal 000D                              ?_CCP3_CaptureISR 0001  
                                __end_of_main 26D4                                  __end_of_loop 1B14  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 26F0  
                                      ??_main 003A                                        ??_loop 003A  
                               __activetblptr 000002                                  _calcMotorPow 13A2  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 2224  
                             _PWM8_Initialize 270C                              _UART1_Initialize 1E4A  
                                _calcSteering 0C10                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        _ADLTHH 003EDF  
                                      _ADLTHL 003EDE                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 23A6  
                                      _ANSELA 003A40                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _ANSELD 003A70  
                                      _ANSELE 003A80                                        _RB1I2C 003A5A  
                                      _RB2I2C 003A5B                                        _RD0I2C 003A7A  
                                      _U1CON0 003DF2                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RD1I2C 003A7B                                        _T3GATE 003FA8  
                                      _RC4I2C 003A6B                                        _U1BRGH 003DF6  
                                      _U1FIFO 003DF7                                        _T3GCON 003FA7  
                                      _U1BRGL 003DF5                                        _T5GATE 003F9C  
                                      _T5GCON 003F9B                                        _RA0PPS 003A00  
                                      _RA1PPS 003A01                                        _RA3PPS 003A03  
                                      _RA4PPS 003A04                                        _RB3PPS 003A0B  
                                      _T5GPPS 003AC9                                        i1l1238 2806  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _ODCOND 003A72  
                                      _ODCONE 003A82                                        i1l5040 2202  
                                      i1l4170 25FE                                        i1l5042 222A  
                                      i1l4172 260E                                        i1l5044 223E  
                     __end_of_PWM5_Initialize 276C                       __end_of_TMR3_Initialize 2298  
                                      i1l5062 229E                                        i1l4174 2612  
                                      i1l4166 25EA                                        i1l5038 21EE  
                                      i1l5064 22A2                                        i1l4168 25FC  
                                      i1l5066 22BC                                        i1l5068 22C0  
                                      i1l4618 27FC                                        i1l4920 2170  
                                      i1l4930 1CC0                                        i1l4922 2182  
                                      i1l4940 1D1A                                        i1l4932 1CD0  
                                      i1l4924 2184                                        i1l4854 2802  
                                      i1l4942 1D2A                                        i1l4934 1CE0  
                                      i1l4926 2194                                        i1l4918 215E  
                                      i1l4944 1D44                                        i1l4936 1CF0  
                                      i1l4928 2198                                        i2l5050 2308  
                                      i1l4946 1D60                                        i1l4938 1D0A  
                                      i2l5052 2318                                        i1l4948 1D80  
                                      i2l5070 2114                                        i2l4190 2630  
                                      i2l4182 2616                                        i2l5054 2410  
                                      i2l5046 22D0                                        i1l4990 24BA  
                                      i2l5080 1FE0                                        i2l5072 2118  
                                      i2l4184 2624                                        i2l4192 2636  
                                      i2l5056 2414                                        i2l5048 22E0  
                                      i2l5090 2644                                        i2l5082 1FE4  
                                      i2l5074 2128                                        i2l4194 263A  
                                      i2l4186 2626                                        i2l5058 2428  
                                      i2l5092 2648                                        i2l5084 1FFE  
                                      i2l5076 2138                                        i2l4620 2690  
                                      i2l4188 262A                                        i1l4988 24A6  
                                      i2l5086 200E                                        i2l5078 214A  
                                      i2l4622 269E                                        i2l5088 2020  
                                      i2l4624 26AA                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        _INLVLC 003A64  
                                      i2l4628 2794                                        _INLVLD 003A74  
                                      _INLVLE 003A84                                        i2l4950 24D6  
                                      i2l4960 2514                                        i2l4952 24E4  
                                      i2l4970 2702                                        i2l4962 2520  
                                      i2l4954 24F0                                        i2l4972 2706  
                                      i2l4964 252E                                        i2l4956 24FE  
                                      i2l4966 26F0                                        i2l4958 2506  
                                      i2l4968 26FC                                  ?_setSteering 001C  
                                      _OSCFRQ 0039DF                              __end_of_actSpeed 1F84  
                                      _SMT1PR 003F1B                         _UART1_SetErrorHandler 27CA  
                            __end_of___xxtofl 11FE                           ?_PWM8_LoadDutyValue 0014  
                            __end_of_getCurve 0C10                      __end_of_CCP3_SetCallBack 27FC  
                                _CCPTMRS0bits 003F5E                                  _CCPTMRS1bits 003F5F  
                                      ___flge 182C                                     ??___aldiv 001C  
                                   ??___fladd 0036                                     ??___awdiv 0018  
                                   ??___flmul 0032                                     ??___fltol 00BC  
                               _CCP3_CallBack 00D6                                  ?_TMR5_Reload 0001  
                     __end_of_PWM6_Initialize 2754                       __end_of_TMR4_Initialize 25BE  
                                      clear_0 21C0                                        clear_1 21CC  
                            ___awdiv@quotient 001A                                        _motPow 008C  
                     fp__CCP3_DefaultCallBack 0000                                        isa$std 000001  
                               _CCP4_CallBack 00D4                                        _smtWay 0078  
                            ?_CCP3_Initialize 0001                          ??_PWM8_LoadDutyValue 0016  
                            __end_of_setMotor 1BF6                               _ADCC_Initialize 1F84  
        __end_of_TMR4_DefaultInterruptHandler 280E         __size_of_TMR4_DefaultInterruptHandler 0002  
                _TMR4_DefaultInterruptHandler 280C                                _PMD_Initialize 266C  
                                __pdataCOMRAM 004C                         __end_of_TMR5_GATE_ISR 2444  
                                      tblptrh 003FF7                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 27C0  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 27B6  
                   _UART1_DefaultErrorHandler 27FC                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 0018  
                                  ___flge@ff1 0014                                    ___flge@ff2 0018  
                     __end_of_PWM7_Initialize 273C                       __end_of_TMR5_Initialize 2114  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 2080                                  ___xxtofl@val 001C  
                                  __accesstop 0060                       __end_of__initialization 21DE  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003C                                    ___fltol@f1 00B8  
                             _TMR5_WriteTimer 2616                            __size_of_calcSpeed 020A  
                   calcMotorPow@setSpeedDelta 00C4                      __end_of_CCP4_SetCallBack 27F2  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 24D6  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 00C8  
                              ivt0x8_undefint 00AC                               fp__TMR4_10msISR 0000  
                            ?_TMR2_Initialize 0001                       __end_of_PWM8_Initialize 2724  
                      __end_of_PMD_Initialize 2690                   __size_of_PWM7_LoadDutyValue 0034  
                       CCP3_CaptureISR@module 0003                    __size_of_UART1_tx_vect_isr 003C  
              CCP3_SetCallBack@customCallBack 0014                     _UART1_FramingErrorHandler 00DC  
             fp__TMR4_DefaultInterruptHandler 0000                 ?_TMR4_DefaultInterruptHandler 0001  
                     fp__CCP4_DefaultCallBack 0000                      __size_of_SMT1_PR_ACQ_ISR 004A  
                           _calcSteering$3897 00C4                     __end_of_SYSTEM_Initialize 20CA  
                             _CLC3_Initialize 25BE                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 0060                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 00CC                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 0014                                    ??_TMR4_ISR 0013  
                     __end_of_ADCC_Initialize 1FE0                    __end_of_PWM6_LoadDutyValue 2372  
        __end_of_TMR5_SetGateInterruptHandler 27DE         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 27D4                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     _ADFLTRL 003EE6                 __size_of_CCP3_DefaultCallBack 0030  
                                     _CCP3PPS 003ACF                                       _CCP4PPS 003AD0  
                                     _CLC3CON 003C60                                       _CLC3POL 003C61  
                                     _ADPREVH 003EEE                                       _ADPREVL 003EED  
                            ?_PWM6_Initialize 0001                              ?_TMR4_Initialize 0001  
                                     _ADSTPTH 003EE5                                       _ADSTPTL 003EE4  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 1CC0  
                                  _getReverse 1930                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                          ?_UART1_Receive_ISR 0001                                       _U1RXPPS 003AE5  
                                   ?___xxtofl 001C                            _PWM5_LoadDutyValue 2372  
                                  _distRightM 0096                       __size_of_TMR5_ReadTimer 0024  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                           __end_of_calcSpeed 104A                                       _IVTLOCK 003FD4  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                         ??_UART1_Receive_ISR 0012                       __end_of_TMR5_WriteTimer 2642  
                         ?_PWM5_LoadDutyValue 0014                              ?_PWM7_Initialize 0001  
                            ?_TMR5_Initialize 0001                     INTERRUPT_Initialize@state 0014  
                        __size_of_setSteering 01A4                                     _CLCIN0PPS 003AD9  
                                   _CLCIN2PPS 003ADB                                     _CLCIN3PPS 003ADC  
                                     __Hparam 0000                                     ?_setMotor 0018  
                                     __Lparam 0000                      __end_of_UART1_Initialize 1EF0  
                                     ___aldiv 1618                               __size_of___flge 0104  
                                     ___fladd 00B2                                       ___awdiv 1D86  
                                     ___flmul 0574                                       ___fltol 1724  
                   __end_of_UART1_Receive_ISR 1D86                          ??_PWM5_LoadDutyValue 0016  
                                     __pcinit 21A6                     _TMR5_GateInterruptHandler 00D0  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0048                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 26B4                                       __ptext1 1A2C  
                                     __ptext2 14E6                                       __ptext3 0C10  
                                     __ptext4 11FE                                       __ptext5 233E  
                                     __ptext6 2372                                       __ptext7 182C  
                                     __ptext8 1930                                       __ptext9 09C4  
                              ??_TMR4_10msISR 0013                          __size_of_TMR5_Reload 000E  
                                  ??_actSpeed 0024                       __end_of_CLC3_Initialize 25EA  
                       _OSCILLATOR_Initialize 276C                                     _T2CONbits 003FAC  
                                  ??___xxtofl 0020                                     _T3CONbits 003FA6  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                   _IPR10bits 00398A                                       _smtDuty 007C  
                                   _T4HLTbits 003FA1                                    ??_getCurve 0014  
                                   _PIE10bits 00399A                    __size_of_SYSTEM_Initialize 004A  
                        end_of_initialization 21DE                                     _T2RSTbits 003FAF  
              ??_TMR4_DefaultInterruptHandler 0013                                     _T4RSTbits 003FA3  
                                   _PIR10bits 0039AA                             ??_SMT1_PR_ACQ_ISR 0011  
                               __Lmediumconst 0000           __end_of_UART1_SetTxInterruptHandler 27AC  
                 _UART1_SetTxInterruptHandler 27A2                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           ?_CCP3_SetCallBack 0014                              ___aldiv@quotient 001E  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
            __end_of_ADCC_GetSingleConversion 2476                           _UART1_RxDataHandler 25EA  
                        __size_of_startAccell 0132                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0036                                   ___fladd@grs 00B7  
                          getCurve@deltaRight 0016                                 ___xxtofl@sign 0024  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 00A1  
                    __size_of_CCP4_CaptureISR 0036             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 2080  
                              __end_of___flge 1930                    __size_of_UART1_Receive_ISR 00C6  
                          ??_CCP4_SetCallBack 0016                                   _CLC3CONbits 003C60  
                               __pidataCOMRAM 2812                             __size_of_TMR4_ISR 0038  
                      ?_OSCILLATOR_Initialize 0001                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                _TMR5_ReadTimer 2690  
                         start_initialization 21A6                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0068                                   _actMotorPow 0084  
                               _uart1TxBuffer 0070                           __size_of_getReverse 00FC  
                        __end_of_TMR4_10msISR 2808                                  _middleOffSet 008E  
                                    ??___flge 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0034                                  _oldDistRight 0092  
                    __size_of_CCP4_Initialize 002E                    __end_of_PWM7_LoadDutyValue 240E  
                           ??_SMT1_Initialize 0014                        __end_of_TMR5_ReadTimer 26B4  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 00B0  
                                   ___fladd@b 00AC                           calcMotorPow@addMPow 00C8  
                    _ADCC_GetSingleConversion 2444                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 003C                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                          _UART1_ErrorHandler 00D8                                 __pcstackBANK0 009F  
                           __size_of_actSpeed 0094                            _PWM6_LoadDutyValue 233E  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 00E0                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 2506                        __size_of_TMR4_CallBack 0030  
                                   _calcSpeed 0E40                             __size_of_getCurve 024C  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                  _currentSpeed 0088  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK0 00CC  
                          setMotor@motorPower 0018                        _PIN_MANAGER_Initialize 1BF6  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 27CA  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 27C0  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___fladd 00AC                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 27E8                                      ?___awdiv 0014  
           CCP3_DefaultCallBack@capturedValue 0001                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___fltol 00B8  
                          ??_UART1_Initialize 0016                                     _distLeftM 009A  
                                   _distFront 004A                              _uart1RxLastError 0040  
                                   _distRight 0098                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 009E                               ?_TMR5_ReadTimer 0009  
                               ?_calcMotorPow 0001                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 004C  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 280A  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 2808  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 2114                                 ?_calcSteering 0001  
                    __size_of_PWM6_Initialize 0018                      __size_of_TMR4_Initialize 002C  
                               _TMR5_GATE_ISR 2410                                     _curveMode 003F  
                                    _T2CLKCON 003FAE                                   _U1ERRIRbits 003DF9  
                                    _T4CLKCON 003FA2                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 2034                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 1FE0  
                             ___aldiv@counter 001C         UART1_SetErrorHandler@interruptHandler 0014  
                                    _IPR1bits 003981                  __end_of_CCP4_DefaultCallBack 2536  
                           ??_CCP3_Initialize 0016                                      _IPR3bits 003983  
                                    _PIE1bits 003991                                      _PIE3bits 003993  
                                    _IPR7bits 003987                                      _IPR8bits 003988  
                                    _IPR9bits 003989                                      _PIE7bits 003997  
                                    _PIE8bits 003998                                      _PIE9bits 003999  
                                    _IVTBASEH 003FD6                                      _IVTBASEL 003FD5  
                                    _IVTBASEU 003FD7                                      i1u351_20 2170  
                                    i1u351_21 216C                                      i1u352_20 2194  
                                    i1u352_21 2190                                      i1u249_20 260E  
                                    i1u353_20 1CE0                                      i1u249_21 260A  
                                    i1u353_21 1CDC                                      i1u362_20 24BA  
                                    i1u362_21 24B6                                      i1u355_20 1D1A  
                                    i1u354_28 1CF6                                      i1u371_20 223E  
                                    i1u370_28 2208                                      i1u355_21 1D16  
                                    i1u354_29 1D0A                                      i1u371_21 223A  
                                    i1u370_29 221C                 ??_UART1_SetRxInterruptHandler 0016  
                                    i1u363_28 24C0                                      i1u363_29 24D4  
                                    i1u357_20 1D60                                      i1u356_28 1D30  
                                    i1u372_28 2244                                      i1u357_21 1D5C  
                                    i1u356_29 1D44                                      i1u372_29 2258  
                                    i1u358_28 1D66                                      i1u358_29 1D7C  
                                    i1u377_20 22BC                                      i1u369_20 2202  
                                    i1u377_21 22B8                                      i1u369_21 21FE  
                                    i2u250_40 2624                                      i2u250_41 2620  
                                    i2u360_40 2514                                      i2u360_41 2510  
                                    _PIR1bits 0039A1                                      i2u373_48 22EE  
                                    i2u373_49 2304                                      i2u375_40 2428  
                                    i2u374_48 2326                                      i2u359_40 24E4  
                                    i2u375_41 2424                                      i2u374_49 233C  
                                    i2u359_41 24E0                                      _PIR4bits 0039A4  
                                    i2u376_48 242E                                      i2u376_49 2442  
                                    i2u378_40 2138                                      i2u378_41 2134  
                                    i2u379_40 200E                                      i2u379_41 200A  
                                    _PIR6bits 0039A6                                      _PIR7bits 0039A7  
                                    _PIR8bits 0039A8                                      _PIR9bits 0039A9  
                                    _SMT1CON0 003F1E                                      _SMT1CON1 003F1F  
                    __size_of_PWM7_Initialize 0018                      __size_of_TMR5_Initialize 004A  
                                    _SMT1STAT 003F20                             _SMT1_Overflow_ISR 2644  
                                    _TMR4_ISR 2298                    __end_of_UART1_Transmit_ISR 21A6  
                               _TMR4_CallBack 24A6                                     _smtPeriod 0046  
               ?_UART1_SetFramingErrorHandler 0014                                 ??_TMR5_Reload 000B  
                 __size_of_PWM5_LoadDutyValue 0034                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 2784                                  ??_getReverse 0014  
                              ??_calcMotorPow 00C2                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 00C2  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                    __size_of_PWM8_Initialize 0018                                  _SMT1CON0bits 003F1E  
                                _SMT1CON1bits 003F1F                           ??_getBatteryVoltage 0019  
                                 _INTCON0bits 003FD2                         ?_INTERRUPT_Initialize 0001  
                       __size_of_TMR4_10msISR 0006                          fp__UART1_Receive_ISR 0000  
                      _uart1TxBufferRemaining 00E2                             ??_TMR2_Initialize 0014  
                                _uart1RxCount 0041                            __end_of_getReverse 1A2C  
                                  _ADSTATbits 003EFC                                      __Hrparam 0000  
                   __end_of_SMT1_Overflow_ISR 266C                           __end_of_setSteering 13A2  
                                    __Lrparam 0000                                   _oldDistLeft 003A  
                               ??_startAccell 003A                                ?_TMR4_CallBack 0001  
                              calcSpeed@speed 00C6                     __end_of_getBatteryVoltage 2794  
                     ??_OSCILLATOR_Initialize 0014                              __size_of___aldiv 010C  
                            __size_of___fladd 04C2                              __size_of___awdiv 00C4  
                            __size_of___flmul 0450                              __size_of___fltol 0108  
                                _SMT1STATbits 003F20                          _CCP3_DefaultCallBack 24D6  
                     __end_of_SMT1_PR_ACQ_ISR 215E                             ??_PWM5_Initialize 0014  
                           ??_TMR3_Initialize 0014                      _TMR4_SetInterruptHandler 27DE  
                                    _actSpeed 1EF0          __size_of_UART1_SetRxInterruptHandler 000A  
                                _TMR4_10msISR 2802                                      ___xxtofl 104A  
                    __size_of_ADCC_Initialize 005C                           __end_of_TMR5_Reload 27A2  
                   __size_of_CCP4_SetCallBack 000A                                      __pivt0x8 0008  
                     __end_of_SMT1_PW_ACQ_ISR 2034                                      _getCurve 09C4  
                                    __ptext10 2784                                      __ptext11 2444  
                                    __ptext20 104A                                      __ptext12 0E40  
                                    __ptext21 1724                                      __ptext13 00B2  
                                    __ptext30 27CA                                      __ptext22 0574  
                                    __ptext14 13A2                                      __ptext31 20CA  
                                    __ptext23 1D86                                      __ptext15 1B14  
                                    __ptext40 273C                                      __ptext32 27D4  
                                    __ptext24 2080                                      __ptext16 23A6  
                                    __ptext41 2754                                      __ptext33 2592  
                                    __ptext25 1E4A                                      __ptext17 23DA  
                                    __ptext50 27F2                                      __ptext42 266C  
                                    __ptext34 27DE                                      __ptext26 27A2  
                                    __ptext18 1EF0                                      __ptext51 1F84  
                                    __ptext43 1BF6                                      __ptext35 2260  
                                    __ptext27 27AC                                      __ptext19 1618  
                                    __ptext60 2298                                      __ptext52 21E8  
                                    __ptext44 276C                                      __ptext36 26D4  
                                    __ptext28 27B6                                      __ptext61 24A6  
                                    __ptext53 215E                                      __ptext45 2034  
                                    __ptext37 2476                                      __ptext29 27C0  
                                    __ptext70 26F0                                      __ptext62 2802  
                                    __ptext54 2224                                      __ptext46 25BE  
                                    __ptext38 270C                                      __ptext71 2794  
                                    __ptext63 280C                                      __ptext55 1CC0  
                                    __ptext47 2536                                      __ptext39 2724  
                                    __ptext72 2616                                      __ptext64 2810  
                                    __ptext56 2808                                      __ptext48 27E8  
                                    __ptext73 2690                                      __ptext65 22D0  
                                    __ptext57 280A                                      __ptext49 2564  
                                    __ptext74 2114                                      __ptext66 24D6  
                                    __ptext58 27FC                                      __ptext75 1FE0  
                                    __ptext67 2308                                      __ptext59 25EA  
                                    __ptext76 2644                                      __ptext68 2506  
                                    __ptext77 0000                                      __ptext69 2410  
                                    _distLeft 009C                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 00C2                 __end_of_UART1_SetErrorHandler 27D4  
                                  _T3GCONbits 003FA7                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                                    _oldSpeed 0086                                    _T5GCONbits 003F9B  
                               __size_of_loop 00E8                               _SMT1_Initialize 2476  
                                 _IVTLOCKbits 003FD4                                      _setMotor 1B14  
                                    _setSpeed 008A                      __size_of_TMR5_WriteTimer 002C  
                   _UART1_OverrunErrorHandler 00DA  UART1_SetOverrunErrorHandler@interruptHandler 0014  
                                    isa$xinst 000000            __size_of_UART1_DefaultErrorHandler 0006  
                  ??_ADCC_GetSingleConversion 0016                    ?_UART1_DefaultErrorHandler 0001  
                       ?_CCP3_DefaultCallBack 0001                    __end_of_PWM8_LoadDutyValue 23DA  
                             _CCP3_CaptureISR 22D0                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 270C  
   __size_of_TMR5_DefaultGateInterruptHandler 001C            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 26F0  
                         __end_of_startAccell 1618                                _battCheckCount 0090  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0016  
                                _reverseCount 0094                               ??_TMR5_GATE_ISR 0011  
                 __end_of_UART1_RxDataHandler 2616                                   _uart1RxHead 0043  
                        _CCP4_DefaultCallBack 2506                                   _uart1TxHead 0045  
                                 _uart1RxTail 0042                                   _uart1TxTail 0044  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 23DA  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 11FE  
                             _CCP4_CaptureISR 2308                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 14E6                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 0E40  
                         _uart1RxStatusBuffer 0060                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 2802                                   _reverseTime 0082  
                            ?_SMT1_PR_ACQ_ISR 0001                                   _TMR5_Reload 2794  
                                  _SMT1SIGPPS 003AD2                                    _SMT1WINPPS 003AD1  
                        ??_PWM7_LoadDutyValue 0016                                 actSpeed@speed 0024  
                       ?_CCP4_DefaultCallBack 0005                     calcMotorPow@oldSpeedDelta 00C6  
                            _CCP3_SetCallBack 27F2                     __size_of_UART1_Initialize 00A6  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 2564                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 00C6                      _UART1_TxInterruptHandler 00DE  
                               ___fladd@signs 00B4                           __end_of_Default_ISR 2812  
                     __end_of_SMT1_Initialize 24A6                __end_of_PIN_MANAGER_Initialize 1CC0  
                           ??_ADCC_Initialize 0014                                  ___fladd@aexp 00B5  
                                ___fladd@bexp 00B6                  ?_UART1_SetTxInterruptHandler 0014  
                     __end_of_CCP3_CaptureISR 2306  
