

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 15:42:28 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=4,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=4,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=4,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=4,class=CODE,delta=1
   108                           	psect	text91,global,reloc=4,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=4,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=4,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=4,class=CODE,delta=1
   118                           	psect	text101,global,reloc=4,class=CODE,delta=1
   119                           	psect	text102,global,reloc=4,class=CODE,delta=1
   120                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text103,global,reloc=4,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   125                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   126  0000                     
   127                           ; Version 2.20
   128                           ; Generated 05/05/2020 GMT
   129                           ; 
   130                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K42 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162                           	psect	idataBANK0
   163  005E96                     __pidataBANK0:
   164                           	callstack 0
   165                           
   166                           ;initializer for _driveMode
   167  005E96  01                 	db	1
   168                           
   169                           	psect	nvCOMRAM
   170  00004C                     __pnvCOMRAM:
   171                           	callstack 0
   172  00004C                     _uart1TxBufferRemaining:
   173                           	callstack 0
   174  00004C                     	ds	1
   175                           
   176                           	psect	nvBANK1
   177  000186                     __pnvBANK1:
   178                           	callstack 0
   179  000186                     _TMR4_InterruptHandler:
   180                           	callstack 0
   181  000186                     	ds	2
   182  000188                     _timer3ReloadVal:
   183                           	callstack 0
   184  000188                     	ds	2
   185  00018A                     _TMR5_GateInterruptHandler:
   186                           	callstack 0
   187  00018A                     	ds	2
   188  00018C                     _timer5ReloadVal:
   189                           	callstack 0
   190  00018C                     	ds	2
   191  00018E                     _CCP4_CallBack:
   192                           	callstack 0
   193  00018E                     	ds	2
   194  000190                     _CCP3_CallBack:
   195                           	callstack 0
   196  000190                     	ds	2
   197  000192                     _UART1_ErrorHandler:
   198                           	callstack 0
   199  000192                     	ds	2
   200  000194                     _UART1_OverrunErrorHandler:
   201                           	callstack 0
   202  000194                     	ds	2
   203  000196                     _UART1_FramingErrorHandler:
   204                           	callstack 0
   205  000196                     	ds	2
   206  000198                     _UART1_TxInterruptHandler:
   207                           	callstack 0
   208  000198                     	ds	2
   209  00019A                     _UART1_RxInterruptHandler:
   210                           	callstack 0
   211  00019A                     	ds	2
   212  0000                     _PIR4bits	set	14756
   213  0000                     _PIR1bits	set	14753
   214  0000                     _PIE1bits	set	14737
   215  0000                     _PIE7bits	set	14743
   216  0000                     _PIR7bits	set	14759
   217  0000                     _PIR6bits	set	14758
   218  0000                     _PIE8bits	set	14744
   219  0000                     _PIR8bits	set	14760
   220  0000                     _PIE10bits	set	14746
   221  0000                     _PIR10bits	set	14762
   222  0000                     _PIE9bits	set	14745
   223  0000                     _PIR9bits	set	14761
   224  0000                     _IPR9bits	set	14729
   225  0000                     _IPR7bits	set	14727
   226  0000                     _IPR8bits	set	14728
   227  0000                     _IPR10bits	set	14730
   228  0000                     _IPR1bits	set	14721
   229  0000                     _IPR3bits	set	14723
   230  0000                     _PIE3bits	set	14739
   231  0000                     _PMD7	set	14791
   232  0000                     _PMD6	set	14790
   233  0000                     _PMD5	set	14789
   234  0000                     _PMD4	set	14788
   235  0000                     _PMD3	set	14787
   236  0000                     _PMD2	set	14786
   237  0000                     _PMD1	set	14785
   238  0000                     _PMD0	set	14784
   239  0000                     _OSCTUNE	set	14814
   240  0000                     _OSCFRQ	set	14815
   241  0000                     _OSCEN	set	14813
   242  0000                     _OSCCON3	set	14811
   243  0000                     _OSCCON1	set	14809
   244  0000                     _CCP4PPS	set	15056
   245  0000                     _SMT1SIGPPS	set	15058
   246  0000                     _CLCIN2PPS	set	15067
   247  0000                     _RB3PPS	set	14859
   248  0000                     _RA3PPS	set	14851
   249  0000                     _SMT1WINPPS	set	15057
   250  0000                     _CLCIN0PPS	set	15065
   251  0000                     _RA4PPS	set	14852
   252  0000                     _T5GPPS	set	15049
   253  0000                     _RA0PPS	set	14848
   254  0000                     _U1RXPPS	set	15077
   255  0000                     _RA1PPS	set	14849
   256  0000                     _CLCIN3PPS	set	15068
   257  0000                     _CCP3PPS	set	15055
   258  0000                     _INLVLE	set	14980
   259  0000                     _INLVLD	set	14964
   260  0000                     _INLVLC	set	14948
   261  0000                     _INLVLB	set	14932
   262  0000                     _INLVLA	set	14916
   263  0000                     _SLRCONE	set	14979
   264  0000                     _SLRCOND	set	14963
   265  0000                     _SLRCONC	set	14947
   266  0000                     _SLRCONB	set	14931
   267  0000                     _SLRCONA	set	14915
   268  0000                     _ODCOND	set	14962
   269  0000                     _ODCONC	set	14946
   270  0000                     _ODCONB	set	14930
   271  0000                     _ODCONA	set	14914
   272  0000                     _ODCONE	set	14978
   273  0000                     _RD1I2C	set	14971
   274  0000                     _RD0I2C	set	14970
   275  0000                     _RC4I2C	set	14955
   276  0000                     _RC3I2C	set	14954
   277  0000                     _RB2I2C	set	14939
   278  0000                     _RB1I2C	set	14938
   279  0000                     _WPUC	set	14945
   280  0000                     _WPUA	set	14913
   281  0000                     _WPUB	set	14929
   282  0000                     _WPUE	set	14977
   283  0000                     _WPUD	set	14961
   284  0000                     _ANSELA	set	14912
   285  0000                     _ANSELE	set	14976
   286  0000                     _ANSELB	set	14928
   287  0000                     _ANSELC	set	14944
   288  0000                     _ANSELD	set	14960
   289  0000                     _CLC3CON	set	15456
   290  0000                     _CLC3GLS3	set	15465
   291  0000                     _CLC3GLS2	set	15464
   292  0000                     _CLC3GLS1	set	15463
   293  0000                     _CLC3GLS0	set	15462
   294  0000                     _CLC3SEL3	set	15461
   295  0000                     _CLC3SEL2	set	15460
   296  0000                     _CLC3SEL1	set	15459
   297  0000                     _CLC3SEL0	set	15458
   298  0000                     _CLC3POL	set	15457
   299  0000                     _CLC3CONbits	set	15456
   300  0000                     _U1RXB	set	15848
   301  0000                     _U1TXB	set	15850
   302  0000                     _U1ERRIRbits	set	15865
   303  0000                     _U1ERRIE	set	15866
   304  0000                     _U1ERRIR	set	15865
   305  0000                     _U1UIR	set	15864
   306  0000                     _U1FIFO	set	15863
   307  0000                     _U1BRGH	set	15862
   308  0000                     _U1BRGL	set	15861
   309  0000                     _U1CON2	set	15860
   310  0000                     _U1CON1	set	15859
   311  0000                     _U1CON0	set	15858
   312  0000                     _U1P3H	set	15857
   313  0000                     _U1P3L	set	15856
   314  0000                     _U1P2H	set	15855
   315  0000                     _U1P2L	set	15854
   316  0000                     _U1P1H	set	15853
   317  0000                     _U1P1L	set	15852
   318  0000                     _ADCON1bits	set	16121
   319  0000                     _ADERRL	set	16098
   320  0000                     _ADERRH	set	16099
   321  0000                     _ADPREVL	set	16109
   322  0000                     _ADPREVH	set	16110
   323  0000                     _ADFLTRL	set	16102
   324  0000                     _ADFLTRH	set	16103
   325  0000                     _ADSTATbits	set	16124
   326  0000                     _ADACCL	set	16104
   327  0000                     _ADACCH	set	16105
   328  0000                     _ADCON2bits	set	16122
   329  0000                     _ADCNT	set	16107
   330  0000                     _ADCON3bits	set	16123
   331  0000                     _ADRESL	set	16111
   332  0000                     _ADRESH	set	16112
   333  0000                     _ADCON0bits	set	16120
   334  0000                     _ADCON0	set	16120
   335  0000                     _ADCLK	set	16127
   336  0000                     _ADACT	set	16126
   337  0000                     _ADREF	set	16125
   338  0000                     _ADSTAT	set	16124
   339  0000                     _ADCON3	set	16123
   340  0000                     _ADCON2	set	16122
   341  0000                     _ADCON1	set	16121
   342  0000                     _ADPREH	set	16119
   343  0000                     _ADPREL	set	16118
   344  0000                     _ADCAP	set	16117
   345  0000                     _ADACQH	set	16116
   346  0000                     _ADACQL	set	16115
   347  0000                     _ADPCH	set	16113
   348  0000                     _ADRPT	set	16108
   349  0000                     _ADACCU	set	16106
   350  0000                     _ADSTPTH	set	16101
   351  0000                     _ADSTPTL	set	16100
   352  0000                     _ADUTHH	set	16097
   353  0000                     _ADUTHL	set	16096
   354  0000                     _ADLTHH	set	16095
   355  0000                     _ADLTHL	set	16094
   356  0000                     _SMT1TMR	set	16146
   357  0000                     _SMT1CPR	set	16149
   358  0000                     _SMT1CPW	set	16152
   359  0000                     _SMT1PR	set	16155
   360  0000                     _SMT1STATbits	set	16160
   361  0000                     _SMT1CON0bits	set	16158
   362  0000                     _SMT1CON1bits	set	16159
   363  0000                     _SMT1PRL	set	16155
   364  0000                     _SMT1PRH	set	16156
   365  0000                     _SMT1PRU	set	16157
   366  0000                     _SMT1SIG	set	16162
   367  0000                     _SMT1WIN	set	16163
   368  0000                     _SMT1CLK	set	16161
   369  0000                     _SMT1STAT	set	16160
   370  0000                     _SMT1CON1	set	16159
   371  0000                     _SMT1CON0	set	16158
   372  0000                     _CCPTMRS1bits	set	16223
   373  0000                     _CCPTMRS0bits	set	16222
   374  0000                     _PORTBbits	set	16331
   375  0000                     _PR2	set	16299
   376  0000                     _TMR2	set	16298
   377  0000                     _T2CONbits	set	16300
   378  0000                     _T2RSTbits	set	16303
   379  0000                     _T2HLTbits	set	16301
   380  0000                     _T2CON	set	16300
   381  0000                     _T2TMR	set	16298
   382  0000                     _T2PR	set	16299
   383  0000                     _T2RST	set	16303
   384  0000                     _T2HLT	set	16301
   385  0000                     _T2CLKCON	set	16302
   386  0000                     _PWM6DCL	set	16232
   387  0000                     _PWM6DCH	set	16233
   388  0000                     _PWM6CON	set	16234
   389  0000                     _PWM5DCL	set	16236
   390  0000                     _PWM5DCH	set	16237
   391  0000                     _PWM5CON	set	16238
   392  0000                     _PWM8DCL	set	16224
   393  0000                     _PWM8DCH	set	16225
   394  0000                     _PWM8CON	set	16226
   395  0000                     _PWM7DCL	set	16228
   396  0000                     _PWM7DCH	set	16229
   397  0000                     _PWM7CON	set	16230
   398  0000                     _PR4	set	16287
   399  0000                     _TMR4	set	16286
   400  0000                     _T4CONbits	set	16288
   401  0000                     _T4RSTbits	set	16291
   402  0000                     _T4HLTbits	set	16289
   403  0000                     _T4CON	set	16288
   404  0000                     _T4TMR	set	16286
   405  0000                     _T4PR	set	16287
   406  0000                     _T4RST	set	16291
   407  0000                     _T4HLT	set	16289
   408  0000                     _T4CLKCON	set	16290
   409  0000                     _T3GCONbits	set	16295
   410  0000                     _T3CONbits	set	16294
   411  0000                     _T3CON	set	16294
   412  0000                     _TMR3L	set	16292
   413  0000                     _TMR3H	set	16293
   414  0000                     _T3CLK	set	16297
   415  0000                     _T3GATE	set	16296
   416  0000                     _T3GCON	set	16295
   417  0000                     _T5GCONbits	set	16283
   418  0000                     _T5CONbits	set	16282
   419  0000                     _T5CON	set	16282
   420  0000                     _TMR5L	set	16280
   421  0000                     _TMR5H	set	16281
   422  0000                     _T5CLK	set	16285
   423  0000                     _T5GATE	set	16284
   424  0000                     _T5GCON	set	16283
   425  0000                     _CCPR4L	set	16240
   426  0000                     _CCPR4H	set	16241
   427  0000                     _CCP4CAP	set	16243
   428  0000                     _CCP4CON	set	16242
   429  0000                     _CCPR3L	set	16244
   430  0000                     _CCPR3H	set	16245
   431  0000                     _CCP3CAP	set	16247
   432  0000                     _CCP3CON	set	16246
   433  0000                     _PORTDbits	set	16333
   434  0000                     _IVTBASEL	set	16341
   435  0000                     _IVTBASEH	set	16342
   436  0000                     _IVTBASEU	set	16343
   437  0000                     _IVTLOCKbits	set	16340
   438  0000                     _IVTLOCK	set	16340
   439  0000                     _INTCON0bits	set	16338
   440  0000                     _TRISD	set	16325
   441  0000                     _TRISC	set	16324
   442  0000                     _TRISB	set	16323
   443  0000                     _TRISA	set	16322
   444  0000                     _TRISE	set	16326
   445  0000                     _LATC	set	16316
   446  0000                     _LATB	set	16315
   447  0000                     _LATA	set	16314
   448  0000                     _LATD	set	16317
   449  0000                     _LATE	set	16318
   450  0000                     _GIE	set	130711
   451                           
   452                           	psect	smallconst
   453  001000                     __psmallconst:
   454                           	callstack 0
   455  001000  00                 	db	0
   456  001001                     STR_4:
   457                           
   458                           ; BSR set to: 1
   459  001001  73                 	db	115	;'s'
   460  001002  74                 	db	116	;'t'
   461  001003  61                 	db	97	;'a'
   462  001004  72                 	db	114	;'r'
   463  001005  41                 	db	65	;'A'
   464  001006  63                 	db	99	;'c'
   465  001007  63                 	db	99	;'c'
   466  001008  65                 	db	101	;'e'
   467  001009  6C                 	db	108	;'l'
   468  00100A  50                 	db	80	;'P'
   469  00100B  6F                 	db	111	;'o'
   470  00100C  77                 	db	119	;'w'
   471  00100D  65                 	db	101	;'e'
   472  00100E  72                 	db	114	;'r'
   473  00100F  3A                 	db	58	;':'
   474  001010  20                 	db	32
   475  001011  25                 	db	37
   476  001012  64                 	db	100	;'d'
   477  001013  0A                 	db	10
   478  001014  00                 	db	0
   479  001015                     STR_5:
   480                           
   481                           ; BSR set to: 1
   482  001015  54                 	db	84	;'T'
   483  001016  69                 	db	105	;'i'
   484  001017  6D                 	db	109	;'m'
   485  001018  65                 	db	101	;'e'
   486  001019  3A                 	db	58	;':'
   487  00101A  20                 	db	32
   488  00101B  25                 	db	37
   489  00101C  64                 	db	100	;'d'
   490  00101D  20                 	db	32
   491  00101E  20                 	db	32
   492  00101F  20                 	db	32
   493  001020  20                 	db	32
   494  001021  20                 	db	32
   495  001022  00                 	db	0
   496  001023                     STR_3:
   497                           
   498                           ; BSR set to: 1
   499  001023  61                 	db	97	;'a'
   500  001024  63                 	db	99	;'c'
   501  001025  74                 	db	116	;'t'
   502  001026  4D                 	db	77	;'M'
   503  001027  50                 	db	80	;'P'
   504  001028  6F                 	db	111	;'o'
   505  001029  77                 	db	119	;'w'
   506  00102A  3A                 	db	58	;':'
   507  00102B  20                 	db	32
   508  00102C  25                 	db	37
   509  00102D  64                 	db	100	;'d'
   510  00102E  0A                 	db	10
   511  00102F  00                 	db	0
   512  001030                     STR_7:
   513                           
   514                           ; BSR set to: 1
   515  001030  73                 	db	115	;'s'
   516  001031  74                 	db	116	;'t'
   517  001032  61                 	db	97	;'a'
   518  001033  79                 	db	121	;'y'
   519  001034  20                 	db	32
   520  001035  52                 	db	82	;'R'
   521  001036  69                 	db	105	;'i'
   522  001037  67                 	db	103	;'g'
   523  001038  68                 	db	104	;'h'
   524  001039  74                 	db	116	;'t'
   525  00103A  0A                 	db	10
   526  00103B  00                 	db	0
   527  00103C                     STR_1:
   528                           
   529                           ; BSR set to: 1
   530  00103C  42                 	db	66	;'B'
   531  00103D  61                 	db	97	;'a'
   532  00103E  74                 	db	116	;'t'
   533  00103F  74                 	db	116	;'t'
   534  001040  65                 	db	101	;'e'
   535  001041  72                 	db	114	;'r'
   536  001042  79                 	db	121	;'y'
   537  001043  20                 	db	32
   538  001044  4C                 	db	76	;'L'
   539  001045  6F                 	db	111	;'o'
   540  001046  77                 	db	119	;'w'
   541  001047  00                 	db	0
   542  001048                     STR_6:
   543                           
   544                           ; BSR set to: 1
   545  001048  73                 	db	115	;'s'
   546  001049  74                 	db	116	;'t'
   547  00104A  61                 	db	97	;'a'
   548  00104B  79                 	db	121	;'y'
   549  00104C  20                 	db	32
   550  00104D  4C                 	db	76	;'L'
   551  00104E  65                 	db	101	;'e'
   552  00104F  66                 	db	102	;'f'
   553  001050  74                 	db	116	;'t'
   554  001051  0A                 	db	10
   555  001052  00                 	db	0
   556  001053                     STR_2:
   557                           
   558                           ; BSR set to: 1
   559  001053  4D                 	db	77	;'M'
   560  001054  50                 	db	80	;'P'
   561  001055  6F                 	db	111	;'o'
   562  001056  77                 	db	119	;'w'
   563  001057  3A                 	db	58	;':'
   564  001058  20                 	db	32
   565  001059  25                 	db	37
   566  00105A  66                 	db	102	;'f'
   567  00105B  0A                 	db	10
   568  00105C  00                 	db	0
   569  00105D                     STR_8:
   570                           
   571                           ; BSR set to: 1
   572  00105D  49                 	db	73	;'I'
   573  00105E  4E                 	db	78	;'N'
   574  00105F  46                 	db	70	;'F'
   575  001060  00                 	db	0
   576  001061                     STR_12:
   577                           
   578                           ; BSR set to: 1
   579  001061  4E                 	db	78	;'N'
   580  001062  41                 	db	65	;'A'
   581  001063  4E                 	db	78	;'N'
   582  001064  00                 	db	0
   583  001065                     STR_9:
   584                           
   585                           ; BSR set to: 1
   586  001065  69                 	db	105	;'i'
   587  001066  6E                 	db	110	;'n'
   588  001067  66                 	db	102	;'f'
   589  001068  00                 	db	0
   590  001069                     STR_13:
   591                           
   592                           ; BSR set to: 1
   593  001069  6E                 	db	110	;'n'
   594  00106A  61                 	db	97	;'a'
   595  00106B  6E                 	db	110	;'n'
   596  00106C  00                 	db	0
   597  00106D                     STR_16:
   598                           
   599                           ; BSR set to: 1
   600  00106D  6C                 	db	108	;'l'
   601  00106E  66                 	db	102	;'f'
   602  00106F  00                 	db	0
   603  001070  00                 	db	0	; dummy byte at the end
   604  0000                     
   605                           ; #config settings
   606                           
   607                           	psect	cinit
   608  005560                     __pcinit:
   609                           	callstack 0
   610  005560                     start_initialization:
   611                           	callstack 0
   612  005560                     __initialization:
   613                           	callstack 0
   614                           
   615                           ; Initialize objects allocated to BANK0 (1 bytes)
   616                           ; load TBLPTR registers with __pidataBANK0
   617  005560  0E96               	movlw	low __pidataBANK0
   618  005562  6EF6               	movwf	tblptrl,c
   619  005564  0E5E               	movlw	high __pidataBANK0
   620  005566  6EF7               	movwf	tblptrh,c
   621  005568  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   622  00556A  6EF8               	movwf	tblptru,c
   623  00556C  0009               	tblrd		*+	;fetch initializer
   624  00556E  006F FFD4  F0FE    	movff	tablat,__pdataBANK0
   625                           
   626                           ; Clear objects allocated to BANK1 (134 bytes)
   627  005574  EE00  F100         	lfsr	0,__pbssBANK1
   628  005578  0E86               	movlw	134
   629  00557A                     clear_0:
   630  00557A  6AEE               	clrf	postinc0,c
   631  00557C  06E8               	decf	wreg,f,c
   632  00557E  E1FD               	bnz	clear_0
   633                           
   634                           ; Clear objects allocated to BANK0 (25 bytes)
   635  005580  EE00  F0E5         	lfsr	0,__pbssBANK0
   636  005584  0E19               	movlw	25
   637  005586                     clear_1:
   638  005586  6AEE               	clrf	postinc0,c
   639  005588  06E8               	decf	wreg,f,c
   640  00558A  E1FD               	bnz	clear_1
   641                           
   642                           ; Clear objects allocated to COMRAM (18 bytes)
   643  00558C  EE00  F03A         	lfsr	0,__pbssCOMRAM
   644  005590  0E12               	movlw	18
   645  005592                     clear_2:
   646  005592  6AEE               	clrf	postinc0,c
   647  005594  06E8               	decf	wreg,f,c
   648  005596  E1FD               	bnz	clear_2
   649                           
   650                           ;
   651                           ; Setup IVTBASE
   652                           ;
   653  005598  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   654  00559A  6ED5               	movwf	213,c
   655  00559C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   656  00559E  6ED6               	movwf	214,c
   657  0055A0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   658  0055A2  6ED7               	movwf	215,c
   659  0055A4                     end_of_initialization:
   660                           	callstack 0
   661  0055A4                     __end_of__initialization:
   662                           	callstack 0
   663  0055A4  0100               	movlb	0
   664  0055A6  EF96  F02E         	goto	_main	;jump to C main() function
   665                           
   666                           	psect	bssCOMRAM
   667  00003A                     __pbssCOMRAM:
   668                           	callstack 0
   669  00003A                     _width:
   670                           	callstack 0
   671  00003A                     	ds	2
   672  00003C                     _prec:
   673                           	callstack 0
   674  00003C                     	ds	2
   675  00003E                     _flags:
   676                           	callstack 0
   677  00003E                     	ds	2
   678  000040                     TMR4_ISR@CountCallBack:
   679                           	callstack 0
   680  000040                     	ds	2
   681  000042                     _uart1RxLastError:
   682                           	callstack 0
   683  000042                     	ds	1
   684  000043                     _uart1RxCount:
   685                           	callstack 0
   686  000043                     	ds	1
   687  000044                     _uart1RxTail:
   688                           	callstack 0
   689  000044                     	ds	1
   690  000045                     _uart1RxHead:
   691                           	callstack 0
   692  000045                     	ds	1
   693  000046                     _uart1TxTail:
   694                           	callstack 0
   695  000046                     	ds	1
   696  000047                     _uart1TxHead:
   697                           	callstack 0
   698  000047                     	ds	1
   699  000048                     _smtPeriod:
   700                           	callstack 0
   701  000048                     	ds	4
   702                           
   703                           	psect	bssBANK0
   704  0000E5                     __pbssBANK0:
   705                           	callstack 0
   706  0000E5                     _BatteryVolt:
   707                           	callstack 0
   708  0000E5                     	ds	2
   709  0000E7                     _actMotorPow:
   710                           	callstack 0
   711  0000E7                     	ds	2
   712  0000E9                     _currentSpeed:
   713                           	callstack 0
   714  0000E9                     	ds	2
   715  0000EB                     _setSpeed:
   716                           	callstack 0
   717  0000EB                     	ds	2
   718  0000ED                     _oldDistRight:
   719                           	callstack 0
   720  0000ED                     	ds	2
   721  0000EF                     _oldDistLeft:
   722                           	callstack 0
   723  0000EF                     	ds	2
   724  0000F1                     _distRightM:
   725                           	callstack 0
   726  0000F1                     	ds	2
   727  0000F3                     _distRight:
   728                           	callstack 0
   729  0000F3                     	ds	2
   730  0000F5                     _distLeftM:
   731                           	callstack 0
   732  0000F5                     	ds	2
   733  0000F7                     _distLeft:
   734                           	callstack 0
   735  0000F7                     	ds	2
   736  0000F9                     _delay:
   737                           	callstack 0
   738  0000F9                     	ds	1
   739  0000FA                     _cycle10ms:
   740                           	callstack 0
   741  0000FA                     	ds	1
   742  0000FB                     _curveMode:
   743                           	callstack 0
   744  0000FB                     	ds	1
   745  0000FC                     _distFront:
   746                           	callstack 0
   747  0000FC                     	ds	2
   748                           
   749                           	psect	dataBANK0
   750  0000FE                     __pdataBANK0:
   751                           	callstack 0
   752  0000FE                     _driveMode:
   753                           	callstack 0
   754  0000FE                     	ds	1
   755                           
   756                           	psect	bssBANK1
   757  000100                     __pbssBANK1:
   758                           	callstack 0
   759  000100                     _uart1RxStatusBuffer:
   760                           	callstack 0
   761  000100                     	ds	8
   762  000108                     _uart1RxBuffer:
   763                           	callstack 0
   764  000108                     	ds	8
   765  000110                     _uart1TxBuffer:
   766                           	callstack 0
   767  000110                     	ds	8
   768  000118                     floorf@F527:
   769                           	callstack 0
   770  000118                     	ds	4
   771  00011C                     ___fpclassifyf@F465:
   772                           	callstack 0
   773  00011C                     	ds	4
   774  000120                     _smtWay:
   775                           	callstack 0
   776  000120                     	ds	4
   777  000124                     _smtDuty:
   778                           	callstack 0
   779  000124                     	ds	4
   780  000128                     _nout:
   781                           	callstack 0
   782  000128                     	ds	2
   783  00012A                     _reverseTime:
   784                           	callstack 0
   785  00012A                     	ds	2
   786  00012C                     _oldSpeed:
   787                           	callstack 0
   788  00012C                     	ds	2
   789  00012E                     _motPow:
   790                           	callstack 0
   791  00012E                     	ds	2
   792  000130                     _middleOffSet:
   793                           	callstack 0
   794  000130                     	ds	2
   795  000132                     _battCheckCount:
   796                           	callstack 0
   797  000132                     	ds	2
   798  000134                     _reverseCount:
   799                           	callstack 0
   800  000134                     	ds	2
   801  000136                     _dbuf:
   802                           	callstack 0
   803  000136                     	ds	80
   804                           
   805                           	psect	cstackBANK1
   806  00019C                     __pcstackBANK1:
   807                           	callstack 0
   808  00019C                     ?_vfprintf:
   809                           	callstack 0
   810  00019C                     vfprintf@fp:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x0
   814  00019C                     	ds	2
   815  00019E                     vfprintf@fmt:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x2
   819  00019E                     	ds	2
   820  0001A0                     vfprintf@ap:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x4
   824  0001A0                     	ds	2
   825  0001A2                     ?_printf:
   826                           	callstack 0
   827  0001A2                     printf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x6
   831  0001A2                     	ds	6
   832  0001A8                     printf@ap:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0xC
   836  0001A8                     	ds	2
   837  0001AA                     ??_getCurve:
   838  0001AA                     startAccell@MPow:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0xE
   842  0001AA                     	ds	2
   843  0001AC                     getCurve@deltaRight:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x10
   847  0001AC                     	ds	2
   848  0001AE                     getCurve@deltaLeft:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x12
   852  0001AE                     	ds	2
   853                           
   854                           	psect	cstackBANK0
   855  000060                     __pcstackBANK0:
   856                           	callstack 0
   857  000060                     ?_dtoa:
   858                           	callstack 0
   859  000060                     ___flmul@sign:
   860                           	callstack 0
   861  000060                     dtoa@fp:
   862                           	callstack 0
   863  000060                     floorf@m:
   864                           	callstack 0
   865                           
   866                           ; 4 bytes @ 0x0
   867  000060                     	ds	1
   868  000061                     ___flmul@aexp:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x1
   872  000061                     	ds	1
   873  000062                     ___flmul@grs:
   874                           	callstack 0
   875  000062                     dtoa@d:
   876                           	callstack 0
   877                           
   878                           ; 8 bytes @ 0x2
   879  000062                     	ds	2
   880  000064                     floorf@e:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x4
   884  000064                     	ds	2
   885  000066                     ___flmul@bexp:
   886                           	callstack 0
   887  000066                     floorf@u:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x6
   891  000066                     	ds	1
   892  000067                     ___flmul@prod:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x7
   896  000067                     	ds	3
   897  00006A                     _dtoa$3530:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0xA
   901  00006A                     	ds	1
   902  00006B                     ___flmul@temp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0xB
   906  00006B                     	ds	1
   907  00006C                     dtoa@p:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0xC
   911  00006C                     	ds	1
   912  00006D                     ?___fladd:
   913                           	callstack 0
   914  00006D                     ___flge@ff1:
   915                           	callstack 0
   916  00006D                     ___fladd@b:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0xD
   920  00006D                     	ds	1
   921  00006E                     dtoa@w:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0xE
   925  00006E                     	ds	2
   926  000070                     dtoa@s:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x10
   930  000070                     	ds	1
   931  000071                     ___flge@ff2:
   932                           	callstack 0
   933  000071                     ___fladd@a:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x11
   937  000071                     	ds	1
   938  000072                     dtoa@n:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x12
   942  000072                     	ds	3
   943  000075                     ___fladd@signs:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x15
   947  000075                     	ds	1
   948  000076                     ___fladd@aexp:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x16
   952  000076                     	ds	1
   953  000077                     ___fladd@bexp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x17
   957  000077                     	ds	1
   958  000078                     ___fladd@grs:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x18
   962  000078                     	ds	1
   963  000079                     ?___flsub:
   964                           	callstack 0
   965  000079                     ?___fltol:
   966                           	callstack 0
   967  000079                     ___fltol@f1:
   968                           	callstack 0
   969  000079                     ___flsub@b:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x19
   973  000079                     	ds	1
   974  00007A                     dtoa@i:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x1A
   978  00007A                     	ds	3
   979  00007D                     ??___fltol:
   980  00007D                     ___flsub@a:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x1D
   984  00007D                     	ds	4
   985  000081                     ___fltol@sign1:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x21
   989  000081                     	ds	1
   990  000082                     ___fltol@exp1:
   991                           	callstack 0
   992                           
   993                           ; 1 bytes @ 0x22
   994  000082                     	ds	1
   995  000083                     ??_calcSteering:
   996  000083                     ??_calcSpeed:
   997  000083                     ??_calcMotorPow:
   998  000083                     ?_efgtoa:
   999                           	callstack 0
  1000  000083                     efgtoa@fp:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x23
  1004  000083                     	ds	2
  1005  000085                     calcMotorPow@setSpeedDelta:
  1006                           	callstack 0
  1007  000085                     _calcSteering$4174:
  1008                           	callstack 0
  1009  000085                     efgtoa@f:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x25
  1013  000085                     	ds	2
  1014  000087                     calcSteering@delta:
  1015                           	callstack 0
  1016  000087                     calcSpeed@speed:
  1017                           	callstack 0
  1018  000087                     calcMotorPow@oldSpeedDelta:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x27
  1022  000087                     	ds	2
  1023  000089                     calcMotorPow@addMPow:
  1024                           	callstack 0
  1025  000089                     efgtoa@c:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x29
  1029  000089                     	ds	1
  1030  00008A                     ??_efgtoa:
  1031                           
  1032                           ; 1 bytes @ 0x2A
  1033  00008A                     	ds	5
  1034  00008F                     _efgtoa$3554:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x2F
  1038  00008F                     	ds	2
  1039  000091                     _efgtoa$3555:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x31
  1043  000091                     	ds	2
  1044  000093                     _efgtoa$3559:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x33
  1048  000093                     	ds	2
  1049  000095                     _efgtoa$3563:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x35
  1053  000095                     	ds	2
  1054  000097                     _efgtoa$3564:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x37
  1058  000097                     	ds	2
  1059  000099                     _efgtoa$3565:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x39
  1063  000099                     	ds	2
  1064  00009B                     efgtoa@t:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x3B
  1068  00009B                     	ds	2
  1069  00009D                     efgtoa@pp:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x3D
  1073  00009D                     	ds	2
  1074  00009F                     efgtoa@ne:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x3F
  1078  00009F                     	ds	2
  1079  0000A1                     efgtoa@m:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x41
  1083  0000A1                     	ds	2
  1084  0000A3                     efgtoa@ou:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x43
  1088  0000A3                     	ds	4
  1089  0000A7                     efgtoa@d:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x47
  1093  0000A7                     	ds	2
  1094  0000A9                     efgtoa@sign:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x49
  1098  0000A9                     	ds	2
  1099  0000AB                     efgtoa@p:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x4B
  1103  0000AB                     	ds	2
  1104  0000AD                     efgtoa@w:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x4D
  1108  0000AD                     	ds	2
  1109  0000AF                     efgtoa@nmode:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x4F
  1113  0000AF                     	ds	1
  1114  0000B0                     efgtoa@mode:
  1115                           	callstack 0
  1116                           
  1117                           ; 1 bytes @ 0x50
  1118  0000B0                     	ds	1
  1119  0000B1                     efgtoa@h:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x51
  1123  0000B1                     	ds	4
  1124  0000B5                     efgtoa@l:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x55
  1128  0000B5                     	ds	4
  1129  0000B9                     efgtoa@i:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x59
  1133  0000B9                     	ds	2
  1134  0000BB                     efgtoa@g:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x5B
  1138  0000BB                     	ds	4
  1139  0000BF                     efgtoa@e:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x5F
  1143  0000BF                     	ds	2
  1144  0000C1                     efgtoa@n:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x61
  1148  0000C1                     	ds	2
  1149  0000C3                     efgtoa@u:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x63
  1153  0000C3                     	ds	4
  1154  0000C7                     ?_vfpfcnvrt:
  1155                           	callstack 0
  1156  0000C7                     vfpfcnvrt@fp:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x67
  1160  0000C7                     	ds	2
  1161  0000C9                     vfpfcnvrt@fmt:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x69
  1165  0000C9                     	ds	2
  1166  0000CB                     vfpfcnvrt@ap:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x6B
  1170  0000CB                     	ds	2
  1171  0000CD                     ??_vfpfcnvrt:
  1172                           
  1173                           ; 1 bytes @ 0x6D
  1174  0000CD                     	ds	4
  1175  0000D1                     vfpfcnvrt@ll:
  1176                           	callstack 0
  1177                           
  1178                           ; 8 bytes @ 0x71
  1179  0000D1                     	ds	8
  1180  0000D9                     _vfpfcnvrt$3583:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x79
  1184  0000D9                     	ds	2
  1185  0000DB                     vfpfcnvrt@f:
  1186                           	callstack 0
  1187                           
  1188                           ; 4 bytes @ 0x7B
  1189  0000DB                     	ds	4
  1190  0000DF                     vfpfcnvrt@ct:
  1191                           	callstack 0
  1192                           
  1193                           ; 3 bytes @ 0x7F
  1194  0000DF                     	ds	3
  1195  0000E2                     vfpfcnvrt@c:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x82
  1199  0000E2                     	ds	1
  1200  0000E3                     vfprintf@cfmt:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x83
  1204  0000E3                     	ds	2
  1205                           
  1206                           	psect	cstackCOMRAM
  1207  000001                     __pcstackCOMRAM:
  1208                           	callstack 0
  1209  000001                     CCP3_DefaultCallBack@capturedValue:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x0
  1213  000001                     	ds	2
  1214  000003                     CCP3_CaptureISR@module:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x2
  1218  000003                     	ds	2
  1219  000005                     CCP4_DefaultCallBack@capturedValue:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x4
  1223  000005                     	ds	2
  1224  000007                     CCP4_CaptureISR@module:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x6
  1228  000007                     	ds	2
  1229  000009                     ?_TMR5_ReadTimer:
  1230                           	callstack 0
  1231  000009                     TMR5_WriteTimer@timerVal:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x8
  1235  000009                     	ds	2
  1236  00000B                     ??_TMR5_ReadTimer:
  1237  00000B                     
  1238                           ; 1 bytes @ 0xA
  1239  00000B                     	ds	2
  1240  00000D                     TMR5_ReadTimer@readVal:
  1241                           	callstack 0
  1242                           
  1243                           ; 2 bytes @ 0xC
  1244  00000D                     	ds	2
  1245  00000F                     TMR5_ReadTimer@readValHigh:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0xE
  1249  00000F                     	ds	1
  1250  000010                     TMR5_ReadTimer@readValLow:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0xF
  1254  000010                     	ds	1
  1255  000011                     ??_UART1_tx_vect_isr:
  1256  000011                     
  1257                           ; 1 bytes @ 0x10
  1258  000011                     	ds	1
  1259  000012                     ??_UART1_rx_vect_isr:
  1260                           
  1261                           ; 1 bytes @ 0x11
  1262  000012                     	ds	1
  1263  000013                     ??_TMR4_ISR:
  1264                           
  1265                           ; 1 bytes @ 0x12
  1266  000013                     	ds	1
  1267  000014                     ??_TMR3_Initialize:
  1268  000014                     ?_strlen:
  1269                           	callstack 0
  1270  000014                     ?___fpclassifyf:
  1271                           	callstack 0
  1272  000014                     ?_isupper:
  1273                           	callstack 0
  1274  000014                     ?_strncmp:
  1275                           	callstack 0
  1276  000014                     ?_ADCC_GetSingleConversion:
  1277                           	callstack 0
  1278  000014                     ?___awdiv:
  1279                           	callstack 0
  1280  000014                     ?___awmod:
  1281                           	callstack 0
  1282  000014                     ?___fldiv:
  1283                           	callstack 0
  1284  000014                     ?___aldiv:
  1285                           	callstack 0
  1286  000014                     ?___flneg:
  1287                           	callstack 0
  1288  000014                     ?___aodiv:
  1289                           	callstack 0
  1290  000014                     ?___aomod:
  1291                           	callstack 0
  1292  000014                     UART1_Write@txData:
  1293                           	callstack 0
  1294  000014                     INTERRUPT_Initialize@state:
  1295                           	callstack 0
  1296  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1297                           	callstack 0
  1298  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1299                           	callstack 0
  1300  000014                     UART1_SetErrorHandler@interruptHandler:
  1301                           	callstack 0
  1302  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1303                           	callstack 0
  1304  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1305                           	callstack 0
  1306  000014                     CCP3_SetCallBack@customCallBack:
  1307                           	callstack 0
  1308  000014                     CCP4_SetCallBack@customCallBack:
  1309                           	callstack 0
  1310  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1311                           	callstack 0
  1312  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1313                           	callstack 0
  1314  000014                     PWM7_LoadDutyValue@dutyValue:
  1315                           	callstack 0
  1316  000014                     PWM8_LoadDutyValue@dutyValue:
  1317                           	callstack 0
  1318  000014                     PWM5_LoadDutyValue@dutyValue:
  1319                           	callstack 0
  1320  000014                     PWM6_LoadDutyValue@dutyValue:
  1321                           	callstack 0
  1322  000014                     ___awdiv@dividend:
  1323                           	callstack 0
  1324  000014                     ___awmod@dividend:
  1325                           	callstack 0
  1326  000014                     isupper@c:
  1327                           	callstack 0
  1328  000014                     strcpy@dest:
  1329                           	callstack 0
  1330  000014                     strlen@s:
  1331                           	callstack 0
  1332  000014                     strncmp@_l:
  1333                           	callstack 0
  1334  000014                     ___aldiv@dividend:
  1335                           	callstack 0
  1336  000014                     ___fleq@ff1:
  1337                           	callstack 0
  1338  000014                     ___flneg@f1:
  1339                           	callstack 0
  1340  000014                     ___fldiv@b:
  1341                           	callstack 0
  1342  000014                     ___fpclassifyf@x:
  1343                           	callstack 0
  1344  000014                     ___aodiv@dividend:
  1345                           	callstack 0
  1346  000014                     ___aomod@dividend:
  1347                           	callstack 0
  1348                           
  1349                           ; 8 bytes @ 0x13
  1350  000014                     	ds	1
  1351  000015                     putch@txData:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x14
  1355  000015                     	ds	1
  1356  000016                     ??_TMR5_Initialize:
  1357  000016                     ??_isupper:
  1358  000016                     ??_PWM7_LoadDutyValue:
  1359  000016                     ??_PWM8_LoadDutyValue:
  1360  000016                     ??_PWM5_LoadDutyValue:
  1361  000016                     ??_PWM6_LoadDutyValue:
  1362  000016                     ??_ADCC_GetSingleConversion:
  1363  000016                     ___awdiv@divisor:
  1364                           	callstack 0
  1365  000016                     ___awmod@divisor:
  1366                           	callstack 0
  1367  000016                     fputc@c:
  1368                           	callstack 0
  1369  000016                     strcpy@src:
  1370                           	callstack 0
  1371  000016                     strlen@a:
  1372                           	callstack 0
  1373  000016                     strncmp@_r:
  1374                           	callstack 0
  1375                           
  1376                           ; 2 bytes @ 0x15
  1377  000016                     	ds	2
  1378  000018                     ??___fpclassifyf:
  1379  000018                     ??_strcpy:
  1380  000018                     ADCC_GetSingleConversion@channel:
  1381                           	callstack 0
  1382  000018                     ___awdiv@counter:
  1383                           	callstack 0
  1384  000018                     ___awmod@counter:
  1385                           	callstack 0
  1386  000018                     setMotor@motorPower:
  1387                           	callstack 0
  1388  000018                     fputc@fp:
  1389                           	callstack 0
  1390  000018                     strncmp@n:
  1391                           	callstack 0
  1392  000018                     ___aldiv@divisor:
  1393                           	callstack 0
  1394  000018                     ___fleq@ff2:
  1395                           	callstack 0
  1396  000018                     ___fldiv@a:
  1397                           	callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x17
  1400  000018                     	ds	1
  1401  000019                     ___awdiv@sign:
  1402                           	callstack 0
  1403  000019                     ___awmod@sign:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x18
  1407  000019                     	ds	1
  1408  00001A                     ??_setMotor:
  1409  00001A                     ??_fputc:
  1410  00001A                     ??_strncmp:
  1411  00001A                     ?_tolower:
  1412                           	callstack 0
  1413  00001A                     ___awdiv@quotient:
  1414                           	callstack 0
  1415  00001A                     strcpy@s:
  1416                           	callstack 0
  1417  00001A                     tolower@c:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x19
  1421  00001A                     	ds	1
  1422  00001B                     strncmp@l:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x1A
  1426  00001B                     	ds	1
  1427  00001C                     ??___fldiv:
  1428  00001C                     ??_tolower:
  1429  00001C                     ??___fleq:
  1430  00001C                     ?___xxtofl:
  1431                           	callstack 0
  1432  00001C                     ___aldiv@counter:
  1433                           	callstack 0
  1434  00001C                     setSteering@steering:
  1435                           	callstack 0
  1436  00001C                     ___fpclassifyf@e:
  1437                           	callstack 0
  1438  00001C                     strcpy@d:
  1439                           	callstack 0
  1440  00001C                     ___xxtofl@val:
  1441                           	callstack 0
  1442  00001C                     ___aodiv@divisor:
  1443                           	callstack 0
  1444  00001C                     ___aomod@divisor:
  1445                           	callstack 0
  1446                           
  1447                           ; 8 bytes @ 0x1B
  1448  00001C                     	ds	1
  1449  00001D                     ___aldiv@sign:
  1450                           	callstack 0
  1451  00001D                     strncmp@r:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x1C
  1455  00001D                     	ds	1
  1456  00001E                     setSteering@steeringMode:
  1457                           	callstack 0
  1458  00001E                     ___aldiv@quotient:
  1459                           	callstack 0
  1460  00001E                     ___fpclassifyf@u:
  1461                           	callstack 0
  1462                           
  1463                           ; 4 bytes @ 0x1D
  1464  00001E                     	ds	1
  1465  00001F                     ??_setSteering:
  1466  00001F                     fputs@s:
  1467                           	callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x1E
  1470  00001F                     	ds	1
  1471  000020                     ??___xxtofl:
  1472  000020                     _tolower$3676:
  1473                           	callstack 0
  1474  000020                     ___fldiv@rem:
  1475                           	callstack 0
  1476                           
  1477                           ; 4 bytes @ 0x1F
  1478  000020                     	ds	1
  1479  000021                     setSteering@steeringF:
  1480                           	callstack 0
  1481  000021                     fputs@fp:
  1482                           	callstack 0
  1483                           
  1484                           ; 2 bytes @ 0x20
  1485  000021                     	ds	1
  1486  000022                     ?_actSpeed:
  1487                           	callstack 0
  1488                           
  1489                           ; 2 bytes @ 0x21
  1490  000022                     	ds	1
  1491  000023                     fputs@c:
  1492                           	callstack 0
  1493  000023                     setSteering@steeringB:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x22
  1497  000023                     	ds	1
  1498  000024                     ___aodiv@counter:
  1499                           	callstack 0
  1500  000024                     ___aomod@counter:
  1501                           	callstack 0
  1502  000024                     ___fldiv@sign:
  1503                           	callstack 0
  1504  000024                     ___xxtofl@sign:
  1505                           	callstack 0
  1506  000024                     actSpeed@speed:
  1507                           	callstack 0
  1508  000024                     fputs@i:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x23
  1512  000024                     	ds	1
  1513  000025                     ___aodiv@sign:
  1514                           	callstack 0
  1515  000025                     ___aomod@sign:
  1516                           	callstack 0
  1517  000025                     ___xxtofl@exp:
  1518                           	callstack 0
  1519  000025                     ___fldiv@new_exp:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x24
  1523  000025                     	ds	1
  1524  000026                     ?_abs:
  1525                           	callstack 0
  1526  000026                     ?_pad:
  1527                           	callstack 0
  1528  000026                     pad@fp:
  1529                           	callstack 0
  1530  000026                     abs@a:
  1531                           	callstack 0
  1532  000026                     ___xxtofl@arg:
  1533                           	callstack 0
  1534  000026                     ___aodiv@quotient:
  1535                           	callstack 0
  1536                           
  1537                           ; 8 bytes @ 0x25
  1538  000026                     	ds	1
  1539  000027                     ___fldiv@grs:
  1540                           	callstack 0
  1541                           
  1542                           ; 4 bytes @ 0x26
  1543  000027                     	ds	1
  1544  000028                     ??_abs:
  1545  000028                     pad@buf:
  1546                           	callstack 0
  1547                           
  1548                           ; 2 bytes @ 0x27
  1549  000028                     	ds	2
  1550  00002A                     ?___flmul:
  1551                           	callstack 0
  1552  00002A                     pad@p:
  1553                           	callstack 0
  1554  00002A                     ___flmul@b:
  1555                           	callstack 0
  1556                           
  1557                           ; 4 bytes @ 0x29
  1558  00002A                     	ds	1
  1559  00002B                     ___fldiv@bexp:
  1560                           	callstack 0
  1561                           
  1562                           ; 1 bytes @ 0x2A
  1563  00002B                     	ds	1
  1564  00002C                     ??_pad:
  1565  00002C                     ___fldiv@aexp:
  1566                           	callstack 0
  1567                           
  1568                           ; 1 bytes @ 0x2B
  1569  00002C                     	ds	1
  1570  00002D                     ?_floorf:
  1571                           	callstack 0
  1572  00002D                     pad@i:
  1573                           	callstack 0
  1574  00002D                     floorf@x:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x2C
  1578  00002D                     	ds	1
  1579  00002E                     ___flmul@a:
  1580                           	callstack 0
  1581                           
  1582                           ; 4 bytes @ 0x2D
  1583  00002E                     	ds	1
  1584  00002F                     pad@w:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x2E
  1588  00002F                     	ds	2
  1589  000031                     ??_floorf:
  1590  000031                     ??_dtoa:
  1591                           
  1592                           ; 1 bytes @ 0x30
  1593  000031                     	ds	1
  1594  000032                     ??___flmul:
  1595                           
  1596                           ; 1 bytes @ 0x31
  1597  000032                     	ds	4
  1598  000036                     ??___fladd:
  1599  000036                     ??___flge:
  1600                           
  1601                           ; 1 bytes @ 0x35
  1602  000036                     	ds	4
  1603  00003A                     
  1604                           ; 1 bytes @ 0x39
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 8 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels required when called: 19
  1630 ;; This function calls:
  1631 ;;		_SYSTEM_Initialize
  1632 ;;		_TMR4_SetInterruptHandler
  1633 ;;		_loop
  1634 ;; This function is called by:
  1635 ;;		Startup code after reset
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text0
  1640  005D2C                     __ptext0:
  1641                           	callstack 0
  1642  005D2C                     _main:
  1643                           	callstack 12
  1644  005D2C                     
  1645                           ;main.c: 9:     SYSTEM_Initialize();
  1646  005D2C  ECD5  F02A         	call	_SYSTEM_Initialize	;wreg free
  1647  005D30                     
  1648                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1649  005D30  8ED2               	bsf	210,7,c	;volatile
  1650  005D32                     
  1651                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1652  005D32  8CD2               	bsf	210,6,c	;volatile
  1653                           
  1654                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1655  005D34  0E86               	movlw	low _TMR4_10msISR
  1656  005D36  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1657  005D38  0E5E               	movlw	high _TMR4_10msISR
  1658  005D3A  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1659  005D3C  EC31  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
  1660  005D40                     l9186:
  1661                           
  1662                           ;main.c: 15:         loop();
  1663  005D40  ECED  F021         	call	_loop	;wreg free
  1664  005D44  EFA0  F02E         	goto	l9186
  1665  005D48  EF57  F000         	goto	start
  1666  005D4C                     __end_of_main:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _loop *****************
  1670 ;; Defined at:
  1671 ;;		line 19 in file "main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;		None
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        0 bytes
  1690 ;; Hardware stack levels used: 1
  1691 ;; Hardware stack levels required when called: 18
  1692 ;; This function calls:
  1693 ;;		___flge
  1694 ;;		___xxtofl
  1695 ;;		_calcMotorPow
  1696 ;;		_calcSpeed
  1697 ;;		_calcSteering
  1698 ;;		_checkBatt
  1699 ;;		_getBatteryVoltage
  1700 ;;		_getCurve
  1701 ;;		_getReverse
  1702 ;;		_printf
  1703 ;;		_setMotor
  1704 ;;		_setSteering
  1705 ;;		_startAccell
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text1
  1712  0043DA                     __ptext1:
  1713                           	callstack 0
  1714  0043DA                     _loop:
  1715                           	callstack 12
  1716  0043DA                     
  1717                           ;main.c: 20:     setMotor(0);
  1718  0043DA  0E00               	movlw	0
  1719  0043DC  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1720  0043DE  0E00               	movlw	0
  1721  0043E0  6E18               	movwf	setMotor@motorPower^0,c
  1722  0043E2  EC91  F025         	call	_setMotor	;wreg free
  1723                           
  1724                           ;main.c: 21:     setSteering(0, Front);
  1725  0043E6  0E00               	movlw	0
  1726  0043E8  6E1D               	movwf	(setSteering@steering+1)^0,c
  1727  0043EA  0E00               	movlw	0
  1728  0043EC  6E1C               	movwf	setSteering@steering^0,c
  1729  0043EE  0E03               	movlw	3
  1730  0043F0  6E1E               	movwf	setSteering@steeringMode^0,c
  1731  0043F2  EC40  F01E         	call	_setSteering	;wreg free
  1732  0043F6                     l1224:
  1733  0043F6  B8CB               	btfsc	203,4,c	;volatile
  1734  0043F8  EF00  F022         	goto	u10231
  1735  0043FC  EF02  F022         	goto	u10230
  1736  004400                     u10231:
  1737  004400  EFFB  F021         	goto	l1224
  1738  004404                     u10230:
  1739  004404                     l9136:
  1740  004404  0100               	movlb	0	; () banked
  1741  004406  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1742  004408  B4D8               	btfsc	status,2,c
  1743  00440A  EF09  F022         	goto	u10241
  1744  00440E  EF0B  F022         	goto	u10240
  1745  004412                     u10241:
  1746  004412  EF02  F022         	goto	l9136
  1747  004416                     u10240:
  1748  004416                     
  1749                           ; BSR set to: 0
  1750                           ;main.c: 26:         cycle10ms = 0;
  1751  004416  0E00               	movlw	0
  1752  004418  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1753  00441A                     
  1754                           ; BSR set to: 0
  1755                           ;main.c: 28:         getBatteryVoltage();
  1756  00441A  ECFF  F02E         	call	_getBatteryVoltage	;wreg free
  1757  00441E                     
  1758                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1759  00441E  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  1760  004422  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1761  004426  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1762  004428  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1763  00442A  0E00               	movlw	0
  1764  00442C  EC66  F01D         	call	___xxtofl
  1765  004430  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1766  004434  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1767  004438  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1768  00443C  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1769  004440  0E7B               	movlw	123
  1770  004442  0100               	movlb	0	; () banked
  1771  004444  6F71               	movwf	___flge@ff2& (0+255),b
  1772  004446  0E14               	movlw	20
  1773  004448  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1774  00444A  0E2E               	movlw	46
  1775  00444C  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1776  00444E  0E45               	movlw	69
  1777  004450  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1778  004452  EC15  F024         	call	___flge	;wreg free
  1779  004456  0100               	movlb	0	; () banked
  1780  004458  A0D8               	btfss	status,0,c
  1781  00445A  EF31  F022         	goto	u10251
  1782  00445E  EF33  F022         	goto	u10250
  1783  004462                     u10251:
  1784  004462  EF02  F022         	goto	l9136
  1785  004466                     u10250:
  1786  004466                     
  1787                           ; BSR set to: 0
  1788                           ;main.c: 31:     startAccell();
  1789  004466  ECD6  F01F         	call	_startAccell	;wreg free
  1790  00446A                     
  1791                           ;main.c: 32:     driveMode = Straight;
  1792  00446A  0E01               	movlw	1
  1793  00446C  0100               	movlb	0	; () banked
  1794  00446E  6FFE               	movwf	_driveMode& (0+255),b
  1795  004470                     
  1796                           ; BSR set to: 0
  1797                           ;main.c: 33:     curveMode = OutCurve;
  1798  004470  0E00               	movlw	0
  1799  004472  6FFB               	movwf	_curveMode& (0+255),b
  1800  004474                     
  1801                           ; BSR set to: 0
  1802                           ;main.c: 34:     oldDistLeft = distLeft;
  1803  004474  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  1804  004478  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1805  00447C                     
  1806                           ; BSR set to: 0
  1807                           ;main.c: 35:     oldDistRight = distRight;
  1808  00447C  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  1809  004480  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  1810  004484                     
  1811                           ; BSR set to: 0
  1812                           ;main.c: 36:     cycle10ms = 0;
  1813  004484  0E00               	movlw	0
  1814  004486  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1815  004488                     l9156:
  1816  004488  0100               	movlb	0	; () banked
  1817  00448A  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  1818  00448C  B4D8               	btfsc	status,2,c
  1819  00448E  EF4B  F022         	goto	u10261
  1820  004492  EF4D  F022         	goto	u10260
  1821  004496                     u10261:
  1822  004496  EF44  F022         	goto	l9156
  1823  00449A                     u10260:
  1824  00449A                     
  1825                           ; BSR set to: 0
  1826                           ;main.c: 39:         cycle10ms = 0;
  1827  00449A  0E00               	movlw	0
  1828  00449C  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  1829  00449E                     
  1830                           ; BSR set to: 0
  1831                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1832  00449E  BACB               	btfsc	203,5,c	;volatile
  1833  0044A0  EF54  F022         	goto	u10271
  1834  0044A4  EF56  F022         	goto	u10270
  1835  0044A8                     u10271:
  1836  0044A8  EF68  F022         	goto	l9166
  1837  0044AC                     u10270:
  1838  0044AC                     
  1839                           ; BSR set to: 0
  1840                           ;main.c: 42:             setSpeed = 0;
  1841  0044AC  0E00               	movlw	0
  1842  0044AE  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  1843  0044B0  0E00               	movlw	0
  1844  0044B2  6FEB               	movwf	_setSpeed& (0+255),b
  1845                           
  1846                           ;main.c: 43:             actMotorPow = 0;
  1847  0044B4  0E00               	movlw	0
  1848  0044B6  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1849  0044B8  0E00               	movlw	0
  1850  0044BA  6FE7               	movwf	_actMotorPow& (0+255),b
  1851  0044BC                     
  1852                           ; BSR set to: 0
  1853                           ;main.c: 44:             setSteering(0, Front);
  1854  0044BC  0E00               	movlw	0
  1855  0044BE  6E1D               	movwf	(setSteering@steering+1)^0,c
  1856  0044C0  0E00               	movlw	0
  1857  0044C2  6E1C               	movwf	setSteering@steering^0,c
  1858  0044C4  0E03               	movlw	3
  1859  0044C6  6E1E               	movwf	setSteering@steeringMode^0,c
  1860  0044C8  EC40  F01E         	call	_setSteering	;wreg free
  1861                           
  1862                           ;main.c: 45:             break;
  1863  0044CC  EF87  F022         	goto	l1240
  1864  0044D0                     l9166:
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;main.c: 48:         if (checkBatt()) {
  1868  0044D0  EC1E  F029         	call	_checkBatt	;wreg free
  1869  0044D4  0900               	iorlw	0
  1870  0044D6  B4D8               	btfsc	status,2,c
  1871  0044D8  EF70  F022         	goto	u10281
  1872  0044DC  EF72  F022         	goto	u10280
  1873  0044E0                     u10281:
  1874  0044E0  EF7B  F022         	goto	l9170
  1875  0044E4                     u10280:
  1876  0044E4                     
  1877                           ;main.c: 49:             printf("Battery Low");
  1878  0044E4  0E3C               	movlw	low STR_1
  1879  0044E6  0101               	movlb	1	; () banked
  1880  0044E8  6FA2               	movwf	printf@fmt& (0+255),b
  1881  0044EA  0E10               	movlw	high STR_1
  1882  0044EC  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  1883  0044EE  EC4A  F02E         	call	_printf	;wreg free
  1884                           
  1885                           ;main.c: 50:             break;
  1886  0044F2  EF87  F022         	goto	l1240
  1887  0044F6                     l9170:
  1888                           
  1889                           ;main.c: 53:         getCurve();
  1890  0044F6  ECEA  F018         	call	_getCurve	;wreg free
  1891  0044FA                     
  1892                           ;main.c: 54:         getReverse();
  1893  0044FA  EC92  F023         	call	_getReverse	;wreg free
  1894  0044FE                     
  1895                           ;main.c: 56:         calcSteering();
  1896  0044FE  EC3E  F01A         	call	_calcSteering	;wreg free
  1897  004502                     
  1898                           ;main.c: 57:         calcSpeed();
  1899  004502  EC61  F01C         	call	_calcSpeed	;wreg free
  1900  004506                     
  1901                           ;main.c: 58:         calcMotorPow();
  1902  004506  EC47  F021         	call	_calcMotorPow	;wreg free
  1903  00450A  EF44  F022         	goto	l9156
  1904  00450E                     l1240:
  1905  00450E  0012               	return		;funcret
  1906  004510                     __end_of_loop:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _startAccell *****************
  1910 ;; Defined at:
  1911 ;;		line 98 in file "main.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  MPow            4   14[BANK1 ] float 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;Total ram usage:        4 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 17
  1932 ;; This function calls:
  1933 ;;		___flge
  1934 ;;		___flmul
  1935 ;;		___fltol
  1936 ;;		___xxtofl
  1937 ;;		_calcSteering
  1938 ;;		_printf
  1939 ;;		_setMotor
  1940 ;;		_setSteering
  1941 ;; This function is called by:
  1942 ;;		_loop
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text2
  1947  003FAC                     __ptext2:
  1948                           	callstack 0
  1949  003FAC                     _startAccell:
  1950                           	callstack 12
  1951  003FAC                     
  1952                           ;main.c: 99:     setSteering(0, Front);
  1953  003FAC  0E00               	movlw	0
  1954  003FAE  6E1D               	movwf	(setSteering@steering+1)^0,c
  1955  003FB0  0E00               	movlw	0
  1956  003FB2  6E1C               	movwf	setSteering@steering^0,c
  1957  003FB4  0E03               	movlw	3
  1958  003FB6  6E1E               	movwf	setSteering@steeringMode^0,c
  1959  003FB8  EC40  F01E         	call	_setSteering	;wreg free
  1960  003FBC                     
  1961                           ;main.c: 100:     driveMode = Accel;
  1962  003FBC  0E00               	movlw	0
  1963  003FBE  0100               	movlb	0	; () banked
  1964  003FC0  6FFE               	movwf	_driveMode& (0+255),b
  1965  003FC2                     
  1966                           ; BSR set to: 0
  1967                           ;main.c: 102:     actMotorPow = (40);
  1968  003FC2  0E00               	movlw	0
  1969  003FC4  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1970  003FC6  0E28               	movlw	40
  1971  003FC8  6FE7               	movwf	_actMotorPow& (0+255),b
  1972                           
  1973                           ;main.c: 103:     float MPow = actMotorPow;
  1974  003FCA  C0E7  F01C         	movff	_actMotorPow,___xxtofl@val
  1975  003FCE  C0E8  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1976  003FD2  0E00               	movlw	0
  1977  003FD4  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1978  003FD6  0EFF               	movlw	-1
  1979  003FD8  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1980  003FDA  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1981  003FDC  0E01               	movlw	1
  1982  003FDE  EC66  F01D         	call	___xxtofl
  1983  003FE2  C01C  F1AA         	movff	?___xxtofl,startAccell@MPow
  1984  003FE6  C01D  F1AB         	movff	?___xxtofl+1,startAccell@MPow+1
  1985  003FEA  C01E  F1AC         	movff	?___xxtofl+2,startAccell@MPow+2
  1986  003FEE  C01F  F1AD         	movff	?___xxtofl+3,startAccell@MPow+3
  1987  003FF2                     
  1988                           ;main.c: 104:         printf("MPow: %f\n",MPow);
  1989  003FF2  0E53               	movlw	low STR_2
  1990  003FF4  0101               	movlb	1	; () banked
  1991  003FF6  6FA2               	movwf	printf@fmt& (0+255),b
  1992  003FF8  0E10               	movlw	high STR_2
  1993  003FFA  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  1994  003FFC  C1AA  F1A4         	movff	startAccell@MPow,?_printf+2
  1995  004000  C1AB  F1A5         	movff	startAccell@MPow+1,?_printf+3
  1996  004004  C1AC  F1A6         	movff	startAccell@MPow+2,?_printf+4
  1997  004008  C1AD  F1A7         	movff	startAccell@MPow+3,?_printf+5
  1998  00400C  EC4A  F02E         	call	_printf	;wreg free
  1999                           
  2000                           ;main.c: 105:     while (MPow < (250)) {
  2001  004010  EF50  F020         	goto	l8932
  2002  004014                     l8918:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;main.c: 106:         MPow *= (1.1);
  2006  004014  C1AA  F02A         	movff	startAccell@MPow,___flmul@b
  2007  004018  C1AB  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  2008  00401C  C1AC  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  2009  004020  C1AD  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  2010  004024  0ECD               	movlw	205
  2011  004026  6E2E               	movwf	___flmul@a^0,c
  2012  004028  0ECC               	movlw	204
  2013  00402A  6E2F               	movwf	(___flmul@a+1)^0,c
  2014  00402C  0E8C               	movlw	140
  2015  00402E  6E30               	movwf	(___flmul@a+2)^0,c
  2016  004030  0E3F               	movlw	63
  2017  004032  6E31               	movwf	(___flmul@a+3)^0,c
  2018  004034  EC82  F013         	call	___flmul	;wreg free
  2019  004038  C02A  F1AA         	movff	?___flmul,startAccell@MPow
  2020  00403C  C02B  F1AB         	movff	?___flmul+1,startAccell@MPow+1
  2021  004040  C02C  F1AC         	movff	?___flmul+2,startAccell@MPow+2
  2022  004044  C02D  F1AD         	movff	?___flmul+3,startAccell@MPow+3
  2023  004048                     
  2024                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  2025  004048  C1AA  F079         	movff	startAccell@MPow,___fltol@f1
  2026  00404C  C1AB  F07A         	movff	startAccell@MPow+1,___fltol@f1+1
  2027  004050  C1AC  F07B         	movff	startAccell@MPow+2,___fltol@f1+2
  2028  004054  C1AD  F07C         	movff	startAccell@MPow+3,___fltol@f1+3
  2029  004058  EC0E  F023         	call	___fltol	;wreg free
  2030  00405C  C079  F0E7         	movff	?___fltol,_actMotorPow
  2031  004060  C07A  F0E8         	movff	?___fltol+1,_actMotorPow+1
  2032  004064                     
  2033                           ;main.c: 108:         setMotor(actMotorPow);
  2034  004064  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2035  004068  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2036  00406C  EC91  F025         	call	_setMotor	;wreg free
  2037  004070                     
  2038                           ;main.c: 109:         printf("actMPow: %d\n",actMotorPow);
  2039  004070  0E23               	movlw	low STR_3
  2040  004072  0101               	movlb	1	; () banked
  2041  004074  6FA2               	movwf	printf@fmt& (0+255),b
  2042  004076  0E10               	movlw	high STR_3
  2043  004078  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2044  00407A  C0E7  F1A4         	movff	_actMotorPow,?_printf+2
  2045  00407E  C0E8  F1A5         	movff	_actMotorPow+1,?_printf+3
  2046  004082  EC4A  F02E         	call	_printf	;wreg free
  2047  004086                     
  2048                           ;main.c: 110:         calcSteering();
  2049  004086  EC3E  F01A         	call	_calcSteering	;wreg free
  2050  00408A                     
  2051                           ;main.c: 112:         cycle10ms = 0;
  2052  00408A  0E00               	movlw	0
  2053  00408C  0100               	movlb	0	; () banked
  2054  00408E  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2055  004090                     l8930:
  2056                           
  2057                           ; BSR set to: 0
  2058  004090  51FA               	movf	_cycle10ms& (0+255),w,b	;volatile
  2059  004092  B4D8               	btfsc	status,2,c
  2060  004094  EF4E  F020         	goto	u9901
  2061  004098  EF50  F020         	goto	u9900
  2062  00409C                     u9901:
  2063  00409C  EF48  F020         	goto	l8930
  2064  0040A0                     u9900:
  2065  0040A0                     l8932:
  2066                           
  2067                           ;main.c: 105:     while (MPow < (250)) {
  2068  0040A0  C1AA  F06D         	movff	startAccell@MPow,___flge@ff1
  2069  0040A4  C1AB  F06E         	movff	startAccell@MPow+1,___flge@ff1+1
  2070  0040A8  C1AC  F06F         	movff	startAccell@MPow+2,___flge@ff1+2
  2071  0040AC  C1AD  F070         	movff	startAccell@MPow+3,___flge@ff1+3
  2072  0040B0  0E00               	movlw	0
  2073  0040B2  0100               	movlb	0	; () banked
  2074  0040B4  6F71               	movwf	___flge@ff2& (0+255),b
  2075  0040B6  0E00               	movlw	0
  2076  0040B8  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2077  0040BA  0E7A               	movlw	122
  2078  0040BC  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2079  0040BE  0E43               	movlw	67
  2080  0040C0  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2081  0040C2  EC15  F024         	call	___flge	;wreg free
  2082  0040C6  0100               	movlb	0	; () banked
  2083  0040C8  A0D8               	btfss	status,0,c
  2084  0040CA  EF69  F020         	goto	u9911
  2085  0040CE  EF6B  F020         	goto	u9910
  2086  0040D2                     u9911:
  2087  0040D2  EF0A  F020         	goto	l8918
  2088  0040D6                     u9910:
  2089  0040D6                     
  2090                           ; BSR set to: 0
  2091                           ;main.c: 116:     actMotorPow = (250);
  2092  0040D6  0E00               	movlw	0
  2093  0040D8  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  2094  0040DA  0EFA               	movlw	250
  2095  0040DC  6FE7               	movwf	_actMotorPow& (0+255),b
  2096  0040DE                     
  2097                           ; BSR set to: 0
  2098                           ;main.c: 117:     setMotor(actMotorPow);
  2099  0040DE  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2100  0040E2  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2101  0040E6  EC91  F025         	call	_setMotor	;wreg free
  2102  0040EA                     
  2103                           ;main.c: 118:     printf("starAccelPower: %d\n", actMotorPow);
  2104  0040EA  0E01               	movlw	low STR_4
  2105  0040EC  0101               	movlb	1	; () banked
  2106  0040EE  6FA2               	movwf	printf@fmt& (0+255),b
  2107  0040F0  0E10               	movlw	high STR_4
  2108  0040F2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2109  0040F4  C0E7  F1A4         	movff	_actMotorPow,?_printf+2
  2110  0040F8  C0E8  F1A5         	movff	_actMotorPow+1,?_printf+3
  2111  0040FC  EC4A  F02E         	call	_printf	;wreg free
  2112  004100                     
  2113                           ;main.c: 120:     cycle10ms = 0;
  2114  004100  0E00               	movlw	0
  2115  004102  0100               	movlb	0	; () banked
  2116  004104  6FFA               	movwf	_cycle10ms& (0+255),b	;volatile
  2117                           
  2118                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2119  004106  EF87  F020         	goto	l8944
  2120  00410A                     l8942:
  2121                           
  2122                           ; BSR set to: 0
  2123                           ;main.c: 122:         calcSteering();
  2124  00410A  EC3E  F01A         	call	_calcSteering	;wreg free
  2125  00410E                     l8944:
  2126                           
  2127                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2128  00410E  0E1D               	movlw	29
  2129  004110  0100               	movlb	0	; () banked
  2130  004112  65FA               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2131  004114  EF8E  F020         	goto	u9921
  2132  004118  EF90  F020         	goto	u9920
  2133  00411C                     u9921:
  2134  00411C  EF85  F020         	goto	l8942
  2135  004120                     u9920:
  2136  004120                     
  2137                           ; BSR set to: 0
  2138                           ;main.c: 124:     driveMode = Straight;
  2139  004120  0E01               	movlw	1
  2140  004122  6FFE               	movwf	_driveMode& (0+255),b
  2141  004124                     
  2142                           ; BSR set to: 0
  2143                           ;main.c: 125:     calcSteering();
  2144  004124  EC3E  F01A         	call	_calcSteering	;wreg free
  2145  004128  0012               	return		;funcret
  2146  00412A                     __end_of_startAccell:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _calcSteering *****************
  2150 ;; Defined at:
  2151 ;;		line 233 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  delta           2   39[BANK0 ] short 
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;Total ram usage:        6 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 10
  2172 ;; This function calls:
  2173 ;;		___awdiv
  2174 ;;		___flmul
  2175 ;;		___fltol
  2176 ;;		___xxtofl
  2177 ;;		_setSteering
  2178 ;; This function is called by:
  2179 ;;		_loop
  2180 ;;		_startAccell
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text3
  2185  00347C                     __ptext3:
  2186                           	callstack 0
  2187  00347C                     _calcSteering:
  2188                           	callstack 18
  2189  00347C                     
  2190                           ;main.c: 234:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) (middleOf
      +                          fSet * 1.4142135);
  2191  00347C  0EF3               	movlw	243
  2192  00347E  6E2E               	movwf	___flmul@a^0,c
  2193  003480  0E04               	movlw	4
  2194  003482  6E2F               	movwf	(___flmul@a+1)^0,c
  2195  003484  0EB5               	movlw	181
  2196  003486  6E30               	movwf	(___flmul@a+2)^0,c
  2197  003488  0E3F               	movlw	63
  2198  00348A  6E31               	movwf	(___flmul@a+3)^0,c
  2199  00348C  C130  F01C         	movff	_middleOffSet,___xxtofl@val
  2200  003490  C131  F01D         	movff	_middleOffSet+1,___xxtofl@val+1
  2201  003494  0E00               	movlw	0
  2202  003496  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  2203  003498  0EFF               	movlw	-1
  2204  00349A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  2205  00349C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  2206  00349E  0E01               	movlw	1
  2207  0034A0  EC66  F01D         	call	___xxtofl
  2208  0034A4  C01C  F02A         	movff	?___xxtofl,___flmul@b
  2209  0034A8  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  2210  0034AC  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  2211  0034B0  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  2212  0034B4  EC82  F013         	call	___flmul	;wreg free
  2213  0034B8  C02A  F079         	movff	?___flmul,___fltol@f1
  2214  0034BC  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
  2215  0034C0  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
  2216  0034C4  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
  2217  0034C8  EC0E  F023         	call	___fltol	;wreg free
  2218  0034CC  C0F3  F083         	movff	_distRight,??_calcSteering	;volatile
  2219  0034D0  C0F4  F084         	movff	_distRight+1,??_calcSteering+1	;volatile
  2220  0034D4  0100               	movlb	0	; () banked
  2221  0034D6  1F83               	comf	??_calcSteering& (0+255),f,b
  2222  0034D8  1F84               	comf	(??_calcSteering+1)& (0+255),f,b
  2223  0034DA  4B83               	infsnz	??_calcSteering& (0+255),f,b
  2224  0034DC  2B84               	incf	(??_calcSteering+1)& (0+255),f,b
  2225  0034DE  5179               	movf	?___fltol& (0+255),w,b
  2226  0034E0  5F83               	subwf	??_calcSteering& (0+255),f,b
  2227  0034E2  517A               	movf	(?___fltol+1)& (0+255),w,b
  2228  0034E4  5B84               	subwfb	(??_calcSteering+1)& (0+255),f,b
  2229  0034E6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2230  0034E8  2583               	addwf	??_calcSteering& (0+255),w,b
  2231  0034EA  6F87               	movwf	calcSteering@delta& (0+255),b
  2232  0034EC  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2233  0034EE  2184               	addwfc	(??_calcSteering+1)& (0+255),w,b
  2234  0034F0  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2235                           
  2236                           ;main.c: 238:     switch (driveMode) {
  2237  0034F2  EFA3  F01A         	goto	l8870
  2238  0034F6                     l1319:
  2239  0034F6                     l8860:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;main.c: 244:             if (delta > (25)) {
  2243  0034F6  BF88               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  2244  0034F8  EF87  F01A         	goto	u9861
  2245  0034FC  5188               	movf	(calcSteering@delta+1)& (0+255),w,b
  2246  0034FE  E109               	bnz	u9860
  2247  003500  0E1A               	movlw	26
  2248  003502  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2249  003504  A0D8               	btfss	status,0,c
  2250  003506  EF87  F01A         	goto	u9861
  2251  00350A  EF89  F01A         	goto	u9860
  2252  00350E                     u9861:
  2253  00350E  EF8F  F01A         	goto	l8864
  2254  003512                     u9860:
  2255  003512                     
  2256                           ; BSR set to: 0
  2257                           ;main.c: 245:                 delta = (25);
  2258  003512  0E00               	movlw	0
  2259  003514  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2260  003516  0E19               	movlw	25
  2261  003518  6F87               	movwf	calcSteering@delta& (0+255),b
  2262                           
  2263                           ;main.c: 246:             } else if (delta < -(25)) {
  2264  00351A  EF2C  F01B         	goto	l8896
  2265  00351E                     l8864:
  2266                           
  2267                           ; BSR set to: 0
  2268  00351E  AF88               	btfss	(calcSteering@delta+1)& (0+255),7,b
  2269  003520  EF9B  F01A         	goto	u9871
  2270  003524  0EE7               	movlw	231
  2271  003526  5D87               	subwf	calcSteering@delta& (0+255),w,b
  2272  003528  0EFF               	movlw	255
  2273  00352A  5988               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  2274  00352C  B0D8               	btfsc	status,0,c
  2275  00352E  EF9B  F01A         	goto	u9871
  2276  003532  EF9D  F01A         	goto	u9870
  2277  003536                     u9871:
  2278  003536  EFC4  F01A         	goto	l1324
  2279  00353A                     u9870:
  2280  00353A                     
  2281                           ; BSR set to: 0
  2282                           ;main.c: 247:                 delta = -(25);
  2283  00353A  0EFF               	movlw	255
  2284  00353C  6F88               	movwf	(calcSteering@delta+1)& (0+255),b
  2285  00353E  0EE7               	movlw	231
  2286  003540  6F87               	movwf	calcSteering@delta& (0+255),b
  2287  003542  EF2C  F01B         	goto	l8896
  2288  003546                     l8870:
  2289                           
  2290                           ; BSR set to: 0
  2291  003546  51FE               	movf	_driveMode& (0+255),w,b
  2292  003548  6F83               	movwf	??_calcSteering& (0+255),b
  2293  00354A  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2294                           
  2295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 1, Range of values is 0 to 0
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            4     3 (average)
  2301                           ;	Chosen strategy is simple_byte
  2302  00354C  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2303  00354E  0A00               	xorlw	0	; case 0
  2304  003550  B4D8               	btfsc	status,2,c
  2305  003552  EFAD  F01A         	goto	l9308
  2306  003556  EF2C  F01B         	goto	l8896
  2307  00355A                     l9308:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ; Switch size 1, requested type "simple"
  2311                           ; Number of cases is 5, Range of values is 0 to 6
  2312                           ; switch strategies available:
  2313                           ; Name         Instructions Cycles
  2314                           ; simple_byte           16     9 (average)
  2315                           ;	Chosen strategy is simple_byte
  2316  00355A  5183               	movf	??_calcSteering& (0+255),w,b
  2317  00355C  0A00               	xorlw	0	; case 0
  2318  00355E  B4D8               	btfsc	status,2,c
  2319  003560  EF7B  F01A         	goto	l1319
  2320  003564  0A01               	xorlw	1	; case 1
  2321  003566  B4D8               	btfsc	status,2,c
  2322  003568  EF7B  F01A         	goto	l8860
  2323  00356C  0A03               	xorlw	3	; case 2
  2324  00356E  B4D8               	btfsc	status,2,c
  2325  003570  EF7B  F01A         	goto	l8860
  2326  003574  0A07               	xorlw	7	; case 5
  2327  003576  B4D8               	btfsc	status,2,c
  2328  003578  EF7B  F01A         	goto	l8860
  2329  00357C  0A03               	xorlw	3	; case 6
  2330  00357E  B4D8               	btfsc	status,2,c
  2331  003580  EF7B  F01A         	goto	l8860
  2332  003584  EF2C  F01B         	goto	l8896
  2333  003588                     l1324:
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;main.c: 254:     switch (driveMode) {
  2337  003588  EF2C  F01B         	goto	l8896
  2338  00358C                     l8872:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 256:             setSteering(delta, Ratio);
  2342  00358C  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2343  003590  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2344  003594  0E02               	movlw	2
  2345  003596  6E1E               	movwf	setSteering@steeringMode^0,c
  2346  003598  EC40  F01E         	call	_setSteering	;wreg free
  2347                           
  2348                           ;main.c: 257:             break;
  2349  00359C  EF55  F01B         	goto	l1339
  2350  0035A0                     l8874:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;main.c: 259:             setSteering(delta, Front);
  2354  0035A0  C087  F01C         	movff	calcSteering@delta,setSteering@steering
  2355  0035A4  C088  F01D         	movff	calcSteering@delta+1,setSteering@steering+1
  2356  0035A8  0E03               	movlw	3
  2357  0035AA  6E1E               	movwf	setSteering@steeringMode^0,c
  2358  0035AC  EC40  F01E         	call	_setSteering	;wreg free
  2359                           
  2360                           ;main.c: 260:             break;
  2361  0035B0  EF55  F01B         	goto	l1339
  2362  0035B4                     l8876:
  2363                           
  2364                           ; BSR set to: 0
  2365                           ;main.c: 262:             setSteering(delta / (2), Front);
  2366  0035B4  C087  F014         	movff	calcSteering@delta,___awdiv@dividend
  2367  0035B8  C088  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  2368  0035BC  0E00               	movlw	0
  2369  0035BE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  2370  0035C0  0E02               	movlw	2
  2371  0035C2  6E16               	movwf	___awdiv@divisor^0,c
  2372  0035C4  EC67  F026         	call	___awdiv	;wreg free
  2373  0035C8  C014  F085         	movff	?___awdiv,_calcSteering$4174
  2374  0035CC  C015  F086         	movff	?___awdiv+1,_calcSteering$4174+1
  2375                           
  2376                           ;main.c: 262:             setSteering(delta / (2), Front);
  2377  0035D0  C085  F01C         	movff	_calcSteering$4174,setSteering@steering
  2378  0035D4  C086  F01D         	movff	_calcSteering$4174+1,setSteering@steering+1
  2379  0035D8  0E03               	movlw	3
  2380  0035DA  6E1E               	movwf	setSteering@steeringMode^0,c
  2381  0035DC  EC40  F01E         	call	_setSteering	;wreg free
  2382                           
  2383                           ;main.c: 264:             break;
  2384  0035E0  EF55  F01B         	goto	l1339
  2385  0035E4                     l8878:
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;main.c: 266:             setSteering(-(60), Inverted);
  2389  0035E4  0EFF               	movlw	255
  2390  0035E6  6E1D               	movwf	(setSteering@steering+1)^0,c
  2391  0035E8  0EC4               	movlw	196
  2392  0035EA  6E1C               	movwf	setSteering@steering^0,c
  2393  0035EC  0E00               	movlw	0
  2394  0035EE  6E1E               	movwf	setSteering@steeringMode^0,c
  2395  0035F0  EC40  F01E         	call	_setSteering	;wreg free
  2396                           
  2397                           ;main.c: 267:             break;
  2398  0035F4  EF55  F01B         	goto	l1339
  2399  0035F8                     l8880:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;main.c: 269:             setSteering((60), Inverted);
  2403  0035F8  0E00               	movlw	0
  2404  0035FA  6E1D               	movwf	(setSteering@steering+1)^0,c
  2405  0035FC  0E3C               	movlw	60
  2406  0035FE  6E1C               	movwf	setSteering@steering^0,c
  2407  003600  0E00               	movlw	0
  2408  003602  6E1E               	movwf	setSteering@steeringMode^0,c
  2409  003604  EC40  F01E         	call	_setSteering	;wreg free
  2410                           
  2411                           ;main.c: 270:             break;
  2412  003608  EF55  F01B         	goto	l1339
  2413  00360C                     l8882:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;main.c: 272:             if (curveMode == InCurve) {
  2417  00360C  0E02               	movlw	2
  2418  00360E  19FB               	xorwf	_curveMode& (0+255),w,b
  2419  003610  A4D8               	btfss	status,2,c
  2420  003612  EF0D  F01B         	goto	u9881
  2421  003616  EF0F  F01B         	goto	u9880
  2422  00361A                     u9881:
  2423  00361A  EFC6  F01A         	goto	l8872
  2424  00361E                     u9880:
  2425  00361E                     
  2426                           ; BSR set to: 0
  2427                           ;main.c: 273:                 setSteering((60), Ratio);
  2428  00361E  0E00               	movlw	0
  2429  003620  6E1D               	movwf	(setSteering@steering+1)^0,c
  2430  003622  0E3C               	movlw	60
  2431  003624  6E1C               	movwf	setSteering@steering^0,c
  2432  003626  0E02               	movlw	2
  2433  003628  6E1E               	movwf	setSteering@steeringMode^0,c
  2434  00362A  EC40  F01E         	call	_setSteering	;wreg free
  2435                           
  2436                           ;main.c: 274:             } else {
  2437  00362E  EF55  F01B         	goto	l1339
  2438  003632                     l8888:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ;main.c: 279:             if (curveMode == InCurve) {
  2442  003632  0E02               	movlw	2
  2443  003634  19FB               	xorwf	_curveMode& (0+255),w,b
  2444  003636  A4D8               	btfss	status,2,c
  2445  003638  EF20  F01B         	goto	u9891
  2446  00363C  EF22  F01B         	goto	u9890
  2447  003640                     u9891:
  2448  003640  EFC6  F01A         	goto	l8872
  2449  003644                     u9890:
  2450  003644                     
  2451                           ; BSR set to: 0
  2452                           ;main.c: 280:                 setSteering(-(60), Ratio);
  2453  003644  0EFF               	movlw	255
  2454  003646  6E1D               	movwf	(setSteering@steering+1)^0,c
  2455  003648  0EC4               	movlw	196
  2456  00364A  6E1C               	movwf	setSteering@steering^0,c
  2457  00364C  0E02               	movlw	2
  2458  00364E  6E1E               	movwf	setSteering@steeringMode^0,c
  2459  003650  EC40  F01E         	call	_setSteering	;wreg free
  2460                           
  2461                           ;main.c: 281:             } else {
  2462  003654  EF55  F01B         	goto	l1339
  2463  003658                     l8896:
  2464                           
  2465                           ; BSR set to: 0
  2466  003658  51FE               	movf	_driveMode& (0+255),w,b
  2467  00365A  6F83               	movwf	??_calcSteering& (0+255),b
  2468  00365C  6B84               	clrf	(??_calcSteering+1)& (0+255),b
  2469                           
  2470                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2471                           ; Switch size 1, requested type "simple"
  2472                           ; Number of cases is 1, Range of values is 0 to 0
  2473                           ; switch strategies available:
  2474                           ; Name         Instructions Cycles
  2475                           ; simple_byte            4     3 (average)
  2476                           ;	Chosen strategy is simple_byte
  2477  00365E  5184               	movf	(??_calcSteering+1)& (0+255),w,b
  2478  003660  0A00               	xorlw	0	; case 0
  2479  003662  B4D8               	btfsc	status,2,c
  2480  003664  EF36  F01B         	goto	l9310
  2481  003668  EF55  F01B         	goto	l1339
  2482  00366C                     l9310:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ; Switch size 1, requested type "simple"
  2486                           ; Number of cases is 7, Range of values is 0 to 6
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte           22    12 (average)
  2490                           ;	Chosen strategy is simple_byte
  2491  00366C  5183               	movf	??_calcSteering& (0+255),w,b
  2492  00366E  0A00               	xorlw	0	; case 0
  2493  003670  B4D8               	btfsc	status,2,c
  2494  003672  EFDA  F01A         	goto	l8876
  2495  003676  0A01               	xorlw	1	; case 1
  2496  003678  B4D8               	btfsc	status,2,c
  2497  00367A  EFD0  F01A         	goto	l8874
  2498  00367E  0A03               	xorlw	3	; case 2
  2499  003680  B4D8               	btfsc	status,2,c
  2500  003682  EFC6  F01A         	goto	l8872
  2501  003686  0A01               	xorlw	1	; case 3
  2502  003688  B4D8               	btfsc	status,2,c
  2503  00368A  EFF2  F01A         	goto	l8878
  2504  00368E  0A07               	xorlw	7	; case 4
  2505  003690  B4D8               	btfsc	status,2,c
  2506  003692  EFFC  F01A         	goto	l8880
  2507  003696  0A01               	xorlw	1	; case 5
  2508  003698  B4D8               	btfsc	status,2,c
  2509  00369A  EF06  F01B         	goto	l8882
  2510  00369E  0A03               	xorlw	3	; case 6
  2511  0036A0  B4D8               	btfsc	status,2,c
  2512  0036A2  EF19  F01B         	goto	l8888
  2513  0036A6  EF55  F01B         	goto	l1339
  2514  0036AA                     l1339:
  2515  0036AA  0012               	return		;funcret
  2516  0036AC                     __end_of_calcSteering:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _getReverse *****************
  2520 ;; Defined at:
  2521 ;;		line 199 in file "main.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 8
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_loop
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           	psect	text4
  2550  004724                     __ptext4:
  2551                           	callstack 0
  2552  004724                     _getReverse:
  2553                           	callstack 21
  2554  004724                     
  2555                           ;main.c: 200:     if (distFront < (15)) {
  2556  004724  0100               	movlb	0	; () banked
  2557  004726  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2558  004728  E107               	bnz	u6661
  2559  00472A  0E0F               	movlw	15
  2560  00472C  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2561  00472E  B0D8               	btfsc	status,0,c
  2562  004730  EF9C  F023         	goto	u6661
  2563  004734  EF9E  F023         	goto	u6660
  2564  004738                     u6661:
  2565  004738  EFA3  F023         	goto	l6916
  2566  00473C                     u6660:
  2567  00473C                     
  2568                           ; BSR set to: 0
  2569                           ;main.c: 201:         ++reverseCount;
  2570  00473C  0101               	movlb	1	; () banked
  2571  00473E  4B34               	infsnz	_reverseCount& (0+255),f,b
  2572  004740  2B35               	incf	(_reverseCount+1)& (0+255),f,b
  2573                           
  2574                           ;main.c: 202:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  2575  004742  EFBA  F023         	goto	l6922
  2576  004746                     l6916:
  2577                           
  2578                           ; BSR set to: 0
  2579  004746  0E03               	movlw	3
  2580  004748  19FE               	xorwf	_driveMode& (0+255),w,b
  2581  00474A  B4D8               	btfsc	status,2,c
  2582  00474C  EFAA  F023         	goto	u6671
  2583  004750  EFAC  F023         	goto	u6670
  2584  004754                     u6671:
  2585  004754  EFBA  F023         	goto	l6922
  2586  004758                     u6670:
  2587  004758                     
  2588                           ; BSR set to: 0
  2589  004758  0E04               	movlw	4
  2590  00475A  19FE               	xorwf	_driveMode& (0+255),w,b
  2591  00475C  B4D8               	btfsc	status,2,c
  2592  00475E  EFB3  F023         	goto	u6681
  2593  004762  EFB5  F023         	goto	u6680
  2594  004766                     u6681:
  2595  004766  EFBA  F023         	goto	l6922
  2596  00476A                     u6680:
  2597  00476A                     
  2598                           ; BSR set to: 0
  2599                           ;main.c: 203:         reverseCount = 0;
  2600  00476A  0E00               	movlw	0
  2601  00476C  0101               	movlb	1	; () banked
  2602  00476E  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2603  004770  0E00               	movlw	0
  2604  004772  6F34               	movwf	_reverseCount& (0+255),b
  2605  004774                     l6922:
  2606                           
  2607                           ;main.c: 206:     if (reverseCount > (50)) {
  2608  004774  0101               	movlb	1	; () banked
  2609  004776  5135               	movf	(_reverseCount+1)& (0+255),w,b
  2610  004778  E109               	bnz	u6690
  2611  00477A  0E33               	movlw	51
  2612  00477C  5D34               	subwf	_reverseCount& (0+255),w,b
  2613  00477E  A0D8               	btfss	status,0,c
  2614  004780  EFC4  F023         	goto	u6691
  2615  004784  EFC6  F023         	goto	u6690
  2616  004788                     u6691:
  2617  004788  EF14  F024         	goto	l1312
  2618  00478C                     u6690:
  2619  00478C                     
  2620                           ; BSR set to: 1
  2621                           ;main.c: 207:         ++reverseTime;
  2622  00478C  4B2A               	infsnz	_reverseTime& (0+255),f,b
  2623  00478E  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  2624  004790                     
  2625                           ; BSR set to: 1
  2626                           ;main.c: 209:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  2627  004790  0E03               	movlw	3
  2628  004792  0100               	movlb	0	; () banked
  2629  004794  19FE               	xorwf	_driveMode& (0+255),w,b
  2630  004796  B4D8               	btfsc	status,2,c
  2631  004798  EFD0  F023         	goto	u6701
  2632  00479C  EFD2  F023         	goto	u6700
  2633  0047A0                     u6701:
  2634  0047A0  EFEC  F023         	goto	l6936
  2635  0047A4                     u6700:
  2636  0047A4                     
  2637                           ; BSR set to: 0
  2638  0047A4  0E04               	movlw	4
  2639  0047A6  19FE               	xorwf	_driveMode& (0+255),w,b
  2640  0047A8  B4D8               	btfsc	status,2,c
  2641  0047AA  EFD9  F023         	goto	u6711
  2642  0047AE  EFDB  F023         	goto	u6710
  2643  0047B2                     u6711:
  2644  0047B2  EFEC  F023         	goto	l6936
  2645  0047B6                     u6710:
  2646  0047B6                     
  2647                           ; BSR set to: 0
  2648                           ;main.c: 210:             if (distLeft > distRight) {
  2649  0047B6  51F7               	movf	_distLeft& (0+255),w,b	;volatile
  2650  0047B8  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2651  0047BA  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2652  0047BC  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2653  0047BE  B0D8               	btfsc	status,0,c
  2654  0047C0  EFE4  F023         	goto	u6721
  2655  0047C4  EFE6  F023         	goto	u6720
  2656  0047C8                     u6721:
  2657  0047C8  EFEA  F023         	goto	l6934
  2658  0047CC                     u6720:
  2659  0047CC                     
  2660                           ; BSR set to: 0
  2661                           ;main.c: 212:                 driveMode = ReverseRight;
  2662  0047CC  0E03               	movlw	3
  2663  0047CE  6FFE               	movwf	_driveMode& (0+255),b
  2664                           
  2665                           ;main.c: 213:             } else {
  2666  0047D0  EFEC  F023         	goto	l6936
  2667  0047D4                     l6934:
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;main.c: 215:                 driveMode = ReverseLeft;
  2671  0047D4  0E04               	movlw	4
  2672  0047D6  6FFE               	movwf	_driveMode& (0+255),b
  2673  0047D8                     l6936:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;main.c: 219:         if (distFront > (35) || reverseTime > (300)) {
  2677  0047D8  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  2678  0047DA  E107               	bnz	u6731
  2679  0047DC  0E24               	movlw	36
  2680  0047DE  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  2681  0047E0  B0D8               	btfsc	status,0,c
  2682  0047E2  EFF5  F023         	goto	u6731
  2683  0047E6  EFF7  F023         	goto	u6730
  2684  0047EA                     u6731:
  2685  0047EA  EF08  F024         	goto	l6940
  2686  0047EE                     u6730:
  2687  0047EE                     
  2688                           ; BSR set to: 0
  2689  0047EE  0101               	movlb	1	; () banked
  2690  0047F0  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  2691  0047F2  EF04  F024         	goto	u6741
  2692  0047F6  0E2D               	movlw	45
  2693  0047F8  5D2A               	subwf	_reverseTime& (0+255),w,b
  2694  0047FA  0E01               	movlw	1
  2695  0047FC  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  2696  0047FE  A0D8               	btfss	status,0,c
  2697  004800  EF04  F024         	goto	u6741
  2698  004804  EF06  F024         	goto	u6740
  2699  004808                     u6741:
  2700  004808  EF14  F024         	goto	l1312
  2701  00480C                     u6740:
  2702  00480C  EF08  F024         	goto	l6942
  2703  004810                     l6940:
  2704  004810                     l6942:
  2705                           
  2706                           ;main.c: 222:                 driveMode = Straight;
  2707  004810  0E01               	movlw	1
  2708  004812  0100               	movlb	0	; () banked
  2709  004814  6FFE               	movwf	_driveMode& (0+255),b
  2710  004816                     
  2711                           ; BSR set to: 0
  2712                           ;main.c: 227:             reverseCount = 0;
  2713  004816  0E00               	movlw	0
  2714  004818  0101               	movlb	1	; () banked
  2715  00481A  6F35               	movwf	(_reverseCount+1)& (0+255),b
  2716  00481C  0E00               	movlw	0
  2717  00481E  6F34               	movwf	_reverseCount& (0+255),b
  2718                           
  2719                           ;main.c: 228:             reverseTime = 0;
  2720  004820  0E00               	movlw	0
  2721  004822  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  2722  004824  0E00               	movlw	0
  2723  004826  6F2A               	movwf	_reverseTime& (0+255),b
  2724  004828                     l1312:
  2725                           
  2726                           ; BSR set to: 1
  2727  004828  0012               	return		;funcret
  2728  00482A                     __end_of_getReverse:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _getCurve *****************
  2732 ;; Defined at:
  2733 ;;		line 128 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  deltaLeft       2   18[BANK1 ] short 
  2738 ;;  deltaRight      2   16[BANK1 ] short 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        6 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 17
  2755 ;; This function calls:
  2756 ;;		_printf
  2757 ;; This function is called by:
  2758 ;;		_loop
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text5
  2763  0031D4                     __ptext5:
  2764                           	callstack 0
  2765  0031D4                     _getCurve:
  2766                           	callstack 12
  2767  0031D4                     
  2768                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  2769  0031D4  0100               	movlb	0	; () banked
  2770  0031D6  51EF               	movf	_oldDistLeft& (0+255),w,b
  2771  0031D8  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2772  0031DA  0101               	movlb	1	; () banked
  2773  0031DC  6FAE               	movwf	getCurve@deltaLeft& (0+255),b
  2774  0031DE  0100               	movlb	0	; () banked
  2775  0031E0  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2776  0031E2  59F8               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  2777  0031E4  0101               	movlb	1	; () banked
  2778  0031E6  6FAF               	movwf	(getCurve@deltaLeft+1)& (0+255),b
  2779                           
  2780                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  2781  0031E8  0100               	movlb	0	; () banked
  2782  0031EA  51ED               	movf	_oldDistRight& (0+255),w,b
  2783  0031EC  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2784  0031EE  0101               	movlb	1	; () banked
  2785  0031F0  6FAC               	movwf	getCurve@deltaRight& (0+255),b
  2786  0031F2  0100               	movlb	0	; () banked
  2787  0031F4  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2788  0031F6  59F4               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  2789  0031F8  0101               	movlb	1	; () banked
  2790  0031FA  6FAD               	movwf	(getCurve@deltaRight+1)& (0+255),b
  2791                           
  2792                           ;main.c: 132:     switch (curveMode) {
  2793  0031FC  EF16  F01A         	goto	l9042
  2794  003200                     l8974:
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  2798  003200  BFAF               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2799  003202  EF0C  F019         	goto	u9951
  2800  003206  51AF               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  2801  003208  E109               	bnz	u9950
  2802  00320A  0E1F               	movlw	31
  2803  00320C  5DAE               	subwf	getCurve@deltaLeft& (0+255),w,b
  2804  00320E  A0D8               	btfss	status,0,c
  2805  003210  EF0C  F019         	goto	u9951
  2806  003214  EF0E  F019         	goto	u9950
  2807  003218                     u9951:
  2808  003218  EF30  F019         	goto	l8982
  2809  00321C                     u9950:
  2810  00321C                     
  2811                           ; BSR set to: 1
  2812  00321C  BFAF               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  2813  00321E  EF1C  F019         	goto	u9960
  2814  003222  0E2C               	movlw	44
  2815  003224  5DAE               	subwf	getCurve@deltaLeft& (0+255),w,b
  2816  003226  0E01               	movlw	1
  2817  003228  59AF               	subwfb	(getCurve@deltaLeft+1)& (0+255),w,b
  2818  00322A  B0D8               	btfsc	status,0,c
  2819  00322C  EF1A  F019         	goto	u9961
  2820  003230  EF1C  F019         	goto	u9960
  2821  003234                     u9961:
  2822  003234  EF30  F019         	goto	l8982
  2823  003238                     u9960:
  2824  003238                     
  2825                           ; BSR set to: 1
  2826  003238  0100               	movlb	0	; () banked
  2827  00323A  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  2828  00323C  E107               	bnz	u9971
  2829  00323E  0E7D               	movlw	125
  2830  003240  5DEF               	subwf	_oldDistLeft& (0+255),w,b
  2831  003242  B0D8               	btfsc	status,0,c
  2832  003244  EF26  F019         	goto	u9971
  2833  003248  EF28  F019         	goto	u9970
  2834  00324C                     u9971:
  2835  00324C  EF30  F019         	goto	l8982
  2836  003250                     u9970:
  2837  003250                     
  2838                           ; BSR set to: 0
  2839                           ;main.c: 135:                 delay = 0;
  2840  003250  0E00               	movlw	0
  2841  003252  6FF9               	movwf	_delay& (0+255),b
  2842                           
  2843                           ;main.c: 136:                 curveMode = BeforeCurve;
  2844  003254  0E01               	movlw	1
  2845  003256  6FFB               	movwf	_curveMode& (0+255),b
  2846                           
  2847                           ;main.c: 137:                 driveMode = CurveLeft;
  2848  003258  0E05               	movlw	5
  2849  00325A  6FFE               	movwf	_driveMode& (0+255),b
  2850                           
  2851                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  2852  00325C  EF35  F01A         	goto	l1277
  2853  003260                     l8982:
  2854  003260  0101               	movlb	1	; () banked
  2855  003262  BFAD               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2856  003264  EF3D  F019         	goto	u9981
  2857  003268  51AD               	movf	(getCurve@deltaRight+1)& (0+255),w,b
  2858  00326A  E109               	bnz	u9980
  2859  00326C  0E1F               	movlw	31
  2860  00326E  5DAC               	subwf	getCurve@deltaRight& (0+255),w,b
  2861  003270  A0D8               	btfss	status,0,c
  2862  003272  EF3D  F019         	goto	u9981
  2863  003276  EF3F  F019         	goto	u9980
  2864  00327A                     u9981:
  2865  00327A  EF35  F01A         	goto	l1277
  2866  00327E                     u9980:
  2867  00327E                     
  2868                           ; BSR set to: 1
  2869  00327E  BFAD               	btfsc	(getCurve@deltaRight+1)& (0+255),7,b
  2870  003280  EF4D  F019         	goto	u9990
  2871  003284  0E2C               	movlw	44
  2872  003286  5DAC               	subwf	getCurve@deltaRight& (0+255),w,b
  2873  003288  0E01               	movlw	1
  2874  00328A  59AD               	subwfb	(getCurve@deltaRight+1)& (0+255),w,b
  2875  00328C  B0D8               	btfsc	status,0,c
  2876  00328E  EF4B  F019         	goto	u9991
  2877  003292  EF4D  F019         	goto	u9990
  2878  003296                     u9991:
  2879  003296  EF35  F01A         	goto	l1277
  2880  00329A                     u9990:
  2881  00329A                     
  2882                           ; BSR set to: 1
  2883  00329A  0100               	movlb	0	; () banked
  2884  00329C  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  2885  00329E  E107               	bnz	u10001
  2886  0032A0  0E7D               	movlw	125
  2887  0032A2  5DED               	subwf	_oldDistRight& (0+255),w,b
  2888  0032A4  B0D8               	btfsc	status,0,c
  2889  0032A6  EF57  F019         	goto	u10001
  2890  0032AA  EF59  F019         	goto	u10000
  2891  0032AE                     u10001:
  2892  0032AE  EF35  F01A         	goto	l1277
  2893  0032B2                     u10000:
  2894  0032B2                     
  2895                           ; BSR set to: 0
  2896                           ;main.c: 141:                 delay = 0;
  2897  0032B2  0E00               	movlw	0
  2898  0032B4  6FF9               	movwf	_delay& (0+255),b
  2899                           
  2900                           ;main.c: 142:                 curveMode = BeforeCurve;
  2901  0032B6  0E01               	movlw	1
  2902  0032B8  6FFB               	movwf	_curveMode& (0+255),b
  2903                           
  2904                           ;main.c: 143:                 driveMode = CurveRight;
  2905  0032BA  0E06               	movlw	6
  2906  0032BC  6FFE               	movwf	_driveMode& (0+255),b
  2907  0032BE  EF35  F01A         	goto	l1277
  2908  0032C2                     l8990:
  2909                           
  2910                           ; BSR set to: 1
  2911                           ;main.c: 150:             if (delay >= (20)) {
  2912  0032C2  0E13               	movlw	19
  2913  0032C4  0100               	movlb	0	; () banked
  2914  0032C6  65F9               	cpfsgt	_delay& (0+255),b
  2915  0032C8  EF68  F019         	goto	u10011
  2916  0032CC  EF6A  F019         	goto	u10010
  2917  0032D0                     u10011:
  2918  0032D0  EF70  F019         	goto	l8994
  2919  0032D4                     u10010:
  2920  0032D4                     
  2921                           ; BSR set to: 0
  2922                           ;main.c: 151:                 delay = 0;
  2923  0032D4  0E00               	movlw	0
  2924  0032D6  6FF9               	movwf	_delay& (0+255),b
  2925                           
  2926                           ;main.c: 152:                 curveMode = InCurve;
  2927  0032D8  0E02               	movlw	2
  2928  0032DA  6FFB               	movwf	_curveMode& (0+255),b
  2929                           
  2930                           ;main.c: 154:             } else {
  2931  0032DC  EF35  F01A         	goto	l1277
  2932  0032E0                     l8994:
  2933                           
  2934                           ;main.c: 155:                 ++delay;
  2935  0032E0  0100               	movlb	0	; () banked
  2936  0032E2  2BF9               	incf	_delay& (0+255),f,b
  2937  0032E4  EF35  F01A         	goto	l1277
  2938  0032E8                     l8996:
  2939                           
  2940                           ; BSR set to: 1
  2941                           ;main.c: 159:             if (delay >= (25)) {
  2942  0032E8  0E18               	movlw	24
  2943  0032EA  0100               	movlb	0	; () banked
  2944  0032EC  65F9               	cpfsgt	_delay& (0+255),b
  2945  0032EE  EF7B  F019         	goto	u10021
  2946  0032F2  EF7D  F019         	goto	u10020
  2947  0032F6                     u10021:
  2948  0032F6  EF70  F019         	goto	l8994
  2949  0032FA                     u10020:
  2950  0032FA                     
  2951                           ; BSR set to: 0
  2952                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (150)) {
  2953  0032FA  0E05               	movlw	5
  2954  0032FC  19FE               	xorwf	_driveMode& (0+255),w,b
  2955  0032FE  A4D8               	btfss	status,2,c
  2956  003300  EF84  F019         	goto	u10031
  2957  003304  EF86  F019         	goto	u10030
  2958  003308                     u10031:
  2959  003308  EF91  F019         	goto	l9002
  2960  00330C                     u10030:
  2961  00330C                     
  2962                           ; BSR set to: 0
  2963  00330C  51F8               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  2964  00330E  E109               	bnz	u10040
  2965  003310  0E2D               	movlw	45
  2966  003312  5DF7               	subwf	_distLeft& (0+255),w,b	;volatile
  2967  003314  A0D8               	btfss	status,0,c
  2968  003316  EF8F  F019         	goto	u10041
  2969  00331A  EF91  F019         	goto	u10040
  2970  00331E                     u10041:
  2971  00331E  EFB0  F019         	goto	l9008
  2972  003322                     u10040:
  2973  003322                     l9002:
  2974                           
  2975                           ; BSR set to: 0
  2976  003322  0E06               	movlw	6
  2977  003324  19FE               	xorwf	_driveMode& (0+255),w,b
  2978  003326  A4D8               	btfss	status,2,c
  2979  003328  EF98  F019         	goto	u10051
  2980  00332C  EF9A  F019         	goto	u10050
  2981  003330                     u10051:
  2982  003330  EFA5  F019         	goto	l9006
  2983  003334                     u10050:
  2984  003334                     
  2985                           ; BSR set to: 0
  2986  003334  51F4               	movf	(_distRight+1)& (0+255),w,b	;volatile
  2987  003336  E109               	bnz	u10060
  2988  003338  0E2D               	movlw	45
  2989  00333A  5DF3               	subwf	_distRight& (0+255),w,b	;volatile
  2990  00333C  A0D8               	btfss	status,0,c
  2991  00333E  EFA3  F019         	goto	u10061
  2992  003342  EFA5  F019         	goto	u10060
  2993  003346                     u10061:
  2994  003346  EFB0  F019         	goto	l9008
  2995  00334A                     u10060:
  2996  00334A                     l9006:
  2997                           
  2998                           ; BSR set to: 0
  2999  00334A  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  3000  00334C  E109               	bnz	u10070
  3001  00334E  0E97               	movlw	151
  3002  003350  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  3003  003352  A0D8               	btfss	status,0,c
  3004  003354  EFAE  F019         	goto	u10071
  3005  003358  EFB0  F019         	goto	u10070
  3006  00335C                     u10071:
  3007  00335C  EFE6  F019         	goto	l9026
  3008  003360                     u10070:
  3009  003360                     l9008:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;main.c: 161:                     printf("Time: %d     ", delay);
  3013  003360  0E15               	movlw	low STR_5
  3014  003362  0101               	movlb	1	; () banked
  3015  003364  6FA2               	movwf	printf@fmt& (0+255),b
  3016  003366  0E10               	movlw	high STR_5
  3017  003368  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3018  00336A  C0F9  F1A4         	movff	_delay,?_printf+2
  3019  00336E  6BA5               	clrf	(?_printf+3)& (0+255),b
  3020  003370  EC4A  F02E         	call	_printf	;wreg free
  3021  003374                     
  3022                           ;main.c: 162:                     if (delay >= 70) {
  3023  003374  0E45               	movlw	69
  3024  003376  0100               	movlb	0	; () banked
  3025  003378  65F9               	cpfsgt	_delay& (0+255),b
  3026  00337A  EFC1  F019         	goto	u10081
  3027  00337E  EFC3  F019         	goto	u10080
  3028  003382                     u10081:
  3029  003382  EFD1  F019         	goto	l9016
  3030  003386                     u10080:
  3031  003386                     
  3032                           ; BSR set to: 0
  3033                           ;main.c: 163:                         printf("stay Left\n");
  3034  003386  0E48               	movlw	low STR_6
  3035  003388  0101               	movlb	1	; () banked
  3036  00338A  6FA2               	movwf	printf@fmt& (0+255),b
  3037  00338C  0E10               	movlw	high STR_6
  3038  00338E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3039  003390  EC4A  F02E         	call	_printf	;wreg free
  3040  003394                     
  3041                           ;main.c: 164:                         middleOffSet = -15;
  3042  003394  0EFF               	movlw	255
  3043  003396  0101               	movlb	1	; () banked
  3044  003398  6F31               	movwf	(_middleOffSet+1)& (0+255),b
  3045  00339A  0EF1               	movlw	241
  3046  00339C  6F30               	movwf	_middleOffSet& (0+255),b
  3047                           
  3048                           ;main.c: 165:                     } else {
  3049  00339E  EFDD  F019         	goto	l9020
  3050  0033A2                     l9016:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;main.c: 166:                         printf("stay Right\n");
  3054  0033A2  0E30               	movlw	low STR_7
  3055  0033A4  0101               	movlb	1	; () banked
  3056  0033A6  6FA2               	movwf	printf@fmt& (0+255),b
  3057  0033A8  0E10               	movlw	high STR_7
  3058  0033AA  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3059  0033AC  EC4A  F02E         	call	_printf	;wreg free
  3060  0033B0                     
  3061                           ;main.c: 167:                         middleOffSet = 15;
  3062  0033B0  0E00               	movlw	0
  3063  0033B2  0101               	movlb	1	; () banked
  3064  0033B4  6F31               	movwf	(_middleOffSet+1)& (0+255),b
  3065  0033B6  0E0F               	movlw	15
  3066  0033B8  6F30               	movwf	_middleOffSet& (0+255),b
  3067  0033BA                     l9020:
  3068                           
  3069                           ; BSR set to: 1
  3070                           ;main.c: 170:                     delay = 0;
  3071  0033BA  0E00               	movlw	0
  3072  0033BC  0100               	movlb	0	; () banked
  3073  0033BE  6FF9               	movwf	_delay& (0+255),b
  3074  0033C0                     
  3075                           ; BSR set to: 0
  3076                           ;main.c: 171:                     curveMode = AfterCurve;
  3077  0033C0  0E03               	movlw	3
  3078  0033C2  6FFB               	movwf	_curveMode& (0+255),b
  3079  0033C4                     
  3080                           ; BSR set to: 0
  3081                           ;main.c: 172:                     driveMode = Straight;
  3082  0033C4  0E01               	movlw	1
  3083  0033C6  6FFE               	movwf	_driveMode& (0+255),b
  3084                           
  3085                           ;main.c: 175:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  3086  0033C8  EF70  F019         	goto	l8994
  3087  0033CC                     l9026:
  3088                           
  3089                           ; BSR set to: 0
  3090  0033CC  0E06               	movlw	6
  3091  0033CE  19FE               	xorwf	_driveMode& (0+255),w,b
  3092  0033D0  A4D8               	btfss	status,2,c
  3093  0033D2  EFED  F019         	goto	u10091
  3094  0033D6  EFEF  F019         	goto	u10090
  3095  0033DA                     u10091:
  3096  0033DA  EF70  F019         	goto	l8994
  3097  0033DE                     u10090:
  3098  0033DE                     
  3099                           ; BSR set to: 0
  3100  0033DE  0101               	movlb	1	; () banked
  3101  0033E0  BFAF               	btfsc	(getCurve@deltaLeft+1)& (0+255),7,b
  3102  0033E2  EFFC  F019         	goto	u10101
  3103  0033E6  51AF               	movf	(getCurve@deltaLeft+1)& (0+255),w,b
  3104  0033E8  E109               	bnz	u10100
  3105  0033EA  0E1F               	movlw	31
  3106  0033EC  5DAE               	subwf	getCurve@deltaLeft& (0+255),w,b
  3107  0033EE  A0D8               	btfss	status,0,c
  3108  0033F0  EFFC  F019         	goto	u10101
  3109  0033F4  EFFE  F019         	goto	u10100
  3110  0033F8                     u10101:
  3111  0033F8  EF70  F019         	goto	l8994
  3112  0033FC                     u10100:
  3113  0033FC                     
  3114                           ; BSR set to: 1
  3115                           ;main.c: 177:                     delay = 0;
  3116  0033FC  0E00               	movlw	0
  3117  0033FE  0100               	movlb	0	; () banked
  3118  003400  6FF9               	movwf	_delay& (0+255),b
  3119                           
  3120                           ;main.c: 178:                     curveMode = BeforeCurve;
  3121  003402  0E01               	movlw	1
  3122  003404  6FFB               	movwf	_curveMode& (0+255),b
  3123                           
  3124                           ;main.c: 179:                     driveMode = CurveLeft;
  3125  003406  0E05               	movlw	5
  3126  003408  6FFE               	movwf	_driveMode& (0+255),b
  3127  00340A  EF70  F019         	goto	l8994
  3128  00340E                     l9034:
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;main.c: 186:             if (delay >= (1)) {
  3132  00340E  0100               	movlb	0	; () banked
  3133  003410  51F9               	movf	_delay& (0+255),w,b
  3134  003412  B4D8               	btfsc	status,2,c
  3135  003414  EF0E  F01A         	goto	u10111
  3136  003418  EF10  F01A         	goto	u10110
  3137  00341C                     u10111:
  3138  00341C  EF70  F019         	goto	l8994
  3139  003420                     u10110:
  3140  003420                     
  3141                           ; BSR set to: 0
  3142                           ;main.c: 187:                 delay = 0;
  3143  003420  0E00               	movlw	0
  3144  003422  6FF9               	movwf	_delay& (0+255),b
  3145                           
  3146                           ;main.c: 188:                 curveMode = OutCurve;
  3147  003424  0E00               	movlw	0
  3148  003426  6FFB               	movwf	_curveMode& (0+255),b
  3149                           
  3150                           ;main.c: 190:             } else {
  3151  003428  EF35  F01A         	goto	l1277
  3152  00342C                     l9042:
  3153                           
  3154                           ; BSR set to: 1
  3155  00342C  0100               	movlb	0	; () banked
  3156  00342E  51FB               	movf	_curveMode& (0+255),w,b
  3157  003430  0101               	movlb	1	; () banked
  3158  003432  6FAA               	movwf	??_getCurve& (0+255),b
  3159  003434  6BAB               	clrf	(??_getCurve+1)& (0+255),b
  3160                           
  3161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3162                           ; Switch size 1, requested type "simple"
  3163                           ; Number of cases is 1, Range of values is 0 to 0
  3164                           ; switch strategies available:
  3165                           ; Name         Instructions Cycles
  3166                           ; simple_byte            4     3 (average)
  3167                           ;	Chosen strategy is simple_byte
  3168  003436  51AB               	movf	(??_getCurve+1)& (0+255),w,b
  3169  003438  0A00               	xorlw	0	; case 0
  3170  00343A  B4D8               	btfsc	status,2,c
  3171  00343C  EF22  F01A         	goto	l9312
  3172  003440  EF35  F01A         	goto	l1277
  3173  003444                     l9312:
  3174                           
  3175                           ; BSR set to: 1
  3176                           ; Switch size 1, requested type "simple"
  3177                           ; Number of cases is 4, Range of values is 0 to 3
  3178                           ; switch strategies available:
  3179                           ; Name         Instructions Cycles
  3180                           ; simple_byte           13     7 (average)
  3181                           ;	Chosen strategy is simple_byte
  3182  003444  51AA               	movf	??_getCurve& (0+255),w,b
  3183  003446  0A00               	xorlw	0	; case 0
  3184  003448  B4D8               	btfsc	status,2,c
  3185  00344A  EF00  F019         	goto	l8974
  3186  00344E  0A01               	xorlw	1	; case 1
  3187  003450  B4D8               	btfsc	status,2,c
  3188  003452  EF61  F019         	goto	l8990
  3189  003456  0A03               	xorlw	3	; case 2
  3190  003458  B4D8               	btfsc	status,2,c
  3191  00345A  EF74  F019         	goto	l8996
  3192  00345E  0A01               	xorlw	1	; case 3
  3193  003460  B4D8               	btfsc	status,2,c
  3194  003462  EF07  F01A         	goto	l9034
  3195  003466  EF35  F01A         	goto	l1277
  3196  00346A                     l1277:
  3197                           
  3198                           ;main.c: 195:     oldDistLeft = distLeft;
  3199  00346A  C0F7  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  3200  00346E  C0F8  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  3201                           
  3202                           ;main.c: 196:     oldDistRight = distRight;
  3203  003472  C0F3  F0ED         	movff	_distRight,_oldDistRight	;volatile
  3204  003476  C0F4  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  3205  00347A  0012               	return		;funcret
  3206  00347C                     __end_of_getCurve:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _printf *****************
  3210 ;; Defined at:
  3211 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  3214 ;;		 -> STR_7(12), STR_6(11), STR_5(14), STR_4(20), 
  3215 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  ap              2   12[BANK1 ] PTR void [1]
  3218 ;;		 -> ?_printf(2), 
  3219 ;;  ret             2    0        int 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  2    6[BANK1 ] int 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3229 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;Total ram usage:        8 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 16
  3236 ;; This function calls:
  3237 ;;		_vfprintf
  3238 ;; This function is called by:
  3239 ;;		_loop
  3240 ;;		_startAccell
  3241 ;;		_getCurve
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text6
  3246  005C94                     __ptext6:
  3247                           	callstack 0
  3248  005C94                     _printf:
  3249                           	callstack 12
  3250  005C94  0EA4               	movlw	low (?_printf+2)
  3251  005C96  0101               	movlb	1	; () banked
  3252  005C98  6FA8               	movwf	printf@ap& (0+255),b
  3253  005C9A  0E01               	movlw	high (?_printf+2)
  3254  005C9C  6FA9               	movwf	(printf@ap+1)& (0+255),b
  3255  005C9E                     
  3256                           ; BSR set to: 1
  3257  005C9E  0E00               	movlw	0
  3258  005CA0  6F9C               	movwf	vfprintf@fp& (0+255),b
  3259  005CA2  0E00               	movlw	0
  3260  005CA4  6F9D               	movwf	(vfprintf@fp+1)& (0+255),b
  3261  005CA6  C1A2  F19E         	movff	printf@fmt,vfprintf@fmt
  3262  005CAA  C1A3  F19F         	movff	printf@fmt+1,vfprintf@fmt+1
  3263  005CAE  0EA8               	movlw	low printf@ap
  3264  005CB0  6FA0               	movwf	vfprintf@ap& (0+255),b
  3265  005CB2  0E01               	movlw	high printf@ap
  3266  005CB4  6FA1               	movwf	(vfprintf@ap+1)& (0+255),b
  3267  005CB6  EC67  F029         	call	_vfprintf	;wreg free
  3268  005CBA  0012               	return		;funcret
  3269  005CBC                     __end_of_printf:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _vfprintf *****************
  3273 ;; Defined at:
  3274 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  3277 ;;		 -> NULL(0), 
  3278 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3279 ;;		 -> STR_7(12), STR_6(11), STR_5(14), STR_4(20), 
  3280 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3281 ;;  ap              2    4[BANK1 ] PTR PTR void 
  3282 ;;		 -> printf@ap(2), 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  cfmt            2  131[BANK0 ] PTR unsigned char 
  3285 ;;		 -> STR_7(12), STR_6(11), STR_5(14), STR_4(20), 
  3286 ;;		 -> STR_3(13), STR_2(10), STR_1(12), 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  2    0[BANK1 ] int 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:        8 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 15
  3303 ;; This function calls:
  3304 ;;		_vfpfcnvrt
  3305 ;; This function is called by:
  3306 ;;		_printf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text7
  3311  0052CE                     __ptext7:
  3312                           	callstack 0
  3313  0052CE                     _vfprintf:
  3314                           	callstack 12
  3315  0052CE                     
  3316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3317  0052CE  C19E  F0E3         	movff	vfprintf@fmt,vfprintf@cfmt
  3318  0052D2  C19F  F0E4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3319  0052D6                     
  3320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3321  0052D6  0E00               	movlw	0
  3322  0052D8  0101               	movlb	1	; () banked
  3323  0052DA  6F29               	movwf	(_nout+1)& (0+255),b
  3324  0052DC  0E00               	movlw	0
  3325  0052DE  6F28               	movwf	_nout& (0+255),b
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3328  0052E0  EF89  F029         	goto	l8828
  3329  0052E4                     l8826:
  3330                           
  3331                           ; BSR set to: 1
  3332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3333  0052E4  C19C  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  3334  0052E8  C19D  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3335  0052EC  0EE3               	movlw	low vfprintf@cfmt
  3336  0052EE  0100               	movlb	0	; () banked
  3337  0052F0  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  3338  0052F2  0E00               	movlw	high vfprintf@cfmt
  3339  0052F4  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3340  0052F6  C1A0  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  3341  0052FA  C1A1  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3342  0052FE  EC90  F00E         	call	_vfpfcnvrt	;wreg free
  3343  005302  0100               	movlb	0	; () banked
  3344  005304  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  3345  005306  0101               	movlb	1	; () banked
  3346  005308  2728               	addwf	_nout& (0+255),f,b
  3347  00530A  0100               	movlb	0	; () banked
  3348  00530C  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3349  00530E  0101               	movlb	1	; () banked
  3350  005310  2329               	addwfc	(_nout+1)& (0+255),f,b
  3351  005312                     l8828:
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3355  005312  0060  F38F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3356  005318  0060  F393  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3357  00531E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3358  00531E  6AF8               	clrf	tblptru,c
  3359  005320                     	endif
  3360  005320                     	if	0	;tblptru may be non-zero
  3361  005320                     	endif
  3362  005320  0008               	tblrd		*
  3363  005322  50F5               	movf	tablat,w,c
  3364  005324  0900               	iorlw	0
  3365  005326  A4D8               	btfss	status,2,c
  3366  005328  EF98  F029         	goto	u9811
  3367  00532C  EF9A  F029         	goto	u9810
  3368  005330                     u9811:
  3369  005330  EF72  F029         	goto	l8826
  3370  005334                     u9810:
  3371  005334                     
  3372                           ; BSR set to: 1
  3373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3374  005334  C128  F19C         	movff	_nout,?_vfprintf
  3375  005338  C129  F19D         	movff	_nout+1,?_vfprintf+1
  3376  00533C                     
  3377                           ; BSR set to: 1
  3378  00533C  0012               	return		;funcret
  3379  00533E                     __end_of_vfprintf:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _vfpfcnvrt *****************
  3383 ;; Defined at:
  3384 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  3387 ;;		 -> NULL(0), 
  3388 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  3389 ;;		 -> vfprintf@cfmt(2), 
  3390 ;;  ap              2  107[BANK0 ] PTR PTR void 
  3391 ;;		 -> printf@ap(2), 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  ll              8  113[BANK0 ] long long 
  3394 ;;  llu             8    0        unsigned long long 
  3395 ;;  f               4  123[BANK0 ] unsigned long long 
  3396 ;;  ct              3  127[BANK0 ] unsigned char [3]
  3397 ;;  vp              3    0        PTR void 
  3398 ;;  cp              3    0        PTR unsigned char 
  3399 ;;  i               2    0        int 
  3400 ;;  done            2    0        int 
  3401 ;;  c               1  130[BANK0 ] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2  103[BANK0 ] int 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:       28 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 14
  3418 ;; This function calls:
  3419 ;;		_dtoa
  3420 ;;		_efgtoa
  3421 ;;		_fputc
  3422 ;;		_isupper
  3423 ;;		_strncmp
  3424 ;;		_tolower
  3425 ;; This function is called by:
  3426 ;;		_vfprintf
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text8
  3431  001D20                     __ptext8:
  3432                           	callstack 0
  3433  001D20                     _vfpfcnvrt:
  3434                           	callstack 12
  3435  001D20                     
  3436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3437  001D20  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3438  001D26  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3439  001D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3440  001D32  006F FF77 FFF7     	movff	postdec2,tblptrh
  3441  001D38                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3442  001D38  6AF8               	clrf	tblptru,c
  3443  001D3A                     	endif
  3444  001D3A                     	if	0	;tblptru may be non-zero
  3445  001D3A                     	endif
  3446  001D3A  0008               	tblrd		*
  3447  001D3C  50F5               	movf	tablat,w,c
  3448  001D3E  0A25               	xorlw	37
  3449  001D40  A4D8               	btfss	status,2,c
  3450  001D42  EFA5  F00E         	goto	u9541
  3451  001D46  EFA7  F00E         	goto	u9540
  3452  001D4A                     u9541:
  3453  001D4A  EFFE  F010         	goto	l8724
  3454  001D4E                     u9540:
  3455  001D4E                     
  3456                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3457  001D4E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3458  001D54  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3459  001D5A  2ADE               	incf	postinc2,f,c
  3460  001D5C  0E00               	movlw	0
  3461  001D5E  22DD               	addwfc	postdec2,f,c
  3462  001D60                     
  3463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3464  001D60  0E00               	movlw	0
  3465  001D62  6E3B               	movwf	(_width+1)^0,c
  3466  001D64  0E00               	movlw	0
  3467  001D66  6E3A               	movwf	_width^0,c
  3468  001D68  C03A  F03E         	movff	_width,_flags
  3469  001D6C  C03B  F03F         	movff	_width+1,_flags+1
  3470  001D70                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3472  001D70  683C               	setf	_prec^0,c
  3473  001D72  683D               	setf	(_prec+1)^0,c
  3474  001D74                     
  3475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  3476  001D74  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3477  001D7A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3478  001D80  006F FF7B FFF6     	movff	postinc2,tblptrl
  3479  001D86  006F FF77 FFF7     	movff	postdec2,tblptrh
  3480  001D8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3481  001D8C  6AF8               	clrf	tblptru,c
  3482  001D8E                     	endif
  3483  001D8E                     	if	0	;tblptru may be non-zero
  3484  001D8E                     	endif
  3485  001D8E  0008               	tblrd		*
  3486  001D90  50F5               	movf	tablat,w,c
  3487  001D92  6E1A               	movwf	tolower@c^0,c
  3488  001D94  6A1B               	clrf	(tolower@c+1)^0,c
  3489  001D96  ECD4  F029         	call	_tolower	;wreg free
  3490  001D9A  501A               	movf	?_tolower^0,w,c
  3491  001D9C  0100               	movlb	0	; () banked
  3492  001D9E  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  3493  001DA0                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  3496  001DA0  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  3497  001DA2  B4D8               	btfsc	status,2,c
  3498  001DA4  EFD6  F00E         	goto	u9551
  3499  001DA8  EFD8  F00E         	goto	u9550
  3500  001DAC                     u9551:
  3501  001DAC  EF20  F00F         	goto	l8670
  3502  001DB0                     u9550:
  3503  001DB0                     
  3504                           ; BSR set to: 0
  3505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  3506  001DB0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3507  001DB6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3508  001DBC  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3509  001DC2  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3510  001DC8  0E01               	movlw	1
  3511  001DCA  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3512  001DCC  0E00               	movlw	0
  3513  001DCE  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3514  001DD0  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3515  001DD6  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3516  001DDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3517  001DDC  6AF8               	clrf	tblptru,c
  3518  001DDE                     	endif
  3519  001DDE                     	if	0	;tblptru may be non-zero
  3520  001DDE                     	endif
  3521  001DDE  0008               	tblrd		*
  3522  001DE0  50F5               	movf	tablat,w,c
  3523  001DE2  6E1A               	movwf	tolower@c^0,c
  3524  001DE4  6A1B               	clrf	(tolower@c+1)^0,c
  3525  001DE6  ECD4  F029         	call	_tolower	;wreg free
  3526  001DEA  501A               	movf	?_tolower^0,w,c
  3527  001DEC  0100               	movlb	0	; () banked
  3528  001DEE  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3529  001DF0                     
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  3532  001DF0  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3533  001DF2  B4D8               	btfsc	status,2,c
  3534  001DF4  EFFE  F00E         	goto	u9561
  3535  001DF8  EF00  F00F         	goto	u9560
  3536  001DFC                     u9561:
  3537  001DFC  EF20  F00F         	goto	l8670
  3538  001E00                     u9560:
  3539  001E00                     
  3540                           ; BSR set to: 0
  3541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  3542  001E00  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3543  001E06  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3544  001E0C  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3545  001E12  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3546  001E18  0E02               	movlw	2
  3547  001E1A  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3548  001E1C  0E00               	movlw	0
  3549  001E1E  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3550  001E20  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3551  001E26  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3552  001E2C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3553  001E2C  6AF8               	clrf	tblptru,c
  3554  001E2E                     	endif
  3555  001E2E                     	if	0	;tblptru may be non-zero
  3556  001E2E                     	endif
  3557  001E2E  0008               	tblrd		*
  3558  001E30  50F5               	movf	tablat,w,c
  3559  001E32  6E1A               	movwf	tolower@c^0,c
  3560  001E34  6A1B               	clrf	(tolower@c+1)^0,c
  3561  001E36  ECD4  F029         	call	_tolower	;wreg free
  3562  001E3A  501A               	movf	?_tolower^0,w,c
  3563  001E3C  0100               	movlb	0	; () banked
  3564  001E3E  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3565  001E40                     l8670:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3569  001E40  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3570  001E46  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3571  001E4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3572  001E52  006F FF77 FFF7     	movff	postdec2,tblptrh
  3573  001E58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3574  001E58  6AF8               	clrf	tblptru,c
  3575  001E5A                     	endif
  3576  001E5A                     	if	0	;tblptru may be non-zero
  3577  001E5A                     	endif
  3578  001E5A  0008               	tblrd		*
  3579  001E5C  50F5               	movf	tablat,w,c
  3580  001E5E  0A64               	xorlw	100
  3581  001E60  B4D8               	btfsc	status,2,c
  3582  001E62  EF35  F00F         	goto	u9571
  3583  001E66  EF37  F00F         	goto	u9570
  3584  001E6A                     u9571:
  3585  001E6A  EF4E  F00F         	goto	l8674
  3586  001E6E                     u9570:
  3587  001E6E                     
  3588                           ; BSR set to: 0
  3589  001E6E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3590  001E74  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3591  001E7A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3592  001E80  006F FF77 FFF7     	movff	postdec2,tblptrh
  3593  001E86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3594  001E86  6AF8               	clrf	tblptru,c
  3595  001E88                     	endif
  3596  001E88                     	if	0	;tblptru may be non-zero
  3597  001E88                     	endif
  3598  001E88  0008               	tblrd		*
  3599  001E8A  50F5               	movf	tablat,w,c
  3600  001E8C  0A69               	xorlw	105
  3601  001E8E  A4D8               	btfss	status,2,c
  3602  001E90  EF4C  F00F         	goto	u9581
  3603  001E94  EF4E  F00F         	goto	u9580
  3604  001E98                     u9581:
  3605  001E98  EF98  F00F         	goto	l8680
  3606  001E9C                     u9580:
  3607  001E9C                     l8674:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3611  001E9C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3612  001EA2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3613  001EA8  2ADE               	incf	postinc2,f,c
  3614  001EAA  0E00               	movlw	0
  3615  001EAC  22DD               	addwfc	postdec2,f,c
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3618  001EAE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3619  001EB4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3620  001EBA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3621  001EC0  0E02               	movlw	2
  3622  001EC2  26DE               	addwf	postinc2,f,c
  3623  001EC4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3624  001ECA  0E00               	movlw	0
  3625  001ECC  22DD               	addwfc	postdec2,f,c
  3626  001ECE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3627  001ED4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3628  001EDA  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  3629  001EE0  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  3630  001EE6  0E00               	movlw	0
  3631  001EE8  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  3632  001EEA  0EFF               	movlw	-1
  3633  001EEC  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  3634  001EEE  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  3635  001EF0  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  3636  001EF2  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  3637  001EF4  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  3638  001EF6  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  3639  001EF8                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3642  001EF8  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  3643  001EFC  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3644  001F00  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  3645  001F04  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3646  001F08  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3647  001F0C  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3648  001F10  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3649  001F14  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3650  001F18  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3651  001F1C  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3652  001F20  EC77  F017         	call	_dtoa	;wreg free
  3653  001F24  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  3654  001F28  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3655  001F2C  EF20  F011         	goto	l2248
  3656  001F30                     l8680:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  3660  001F30  0E66               	movlw	102
  3661  001F32  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3662  001F34  A4D8               	btfss	status,2,c
  3663  001F36  EF9F  F00F         	goto	u9591
  3664  001F3A  EFA1  F00F         	goto	u9590
  3665  001F3E                     u9591:
  3666  001F3E  EFF3  F00F         	goto	l8692
  3667  001F42                     u9590:
  3668  001F42                     
  3669                           ; BSR set to: 0
  3670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  3671  001F42  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3672  001F48  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3673  001F4E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3674  001F54  006F FF77 FFF7     	movff	postdec2,tblptrh
  3675  001F5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3676  001F5A  6AF8               	clrf	tblptru,c
  3677  001F5C                     	endif
  3678  001F5C                     	if	0	;tblptru may be non-zero
  3679  001F5C                     	endif
  3680  001F5C  0008               	tblrd		*
  3681  001F5E  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3682  001F64                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  3685  001F64  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3686  001F6A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3687  001F70  2ADE               	incf	postinc2,f,c
  3688  001F72  0E00               	movlw	0
  3689  001F74  22DD               	addwfc	postdec2,f,c
  3690  001F76                     
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3693  001F76  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3694  001F7C  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3695  001F82  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3696  001F88  0E04               	movlw	4
  3697  001F8A  26DE               	addwf	postinc2,f,c
  3698  001F8C  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3699  001F92  0E00               	movlw	0
  3700  001F94  22DD               	addwfc	postdec2,f,c
  3701  001F96  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3702  001F9C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3703  001FA2  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3704  001FA8  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3705  001FAE  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3706  001FB4  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3707  001FBA                     
  3708                           ; BSR set to: 0
  3709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  3710  001FBA  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3711  001FBE  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3712  001FC2  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3713  001FC6  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3714  001FCA  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3715  001FCE  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3716  001FD2  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3717  001FD6  EC39  F008         	call	_efgtoa	;wreg free
  3718  001FDA  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3719  001FDE  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3720  001FE2  EF20  F011         	goto	l2248
  3721  001FE6                     l8692:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3725  001FE6  0EDF               	movlw	low vfpfcnvrt@ct
  3726  001FE8  6E14               	movwf	strncmp@_l^0,c
  3727  001FEA  0E00               	movlw	high vfpfcnvrt@ct
  3728  001FEC  6E15               	movwf	(strncmp@_l+1)^0,c
  3729  001FEE  0E6D               	movlw	low STR_16
  3730  001FF0  6E16               	movwf	strncmp@_r^0,c
  3731  001FF2  0E10               	movlw	high STR_16
  3732  001FF4  6E17               	movwf	(strncmp@_r+1)^0,c
  3733  001FF6  0E00               	movlw	0
  3734  001FF8  6E19               	movwf	(strncmp@n+1)^0,c
  3735  001FFA  0E02               	movlw	2
  3736  001FFC  6E18               	movwf	strncmp@n^0,c
  3737  001FFE  EC17  F025         	call	_strncmp	;wreg free
  3738  002002  5014               	movf	?_strncmp^0,w,c
  3739  002004  1015               	iorwf	(?_strncmp+1)^0,w,c
  3740  002006  A4D8               	btfss	status,2,c
  3741  002008  EF08  F010         	goto	u9601
  3742  00200C  EF0A  F010         	goto	u9600
  3743  002010                     u9601:
  3744  002010  EFBD  F010         	goto	l8708
  3745  002014                     u9600:
  3746  002014                     
  3747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3748  002014  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3749  00201A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3750  002020  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  3751  002026  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  3752  00202C  0E01               	movlw	1
  3753  00202E  0100               	movlb	0	; () banked
  3754  002030  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  3755  002032  0E00               	movlw	0
  3756  002034  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3757  002036  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3758  00203C  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3759  002042                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3760  002042  6AF8               	clrf	tblptru,c
  3761  002044                     	endif
  3762  002044                     	if	0	;tblptru may be non-zero
  3763  002044                     	endif
  3764  002044  0008               	tblrd		*
  3765  002046  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  3766  00204C  0EBF               	movlw	191
  3767  00204E  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  3768  002050  0EFF               	movlw	255
  3769  002052  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3770  002054  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3771  00205A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3772  002060  006F FF7B FFF6     	movff	postinc2,tblptrl
  3773  002066  006F FF77 FFF7     	movff	postdec2,tblptrh
  3774  00206C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3775  00206C  6AF8               	clrf	tblptru,c
  3776  00206E                     	endif
  3777  00206E                     	if	0	;tblptru may be non-zero
  3778  00206E                     	endif
  3779  00206E  0008               	tblrd		*
  3780  002070  50F5               	movf	tablat,w,c
  3781  002072  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3782  002074  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3783  002076  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  3784  002078  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3785  00207A  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3786  00207C  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3787  00207E  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3788  002080  E10A               	bnz	u9610
  3789  002082  0E1A               	movlw	26
  3790  002084  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3791  002086  A0D8               	btfss	status,0,c
  3792  002088  EF48  F010         	goto	u9611
  3793  00208C  EF4B  F010         	goto	u9610
  3794  002090                     u9611:
  3795  002090  0E01               	movlw	1
  3796  002092  EF4C  F010         	goto	u9620
  3797  002096                     u9610:
  3798  002096  0E00               	movlw	0
  3799  002098                     u9620:
  3800  002098  6FD9               	movwf	_vfpfcnvrt$3583& (0+255),b
  3801  00209A  6BDA               	clrf	(_vfpfcnvrt$3583+1)& (0+255),b
  3802  00209C                     
  3803                           ; BSR set to: 0
  3804  00209C  51D9               	movf	_vfpfcnvrt$3583& (0+255),w,b
  3805  00209E  11DA               	iorwf	(_vfpfcnvrt$3583+1)& (0+255),w,b
  3806  0020A0  B4D8               	btfsc	status,2,c
  3807  0020A2  EF55  F010         	goto	u9631
  3808  0020A6  EF57  F010         	goto	u9630
  3809  0020AA                     u9631:
  3810  0020AA  EF7B  F010         	goto	l8702
  3811  0020AE                     u9630:
  3812  0020AE                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3815  0020AE  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3816  0020B4  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3817  0020BA  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3818  0020C0  0E04               	movlw	4
  3819  0020C2  26DE               	addwf	postinc2,f,c
  3820  0020C4  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3821  0020CA  0E00               	movlw	0
  3822  0020CC  22DD               	addwfc	postdec2,f,c
  3823  0020CE  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3824  0020D4  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3825  0020DA  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3826  0020E0  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3827  0020E6  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3828  0020EC  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  3831  0020F2  EF9D  F010         	goto	l2256
  3832  0020F6                     l8702:
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3836  0020F6  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3837  0020FC  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3838  002102  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  3839  002108  0E04               	movlw	4
  3840  00210A  26DE               	addwf	postinc2,f,c
  3841  00210C  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  3842  002112  0E00               	movlw	0
  3843  002114  22DD               	addwfc	postdec2,f,c
  3844  002116  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3845  00211C  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3846  002122  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  3847  002128  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  3848  00212E  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  3849  002134  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  3850  00213A                     l2256:
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3854  00213A  0E02               	movlw	2
  3855  00213C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3856  002142  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3857  002148  26DE               	addwf	postinc2,f,c
  3858  00214A  0E00               	movlw	0
  3859  00214C  22DD               	addwfc	postdec2,f,c
  3860  00214E                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  3863  00214E  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  3864  002152  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3865  002156  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  3866  00215A  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3867  00215E  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3868  002162  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3869  002166  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  3870  00216A  EC39  F008         	call	_efgtoa	;wreg free
  3871  00216E  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  3872  002172  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3873  002176  EF20  F011         	goto	l2248
  3874  00217A                     l8708:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3877  00217A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3878  002180  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3879  002186  006F FF7B FFF6     	movff	postinc2,tblptrl
  3880  00218C  006F FF77 FFF7     	movff	postdec2,tblptrh
  3881  002192                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3882  002192  6AF8               	clrf	tblptru,c
  3883  002194                     	endif
  3884  002194                     	if	0	;tblptru may be non-zero
  3885  002194                     	endif
  3886  002194  0008               	tblrd		*
  3887  002196  50F5               	movf	tablat,w,c
  3888  002198  0A25               	xorlw	37
  3889  00219A  A4D8               	btfss	status,2,c
  3890  00219C  EFD2  F010         	goto	u9641
  3891  0021A0  EFD4  F010         	goto	u9640
  3892  0021A4                     u9641:
  3893  0021A4  EFEE  F010         	goto	l8718
  3894  0021A8                     u9640:
  3895  0021A8                     
  3896                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3897  0021A8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3898  0021AE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3899  0021B4  2ADE               	incf	postinc2,f,c
  3900  0021B6  0E00               	movlw	0
  3901  0021B8  22DD               	addwfc	postdec2,f,c
  3902  0021BA                     
  3903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3904  0021BA  0E00               	movlw	0
  3905  0021BC  6E17               	movwf	(fputc@c+1)^0,c
  3906  0021BE  0E25               	movlw	37
  3907  0021C0  6E16               	movwf	fputc@c^0,c
  3908  0021C2  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3909  0021C6  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3910  0021CA  EC89  F028         	call	_fputc	;wreg free
  3911  0021CE                     l8714:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3914  0021CE  0E00               	movlw	0
  3915  0021D0  0100               	movlb	0	; () banked
  3916  0021D2  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3917  0021D4  0E01               	movlw	1
  3918  0021D6  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3919  0021D8  EF20  F011         	goto	l2248
  3920  0021DC                     l8718:
  3921                           
  3922                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3923  0021DC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3924  0021E2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3925  0021E8  2ADE               	incf	postinc2,f,c
  3926  0021EA  0E00               	movlw	0
  3927  0021EC  22DD               	addwfc	postdec2,f,c
  3928  0021EE                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3930  0021EE  0E00               	movlw	0
  3931  0021F0  0100               	movlb	0	; () banked
  3932  0021F2  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3933  0021F4  0E00               	movlw	0
  3934  0021F6  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  3935  0021F8  EF20  F011         	goto	l2248
  3936  0021FC                     l8724:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3939  0021FC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3940  002202  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3941  002208  006F FF7B FFF6     	movff	postinc2,tblptrl
  3942  00220E  006F FF77 FFF7     	movff	postdec2,tblptrh
  3943  002214                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3944  002214  6AF8               	clrf	tblptru,c
  3945  002216                     	endif
  3946  002216                     	if	0	;tblptru may be non-zero
  3947  002216                     	endif
  3948  002216  0008               	tblrd		*
  3949  002218  50F5               	movf	tablat,w,c
  3950  00221A  6E16               	movwf	fputc@c^0,c
  3951  00221C  6A17               	clrf	(fputc@c+1)^0,c
  3952  00221E  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  3953  002222  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3954  002226  EC89  F028         	call	_fputc	;wreg free
  3955  00222A                     
  3956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3957  00222A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3958  002230  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3959  002236  2ADE               	incf	postinc2,f,c
  3960  002238  0E00               	movlw	0
  3961  00223A  22DD               	addwfc	postdec2,f,c
  3962  00223C  EFE7  F010         	goto	l8714
  3963  002240                     l2248:
  3964  002240  0012               	return		;funcret
  3965  002242                     __end_of_vfpfcnvrt:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _strncmp *****************
  3969 ;; Defined at:
  3970 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  3973 ;;		 -> vfpfcnvrt@ct(3), 
  3974 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  3975 ;;		 -> STR_18(3), 
  3976 ;;  n               2   23[COMRAM] unsigned int 
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  r               2   28[COMRAM] PTR const unsigned char 
  3979 ;;		 -> STR_18(3), 
  3980 ;;  l               2   26[COMRAM] PTR const unsigned char 
  3981 ;;		 -> vfpfcnvrt@ct(3), 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  2   19[COMRAM] int 
  3984 ;; Registers used:
  3985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:       11 bytes
  3996 ;; Hardware stack levels used: 1
  3997 ;; Hardware stack levels required when called: 8
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_vfpfcnvrt
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text9
  4006  004A2E                     __ptext9:
  4007                           	callstack 0
  4008  004A2E                     _strncmp:
  4009                           	callstack 17
  4010  004A2E  C014  F01B         	movff	strncmp@_l,strncmp@l
  4011  004A32  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  4012  004A36  C016  F01D         	movff	strncmp@_r,strncmp@r
  4013  004A3A  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  4014  004A3E  0618               	decf	strncmp@n^0,f,c
  4015  004A40  A0D8               	btfss	status,0,c
  4016  004A42  0619               	decf	(strncmp@n+1)^0,f,c
  4017  004A44  2818               	incf	strncmp@n^0,w,c
  4018  004A46  E106               	bnz	u9471
  4019  004A48  2819               	incf	(strncmp@n+1)^0,w,c
  4020  004A4A  A4D8               	btfss	status,2,c
  4021  004A4C  EF2A  F025         	goto	u9471
  4022  004A50  EF2C  F025         	goto	u9470
  4023  004A54                     u9471:
  4024  004A54  EF39  F025         	goto	l8636
  4025  004A58                     u9470:
  4026  004A58  0E00               	movlw	0
  4027  004A5A  6E15               	movwf	(?_strncmp+1)^0,c
  4028  004A5C  0E00               	movlw	0
  4029  004A5E  6E14               	movwf	?_strncmp^0,c
  4030  004A60  EF90  F025         	goto	l2336
  4031  004A64                     l8634:
  4032  004A64  4A1B               	infsnz	strncmp@l^0,f,c
  4033  004A66  2A1C               	incf	(strncmp@l+1)^0,f,c
  4034  004A68  4A1D               	infsnz	strncmp@r^0,f,c
  4035  004A6A  2A1E               	incf	(strncmp@r+1)^0,f,c
  4036  004A6C  0618               	decf	strncmp@n^0,f,c
  4037  004A6E  A0D8               	btfss	status,0,c
  4038  004A70  0619               	decf	(strncmp@n+1)^0,f,c
  4039  004A72                     l8636:
  4040  004A72  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4041  004A78  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4042  004A7E  50DF               	movf	indf2,w,c
  4043  004A80  B4D8               	btfsc	status,2,c
  4044  004A82  EF45  F025         	goto	u9481
  4045  004A86  EF47  F025         	goto	u9480
  4046  004A8A                     u9481:
  4047  004A8A  EF7A  F025         	goto	l8644
  4048  004A8E                     u9480:
  4049  004A8E  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4050  004A94  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4051  004A9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4052  004A9A  6AF8               	clrf	tblptru,c
  4053  004A9C                     	endif
  4054  004A9C                     	if	0	;tblptru may be non-zero
  4055  004A9C                     	endif
  4056  004A9C  0008               	tblrd		*
  4057  004A9E  50F5               	movf	tablat,w,c
  4058  004AA0  0900               	iorlw	0
  4059  004AA2  B4D8               	btfsc	status,2,c
  4060  004AA4  EF56  F025         	goto	u9491
  4061  004AA8  EF58  F025         	goto	u9490
  4062  004AAC                     u9491:
  4063  004AAC  EF7A  F025         	goto	l8644
  4064  004AB0                     u9490:
  4065  004AB0  5018               	movf	strncmp@n^0,w,c
  4066  004AB2  1019               	iorwf	(strncmp@n+1)^0,w,c
  4067  004AB4  B4D8               	btfsc	status,2,c
  4068  004AB6  EF5F  F025         	goto	u9501
  4069  004ABA  EF61  F025         	goto	u9500
  4070  004ABE                     u9501:
  4071  004ABE  EF7A  F025         	goto	l8644
  4072  004AC2                     u9500:
  4073  004AC2  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4074  004AC8  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4075  004ACE  50DF               	movf	indf2,w,c
  4076  004AD0  6E1A               	movwf	??_strncmp^0,c
  4077  004AD2  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4078  004AD8  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4079  004ADE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4080  004ADE  6AF8               	clrf	tblptru,c
  4081  004AE0                     	endif
  4082  004AE0                     	if	0	;tblptru may be non-zero
  4083  004AE0                     	endif
  4084  004AE0  0008               	tblrd		*
  4085  004AE2  50F5               	movf	tablat,w,c
  4086  004AE4  181A               	xorwf	??_strncmp^0,w,c
  4087  004AE6  B4D8               	btfsc	status,2,c
  4088  004AE8  EF78  F025         	goto	u9511
  4089  004AEC  EF7A  F025         	goto	u9510
  4090  004AF0                     u9511:
  4091  004AF0  EF32  F025         	goto	l8634
  4092  004AF4                     u9510:
  4093  004AF4                     l8644:
  4094  004AF4  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  4095  004AFA  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  4096  004B00  50DF               	movf	indf2,w,c
  4097  004B02  6E1A               	movwf	??_strncmp^0,c
  4098  004B04  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  4099  004B0A  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  4100  004B10                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4101  004B10  6AF8               	clrf	tblptru,c
  4102  004B12                     	endif
  4103  004B12                     	if	0	;tblptru may be non-zero
  4104  004B12                     	endif
  4105  004B12  0008               	tblrd		*
  4106  004B14  50F5               	movf	tablat,w,c
  4107  004B16  5C1A               	subwf	??_strncmp^0,w,c
  4108  004B18  6E14               	movwf	?_strncmp^0,c
  4109  004B1A  6A15               	clrf	(?_strncmp+1)^0,c
  4110  004B1C  A0D8               	btfss	status,0,c
  4111  004B1E  0615               	decf	(?_strncmp+1)^0,f,c
  4112  004B20                     l2336:
  4113  004B20  0012               	return		;funcret
  4114  004B22                     __end_of_strncmp:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _efgtoa *****************
  4118 ;; Defined at:
  4119 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  4122 ;;		 -> NULL(0), 
  4123 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  4124 ;;  c               1   41[BANK0 ] unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  u               4   99[BANK0 ] unsigned char 
  4127 ;;  g               4   91[BANK0 ] unsigned char 
  4128 ;;  l               4   85[BANK0 ] unsigned char 
  4129 ;;  h               4   81[BANK0 ] unsigned char 
  4130 ;;  ou              4   67[BANK0 ] unsigned char 
  4131 ;;  n               2   97[BANK0 ] int 
  4132 ;;  e               2   95[BANK0 ] int 
  4133 ;;  i               2   89[BANK0 ] int 
  4134 ;;  w               2   77[BANK0 ] int 
  4135 ;;  p               2   75[BANK0 ] int 
  4136 ;;  sign            2   73[BANK0 ] int 
  4137 ;;  d               2   71[BANK0 ] int 
  4138 ;;  m               2   65[BANK0 ] int 
  4139 ;;  ne              2   63[BANK0 ] int 
  4140 ;;  pp              2   61[BANK0 ] int 
  4141 ;;  t               2   59[BANK0 ] int 
  4142 ;;  mode            1   80[BANK0 ] unsigned char 
  4143 ;;  nmode           1   79[BANK0 ] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2   35[BANK0 ] int 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4153 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;Total ram usage:       68 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 13
  4160 ;; This function calls:
  4161 ;;		___awdiv
  4162 ;;		___awmod
  4163 ;;		___fladd
  4164 ;;		___fldiv
  4165 ;;		___fleq
  4166 ;;		___flge
  4167 ;;		___flmul
  4168 ;;		___flneg
  4169 ;;		___flsub
  4170 ;;		___fltol
  4171 ;;		___fpclassifyf
  4172 ;;		_floorf
  4173 ;;		_isupper
  4174 ;;		_pad
  4175 ;;		_strcpy
  4176 ;;		_tolower
  4177 ;; This function is called by:
  4178 ;;		_vfpfcnvrt
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182                           	psect	text10
  4183  001072                     __ptext10:
  4184                           	callstack 0
  4185  001072                     _efgtoa:
  4186                           	callstack 12
  4187  001072                     
  4188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  4189  001072  0E00               	movlw	0
  4190  001074  0100               	movlb	0	; () banked
  4191  001076  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4192  001078  0E00               	movlw	0
  4193  00107A  6FA9               	movwf	efgtoa@sign& (0+255),b
  4194  00107C                     
  4195                           ; BSR set to: 0
  4196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  4197  00107C  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  4198  001080  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  4199  001084  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  4200  001088  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  4201  00108C                     
  4202                           ; BSR set to: 0
  4203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  4204  00108C  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4205  00108E  EF4D  F008         	goto	u8930
  4206  001092  EF4B  F008         	goto	u8931
  4207  001096                     u8931:
  4208  001096  EF63  F008         	goto	l8330
  4209  00109A                     u8930:
  4210  00109A                     
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  4213  00109A  0E00               	movlw	0
  4214  00109C  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4215  00109E  0E01               	movlw	1
  4216  0010A0  6FA9               	movwf	efgtoa@sign& (0+255),b
  4217  0010A2                     
  4218                           ; BSR set to: 0
  4219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  4220  0010A2  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  4221  0010A6  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  4222  0010AA  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  4223  0010AE  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  4224  0010B2  EC41  F02C         	call	___flneg	;wreg free
  4225  0010B6  C014  F0BB         	movff	?___flneg,efgtoa@g
  4226  0010BA  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  4227  0010BE  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  4228  0010C2  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  4229  0010C6                     l8330:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  4232  0010C6  0E00               	movlw	0
  4233  0010C8  0100               	movlb	0	; () banked
  4234  0010CA  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4235  0010CC  0E00               	movlw	0
  4236  0010CE  6FC1               	movwf	efgtoa@n& (0+255),b
  4237  0010D0                     
  4238                           ; BSR set to: 0
  4239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  4240  0010D0  C03A  F0AD         	movff	_width,efgtoa@w
  4241  0010D4  C03B  F0AE         	movff	_width+1,efgtoa@w+1
  4242  0010D8                     
  4243                           ; BSR set to: 0
  4244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  4245  0010D8  51A9               	movf	efgtoa@sign& (0+255),w,b
  4246  0010DA  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4247  0010DC  A4D8               	btfss	status,2,c
  4248  0010DE  EF73  F008         	goto	u8941
  4249  0010E2  EF75  F008         	goto	u8940
  4250  0010E6                     u8941:
  4251  0010E6  EF7C  F008         	goto	l8338
  4252  0010EA                     u8940:
  4253  0010EA                     
  4254                           ; BSR set to: 0
  4255  0010EA  A43E               	btfss	_flags^0,2,c
  4256  0010EC  EF7A  F008         	goto	u8951
  4257  0010F0  EF7C  F008         	goto	u8950
  4258  0010F4                     u8951:
  4259  0010F4  EF96  F008         	goto	l8350
  4260  0010F8                     u8950:
  4261  0010F8                     l8338:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  4265  0010F8  51A9               	movf	efgtoa@sign& (0+255),w,b
  4266  0010FA  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4267  0010FC  A4D8               	btfss	status,2,c
  4268  0010FE  EF83  F008         	goto	u8961
  4269  001102  EF85  F008         	goto	u8960
  4270  001106                     u8961:
  4271  001106  EF8B  F008         	goto	l8342
  4272  00110A                     u8960:
  4273  00110A                     
  4274                           ; BSR set to: 0
  4275  00110A  0E00               	movlw	0
  4276  00110C  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4277  00110E  0E2B               	movlw	43
  4278  001110  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4279  001112  EF8F  F008         	goto	l8344
  4280  001116                     l8342:
  4281                           
  4282                           ; BSR set to: 0
  4283  001116  0E00               	movlw	0
  4284  001118  6F90               	movwf	(_efgtoa$3554+1)& (0+255),b
  4285  00111A  0E2D               	movlw	45
  4286  00111C  6F8F               	movwf	_efgtoa$3554& (0+255),b
  4287  00111E                     l8344:
  4288                           
  4289                           ; BSR set to: 0
  4290  00111E  C08F  F136         	movff	_efgtoa$3554,_dbuf
  4291  001122                     
  4292                           ; BSR set to: 0
  4293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  4294  001122  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4295  001124  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4296  001126                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  4299  001126  07AD               	decf	efgtoa@w& (0+255),f,b
  4300  001128  A0D8               	btfss	status,0,c
  4301  00112A  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4302  00112C                     l8350:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4306  00112C  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4307  001130  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4308  001134  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4309  001138  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4310  00113C  EC98  F024         	call	___fpclassifyf	;wreg free
  4311  001140  0414               	decf	?___fpclassifyf^0,w,c
  4312  001142  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4313  001144  A4D8               	btfss	status,2,c
  4314  001146  EFA7  F008         	goto	u8971
  4315  00114A  EFA9  F008         	goto	u8970
  4316  00114E                     u8971:
  4317  00114E  EF00  F009         	goto	l8368
  4318  001152                     u8970:
  4319  001152  0EBF               	movlw	191
  4320  001154  0100               	movlb	0	; () banked
  4321  001156  6F8A               	movwf	??_efgtoa& (0+255),b
  4322  001158  0EFF               	movlw	255
  4323  00115A  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4324  00115C  5189               	movf	efgtoa@c& (0+255),w,b
  4325  00115E  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4326  001160  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4327  001162  518A               	movf	??_efgtoa& (0+255),w,b
  4328  001164  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4329  001166  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4330  001168  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4331  00116A  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4332  00116C  E10A               	bnz	u8980
  4333  00116E  0E1A               	movlw	26
  4334  001170  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4335  001172  A0D8               	btfss	status,0,c
  4336  001174  EFBE  F008         	goto	u8981
  4337  001178  EFC1  F008         	goto	u8980
  4338  00117C                     u8981:
  4339  00117C  0E01               	movlw	1
  4340  00117E  EFC2  F008         	goto	u8990
  4341  001182                     u8980:
  4342  001182  0E00               	movlw	0
  4343  001184                     u8990:
  4344  001184  6F91               	movwf	_efgtoa$3555& (0+255),b
  4345  001186  6B92               	clrf	(_efgtoa$3555+1)& (0+255),b
  4346  001188                     
  4347                           ; BSR set to: 0
  4348  001188  5191               	movf	_efgtoa$3555& (0+255),w,b
  4349  00118A  1192               	iorwf	(_efgtoa$3555+1)& (0+255),w,b
  4350  00118C  B4D8               	btfsc	status,2,c
  4351  00118E  EFCB  F008         	goto	u9001
  4352  001192  EFCD  F008         	goto	u9000
  4353  001196                     u9001:
  4354  001196  EFDB  F008         	goto	l8360
  4355  00119A                     u9000:
  4356  00119A                     
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4359  00119A  0E36               	movlw	low _dbuf
  4360  00119C  25C1               	addwf	efgtoa@n& (0+255),w,b
  4361  00119E  6E14               	movwf	strcpy@dest^0,c
  4362  0011A0  0E01               	movlw	high _dbuf
  4363  0011A2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4364  0011A4  6E15               	movwf	(strcpy@dest+1)^0,c
  4365  0011A6  0E5D               	movlw	low STR_8
  4366  0011A8  6E16               	movwf	strcpy@src^0,c
  4367  0011AA  0E10               	movlw	high STR_8
  4368  0011AC  6E17               	movwf	(strcpy@src+1)^0,c
  4369  0011AE  EC9F  F029         	call	_strcpy	;wreg free
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4372  0011B2  EFE7  F008         	goto	l8362
  4373  0011B6                     l8360:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4377  0011B6  0E36               	movlw	low _dbuf
  4378  0011B8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4379  0011BA  6E14               	movwf	strcpy@dest^0,c
  4380  0011BC  0E01               	movlw	high _dbuf
  4381  0011BE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4382  0011C0  6E15               	movwf	(strcpy@dest+1)^0,c
  4383  0011C2  0E65               	movlw	low STR_9
  4384  0011C4  6E16               	movwf	strcpy@src^0,c
  4385  0011C6  0E10               	movlw	high STR_9
  4386  0011C8  6E17               	movwf	(strcpy@src+1)^0,c
  4387  0011CA  EC9F  F029         	call	_strcpy	;wreg free
  4388  0011CE                     l8362:
  4389                           
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4391  0011CE  0100               	movlb	0	; () banked
  4392  0011D0  0EFD               	movlw	253
  4393  0011D2  27AD               	addwf	efgtoa@w& (0+255),f,b
  4394  0011D4  0EFF               	movlw	255
  4395  0011D6  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4396  0011D8                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4399  0011D8  C083  F026         	movff	efgtoa@fp,pad@fp
  4400  0011DC  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4401  0011E0  0E36               	movlw	low _dbuf
  4402  0011E2  6E28               	movwf	pad@buf^0,c
  4403  0011E4  0E01               	movlw	high _dbuf
  4404  0011E6  6E29               	movwf	(pad@buf+1)^0,c
  4405  0011E8  C0AD  F02A         	movff	efgtoa@w,pad@p
  4406  0011EC  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4407  0011F0  ECC9  F026         	call	_pad	;wreg free
  4408  0011F4  C026  F083         	movff	?_pad,?_efgtoa
  4409  0011F8  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4410  0011FC  EF8F  F00E         	goto	l2164
  4411  001200                     l8368:
  4412                           
  4413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4414  001200  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  4415  001204  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4416  001208  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4417  00120C  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4418  001210  EC98  F024         	call	___fpclassifyf	;wreg free
  4419  001214  5014               	movf	?___fpclassifyf^0,w,c
  4420  001216  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  4421  001218  A4D8               	btfss	status,2,c
  4422  00121A  EF11  F009         	goto	u9011
  4423  00121E  EF13  F009         	goto	u9010
  4424  001222                     u9011:
  4425  001222  EF6A  F009         	goto	l8386
  4426  001226                     u9010:
  4427  001226  0EBF               	movlw	191
  4428  001228  0100               	movlb	0	; () banked
  4429  00122A  6F8A               	movwf	??_efgtoa& (0+255),b
  4430  00122C  0EFF               	movlw	255
  4431  00122E  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4432  001230  5189               	movf	efgtoa@c& (0+255),w,b
  4433  001232  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4434  001234  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4435  001236  518A               	movf	??_efgtoa& (0+255),w,b
  4436  001238  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4437  00123A  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4438  00123C  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4439  00123E  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4440  001240  E10A               	bnz	u9020
  4441  001242  0E1A               	movlw	26
  4442  001244  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4443  001246  A0D8               	btfss	status,0,c
  4444  001248  EF28  F009         	goto	u9021
  4445  00124C  EF2B  F009         	goto	u9020
  4446  001250                     u9021:
  4447  001250  0E01               	movlw	1
  4448  001252  EF2C  F009         	goto	u9030
  4449  001256                     u9020:
  4450  001256  0E00               	movlw	0
  4451  001258                     u9030:
  4452  001258  6F93               	movwf	_efgtoa$3559& (0+255),b
  4453  00125A  6B94               	clrf	(_efgtoa$3559+1)& (0+255),b
  4454  00125C                     
  4455                           ; BSR set to: 0
  4456  00125C  5193               	movf	_efgtoa$3559& (0+255),w,b
  4457  00125E  1194               	iorwf	(_efgtoa$3559+1)& (0+255),w,b
  4458  001260  B4D8               	btfsc	status,2,c
  4459  001262  EF35  F009         	goto	u9041
  4460  001266  EF37  F009         	goto	u9040
  4461  00126A                     u9041:
  4462  00126A  EF45  F009         	goto	l8378
  4463  00126E                     u9040:
  4464  00126E                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4467  00126E  0E36               	movlw	low _dbuf
  4468  001270  25C1               	addwf	efgtoa@n& (0+255),w,b
  4469  001272  6E14               	movwf	strcpy@dest^0,c
  4470  001274  0E01               	movlw	high _dbuf
  4471  001276  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4472  001278  6E15               	movwf	(strcpy@dest+1)^0,c
  4473  00127A  0E61               	movlw	low STR_12
  4474  00127C  6E16               	movwf	strcpy@src^0,c
  4475  00127E  0E10               	movlw	high STR_12
  4476  001280  6E17               	movwf	(strcpy@src+1)^0,c
  4477  001282  EC9F  F029         	call	_strcpy	;wreg free
  4478                           
  4479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4480  001286  EF51  F009         	goto	l8380
  4481  00128A                     l8378:
  4482                           
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4485  00128A  0E36               	movlw	low _dbuf
  4486  00128C  25C1               	addwf	efgtoa@n& (0+255),w,b
  4487  00128E  6E14               	movwf	strcpy@dest^0,c
  4488  001290  0E01               	movlw	high _dbuf
  4489  001292  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4490  001294  6E15               	movwf	(strcpy@dest+1)^0,c
  4491  001296  0E69               	movlw	low STR_13
  4492  001298  6E16               	movwf	strcpy@src^0,c
  4493  00129A  0E10               	movlw	high STR_13
  4494  00129C  6E17               	movwf	(strcpy@src+1)^0,c
  4495  00129E  EC9F  F029         	call	_strcpy	;wreg free
  4496  0012A2                     l8380:
  4497                           
  4498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4499  0012A2  0100               	movlb	0	; () banked
  4500  0012A4  0EFD               	movlw	253
  4501  0012A6  27AD               	addwf	efgtoa@w& (0+255),f,b
  4502  0012A8  0EFF               	movlw	255
  4503  0012AA  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4504  0012AC                     
  4505                           ; BSR set to: 0
  4506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4507  0012AC  C083  F026         	movff	efgtoa@fp,pad@fp
  4508  0012B0  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4509  0012B4  0E36               	movlw	low _dbuf
  4510  0012B6  6E28               	movwf	pad@buf^0,c
  4511  0012B8  0E01               	movlw	high _dbuf
  4512  0012BA  6E29               	movwf	(pad@buf+1)^0,c
  4513  0012BC  C0AD  F02A         	movff	efgtoa@w,pad@p
  4514  0012C0  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4515  0012C4  ECC9  F026         	call	_pad	;wreg free
  4516  0012C8  C026  F083         	movff	?_pad,?_efgtoa
  4517  0012CC  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4518  0012D0  EF8F  F00E         	goto	l2164
  4519  0012D4                     l8386:
  4520                           
  4521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4522  0012D4  0E00               	movlw	0
  4523  0012D6  0100               	movlb	0	; () banked
  4524  0012D8  6FC3               	movwf	efgtoa@u& (0+255),b
  4525  0012DA  0E00               	movlw	0
  4526  0012DC  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4527  0012DE  0E80               	movlw	128
  4528  0012E0  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4529  0012E2  0E3F               	movlw	63
  4530  0012E4  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4531                           
  4532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4533  0012E6  0E00               	movlw	0
  4534  0012E8  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4535  0012EA  0E00               	movlw	0
  4536  0012EC  6FBF               	movwf	efgtoa@e& (0+255),b
  4537  0012EE                     
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4540  0012EE  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  4541  0012F2  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  4542  0012F6  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  4543  0012FA  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  4544  0012FE  0E00               	movlw	0
  4545  001300  6E18               	movwf	___fleq@ff2^0,c
  4546  001302  0E00               	movlw	0
  4547  001304  6E19               	movwf	(___fleq@ff2+1)^0,c
  4548  001306  0E00               	movlw	0
  4549  001308  6E1A               	movwf	(___fleq@ff2+2)^0,c
  4550  00130A  0E00               	movlw	0
  4551  00130C  6E1B               	movwf	(___fleq@ff2+3)^0,c
  4552  00130E  ECE2  F027         	call	___fleq	;wreg free
  4553  001312  B0D8               	btfsc	status,0,c
  4554  001314  EF8E  F009         	goto	u9051
  4555  001318  EF90  F009         	goto	u9050
  4556  00131C                     u9051:
  4557  00131C  EF15  F00A         	goto	l8404
  4558  001320                     u9050:
  4559  001320  EFAF  F009         	goto	l8396
  4560  001324                     l8392:
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4564  001324  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4565  001328  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4566  00132C  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4567  001330  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4568  001334  0E00               	movlw	0
  4569  001336  6E2E               	movwf	___flmul@a^0,c
  4570  001338  0E00               	movlw	0
  4571  00133A  6E2F               	movwf	(___flmul@a+1)^0,c
  4572  00133C  0E20               	movlw	32
  4573  00133E  6E30               	movwf	(___flmul@a+2)^0,c
  4574  001340  0E41               	movlw	65
  4575  001342  6E31               	movwf	(___flmul@a+3)^0,c
  4576  001344  EC82  F013         	call	___flmul	;wreg free
  4577  001348  C02A  F0C3         	movff	?___flmul,efgtoa@u
  4578  00134C  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  4579  001350  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  4580  001354  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  4581  001358                     
  4582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4583  001358  0100               	movlb	0	; () banked
  4584  00135A  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4585  00135C  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4586  00135E                     l8396:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4589  00135E  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4590  001362  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4591  001366  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4592  00136A  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4593  00136E  0E00               	movlw	0
  4594  001370  6E2E               	movwf	___flmul@a^0,c
  4595  001372  0E00               	movlw	0
  4596  001374  6E2F               	movwf	(___flmul@a+1)^0,c
  4597  001376  0E20               	movlw	32
  4598  001378  6E30               	movwf	(___flmul@a+2)^0,c
  4599  00137A  0E41               	movlw	65
  4600  00137C  6E31               	movwf	(___flmul@a+3)^0,c
  4601  00137E  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  4602  001382  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  4603  001386  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  4604  00138A  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  4605  00138E  EC82  F013         	call	___flmul	;wreg free
  4606  001392  C02A  F071         	movff	?___flmul,___flge@ff2
  4607  001396  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4608  00139A  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4609  00139E  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4610  0013A2  EC15  F024         	call	___flge	;wreg free
  4611  0013A6  0100               	movlb	0	; () banked
  4612  0013A8  B0D8               	btfsc	status,0,c
  4613  0013AA  EFD9  F009         	goto	u9061
  4614  0013AE  EFDB  F009         	goto	u9060
  4615  0013B2                     u9061:
  4616  0013B2  EF92  F009         	goto	l8392
  4617  0013B6                     u9060:
  4618  0013B6  EFFB  F009         	goto	l8402
  4619  0013BA                     l8398:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4623  0013BA  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4624  0013BE  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4625  0013C2  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4626  0013C6  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4627  0013CA  0E00               	movlw	0
  4628  0013CC  6E18               	movwf	___fldiv@a^0,c
  4629  0013CE  0E00               	movlw	0
  4630  0013D0  6E19               	movwf	(___fldiv@a+1)^0,c
  4631  0013D2  0E20               	movlw	32
  4632  0013D4  6E1A               	movwf	(___fldiv@a+2)^0,c
  4633  0013D6  0E41               	movlw	65
  4634  0013D8  6E1B               	movwf	(___fldiv@a+3)^0,c
  4635  0013DA  ECAA  F015         	call	___fldiv	;wreg free
  4636  0013DE  C014  F0C3         	movff	?___fldiv,efgtoa@u
  4637  0013E2  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4638  0013E6  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4639  0013EA  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4640  0013EE                     
  4641                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4642  0013EE  0100               	movlb	0	; () banked
  4643  0013F0  07BF               	decf	efgtoa@e& (0+255),f,b
  4644  0013F2  A0D8               	btfss	status,0,c
  4645  0013F4  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  4646  0013F6                     l8402:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4650  0013F6  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  4651  0013FA  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  4652  0013FE  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  4653  001402  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  4654  001406  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  4655  00140A  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  4656  00140E  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  4657  001412  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  4658  001416  EC15  F024         	call	___flge	;wreg free
  4659  00141A  0100               	movlb	0	; () banked
  4660  00141C  A0D8               	btfss	status,0,c
  4661  00141E  EF13  F00A         	goto	u9071
  4662  001422  EF15  F00A         	goto	u9070
  4663  001426                     u9071:
  4664  001426  EFDD  F009         	goto	l8398
  4665  00142A                     u9070:
  4666  00142A                     l8404:
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4669  00142A  C089  F01A         	movff	efgtoa@c,tolower@c
  4670  00142E  6A1B               	clrf	(tolower@c+1)^0,c
  4671  001430  ECD4  F029         	call	_tolower	;wreg free
  4672  001434  501A               	movf	?_tolower^0,w,c
  4673  001436  0100               	movlb	0	; () banked
  4674  001438  6FB0               	movwf	efgtoa@mode& (0+255),b
  4675  00143A                     
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4678  00143A  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  4679  00143E                     
  4680                           ; BSR set to: 0
  4681                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4682  00143E  0E67               	movlw	103
  4683  001440  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4684  001442  A4D8               	btfss	status,2,c
  4685  001444  EF26  F00A         	goto	u9081
  4686  001448  EF28  F00A         	goto	u9080
  4687  00144C                     u9081:
  4688  00144C  EF4E  F00A         	goto	l8418
  4689  001450                     u9080:
  4690  001450                     
  4691                           ; BSR set to: 0
  4692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4693  001450  503C               	movf	_prec^0,w,c
  4694  001452  103D               	iorwf	(_prec+1)^0,w,c
  4695  001454  A4D8               	btfss	status,2,c
  4696  001456  EF2F  F00A         	goto	u9091
  4697  00145A  EF31  F00A         	goto	u9090
  4698  00145E                     u9091:
  4699  00145E  EF35  F00A         	goto	l8414
  4700  001462                     u9090:
  4701  001462                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4704  001462  0E00               	movlw	0
  4705  001464  6E3D               	movwf	(_prec+1)^0,c
  4706  001466  0E01               	movlw	1
  4707  001468  6E3C               	movwf	_prec^0,c
  4708  00146A                     l8414:
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4712  00146A  BE3D               	btfsc	(_prec+1)^0,7,c
  4713  00146C  EF42  F00A         	goto	u9100
  4714  001470  503D               	movf	(_prec+1)^0,w,c
  4715  001472  E106               	bnz	u9101
  4716  001474  043C               	decf	_prec^0,w,c
  4717  001476  B0D8               	btfsc	status,0,c
  4718  001478  EF40  F00A         	goto	u9101
  4719  00147C  EF42  F00A         	goto	u9100
  4720  001480                     u9101:
  4721  001480  EF48  F00A         	goto	l2182
  4722  001484                     u9100:
  4723  001484                     l8416:
  4724                           
  4725                           ; BSR set to: 0
  4726  001484  0E00               	movlw	0
  4727  001486  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4728  001488  0E06               	movlw	6
  4729  00148A  6FAB               	movwf	efgtoa@p& (0+255),b
  4730  00148C  EF57  F00A         	goto	l8424
  4731  001490                     l2182:
  4732                           
  4733                           ; BSR set to: 0
  4734  001490  C03C  F0AB         	movff	_prec,efgtoa@p
  4735  001494  C03D  F0AC         	movff	_prec+1,efgtoa@p+1
  4736  001498  EF57  F00A         	goto	l8424
  4737  00149C                     l8418:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4741  00149C  BE3D               	btfsc	(_prec+1)^0,7,c
  4742  00149E  EF53  F00A         	goto	u9111
  4743  0014A2  EF55  F00A         	goto	u9110
  4744  0014A6                     u9111:
  4745  0014A6  EF42  F00A         	goto	l8416
  4746  0014AA                     u9110:
  4747  0014AA  EF48  F00A         	goto	l2182
  4748  0014AE                     l8424:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4752  0014AE  0E67               	movlw	103
  4753  0014B0  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4754  0014B2  A4D8               	btfss	status,2,c
  4755  0014B4  EF5E  F00A         	goto	u9121
  4756  0014B8  EF60  F00A         	goto	u9120
  4757  0014BC                     u9121:
  4758  0014BC  EF8F  F00A         	goto	l8434
  4759  0014C0                     u9120:
  4760  0014C0                     
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4763  0014C0  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  4764  0014C2  EF6E  F00A         	goto	u9130
  4765  0014C6  0EFC               	movlw	252
  4766  0014C8  5DBF               	subwf	efgtoa@e& (0+255),w,b
  4767  0014CA  0EFF               	movlw	255
  4768  0014CC  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4769  0014CE  A0D8               	btfss	status,0,c
  4770  0014D0  EF6C  F00A         	goto	u9131
  4771  0014D4  EF6E  F00A         	goto	u9130
  4772  0014D8                     u9131:
  4773  0014D8  EF8D  F00A         	goto	l8432
  4774  0014DC                     u9130:
  4775  0014DC                     
  4776                           ; BSR set to: 0
  4777  0014DC  0EFF               	movlw	255
  4778  0014DE  6F8A               	movwf	??_efgtoa& (0+255),b
  4779  0014E0  0EFF               	movlw	255
  4780  0014E2  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4781  0014E4  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  4782  0014E8  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  4783  0014EC  518A               	movf	??_efgtoa& (0+255),w,b
  4784  0014EE  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4785  0014F0  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4786  0014F2  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4787  0014F4  51BF               	movf	efgtoa@e& (0+255),w,b
  4788  0014F6  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4789  0014F8  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4790  0014FA  0A80               	xorlw	128
  4791  0014FC  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  4792  0014FE  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4793  001500  0A80               	xorlw	128
  4794  001502  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4795  001504  A0D8               	btfss	status,0,c
  4796  001506  EF87  F00A         	goto	u9141
  4797  00150A  EF89  F00A         	goto	u9140
  4798  00150E                     u9141:
  4799  00150E  EF8D  F00A         	goto	l8432
  4800  001512                     u9140:
  4801  001512                     
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4804  001512  0E66               	movlw	102
  4805  001514  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4808  001516  EF8F  F00A         	goto	l8434
  4809  00151A                     l8432:
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4813  00151A  0E65               	movlw	101
  4814  00151C  6FAF               	movwf	efgtoa@nmode& (0+255),b
  4815  00151E                     l8434:
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4819  00151E  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  4820  001522  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  4821  001526                     
  4822                           ; BSR set to: 0
  4823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4824  001526  0E67               	movlw	103
  4825  001528  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4826  00152A  A4D8               	btfss	status,2,c
  4827  00152C  EF9A  F00A         	goto	u9151
  4828  001530  EF9C  F00A         	goto	u9150
  4829  001534                     u9151:
  4830  001534  EFAC  F00A         	goto	l8442
  4831  001538                     u9150:
  4832  001538                     
  4833                           ; BSR set to: 0
  4834  001538  0E66               	movlw	102
  4835  00153A  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4836  00153C  A4D8               	btfss	status,2,c
  4837  00153E  EFA3  F00A         	goto	u9161
  4838  001542  EFA5  F00A         	goto	u9160
  4839  001546                     u9161:
  4840  001546  EFAE  F00A         	goto	l8444
  4841  00154A                     u9160:
  4842  00154A                     
  4843                           ; BSR set to: 0
  4844  00154A  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4845  00154C  EFAC  F00A         	goto	u9170
  4846  001550  EFAA  F00A         	goto	u9171
  4847  001554                     u9171:
  4848  001554  EFAE  F00A         	goto	l8444
  4849  001558                     u9170:
  4850  001558                     l8442:
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4854  001558  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4855  00155A  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4856  00155C                     l8444:
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4860  00155C  0E66               	movlw	102
  4861  00155E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4862  001560  A4D8               	btfss	status,2,c
  4863  001562  EFB5  F00A         	goto	u9181
  4864  001566  EFB7  F00A         	goto	u9180
  4865  00156A                     u9181:
  4866  00156A  EFD7  F00A         	goto	l8454
  4867  00156E                     u9180:
  4868  00156E                     
  4869                           ; BSR set to: 0
  4870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4871  00156E  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4872  001570  EFBE  F00A         	goto	u9190
  4873  001574  EFBC  F00A         	goto	u9191
  4874  001578                     u9191:
  4875  001578  EFCA  F00A         	goto	l8450
  4876  00157C                     u9190:
  4877  00157C                     
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4880  00157C  0E00               	movlw	0
  4881  00157E  6FC3               	movwf	efgtoa@u& (0+255),b
  4882  001580  0E00               	movlw	0
  4883  001582  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  4884  001584  0E80               	movlw	128
  4885  001586  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  4886  001588  0E3F               	movlw	63
  4887  00158A  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  4888                           
  4889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4890  00158C  0E00               	movlw	0
  4891  00158E  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  4892  001590  0E00               	movlw	0
  4893  001592  6FBF               	movwf	efgtoa@e& (0+255),b
  4894  001594                     l8450:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4898  001594  0E67               	movlw	103
  4899  001596  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4900  001598  B4D8               	btfsc	status,2,c
  4901  00159A  EFD1  F00A         	goto	u9201
  4902  00159E  EFD3  F00A         	goto	u9200
  4903  0015A2                     u9201:
  4904  0015A2  EFD7  F00A         	goto	l8454
  4905  0015A6                     u9200:
  4906  0015A6                     
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4909  0015A6  51BF               	movf	efgtoa@e& (0+255),w,b
  4910  0015A8  27A1               	addwf	efgtoa@m& (0+255),f,b
  4911  0015AA  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  4912  0015AC  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4913  0015AE                     l8454:
  4914                           
  4915                           ; BSR set to: 0
  4916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4917  0015AE  0E00               	movlw	0
  4918  0015B0  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4919  0015B2  0E00               	movlw	0
  4920  0015B4  6FB9               	movwf	efgtoa@i& (0+255),b
  4921  0015B6                     
  4922                           ; BSR set to: 0
  4923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4924  0015B6  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  4925  0015BA  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  4926  0015BE  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  4927  0015C2  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  4928  0015C6                     
  4929                           ; BSR set to: 0
  4930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4931  0015C6  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  4932  0015CA  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  4933  0015CE  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  4934  0015D2  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4937  0015D6  EF68  F00B         	goto	l8468
  4938  0015DA                     l8460:
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4942  0015DA  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  4943  0015DE  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  4944  0015E2  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  4945  0015E6  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  4946  0015EA  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  4947  0015EE  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  4948  0015F2  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  4949  0015F6  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  4950  0015FA  ECAA  F015         	call	___fldiv	;wreg free
  4951  0015FE  C014  F02D         	movff	?___fldiv,floorf@x
  4952  001602  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  4953  001606  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  4954  00160A  C017  F030         	movff	?___fldiv+3,floorf@x+3
  4955  00160E  EC56  F01B         	call	_floorf	;wreg free
  4956  001612  C02D  F0B5         	movff	?_floorf,efgtoa@l
  4957  001616  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4958  00161A  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4959  00161E  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4960                           
  4961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4962  001622  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4963  001626  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4964  00162A  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4965  00162E  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4966  001632  EC0E  F023         	call	___fltol	;wreg free
  4967  001636  C079  F0A7         	movff	?___fltol,efgtoa@d
  4968  00163A  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4969  00163E                     
  4970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4971  00163E  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4972  001642  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4973  001646  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4974  00164A  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4975  00164E  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  4976  001652  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  4977  001656  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  4978  00165A  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  4979  00165E  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  4980  001662  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  4981  001666  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  4982  00166A  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  4983  00166E  EC82  F013         	call	___flmul	;wreg free
  4984  001672  C02A  F07D         	movff	?___flmul,___flsub@a
  4985  001676  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  4986  00167A  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  4987  00167E  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  4988  001682  EC45  F02B         	call	___flsub	;wreg free
  4989  001686  C079  F0B1         	movff	?___flsub,efgtoa@h
  4990  00168A  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  4991  00168E  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  4992  001692  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  4993  001696                     
  4994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4995  001696  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  4996  00169A  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  4997  00169E  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  4998  0016A2  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  4999  0016A6  0E00               	movlw	0
  5000  0016A8  6E18               	movwf	___fldiv@a^0,c
  5001  0016AA  0E00               	movlw	0
  5002  0016AC  6E19               	movwf	(___fldiv@a+1)^0,c
  5003  0016AE  0E20               	movlw	32
  5004  0016B0  6E1A               	movwf	(___fldiv@a+2)^0,c
  5005  0016B2  0E41               	movlw	65
  5006  0016B4  6E1B               	movwf	(___fldiv@a+3)^0,c
  5007  0016B6  ECAA  F015         	call	___fldiv	;wreg free
  5008  0016BA  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5009  0016BE  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5010  0016C2  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5011  0016C6  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5012  0016CA                     
  5013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  5014  0016CA  0100               	movlb	0	; () banked
  5015  0016CC  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5016  0016CE  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5017  0016D0                     l8468:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  5021  0016D0  51A1               	movf	efgtoa@m& (0+255),w,b
  5022  0016D2  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5023  0016D4  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5024  0016D6  0A80               	xorlw	128
  5025  0016D8  6F8A               	movwf	??_efgtoa& (0+255),b
  5026  0016DA  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5027  0016DC  0A80               	xorlw	128
  5028  0016DE  598A               	subwfb	??_efgtoa& (0+255),w,b
  5029  0016E0  A0D8               	btfss	status,0,c
  5030  0016E2  EF75  F00B         	goto	u9211
  5031  0016E6  EF77  F00B         	goto	u9210
  5032  0016EA                     u9211:
  5033  0016EA  EFED  F00A         	goto	l8460
  5034  0016EE                     u9210:
  5035  0016EE                     
  5036                           ; BSR set to: 0
  5037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  5038  0016EE  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  5039  0016F2  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  5040  0016F6  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  5041  0016FA  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  5042  0016FE  0E00               	movlw	0
  5043  001700  6E2E               	movwf	___flmul@a^0,c
  5044  001702  0E00               	movlw	0
  5045  001704  6E2F               	movwf	(___flmul@a+1)^0,c
  5046  001706  0EA0               	movlw	160
  5047  001708  6E30               	movwf	(___flmul@a+2)^0,c
  5048  00170A  0E40               	movlw	64
  5049  00170C  6E31               	movwf	(___flmul@a+3)^0,c
  5050  00170E  EC82  F013         	call	___flmul	;wreg free
  5051  001712  C02A  F0B5         	movff	?___flmul,efgtoa@l
  5052  001716  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  5053  00171A  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  5054  00171E  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  5055  001722                     
  5056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  5057  001722  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5058  001726  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5059  00172A  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5060  00172E  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5061  001732  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  5062  001736  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  5063  00173A  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  5064  00173E  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  5065  001742  EC15  F024         	call	___flge	;wreg free
  5066  001746  0100               	movlb	0	; () banked
  5067  001748  B0D8               	btfsc	status,0,c
  5068  00174A  EFA9  F00B         	goto	u9221
  5069  00174E  EFAB  F00B         	goto	u9220
  5070  001752                     u9221:
  5071  001752  EFB5  F00B         	goto	l8476
  5072  001756                     u9220:
  5073  001756                     
  5074                           ; BSR set to: 0
  5075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  5076  001756  0E00               	movlw	0
  5077  001758  6FB5               	movwf	efgtoa@l& (0+255),b
  5078  00175A  0E00               	movlw	0
  5079  00175C  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5080  00175E  0E00               	movlw	0
  5081  001760  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5082  001762  0E00               	movlw	0
  5083  001764  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5084                           
  5085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  5086  001766  EFDE  F00B         	goto	l8482
  5087  00176A                     l8476:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  5091  00176A  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  5092  00176E  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  5093  001772  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  5094  001776  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  5095  00177A  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  5096  00177E  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  5097  001782  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  5098  001786  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  5099  00178A  ECE2  F027         	call	___fleq	;wreg free
  5100  00178E  A0D8               	btfss	status,0,c
  5101  001790  EFCC  F00B         	goto	u9231
  5102  001794  EFCE  F00B         	goto	u9230
  5103  001798                     u9231:
  5104  001798  EFDE  F00B         	goto	l8482
  5105  00179C                     u9230:
  5106  00179C  0100               	movlb	0	; () banked
  5107  00179E  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  5108  0017A0  EFD4  F00B         	goto	u9241
  5109  0017A4  EFD6  F00B         	goto	u9240
  5110  0017A8                     u9241:
  5111  0017A8  EFDE  F00B         	goto	l8482
  5112  0017AC                     u9240:
  5113  0017AC                     
  5114                           ; BSR set to: 0
  5115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  5116  0017AC  0E00               	movlw	0
  5117  0017AE  6FB5               	movwf	efgtoa@l& (0+255),b
  5118  0017B0  0E00               	movlw	0
  5119  0017B2  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  5120  0017B4  0E00               	movlw	0
  5121  0017B6  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  5122  0017B8  0E00               	movlw	0
  5123  0017BA  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  5124  0017BC                     l8482:
  5125                           
  5126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  5127  0017BC  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  5128  0017C0  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  5129  0017C4  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  5130  0017C8  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  5131  0017CC  C0B5  F071         	movff	efgtoa@l,___fladd@a
  5132  0017D0  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  5133  0017D4  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  5134  0017D8  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  5135  0017DC  EC21  F011         	call	___fladd	;wreg free
  5136  0017E0  C06D  F0B1         	movff	?___fladd,efgtoa@h
  5137  0017E4  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  5138  0017E8  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  5139  0017EC  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  5140  0017F0                     
  5141                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  5142  0017F0  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  5143  0017F4  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  5144  0017F8  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  5145  0017FC  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  5146  001800  0E00               	movlw	0
  5147  001802  6E2E               	movwf	___flmul@a^0,c
  5148  001804  0E00               	movlw	0
  5149  001806  6E2F               	movwf	(___flmul@a+1)^0,c
  5150  001808  0E20               	movlw	32
  5151  00180A  6E30               	movwf	(___flmul@a+2)^0,c
  5152  00180C  0E41               	movlw	65
  5153  00180E  6E31               	movwf	(___flmul@a+3)^0,c
  5154  001810  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5155  001814  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5156  001818  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5157  00181C  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5158  001820  EC82  F013         	call	___flmul	;wreg free
  5159  001824  C02A  F071         	movff	?___flmul,___flge@ff2
  5160  001828  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  5161  00182C  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  5162  001830  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  5163  001834  EC15  F024         	call	___flge	;wreg free
  5164  001838  0100               	movlb	0	; () banked
  5165  00183A  A0D8               	btfss	status,0,c
  5166  00183C  EF22  F00C         	goto	u9251
  5167  001840  EF24  F00C         	goto	u9250
  5168  001844                     u9251:
  5169  001844  EF4C  F00C         	goto	l8494
  5170  001848                     u9250:
  5171  001848                     
  5172                           ; BSR set to: 0
  5173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  5174  001848  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  5175  00184A  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5176  00184C                     
  5177                           ; BSR set to: 0
  5178                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  5179  00184C  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  5180  001850  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  5181  001854  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  5182  001858  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  5183  00185C  0E00               	movlw	0
  5184  00185E  6E2E               	movwf	___flmul@a^0,c
  5185  001860  0E00               	movlw	0
  5186  001862  6E2F               	movwf	(___flmul@a+1)^0,c
  5187  001864  0E20               	movlw	32
  5188  001866  6E30               	movwf	(___flmul@a+2)^0,c
  5189  001868  0E41               	movlw	65
  5190  00186A  6E31               	movwf	(___flmul@a+3)^0,c
  5191  00186C  EC82  F013         	call	___flmul	;wreg free
  5192  001870  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  5193  001874  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  5194  001878  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  5195  00187C  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  5196  001880                     
  5197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  5198  001880  0E66               	movlw	102
  5199  001882  0100               	movlb	0	; () banked
  5200  001884  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5201  001886  A4D8               	btfss	status,2,c
  5202  001888  EF48  F00C         	goto	u9261
  5203  00188C  EF4A  F00C         	goto	u9260
  5204  001890                     u9261:
  5205  001890  EF4C  F00C         	goto	l8494
  5206  001894                     u9260:
  5207  001894                     
  5208                           ; BSR set to: 0
  5209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  5210  001894  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  5211  001896  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  5212  001898                     l8494:
  5213                           
  5214                           ; BSR set to: 0
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  5216  001898  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  5217  00189C  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  5218  0018A0  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  5219  0018A4  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  5220  0018A8                     
  5221                           ; BSR set to: 0
  5222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5223  0018A8  0E65               	movlw	101
  5224  0018AA  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5225  0018AC  B4D8               	btfsc	status,2,c
  5226  0018AE  EF5B  F00C         	goto	u9271
  5227  0018B2  EF5D  F00C         	goto	u9270
  5228  0018B6                     u9271:
  5229  0018B6  EF63  F00C         	goto	l8500
  5230  0018BA                     u9270:
  5231  0018BA                     
  5232                           ; BSR set to: 0
  5233  0018BA  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  5234  0018BE  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  5235  0018C2  EF67  F00C         	goto	l2210
  5236  0018C6                     l8500:
  5237                           
  5238                           ; BSR set to: 0
  5239  0018C6  0E00               	movlw	0
  5240  0018C8  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5241  0018CA  0E00               	movlw	0
  5242  0018CC  6F9F               	movwf	efgtoa@ne& (0+255),b
  5243  0018CE                     l2210:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  5247  0018CE  0E00               	movlw	0
  5248  0018D0  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5249  0018D2  0E00               	movlw	0
  5250  0018D4  6F9D               	movwf	efgtoa@pp& (0+255),b
  5251                           
  5252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  5253  0018D6  0E00               	movlw	0
  5254  0018D8  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  5255  0018DA  0E00               	movlw	0
  5256  0018DC  6F9B               	movwf	efgtoa@t& (0+255),b
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  5259  0018DE  0E00               	movlw	0
  5260  0018E0  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5261  0018E2  0E00               	movlw	0
  5262  0018E4  6FB9               	movwf	efgtoa@i& (0+255),b
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5265  0018E6  EF63  F00D         	goto	l8550
  5266  0018EA                     l8502:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  5270  0018EA  C0B1  F014         	movff	efgtoa@h,___fldiv@b
  5271  0018EE  C0B2  F015         	movff	efgtoa@h+1,___fldiv@b+1
  5272  0018F2  C0B3  F016         	movff	efgtoa@h+2,___fldiv@b+2
  5273  0018F6  C0B4  F017         	movff	efgtoa@h+3,___fldiv@b+3
  5274  0018FA  C0C3  F018         	movff	efgtoa@u,___fldiv@a
  5275  0018FE  C0C4  F019         	movff	efgtoa@u+1,___fldiv@a+1
  5276  001902  C0C5  F01A         	movff	efgtoa@u+2,___fldiv@a+2
  5277  001906  C0C6  F01B         	movff	efgtoa@u+3,___fldiv@a+3
  5278  00190A  ECAA  F015         	call	___fldiv	;wreg free
  5279  00190E  C014  F02D         	movff	?___fldiv,floorf@x
  5280  001912  C015  F02E         	movff	?___fldiv+1,floorf@x+1
  5281  001916  C016  F02F         	movff	?___fldiv+2,floorf@x+2
  5282  00191A  C017  F030         	movff	?___fldiv+3,floorf@x+3
  5283  00191E  EC56  F01B         	call	_floorf	;wreg free
  5284  001922  C02D  F0B5         	movff	?_floorf,efgtoa@l
  5285  001926  C02E  F0B6         	movff	?_floorf+1,efgtoa@l+1
  5286  00192A  C02F  F0B7         	movff	?_floorf+2,efgtoa@l+2
  5287  00192E  C030  F0B8         	movff	?_floorf+3,efgtoa@l+3
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  5290  001932  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  5291  001936  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  5292  00193A  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  5293  00193E  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  5294  001942  EC0E  F023         	call	___fltol	;wreg free
  5295  001946  C079  F0A7         	movff	?___fltol,efgtoa@d
  5296  00194A  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  5297  00194E                     
  5298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5299  00194E  B83E               	btfsc	_flags^0,4,c
  5300  001950  EFAC  F00C         	goto	u9281
  5301  001954  EFAE  F00C         	goto	u9280
  5302  001958                     u9281:
  5303  001958  EFCC  F00C         	goto	l8514
  5304  00195C                     u9280:
  5305  00195C  0100               	movlb	0	; () banked
  5306  00195E  51A7               	movf	efgtoa@d& (0+255),w,b
  5307  001960  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5308  001962  A4D8               	btfss	status,2,c
  5309  001964  EFB6  F00C         	goto	u9291
  5310  001968  EFB8  F00C         	goto	u9290
  5311  00196C                     u9291:
  5312  00196C  EFCC  F00C         	goto	l8514
  5313  001970                     u9290:
  5314  001970                     
  5315                           ; BSR set to: 0
  5316  001970  0E67               	movlw	103
  5317  001972  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  5318  001974  A4D8               	btfss	status,2,c
  5319  001976  EFBF  F00C         	goto	u9301
  5320  00197A  EFC1  F00C         	goto	u9300
  5321  00197E                     u9301:
  5322  00197E  EFCC  F00C         	goto	l8514
  5323  001982                     u9300:
  5324  001982                     
  5325                           ; BSR set to: 0
  5326  001982  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5327  001984  EFC8  F00C         	goto	u9310
  5328  001988  EFC6  F00C         	goto	u9311
  5329  00198C                     u9311:
  5330  00198C  EFCC  F00C         	goto	l8514
  5331  001990                     u9310:
  5332  001990                     
  5333                           ; BSR set to: 0
  5334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  5335  001990  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  5336  001992  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  5337                           
  5338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  5339  001994  EF17  F00D         	goto	l8542
  5340  001998                     l8514:
  5341                           
  5342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  5343  001998  0100               	movlb	0	; () banked
  5344  00199A  519D               	movf	efgtoa@pp& (0+255),w,b
  5345  00199C  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5346  00199E  A4D8               	btfss	status,2,c
  5347  0019A0  EFD4  F00C         	goto	u9321
  5348  0019A4  EFD6  F00C         	goto	u9320
  5349  0019A8                     u9321:
  5350  0019A8  EF00  F00D         	goto	l8534
  5351  0019AC                     u9320:
  5352  0019AC                     
  5353                           ; BSR set to: 0
  5354  0019AC  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5355  0019AE  EFDD  F00C         	goto	u9330
  5356  0019B2  EFDB  F00C         	goto	u9331
  5357  0019B6                     u9331:
  5358  0019B6  EF00  F00D         	goto	l8534
  5359  0019BA                     u9330:
  5360  0019BA                     
  5361                           ; BSR set to: 0
  5362                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5363  0019BA  0E36               	movlw	low _dbuf
  5364  0019BC  25C1               	addwf	efgtoa@n& (0+255),w,b
  5365  0019BE  6ED9               	movwf	fsr2l,c
  5366  0019C0  0E01               	movlw	high _dbuf
  5367  0019C2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5368  0019C4  6EDA               	movwf	fsr2h,c
  5369  0019C6  0E2E               	movlw	46
  5370  0019C8  6EDF               	movwf	indf2,c
  5371  0019CA                     
  5372                           ; BSR set to: 0
  5373  0019CA  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5374  0019CC  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5375  0019CE                     
  5376                           ; BSR set to: 0
  5377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5378  0019CE  07AD               	decf	efgtoa@w& (0+255),f,b
  5379  0019D0  A0D8               	btfss	status,0,c
  5380  0019D2  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5381  0019D4                     
  5382                           ; BSR set to: 0
  5383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5384  0019D4  0E00               	movlw	0
  5385  0019D6  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  5386  0019D8  0E01               	movlw	1
  5387  0019DA  6F9D               	movwf	efgtoa@pp& (0+255),b
  5388  0019DC  EF00  F00D         	goto	l8534
  5389  0019E0                     l8526:
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5393  0019E0  0E36               	movlw	low _dbuf
  5394  0019E2  25C1               	addwf	efgtoa@n& (0+255),w,b
  5395  0019E4  6ED9               	movwf	fsr2l,c
  5396  0019E6  0E01               	movlw	high _dbuf
  5397  0019E8  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5398  0019EA  6EDA               	movwf	fsr2h,c
  5399  0019EC  0E30               	movlw	48
  5400  0019EE  6EDF               	movwf	indf2,c
  5401  0019F0                     
  5402                           ; BSR set to: 0
  5403  0019F0  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5404  0019F2  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5405  0019F4                     
  5406                           ; BSR set to: 0
  5407                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5408  0019F4  07AD               	decf	efgtoa@w& (0+255),f,b
  5409  0019F6  A0D8               	btfss	status,0,c
  5410  0019F8  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5411  0019FA                     
  5412                           ; BSR set to: 0
  5413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5414  0019FA  079B               	decf	efgtoa@t& (0+255),f,b
  5415  0019FC  A0D8               	btfss	status,0,c
  5416  0019FE  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  5417  001A00                     l8534:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5421  001A00  519B               	movf	efgtoa@t& (0+255),w,b
  5422  001A02  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5423  001A04  A4D8               	btfss	status,2,c
  5424  001A06  EF07  F00D         	goto	u9341
  5425  001A0A  EF09  F00D         	goto	u9340
  5426  001A0E                     u9341:
  5427  001A0E  EFF0  F00C         	goto	l8526
  5428  001A12                     u9340:
  5429  001A12                     
  5430                           ; BSR set to: 0
  5431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5432  001A12  0E36               	movlw	low _dbuf
  5433  001A14  25C1               	addwf	efgtoa@n& (0+255),w,b
  5434  001A16  6ED9               	movwf	fsr2l,c
  5435  001A18  0E01               	movlw	high _dbuf
  5436  001A1A  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5437  001A1C  6EDA               	movwf	fsr2h,c
  5438  001A1E  51A7               	movf	efgtoa@d& (0+255),w,b
  5439  001A20  0F30               	addlw	48
  5440  001A22  6EDF               	movwf	indf2,c
  5441  001A24                     
  5442                           ; BSR set to: 0
  5443  001A24  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5444  001A26  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5445  001A28                     
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5448  001A28  07AD               	decf	efgtoa@w& (0+255),f,b
  5449  001A2A  A0D8               	btfss	status,0,c
  5450  001A2C  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5451  001A2E                     l8542:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5455  001A2E  C0B1  F079         	movff	efgtoa@h,___flsub@b
  5456  001A32  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  5457  001A36  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  5458  001A3A  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  5459  001A3E  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  5460  001A42  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  5461  001A46  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  5462  001A4A  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  5463  001A4E  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  5464  001A52  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  5465  001A56  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  5466  001A5A  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  5467  001A5E  EC82  F013         	call	___flmul	;wreg free
  5468  001A62  C02A  F07D         	movff	?___flmul,___flsub@a
  5469  001A66  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  5470  001A6A  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  5471  001A6E  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  5472  001A72  EC45  F02B         	call	___flsub	;wreg free
  5473  001A76  C079  F0B1         	movff	?___flsub,efgtoa@h
  5474  001A7A  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  5475  001A7E  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  5476  001A82  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  5477  001A86                     
  5478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5479  001A86  C0C3  F014         	movff	efgtoa@u,___fldiv@b
  5480  001A8A  C0C4  F015         	movff	efgtoa@u+1,___fldiv@b+1
  5481  001A8E  C0C5  F016         	movff	efgtoa@u+2,___fldiv@b+2
  5482  001A92  C0C6  F017         	movff	efgtoa@u+3,___fldiv@b+3
  5483  001A96  0E00               	movlw	0
  5484  001A98  6E18               	movwf	___fldiv@a^0,c
  5485  001A9A  0E00               	movlw	0
  5486  001A9C  6E19               	movwf	(___fldiv@a+1)^0,c
  5487  001A9E  0E20               	movlw	32
  5488  001AA0  6E1A               	movwf	(___fldiv@a+2)^0,c
  5489  001AA2  0E41               	movlw	65
  5490  001AA4  6E1B               	movwf	(___fldiv@a+3)^0,c
  5491  001AA6  ECAA  F015         	call	___fldiv	;wreg free
  5492  001AAA  C014  F0C3         	movff	?___fldiv,efgtoa@u
  5493  001AAE  C015  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  5494  001AB2  C016  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  5495  001AB6  C017  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  5496  001ABA                     
  5497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5498  001ABA  0100               	movlb	0	; () banked
  5499  001ABC  079F               	decf	efgtoa@ne& (0+255),f,b
  5500  001ABE  A0D8               	btfss	status,0,c
  5501  001AC0  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5502  001AC2                     
  5503                           ; BSR set to: 0
  5504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5505  001AC2  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  5506  001AC4  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  5507  001AC6                     l8550:
  5508                           
  5509                           ; BSR set to: 0
  5510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5511  001AC6  51A1               	movf	efgtoa@m& (0+255),w,b
  5512  001AC8  5DB9               	subwf	efgtoa@i& (0+255),w,b
  5513  001ACA  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  5514  001ACC  0A80               	xorlw	128
  5515  001ACE  6F8A               	movwf	??_efgtoa& (0+255),b
  5516  001AD0  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  5517  001AD2  0A80               	xorlw	128
  5518  001AD4  598A               	subwfb	??_efgtoa& (0+255),w,b
  5519  001AD6  B0D8               	btfsc	status,0,c
  5520  001AD8  EF70  F00D         	goto	u9351
  5521  001ADC  EF72  F00D         	goto	u9350
  5522  001AE0                     u9351:
  5523  001AE0  EF80  F00D         	goto	l8554
  5524  001AE4                     u9350:
  5525  001AE4                     
  5526                           ; BSR set to: 0
  5527  001AE4  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5528  001AE6  EF7E  F00D         	goto	u9361
  5529  001AEA  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  5530  001AEC  E109               	bnz	u9360
  5531  001AEE  0E4B               	movlw	75
  5532  001AF0  5DC1               	subwf	efgtoa@n& (0+255),w,b
  5533  001AF2  A0D8               	btfss	status,0,c
  5534  001AF4  EF7E  F00D         	goto	u9361
  5535  001AF8  EF80  F00D         	goto	u9360
  5536  001AFC                     u9361:
  5537  001AFC  EF75  F00C         	goto	l8502
  5538  001B00                     u9360:
  5539  001B00                     l8554:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5543  001B00  519D               	movf	efgtoa@pp& (0+255),w,b
  5544  001B02  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5545  001B04  A4D8               	btfss	status,2,c
  5546  001B06  EF87  F00D         	goto	u9371
  5547  001B0A  EF89  F00D         	goto	u9370
  5548  001B0E                     u9371:
  5549  001B0E  EF9A  F00D         	goto	l8562
  5550  001B12                     u9370:
  5551  001B12                     
  5552                           ; BSR set to: 0
  5553  001B12  A83E               	btfss	_flags^0,4,c
  5554  001B14  EF8E  F00D         	goto	u9381
  5555  001B18  EF90  F00D         	goto	u9380
  5556  001B1C                     u9381:
  5557  001B1C  EF9A  F00D         	goto	l8562
  5558  001B20                     u9380:
  5559  001B20                     
  5560                           ; BSR set to: 0
  5561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5562  001B20  0E36               	movlw	low _dbuf
  5563  001B22  25C1               	addwf	efgtoa@n& (0+255),w,b
  5564  001B24  6ED9               	movwf	fsr2l,c
  5565  001B26  0E01               	movlw	high _dbuf
  5566  001B28  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5567  001B2A  6EDA               	movwf	fsr2h,c
  5568  001B2C  0E2E               	movlw	46
  5569  001B2E  6EDF               	movwf	indf2,c
  5570  001B30                     
  5571                           ; BSR set to: 0
  5572  001B30  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  5573  001B32  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  5574  001B34                     l8562:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5578  001B34  0E36               	movlw	low _dbuf
  5579  001B36  25C1               	addwf	efgtoa@n& (0+255),w,b
  5580  001B38  6ED9               	movwf	fsr2l,c
  5581  001B3A  0E01               	movlw	high _dbuf
  5582  001B3C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5583  001B3E  6EDA               	movwf	fsr2h,c
  5584  001B40  0E00               	movlw	0
  5585  001B42  6EDF               	movwf	indf2,c
  5586  001B44                     
  5587                           ; BSR set to: 0
  5588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5589  001B44  0E65               	movlw	101
  5590  001B46  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  5591  001B48  A4D8               	btfss	status,2,c
  5592  001B4A  EFA9  F00D         	goto	u9391
  5593  001B4E  EFAB  F00D         	goto	u9390
  5594  001B52                     u9391:
  5595  001B52  EF7D  F00E         	goto	l8624
  5596  001B56                     u9390:
  5597  001B56                     
  5598                           ; BSR set to: 0
  5599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5600  001B56  0E00               	movlw	0
  5601  001B58  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  5602  001B5A  0E4F               	movlw	79
  5603  001B5C  6FB9               	movwf	efgtoa@i& (0+255),b
  5604  001B5E                     
  5605                           ; BSR set to: 0
  5606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5607  001B5E  0E36               	movlw	low _dbuf
  5608  001B60  25B9               	addwf	efgtoa@i& (0+255),w,b
  5609  001B62  6ED9               	movwf	fsr2l,c
  5610  001B64  0E01               	movlw	high _dbuf
  5611  001B66  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5612  001B68  6EDA               	movwf	fsr2h,c
  5613  001B6A  0E00               	movlw	0
  5614  001B6C  6EDF               	movwf	indf2,c
  5615  001B6E                     
  5616                           ; BSR set to: 0
  5617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5618  001B6E  0E00               	movlw	0
  5619  001B70  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5620  001B72  0E00               	movlw	0
  5621  001B74  6FA9               	movwf	efgtoa@sign& (0+255),b
  5622  001B76                     
  5623                           ; BSR set to: 0
  5624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5625  001B76  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5626  001B78  EFC2  F00D         	goto	u9400
  5627  001B7C  EFC0  F00D         	goto	u9401
  5628  001B80                     u9401:
  5629  001B80  EFCA  F00D         	goto	l8578
  5630  001B84                     u9400:
  5631  001B84                     
  5632                           ; BSR set to: 0
  5633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5634  001B84  0E00               	movlw	0
  5635  001B86  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  5636  001B88  0E01               	movlw	1
  5637  001B8A  6FA9               	movwf	efgtoa@sign& (0+255),b
  5638  001B8C                     
  5639                           ; BSR set to: 0
  5640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5641  001B8C  6DBF               	negf	efgtoa@e& (0+255),b
  5642  001B8E  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  5643  001B90  B0D8               	btfsc	status,0,c
  5644  001B92  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  5645  001B94                     l8578:
  5646                           
  5647                           ; BSR set to: 0
  5648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5649  001B94  0E00               	movlw	0
  5650  001B96  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  5651  001B98  0E02               	movlw	2
  5652  001B9A  6FAB               	movwf	efgtoa@p& (0+255),b
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5655  001B9C  EFFB  F00D         	goto	l8590
  5656  001BA0                     l8580:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5660  001BA0  07B9               	decf	efgtoa@i& (0+255),f,b
  5661  001BA2  A0D8               	btfss	status,0,c
  5662  001BA4  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5663  001BA6                     
  5664                           ; BSR set to: 0
  5665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5666  001BA6  0E36               	movlw	low _dbuf
  5667  001BA8  25B9               	addwf	efgtoa@i& (0+255),w,b
  5668  001BAA  6ED9               	movwf	fsr2l,c
  5669  001BAC  0E01               	movlw	high _dbuf
  5670  001BAE  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5671  001BB0  6EDA               	movwf	fsr2h,c
  5672  001BB2  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  5673  001BB6  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  5674  001BBA  0E00               	movlw	0
  5675  001BBC  6E17               	movwf	(___awmod@divisor+1)^0,c
  5676  001BBE  0E0A               	movlw	10
  5677  001BC0  6E16               	movwf	___awmod@divisor^0,c
  5678  001BC2  EC8A  F027         	call	___awmod	;wreg free
  5679  001BC6  5014               	movf	?___awmod^0,w,c
  5680  001BC8  0F30               	addlw	48
  5681  001BCA  6EDF               	movwf	indf2,c
  5682  001BCC                     
  5683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5684  001BCC  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  5685  001BD0  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  5686  001BD4  0E00               	movlw	0
  5687  001BD6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  5688  001BD8  0E0A               	movlw	10
  5689  001BDA  6E16               	movwf	___awdiv@divisor^0,c
  5690  001BDC  EC67  F026         	call	___awdiv	;wreg free
  5691  001BE0  C014  F0BF         	movff	?___awdiv,efgtoa@e
  5692  001BE4  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  5693  001BE8                     
  5694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5695  001BE8  0100               	movlb	0	; () banked
  5696  001BEA  07AB               	decf	efgtoa@p& (0+255),f,b
  5697  001BEC  A0D8               	btfss	status,0,c
  5698  001BEE  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  5699  001BF0                     
  5700                           ; BSR set to: 0
  5701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5702  001BF0  07AD               	decf	efgtoa@w& (0+255),f,b
  5703  001BF2  A0D8               	btfss	status,0,c
  5704  001BF4  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5705  001BF6                     l8590:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5709  001BF6  51BF               	movf	efgtoa@e& (0+255),w,b
  5710  001BF8  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5711  001BFA  A4D8               	btfss	status,2,c
  5712  001BFC  EF02  F00E         	goto	u9411
  5713  001C00  EF04  F00E         	goto	u9410
  5714  001C04                     u9411:
  5715  001C04  EFD0  F00D         	goto	l8580
  5716  001C08                     u9410:
  5717  001C08                     
  5718                           ; BSR set to: 0
  5719  001C08  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5720  001C0A  EF11  F00E         	goto	u9420
  5721  001C0E  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  5722  001C10  E106               	bnz	u9421
  5723  001C12  05AB               	decf	efgtoa@p& (0+255),w,b
  5724  001C14  B0D8               	btfsc	status,0,c
  5725  001C16  EF0F  F00E         	goto	u9421
  5726  001C1A  EF11  F00E         	goto	u9420
  5727  001C1E                     u9421:
  5728  001C1E  EFD0  F00D         	goto	l8580
  5729  001C22                     u9420:
  5730  001C22                     
  5731                           ; BSR set to: 0
  5732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5733  001C22  07B9               	decf	efgtoa@i& (0+255),f,b
  5734  001C24  A0D8               	btfss	status,0,c
  5735  001C26  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5736  001C28                     
  5737                           ; BSR set to: 0
  5738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5739  001C28  51A9               	movf	efgtoa@sign& (0+255),w,b
  5740  001C2A  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5741  001C2C  A4D8               	btfss	status,2,c
  5742  001C2E  EF1B  F00E         	goto	u9431
  5743  001C32  EF1D  F00E         	goto	u9430
  5744  001C36                     u9431:
  5745  001C36  EF23  F00E         	goto	l8600
  5746  001C3A                     u9430:
  5747  001C3A                     
  5748                           ; BSR set to: 0
  5749  001C3A  0E00               	movlw	0
  5750  001C3C  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5751  001C3E  0E2B               	movlw	43
  5752  001C40  6F95               	movwf	_efgtoa$3563& (0+255),b
  5753  001C42  EF27  F00E         	goto	l8602
  5754  001C46                     l8600:
  5755                           
  5756                           ; BSR set to: 0
  5757  001C46  0E00               	movlw	0
  5758  001C48  6F96               	movwf	(_efgtoa$3563+1)& (0+255),b
  5759  001C4A  0E2D               	movlw	45
  5760  001C4C  6F95               	movwf	_efgtoa$3563& (0+255),b
  5761  001C4E                     l8602:
  5762                           
  5763                           ; BSR set to: 0
  5764  001C4E  0E36               	movlw	low _dbuf
  5765  001C50  25B9               	addwf	efgtoa@i& (0+255),w,b
  5766  001C52  6ED9               	movwf	fsr2l,c
  5767  001C54  0E01               	movlw	high _dbuf
  5768  001C56  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5769  001C58  6EDA               	movwf	fsr2h,c
  5770  001C5A  0060  F257  FFDF   	movff	_efgtoa$3563,indf2
  5771  001C60                     
  5772                           ; BSR set to: 0
  5773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5774  001C60  07AD               	decf	efgtoa@w& (0+255),f,b
  5775  001C62  A0D8               	btfss	status,0,c
  5776  001C64  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5777  001C66                     
  5778                           ; BSR set to: 0
  5779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5780  001C66  07B9               	decf	efgtoa@i& (0+255),f,b
  5781  001C68  A0D8               	btfss	status,0,c
  5782  001C6A  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  5783  001C6C                     
  5784                           ; BSR set to: 0
  5785  001C6C  0EBF               	movlw	191
  5786  001C6E  6F8A               	movwf	??_efgtoa& (0+255),b
  5787  001C70  0EFF               	movlw	255
  5788  001C72  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  5789  001C74  5189               	movf	efgtoa@c& (0+255),w,b
  5790  001C76  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  5791  001C78  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  5792  001C7A  518A               	movf	??_efgtoa& (0+255),w,b
  5793  001C7C  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  5794  001C7E  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  5795  001C80  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5796  001C82  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  5797  001C84  E10A               	bnz	u9440
  5798  001C86  0E1A               	movlw	26
  5799  001C88  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  5800  001C8A  A0D8               	btfss	status,0,c
  5801  001C8C  EF4A  F00E         	goto	u9441
  5802  001C90  EF4D  F00E         	goto	u9440
  5803  001C94                     u9441:
  5804  001C94  0E01               	movlw	1
  5805  001C96  EF4E  F00E         	goto	u9450
  5806  001C9A                     u9440:
  5807  001C9A  0E00               	movlw	0
  5808  001C9C                     u9450:
  5809  001C9C  6F99               	movwf	_efgtoa$3565& (0+255),b
  5810  001C9E  6B9A               	clrf	(_efgtoa$3565+1)& (0+255),b
  5811  001CA0                     
  5812                           ; BSR set to: 0
  5813  001CA0  5199               	movf	_efgtoa$3565& (0+255),w,b
  5814  001CA2  119A               	iorwf	(_efgtoa$3565+1)& (0+255),w,b
  5815  001CA4  A4D8               	btfss	status,2,c
  5816  001CA6  EF57  F00E         	goto	u9461
  5817  001CAA  EF59  F00E         	goto	u9460
  5818  001CAE                     u9461:
  5819  001CAE  EF5F  F00E         	goto	l8616
  5820  001CB2                     u9460:
  5821  001CB2                     
  5822                           ; BSR set to: 0
  5823  001CB2  0E00               	movlw	0
  5824  001CB4  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5825  001CB6  0E65               	movlw	101
  5826  001CB8  6F97               	movwf	_efgtoa$3564& (0+255),b
  5827  001CBA  EF63  F00E         	goto	l8618
  5828  001CBE                     l8616:
  5829                           
  5830                           ; BSR set to: 0
  5831  001CBE  0E00               	movlw	0
  5832  001CC0  6F98               	movwf	(_efgtoa$3564+1)& (0+255),b
  5833  001CC2  0E45               	movlw	69
  5834  001CC4  6F97               	movwf	_efgtoa$3564& (0+255),b
  5835  001CC6                     l8618:
  5836                           
  5837                           ; BSR set to: 0
  5838  001CC6  0E36               	movlw	low _dbuf
  5839  001CC8  25B9               	addwf	efgtoa@i& (0+255),w,b
  5840  001CCA  6ED9               	movwf	fsr2l,c
  5841  001CCC  0E01               	movlw	high _dbuf
  5842  001CCE  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5843  001CD0  6EDA               	movwf	fsr2h,c
  5844  001CD2  0060  F25F  FFDF   	movff	_efgtoa$3564,indf2
  5845  001CD8                     
  5846                           ; BSR set to: 0
  5847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5848  001CD8  07AD               	decf	efgtoa@w& (0+255),f,b
  5849  001CDA  A0D8               	btfss	status,0,c
  5850  001CDC  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  5851  001CDE                     
  5852                           ; BSR set to: 0
  5853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5854  001CDE  0E36               	movlw	low _dbuf
  5855  001CE0  25C1               	addwf	efgtoa@n& (0+255),w,b
  5856  001CE2  6E14               	movwf	strcpy@dest^0,c
  5857  001CE4  0E01               	movlw	high _dbuf
  5858  001CE6  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5859  001CE8  6E15               	movwf	(strcpy@dest+1)^0,c
  5860  001CEA  0E36               	movlw	low _dbuf
  5861  001CEC  25B9               	addwf	efgtoa@i& (0+255),w,b
  5862  001CEE  6E16               	movwf	strcpy@src^0,c
  5863  001CF0  0E01               	movlw	high _dbuf
  5864  001CF2  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5865  001CF4  6E17               	movwf	(strcpy@src+1)^0,c
  5866  001CF6  EC9F  F029         	call	_strcpy	;wreg free
  5867  001CFA                     l8624:
  5868                           
  5869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  5870  001CFA  C083  F026         	movff	efgtoa@fp,pad@fp
  5871  001CFE  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  5872  001D02  0E36               	movlw	low _dbuf
  5873  001D04  6E28               	movwf	pad@buf^0,c
  5874  001D06  0E01               	movlw	high _dbuf
  5875  001D08  6E29               	movwf	(pad@buf+1)^0,c
  5876  001D0A  C0AD  F02A         	movff	efgtoa@w,pad@p
  5877  001D0E  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  5878  001D12  ECC9  F026         	call	_pad	;wreg free
  5879  001D16  C026  F083         	movff	?_pad,?_efgtoa
  5880  001D1A  C027  F084         	movff	?_pad+1,?_efgtoa+1
  5881  001D1E                     l2164:
  5882  001D1E  0012               	return		;funcret
  5883  001D20                     __end_of_efgtoa:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function _tolower *****************
  5887 ;; Defined at:
  5888 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  c               2   25[COMRAM] int 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;		None
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  2   25[COMRAM] int 
  5895 ;; Registers used:
  5896 ;;		wreg, status,2, status,0
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;Total ram usage:        8 bytes
  5907 ;; Hardware stack levels used: 1
  5908 ;; Hardware stack levels required when called: 9
  5909 ;; This function calls:
  5910 ;;		_isupper
  5911 ;; This function is called by:
  5912 ;;		_efgtoa
  5913 ;;		_vfpfcnvrt
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text11
  5918  0053A8                     __ptext11:
  5919                           	callstack 0
  5920  0053A8                     _tolower:
  5921                           	callstack 16
  5922  0053A8  0EBF               	movlw	191
  5923  0053AA  6E1C               	movwf	??_tolower^0,c
  5924  0053AC  0EFF               	movlw	255
  5925  0053AE  6E1D               	movwf	(??_tolower+1)^0,c
  5926  0053B0  C01A  F01E         	movff	tolower@c,??_tolower+2
  5927  0053B4  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  5928  0053B8  501C               	movf	??_tolower^0,w,c
  5929  0053BA  261E               	addwf	(??_tolower+2)^0,f,c
  5930  0053BC  501D               	movf	(??_tolower+1)^0,w,c
  5931  0053BE  221F               	addwfc	(??_tolower+3)^0,f,c
  5932  0053C0  501F               	movf	(??_tolower+3)^0,w,c
  5933  0053C2  E10A               	bnz	u8650
  5934  0053C4  0E1A               	movlw	26
  5935  0053C6  5C1E               	subwf	(??_tolower+2)^0,w,c
  5936  0053C8  A0D8               	btfss	status,0,c
  5937  0053CA  EFE9  F029         	goto	u8651
  5938  0053CE  EFEC  F029         	goto	u8650
  5939  0053D2                     u8651:
  5940  0053D2  0E01               	movlw	1
  5941  0053D4  EFED  F029         	goto	u8660
  5942  0053D8                     u8650:
  5943  0053D8  0E00               	movlw	0
  5944  0053DA                     u8660:
  5945  0053DA  6E20               	movwf	_tolower$3676^0,c
  5946  0053DC  6A21               	clrf	(_tolower$3676+1)^0,c
  5947  0053DE  5020               	movf	_tolower$3676^0,w,c
  5948  0053E0  1021               	iorwf	(_tolower$3676+1)^0,w,c
  5949  0053E2  B4D8               	btfsc	status,2,c
  5950  0053E4  EFF6  F029         	goto	u8671
  5951  0053E8  EFF8  F029         	goto	u8670
  5952  0053EC                     u8671:
  5953  0053EC  EFFF  F029         	goto	l2346
  5954  0053F0                     u8670:
  5955  0053F0  0E20               	movlw	32
  5956  0053F2  101A               	iorwf	tolower@c^0,w,c
  5957  0053F4  6E1A               	movwf	?_tolower^0,c
  5958  0053F6  501B               	movf	(tolower@c+1)^0,w,c
  5959  0053F8  6E1B               	movwf	(?_tolower+1)^0,c
  5960  0053FA  EF03  F02A         	goto	l2351
  5961  0053FE                     l2346:
  5962  0053FE  C01A  F01A         	movff	tolower@c,?_tolower
  5963  005402  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  5964  005406                     l2351:
  5965  005406  0012               	return		;funcret
  5966  005408                     __end_of_tolower:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _isupper *****************
  5970 ;; Defined at:
  5971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  c               2   19[COMRAM] int 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  2   19[COMRAM] int 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;Total ram usage:        6 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; Hardware stack levels required when called: 8
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_efgtoa
  5996 ;;		_vfpfcnvrt
  5997 ;;		_tolower
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text12
  6002  00584A                     __ptext12:
  6003                           	callstack 0
  6004  00584A                     _isupper:
  6005                           	callstack 16
  6006  00584A  0EBF               	movlw	191
  6007  00584C  6E16               	movwf	??_isupper^0,c
  6008  00584E  0EFF               	movlw	255
  6009  005850  6E17               	movwf	(??_isupper+1)^0,c
  6010  005852  C014  F018         	movff	isupper@c,??_isupper+2
  6011  005856  C015  F019         	movff	isupper@c+1,??_isupper+3
  6012  00585A  5016               	movf	??_isupper^0,w,c
  6013  00585C  2618               	addwf	(??_isupper+2)^0,f,c
  6014  00585E  5017               	movf	(??_isupper+1)^0,w,c
  6015  005860  2219               	addwfc	(??_isupper+3)^0,f,c
  6016  005862  5019               	movf	(??_isupper+3)^0,w,c
  6017  005864  E10A               	bnz	u7660
  6018  005866  0E1A               	movlw	26
  6019  005868  5C18               	subwf	(??_isupper+2)^0,w,c
  6020  00586A  A0D8               	btfss	status,0,c
  6021  00586C  EF3A  F02C         	goto	u7661
  6022  005870  EF3D  F02C         	goto	u7660
  6023  005874                     u7661:
  6024  005874  0E01               	movlw	1
  6025  005876  EF3E  F02C         	goto	u7670
  6026  00587A                     u7660:
  6027  00587A  0E00               	movlw	0
  6028  00587C                     u7670:
  6029  00587C  6E14               	movwf	?_isupper^0,c
  6030  00587E  6A15               	clrf	(?_isupper+1)^0,c
  6031  005880  0012               	return		;funcret
  6032  005882                     __end_of_isupper:
  6033                           	callstack 0
  6034                           
  6035 ;; *************** function _strcpy *****************
  6036 ;; Defined at:
  6037 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  dest            2   19[COMRAM] PTR unsigned char 
  6040 ;;		 -> dbuf(80), 
  6041 ;;  src             2   21[COMRAM] PTR const unsigned char 
  6042 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6043 ;;		 -> dbuf(80), 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  d               2   27[COMRAM] PTR unsigned char 
  6046 ;;		 -> dbuf(80), 
  6047 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6048 ;;		 -> STR_13(4), STR_12(4), STR_9(4), STR_8(4), 
  6049 ;;		 -> dbuf(80), 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2   19[COMRAM] PTR unsigned char 
  6052 ;; Registers used:
  6053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;Total ram usage:       10 bytes
  6064 ;; Hardware stack levels used: 1
  6065 ;; Hardware stack levels required when called: 8
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_efgtoa
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text13
  6074  00533E                     __ptext13:
  6075                           	callstack 0
  6076  00533E                     _strcpy:
  6077                           	callstack 16
  6078  00533E  C016  F01A         	movff	strcpy@src,strcpy@s
  6079  005342  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  6080  005346  C014  F01C         	movff	strcpy@dest,strcpy@d
  6081  00534A  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  6082  00534E                     l8218:
  6083  00534E  501A               	movf	strcpy@s^0,w,c
  6084  005350  6E18               	movwf	??_strcpy^0,c
  6085  005352  501B               	movf	(strcpy@s+1)^0,w,c
  6086  005354  6E19               	movwf	(??_strcpy+1)^0,c
  6087  005356  4A1A               	infsnz	strcpy@s^0,f,c
  6088  005358  2A1B               	incf	(strcpy@s+1)^0,f,c
  6089  00535A  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  6090  005360  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  6091  005366  0E00               	movlw	low (__smallconst shr (0+16))
  6092  005368  6EF8               	movwf	tblptru,c
  6093  00536A  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  6094  005370  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  6095  005376  4A1C               	infsnz	strcpy@d^0,f,c
  6096  005378  2A1D               	incf	(strcpy@d+1)^0,f,c
  6097  00537A  0E0F               	movlw	(high __ramtop+-1)
  6098  00537C  64F7               	cpfsgt	tblptrh,c
  6099  00537E  D003               	bra	u8637
  6100  005380  0008               	tblrd		*
  6101  005382  50F5               	movf	tablat,w,c
  6102  005384  D007               	bra	u8630
  6103  005386                     u8637:
  6104  005386  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6105  00538C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6106  005392  50E7               	movf	indf1,w,c
  6107  005394                     u8630:
  6108  005394  6EDF               	movwf	indf2,c
  6109  005396  50DF               	movf	indf2,w,c
  6110  005398  A4D8               	btfss	status,2,c
  6111  00539A  EFD1  F029         	goto	u8641
  6112  00539E  EFD3  F029         	goto	u8640
  6113  0053A2                     u8641:
  6114  0053A2  EFA7  F029         	goto	l8218
  6115  0053A6                     u8640:
  6116  0053A6  0012               	return		;funcret
  6117  0053A8                     __end_of_strcpy:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _floorf *****************
  6121 ;; Defined at:
  6122 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  x               4   44[COMRAM] float 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  u               4    6[BANK0 ] struct .
  6127 ;;  m               4    0[BANK0 ] unsigned long 
  6128 ;;  e               2    4[BANK0 ] int 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  4   44[COMRAM] float 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6138 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Totals:        10      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;Total ram usage:       20 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; Hardware stack levels required when called: 8
  6145 ;; This function calls:
  6146 ;;		Nothing
  6147 ;; This function is called by:
  6148 ;;		_efgtoa
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text14
  6153  0036AC                     __ptext14:
  6154                           	callstack 0
  6155  0036AC                     _floorf:
  6156                           	callstack 16
  6157  0036AC  C118  F066         	movff	floorf@F527,floorf@u
  6158  0036B0  C119  F067         	movff	floorf@F527+1,floorf@u+1
  6159  0036B4  C11A  F068         	movff	floorf@F527+2,floorf@u+2
  6160  0036B8  C11B  F069         	movff	floorf@F527+3,floorf@u+3
  6161  0036BC  C02D  F066         	movff	floorf@x,floorf@u
  6162  0036C0  C02E  F067         	movff	floorf@x+1,floorf@u+1
  6163  0036C4  C02F  F068         	movff	floorf@x+2,floorf@u+2
  6164  0036C8  C030  F069         	movff	floorf@x+3,floorf@u+3
  6165  0036CC  0E81               	movlw	129
  6166  0036CE  6E31               	movwf	??_floorf^0,c
  6167  0036D0  0EFF               	movlw	255
  6168  0036D2  6E32               	movwf	(??_floorf+1)^0,c
  6169  0036D4  C066  F033         	movff	floorf@u,??_floorf+2
  6170  0036D8  C067  F034         	movff	floorf@u+1,??_floorf+3
  6171  0036DC  C068  F035         	movff	floorf@u+2,??_floorf+4
  6172  0036E0  C069  F036         	movff	floorf@u+3,??_floorf+5
  6173  0036E4  0E18               	movlw	24
  6174  0036E6  EF7A  F01B         	goto	u8680
  6175  0036EA                     u8685:
  6176  0036EA  90D8               	bcf	status,0,c
  6177  0036EC  3236               	rrcf	(??_floorf+5)^0,f,c
  6178  0036EE  3235               	rrcf	(??_floorf+4)^0,f,c
  6179  0036F0  3234               	rrcf	(??_floorf+3)^0,f,c
  6180  0036F2  3233               	rrcf	(??_floorf+2)^0,f,c
  6181  0036F4                     u8680:
  6182  0036F4  2EE8               	decfsz	wreg,f,c
  6183  0036F6  EF75  F01B         	goto	u8685
  6184  0036FA  5033               	movf	(??_floorf+2)^0,w,c
  6185  0036FC  2431               	addwf	??_floorf^0,w,c
  6186  0036FE  0100               	movlb	0	; () banked
  6187  003700  6F64               	movwf	floorf@e& (0+255),b
  6188  003702  0E00               	movlw	0
  6189  003704  2032               	addwfc	(??_floorf+1)^0,w,c
  6190  003706  6F65               	movwf	(floorf@e+1)& (0+255),b
  6191  003708  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6192  00370A  EF90  F01B         	goto	u8691
  6193  00370E  5165               	movf	(floorf@e+1)& (0+255),w,b
  6194  003710  E109               	bnz	u8690
  6195  003712  0E17               	movlw	23
  6196  003714  5D64               	subwf	floorf@e& (0+255),w,b
  6197  003716  A0D8               	btfss	status,0,c
  6198  003718  EF90  F01B         	goto	u8691
  6199  00371C  EF92  F01B         	goto	u8690
  6200  003720                     u8691:
  6201  003720  EF9C  F01B         	goto	l8236
  6202  003724                     u8690:
  6203  003724                     l8234:
  6204                           
  6205                           ; BSR set to: 0
  6206  003724  C02D  F02D         	movff	floorf@x,?_floorf
  6207  003728  C02E  F02E         	movff	floorf@x+1,?_floorf+1
  6208  00372C  C02F  F02F         	movff	floorf@x+2,?_floorf+2
  6209  003730  C030  F030         	movff	floorf@x+3,?_floorf+3
  6210  003734  EF60  F01C         	goto	l2287
  6211  003738                     l8236:
  6212                           
  6213                           ; BSR set to: 0
  6214  003738  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  6215  00373A  EFA1  F01B         	goto	u8701
  6216  00373E  EFA3  F01B         	goto	u8700
  6217  003742                     u8701:
  6218  003742  EF14  F01C         	goto	l8246
  6219  003746                     u8700:
  6220  003746                     
  6221                           ; BSR set to: 0
  6222  003746  C064  F031         	movff	floorf@e,??_floorf
  6223  00374A  0EFF               	movlw	255
  6224  00374C  6E32               	movwf	(??_floorf+1)^0,c
  6225  00374E  0EFF               	movlw	255
  6226  003750  6E33               	movwf	(??_floorf+2)^0,c
  6227  003752  0E7F               	movlw	127
  6228  003754  6E34               	movwf	(??_floorf+3)^0,c
  6229  003756  0E00               	movlw	0
  6230  003758  6E35               	movwf	(??_floorf+4)^0,c
  6231  00375A                     u8715:
  6232  00375A  6631               	tstfsz	??_floorf^0,c
  6233  00375C  EFB2  F01B         	goto	u8716
  6234  003760  EFBA  F01B         	goto	u8717
  6235  003764                     u8716:
  6236  003764  3435               	rlcf	(??_floorf+4)^0,w,c
  6237  003766  3235               	rrcf	(??_floorf+4)^0,f,c
  6238  003768  3234               	rrcf	(??_floorf+3)^0,f,c
  6239  00376A  3233               	rrcf	(??_floorf+2)^0,f,c
  6240  00376C  3232               	rrcf	(??_floorf+1)^0,f,c
  6241  00376E  2E31               	decfsz	??_floorf^0,f,c
  6242  003770  EFAD  F01B         	goto	u8715
  6243  003774                     u8717:
  6244  003774  C032  F060         	movff	??_floorf+1,floorf@m
  6245  003778  C033  F061         	movff	??_floorf+2,floorf@m+1
  6246  00377C  C034  F062         	movff	??_floorf+3,floorf@m+2
  6247  003780  C035  F063         	movff	??_floorf+4,floorf@m+3
  6248  003784  0100               	movlb	0	; () banked
  6249  003786  5160               	movf	floorf@m& (0+255),w,b
  6250  003788  1566               	andwf	floorf@u& (0+255),w,b
  6251  00378A  6E31               	movwf	??_floorf^0,c
  6252  00378C  5161               	movf	(floorf@m+1)& (0+255),w,b
  6253  00378E  1567               	andwf	(floorf@u+1)& (0+255),w,b
  6254  003790  6E32               	movwf	(??_floorf+1)^0,c
  6255  003792  5162               	movf	(floorf@m+2)& (0+255),w,b
  6256  003794  1568               	andwf	(floorf@u+2)& (0+255),w,b
  6257  003796  6E33               	movwf	(??_floorf+2)^0,c
  6258  003798  5163               	movf	(floorf@m+3)& (0+255),w,b
  6259  00379A  1569               	andwf	(floorf@u+3)& (0+255),w,b
  6260  00379C  6E34               	movwf	(??_floorf+3)^0,c
  6261  00379E  5031               	movf	??_floorf^0,w,c
  6262  0037A0  1032               	iorwf	(??_floorf+1)^0,w,c
  6263  0037A2  1033               	iorwf	(??_floorf+2)^0,w,c
  6264  0037A4  1034               	iorwf	(??_floorf+3)^0,w,c
  6265  0037A6  A4D8               	btfss	status,2,c
  6266  0037A8  EFD8  F01B         	goto	u8721
  6267  0037AC  EFDA  F01B         	goto	u8720
  6268  0037B0                     u8721:
  6269  0037B0  EFDC  F01B         	goto	l8242
  6270  0037B4                     u8720:
  6271  0037B4  EF92  F01B         	goto	l8234
  6272  0037B8                     l8242:
  6273                           
  6274                           ; BSR set to: 0
  6275  0037B8  C066  F031         	movff	floorf@u,??_floorf
  6276  0037BC  C067  F032         	movff	floorf@u+1,??_floorf+1
  6277  0037C0  C068  F033         	movff	floorf@u+2,??_floorf+2
  6278  0037C4  C069  F034         	movff	floorf@u+3,??_floorf+3
  6279  0037C8  0E20               	movlw	32
  6280  0037CA  EFEC  F01B         	goto	u8730
  6281  0037CE                     u8735:
  6282  0037CE  90D8               	bcf	status,0,c
  6283  0037D0  3234               	rrcf	(??_floorf+3)^0,f,c
  6284  0037D2  3233               	rrcf	(??_floorf+2)^0,f,c
  6285  0037D4  3232               	rrcf	(??_floorf+1)^0,f,c
  6286  0037D6  3231               	rrcf	??_floorf^0,f,c
  6287  0037D8                     u8730:
  6288  0037D8  2EE8               	decfsz	wreg,f,c
  6289  0037DA  EFE7  F01B         	goto	u8735
  6290  0037DE  5031               	movf	??_floorf^0,w,c
  6291  0037E0  1032               	iorwf	(??_floorf+1)^0,w,c
  6292  0037E2  1033               	iorwf	(??_floorf+2)^0,w,c
  6293  0037E4  1034               	iorwf	(??_floorf+3)^0,w,c
  6294  0037E6  B4D8               	btfsc	status,2,c
  6295  0037E8  EFF8  F01B         	goto	u8741
  6296  0037EC  EFFA  F01B         	goto	u8740
  6297  0037F0                     u8741:
  6298  0037F0  EF02  F01C         	goto	l2290
  6299  0037F4                     u8740:
  6300  0037F4                     
  6301                           ; BSR set to: 0
  6302  0037F4  5160               	movf	floorf@m& (0+255),w,b
  6303  0037F6  2766               	addwf	floorf@u& (0+255),f,b
  6304  0037F8  5161               	movf	(floorf@m+1)& (0+255),w,b
  6305  0037FA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  6306  0037FC  5162               	movf	(floorf@m+2)& (0+255),w,b
  6307  0037FE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  6308  003800  5163               	movf	(floorf@m+3)& (0+255),w,b
  6309  003802  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  6310  003804                     l2290:
  6311                           
  6312                           ; BSR set to: 0
  6313  003804  1D60               	comf	floorf@m& (0+255),w,b
  6314  003806  6E31               	movwf	??_floorf^0,c
  6315  003808  1D61               	comf	(floorf@m+1)& (0+255),w,b
  6316  00380A  6E32               	movwf	(??_floorf+1)^0,c
  6317  00380C  1D62               	comf	(floorf@m+2)& (0+255),w,b
  6318  00380E  6E33               	movwf	(??_floorf+2)^0,c
  6319  003810  1D63               	comf	(floorf@m+3)& (0+255),w,b
  6320  003812  6E34               	movwf	(??_floorf+3)^0,c
  6321  003814  5031               	movf	??_floorf^0,w,c
  6322  003816  1766               	andwf	floorf@u& (0+255),f,b
  6323  003818  5032               	movf	(??_floorf+1)^0,w,c
  6324  00381A  1767               	andwf	(floorf@u+1)& (0+255),f,b
  6325  00381C  5033               	movf	(??_floorf+2)^0,w,c
  6326  00381E  1768               	andwf	(floorf@u+2)& (0+255),f,b
  6327  003820  5034               	movf	(??_floorf+3)^0,w,c
  6328  003822  1769               	andwf	(floorf@u+3)& (0+255),f,b
  6329  003824  EF58  F01C         	goto	l8254
  6330  003828                     l8246:
  6331                           
  6332                           ; BSR set to: 0
  6333  003828  C066  F031         	movff	floorf@u,??_floorf
  6334  00382C  C067  F032         	movff	floorf@u+1,??_floorf+1
  6335  003830  C068  F033         	movff	floorf@u+2,??_floorf+2
  6336  003834  C069  F034         	movff	floorf@u+3,??_floorf+3
  6337  003838  0E20               	movlw	32
  6338  00383A  EF24  F01C         	goto	u8750
  6339  00383E                     u8755:
  6340  00383E  90D8               	bcf	status,0,c
  6341  003840  3234               	rrcf	(??_floorf+3)^0,f,c
  6342  003842  3233               	rrcf	(??_floorf+2)^0,f,c
  6343  003844  3232               	rrcf	(??_floorf+1)^0,f,c
  6344  003846  3231               	rrcf	??_floorf^0,f,c
  6345  003848                     u8750:
  6346  003848  2EE8               	decfsz	wreg,f,c
  6347  00384A  EF1F  F01C         	goto	u8755
  6348  00384E  5031               	movf	??_floorf^0,w,c
  6349  003850  1032               	iorwf	(??_floorf+1)^0,w,c
  6350  003852  1033               	iorwf	(??_floorf+2)^0,w,c
  6351  003854  1034               	iorwf	(??_floorf+3)^0,w,c
  6352  003856  A4D8               	btfss	status,2,c
  6353  003858  EF30  F01C         	goto	u8761
  6354  00385C  EF32  F01C         	goto	u8760
  6355  003860                     u8761:
  6356  003860  EF3C  F01C         	goto	l8250
  6357  003864                     u8760:
  6358  003864                     
  6359                           ; BSR set to: 0
  6360  003864  0E00               	movlw	0
  6361  003866  6F66               	movwf	floorf@u& (0+255),b
  6362  003868  0E00               	movlw	0
  6363  00386A  6F67               	movwf	(floorf@u+1)& (0+255),b
  6364  00386C  0E00               	movlw	0
  6365  00386E  6F68               	movwf	(floorf@u+2)& (0+255),b
  6366  003870  0E00               	movlw	0
  6367  003872  6F69               	movwf	(floorf@u+3)& (0+255),b
  6368  003874  EF58  F01C         	goto	l8254
  6369  003878                     l8250:
  6370                           
  6371                           ; BSR set to: 0
  6372  003878  90D8               	bcf	status,0,c
  6373  00387A  3566               	rlcf	floorf@u& (0+255),w,b
  6374  00387C  6E31               	movwf	??_floorf^0,c
  6375  00387E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  6376  003880  6E32               	movwf	(??_floorf+1)^0,c
  6377  003882  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  6378  003884  6E33               	movwf	(??_floorf+2)^0,c
  6379  003886  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  6380  003888  6E34               	movwf	(??_floorf+3)^0,c
  6381  00388A  5031               	movf	??_floorf^0,w,c
  6382  00388C  1032               	iorwf	(??_floorf+1)^0,w,c
  6383  00388E  1033               	iorwf	(??_floorf+2)^0,w,c
  6384  003890  1034               	iorwf	(??_floorf+3)^0,w,c
  6385  003892  B4D8               	btfsc	status,2,c
  6386  003894  EF4E  F01C         	goto	u8771
  6387  003898  EF50  F01C         	goto	u8770
  6388  00389C                     u8771:
  6389  00389C  EF58  F01C         	goto	l8254
  6390  0038A0                     u8770:
  6391  0038A0                     
  6392                           ; BSR set to: 0
  6393  0038A0  0E00               	movlw	0
  6394  0038A2  6F66               	movwf	floorf@u& (0+255),b
  6395  0038A4  0E00               	movlw	0
  6396  0038A6  6F67               	movwf	(floorf@u+1)& (0+255),b
  6397  0038A8  0E80               	movlw	128
  6398  0038AA  6F68               	movwf	(floorf@u+2)& (0+255),b
  6399  0038AC  0EBF               	movlw	191
  6400  0038AE  6F69               	movwf	(floorf@u+3)& (0+255),b
  6401  0038B0                     l8254:
  6402                           
  6403                           ; BSR set to: 0
  6404  0038B0  C066  F02D         	movff	floorf@u,?_floorf
  6405  0038B4  C067  F02E         	movff	floorf@u+1,?_floorf+1
  6406  0038B8  C068  F02F         	movff	floorf@u+2,?_floorf+2
  6407  0038BC  C069  F030         	movff	floorf@u+3,?_floorf+3
  6408  0038C0                     l2287:
  6409                           
  6410                           ; BSR set to: 0
  6411  0038C0  0012               	return		;funcret
  6412  0038C2                     __end_of_floorf:
  6413                           	callstack 0
  6414                           
  6415 ;; *************** function ___fpclassifyf *****************
  6416 ;; Defined at:
  6417 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  x               4   19[COMRAM] float 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  u               4   29[COMRAM] struct .
  6422 ;;  e               2   27[COMRAM] int 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  2   19[COMRAM] int 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2, status,0
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;Total ram usage:       14 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 8
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_efgtoa
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text15
  6447  004930                     __ptext15:
  6448                           	callstack 0
  6449  004930                     ___fpclassifyf:
  6450                           	callstack 16
  6451  004930  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6452  004934  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6453  004938  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6454  00493C  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6455  004940  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  6456  004944  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6457  004948  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6458  00494C  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6459  004950  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6460  004954  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6461  004958  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6462  00495C  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6463  004960  0E18               	movlw	24
  6464  004962  EFB8  F024         	goto	u8560
  6465  004966                     u8565:
  6466  004966  90D8               	bcf	status,0,c
  6467  004968  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  6468  00496A  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  6469  00496C  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  6470  00496E  3218               	rrcf	??___fpclassifyf^0,f,c
  6471  004970                     u8560:
  6472  004970  2EE8               	decfsz	wreg,f,c
  6473  004972  EFB3  F024         	goto	u8565
  6474  004976  5018               	movf	??___fpclassifyf^0,w,c
  6475  004978  6E1C               	movwf	___fpclassifyf@e^0,c
  6476  00497A  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  6477  00497C  501C               	movf	___fpclassifyf@e^0,w,c
  6478  00497E  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6479  004980  A4D8               	btfss	status,2,c
  6480  004982  EFC5  F024         	goto	u8571
  6481  004986  EFC7  F024         	goto	u8570
  6482  00498A                     u8571:
  6483  00498A  EFE7  F024         	goto	l8206
  6484  00498E                     u8570:
  6485  00498E  90D8               	bcf	status,0,c
  6486  004990  341E               	rlcf	___fpclassifyf@u^0,w,c
  6487  004992  6E18               	movwf	??___fpclassifyf^0,c
  6488  004994  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6489  004996  6E19               	movwf	(??___fpclassifyf+1)^0,c
  6490  004998  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6491  00499A  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  6492  00499C  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6493  00499E  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  6494  0049A0  5018               	movf	??___fpclassifyf^0,w,c
  6495  0049A2  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6496  0049A4  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6497  0049A6  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6498  0049A8  A4D8               	btfss	status,2,c
  6499  0049AA  EFD9  F024         	goto	u8581
  6500  0049AE  EFDB  F024         	goto	u8580
  6501  0049B2                     u8581:
  6502  0049B2  EFE1  F024         	goto	l8202
  6503  0049B6                     u8580:
  6504  0049B6  0E00               	movlw	0
  6505  0049B8  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6506  0049BA  0E02               	movlw	2
  6507  0049BC  6E14               	movwf	?___fpclassifyf^0,c
  6508  0049BE  EF16  F025         	goto	l2273
  6509  0049C2                     l8202:
  6510  0049C2  0E00               	movlw	0
  6511  0049C4  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6512  0049C6  0E03               	movlw	3
  6513  0049C8  6E14               	movwf	?___fpclassifyf^0,c
  6514  0049CA  EF16  F025         	goto	l2273
  6515  0049CE                     l8206:
  6516  0049CE  281C               	incf	___fpclassifyf@e^0,w,c
  6517  0049D0  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6518  0049D2  A4D8               	btfss	status,2,c
  6519  0049D4  EFEE  F024         	goto	u8591
  6520  0049D8  EFF0  F024         	goto	u8590
  6521  0049DC                     u8591:
  6522  0049DC  EF12  F025         	goto	l8212
  6523  0049E0                     u8590:
  6524  0049E0  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  6525  0049E4  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6526  0049E8  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6527  0049EC  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6528  0049F0  0E09               	movlw	9
  6529  0049F2                     u8605:
  6530  0049F2  90D8               	bcf	status,0,c
  6531  0049F4  3618               	rlcf	??___fpclassifyf^0,f,c
  6532  0049F6  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  6533  0049F8  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  6534  0049FA  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  6535  0049FC  2EE8               	decfsz	wreg,f,c
  6536  0049FE  EFF9  F024         	goto	u8605
  6537  004A02  5018               	movf	??___fpclassifyf^0,w,c
  6538  004A04  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  6539  004A06  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  6540  004A08  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  6541  004A0A  B4D8               	btfsc	status,2,c
  6542  004A0C  EF0A  F025         	goto	u8611
  6543  004A10  EF0D  F025         	goto	u8610
  6544  004A14                     u8611:
  6545  004A14  0E01               	movlw	1
  6546  004A16  EF0E  F025         	goto	u8620
  6547  004A1A                     u8610:
  6548  004A1A  0E00               	movlw	0
  6549  004A1C                     u8620:
  6550  004A1C  6E14               	movwf	?___fpclassifyf^0,c
  6551  004A1E  6A15               	clrf	(?___fpclassifyf+1)^0,c
  6552  004A20  EF16  F025         	goto	l2273
  6553  004A24                     l8212:
  6554  004A24  0E00               	movlw	0
  6555  004A26  6E15               	movwf	(?___fpclassifyf+1)^0,c
  6556  004A28  0E04               	movlw	4
  6557  004A2A  6E14               	movwf	?___fpclassifyf^0,c
  6558  004A2C                     l2273:
  6559  004A2C  0012               	return		;funcret
  6560  004A2E                     __end_of___fpclassifyf:
  6561                           	callstack 0
  6562                           
  6563 ;; *************** function ___flsub *****************
  6564 ;; Defined at:
  6565 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  b               4   25[BANK0 ] int 
  6568 ;;  a               4   29[BANK0 ] int 
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  4   25[BANK0 ] int 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6580 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6583 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6584 ;;Total ram usage:        8 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 9
  6587 ;; This function calls:
  6588 ;;		___fladd
  6589 ;; This function is called by:
  6590 ;;		_efgtoa
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text16
  6595  00568A                     __ptext16:
  6596                           	callstack 0
  6597  00568A                     ___flsub:
  6598                           	callstack 15
  6599  00568A  0E00               	movlw	0
  6600  00568C  0100               	movlb	0	; () banked
  6601  00568E  1B7D               	xorwf	___flsub@a& (0+255),f,b
  6602  005690  0E00               	movlw	0
  6603  005692  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  6604  005694  0E00               	movlw	0
  6605  005696  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  6606  005698  0E80               	movlw	128
  6607  00569A  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  6608  00569C                     
  6609                           ; BSR set to: 0
  6610  00569C  C079  F06D         	movff	___flsub@b,___fladd@b
  6611  0056A0  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  6612  0056A4  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  6613  0056A8  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  6614  0056AC  C07D  F071         	movff	___flsub@a,___fladd@a
  6615  0056B0  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  6616  0056B4  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  6617  0056B8  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  6618  0056BC  EC21  F011         	call	___fladd	;wreg free
  6619  0056C0  C06D  F079         	movff	?___fladd,?___flsub
  6620  0056C4  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  6621  0056C8  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  6622  0056CC  C070  F07C         	movff	?___fladd+3,?___flsub+3
  6623  0056D0  0012               	return		;funcret
  6624  0056D2                     __end_of___flsub:
  6625                           	callstack 0
  6626                           
  6627 ;; *************** function ___flneg *****************
  6628 ;; Defined at:
  6629 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  f1              4   19[COMRAM] int 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  4   19[COMRAM] int 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;Total ram usage:        4 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; Hardware stack levels required when called: 8
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_efgtoa
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text17
  6658  005882                     __ptext17:
  6659                           	callstack 0
  6660  005882                     ___flneg:
  6661                           	callstack 16
  6662  005882  5014               	movf	___flneg@f1^0,w,c
  6663  005884  1015               	iorwf	(___flneg@f1+1)^0,w,c
  6664  005886  1016               	iorwf	(___flneg@f1+2)^0,w,c
  6665  005888  1017               	iorwf	(___flneg@f1+3)^0,w,c
  6666  00588A  B4D8               	btfsc	status,2,c
  6667  00588C  EF4A  F02C         	goto	u8431
  6668  005890  EF4C  F02C         	goto	u8430
  6669  005894                     u8431:
  6670  005894  EF54  F02C         	goto	l8120
  6671  005898                     u8430:
  6672  005898  0E00               	movlw	0
  6673  00589A  1A14               	xorwf	___flneg@f1^0,f,c
  6674  00589C  0E00               	movlw	0
  6675  00589E  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  6676  0058A0  0E00               	movlw	0
  6677  0058A2  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  6678  0058A4  0E80               	movlw	128
  6679  0058A6  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  6680  0058A8                     l8120:
  6681  0058A8  C014  F014         	movff	___flneg@f1,?___flneg
  6682  0058AC  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  6683  0058B0  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  6684  0058B4  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  6685  0058B8  0012               	return		;funcret
  6686  0058BA                     __end_of___flneg:
  6687                           	callstack 0
  6688                           
  6689 ;; *************** function ___fleq *****************
  6690 ;; Defined at:
  6691 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6692 ;; Parameters:    Size  Location     Type
  6693 ;;  ff1             4   19[COMRAM] int 
  6694 ;;  ff2             4   23[COMRAM] int 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;		None
  6697 ;; Return value:  Size  Location     Type
  6698 ;;		None               void
  6699 ;; Registers used:
  6700 ;;		wreg, status,2, status,0
  6701 ;; Tracked objects:
  6702 ;;		On entry : 0/0
  6703 ;;		On exit  : 0/0
  6704 ;;		Unchanged: 0/0
  6705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6706 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6709 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6710 ;;Total ram usage:       12 bytes
  6711 ;; Hardware stack levels used: 1
  6712 ;; Hardware stack levels required when called: 8
  6713 ;; This function calls:
  6714 ;;		Nothing
  6715 ;; This function is called by:
  6716 ;;		_efgtoa
  6717 ;; This function uses a non-reentrant model
  6718 ;;
  6719                           
  6720                           	psect	text18
  6721  004FC4                     __ptext18:
  6722                           	callstack 0
  6723  004FC4                     ___fleq:
  6724                           	callstack 16
  6725  004FC4  0E00               	movlw	0
  6726  004FC6  1414               	andwf	___fleq@ff1^0,w,c
  6727  004FC8  6E1C               	movwf	??___fleq^0,c
  6728  004FCA  0E00               	movlw	0
  6729  004FCC  1415               	andwf	(___fleq@ff1+1)^0,w,c
  6730  004FCE  6E1D               	movwf	(??___fleq+1)^0,c
  6731  004FD0  0E80               	movlw	128
  6732  004FD2  1416               	andwf	(___fleq@ff1+2)^0,w,c
  6733  004FD4  6E1E               	movwf	(??___fleq+2)^0,c
  6734  004FD6  0E7F               	movlw	127
  6735  004FD8  1417               	andwf	(___fleq@ff1+3)^0,w,c
  6736  004FDA  6E1F               	movwf	(??___fleq+3)^0,c
  6737  004FDC  501C               	movf	??___fleq^0,w,c
  6738  004FDE  101D               	iorwf	(??___fleq+1)^0,w,c
  6739  004FE0  101E               	iorwf	(??___fleq+2)^0,w,c
  6740  004FE2  101F               	iorwf	(??___fleq+3)^0,w,c
  6741  004FE4  A4D8               	btfss	status,2,c
  6742  004FE6  EFF7  F027         	goto	u8351
  6743  004FEA  EFF9  F027         	goto	u8350
  6744  004FEE                     u8351:
  6745  004FEE  EF01  F028         	goto	l8082
  6746  004FF2                     u8350:
  6747  004FF2  0E00               	movlw	0
  6748  004FF4  6E14               	movwf	___fleq@ff1^0,c
  6749  004FF6  0E00               	movlw	0
  6750  004FF8  6E15               	movwf	(___fleq@ff1+1)^0,c
  6751  004FFA  0E00               	movlw	0
  6752  004FFC  6E16               	movwf	(___fleq@ff1+2)^0,c
  6753  004FFE  0E00               	movlw	0
  6754  005000  6E17               	movwf	(___fleq@ff1+3)^0,c
  6755  005002                     l8082:
  6756  005002  0E00               	movlw	0
  6757  005004  1418               	andwf	___fleq@ff2^0,w,c
  6758  005006  6E1C               	movwf	??___fleq^0,c
  6759  005008  0E00               	movlw	0
  6760  00500A  1419               	andwf	(___fleq@ff2+1)^0,w,c
  6761  00500C  6E1D               	movwf	(??___fleq+1)^0,c
  6762  00500E  0E80               	movlw	128
  6763  005010  141A               	andwf	(___fleq@ff2+2)^0,w,c
  6764  005012  6E1E               	movwf	(??___fleq+2)^0,c
  6765  005014  0E7F               	movlw	127
  6766  005016  141B               	andwf	(___fleq@ff2+3)^0,w,c
  6767  005018  6E1F               	movwf	(??___fleq+3)^0,c
  6768  00501A  501C               	movf	??___fleq^0,w,c
  6769  00501C  101D               	iorwf	(??___fleq+1)^0,w,c
  6770  00501E  101E               	iorwf	(??___fleq+2)^0,w,c
  6771  005020  101F               	iorwf	(??___fleq+3)^0,w,c
  6772  005022  A4D8               	btfss	status,2,c
  6773  005024  EF16  F028         	goto	u8361
  6774  005028  EF18  F028         	goto	u8360
  6775  00502C                     u8361:
  6776  00502C  EF20  F028         	goto	l8086
  6777  005030                     u8360:
  6778  005030  0E00               	movlw	0
  6779  005032  6E18               	movwf	___fleq@ff2^0,c
  6780  005034  0E00               	movlw	0
  6781  005036  6E19               	movwf	(___fleq@ff2+1)^0,c
  6782  005038  0E00               	movlw	0
  6783  00503A  6E1A               	movwf	(___fleq@ff2+2)^0,c
  6784  00503C  0E00               	movlw	0
  6785  00503E  6E1B               	movwf	(___fleq@ff2+3)^0,c
  6786  005040                     l8086:
  6787  005040  5018               	movf	___fleq@ff2^0,w,c
  6788  005042  1814               	xorwf	___fleq@ff1^0,w,c
  6789  005044  E10F               	bnz	u8370
  6790  005046  5019               	movf	(___fleq@ff2+1)^0,w,c
  6791  005048  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  6792  00504A  E10C               	bnz	u8370
  6793  00504C  501A               	movf	(___fleq@ff2+2)^0,w,c
  6794  00504E  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  6795  005050  E109               	bnz	u8370
  6796  005052  501B               	movf	(___fleq@ff2+3)^0,w,c
  6797  005054  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  6798  005056  B4D8               	btfsc	status,2,c
  6799  005058  EF30  F028         	goto	u8371
  6800  00505C  EF32  F028         	goto	u8370
  6801  005060                     u8371:
  6802  005060  EF35  F028         	goto	l8090
  6803  005064                     u8370:
  6804  005064  90D8               	bcf	status,0,c
  6805  005066  EF36  F028         	goto	l1657
  6806  00506A                     l8090:
  6807  00506A  80D8               	bsf	status,0,c
  6808  00506C                     l1657:
  6809  00506C  0012               	return		;funcret
  6810  00506E                     __end_of___fleq:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function ___fldiv *****************
  6814 ;; Defined at:
  6815 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  b               4   19[COMRAM] int 
  6818 ;;  a               4   23[COMRAM] int 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  grs             4   38[COMRAM] unsigned long 
  6821 ;;  rem             4   31[COMRAM] unsigned long 
  6822 ;;  new_exp         2   36[COMRAM] short 
  6823 ;;  aexp            1   43[COMRAM] unsigned char 
  6824 ;;  bexp            1   42[COMRAM] unsigned char 
  6825 ;;  sign            1   35[COMRAM] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  4   19[COMRAM] unsigned char 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6835 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;Total ram usage:       25 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; Hardware stack levels required when called: 8
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_efgtoa
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           
  6849                           	psect	text19
  6850  002B54                     __ptext19:
  6851                           	callstack 0
  6852  002B54                     ___fldiv:
  6853                           	callstack 16
  6854  002B54  5017               	movf	(___fldiv@b+3)^0,w,c
  6855  002B56  0B80               	andlw	128
  6856  002B58  6E24               	movwf	___fldiv@sign^0,c
  6857  002B5A  5017               	movf	(___fldiv@b+3)^0,w,c
  6858  002B5C  2417               	addwf	(___fldiv@b+3)^0,w,c
  6859  002B5E  6E2B               	movwf	___fldiv@bexp^0,c
  6860  002B60  AE16               	btfss	(___fldiv@b+2)^0,7,c
  6861  002B62  EFB5  F015         	goto	u7811
  6862  002B66  EFB7  F015         	goto	u7810
  6863  002B6A                     u7811:
  6864  002B6A  EFB8  F015         	goto	l7730
  6865  002B6E                     u7810:
  6866  002B6E  802B               	bsf	___fldiv@bexp^0,0,c
  6867  002B70                     l7730:
  6868  002B70  502B               	movf	___fldiv@bexp^0,w,c
  6869  002B72  B4D8               	btfsc	status,2,c
  6870  002B74  EFBE  F015         	goto	u7821
  6871  002B78  EFC0  F015         	goto	u7820
  6872  002B7C                     u7821:
  6873  002B7C  EFD5  F015         	goto	l7740
  6874  002B80                     u7820:
  6875  002B80  282B               	incf	___fldiv@bexp^0,w,c
  6876  002B82  A4D8               	btfss	status,2,c
  6877  002B84  EFC6  F015         	goto	u7831
  6878  002B88  EFC8  F015         	goto	u7830
  6879  002B8C                     u7831:
  6880  002B8C  EFD0  F015         	goto	l7736
  6881  002B90                     u7830:
  6882  002B90  0E00               	movlw	0
  6883  002B92  6E14               	movwf	___fldiv@b^0,c
  6884  002B94  0E00               	movlw	0
  6885  002B96  6E15               	movwf	(___fldiv@b+1)^0,c
  6886  002B98  0E00               	movlw	0
  6887  002B9A  6E16               	movwf	(___fldiv@b+2)^0,c
  6888  002B9C  0E00               	movlw	0
  6889  002B9E  6E17               	movwf	(___fldiv@b+3)^0,c
  6890  002BA0                     l7736:
  6891  002BA0  8E16               	bsf	(___fldiv@b+2)^0,7,c
  6892  002BA2  0E00               	movlw	0
  6893  002BA4  6E17               	movwf	(___fldiv@b+3)^0,c
  6894  002BA6  EFDD  F015         	goto	l7742
  6895  002BAA                     l7740:
  6896  002BAA  0E00               	movlw	0
  6897  002BAC  6E14               	movwf	___fldiv@b^0,c
  6898  002BAE  0E00               	movlw	0
  6899  002BB0  6E15               	movwf	(___fldiv@b+1)^0,c
  6900  002BB2  0E00               	movlw	0
  6901  002BB4  6E16               	movwf	(___fldiv@b+2)^0,c
  6902  002BB6  0E00               	movlw	0
  6903  002BB8  6E17               	movwf	(___fldiv@b+3)^0,c
  6904  002BBA                     l7742:
  6905  002BBA  501B               	movf	(___fldiv@a+3)^0,w,c
  6906  002BBC  0B80               	andlw	128
  6907  002BBE  1A24               	xorwf	___fldiv@sign^0,f,c
  6908  002BC0  501B               	movf	(___fldiv@a+3)^0,w,c
  6909  002BC2  241B               	addwf	(___fldiv@a+3)^0,w,c
  6910  002BC4  6E2C               	movwf	___fldiv@aexp^0,c
  6911  002BC6  AE1A               	btfss	(___fldiv@a+2)^0,7,c
  6912  002BC8  EFE8  F015         	goto	u7841
  6913  002BCC  EFEA  F015         	goto	u7840
  6914  002BD0                     u7841:
  6915  002BD0  EFEB  F015         	goto	l7750
  6916  002BD4                     u7840:
  6917  002BD4  802C               	bsf	___fldiv@aexp^0,0,c
  6918  002BD6                     l7750:
  6919  002BD6  502C               	movf	___fldiv@aexp^0,w,c
  6920  002BD8  B4D8               	btfsc	status,2,c
  6921  002BDA  EFF1  F015         	goto	u7851
  6922  002BDE  EFF3  F015         	goto	u7850
  6923  002BE2                     u7851:
  6924  002BE2  EF08  F016         	goto	l7760
  6925  002BE6                     u7850:
  6926  002BE6  282C               	incf	___fldiv@aexp^0,w,c
  6927  002BE8  A4D8               	btfss	status,2,c
  6928  002BEA  EFF9  F015         	goto	u7861
  6929  002BEE  EFFB  F015         	goto	u7860
  6930  002BF2                     u7861:
  6931  002BF2  EF03  F016         	goto	l7756
  6932  002BF6                     u7860:
  6933  002BF6  0E00               	movlw	0
  6934  002BF8  6E18               	movwf	___fldiv@a^0,c
  6935  002BFA  0E00               	movlw	0
  6936  002BFC  6E19               	movwf	(___fldiv@a+1)^0,c
  6937  002BFE  0E00               	movlw	0
  6938  002C00  6E1A               	movwf	(___fldiv@a+2)^0,c
  6939  002C02  0E00               	movlw	0
  6940  002C04  6E1B               	movwf	(___fldiv@a+3)^0,c
  6941  002C06                     l7756:
  6942  002C06  8E1A               	bsf	(___fldiv@a+2)^0,7,c
  6943  002C08  0E00               	movlw	0
  6944  002C0A  6E1B               	movwf	(___fldiv@a+3)^0,c
  6945  002C0C  EF10  F016         	goto	l7762
  6946  002C10                     l7760:
  6947  002C10  0E00               	movlw	0
  6948  002C12  6E18               	movwf	___fldiv@a^0,c
  6949  002C14  0E00               	movlw	0
  6950  002C16  6E19               	movwf	(___fldiv@a+1)^0,c
  6951  002C18  0E00               	movlw	0
  6952  002C1A  6E1A               	movwf	(___fldiv@a+2)^0,c
  6953  002C1C  0E00               	movlw	0
  6954  002C1E  6E1B               	movwf	(___fldiv@a+3)^0,c
  6955  002C20                     l7762:
  6956  002C20  5018               	movf	___fldiv@a^0,w,c
  6957  002C22  1019               	iorwf	(___fldiv@a+1)^0,w,c
  6958  002C24  101A               	iorwf	(___fldiv@a+2)^0,w,c
  6959  002C26  101B               	iorwf	(___fldiv@a+3)^0,w,c
  6960  002C28  A4D8               	btfss	status,2,c
  6961  002C2A  EF19  F016         	goto	u7871
  6962  002C2E  EF1B  F016         	goto	u7870
  6963  002C32                     u7871:
  6964  002C32  EF33  F016         	goto	l7774
  6965  002C36                     u7870:
  6966  002C36  0E00               	movlw	0
  6967  002C38  6E14               	movwf	___fldiv@b^0,c
  6968  002C3A  0E00               	movlw	0
  6969  002C3C  6E15               	movwf	(___fldiv@b+1)^0,c
  6970  002C3E  0E00               	movlw	0
  6971  002C40  6E16               	movwf	(___fldiv@b+2)^0,c
  6972  002C42  0E00               	movlw	0
  6973  002C44  6E17               	movwf	(___fldiv@b+3)^0,c
  6974  002C46  0E80               	movlw	128
  6975  002C48  1216               	iorwf	(___fldiv@b+2)^0,f,c
  6976  002C4A  0E7F               	movlw	127
  6977  002C4C  1217               	iorwf	(___fldiv@b+3)^0,f,c
  6978  002C4E                     l7768:
  6979  002C4E  5024               	movf	___fldiv@sign^0,w,c
  6980  002C50  1217               	iorwf	(___fldiv@b+3)^0,f,c
  6981  002C52  C014  F014         	movff	___fldiv@b,?___fldiv
  6982  002C56  C015  F015         	movff	___fldiv@b+1,?___fldiv+1
  6983  002C5A  C016  F016         	movff	___fldiv@b+2,?___fldiv+2
  6984  002C5E  C017  F017         	movff	___fldiv@b+3,?___fldiv+3
  6985  002C62  EF76  F017         	goto	l1980
  6986  002C66                     l7774:
  6987  002C66  502B               	movf	___fldiv@bexp^0,w,c
  6988  002C68  A4D8               	btfss	status,2,c
  6989  002C6A  EF39  F016         	goto	u7881
  6990  002C6E  EF3B  F016         	goto	u7880
  6991  002C72                     u7881:
  6992  002C72  EF45  F016         	goto	l7782
  6993  002C76                     u7880:
  6994  002C76  0E00               	movlw	0
  6995  002C78  6E14               	movwf	?___fldiv^0,c
  6996  002C7A  0E00               	movlw	0
  6997  002C7C  6E15               	movwf	(?___fldiv+1)^0,c
  6998  002C7E  0E00               	movlw	0
  6999  002C80  6E16               	movwf	(?___fldiv+2)^0,c
  7000  002C82  0E00               	movlw	0
  7001  002C84  6E17               	movwf	(?___fldiv+3)^0,c
  7002  002C86  EF76  F017         	goto	l1980
  7003  002C8A                     l7782:
  7004  002C8A  502C               	movf	___fldiv@aexp^0,w,c
  7005  002C8C  C02B  F01C         	movff	___fldiv@bexp,??___fldiv
  7006  002C90  6A1D               	clrf	(??___fldiv+1)^0,c
  7007  002C92  5E1C               	subwf	??___fldiv^0,f,c
  7008  002C94  0E00               	movlw	0
  7009  002C96  5A1D               	subwfb	(??___fldiv+1)^0,f,c
  7010  002C98  0E7F               	movlw	127
  7011  002C9A  241C               	addwf	??___fldiv^0,w,c
  7012  002C9C  6E25               	movwf	___fldiv@new_exp^0,c
  7013  002C9E  0E00               	movlw	0
  7014  002CA0  201D               	addwfc	(??___fldiv+1)^0,w,c
  7015  002CA2  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7016  002CA4  C014  F020         	movff	___fldiv@b,___fldiv@rem
  7017  002CA8  C015  F021         	movff	___fldiv@b+1,___fldiv@rem+1
  7018  002CAC  C016  F022         	movff	___fldiv@b+2,___fldiv@rem+2
  7019  002CB0  C017  F023         	movff	___fldiv@b+3,___fldiv@rem+3
  7020  002CB4  0E00               	movlw	0
  7021  002CB6  6E14               	movwf	___fldiv@b^0,c
  7022  002CB8  0E00               	movlw	0
  7023  002CBA  6E15               	movwf	(___fldiv@b+1)^0,c
  7024  002CBC  0E00               	movlw	0
  7025  002CBE  6E16               	movwf	(___fldiv@b+2)^0,c
  7026  002CC0  0E00               	movlw	0
  7027  002CC2  6E17               	movwf	(___fldiv@b+3)^0,c
  7028  002CC4  0E00               	movlw	0
  7029  002CC6  6E27               	movwf	___fldiv@grs^0,c
  7030  002CC8  0E00               	movlw	0
  7031  002CCA  6E28               	movwf	(___fldiv@grs+1)^0,c
  7032  002CCC  0E00               	movlw	0
  7033  002CCE  6E29               	movwf	(___fldiv@grs+2)^0,c
  7034  002CD0  0E00               	movlw	0
  7035  002CD2  6E2A               	movwf	(___fldiv@grs+3)^0,c
  7036  002CD4  0E00               	movlw	0
  7037  002CD6  6E2C               	movwf	___fldiv@aexp^0,c
  7038  002CD8  EFA6  F016         	goto	l1982
  7039  002CDC                     l7792:
  7040  002CDC  502C               	movf	___fldiv@aexp^0,w,c
  7041  002CDE  B4D8               	btfsc	status,2,c
  7042  002CE0  EF74  F016         	goto	u7891
  7043  002CE4  EF76  F016         	goto	u7890
  7044  002CE8                     u7891:
  7045  002CE8  EF8D  F016         	goto	l7800
  7046  002CEC                     u7890:
  7047  002CEC  90D8               	bcf	status,0,c
  7048  002CEE  3620               	rlcf	___fldiv@rem^0,f,c
  7049  002CF0  3621               	rlcf	(___fldiv@rem+1)^0,f,c
  7050  002CF2  3622               	rlcf	(___fldiv@rem+2)^0,f,c
  7051  002CF4  3623               	rlcf	(___fldiv@rem+3)^0,f,c
  7052  002CF6  90D8               	bcf	status,0,c
  7053  002CF8  3614               	rlcf	___fldiv@b^0,f,c
  7054  002CFA  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7055  002CFC  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7056  002CFE  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7057  002D00  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7058  002D02  EF85  F016         	goto	u7901
  7059  002D06  EF87  F016         	goto	u7900
  7060  002D0A                     u7901:
  7061  002D0A  EF88  F016         	goto	l1985
  7062  002D0E                     u7900:
  7063  002D0E  8014               	bsf	___fldiv@b^0,0,c
  7064  002D10                     l1985:
  7065  002D10  90D8               	bcf	status,0,c
  7066  002D12  3627               	rlcf	___fldiv@grs^0,f,c
  7067  002D14  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7068  002D16  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7069  002D18  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7070  002D1A                     l7800:
  7071  002D1A  5018               	movf	___fldiv@a^0,w,c
  7072  002D1C  5C20               	subwf	___fldiv@rem^0,w,c
  7073  002D1E  5019               	movf	(___fldiv@a+1)^0,w,c
  7074  002D20  5821               	subwfb	(___fldiv@rem+1)^0,w,c
  7075  002D22  501A               	movf	(___fldiv@a+2)^0,w,c
  7076  002D24  5822               	subwfb	(___fldiv@rem+2)^0,w,c
  7077  002D26  501B               	movf	(___fldiv@a+3)^0,w,c
  7078  002D28  5823               	subwfb	(___fldiv@rem+3)^0,w,c
  7079  002D2A  A0D8               	btfss	status,0,c
  7080  002D2C  EF9A  F016         	goto	u7911
  7081  002D30  EF9C  F016         	goto	u7910
  7082  002D34                     u7911:
  7083  002D34  EFA5  F016         	goto	l7806
  7084  002D38                     u7910:
  7085  002D38  8C2A               	bsf	(___fldiv@grs+3)^0,6,c
  7086  002D3A  5018               	movf	___fldiv@a^0,w,c
  7087  002D3C  5E20               	subwf	___fldiv@rem^0,f,c
  7088  002D3E  5019               	movf	(___fldiv@a+1)^0,w,c
  7089  002D40  5A21               	subwfb	(___fldiv@rem+1)^0,f,c
  7090  002D42  501A               	movf	(___fldiv@a+2)^0,w,c
  7091  002D44  5A22               	subwfb	(___fldiv@rem+2)^0,f,c
  7092  002D46  501B               	movf	(___fldiv@a+3)^0,w,c
  7093  002D48  5A23               	subwfb	(___fldiv@rem+3)^0,f,c
  7094  002D4A                     l7806:
  7095  002D4A  2A2C               	incf	___fldiv@aexp^0,f,c
  7096  002D4C                     l1982:
  7097  002D4C  0E19               	movlw	25
  7098  002D4E  642C               	cpfsgt	___fldiv@aexp^0,c
  7099  002D50  EFAC  F016         	goto	u7921
  7100  002D54  EFAE  F016         	goto	u7920
  7101  002D58                     u7921:
  7102  002D58  EF6E  F016         	goto	l7792
  7103  002D5C                     u7920:
  7104  002D5C  5020               	movf	___fldiv@rem^0,w,c
  7105  002D5E  1021               	iorwf	(___fldiv@rem+1)^0,w,c
  7106  002D60  1022               	iorwf	(___fldiv@rem+2)^0,w,c
  7107  002D62  1023               	iorwf	(___fldiv@rem+3)^0,w,c
  7108  002D64  B4D8               	btfsc	status,2,c
  7109  002D66  EFB7  F016         	goto	u7931
  7110  002D6A  EFB9  F016         	goto	u7930
  7111  002D6E                     u7931:
  7112  002D6E  EFD1  F016         	goto	l7818
  7113  002D72                     u7930:
  7114  002D72  8027               	bsf	___fldiv@grs^0,0,c
  7115  002D74  EFD1  F016         	goto	l7818
  7116  002D78                     l7812:
  7117  002D78  90D8               	bcf	status,0,c
  7118  002D7A  3614               	rlcf	___fldiv@b^0,f,c
  7119  002D7C  3615               	rlcf	(___fldiv@b+1)^0,f,c
  7120  002D7E  3616               	rlcf	(___fldiv@b+2)^0,f,c
  7121  002D80  3617               	rlcf	(___fldiv@b+3)^0,f,c
  7122  002D82  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7123  002D84  EFC6  F016         	goto	u7941
  7124  002D88  EFC8  F016         	goto	u7940
  7125  002D8C                     u7941:
  7126  002D8C  EFC9  F016         	goto	l1991
  7127  002D90                     u7940:
  7128  002D90  8014               	bsf	___fldiv@b^0,0,c
  7129  002D92                     l1991:
  7130  002D92  90D8               	bcf	status,0,c
  7131  002D94  3627               	rlcf	___fldiv@grs^0,f,c
  7132  002D96  3628               	rlcf	(___fldiv@grs+1)^0,f,c
  7133  002D98  3629               	rlcf	(___fldiv@grs+2)^0,f,c
  7134  002D9A  362A               	rlcf	(___fldiv@grs+3)^0,f,c
  7135  002D9C  0625               	decf	___fldiv@new_exp^0,f,c
  7136  002D9E  A0D8               	btfss	status,0,c
  7137  002DA0  0626               	decf	(___fldiv@new_exp+1)^0,f,c
  7138  002DA2                     l7818:
  7139  002DA2  AE16               	btfss	(___fldiv@b+2)^0,7,c
  7140  002DA4  EFD6  F016         	goto	u7951
  7141  002DA8  EFD8  F016         	goto	u7950
  7142  002DAC                     u7951:
  7143  002DAC  EFBC  F016         	goto	l7812
  7144  002DB0                     u7950:
  7145  002DB0  0E00               	movlw	0
  7146  002DB2  6E2C               	movwf	___fldiv@aexp^0,c
  7147  002DB4  AE2A               	btfss	(___fldiv@grs+3)^0,7,c
  7148  002DB6  EFDF  F016         	goto	u7961
  7149  002DBA  EFE1  F016         	goto	u7960
  7150  002DBE                     u7961:
  7151  002DBE  EF05  F017         	goto	l1993
  7152  002DC2                     u7960:
  7153  002DC2  0EFF               	movlw	255
  7154  002DC4  1427               	andwf	___fldiv@grs^0,w,c
  7155  002DC6  6E1C               	movwf	??___fldiv^0,c
  7156  002DC8  0EFF               	movlw	255
  7157  002DCA  1428               	andwf	(___fldiv@grs+1)^0,w,c
  7158  002DCC  6E1D               	movwf	(??___fldiv+1)^0,c
  7159  002DCE  0EFF               	movlw	255
  7160  002DD0  1429               	andwf	(___fldiv@grs+2)^0,w,c
  7161  002DD2  6E1E               	movwf	(??___fldiv+2)^0,c
  7162  002DD4  0E7F               	movlw	127
  7163  002DD6  142A               	andwf	(___fldiv@grs+3)^0,w,c
  7164  002DD8  6E1F               	movwf	(??___fldiv+3)^0,c
  7165  002DDA  501C               	movf	??___fldiv^0,w,c
  7166  002DDC  101D               	iorwf	(??___fldiv+1)^0,w,c
  7167  002DDE  101E               	iorwf	(??___fldiv+2)^0,w,c
  7168  002DE0  101F               	iorwf	(??___fldiv+3)^0,w,c
  7169  002DE2  B4D8               	btfsc	status,2,c
  7170  002DE4  EFF6  F016         	goto	u7971
  7171  002DE8  EFF8  F016         	goto	u7970
  7172  002DEC                     u7971:
  7173  002DEC  EFFC  F016         	goto	l1994
  7174  002DF0                     u7970:
  7175  002DF0                     l7826:
  7176  002DF0  0E01               	movlw	1
  7177  002DF2  6E2C               	movwf	___fldiv@aexp^0,c
  7178  002DF4  EF05  F017         	goto	l1993
  7179  002DF8                     l1994:
  7180  002DF8  A014               	btfss	___fldiv@b^0,0,c
  7181  002DFA  EF01  F017         	goto	u7981
  7182  002DFE  EF03  F017         	goto	u7980
  7183  002E02                     u7981:
  7184  002E02  EF05  F017         	goto	l1993
  7185  002E06                     u7980:
  7186  002E06  EFF8  F016         	goto	l7826
  7187  002E0A                     l1993:
  7188  002E0A  502C               	movf	___fldiv@aexp^0,w,c
  7189  002E0C  B4D8               	btfsc	status,2,c
  7190  002E0E  EF0B  F017         	goto	u7991
  7191  002E12  EF0D  F017         	goto	u7990
  7192  002E16                     u7991:
  7193  002E16  EF31  F017         	goto	l7838
  7194  002E1A                     u7990:
  7195  002E1A  0E01               	movlw	1
  7196  002E1C  2614               	addwf	___fldiv@b^0,f,c
  7197  002E1E  0E00               	movlw	0
  7198  002E20  2215               	addwfc	(___fldiv@b+1)^0,f,c
  7199  002E22  2216               	addwfc	(___fldiv@b+2)^0,f,c
  7200  002E24  2217               	addwfc	(___fldiv@b+3)^0,f,c
  7201  002E26  A017               	btfss	(___fldiv@b+3)^0,0,c
  7202  002E28  EF18  F017         	goto	u8001
  7203  002E2C  EF1A  F017         	goto	u8000
  7204  002E30                     u8001:
  7205  002E30  EF31  F017         	goto	l7838
  7206  002E34                     u8000:
  7207  002E34  C014  F01C         	movff	___fldiv@b,??___fldiv
  7208  002E38  C015  F01D         	movff	___fldiv@b+1,??___fldiv+1
  7209  002E3C  C016  F01E         	movff	___fldiv@b+2,??___fldiv+2
  7210  002E40  C017  F01F         	movff	___fldiv@b+3,??___fldiv+3
  7211  002E44  341F               	rlcf	(??___fldiv+3)^0,w,c
  7212  002E46  321F               	rrcf	(??___fldiv+3)^0,f,c
  7213  002E48  321E               	rrcf	(??___fldiv+2)^0,f,c
  7214  002E4A  321D               	rrcf	(??___fldiv+1)^0,f,c
  7215  002E4C  321C               	rrcf	??___fldiv^0,f,c
  7216  002E4E  C01C  F014         	movff	??___fldiv,___fldiv@b
  7217  002E52  C01D  F015         	movff	??___fldiv+1,___fldiv@b+1
  7218  002E56  C01E  F016         	movff	??___fldiv+2,___fldiv@b+2
  7219  002E5A  C01F  F017         	movff	??___fldiv+3,___fldiv@b+3
  7220  002E5E  4A25               	infsnz	___fldiv@new_exp^0,f,c
  7221  002E60  2A26               	incf	(___fldiv@new_exp+1)^0,f,c
  7222  002E62                     l7838:
  7223  002E62  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7224  002E64  EF3C  F017         	goto	u8011
  7225  002E68  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7226  002E6A  E108               	bnz	u8010
  7227  002E6C  2825               	incf	___fldiv@new_exp^0,w,c
  7228  002E6E  A0D8               	btfss	status,0,c
  7229  002E70  EF3C  F017         	goto	u8011
  7230  002E74  EF3E  F017         	goto	u8010
  7231  002E78                     u8011:
  7232  002E78  EF49  F017         	goto	l7842
  7233  002E7C                     u8010:
  7234  002E7C  0E00               	movlw	0
  7235  002E7E  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7236  002E80  6825               	setf	___fldiv@new_exp^0,c
  7237  002E82  0E00               	movlw	0
  7238  002E84  6E14               	movwf	___fldiv@b^0,c
  7239  002E86  0E00               	movlw	0
  7240  002E88  6E15               	movwf	(___fldiv@b+1)^0,c
  7241  002E8A  0E00               	movlw	0
  7242  002E8C  6E16               	movwf	(___fldiv@b+2)^0,c
  7243  002E8E  0E00               	movlw	0
  7244  002E90  6E17               	movwf	(___fldiv@b+3)^0,c
  7245  002E92                     l7842:
  7246  002E92  BE26               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7247  002E94  EF56  F017         	goto	u8020
  7248  002E98  5026               	movf	(___fldiv@new_exp+1)^0,w,c
  7249  002E9A  E106               	bnz	u8021
  7250  002E9C  0425               	decf	___fldiv@new_exp^0,w,c
  7251  002E9E  B0D8               	btfsc	status,0,c
  7252  002EA0  EF54  F017         	goto	u8021
  7253  002EA4  EF56  F017         	goto	u8020
  7254  002EA8                     u8021:
  7255  002EA8  EF64  F017         	goto	l7846
  7256  002EAC                     u8020:
  7257  002EAC  0E00               	movlw	0
  7258  002EAE  6E26               	movwf	(___fldiv@new_exp+1)^0,c
  7259  002EB0  0E00               	movlw	0
  7260  002EB2  6E25               	movwf	___fldiv@new_exp^0,c
  7261  002EB4  0E00               	movlw	0
  7262  002EB6  6E14               	movwf	___fldiv@b^0,c
  7263  002EB8  0E00               	movlw	0
  7264  002EBA  6E15               	movwf	(___fldiv@b+1)^0,c
  7265  002EBC  0E00               	movlw	0
  7266  002EBE  6E16               	movwf	(___fldiv@b+2)^0,c
  7267  002EC0  0E00               	movlw	0
  7268  002EC2  6E17               	movwf	(___fldiv@b+3)^0,c
  7269  002EC4  0E00               	movlw	0
  7270  002EC6  6E24               	movwf	___fldiv@sign^0,c
  7271  002EC8                     l7846:
  7272  002EC8  C025  F02B         	movff	___fldiv@new_exp,___fldiv@bexp
  7273  002ECC  A02B               	btfss	___fldiv@bexp^0,0,c
  7274  002ECE  EF6B  F017         	goto	u8031
  7275  002ED2  EF6D  F017         	goto	u8030
  7276  002ED6                     u8031:
  7277  002ED6  EF70  F017         	goto	l7852
  7278  002EDA                     u8030:
  7279  002EDA  8E16               	bsf	(___fldiv@b+2)^0,7,c
  7280  002EDC  EF71  F017         	goto	l7854
  7281  002EE0                     l7852:
  7282  002EE0  9E16               	bcf	(___fldiv@b+2)^0,7,c
  7283  002EE2                     l7854:
  7284  002EE2  90D8               	bcf	status,0,c
  7285  002EE4  302B               	rrcf	___fldiv@bexp^0,w,c
  7286  002EE6  6E17               	movwf	(___fldiv@b+3)^0,c
  7287  002EE8  EF27  F016         	goto	l7768
  7288  002EEC                     l1980:
  7289  002EEC  0012               	return		;funcret
  7290  002EEE                     __end_of___fldiv:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function ___awmod *****************
  7294 ;; Defined at:
  7295 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  dividend        2   19[COMRAM] int 
  7298 ;;  divisor         2   21[COMRAM] int 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  sign            1   24[COMRAM] unsigned char 
  7301 ;;  counter         1   23[COMRAM] unsigned char 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  2   19[COMRAM] int 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;Total ram usage:        6 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 8
  7318 ;; This function calls:
  7319 ;;		Nothing
  7320 ;; This function is called by:
  7321 ;;		_efgtoa
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	text20
  7326  004F14                     __ptext20:
  7327                           	callstack 0
  7328  004F14                     ___awmod:
  7329                           	callstack 16
  7330  004F14  0E00               	movlw	0
  7331  004F16  6E19               	movwf	___awmod@sign^0,c
  7332  004F18  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  7333  004F1A  EF93  F027         	goto	u8290
  7334  004F1E  EF91  F027         	goto	u8291
  7335  004F22                     u8291:
  7336  004F22  EF99  F027         	goto	l8050
  7337  004F26                     u8290:
  7338  004F26  6C14               	negf	___awmod@dividend^0,c
  7339  004F28  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7340  004F2A  B0D8               	btfsc	status,0,c
  7341  004F2C  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7342  004F2E  0E01               	movlw	1
  7343  004F30  6E19               	movwf	___awmod@sign^0,c
  7344  004F32                     l8050:
  7345  004F32  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  7346  004F34  EFA0  F027         	goto	u8300
  7347  004F38  EF9E  F027         	goto	u8301
  7348  004F3C                     u8301:
  7349  004F3C  EFA4  F027         	goto	l8054
  7350  004F40                     u8300:
  7351  004F40  6C16               	negf	___awmod@divisor^0,c
  7352  004F42  1E17               	comf	(___awmod@divisor+1)^0,f,c
  7353  004F44  B0D8               	btfsc	status,0,c
  7354  004F46  2A17               	incf	(___awmod@divisor+1)^0,f,c
  7355  004F48                     l8054:
  7356  004F48  5016               	movf	___awmod@divisor^0,w,c
  7357  004F4A  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  7358  004F4C  B4D8               	btfsc	status,2,c
  7359  004F4E  EFAB  F027         	goto	u8311
  7360  004F52  EFAD  F027         	goto	u8310
  7361  004F56                     u8311:
  7362  004F56  EFD1  F027         	goto	l8070
  7363  004F5A                     u8310:
  7364  004F5A  0E01               	movlw	1
  7365  004F5C  6E18               	movwf	___awmod@counter^0,c
  7366  004F5E  EFB5  F027         	goto	l8060
  7367  004F62                     l8058:
  7368  004F62  90D8               	bcf	status,0,c
  7369  004F64  3616               	rlcf	___awmod@divisor^0,f,c
  7370  004F66  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  7371  004F68  2A18               	incf	___awmod@counter^0,f,c
  7372  004F6A                     l8060:
  7373  004F6A  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  7374  004F6C  EFBA  F027         	goto	u8321
  7375  004F70  EFBC  F027         	goto	u8320
  7376  004F74                     u8321:
  7377  004F74  EFB1  F027         	goto	l8058
  7378  004F78                     u8320:
  7379  004F78                     l8062:
  7380  004F78  5016               	movf	___awmod@divisor^0,w,c
  7381  004F7A  5C14               	subwf	___awmod@dividend^0,w,c
  7382  004F7C  5017               	movf	(___awmod@divisor+1)^0,w,c
  7383  004F7E  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  7384  004F80  A0D8               	btfss	status,0,c
  7385  004F82  EFC5  F027         	goto	u8331
  7386  004F86  EFC7  F027         	goto	u8330
  7387  004F8A                     u8331:
  7388  004F8A  EFCB  F027         	goto	l8066
  7389  004F8E                     u8330:
  7390  004F8E  5016               	movf	___awmod@divisor^0,w,c
  7391  004F90  5E14               	subwf	___awmod@dividend^0,f,c
  7392  004F92  5017               	movf	(___awmod@divisor+1)^0,w,c
  7393  004F94  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  7394  004F96                     l8066:
  7395  004F96  90D8               	bcf	status,0,c
  7396  004F98  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  7397  004F9A  3216               	rrcf	___awmod@divisor^0,f,c
  7398  004F9C  2E18               	decfsz	___awmod@counter^0,f,c
  7399  004F9E  EFBC  F027         	goto	l8062
  7400  004FA2                     l8070:
  7401  004FA2  5019               	movf	___awmod@sign^0,w,c
  7402  004FA4  B4D8               	btfsc	status,2,c
  7403  004FA6  EFD7  F027         	goto	u8341
  7404  004FAA  EFD9  F027         	goto	u8340
  7405  004FAE                     u8341:
  7406  004FAE  EFDD  F027         	goto	l8074
  7407  004FB2                     u8340:
  7408  004FB2  6C14               	negf	___awmod@dividend^0,c
  7409  004FB4  1E15               	comf	(___awmod@dividend+1)^0,f,c
  7410  004FB6  B0D8               	btfsc	status,0,c
  7411  004FB8  2A15               	incf	(___awmod@dividend+1)^0,f,c
  7412  004FBA                     l8074:
  7413  004FBA  C014  F014         	movff	___awmod@dividend,?___awmod
  7414  004FBE  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  7415  004FC2  0012               	return		;funcret
  7416  004FC4                     __end_of___awmod:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function _dtoa *****************
  7420 ;; Defined at:
  7421 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7424 ;;		 -> NULL(0), 
  7425 ;;  d               8    2[BANK0 ] long long 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  n               8   18[BANK0 ] long long 
  7428 ;;  i               2   26[BANK0 ] int 
  7429 ;;  s               2   16[BANK0 ] int 
  7430 ;;  w               2   14[BANK0 ] int 
  7431 ;;  p               2   12[BANK0 ] int 
  7432 ;; Return value:  Size  Location     Type
  7433 ;;                  2    0[BANK0 ] int 
  7434 ;; Registers used:
  7435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7436 ;; Tracked objects:
  7437 ;;		On entry : 0/0
  7438 ;;		On exit  : 0/0
  7439 ;;		Unchanged: 0/0
  7440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7441 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7445 ;;Total ram usage:       36 bytes
  7446 ;; Hardware stack levels used: 1
  7447 ;; Hardware stack levels required when called: 13
  7448 ;; This function calls:
  7449 ;;		___aodiv
  7450 ;;		___aomod
  7451 ;;		_abs
  7452 ;;		_pad
  7453 ;; This function is called by:
  7454 ;;		_vfpfcnvrt
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text21
  7459  002EEE                     __ptext21:
  7460                           	callstack 0
  7461  002EEE                     _dtoa:
  7462                           	callstack 12
  7463  002EEE                     
  7464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7465  002EEE  C062  F072         	movff	dtoa@d,dtoa@n
  7466  002EF2  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  7467  002EF6  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  7468  002EFA  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  7469  002EFE  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  7470  002F02  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  7471  002F06  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  7472  002F0A  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  7473  002F0E                     
  7474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7475  002F0E  0100               	movlb	0	; () banked
  7476  002F10  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  7477  002F12  EF8D  F017         	goto	u8781
  7478  002F16  EF90  F017         	goto	u8780
  7479  002F1A                     u8781:
  7480  002F1A  0E01               	movlw	1
  7481  002F1C  EF91  F017         	goto	u8790
  7482  002F20                     u8780:
  7483  002F20  0E00               	movlw	0
  7484  002F22                     u8790:
  7485  002F22  6F70               	movwf	dtoa@s& (0+255),b
  7486  002F24  6B71               	clrf	(dtoa@s+1)& (0+255),b
  7487                           
  7488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7489  002F26  5170               	movf	dtoa@s& (0+255),w,b
  7490  002F28  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7491  002F2A  B4D8               	btfsc	status,2,c
  7492  002F2C  EF9A  F017         	goto	u8801
  7493  002F30  EF9C  F017         	goto	u8800
  7494  002F34                     u8801:
  7495  002F34  EFAC  F017         	goto	l8264
  7496  002F38                     u8800:
  7497  002F38                     
  7498                           ; BSR set to: 0
  7499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7500  002F38  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  7501  002F3A  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  7502  002F3C  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  7503  002F3E  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  7504  002F40  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  7505  002F42  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  7506  002F44  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  7507  002F46  6D72               	negf	dtoa@n& (0+255),b
  7508  002F48  0E00               	movlw	0
  7509  002F4A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  7510  002F4C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  7511  002F4E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  7512  002F50  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  7513  002F52  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  7514  002F54  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  7515  002F56  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  7516  002F58                     l8264:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7520  002F58  BE3D               	btfsc	(_prec+1)^0,7,c
  7521  002F5A  EFB1  F017         	goto	u8811
  7522  002F5E  EFB3  F017         	goto	u8810
  7523  002F62                     u8811:
  7524  002F62  EFB4  F017         	goto	l8268
  7525  002F66                     u8810:
  7526  002F66                     
  7527                           ; BSR set to: 0
  7528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7529  002F66  923E               	bcf	_flags^0,1,c
  7530  002F68                     l8268:
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7534  002F68  BE3D               	btfsc	(_prec+1)^0,7,c
  7535  002F6A  EFC1  F017         	goto	u8820
  7536  002F6E  503D               	movf	(_prec+1)^0,w,c
  7537  002F70  E106               	bnz	u8821
  7538  002F72  043C               	decf	_prec^0,w,c
  7539  002F74  B0D8               	btfsc	status,0,c
  7540  002F76  EFBF  F017         	goto	u8821
  7541  002F7A  EFC1  F017         	goto	u8820
  7542  002F7E                     u8821:
  7543  002F7E  EFC7  F017         	goto	l2126
  7544  002F82                     u8820:
  7545  002F82                     
  7546                           ; BSR set to: 0
  7547  002F82  0E00               	movlw	0
  7548  002F84  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  7549  002F86  0E01               	movlw	1
  7550  002F88  6F6C               	movwf	dtoa@p& (0+255),b
  7551  002F8A  EFCB  F017         	goto	l2128
  7552  002F8E                     l2126:
  7553                           
  7554                           ; BSR set to: 0
  7555  002F8E  C03C  F06C         	movff	_prec,dtoa@p
  7556  002F92  C03D  F06D         	movff	_prec+1,dtoa@p+1
  7557  002F96                     l2128:
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7561  002F96  C03A  F06E         	movff	_width,dtoa@w
  7562  002F9A  C03B  F06F         	movff	_width+1,dtoa@w+1
  7563  002F9E                     
  7564                           ; BSR set to: 0
  7565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7566  002F9E  5170               	movf	dtoa@s& (0+255),w,b
  7567  002FA0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7568  002FA2  A4D8               	btfss	status,2,c
  7569  002FA4  EFD6  F017         	goto	u8831
  7570  002FA8  EFD8  F017         	goto	u8830
  7571  002FAC                     u8831:
  7572  002FAC  EFDF  F017         	goto	l8276
  7573  002FB0                     u8830:
  7574  002FB0                     
  7575                           ; BSR set to: 0
  7576  002FB0  A43E               	btfss	_flags^0,2,c
  7577  002FB2  EFDD  F017         	goto	u8841
  7578  002FB6  EFDF  F017         	goto	u8840
  7579  002FBA                     u8841:
  7580  002FBA  EFE2  F017         	goto	l8278
  7581  002FBE                     u8840:
  7582  002FBE                     l8276:
  7583                           
  7584                           ; BSR set to: 0
  7585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  7586  002FBE  076E               	decf	dtoa@w& (0+255),f,b
  7587  002FC0  A0D8               	btfss	status,0,c
  7588  002FC2  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7589  002FC4                     l8278:
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7593  002FC4  0E00               	movlw	0
  7594  002FC6  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  7595  002FC8  0E4F               	movlw	79
  7596  002FCA  6F7A               	movwf	dtoa@i& (0+255),b
  7597  002FCC                     
  7598                           ; BSR set to: 0
  7599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7600  002FCC  0E00               	movlw	0
  7601  002FCE  0101               	movlb	1	; () banked
  7602  002FD0  6F85               	movwf	(_dbuf+79)& (0+255),b
  7603                           
  7604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7605  002FD2  EF68  F018         	goto	l8292
  7606  002FD6                     l8282:
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  7610  002FD6  077A               	decf	dtoa@i& (0+255),f,b
  7611  002FD8  A0D8               	btfss	status,0,c
  7612  002FDA  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7613  002FDC                     
  7614                           ; BSR set to: 0
  7615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7616  002FDC  0E36               	movlw	low _dbuf
  7617  002FDE  257A               	addwf	dtoa@i& (0+255),w,b
  7618  002FE0  6ED9               	movwf	fsr2l,c
  7619  002FE2  0E01               	movlw	high _dbuf
  7620  002FE4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7621  002FE6  6EDA               	movwf	fsr2h,c
  7622  002FE8  C072  F014         	movff	dtoa@n,___aomod@dividend
  7623  002FEC  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  7624  002FF0  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  7625  002FF4  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  7626  002FF8  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  7627  002FFC  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  7628  003000  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  7629  003004  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  7630  003008  0E0A               	movlw	10
  7631  00300A  6E1C               	movwf	___aomod@divisor^0,c
  7632  00300C  0E00               	movlw	0
  7633  00300E  6E1D               	movwf	(___aomod@divisor+1)^0,c
  7634  003010  0E00               	movlw	0
  7635  003012  6E1E               	movwf	(___aomod@divisor+2)^0,c
  7636  003014  0E00               	movlw	0
  7637  003016  6E1F               	movwf	(___aomod@divisor+3)^0,c
  7638  003018  0E00               	movlw	0
  7639  00301A  6E20               	movwf	(___aomod@divisor+4)^0,c
  7640  00301C  0E00               	movlw	0
  7641  00301E  6E21               	movwf	(___aomod@divisor+5)^0,c
  7642  003020  0E00               	movlw	0
  7643  003022  6E22               	movwf	(___aomod@divisor+6)^0,c
  7644  003024  0E00               	movlw	0
  7645  003026  6E23               	movwf	(___aomod@divisor+7)^0,c
  7646  003028  EC95  F020         	call	___aomod	;wreg free
  7647  00302C  C014  F031         	movff	?___aomod,??_dtoa
  7648  003030  C015  F032         	movff	?___aomod+1,??_dtoa+1
  7649  003034  C016  F033         	movff	?___aomod+2,??_dtoa+2
  7650  003038  C017  F034         	movff	?___aomod+3,??_dtoa+3
  7651  00303C  C018  F035         	movff	?___aomod+4,??_dtoa+4
  7652  003040  C019  F036         	movff	?___aomod+5,??_dtoa+5
  7653  003044  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  7654  003048  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  7655  00304C  C031  F026         	movff	??_dtoa,abs@a
  7656  003050  C033  F027         	movff	??_dtoa+2,abs@a+1
  7657  003054  ECAD  F02B         	call	_abs	;wreg free
  7658  003058  5026               	movf	?_abs^0,w,c
  7659  00305A  0F30               	addlw	48
  7660  00305C  6EDF               	movwf	indf2,c
  7661  00305E                     
  7662                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  7663  00305E  0100               	movlb	0	; () banked
  7664  003060  076C               	decf	dtoa@p& (0+255),f,b
  7665  003062  A0D8               	btfss	status,0,c
  7666  003064  076D               	decf	(dtoa@p+1)& (0+255),f,b
  7667  003066                     
  7668                           ; BSR set to: 0
  7669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  7670  003066  076E               	decf	dtoa@w& (0+255),f,b
  7671  003068  A0D8               	btfss	status,0,c
  7672  00306A  076F               	decf	(dtoa@w+1)& (0+255),f,b
  7673  00306C                     
  7674                           ; BSR set to: 0
  7675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7676  00306C  C072  F014         	movff	dtoa@n,___aodiv@dividend
  7677  003070  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  7678  003074  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  7679  003078  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  7680  00307C  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  7681  003080  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  7682  003084  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  7683  003088  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  7684  00308C  0E0A               	movlw	10
  7685  00308E  6E1C               	movwf	___aodiv@divisor^0,c
  7686  003090  0E00               	movlw	0
  7687  003092  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  7688  003094  0E00               	movlw	0
  7689  003096  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  7690  003098  0E00               	movlw	0
  7691  00309A  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  7692  00309C  0E00               	movlw	0
  7693  00309E  6E20               	movwf	(___aodiv@divisor+4)^0,c
  7694  0030A0  0E00               	movlw	0
  7695  0030A2  6E21               	movwf	(___aodiv@divisor+5)^0,c
  7696  0030A4  0E00               	movlw	0
  7697  0030A6  6E22               	movwf	(___aodiv@divisor+6)^0,c
  7698  0030A8  0E00               	movlw	0
  7699  0030AA  6E23               	movwf	(___aodiv@divisor+7)^0,c
  7700  0030AC  EC12  F01F         	call	___aodiv	;wreg free
  7701  0030B0  C014  F072         	movff	?___aodiv,dtoa@n
  7702  0030B4  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  7703  0030B8  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  7704  0030BC  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  7705  0030C0  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  7706  0030C4  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  7707  0030C8  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  7708  0030CC  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  7709  0030D0                     l8292:
  7710                           
  7711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7712  0030D0  0100               	movlb	0	; () banked
  7713  0030D2  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  7714  0030D4  EF74  F018         	goto	u8851
  7715  0030D8  517B               	movf	(dtoa@i+1)& (0+255),w,b
  7716  0030DA  E108               	bnz	u8850
  7717  0030DC  057A               	decf	dtoa@i& (0+255),w,b
  7718  0030DE  A0D8               	btfss	status,0,c
  7719  0030E0  EF74  F018         	goto	u8851
  7720  0030E4  EF76  F018         	goto	u8850
  7721  0030E8                     u8851:
  7722  0030E8  EFA6  F018         	goto	l8302
  7723  0030EC                     u8850:
  7724  0030EC                     
  7725                           ; BSR set to: 0
  7726  0030EC  5172               	movf	dtoa@n& (0+255),w,b
  7727  0030EE  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  7728  0030F0  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  7729  0030F2  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  7730  0030F4  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  7731  0030F6  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  7732  0030F8  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  7733  0030FA  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  7734  0030FC  A4D8               	btfss	status,2,c
  7735  0030FE  EF83  F018         	goto	u8861
  7736  003102  EF85  F018         	goto	u8860
  7737  003106                     u8861:
  7738  003106  EFEB  F017         	goto	l8282
  7739  00310A                     u8860:
  7740  00310A                     
  7741                           ; BSR set to: 0
  7742  00310A  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  7743  00310C  EF92  F018         	goto	u8870
  7744  003110  516D               	movf	(dtoa@p+1)& (0+255),w,b
  7745  003112  E106               	bnz	u8871
  7746  003114  056C               	decf	dtoa@p& (0+255),w,b
  7747  003116  B0D8               	btfsc	status,0,c
  7748  003118  EF90  F018         	goto	u8871
  7749  00311C  EF92  F018         	goto	u8870
  7750  003120                     u8871:
  7751  003120  EFEB  F017         	goto	l8282
  7752  003124                     u8870:
  7753  003124                     
  7754                           ; BSR set to: 0
  7755  003124  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  7756  003126  EF9D  F018         	goto	u8881
  7757  00312A  516F               	movf	(dtoa@w+1)& (0+255),w,b
  7758  00312C  E108               	bnz	u8880
  7759  00312E  056E               	decf	dtoa@w& (0+255),w,b
  7760  003130  A0D8               	btfss	status,0,c
  7761  003132  EF9D  F018         	goto	u8881
  7762  003136  EF9F  F018         	goto	u8880
  7763  00313A                     u8881:
  7764  00313A  EFA6  F018         	goto	l8302
  7765  00313E                     u8880:
  7766  00313E                     
  7767                           ; BSR set to: 0
  7768  00313E  B23E               	btfsc	_flags^0,1,c
  7769  003140  EFA4  F018         	goto	u8891
  7770  003144  EFA6  F018         	goto	u8890
  7771  003148                     u8891:
  7772  003148  EFEB  F017         	goto	l8282
  7773  00314C                     u8890:
  7774  00314C                     l8302:
  7775                           
  7776                           ; BSR set to: 0
  7777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7778  00314C  5170               	movf	dtoa@s& (0+255),w,b
  7779  00314E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7780  003150  A4D8               	btfss	status,2,c
  7781  003152  EFAD  F018         	goto	u8901
  7782  003156  EFAF  F018         	goto	u8900
  7783  00315A                     u8901:
  7784  00315A  EFB6  F018         	goto	l8306
  7785  00315E                     u8900:
  7786  00315E                     
  7787                           ; BSR set to: 0
  7788  00315E  A43E               	btfss	_flags^0,2,c
  7789  003160  EFB4  F018         	goto	u8911
  7790  003164  EFB6  F018         	goto	u8910
  7791  003168                     u8911:
  7792  003168  EFD5  F018         	goto	l8316
  7793  00316C                     u8910:
  7794  00316C                     l8306:
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  7798  00316C  077A               	decf	dtoa@i& (0+255),f,b
  7799  00316E  A0D8               	btfss	status,0,c
  7800  003170  077B               	decf	(dtoa@i+1)& (0+255),f,b
  7801  003172                     
  7802                           ; BSR set to: 0
  7803                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7804  003172  5170               	movf	dtoa@s& (0+255),w,b
  7805  003174  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  7806  003176  A4D8               	btfss	status,2,c
  7807  003178  EFC0  F018         	goto	u8921
  7808  00317C  EFC2  F018         	goto	u8920
  7809  003180                     u8921:
  7810  003180  EFC8  F018         	goto	l8312
  7811  003184                     u8920:
  7812  003184                     
  7813                           ; BSR set to: 0
  7814  003184  0E00               	movlw	0
  7815  003186  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7816  003188  0E2B               	movlw	43
  7817  00318A  6F6A               	movwf	_dtoa$3530& (0+255),b
  7818  00318C  EFCC  F018         	goto	l8314
  7819  003190                     l8312:
  7820                           
  7821                           ; BSR set to: 0
  7822  003190  0E00               	movlw	0
  7823  003192  6F6B               	movwf	(_dtoa$3530+1)& (0+255),b
  7824  003194  0E2D               	movlw	45
  7825  003196  6F6A               	movwf	_dtoa$3530& (0+255),b
  7826  003198                     l8314:
  7827                           
  7828                           ; BSR set to: 0
  7829  003198  0E36               	movlw	low _dbuf
  7830  00319A  257A               	addwf	dtoa@i& (0+255),w,b
  7831  00319C  6ED9               	movwf	fsr2l,c
  7832  00319E  0E01               	movlw	high _dbuf
  7833  0031A0  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7834  0031A2  6EDA               	movwf	fsr2h,c
  7835  0031A4  0060  F1AB  FFDF   	movff	_dtoa$3530,indf2
  7836  0031AA                     l8316:
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7840  0031AA  C060  F026         	movff	dtoa@fp,pad@fp
  7841  0031AE  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  7842  0031B2  0E36               	movlw	low _dbuf
  7843  0031B4  257A               	addwf	dtoa@i& (0+255),w,b
  7844  0031B6  6E28               	movwf	pad@buf^0,c
  7845  0031B8  0E01               	movlw	high _dbuf
  7846  0031BA  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  7847  0031BC  6E29               	movwf	(pad@buf+1)^0,c
  7848  0031BE  C06E  F02A         	movff	dtoa@w,pad@p
  7849  0031C2  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  7850  0031C6  ECC9  F026         	call	_pad	;wreg free
  7851  0031CA  C026  F060         	movff	?_pad,?_dtoa
  7852  0031CE  C027  F061         	movff	?_pad+1,?_dtoa+1
  7853  0031D2  0012               	return		;funcret
  7854  0031D4                     __end_of_dtoa:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _pad *****************
  7858 ;; Defined at:
  7859 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  7862 ;;		 -> NULL(0), 
  7863 ;;  buf             2   39[COMRAM] PTR unsigned char 
  7864 ;;		 -> dbuf(80), 
  7865 ;;  p               2   41[COMRAM] int 
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  w               2   46[COMRAM] int 
  7868 ;;  i               2   44[COMRAM] int 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  2   37[COMRAM] int 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7878 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7881 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;Total ram usage:       11 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 12
  7885 ;; This function calls:
  7886 ;;		_fputc
  7887 ;;		_fputs
  7888 ;;		_strlen
  7889 ;; This function is called by:
  7890 ;;		_dtoa
  7891 ;;		_efgtoa
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text22
  7896  004D92                     __ptext22:
  7897                           	callstack 0
  7898  004D92                     _pad:
  7899                           	callstack 12
  7900  004D92                     
  7901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7902  004D92  A03E               	btfss	_flags^0,0,c
  7903  004D94  EFCE  F026         	goto	u8511
  7904  004D98  EFD0  F026         	goto	u8510
  7905  004D9C                     u8511:
  7906  004D9C  EFDA  F026         	goto	l8172
  7907  004DA0                     u8510:
  7908  004DA0                     
  7909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7910  004DA0  C028  F01F         	movff	pad@buf,fputs@s
  7911  004DA4  C029  F020         	movff	pad@buf+1,fputs@s+1
  7912  004DA8  C026  F021         	movff	pad@fp,fputs@fp
  7913  004DAC  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7914  004DB0  EC69  F02B         	call	_fputs	;wreg free
  7915  004DB4                     l8172:
  7916                           
  7917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7918  004DB4  BE2B               	btfsc	(pad@p+1)^0,7,c
  7919  004DB6  EFDF  F026         	goto	u8521
  7920  004DBA  EFE1  F026         	goto	u8520
  7921  004DBE                     u8521:
  7922  004DBE  EFE7  F026         	goto	l8176
  7923  004DC2                     u8520:
  7924  004DC2  C02A  F02F         	movff	pad@p,pad@w
  7925  004DC6  C02B  F030         	movff	pad@p+1,pad@w+1
  7926  004DCA  EFEB  F026         	goto	l2115
  7927  004DCE                     l8176:
  7928  004DCE  0E00               	movlw	0
  7929  004DD0  6E30               	movwf	(pad@w+1)^0,c
  7930  004DD2  0E00               	movlw	0
  7931  004DD4  6E2F               	movwf	pad@w^0,c
  7932  004DD6                     l2115:
  7933                           
  7934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7935  004DD6  0E00               	movlw	0
  7936  004DD8  6E2E               	movwf	(pad@i+1)^0,c
  7937  004DDA  0E00               	movlw	0
  7938  004DDC  6E2D               	movwf	pad@i^0,c
  7939                           
  7940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7941  004DDE  EFFD  F026         	goto	l8182
  7942  004DE2                     l8178:
  7943                           
  7944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7945  004DE2  0E00               	movlw	0
  7946  004DE4  6E17               	movwf	(fputc@c+1)^0,c
  7947  004DE6  0E20               	movlw	32
  7948  004DE8  6E16               	movwf	fputc@c^0,c
  7949  004DEA  C026  F018         	movff	pad@fp,fputc@fp
  7950  004DEE  C027  F019         	movff	pad@fp+1,fputc@fp+1
  7951  004DF2  EC89  F028         	call	_fputc	;wreg free
  7952  004DF6                     
  7953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7954  004DF6  4A2D               	infsnz	pad@i^0,f,c
  7955  004DF8  2A2E               	incf	(pad@i+1)^0,f,c
  7956  004DFA                     l8182:
  7957                           
  7958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7959  004DFA  502F               	movf	pad@w^0,w,c
  7960  004DFC  5C2D               	subwf	pad@i^0,w,c
  7961  004DFE  502E               	movf	(pad@i+1)^0,w,c
  7962  004E00  0A80               	xorlw	128
  7963  004E02  6E2C               	movwf	??_pad^0,c
  7964  004E04  5030               	movf	(pad@w+1)^0,w,c
  7965  004E06  0A80               	xorlw	128
  7966  004E08  582C               	subwfb	??_pad^0,w,c
  7967  004E0A  A0D8               	btfss	status,0,c
  7968  004E0C  EF0A  F027         	goto	u8531
  7969  004E10  EF0C  F027         	goto	u8530
  7970  004E14                     u8531:
  7971  004E14  EFF1  F026         	goto	l8178
  7972  004E18                     u8530:
  7973  004E18                     
  7974                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7975  004E18  B03E               	btfsc	_flags^0,0,c
  7976  004E1A  EF11  F027         	goto	u8541
  7977  004E1E  EF13  F027         	goto	u8540
  7978  004E22                     u8541:
  7979  004E22  EF1D  F027         	goto	l8186
  7980  004E26                     u8540:
  7981  004E26                     
  7982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7983  004E26  C028  F01F         	movff	pad@buf,fputs@s
  7984  004E2A  C029  F020         	movff	pad@buf+1,fputs@s+1
  7985  004E2E  C026  F021         	movff	pad@fp,fputs@fp
  7986  004E32  C027  F022         	movff	pad@fp+1,fputs@fp+1
  7987  004E36  EC69  F02B         	call	_fputs	;wreg free
  7988  004E3A                     l8186:
  7989                           
  7990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7991  004E3A  C028  F014         	movff	pad@buf,strlen@s
  7992  004E3E  C029  F015         	movff	pad@buf+1,strlen@s+1
  7993  004E42  ECCD  F02B         	call	_strlen	;wreg free
  7994  004E46  502F               	movf	pad@w^0,w,c
  7995  004E48  2414               	addwf	?_strlen^0,w,c
  7996  004E4A  6E26               	movwf	?_pad^0,c
  7997  004E4C  5030               	movf	(pad@w+1)^0,w,c
  7998  004E4E  2015               	addwfc	(?_strlen+1)^0,w,c
  7999  004E50  6E27               	movwf	(?_pad+1)^0,c
  8000  004E52  0012               	return		;funcret
  8001  004E54                     __end_of_pad:
  8002                           	callstack 0
  8003                           
  8004 ;; *************** function _strlen *****************
  8005 ;; Defined at:
  8006 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8009 ;;		 -> dbuf(80), 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  a               2   21[COMRAM] PTR const unsigned char 
  8012 ;;		 -> dbuf(80), 
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  2   19[COMRAM] unsigned int 
  8015 ;; Registers used:
  8016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8025 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;Total ram usage:        4 bytes
  8027 ;; Hardware stack levels used: 1
  8028 ;; Hardware stack levels required when called: 8
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_pad
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text23
  8037  00579A                     __ptext23:
  8038                           	callstack 0
  8039  00579A                     _strlen:
  8040                           	callstack 15
  8041  00579A  C014  F016         	movff	strlen@s,strlen@a
  8042  00579E  C015  F017         	movff	strlen@s+1,strlen@a+1
  8043  0057A2  EFD5  F02B         	goto	l7634
  8044  0057A6                     l7632:
  8045  0057A6  4A14               	infsnz	strlen@s^0,f,c
  8046  0057A8  2A15               	incf	(strlen@s+1)^0,f,c
  8047  0057AA                     l7634:
  8048  0057AA  0060  F053  FFD9   	movff	strlen@s,fsr2l
  8049  0057B0  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  8050  0057B6  50DF               	movf	indf2,w,c
  8051  0057B8  A4D8               	btfss	status,2,c
  8052  0057BA  EFE1  F02B         	goto	u7651
  8053  0057BE  EFE3  F02B         	goto	u7650
  8054  0057C2                     u7651:
  8055  0057C2  EFD3  F02B         	goto	l7632
  8056  0057C6                     u7650:
  8057  0057C6  5016               	movf	strlen@a^0,w,c
  8058  0057C8  5C14               	subwf	strlen@s^0,w,c
  8059  0057CA  6E14               	movwf	?_strlen^0,c
  8060  0057CC  5017               	movf	(strlen@a+1)^0,w,c
  8061  0057CE  5815               	subwfb	(strlen@s+1)^0,w,c
  8062  0057D0  6E15               	movwf	(?_strlen+1)^0,c
  8063  0057D2  0012               	return		;funcret
  8064  0057D4                     __end_of_strlen:
  8065                           	callstack 0
  8066                           
  8067 ;; *************** function _fputs *****************
  8068 ;; Defined at:
  8069 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8072 ;;		 -> dbuf(80), 
  8073 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8074 ;;		 -> NULL(0), 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  i               2   35[COMRAM] int 
  8077 ;;  c               1   34[COMRAM] unsigned char 
  8078 ;; Return value:  Size  Location     Type
  8079 ;;                  2   30[COMRAM] int 
  8080 ;; Registers used:
  8081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8082 ;; Tracked objects:
  8083 ;;		On entry : 0/0
  8084 ;;		On exit  : 0/0
  8085 ;;		Unchanged: 0/0
  8086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;Total ram usage:        7 bytes
  8092 ;; Hardware stack levels used: 1
  8093 ;; Hardware stack levels required when called: 11
  8094 ;; This function calls:
  8095 ;;		_fputc
  8096 ;; This function is called by:
  8097 ;;		_pad
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text24
  8102  0056D2                     __ptext24:
  8103                           	callstack 0
  8104  0056D2                     _fputs:
  8105                           	callstack 12
  8106  0056D2  0E00               	movlw	0
  8107  0056D4  6E25               	movwf	(fputs@i+1)^0,c
  8108  0056D6  0E00               	movlw	0
  8109  0056D8  6E24               	movwf	fputs@i^0,c
  8110  0056DA  EF7A  F02B         	goto	l7628
  8111  0056DE                     l7624:
  8112  0056DE  C023  F016         	movff	fputs@c,fputc@c
  8113  0056E2  6A17               	clrf	(fputc@c+1)^0,c
  8114  0056E4  C021  F018         	movff	fputs@fp,fputc@fp
  8115  0056E8  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8116  0056EC  EC89  F028         	call	_fputc	;wreg free
  8117  0056F0  4A24               	infsnz	fputs@i^0,f,c
  8118  0056F2  2A25               	incf	(fputs@i+1)^0,f,c
  8119  0056F4                     l7628:
  8120  0056F4  5024               	movf	fputs@i^0,w,c
  8121  0056F6  241F               	addwf	fputs@s^0,w,c
  8122  0056F8  6ED9               	movwf	fsr2l,c
  8123  0056FA  5025               	movf	(fputs@i+1)^0,w,c
  8124  0056FC  2020               	addwfc	(fputs@s+1)^0,w,c
  8125  0056FE  6EDA               	movwf	fsr2h,c
  8126  005700  50DF               	movf	indf2,w,c
  8127  005702  6E23               	movwf	fputs@c^0,c
  8128  005704  5023               	movf	fputs@c^0,w,c
  8129  005706  A4D8               	btfss	status,2,c
  8130  005708  EF88  F02B         	goto	u7641
  8131  00570C  EF8A  F02B         	goto	u7640
  8132  005710                     u7641:
  8133  005710  EF6F  F02B         	goto	l7624
  8134  005714                     u7640:
  8135  005714  0012               	return		;funcret
  8136  005716                     __end_of_fputs:
  8137                           	callstack 0
  8138                           
  8139 ;; *************** function _fputc *****************
  8140 ;; Defined at:
  8141 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8142 ;; Parameters:    Size  Location     Type
  8143 ;;  c               2   21[COMRAM] int 
  8144 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  8145 ;;		 -> NULL(0), 
  8146 ;; Auto vars:     Size  Location     Type
  8147 ;;		None
  8148 ;; Return value:  Size  Location     Type
  8149 ;;                  2   21[COMRAM] int 
  8150 ;; Registers used:
  8151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8152 ;; Tracked objects:
  8153 ;;		On entry : 0/0
  8154 ;;		On exit  : 0/0
  8155 ;;		Unchanged: 0/0
  8156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8161 ;;Total ram usage:        9 bytes
  8162 ;; Hardware stack levels used: 1
  8163 ;; Hardware stack levels required when called: 10
  8164 ;; This function calls:
  8165 ;;		_putch
  8166 ;; This function is called by:
  8167 ;;		_pad
  8168 ;;		_vfpfcnvrt
  8169 ;;		_fputs
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text25
  8174  005112                     __ptext25:
  8175                           	callstack 0
  8176  005112                     _fputc:
  8177                           	callstack 15
  8178  005112  5018               	movf	fputc@fp^0,w,c
  8179  005114  1019               	iorwf	(fputc@fp+1)^0,w,c
  8180  005116  B4D8               	btfsc	status,2,c
  8181  005118  EF90  F028         	goto	u7211
  8182  00511C  EF92  F028         	goto	u7210
  8183  005120                     u7211:
  8184  005120  EF9B  F028         	goto	l7410
  8185  005124                     u7210:
  8186  005124  5018               	movf	fputc@fp^0,w,c
  8187  005126  1019               	iorwf	(fputc@fp+1)^0,w,c
  8188  005128  A4D8               	btfss	status,2,c
  8189  00512A  EF99  F028         	goto	u7221
  8190  00512E  EF9B  F028         	goto	u7220
  8191  005132                     u7221:
  8192  005132  EFA0  F028         	goto	l7412
  8193  005136                     u7220:
  8194  005136                     l7410:
  8195  005136  5016               	movf	fputc@c^0,w,c
  8196  005138  EC0E  F02F         	call	_putch
  8197  00513C  EFD3  F028         	goto	l2312
  8198  005140                     l7412:
  8199  005140  EE20 F004          	lfsr	2,4
  8200  005144  5018               	movf	fputc@fp^0,w,c
  8201  005146  26D9               	addwf	fsr2l,f,c
  8202  005148  5019               	movf	(fputc@fp+1)^0,w,c
  8203  00514A  22DA               	addwfc	fsr2h,f,c
  8204  00514C  50DE               	movf	postinc2,w,c
  8205  00514E  10DE               	iorwf	postinc2,w,c
  8206  005150  B4D8               	btfsc	status,2,c
  8207  005152  EFAD  F028         	goto	u7231
  8208  005156  EFAF  F028         	goto	u7230
  8209  00515A                     u7231:
  8210  00515A  EFCA  F028         	goto	l7416
  8211  00515E                     u7230:
  8212  00515E  EE20 F004          	lfsr	2,4
  8213  005162  5018               	movf	fputc@fp^0,w,c
  8214  005164  26D9               	addwf	fsr2l,f,c
  8215  005166  5019               	movf	(fputc@fp+1)^0,w,c
  8216  005168  22DA               	addwfc	fsr2h,f,c
  8217  00516A  EE10 F002          	lfsr	1,2
  8218  00516E  5018               	movf	fputc@fp^0,w,c
  8219  005170  26E1               	addwf	fsr1l,f,c
  8220  005172  5019               	movf	(fputc@fp+1)^0,w,c
  8221  005174  22E2               	addwfc	fsr1h,f,c
  8222  005176  50DE               	movf	postinc2,w,c
  8223  005178  5CE6               	subwf	postinc1,w,c
  8224  00517A  50E6               	movf	postinc1,w,c
  8225  00517C  0A80               	xorlw	128
  8226  00517E  6E1E               	movwf	(??_fputc+4)^0,c
  8227  005180  50DE               	movf	postinc2,w,c
  8228  005182  0A80               	xorlw	128
  8229  005184  581E               	subwfb	(??_fputc+4)^0,w,c
  8230  005186  B0D8               	btfsc	status,0,c
  8231  005188  EFC8  F028         	goto	u7241
  8232  00518C  EFCA  F028         	goto	u7240
  8233  005190                     u7241:
  8234  005190  EFD3  F028         	goto	l2312
  8235  005194                     u7240:
  8236  005194                     l7416:
  8237  005194  EE20 F002          	lfsr	2,2
  8238  005198  5018               	movf	fputc@fp^0,w,c
  8239  00519A  26D9               	addwf	fsr2l,f,c
  8240  00519C  5019               	movf	(fputc@fp+1)^0,w,c
  8241  00519E  22DA               	addwfc	fsr2h,f,c
  8242  0051A0  2ADE               	incf	postinc2,f,c
  8243  0051A2  0E00               	movlw	0
  8244  0051A4  22DD               	addwfc	postdec2,f,c
  8245  0051A6                     l2312:
  8246  0051A6  0012               	return		;funcret
  8247  0051A8                     __end_of_fputc:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _putch *****************
  8251 ;; Defined at:
  8252 ;;		line 230 in file "mcc_generated_files/uart1.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  txData          1    wreg     unsigned char 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  txData          1   20[COMRAM] unsigned char 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  1    wreg      void 
  8259 ;; Registers used:
  8260 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8269 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8270 ;;Total ram usage:        1 bytes
  8271 ;; Hardware stack levels used: 1
  8272 ;; Hardware stack levels required when called: 9
  8273 ;; This function calls:
  8274 ;;		_UART1_Write
  8275 ;; This function is called by:
  8276 ;;		_fputc
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text26
  8281  005E1C                     __ptext26:
  8282                           	callstack 0
  8283  005E1C                     _putch:
  8284                           	callstack 15
  8285                           
  8286                           ;incstack = 0
  8287                           ;putch@txData stored from wreg
  8288  005E1C  6E15               	movwf	putch@txData^0,c
  8289  005E1E                     
  8290                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  8291  005E1E  5015               	movf	putch@txData^0,w,c
  8292  005E20  EC04  F02A         	call	_UART1_Write
  8293  005E24  0012               	return		;funcret
  8294  005E26                     __end_of_putch:
  8295                           	callstack 0
  8296                           
  8297 ;; *************** function _UART1_Write *****************
  8298 ;; Defined at:
  8299 ;;		line 202 in file "mcc_generated_files/uart1.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  txData          1    wreg     unsigned char 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;  txData          1   19[COMRAM] unsigned char 
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8317 ;;Total ram usage:        1 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; Hardware stack levels required when called: 8
  8320 ;; This function calls:
  8321 ;;		Nothing
  8322 ;; This function is called by:
  8323 ;;		_putch
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text27
  8328  005408                     __ptext27:
  8329                           	callstack 0
  8330  005408                     _UART1_Write:
  8331                           	callstack 15
  8332                           
  8333                           ;incstack = 0
  8334                           ;UART1_Write@txData stored from wreg
  8335  005408  6E14               	movwf	UART1_Write@txData^0,c
  8336  00540A                     l7388:
  8337                           
  8338                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  8339  00540A  504C               	movf	_uart1TxBufferRemaining^0,w,c	;volatile
  8340  00540C  B4D8               	btfsc	status,2,c
  8341  00540E  EF0B  F02A         	goto	u7181
  8342  005412  EF0D  F02A         	goto	u7180
  8343  005416                     u7181:
  8344  005416  EF05  F02A         	goto	l7388
  8345  00541A                     u7180:
  8346  00541A                     
  8347                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  8348  00541A  0139               	movlb	57	; () banked
  8349  00541C  B993               	btfsc	147,4,b	;volatile
  8350  00541E  EF13  F02A         	goto	u7191
  8351  005422  EF15  F02A         	goto	u7190
  8352  005426                     u7191:
  8353  005426  EF1A  F02A         	goto	l309
  8354  00542A                     u7190:
  8355  00542A                     
  8356                           ; BSR set to: 57
  8357                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  8358  00542A  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  8359                           
  8360                           ;mcc_generated_files/uart1.c: 211:     }
  8361  005430  EF30  F02A         	goto	l7402
  8362  005434                     l309:
  8363                           
  8364                           ; BSR set to: 57
  8365                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  8366  005434  9993               	bcf	147,4,b	;volatile
  8367  005436                     
  8368                           ; BSR set to: 57
  8369                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  8370  005436  0E10               	movlw	low _uart1TxBuffer
  8371  005438  2447               	addwf	_uart1TxHead^0,w,c	;volatile
  8372  00543A  6ED9               	movwf	fsr2l,c
  8373  00543C  6ADA               	clrf	fsr2h,c
  8374  00543E  0E01               	movlw	high _uart1TxBuffer
  8375  005440  22DA               	addwfc	fsr2h,f,c
  8376  005442  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  8377  005448                     
  8378                           ; BSR set to: 57
  8379  005448  2A47               	incf	_uart1TxHead^0,f,c	;volatile
  8380  00544A                     
  8381                           ; BSR set to: 57
  8382                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  8383  00544A  0E07               	movlw	7
  8384  00544C  6447               	cpfsgt	_uart1TxHead^0,c	;volatile
  8385  00544E  EF2B  F02A         	goto	u7201
  8386  005452  EF2D  F02A         	goto	u7200
  8387  005456                     u7201:
  8388  005456  EF2F  F02A         	goto	l7400
  8389  00545A                     u7200:
  8390  00545A                     
  8391                           ; BSR set to: 57
  8392                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  8393  00545A  0E00               	movlw	0
  8394  00545C  6E47               	movwf	_uart1TxHead^0,c	;volatile
  8395  00545E                     l7400:
  8396                           
  8397                           ; BSR set to: 57
  8398                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  8399  00545E  064C               	decf	_uart1TxBufferRemaining^0,f,c	;volatile
  8400  005460                     l7402:
  8401                           
  8402                           ; BSR set to: 57
  8403                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  8404  005460  8993               	bsf	147,4,b	;volatile
  8405  005462                     
  8406                           ; BSR set to: 57
  8407  005462  0012               	return		;funcret
  8408  005464                     __end_of_UART1_Write:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _abs *****************
  8412 ;; Defined at:
  8413 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  a               2   37[COMRAM] int 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;		None
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  2   37[COMRAM] int 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, status,0
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;Total ram usage:        4 bytes
  8432 ;; Hardware stack levels used: 1
  8433 ;; Hardware stack levels required when called: 8
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_dtoa
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text28
  8442  00575A                     __ptext28:
  8443                           	callstack 0
  8444  00575A                     _abs:
  8445                           	callstack 16
  8446  00575A  BE27               	btfsc	(abs@a+1)^0,7,c
  8447  00575C  EFBA  F02B         	goto	u8550
  8448  005760  5027               	movf	(abs@a+1)^0,w,c
  8449  005762  E106               	bnz	u8551
  8450  005764  0426               	decf	abs@a^0,w,c
  8451  005766  B0D8               	btfsc	status,0,c
  8452  005768  EFB8  F02B         	goto	u8551
  8453  00576C  EFBA  F02B         	goto	u8550
  8454  005770                     u8551:
  8455  005770  EFC8  F02B         	goto	l2278
  8456  005774                     u8550:
  8457  005774  C026  F028         	movff	abs@a,??_abs
  8458  005778  C027  F029         	movff	abs@a+1,??_abs+1
  8459  00577C  1E28               	comf	??_abs^0,f,c
  8460  00577E  1E29               	comf	(??_abs+1)^0,f,c
  8461  005780  4A28               	infsnz	??_abs^0,f,c
  8462  005782  2A29               	incf	(??_abs+1)^0,f,c
  8463  005784  C028  F026         	movff	??_abs,?_abs
  8464  005788  C029  F027         	movff	??_abs+1,?_abs+1
  8465  00578C  EFCC  F02B         	goto	l2281
  8466  005790                     l2278:
  8467  005790  C026  F026         	movff	abs@a,?_abs
  8468  005794  C027  F027         	movff	abs@a+1,?_abs+1
  8469  005798                     l2281:
  8470  005798  0012               	return		;funcret
  8471  00579A                     __end_of_abs:
  8472                           	callstack 0
  8473                           
  8474 ;; *************** function ___aomod *****************
  8475 ;; Defined at:
  8476 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  8477 ;; Parameters:    Size  Location     Type
  8478 ;;  dividend        8   19[COMRAM] long long 
  8479 ;;  divisor         8   27[COMRAM] long long 
  8480 ;; Auto vars:     Size  Location     Type
  8481 ;;  sign            1   36[COMRAM] unsigned char 
  8482 ;;  counter         1   35[COMRAM] unsigned char 
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  8   19[COMRAM] long long 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2, status,0
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8492 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;Total ram usage:       18 bytes
  8497 ;; Hardware stack levels used: 1
  8498 ;; Hardware stack levels required when called: 8
  8499 ;; This function calls:
  8500 ;;		Nothing
  8501 ;; This function is called by:
  8502 ;;		_dtoa
  8503 ;; This function uses a non-reentrant model
  8504 ;;
  8505                           
  8506                           	psect	text29
  8507  00412A                     __ptext29:
  8508                           	callstack 0
  8509  00412A                     ___aomod:
  8510                           	callstack 16
  8511  00412A  0E00               	movlw	0
  8512  00412C  6E25               	movwf	___aomod@sign^0,c
  8513  00412E  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  8514  004130  EF9E  F020         	goto	u7750
  8515  004134  EF9C  F020         	goto	u7751
  8516  004138                     u7751:
  8517  004138  EFB0  F020         	goto	l7696
  8518  00413C                     u7750:
  8519  00413C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8520  00413E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8521  004140  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8522  004142  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8523  004144  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8524  004146  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8525  004148  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8526  00414A  6C14               	negf	___aomod@dividend^0,c
  8527  00414C  0E00               	movlw	0
  8528  00414E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8529  004150  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8530  004152  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8531  004154  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8532  004156  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8533  004158  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8534  00415A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8535  00415C  0E01               	movlw	1
  8536  00415E  6E25               	movwf	___aomod@sign^0,c
  8537  004160                     l7696:
  8538  004160  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  8539  004162  EFB7  F020         	goto	u7760
  8540  004166  EFB5  F020         	goto	u7761
  8541  00416A                     u7761:
  8542  00416A  EFC7  F020         	goto	l7700
  8543  00416E                     u7760:
  8544  00416E  1E23               	comf	(___aomod@divisor+7)^0,f,c
  8545  004170  1E22               	comf	(___aomod@divisor+6)^0,f,c
  8546  004172  1E21               	comf	(___aomod@divisor+5)^0,f,c
  8547  004174  1E20               	comf	(___aomod@divisor+4)^0,f,c
  8548  004176  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  8549  004178  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  8550  00417A  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  8551  00417C  6C1C               	negf	___aomod@divisor^0,c
  8552  00417E  0E00               	movlw	0
  8553  004180  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  8554  004182  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  8555  004184  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  8556  004186  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  8557  004188  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  8558  00418A  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  8559  00418C  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  8560  00418E                     l7700:
  8561  00418E  501C               	movf	___aomod@divisor^0,w,c
  8562  004190  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  8563  004192  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  8564  004194  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  8565  004196  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  8566  004198  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  8567  00419A  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  8568  00419C  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  8569  00419E  B4D8               	btfsc	status,2,c
  8570  0041A0  EFD4  F020         	goto	u7771
  8571  0041A4  EFD6  F020         	goto	u7770
  8572  0041A8                     u7771:
  8573  0041A8  EF1E  F021         	goto	l7716
  8574  0041AC                     u7770:
  8575  0041AC  0E01               	movlw	1
  8576  0041AE  6E24               	movwf	___aomod@counter^0,c
  8577  0041B0  EFE4  F020         	goto	l7706
  8578  0041B4                     l7704:
  8579  0041B4  90D8               	bcf	status,0,c
  8580  0041B6  361C               	rlcf	___aomod@divisor^0,f,c
  8581  0041B8  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  8582  0041BA  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  8583  0041BC  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  8584  0041BE  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  8585  0041C0  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  8586  0041C2  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  8587  0041C4  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  8588  0041C6  2A24               	incf	___aomod@counter^0,f,c
  8589  0041C8                     l7706:
  8590  0041C8  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  8591  0041CA  EFE9  F020         	goto	u7781
  8592  0041CE  EFEB  F020         	goto	u7780
  8593  0041D2                     u7781:
  8594  0041D2  EFDA  F020         	goto	l7704
  8595  0041D6                     u7780:
  8596  0041D6                     l7708:
  8597  0041D6  501C               	movf	___aomod@divisor^0,w,c
  8598  0041D8  5C14               	subwf	___aomod@dividend^0,w,c
  8599  0041DA  501D               	movf	(___aomod@divisor+1)^0,w,c
  8600  0041DC  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  8601  0041DE  501E               	movf	(___aomod@divisor+2)^0,w,c
  8602  0041E0  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  8603  0041E2  501F               	movf	(___aomod@divisor+3)^0,w,c
  8604  0041E4  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  8605  0041E6  5020               	movf	(___aomod@divisor+4)^0,w,c
  8606  0041E8  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  8607  0041EA  5021               	movf	(___aomod@divisor+5)^0,w,c
  8608  0041EC  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  8609  0041EE  5022               	movf	(___aomod@divisor+6)^0,w,c
  8610  0041F0  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  8611  0041F2  5023               	movf	(___aomod@divisor+7)^0,w,c
  8612  0041F4  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  8613  0041F6  A0D8               	btfss	status,0,c
  8614  0041F8  EF00  F021         	goto	u7791
  8615  0041FC  EF02  F021         	goto	u7790
  8616  004200                     u7791:
  8617  004200  EF12  F021         	goto	l7712
  8618  004204                     u7790:
  8619  004204  501C               	movf	___aomod@divisor^0,w,c
  8620  004206  5E14               	subwf	___aomod@dividend^0,f,c
  8621  004208  501D               	movf	(___aomod@divisor+1)^0,w,c
  8622  00420A  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  8623  00420C  501E               	movf	(___aomod@divisor+2)^0,w,c
  8624  00420E  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  8625  004210  501F               	movf	(___aomod@divisor+3)^0,w,c
  8626  004212  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  8627  004214  5020               	movf	(___aomod@divisor+4)^0,w,c
  8628  004216  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  8629  004218  5021               	movf	(___aomod@divisor+5)^0,w,c
  8630  00421A  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  8631  00421C  5022               	movf	(___aomod@divisor+6)^0,w,c
  8632  00421E  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  8633  004220  5023               	movf	(___aomod@divisor+7)^0,w,c
  8634  004222  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  8635  004224                     l7712:
  8636  004224  90D8               	bcf	status,0,c
  8637  004226  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  8638  004228  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  8639  00422A  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  8640  00422C  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  8641  00422E  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  8642  004230  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  8643  004232  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  8644  004234  321C               	rrcf	___aomod@divisor^0,f,c
  8645  004236  2E24               	decfsz	___aomod@counter^0,f,c
  8646  004238  EFEB  F020         	goto	l7708
  8647  00423C                     l7716:
  8648  00423C  5025               	movf	___aomod@sign^0,w,c
  8649  00423E  B4D8               	btfsc	status,2,c
  8650  004240  EF24  F021         	goto	u7801
  8651  004244  EF26  F021         	goto	u7800
  8652  004248                     u7801:
  8653  004248  EF36  F021         	goto	l7720
  8654  00424C                     u7800:
  8655  00424C  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  8656  00424E  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  8657  004250  1E19               	comf	(___aomod@dividend+5)^0,f,c
  8658  004252  1E18               	comf	(___aomod@dividend+4)^0,f,c
  8659  004254  1E17               	comf	(___aomod@dividend+3)^0,f,c
  8660  004256  1E16               	comf	(___aomod@dividend+2)^0,f,c
  8661  004258  1E15               	comf	(___aomod@dividend+1)^0,f,c
  8662  00425A  6C14               	negf	___aomod@dividend^0,c
  8663  00425C  0E00               	movlw	0
  8664  00425E  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  8665  004260  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  8666  004262  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  8667  004264  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  8668  004266  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  8669  004268  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  8670  00426A  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  8671  00426C                     l7720:
  8672  00426C  C014  F014         	movff	___aomod@dividend,?___aomod
  8673  004270  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  8674  004274  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  8675  004278  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  8676  00427C  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  8677  004280  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  8678  004284  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  8679  004288  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  8680  00428C  0012               	return		;funcret
  8681  00428E                     __end_of___aomod:
  8682                           	callstack 0
  8683                           
  8684 ;; *************** function ___aodiv *****************
  8685 ;; Defined at:
  8686 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  dividend        8   19[COMRAM] long long 
  8689 ;;  divisor         8   27[COMRAM] long long 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  quotient        8   37[COMRAM] long long 
  8692 ;;  sign            1   36[COMRAM] unsigned char 
  8693 ;;  counter         1   35[COMRAM] unsigned char 
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  8   19[COMRAM] long long 
  8696 ;; Registers used:
  8697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8703 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8704 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8706 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8707 ;;Total ram usage:       26 bytes
  8708 ;; Hardware stack levels used: 1
  8709 ;; Hardware stack levels required when called: 8
  8710 ;; This function calls:
  8711 ;;		Nothing
  8712 ;; This function is called by:
  8713 ;;		_dtoa
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	text30
  8718  003E24                     __ptext30:
  8719                           	callstack 0
  8720  003E24                     ___aodiv:
  8721                           	callstack 16
  8722  003E24  0E00               	movlw	0
  8723  003E26  6E25               	movwf	___aodiv@sign^0,c
  8724  003E28  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  8725  003E2A  EF1B  F01F         	goto	u7680
  8726  003E2E  EF19  F01F         	goto	u7681
  8727  003E32                     u7681:
  8728  003E32  EF2D  F01F         	goto	l7652
  8729  003E36                     u7680:
  8730  003E36  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  8731  003E38  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  8732  003E3A  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  8733  003E3C  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  8734  003E3E  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  8735  003E40  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  8736  003E42  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  8737  003E44  6C1C               	negf	___aodiv@divisor^0,c
  8738  003E46  0E00               	movlw	0
  8739  003E48  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  8740  003E4A  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  8741  003E4C  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  8742  003E4E  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  8743  003E50  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  8744  003E52  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  8745  003E54  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  8746  003E56  0E01               	movlw	1
  8747  003E58  6E25               	movwf	___aodiv@sign^0,c
  8748  003E5A                     l7652:
  8749  003E5A  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  8750  003E5C  EF34  F01F         	goto	u7690
  8751  003E60  EF32  F01F         	goto	u7691
  8752  003E64                     u7691:
  8753  003E64  EF46  F01F         	goto	l7658
  8754  003E68                     u7690:
  8755  003E68  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  8756  003E6A  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  8757  003E6C  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  8758  003E6E  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  8759  003E70  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  8760  003E72  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  8761  003E74  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  8762  003E76  6C14               	negf	___aodiv@dividend^0,c
  8763  003E78  0E00               	movlw	0
  8764  003E7A  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  8765  003E7C  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  8766  003E7E  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  8767  003E80  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  8768  003E82  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  8769  003E84  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  8770  003E86  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  8771  003E88  0E01               	movlw	1
  8772  003E8A  1A25               	xorwf	___aodiv@sign^0,f,c
  8773  003E8C                     l7658:
  8774  003E8C  EE20  F026         	lfsr	2,___aodiv@quotient
  8775  003E90  0E07               	movlw	7
  8776  003E92                     u7701:
  8777  003E92  6ADE               	clrf	postinc2,c
  8778  003E94  06E8               	decf	wreg,f,c
  8779  003E96  E2FD               	bc	u7701
  8780  003E98  501C               	movf	___aodiv@divisor^0,w,c
  8781  003E9A  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  8782  003E9C  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  8783  003E9E  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  8784  003EA0  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  8785  003EA2  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  8786  003EA4  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  8787  003EA6  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  8788  003EA8  B4D8               	btfsc	status,2,c
  8789  003EAA  EF59  F01F         	goto	u7711
  8790  003EAE  EF5B  F01F         	goto	u7710
  8791  003EB2                     u7711:
  8792  003EB2  EFAD  F01F         	goto	l7680
  8793  003EB6                     u7710:
  8794  003EB6  0E01               	movlw	1
  8795  003EB8  6E24               	movwf	___aodiv@counter^0,c
  8796  003EBA  EF69  F01F         	goto	l7666
  8797  003EBE                     l7664:
  8798  003EBE  90D8               	bcf	status,0,c
  8799  003EC0  361C               	rlcf	___aodiv@divisor^0,f,c
  8800  003EC2  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  8801  003EC4  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  8802  003EC6  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  8803  003EC8  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  8804  003ECA  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  8805  003ECC  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  8806  003ECE  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  8807  003ED0  2A24               	incf	___aodiv@counter^0,f,c
  8808  003ED2                     l7666:
  8809  003ED2  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  8810  003ED4  EF6E  F01F         	goto	u7721
  8811  003ED8  EF70  F01F         	goto	u7720
  8812  003EDC                     u7721:
  8813  003EDC  EF5F  F01F         	goto	l7664
  8814  003EE0                     u7720:
  8815  003EE0                     l7668:
  8816  003EE0  90D8               	bcf	status,0,c
  8817  003EE2  3626               	rlcf	___aodiv@quotient^0,f,c
  8818  003EE4  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  8819  003EE6  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  8820  003EE8  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  8821  003EEA  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  8822  003EEC  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  8823  003EEE  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  8824  003EF0  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  8825  003EF2  501C               	movf	___aodiv@divisor^0,w,c
  8826  003EF4  5C14               	subwf	___aodiv@dividend^0,w,c
  8827  003EF6  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8828  003EF8  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  8829  003EFA  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8830  003EFC  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  8831  003EFE  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8832  003F00  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  8833  003F02  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8834  003F04  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  8835  003F06  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8836  003F08  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  8837  003F0A  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8838  003F0C  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  8839  003F0E  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8840  003F10  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  8841  003F12  A0D8               	btfss	status,0,c
  8842  003F14  EF8E  F01F         	goto	u7731
  8843  003F18  EF90  F01F         	goto	u7730
  8844  003F1C                     u7731:
  8845  003F1C  EFA1  F01F         	goto	l7676
  8846  003F20                     u7730:
  8847  003F20  501C               	movf	___aodiv@divisor^0,w,c
  8848  003F22  5E14               	subwf	___aodiv@dividend^0,f,c
  8849  003F24  501D               	movf	(___aodiv@divisor+1)^0,w,c
  8850  003F26  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  8851  003F28  501E               	movf	(___aodiv@divisor+2)^0,w,c
  8852  003F2A  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  8853  003F2C  501F               	movf	(___aodiv@divisor+3)^0,w,c
  8854  003F2E  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  8855  003F30  5020               	movf	(___aodiv@divisor+4)^0,w,c
  8856  003F32  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  8857  003F34  5021               	movf	(___aodiv@divisor+5)^0,w,c
  8858  003F36  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  8859  003F38  5022               	movf	(___aodiv@divisor+6)^0,w,c
  8860  003F3A  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  8861  003F3C  5023               	movf	(___aodiv@divisor+7)^0,w,c
  8862  003F3E  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  8863  003F40  8026               	bsf	___aodiv@quotient^0,0,c
  8864  003F42                     l7676:
  8865  003F42  90D8               	bcf	status,0,c
  8866  003F44  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  8867  003F46  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  8868  003F48  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  8869  003F4A  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  8870  003F4C  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  8871  003F4E  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  8872  003F50  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  8873  003F52  321C               	rrcf	___aodiv@divisor^0,f,c
  8874  003F54  2E24               	decfsz	___aodiv@counter^0,f,c
  8875  003F56  EF70  F01F         	goto	l7668
  8876  003F5A                     l7680:
  8877  003F5A  5025               	movf	___aodiv@sign^0,w,c
  8878  003F5C  B4D8               	btfsc	status,2,c
  8879  003F5E  EFB3  F01F         	goto	u7741
  8880  003F62  EFB5  F01F         	goto	u7740
  8881  003F66                     u7741:
  8882  003F66  EFC5  F01F         	goto	l7684
  8883  003F6A                     u7740:
  8884  003F6A  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  8885  003F6C  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  8886  003F6E  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  8887  003F70  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  8888  003F72  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  8889  003F74  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  8890  003F76  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  8891  003F78  6C26               	negf	___aodiv@quotient^0,c
  8892  003F7A  0E00               	movlw	0
  8893  003F7C  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  8894  003F7E  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  8895  003F80  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  8896  003F82  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  8897  003F84  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  8898  003F86  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  8899  003F88  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  8900  003F8A                     l7684:
  8901  003F8A  C026  F014         	movff	___aodiv@quotient,?___aodiv
  8902  003F8E  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  8903  003F92  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  8904  003F96  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  8905  003F9A  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  8906  003F9E  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  8907  003FA2  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  8908  003FA6  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  8909  003FAA  0012               	return		;funcret
  8910  003FAC                     __end_of___aodiv:
  8911                           	callstack 0
  8912                           
  8913 ;; *************** function _checkBatt *****************
  8914 ;; Defined at:
  8915 ;;		line 83 in file "main.c"
  8916 ;; Parameters:    Size  Location     Type
  8917 ;;		None
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;		None
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      _Bool 
  8922 ;; Registers used:
  8923 ;;		wreg, status,2, status,0, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 0/0
  8926 ;;		On exit  : 0/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;Total ram usage:        0 bytes
  8934 ;; Hardware stack levels used: 1
  8935 ;; Hardware stack levels required when called: 10
  8936 ;; This function calls:
  8937 ;;		___flge
  8938 ;;		___xxtofl
  8939 ;;		_getBatteryVoltage
  8940 ;;		_setSteering
  8941 ;; This function is called by:
  8942 ;;		_loop
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text31
  8947  00523C                     __ptext31:
  8948                           	callstack 0
  8949  00523C                     _checkBatt:
  8950                           	callstack 19
  8951  00523C                     
  8952                           ;main.c: 84:     ++battCheckCount;
  8953  00523C  0101               	movlb	1	; () banked
  8954  00523E  4B32               	infsnz	_battCheckCount& (0+255),f,b
  8955  005240  2B33               	incf	(_battCheckCount+1)& (0+255),f,b
  8956  005242                     
  8957                           ; BSR set to: 1
  8958                           ;main.c: 85:     if (battCheckCount > (500)) {
  8959  005242  0EF5               	movlw	245
  8960  005244  5D32               	subwf	_battCheckCount& (0+255),w,b
  8961  005246  0E01               	movlw	1
  8962  005248  5933               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8963  00524A  A0D8               	btfss	status,0,c
  8964  00524C  EF2A  F029         	goto	u9931
  8965  005250  EF2C  F029         	goto	u9930
  8966  005254                     u9931:
  8967  005254  EF65  F029         	goto	l8968
  8968  005258                     u9930:
  8969  005258                     
  8970                           ; BSR set to: 1
  8971                           ;main.c: 86:         battCheckCount = 0;
  8972  005258  0E00               	movlw	0
  8973  00525A  6F33               	movwf	(_battCheckCount+1)& (0+255),b
  8974  00525C  0E00               	movlw	0
  8975  00525E  6F32               	movwf	_battCheckCount& (0+255),b
  8976  005260                     
  8977                           ; BSR set to: 1
  8978                           ;main.c: 87:         getBatteryVoltage();
  8979  005260  ECFF  F02E         	call	_getBatteryVoltage	;wreg free
  8980  005264                     
  8981                           ;main.c: 89:         if (BatteryVolt < (6.8) * 409.6f) {
  8982  005264  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  8983  005268  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  8984  00526C  6A1E               	clrf	(___xxtofl@val+2)^0,c
  8985  00526E  6A1F               	clrf	(___xxtofl@val+3)^0,c
  8986  005270  0E00               	movlw	0
  8987  005272  EC66  F01D         	call	___xxtofl
  8988  005276  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  8989  00527A  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  8990  00527E  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  8991  005282  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  8992  005286  0E7B               	movlw	123
  8993  005288  0100               	movlb	0	; () banked
  8994  00528A  6F71               	movwf	___flge@ff2& (0+255),b
  8995  00528C  0E14               	movlw	20
  8996  00528E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  8997  005290  0E2E               	movlw	46
  8998  005292  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  8999  005294  0E45               	movlw	69
  9000  005296  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9001  005298  EC15  F024         	call	___flge	;wreg free
  9002  00529C  0100               	movlb	0	; () banked
  9003  00529E  B0D8               	btfsc	status,0,c
  9004  0052A0  EF54  F029         	goto	u9941
  9005  0052A4  EF56  F029         	goto	u9940
  9006  0052A8                     u9941:
  9007  0052A8  EF65  F029         	goto	l8968
  9008  0052AC                     u9940:
  9009  0052AC                     
  9010                           ; BSR set to: 0
  9011                           ;main.c: 90:             setSpeed = 0;
  9012  0052AC  0E00               	movlw	0
  9013  0052AE  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  9014  0052B0  0E00               	movlw	0
  9015  0052B2  6FEB               	movwf	_setSpeed& (0+255),b
  9016  0052B4                     
  9017                           ; BSR set to: 0
  9018                           ;main.c: 91:             setSteering(0, Front);
  9019  0052B4  0E00               	movlw	0
  9020  0052B6  6E1D               	movwf	(setSteering@steering+1)^0,c
  9021  0052B8  0E00               	movlw	0
  9022  0052BA  6E1C               	movwf	setSteering@steering^0,c
  9023  0052BC  0E03               	movlw	3
  9024  0052BE  6E1E               	movwf	setSteering@steeringMode^0,c
  9025  0052C0  EC40  F01E         	call	_setSteering	;wreg free
  9026  0052C4                     
  9027                           ;main.c: 92:             return 1;
  9028  0052C4  0E01               	movlw	1
  9029  0052C6  EF66  F029         	goto	l1257
  9030  0052CA                     l8968:
  9031                           
  9032                           ;main.c: 95:     return 0;
  9033  0052CA  0E00               	movlw	0
  9034  0052CC                     l1257:
  9035  0052CC  0012               	return		;funcret
  9036  0052CE                     __end_of_checkBatt:
  9037                           	callstack 0
  9038                           
  9039 ;; *************** function _setSteering *****************
  9040 ;; Defined at:
  9041 ;;		line 396 in file "main.c"
  9042 ;; Parameters:    Size  Location     Type
  9043 ;;  steering        2   27[COMRAM] short 
  9044 ;;  steeringMode    1   29[COMRAM] enum E17304
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  steeringB       2   34[COMRAM] short 
  9047 ;;  steeringF       2   32[COMRAM] short 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9057 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;Total ram usage:        9 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 9
  9064 ;; This function calls:
  9065 ;;		_PWM5_LoadDutyValue
  9066 ;;		_PWM6_LoadDutyValue
  9067 ;;		___awdiv
  9068 ;; This function is called by:
  9069 ;;		_loop
  9070 ;;		_checkBatt
  9071 ;;		_startAccell
  9072 ;;		_calcSteering
  9073 ;; This function uses a non-reentrant model
  9074 ;;
  9075                           
  9076                           	psect	text32
  9077  003C80                     __ptext32:
  9078                           	callstack 0
  9079  003C80                     _setSteering:
  9080                           	callstack 19
  9081  003C80  0E00               	movlw	0
  9082  003C82  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9083  003C84  0E00               	movlw	0
  9084  003C86  6E23               	movwf	setSteering@steeringB^0,c
  9085                           
  9086                           ;main.c: 398:     switch (steeringMode) {
  9087  003C88  EF94  F01E         	goto	l8750
  9088  003C8C                     l1382:
  9089                           
  9090                           ;main.c: 400:             steeringF = (+steering);
  9091  003C8C  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9092  003C90  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9093                           
  9094                           ;main.c: 401:             steeringB = -steering;
  9095  003C94  C01C  F01F         	movff	setSteering@steering,??_setSteering
  9096  003C98  C01D  F020         	movff	setSteering@steering+1,??_setSteering+1
  9097  003C9C  1E1F               	comf	??_setSteering^0,f,c
  9098  003C9E  1E20               	comf	(??_setSteering+1)^0,f,c
  9099  003CA0  4A1F               	infsnz	??_setSteering^0,f,c
  9100  003CA2  2A20               	incf	(??_setSteering+1)^0,f,c
  9101  003CA4  C01F  F023         	movff	??_setSteering,setSteering@steeringB
  9102  003CA8  C020  F024         	movff	??_setSteering+1,setSteering@steeringB+1
  9103                           
  9104                           ;main.c: 402:             break;
  9105  003CAC  EFB5  F01E         	goto	l8752
  9106  003CB0                     l1384:
  9107                           
  9108                           ;main.c: 404:             steeringF = (+steering);
  9109  003CB0  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9110  003CB4  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9111                           
  9112                           ;main.c: 405:             steeringB = (+steering);
  9113  003CB8  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9114  003CBC  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9115                           
  9116                           ;main.c: 406:             break;
  9117  003CC0  EFB5  F01E         	goto	l8752
  9118  003CC4                     l1385:
  9119                           
  9120                           ;main.c: 408:             steeringF = (+steering);
  9121  003CC4  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9122  003CC8  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9123  003CCC                     
  9124                           ;main.c: 409:             steeringB = (-steering / (2));
  9125  003CCC  C01C  F014         	movff	setSteering@steering,___awdiv@dividend
  9126  003CD0  C01D  F015         	movff	setSteering@steering+1,___awdiv@dividend+1
  9127  003CD4  0EFF               	movlw	255
  9128  003CD6  6E17               	movwf	(___awdiv@divisor+1)^0,c
  9129  003CD8  0EFE               	movlw	254
  9130  003CDA  6E16               	movwf	___awdiv@divisor^0,c
  9131  003CDC  EC67  F026         	call	___awdiv	;wreg free
  9132  003CE0  C014  F023         	movff	?___awdiv,setSteering@steeringB
  9133  003CE4  C015  F024         	movff	?___awdiv+1,setSteering@steeringB+1
  9134                           
  9135                           ;main.c: 410:             break;
  9136  003CE8  EFB5  F01E         	goto	l8752
  9137  003CEC                     l1386:
  9138                           
  9139                           ;main.c: 412:             steeringF = (+steering);
  9140  003CEC  C01C  F021         	movff	setSteering@steering,setSteering@steeringF
  9141  003CF0  C01D  F022         	movff	setSteering@steering+1,setSteering@steeringF+1
  9142  003CF4                     
  9143                           ;main.c: 413:             steeringB = 0;
  9144  003CF4  0E00               	movlw	0
  9145  003CF6  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9146  003CF8  0E00               	movlw	0
  9147  003CFA  6E23               	movwf	setSteering@steeringB^0,c
  9148                           
  9149                           ;main.c: 414:             break;
  9150  003CFC  EFB5  F01E         	goto	l8752
  9151  003D00                     l8742:
  9152                           
  9153                           ;main.c: 416:             steeringF = 0;
  9154  003D00  0E00               	movlw	0
  9155  003D02  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9156  003D04  0E00               	movlw	0
  9157  003D06  6E21               	movwf	setSteering@steeringF^0,c
  9158  003D08                     
  9159                           ;main.c: 417:             steeringB = (+steering);
  9160  003D08  C01C  F023         	movff	setSteering@steering,setSteering@steeringB
  9161  003D0C  C01D  F024         	movff	setSteering@steering+1,setSteering@steeringB+1
  9162                           
  9163                           ;main.c: 418:             break;
  9164  003D10  EFB5  F01E         	goto	l8752
  9165  003D14                     l8746:
  9166                           
  9167                           ;main.c: 420:             steeringF = 0;
  9168  003D14  0E00               	movlw	0
  9169  003D16  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9170  003D18  0E00               	movlw	0
  9171  003D1A  6E21               	movwf	setSteering@steeringF^0,c
  9172                           
  9173                           ;main.c: 421:             steeringB = 0;
  9174  003D1C  0E00               	movlw	0
  9175  003D1E  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9176  003D20  0E00               	movlw	0
  9177  003D22  6E23               	movwf	setSteering@steeringB^0,c
  9178                           
  9179                           ;main.c: 422:             break;
  9180  003D24  EFB5  F01E         	goto	l8752
  9181  003D28                     l8750:
  9182  003D28  501E               	movf	setSteering@steeringMode^0,w,c
  9183  003D2A  6E1F               	movwf	??_setSteering^0,c
  9184  003D2C  6A20               	clrf	(??_setSteering+1)^0,c
  9185                           
  9186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9187                           ; Switch size 1, requested type "simple"
  9188                           ; Number of cases is 1, Range of values is 0 to 0
  9189                           ; switch strategies available:
  9190                           ; Name         Instructions Cycles
  9191                           ; simple_byte            4     3 (average)
  9192                           ;	Chosen strategy is simple_byte
  9193  003D2E  5020               	movf	(??_setSteering+1)^0,w,c
  9194  003D30  0A00               	xorlw	0	; case 0
  9195  003D32  B4D8               	btfsc	status,2,c
  9196  003D34  EF9E  F01E         	goto	l9314
  9197  003D38  EF8A  F01E         	goto	l8746
  9198  003D3C                     l9314:
  9199                           
  9200                           ; Switch size 1, requested type "simple"
  9201                           ; Number of cases is 5, Range of values is 0 to 4
  9202                           ; switch strategies available:
  9203                           ; Name         Instructions Cycles
  9204                           ; simple_byte           16     9 (average)
  9205                           ;	Chosen strategy is simple_byte
  9206  003D3C  501F               	movf	??_setSteering^0,w,c
  9207  003D3E  0A00               	xorlw	0	; case 0
  9208  003D40  B4D8               	btfsc	status,2,c
  9209  003D42  EF46  F01E         	goto	l1382
  9210  003D46  0A01               	xorlw	1	; case 1
  9211  003D48  B4D8               	btfsc	status,2,c
  9212  003D4A  EF58  F01E         	goto	l1384
  9213  003D4E  0A03               	xorlw	3	; case 2
  9214  003D50  B4D8               	btfsc	status,2,c
  9215  003D52  EF62  F01E         	goto	l1385
  9216  003D56  0A01               	xorlw	1	; case 3
  9217  003D58  B4D8               	btfsc	status,2,c
  9218  003D5A  EF76  F01E         	goto	l1386
  9219  003D5E  0A07               	xorlw	7	; case 4
  9220  003D60  B4D8               	btfsc	status,2,c
  9221  003D62  EF80  F01E         	goto	l8742
  9222  003D66  EF8A  F01E         	goto	l8746
  9223  003D6A                     l8752:
  9224                           
  9225                           ;main.c: 425:     if (steeringF > ((65))) {
  9226  003D6A  BE22               	btfsc	(setSteering@steeringF+1)^0,7,c
  9227  003D6C  EFC1  F01E         	goto	u9671
  9228  003D70  5022               	movf	(setSteering@steeringF+1)^0,w,c
  9229  003D72  E109               	bnz	u9670
  9230  003D74  0E42               	movlw	66
  9231  003D76  5C21               	subwf	setSteering@steeringF^0,w,c
  9232  003D78  A0D8               	btfss	status,0,c
  9233  003D7A  EFC1  F01E         	goto	u9671
  9234  003D7E  EFC3  F01E         	goto	u9670
  9235  003D82                     u9671:
  9236  003D82  EFC9  F01E         	goto	l8756
  9237  003D86                     u9670:
  9238  003D86                     
  9239                           ;main.c: 426:         steeringF = ((65));
  9240  003D86  0E00               	movlw	0
  9241  003D88  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9242  003D8A  0E41               	movlw	65
  9243  003D8C  6E21               	movwf	setSteering@steeringF^0,c
  9244                           
  9245                           ;main.c: 427:     } else if (steeringF < (-(65))) {
  9246  003D8E  EFDB  F01E         	goto	l8760
  9247  003D92                     l8756:
  9248  003D92  AE22               	btfss	(setSteering@steeringF+1)^0,7,c
  9249  003D94  EFD5  F01E         	goto	u9681
  9250  003D98  0EBF               	movlw	191
  9251  003D9A  5C21               	subwf	setSteering@steeringF^0,w,c
  9252  003D9C  0EFF               	movlw	255
  9253  003D9E  5822               	subwfb	(setSteering@steeringF+1)^0,w,c
  9254  003DA0  B0D8               	btfsc	status,0,c
  9255  003DA2  EFD5  F01E         	goto	u9681
  9256  003DA6  EFD7  F01E         	goto	u9680
  9257  003DAA                     u9681:
  9258  003DAA  EFDB  F01E         	goto	l8760
  9259  003DAE                     u9680:
  9260  003DAE                     
  9261                           ;main.c: 428:         steeringF = (-(65));
  9262  003DAE  0EFF               	movlw	255
  9263  003DB0  6E22               	movwf	(setSteering@steeringF+1)^0,c
  9264  003DB2  0EBF               	movlw	191
  9265  003DB4  6E21               	movwf	setSteering@steeringF^0,c
  9266  003DB6                     l8760:
  9267                           
  9268                           ;main.c: 431:     if (steeringB > ((40))) {
  9269  003DB6  BE24               	btfsc	(setSteering@steeringB+1)^0,7,c
  9270  003DB8  EFE7  F01E         	goto	u9691
  9271  003DBC  5024               	movf	(setSteering@steeringB+1)^0,w,c
  9272  003DBE  E109               	bnz	u9690
  9273  003DC0  0E29               	movlw	41
  9274  003DC2  5C23               	subwf	setSteering@steeringB^0,w,c
  9275  003DC4  A0D8               	btfss	status,0,c
  9276  003DC6  EFE7  F01E         	goto	u9691
  9277  003DCA  EFE9  F01E         	goto	u9690
  9278  003DCE                     u9691:
  9279  003DCE  EFEF  F01E         	goto	l8764
  9280  003DD2                     u9690:
  9281  003DD2                     
  9282                           ;main.c: 432:         steeringB = ((40));
  9283  003DD2  0E00               	movlw	0
  9284  003DD4  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9285  003DD6  0E28               	movlw	40
  9286  003DD8  6E23               	movwf	setSteering@steeringB^0,c
  9287                           
  9288                           ;main.c: 433:     } else if (steeringB < (-(40))) {
  9289  003DDA  EF01  F01F         	goto	l8768
  9290  003DDE                     l8764:
  9291  003DDE  AE24               	btfss	(setSteering@steeringB+1)^0,7,c
  9292  003DE0  EFFB  F01E         	goto	u9701
  9293  003DE4  0ED8               	movlw	216
  9294  003DE6  5C23               	subwf	setSteering@steeringB^0,w,c
  9295  003DE8  0EFF               	movlw	255
  9296  003DEA  5824               	subwfb	(setSteering@steeringB+1)^0,w,c
  9297  003DEC  B0D8               	btfsc	status,0,c
  9298  003DEE  EFFB  F01E         	goto	u9701
  9299  003DF2  EFFD  F01E         	goto	u9700
  9300  003DF6                     u9701:
  9301  003DF6  EF01  F01F         	goto	l8768
  9302  003DFA                     u9700:
  9303  003DFA                     
  9304                           ;main.c: 434:         steeringB = (-(40));
  9305  003DFA  0EFF               	movlw	255
  9306  003DFC  6E24               	movwf	(setSteering@steeringB+1)^0,c
  9307  003DFE  0ED8               	movlw	216
  9308  003E00  6E23               	movwf	setSteering@steeringB^0,c
  9309  003E02                     l8768:
  9310                           
  9311                           ;main.c: 438:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  9312  003E02  0E60               	movlw	96
  9313  003E04  2421               	addwf	setSteering@steeringF^0,w,c
  9314  003E06  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  9315  003E08  0E01               	movlw	1
  9316  003E0A  2022               	addwfc	(setSteering@steeringF+1)^0,w,c
  9317  003E0C  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  9318  003E0E  EC96  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  9319  003E12                     
  9320                           ;main.c: 439:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  9321  003E12  0E65               	movlw	101
  9322  003E14  2423               	addwf	setSteering@steeringB^0,w,c
  9323  003E16  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  9324  003E18  0E01               	movlw	1
  9325  003E1A  2024               	addwfc	(setSteering@steeringB+1)^0,w,c
  9326  003E1C  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  9327  003E1E  ECB0  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  9328  003E22  0012               	return		;funcret
  9329  003E24                     __end_of_setSteering:
  9330                           	callstack 0
  9331                           
  9332 ;; *************** function _PWM6_LoadDutyValue *****************
  9333 ;; Defined at:
  9334 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;Total ram usage:        4 bytes
  9353 ;; Hardware stack levels used: 1
  9354 ;; Hardware stack levels required when called: 8
  9355 ;; This function calls:
  9356 ;;		Nothing
  9357 ;; This function is called by:
  9358 ;;		_setSteering
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           
  9362                           	psect	text33
  9363  00592C                     __ptext33:
  9364                           	callstack 0
  9365  00592C                     _PWM6_LoadDutyValue:
  9366                           	callstack 19
  9367  00592C                     
  9368                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9369  00592C  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9370  005930  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9371  005934  90D8               	bcf	status,0,c
  9372  005936  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9373  005938  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9374  00593A  90D8               	bcf	status,0,c
  9375  00593C  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9376  00593E  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9377  005940  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9378  005942  6E69               	movwf	105,c	;volatile
  9379                           
  9380                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9381  005944  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9382  005948  0E03               	movlw	3
  9383  00594A  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9384  00594C  0E06               	movlw	6
  9385  00594E  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9386  005950                     u9535:
  9387  005950  90D8               	bcf	status,0,c
  9388  005952  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9389  005954  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9390  005956  EFA8  F02C         	goto	u9535
  9391  00595A  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9392  00595C  6E68               	movwf	104,c	;volatile
  9393  00595E  0012               	return		;funcret
  9394  005960                     __end_of_PWM6_LoadDutyValue:
  9395                           	callstack 0
  9396                           
  9397 ;; *************** function _PWM5_LoadDutyValue *****************
  9398 ;; Defined at:
  9399 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9417 ;;Total ram usage:        4 bytes
  9418 ;; Hardware stack levels used: 1
  9419 ;; Hardware stack levels required when called: 8
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_setSteering
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text34
  9428  005960                     __ptext34:
  9429                           	callstack 0
  9430  005960                     _PWM5_LoadDutyValue:
  9431                           	callstack 19
  9432  005960                     
  9433                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9434  005960  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9435  005964  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9436  005968  90D8               	bcf	status,0,c
  9437  00596A  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9438  00596C  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9439  00596E  90D8               	bcf	status,0,c
  9440  005970  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9441  005972  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9442  005974  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9443  005976  6E6D               	movwf	109,c	;volatile
  9444                           
  9445                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9446  005978  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9447  00597C  0E03               	movlw	3
  9448  00597E  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9449  005980  0E06               	movlw	6
  9450  005982  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9451  005984                     u9525:
  9452  005984  90D8               	bcf	status,0,c
  9453  005986  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9454  005988  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9455  00598A  EFC2  F02C         	goto	u9525
  9456  00598E  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9457  005990  6E6C               	movwf	108,c	;volatile
  9458  005992  0012               	return		;funcret
  9459  005994                     __end_of_PWM5_LoadDutyValue:
  9460                           	callstack 0
  9461                           
  9462 ;; *************** function _getBatteryVoltage *****************
  9463 ;; Defined at:
  9464 ;;		line 78 in file "main.c"
  9465 ;; Parameters:    Size  Location     Type
  9466 ;;		None
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;		None
  9469 ;; Return value:  Size  Location     Type
  9470 ;;                  1    wreg      void 
  9471 ;; Registers used:
  9472 ;;		wreg, status,2, status,0, cstack
  9473 ;; Tracked objects:
  9474 ;;		On entry : 0/0
  9475 ;;		On exit  : 0/0
  9476 ;;		Unchanged: 0/0
  9477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;Total ram usage:        0 bytes
  9483 ;; Hardware stack levels used: 1
  9484 ;; Hardware stack levels required when called: 9
  9485 ;; This function calls:
  9486 ;;		_ADCC_GetSingleConversion
  9487 ;; This function is called by:
  9488 ;;		_loop
  9489 ;;		_checkBatt
  9490 ;; This function uses a non-reentrant model
  9491 ;;
  9492                           
  9493                           	psect	text35
  9494  005DFE                     __ptext35:
  9495                           	callstack 0
  9496  005DFE                     _getBatteryVoltage:
  9497                           	callstack 20
  9498  005DFE                     
  9499                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9500  005DFE  0E22               	movlw	34
  9501  005E00  EC32  F02D         	call	_ADCC_GetSingleConversion
  9502  005E04  C014  F0E5         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9503  005E08  C015  F0E6         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9504  005E0C  0012               	return		;funcret
  9505  005E0E                     __end_of_getBatteryVoltage:
  9506                           	callstack 0
  9507                           
  9508 ;; *************** function _ADCC_GetSingleConversion *****************
  9509 ;; Defined at:
  9510 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  channel         1    wreg     enum E16058
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  channel         1   23[COMRAM] enum E16058
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  2   19[COMRAM] unsigned short 
  9517 ;; Registers used:
  9518 ;;		wreg, status,2, status,0
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;Total ram usage:        5 bytes
  9529 ;; Hardware stack levels used: 1
  9530 ;; Hardware stack levels required when called: 8
  9531 ;; This function calls:
  9532 ;;		Nothing
  9533 ;; This function is called by:
  9534 ;;		_getBatteryVoltage
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text36
  9539  005A64                     __ptext36:
  9540                           	callstack 0
  9541  005A64                     _ADCC_GetSingleConversion:
  9542                           	callstack 20
  9543                           
  9544                           ;incstack = 0
  9545                           ;ADCC_GetSingleConversion@channel stored from wreg
  9546  005A64  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9547  005A66                     
  9548                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9549  005A66  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9550  005A6C                     
  9551                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9552  005A6C  013E               	movlb	62	; () banked
  9553  005A6E  8FF8               	bsf	248,7,b	;volatile
  9554  005A70                     
  9555                           ; BSR set to: 62
  9556                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9557  005A70  9DF8               	bcf	248,6,b	;volatile
  9558  005A72                     
  9559                           ; BSR set to: 62
  9560                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9561  005A72  81F8               	bsf	248,0,b	;volatile
  9562  005A74                     l1054:
  9563                           
  9564                           ; BSR set to: 62
  9565                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9566  005A74  B1F8               	btfsc	248,0,b	;volatile
  9567  005A76  EF3F  F02D         	goto	u6101
  9568  005A7A  EF41  F02D         	goto	u6100
  9569  005A7E                     u6101:
  9570  005A7E  EF3A  F02D         	goto	l1054
  9571  005A82                     u6100:
  9572  005A82                     
  9573                           ; BSR set to: 62
  9574                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9575  005A82  51F0               	movf	240,w,b	;volatile
  9576  005A84  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9577  005A86  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9578  005A88  51EF               	movf	239,w,b	;volatile
  9579  005A8A  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9580  005A8C  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9581  005A8E  0E00               	movlw	0
  9582  005A90  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9583  005A92  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9584  005A94                     
  9585                           ; BSR set to: 62
  9586  005A94  0012               	return		;funcret
  9587  005A96                     __end_of_ADCC_GetSingleConversion:
  9588                           	callstack 0
  9589                           
  9590 ;; *************** function ___flge *****************
  9591 ;; Defined at:
  9592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;  ff1             4   13[BANK0 ] unsigned short 
  9595 ;;  ff2             4   17[BANK0 ] unsigned short 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;		None
  9598 ;; Return value:  Size  Location     Type
  9599 ;;		None               void
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9607 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;Total ram usage:       12 bytes
  9612 ;; Hardware stack levels used: 1
  9613 ;; Hardware stack levels required when called: 8
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_loop
  9618 ;;		_checkBatt
  9619 ;;		_startAccell
  9620 ;;		_efgtoa
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text37
  9625  00482A                     __ptext37:
  9626                           	callstack 0
  9627  00482A                     ___flge:
  9628                           	callstack 16
  9629  00482A  0E00               	movlw	0
  9630  00482C  0100               	movlb	0	; () banked
  9631  00482E  156D               	andwf	___flge@ff1& (0+255),w,b
  9632  004830  6E36               	movwf	??___flge^0,c
  9633  004832  0E00               	movlw	0
  9634  004834  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9635  004836  6E37               	movwf	(??___flge+1)^0,c
  9636  004838  0E80               	movlw	128
  9637  00483A  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9638  00483C  6E38               	movwf	(??___flge+2)^0,c
  9639  00483E  0E7F               	movlw	127
  9640  004840  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9641  004842  6E39               	movwf	(??___flge+3)^0,c
  9642  004844  5036               	movf	??___flge^0,w,c
  9643  004846  1037               	iorwf	(??___flge+1)^0,w,c
  9644  004848  1038               	iorwf	(??___flge+2)^0,w,c
  9645  00484A  1039               	iorwf	(??___flge+3)^0,w,c
  9646  00484C  A4D8               	btfss	status,2,c
  9647  00484E  EF2B  F024         	goto	u8381
  9648  004852  EF2D  F024         	goto	u8380
  9649  004856                     u8381:
  9650  004856  EF35  F024         	goto	l8098
  9651  00485A                     u8380:
  9652  00485A                     
  9653                           ; BSR set to: 0
  9654  00485A  0E00               	movlw	0
  9655  00485C  6F6D               	movwf	___flge@ff1& (0+255),b
  9656  00485E  0E00               	movlw	0
  9657  004860  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9658  004862  0E00               	movlw	0
  9659  004864  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9660  004866  0E00               	movlw	0
  9661  004868  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9662  00486A                     l8098:
  9663                           
  9664                           ; BSR set to: 0
  9665  00486A  0E00               	movlw	0
  9666  00486C  1571               	andwf	___flge@ff2& (0+255),w,b
  9667  00486E  6E36               	movwf	??___flge^0,c
  9668  004870  0E00               	movlw	0
  9669  004872  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9670  004874  6E37               	movwf	(??___flge+1)^0,c
  9671  004876  0E80               	movlw	128
  9672  004878  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9673  00487A  6E38               	movwf	(??___flge+2)^0,c
  9674  00487C  0E7F               	movlw	127
  9675  00487E  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9676  004880  6E39               	movwf	(??___flge+3)^0,c
  9677  004882  5036               	movf	??___flge^0,w,c
  9678  004884  1037               	iorwf	(??___flge+1)^0,w,c
  9679  004886  1038               	iorwf	(??___flge+2)^0,w,c
  9680  004888  1039               	iorwf	(??___flge+3)^0,w,c
  9681  00488A  A4D8               	btfss	status,2,c
  9682  00488C  EF4A  F024         	goto	u8391
  9683  004890  EF4C  F024         	goto	u8390
  9684  004894                     u8391:
  9685  004894  EF54  F024         	goto	l8102
  9686  004898                     u8390:
  9687  004898                     
  9688                           ; BSR set to: 0
  9689  004898  0E00               	movlw	0
  9690  00489A  6F71               	movwf	___flge@ff2& (0+255),b
  9691  00489C  0E00               	movlw	0
  9692  00489E  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9693  0048A0  0E00               	movlw	0
  9694  0048A2  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9695  0048A4  0E00               	movlw	0
  9696  0048A6  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9697  0048A8                     l8102:
  9698                           
  9699                           ; BSR set to: 0
  9700  0048A8  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9701  0048AA  EF59  F024         	goto	u8401
  9702  0048AE  EF5B  F024         	goto	u8400
  9703  0048B2                     u8401:
  9704  0048B2  EF64  F024         	goto	l8106
  9705  0048B6                     u8400:
  9706  0048B6                     
  9707                           ; BSR set to: 0
  9708  0048B6  6D6D               	negf	___flge@ff1& (0+255),b
  9709  0048B8  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9710  0048BA  B0D8               	btfsc	status,0,c
  9711  0048BC  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9712  0048BE  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9713  0048C0  B0D8               	btfsc	status,0,c
  9714  0048C2  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9715  0048C4  0E80               	movlw	128
  9716  0048C6  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9717  0048C8                     l8106:
  9718                           
  9719                           ; BSR set to: 0
  9720  0048C8  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9721  0048CA  EF69  F024         	goto	u8411
  9722  0048CE  EF6B  F024         	goto	u8410
  9723  0048D2                     u8411:
  9724  0048D2  EF74  F024         	goto	l1663
  9725  0048D6                     u8410:
  9726  0048D6                     
  9727                           ; BSR set to: 0
  9728  0048D6  6D71               	negf	___flge@ff2& (0+255),b
  9729  0048D8  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9730  0048DA  B0D8               	btfsc	status,0,c
  9731  0048DC  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9732  0048DE  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9733  0048E0  B0D8               	btfsc	status,0,c
  9734  0048E2  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9735  0048E4  0E80               	movlw	128
  9736  0048E6  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9737  0048E8                     l1663:
  9738                           
  9739                           ; BSR set to: 0
  9740  0048E8  0E00               	movlw	0
  9741  0048EA  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9742  0048EC  0E00               	movlw	0
  9743  0048EE  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9744  0048F0  0E00               	movlw	0
  9745  0048F2  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9746  0048F4  0E80               	movlw	128
  9747  0048F6  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9748  0048F8  0E00               	movlw	0
  9749  0048FA  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9750  0048FC  0E00               	movlw	0
  9751  0048FE  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9752  004900  0E00               	movlw	0
  9753  004902  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9754  004904  0E80               	movlw	128
  9755  004906  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9756  004908  5171               	movf	___flge@ff2& (0+255),w,b
  9757  00490A  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9758  00490C  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9759  00490E  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9760  004910  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9761  004912  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9762  004914  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9763  004916  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9764  004918  B0D8               	btfsc	status,0,c
  9765  00491A  EF91  F024         	goto	u8421
  9766  00491E  EF93  F024         	goto	u8420
  9767  004922                     u8421:
  9768  004922  EF96  F024         	goto	l8112
  9769  004926                     u8420:
  9770  004926                     
  9771                           ; BSR set to: 0
  9772  004926  90D8               	bcf	status,0,c
  9773  004928  EF97  F024         	goto	l1668
  9774  00492C                     l8112:
  9775                           
  9776                           ; BSR set to: 0
  9777  00492C  80D8               	bsf	status,0,c
  9778  00492E                     l1668:
  9779                           
  9780                           ; BSR set to: 0
  9781  00492E  0012               	return		;funcret
  9782  004930                     __end_of___flge:
  9783                           	callstack 0
  9784                           
  9785 ;; *************** function _calcSpeed *****************
  9786 ;; Defined at:
  9787 ;;		line 288 in file "main.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;		None
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;  speed           2   39[BANK0 ] short 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1    wreg      void 
  9794 ;; Registers used:
  9795 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:        6 bytes
  9806 ;; Hardware stack levels used: 1
  9807 ;; Hardware stack levels required when called: 9
  9808 ;; This function calls:
  9809 ;;		___fladd
  9810 ;;		___flmul
  9811 ;;		___fltol
  9812 ;;		___xxtofl
  9813 ;; This function is called by:
  9814 ;;		_loop
  9815 ;; This function uses a non-reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text38
  9819  0038C2                     __ptext38:
  9820                           	callstack 0
  9821  0038C2                     _calcSpeed:
  9822                           	callstack 20
  9823  0038C2                     
  9824                           ;main.c: 289:     int16_t speed = 0;
  9825  0038C2  0E00               	movlw	0
  9826  0038C4  0100               	movlb	0	; () banked
  9827  0038C6  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9828  0038C8  0E00               	movlw	0
  9829  0038CA  6F87               	movwf	calcSpeed@speed& (0+255),b
  9830                           
  9831                           ;main.c: 291:     switch (driveMode) {
  9832  0038CC  EF17  F01D         	goto	l9086
  9833  0038D0                     l9050:
  9834                           
  9835                           ; BSR set to: 0
  9836                           ;main.c: 293:             if (distFront > (30)) {
  9837  0038D0  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9838  0038D2  E109               	bnz	u10120
  9839  0038D4  0E1F               	movlw	31
  9840  0038D6  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9841  0038D8  A0D8               	btfss	status,0,c
  9842  0038DA  EF71  F01C         	goto	u10121
  9843  0038DE  EF73  F01C         	goto	u10120
  9844  0038E2                     u10121:
  9845  0038E2  EF75  F01C         	goto	l9054
  9846  0038E6                     u10120:
  9847  0038E6                     
  9848                           ; BSR set to: 0
  9849                           ;main.c: 294:                 driveMode = Straight;
  9850  0038E6  0E01               	movlw	1
  9851  0038E8  6FFE               	movwf	_driveMode& (0+255),b
  9852  0038EA                     l9054:
  9853                           
  9854                           ; BSR set to: 0
  9855                           ;main.c: 296:             if (setSpeed > (100)) {
  9856  0038EA  BFEC               	btfsc	(_setSpeed+1)& (0+255),7,b
  9857  0038EC  EF81  F01C         	goto	u10131
  9858  0038F0  51EC               	movf	(_setSpeed+1)& (0+255),w,b
  9859  0038F2  E109               	bnz	u10130
  9860  0038F4  0E65               	movlw	101
  9861  0038F6  5DEB               	subwf	_setSpeed& (0+255),w,b
  9862  0038F8  A0D8               	btfss	status,0,c
  9863  0038FA  EF81  F01C         	goto	u10131
  9864  0038FE  EF83  F01C         	goto	u10130
  9865  003902                     u10131:
  9866  003902  EF9E  F01C         	goto	l9064
  9867  003906                     u10130:
  9868  003906                     
  9869                           ; BSR set to: 0
  9870                           ;main.c: 297:                     speed = setSpeed;
  9871  003906  C0EB  F087         	movff	_setSpeed,calcSpeed@speed
  9872  00390A  C0EC  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9873  00390E                     
  9874                           ; BSR set to: 0
  9875                           ;main.c: 298:                 if (distFront < (15)) {
  9876  00390E  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9877  003910  E107               	bnz	u10141
  9878  003912  0E0F               	movlw	15
  9879  003914  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9880  003916  B0D8               	btfsc	status,0,c
  9881  003918  EF90  F01C         	goto	u10141
  9882  00391C  EF92  F01C         	goto	u10140
  9883  003920                     u10141:
  9884  003920  EF98  F01C         	goto	l9062
  9885  003924                     u10140:
  9886  003924                     
  9887                           ; BSR set to: 0
  9888                           ;main.c: 299:                     speed -= 4;
  9889  003924  0EFC               	movlw	252
  9890  003926  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9891  003928  0EFF               	movlw	255
  9892  00392A  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9893                           
  9894                           ;main.c: 300:                 } else {
  9895  00392C  EF3C  F01D         	goto	l9088
  9896  003930                     l9062:
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;main.c: 301:                     speed -= 2;
  9900  003930  0EFE               	movlw	254
  9901  003932  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9902  003934  0EFF               	movlw	255
  9903  003936  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9904  003938  EF3C  F01D         	goto	l9088
  9905  00393C                     l9064:
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;main.c: 304:                 speed = (100);
  9909  00393C  0E00               	movlw	0
  9910  00393E  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9911  003940  0E64               	movlw	100
  9912  003942  6F87               	movwf	calcSpeed@speed& (0+255),b
  9913  003944  EF3C  F01D         	goto	l9088
  9914  003948                     l9066:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;main.c: 308:             if (distFront < (30)) {
  9918  003948  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9919  00394A  E107               	bnz	u10151
  9920  00394C  0E1E               	movlw	30
  9921  00394E  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9922  003950  B0D8               	btfsc	status,0,c
  9923  003952  EFAD  F01C         	goto	u10151
  9924  003956  EFAF  F01C         	goto	u10150
  9925  00395A                     u10151:
  9926  00395A  EFB1  F01C         	goto	l9070
  9927  00395E                     u10150:
  9928  00395E                     
  9929                           ; BSR set to: 0
  9930                           ;main.c: 309:                 driveMode = Brake;
  9931  00395E  0E02               	movlw	2
  9932  003960  6FFE               	movwf	_driveMode& (0+255),b
  9933  003962                     l9070:
  9934                           
  9935                           ; BSR set to: 0
  9936                           ;main.c: 312:             if (distFront >= (150)) {
  9937  003962  51FD               	movf	(_distFront+1)& (0+255),w,b	;volatile
  9938  003964  E109               	bnz	u10160
  9939  003966  0E96               	movlw	150
  9940  003968  5DFC               	subwf	_distFront& (0+255),w,b	;volatile
  9941  00396A  A0D8               	btfss	status,0,c
  9942  00396C  EFBA  F01C         	goto	u10161
  9943  003970  EFBC  F01C         	goto	u10160
  9944  003974                     u10161:
  9945  003974  EF05  F01D         	goto	l9074
  9946  003978                     u10160:
  9947  003978                     
  9948                           ; BSR set to: 0
  9949                           ;main.c: 313:                 speed = (int16_t) ((0.5) * (distFront - (150)) + (275));
  9950  003978  0E00               	movlw	0
  9951  00397A  6F71               	movwf	___fladd@a& (0+255),b
  9952  00397C  0E80               	movlw	128
  9953  00397E  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9954  003980  0E89               	movlw	137
  9955  003982  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9956  003984  0E43               	movlw	67
  9957  003986  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9958  003988  0E00               	movlw	0
  9959  00398A  6E2E               	movwf	___flmul@a^0,c
  9960  00398C  0E00               	movlw	0
  9961  00398E  6E2F               	movwf	(___flmul@a+1)^0,c
  9962  003990  0E00               	movlw	0
  9963  003992  6E30               	movwf	(___flmul@a+2)^0,c
  9964  003994  0E3F               	movlw	63
  9965  003996  6E31               	movwf	(___flmul@a+3)^0,c
  9966  003998  0E6A               	movlw	106
  9967  00399A  6F83               	movwf	??_calcSpeed& (0+255),b
  9968  00399C  0EFF               	movlw	255
  9969  00399E  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9970  0039A0  C0FC  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9971  0039A4  C0FD  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
  9972  0039A8  5183               	movf	??_calcSpeed& (0+255),w,b
  9973  0039AA  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
  9974  0039AC  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
  9975  0039AE  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  9976  0039B0  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  9977  0039B4  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  9978  0039B8  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9979  0039BA  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9980  0039BC  0E00               	movlw	0
  9981  0039BE  EC66  F01D         	call	___xxtofl
  9982  0039C2  C01C  F02A         	movff	?___xxtofl,___flmul@b
  9983  0039C6  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  9984  0039CA  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  9985  0039CE  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  9986  0039D2  EC82  F013         	call	___flmul	;wreg free
  9987  0039D6  C02A  F06D         	movff	?___flmul,___fladd@b
  9988  0039DA  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
  9989  0039DE  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
  9990  0039E2  C02D  F070         	movff	?___flmul+3,___fladd@b+3
  9991  0039E6  EC21  F011         	call	___fladd	;wreg free
  9992  0039EA  C06D  F079         	movff	?___fladd,___fltol@f1
  9993  0039EE  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
  9994  0039F2  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
  9995  0039F6  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
  9996  0039FA  EC0E  F023         	call	___fltol	;wreg free
  9997  0039FE  C079  F087         	movff	?___fltol,calcSpeed@speed
  9998  003A02  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
  9999                           
 10000                           ;main.c: 314:             } else {
 10001  003A06  EF3C  F01D         	goto	l9088
 10002  003A0A                     l9074:
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;main.c: 315:                 speed = (275);
 10006  003A0A  0E01               	movlw	1
 10007  003A0C  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10008  003A0E  0E13               	movlw	19
 10009  003A10  6F87               	movwf	calcSpeed@speed& (0+255),b
 10010  003A12  EF3C  F01D         	goto	l9088
 10011  003A16                     l9076:
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;main.c: 320:             speed = (-125);
 10015  003A16  0EFF               	movlw	255
 10016  003A18  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10017  003A1A  0E83               	movlw	131
 10018  003A1C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10019                           
 10020                           ;main.c: 321:             break;
 10021  003A1E  EF3C  F01D         	goto	l9088
 10022  003A22                     l9080:
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;main.c: 326:             speed = (200);
 10026  003A22  0E00               	movlw	0
 10027  003A24  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10028  003A26  0EC8               	movlw	200
 10029  003A28  6F87               	movwf	calcSpeed@speed& (0+255),b
 10030                           
 10031                           ;main.c: 327:             break;
 10032  003A2A  EF3C  F01D         	goto	l9088
 10033  003A2E                     l9086:
 10034                           
 10035                           ; BSR set to: 0
 10036  003A2E  51FE               	movf	_driveMode& (0+255),w,b
 10037  003A30  6F83               	movwf	??_calcSpeed& (0+255),b
 10038  003A32  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10039                           
 10040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10041                           ; Switch size 1, requested type "simple"
 10042                           ; Number of cases is 1, Range of values is 0 to 0
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; simple_byte            4     3 (average)
 10046                           ;	Chosen strategy is simple_byte
 10047  003A34  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10048  003A36  0A00               	xorlw	0	; case 0
 10049  003A38  B4D8               	btfsc	status,2,c
 10050  003A3A  EF21  F01D         	goto	l9316
 10051  003A3E  EF3C  F01D         	goto	l9088
 10052  003A42                     l9316:
 10053                           
 10054                           ; BSR set to: 0
 10055                           ; Switch size 1, requested type "simple"
 10056                           ; Number of cases is 6, Range of values is 1 to 6
 10057                           ; switch strategies available:
 10058                           ; Name         Instructions Cycles
 10059                           ; simple_byte           19    10 (average)
 10060                           ;	Chosen strategy is simple_byte
 10061  003A42  5183               	movf	??_calcSpeed& (0+255),w,b
 10062  003A44  0A01               	xorlw	1	; case 1
 10063  003A46  B4D8               	btfsc	status,2,c
 10064  003A48  EFA4  F01C         	goto	l9066
 10065  003A4C  0A03               	xorlw	3	; case 2
 10066  003A4E  B4D8               	btfsc	status,2,c
 10067  003A50  EF68  F01C         	goto	l9050
 10068  003A54  0A01               	xorlw	1	; case 3
 10069  003A56  B4D8               	btfsc	status,2,c
 10070  003A58  EF0B  F01D         	goto	l9076
 10071  003A5C  0A07               	xorlw	7	; case 4
 10072  003A5E  B4D8               	btfsc	status,2,c
 10073  003A60  EF0B  F01D         	goto	l9076
 10074  003A64  0A01               	xorlw	1	; case 5
 10075  003A66  B4D8               	btfsc	status,2,c
 10076  003A68  EF11  F01D         	goto	l9080
 10077  003A6C  0A03               	xorlw	3	; case 6
 10078  003A6E  B4D8               	btfsc	status,2,c
 10079  003A70  EF11  F01D         	goto	l9080
 10080  003A74  EF3C  F01D         	goto	l9088
 10081  003A78                     l9088:
 10082                           
 10083                           ;main.c: 333:     if (speed > (400)) {
 10084  003A78  0100               	movlb	0	; () banked
 10085  003A7A  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10086  003A7C  EF49  F01D         	goto	u10171
 10087  003A80  0E91               	movlw	145
 10088  003A82  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10089  003A84  0E01               	movlw	1
 10090  003A86  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10091  003A88  A0D8               	btfss	status,0,c
 10092  003A8A  EF49  F01D         	goto	u10171
 10093  003A8E  EF4B  F01D         	goto	u10170
 10094  003A92                     u10171:
 10095  003A92  EF4F  F01D         	goto	l9092
 10096  003A96                     u10170:
 10097  003A96                     
 10098                           ; BSR set to: 0
 10099                           ;main.c: 334:         speed = (400);
 10100  003A96  0E01               	movlw	1
 10101  003A98  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10102  003A9A  0E90               	movlw	144
 10103  003A9C  6F87               	movwf	calcSpeed@speed& (0+255),b
 10104  003A9E                     l9092:
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;main.c: 336:     if (speed < (-250)) {
 10108  003A9E  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10109  003AA0  EF5B  F01D         	goto	u10181
 10110  003AA4  0E06               	movlw	6
 10111  003AA6  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10112  003AA8  0EFF               	movlw	255
 10113  003AAA  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10114  003AAC  B0D8               	btfsc	status,0,c
 10115  003AAE  EF5B  F01D         	goto	u10181
 10116  003AB2  EF5D  F01D         	goto	u10180
 10117  003AB6                     u10181:
 10118  003AB6  EF61  F01D         	goto	l9096
 10119  003ABA                     u10180:
 10120  003ABA                     
 10121                           ; BSR set to: 0
 10122                           ;main.c: 337:         speed = (-250);
 10123  003ABA  0EFF               	movlw	255
 10124  003ABC  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10125  003ABE  0E06               	movlw	6
 10126  003AC0  6F87               	movwf	calcSpeed@speed& (0+255),b
 10127  003AC2                     l9096:
 10128                           
 10129                           ; BSR set to: 0
 10130                           ;main.c: 339:     setSpeed = speed;
 10131  003AC2  C087  F0EB         	movff	calcSpeed@speed,_setSpeed
 10132  003AC6  C088  F0EC         	movff	calcSpeed@speed+1,_setSpeed+1
 10133  003ACA                     
 10134                           ; BSR set to: 0
 10135  003ACA  0012               	return		;funcret
 10136  003ACC                     __end_of_calcSpeed:
 10137                           	callstack 0
 10138                           
 10139 ;; *************** function ___fladd *****************
 10140 ;; Defined at:
 10141 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  b               4   13[BANK0 ] void 
 10144 ;;  a               4   17[BANK0 ] void 
 10145 ;; Auto vars:     Size  Location     Type
 10146 ;;  grs             1   24[BANK0 ] unsigned char 
 10147 ;;  bexp            1   23[BANK0 ] unsigned char 
 10148 ;;  aexp            1   22[BANK0 ] unsigned char 
 10149 ;;  signs           1   21[BANK0 ] unsigned char 
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  4   13[BANK0 ] unsigned char 
 10152 ;; Registers used:
 10153 ;;		wreg, status,2, status,0
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 0/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10159 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;Total ram usage:       16 bytes
 10164 ;; Hardware stack levels used: 1
 10165 ;; Hardware stack levels required when called: 8
 10166 ;; This function calls:
 10167 ;;		Nothing
 10168 ;; This function is called by:
 10169 ;;		_calcSpeed
 10170 ;;		___flsub
 10171 ;;		_efgtoa
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           	psect	text39
 10176  002242                     __ptext39:
 10177                           	callstack 0
 10178  002242                     ___fladd:
 10179                           	callstack 15
 10180  002242  0100               	movlb	0	; () banked
 10181  002244  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10182  002246  0B80               	andlw	128
 10183  002248  6F75               	movwf	___fladd@signs& (0+255),b
 10184  00224A  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10185  00224C  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10186  00224E  6F77               	movwf	___fladd@bexp& (0+255),b
 10187  002250                     
 10188                           ; BSR set to: 0
 10189  002250  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10190  002252  EF2D  F011         	goto	u7251
 10191  002256  EF2F  F011         	goto	u7250
 10192  00225A                     u7251:
 10193  00225A  EF30  F011         	goto	l7426
 10194  00225E                     u7250:
 10195  00225E                     
 10196                           ; BSR set to: 0
 10197  00225E  8177               	bsf	___fladd@bexp& (0+255),0,b
 10198  002260                     l7426:
 10199                           
 10200                           ; BSR set to: 0
 10201  002260  5177               	movf	___fladd@bexp& (0+255),w,b
 10202  002262  B4D8               	btfsc	status,2,c
 10203  002264  EF36  F011         	goto	u7261
 10204  002268  EF38  F011         	goto	u7260
 10205  00226C                     u7261:
 10206  00226C  EF4D  F011         	goto	l7436
 10207  002270                     u7260:
 10208  002270                     
 10209                           ; BSR set to: 0
 10210  002270  2977               	incf	___fladd@bexp& (0+255),w,b
 10211  002272  A4D8               	btfss	status,2,c
 10212  002274  EF3E  F011         	goto	u7271
 10213  002278  EF40  F011         	goto	u7270
 10214  00227C                     u7271:
 10215  00227C  EF48  F011         	goto	l7432
 10216  002280                     u7270:
 10217  002280                     
 10218                           ; BSR set to: 0
 10219  002280  0E00               	movlw	0
 10220  002282  6F6D               	movwf	___fladd@b& (0+255),b
 10221  002284  0E00               	movlw	0
 10222  002286  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10223  002288  0E00               	movlw	0
 10224  00228A  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10225  00228C  0E00               	movlw	0
 10226  00228E  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10227  002290                     l7432:
 10228                           
 10229                           ; BSR set to: 0
 10230  002290  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10231  002292                     
 10232                           ; BSR set to: 0
 10233  002292  0E00               	movlw	0
 10234  002294  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10235  002296  EF55  F011         	goto	l7438
 10236  00229A                     l7436:
 10237                           
 10238                           ; BSR set to: 0
 10239  00229A  0E00               	movlw	0
 10240  00229C  6F6D               	movwf	___fladd@b& (0+255),b
 10241  00229E  0E00               	movlw	0
 10242  0022A0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10243  0022A2  0E00               	movlw	0
 10244  0022A4  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10245  0022A6  0E00               	movlw	0
 10246  0022A8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10247  0022AA                     l7438:
 10248                           
 10249                           ; BSR set to: 0
 10250  0022AA  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10251  0022AC  0B80               	andlw	128
 10252  0022AE  6F76               	movwf	___fladd@aexp& (0+255),b
 10253  0022B0                     
 10254                           ; BSR set to: 0
 10255  0022B0  5175               	movf	___fladd@signs& (0+255),w,b
 10256  0022B2  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10257  0022B4  B4D8               	btfsc	status,2,c
 10258  0022B6  EF5F  F011         	goto	u7281
 10259  0022BA  EF61  F011         	goto	u7280
 10260  0022BE                     u7281:
 10261  0022BE  EF62  F011         	goto	l7444
 10262  0022C2                     u7280:
 10263  0022C2                     
 10264                           ; BSR set to: 0
 10265  0022C2  8D75               	bsf	___fladd@signs& (0+255),6,b
 10266  0022C4                     l7444:
 10267                           
 10268                           ; BSR set to: 0
 10269  0022C4  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10270  0022C6  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10271  0022C8  6F76               	movwf	___fladd@aexp& (0+255),b
 10272  0022CA                     
 10273                           ; BSR set to: 0
 10274  0022CA  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10275  0022CC  EF6A  F011         	goto	u7291
 10276  0022D0  EF6C  F011         	goto	u7290
 10277  0022D4                     u7291:
 10278  0022D4  EF6D  F011         	goto	l7450
 10279  0022D8                     u7290:
 10280  0022D8                     
 10281                           ; BSR set to: 0
 10282  0022D8  8176               	bsf	___fladd@aexp& (0+255),0,b
 10283  0022DA                     l7450:
 10284                           
 10285                           ; BSR set to: 0
 10286  0022DA  5176               	movf	___fladd@aexp& (0+255),w,b
 10287  0022DC  B4D8               	btfsc	status,2,c
 10288  0022DE  EF73  F011         	goto	u7301
 10289  0022E2  EF75  F011         	goto	u7300
 10290  0022E6                     u7301:
 10291  0022E6  EF8A  F011         	goto	l7460
 10292  0022EA                     u7300:
 10293  0022EA                     
 10294                           ; BSR set to: 0
 10295  0022EA  2976               	incf	___fladd@aexp& (0+255),w,b
 10296  0022EC  A4D8               	btfss	status,2,c
 10297  0022EE  EF7B  F011         	goto	u7311
 10298  0022F2  EF7D  F011         	goto	u7310
 10299  0022F6                     u7311:
 10300  0022F6  EF85  F011         	goto	l7456
 10301  0022FA                     u7310:
 10302  0022FA                     
 10303                           ; BSR set to: 0
 10304  0022FA  0E00               	movlw	0
 10305  0022FC  6F71               	movwf	___fladd@a& (0+255),b
 10306  0022FE  0E00               	movlw	0
 10307  002300  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10308  002302  0E00               	movlw	0
 10309  002304  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10310  002306  0E00               	movlw	0
 10311  002308  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10312  00230A                     l7456:
 10313                           
 10314                           ; BSR set to: 0
 10315  00230A  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10316  00230C                     
 10317                           ; BSR set to: 0
 10318  00230C  0E00               	movlw	0
 10319  00230E  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10320  002310  EF92  F011         	goto	l7462
 10321  002314                     l7460:
 10322                           
 10323                           ; BSR set to: 0
 10324  002314  0E00               	movlw	0
 10325  002316  6F71               	movwf	___fladd@a& (0+255),b
 10326  002318  0E00               	movlw	0
 10327  00231A  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10328  00231C  0E00               	movlw	0
 10329  00231E  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10330  002320  0E00               	movlw	0
 10331  002322  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10332  002324                     l7462:
 10333                           
 10334                           ; BSR set to: 0
 10335  002324  5177               	movf	___fladd@bexp& (0+255),w,b
 10336  002326  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10337  002328  B0D8               	btfsc	status,0,c
 10338  00232A  EF99  F011         	goto	u7321
 10339  00232E  EF9B  F011         	goto	u7320
 10340  002332                     u7321:
 10341  002332  EFC2  F011         	goto	l7498
 10342  002336                     u7320:
 10343  002336                     
 10344                           ; BSR set to: 0
 10345  002336  AD75               	btfss	___fladd@signs& (0+255),6,b
 10346  002338  EFA0  F011         	goto	u7331
 10347  00233C  EFA2  F011         	goto	u7330
 10348  002340                     u7331:
 10349  002340  EFA4  F011         	goto	l7468
 10350  002344                     u7330:
 10351  002344                     
 10352                           ; BSR set to: 0
 10353  002344  0E80               	movlw	128
 10354  002346  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10355  002348                     l7468:
 10356                           
 10357                           ; BSR set to: 0
 10358  002348  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10359  00234C                     
 10360                           ; BSR set to: 0
 10361  00234C  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10362  002350                     
 10363                           ; BSR set to: 0
 10364  002350  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10365  002354                     
 10366                           ; BSR set to: 0
 10367  002354  C06D  F078         	movff	___fladd@b,___fladd@grs
 10368  002358                     
 10369                           ; BSR set to: 0
 10370  002358  C071  F06D         	movff	___fladd@a,___fladd@b
 10371  00235C                     
 10372                           ; BSR set to: 0
 10373  00235C  C078  F071         	movff	___fladd@grs,___fladd@a
 10374  002360                     
 10375                           ; BSR set to: 0
 10376  002360  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10377  002364                     
 10378                           ; BSR set to: 0
 10379  002364  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10380  002368                     
 10381                           ; BSR set to: 0
 10382  002368  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10383  00236C                     
 10384                           ; BSR set to: 0
 10385  00236C  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10386  002370                     
 10387                           ; BSR set to: 0
 10388  002370  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10389  002374                     
 10390                           ; BSR set to: 0
 10391  002374  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10392  002378                     
 10393                           ; BSR set to: 0
 10394  002378  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10395  00237C                     
 10396                           ; BSR set to: 0
 10397  00237C  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10398  002380                     
 10399                           ; BSR set to: 0
 10400  002380  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10401  002384                     l7498:
 10402                           
 10403                           ; BSR set to: 0
 10404  002384  0E00               	movlw	0
 10405  002386  6F78               	movwf	___fladd@grs& (0+255),b
 10406  002388                     
 10407                           ; BSR set to: 0
 10408  002388  5177               	movf	___fladd@bexp& (0+255),w,b
 10409  00238A  C076  F036         	movff	___fladd@aexp,??___fladd
 10410  00238E  6A37               	clrf	(??___fladd+1)^0,c
 10411  002390  5E36               	subwf	??___fladd^0,f,c
 10412  002392  0E00               	movlw	0
 10413  002394  5A37               	subwfb	(??___fladd+1)^0,f,c
 10414  002396  BE37               	btfsc	(??___fladd+1)^0,7,c
 10415  002398  EFD7  F011         	goto	u7341
 10416  00239C  5037               	movf	(??___fladd+1)^0,w,c
 10417  00239E  E109               	bnz	u7340
 10418  0023A0  0E1A               	movlw	26
 10419  0023A2  5C36               	subwf	??___fladd^0,w,c
 10420  0023A4  A0D8               	btfss	status,0,c
 10421  0023A6  EFD7  F011         	goto	u7341
 10422  0023AA  EFD9  F011         	goto	u7340
 10423  0023AE                     u7341:
 10424  0023AE  EF10  F012         	goto	l1927
 10425  0023B2                     u7340:
 10426  0023B2                     
 10427                           ; BSR set to: 0
 10428  0023B2  516D               	movf	___fladd@b& (0+255),w,b
 10429  0023B4  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10430  0023B6  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10431  0023B8  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10432  0023BA  A4D8               	btfss	status,2,c
 10433  0023BC  EFE2  F011         	goto	u7351
 10434  0023C0  EFE5  F011         	goto	u7350
 10435  0023C4                     u7351:
 10436  0023C4  0E01               	movlw	1
 10437  0023C6  EFE6  F011         	goto	u7360
 10438  0023CA                     u7350:
 10439  0023CA  0E00               	movlw	0
 10440  0023CC                     u7360:
 10441  0023CC  6F78               	movwf	___fladd@grs& (0+255),b
 10442  0023CE                     
 10443                           ; BSR set to: 0
 10444  0023CE  0E00               	movlw	0
 10445  0023D0  6F6D               	movwf	___fladd@b& (0+255),b
 10446  0023D2  0E00               	movlw	0
 10447  0023D4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10448  0023D6  0E00               	movlw	0
 10449  0023D8  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10450  0023DA  0E00               	movlw	0
 10451  0023DC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10452  0023DE                     
 10453                           ; BSR set to: 0
 10454  0023DE  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10455  0023E2  EF19  F012         	goto	l1926
 10456  0023E6                     l1928:
 10457                           
 10458                           ; BSR set to: 0
 10459  0023E6  A178               	btfss	___fladd@grs& (0+255),0,b
 10460  0023E8  EFF8  F011         	goto	u7371
 10461  0023EC  EFFA  F011         	goto	u7370
 10462  0023F0                     u7371:
 10463  0023F0  EF00  F012         	goto	l7510
 10464  0023F4                     u7370:
 10465  0023F4                     
 10466                           ; BSR set to: 0
 10467  0023F4  90D8               	bcf	status,0,c
 10468  0023F6  3178               	rrcf	___fladd@grs& (0+255),w,b
 10469  0023F8  0901               	iorlw	1
 10470  0023FA  6F78               	movwf	___fladd@grs& (0+255),b
 10471  0023FC  EF02  F012         	goto	l7512
 10472  002400                     l7510:
 10473                           
 10474                           ; BSR set to: 0
 10475  002400  90D8               	bcf	status,0,c
 10476  002402  3378               	rrcf	___fladd@grs& (0+255),f,b
 10477  002404                     l7512:
 10478                           
 10479                           ; BSR set to: 0
 10480  002404  A16D               	btfss	___fladd@b& (0+255),0,b
 10481  002406  EF07  F012         	goto	u7381
 10482  00240A  EF09  F012         	goto	u7380
 10483  00240E                     u7381:
 10484  00240E  EF0A  F012         	goto	l7516
 10485  002412                     u7380:
 10486  002412                     
 10487                           ; BSR set to: 0
 10488  002412  8F78               	bsf	___fladd@grs& (0+255),7,b
 10489  002414                     l7516:
 10490                           
 10491                           ; BSR set to: 0
 10492  002414  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10493  002416  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10494  002418  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10495  00241A  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10496  00241C  336D               	rrcf	___fladd@b& (0+255),f,b
 10497  00241E                     
 10498                           ; BSR set to: 0
 10499  00241E  2B77               	incf	___fladd@bexp& (0+255),f,b
 10500  002420                     l1927:
 10501                           
 10502                           ; BSR set to: 0
 10503  002420  5176               	movf	___fladd@aexp& (0+255),w,b
 10504  002422  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10505  002424  A0D8               	btfss	status,0,c
 10506  002426  EF17  F012         	goto	u7391
 10507  00242A  EF19  F012         	goto	u7390
 10508  00242E                     u7391:
 10509  00242E  EFF3  F011         	goto	l1928
 10510  002432                     u7390:
 10511  002432                     l1926:
 10512                           
 10513                           ; BSR set to: 0
 10514  002432  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10515  002434  EF1E  F012         	goto	u7401
 10516  002438  EF20  F012         	goto	u7400
 10517  00243C                     u7401:
 10518  00243C  EF60  F012         	goto	l7544
 10519  002440                     u7400:
 10520  002440                     
 10521                           ; BSR set to: 0
 10522  002440  5177               	movf	___fladd@bexp& (0+255),w,b
 10523  002442  A4D8               	btfss	status,2,c
 10524  002444  EF26  F012         	goto	u7411
 10525  002448  EF28  F012         	goto	u7410
 10526  00244C                     u7411:
 10527  00244C  EF32  F012         	goto	l7526
 10528  002450                     u7410:
 10529  002450                     
 10530                           ; BSR set to: 0
 10531  002450  0E00               	movlw	0
 10532  002452  6F6D               	movwf	?___fladd& (0+255),b
 10533  002454  0E00               	movlw	0
 10534  002456  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10535  002458  0E00               	movlw	0
 10536  00245A  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10537  00245C  0E00               	movlw	0
 10538  00245E  6F70               	movwf	(?___fladd+3)& (0+255),b
 10539  002460  EF81  F013         	goto	l1935
 10540  002464                     l7526:
 10541                           
 10542                           ; BSR set to: 0
 10543  002464  5171               	movf	___fladd@a& (0+255),w,b
 10544  002466  276D               	addwf	___fladd@b& (0+255),f,b
 10545  002468  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10546  00246A  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10547  00246C  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10548  00246E  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10549  002470  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10550  002472  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10551  002474                     
 10552                           ; BSR set to: 0
 10553  002474  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10554  002476  EF3F  F012         	goto	u7421
 10555  00247A  EF41  F012         	goto	u7420
 10556  00247E                     u7421:
 10557  00247E  EFED  F012         	goto	l7580
 10558  002482                     u7420:
 10559  002482                     
 10560                           ; BSR set to: 0
 10561  002482  A178               	btfss	___fladd@grs& (0+255),0,b
 10562  002484  EF46  F012         	goto	u7431
 10563  002488  EF48  F012         	goto	u7430
 10564  00248C                     u7431:
 10565  00248C  EF4E  F012         	goto	l7534
 10566  002490                     u7430:
 10567  002490                     
 10568                           ; BSR set to: 0
 10569  002490  90D8               	bcf	status,0,c
 10570  002492  3178               	rrcf	___fladd@grs& (0+255),w,b
 10571  002494  0901               	iorlw	1
 10572  002496  6F78               	movwf	___fladd@grs& (0+255),b
 10573  002498  EF50  F012         	goto	l7536
 10574  00249C                     l7534:
 10575                           
 10576                           ; BSR set to: 0
 10577  00249C  90D8               	bcf	status,0,c
 10578  00249E  3378               	rrcf	___fladd@grs& (0+255),f,b
 10579  0024A0                     l7536:
 10580                           
 10581                           ; BSR set to: 0
 10582  0024A0  A16D               	btfss	___fladd@b& (0+255),0,b
 10583  0024A2  EF55  F012         	goto	u7441
 10584  0024A6  EF57  F012         	goto	u7440
 10585  0024AA                     u7441:
 10586  0024AA  EF58  F012         	goto	l7540
 10587  0024AE                     u7440:
 10588  0024AE                     
 10589                           ; BSR set to: 0
 10590  0024AE  8F78               	bsf	___fladd@grs& (0+255),7,b
 10591  0024B0                     l7540:
 10592                           
 10593                           ; BSR set to: 0
 10594  0024B0  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10595  0024B2  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10596  0024B4  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10597  0024B6  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10598  0024B8  336D               	rrcf	___fladd@b& (0+255),f,b
 10599  0024BA                     
 10600                           ; BSR set to: 0
 10601  0024BA  2B77               	incf	___fladd@bexp& (0+255),f,b
 10602  0024BC  EFED  F012         	goto	l7580
 10603  0024C0                     l7544:
 10604                           
 10605                           ; BSR set to: 0
 10606  0024C0  5171               	movf	___fladd@a& (0+255),w,b
 10607  0024C2  5D6D               	subwf	___fladd@b& (0+255),w,b
 10608  0024C4  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10609  0024C6  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10610  0024C8  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10611  0024CA  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10612  0024CC  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10613  0024CE  0A80               	xorlw	128
 10614  0024D0  6E36               	movwf	??___fladd^0,c
 10615  0024D2  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10616  0024D4  0A80               	xorlw	128
 10617  0024D6  5836               	subwfb	??___fladd^0,w,c
 10618  0024D8  B0D8               	btfsc	status,0,c
 10619  0024DA  EF71  F012         	goto	u7451
 10620  0024DE  EF73  F012         	goto	u7450
 10621  0024E2                     u7451:
 10622  0024E2  EF9E  F012         	goto	l7554
 10623  0024E6                     u7450:
 10624  0024E6                     
 10625                           ; BSR set to: 0
 10626  0024E6  516D               	movf	___fladd@b& (0+255),w,b
 10627  0024E8  5D71               	subwf	___fladd@a& (0+255),w,b
 10628  0024EA  6E36               	movwf	??___fladd^0,c
 10629  0024EC  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10630  0024EE  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10631  0024F0  6E37               	movwf	(??___fladd+1)^0,c
 10632  0024F2  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10633  0024F4  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10634  0024F6  6E38               	movwf	(??___fladd+2)^0,c
 10635  0024F8  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10636  0024FA  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10637  0024FC  6E39               	movwf	(??___fladd+3)^0,c
 10638  0024FE  0EFF               	movlw	255
 10639  002500  2436               	addwf	??___fladd^0,w,c
 10640  002502  6F6D               	movwf	___fladd@b& (0+255),b
 10641  002504  0EFF               	movlw	255
 10642  002506  2037               	addwfc	(??___fladd+1)^0,w,c
 10643  002508  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10644  00250A  0EFF               	movlw	255
 10645  00250C  2038               	addwfc	(??___fladd+2)^0,w,c
 10646  00250E  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10647  002510  0EFF               	movlw	255
 10648  002512  2039               	addwfc	(??___fladd+3)^0,w,c
 10649  002514  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10650  002516  0E80               	movlw	128
 10651  002518  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10652  00251A                     
 10653                           ; BSR set to: 0
 10654  00251A  6D78               	negf	___fladd@grs& (0+255),b
 10655  00251C                     
 10656                           ; BSR set to: 0
 10657  00251C  5178               	movf	___fladd@grs& (0+255),w,b
 10658  00251E  A4D8               	btfss	status,2,c
 10659  002520  EF94  F012         	goto	u7461
 10660  002524  EF96  F012         	goto	u7460
 10661  002528                     u7461:
 10662  002528  EFA6  F012         	goto	l1943
 10663  00252C                     u7460:
 10664  00252C                     
 10665                           ; BSR set to: 0
 10666  00252C  0E01               	movlw	1
 10667  00252E  276D               	addwf	___fladd@b& (0+255),f,b
 10668  002530  0E00               	movlw	0
 10669  002532  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10670  002534  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10671  002536  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10672  002538  EFA6  F012         	goto	l1943
 10673  00253C                     l7554:
 10674                           
 10675                           ; BSR set to: 0
 10676  00253C  5171               	movf	___fladd@a& (0+255),w,b
 10677  00253E  5F6D               	subwf	___fladd@b& (0+255),f,b
 10678  002540  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10679  002542  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10680  002544  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10681  002546  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10682  002548  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10683  00254A  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10684  00254C                     l1943:
 10685                           
 10686                           ; BSR set to: 0
 10687  00254C  516D               	movf	___fladd@b& (0+255),w,b
 10688  00254E  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10689  002550  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10690  002552  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10691  002554  A4D8               	btfss	status,2,c
 10692  002556  EFAF  F012         	goto	u7471
 10693  00255A  EFB1  F012         	goto	u7470
 10694  00255E                     u7471:
 10695  00255E  EFE6  F012         	goto	l7578
 10696  002562                     u7470:
 10697  002562                     
 10698                           ; BSR set to: 0
 10699  002562  5178               	movf	___fladd@grs& (0+255),w,b
 10700  002564  A4D8               	btfss	status,2,c
 10701  002566  EFB7  F012         	goto	u7481
 10702  00256A  EFB9  F012         	goto	u7480
 10703  00256E                     u7481:
 10704  00256E  EFE6  F012         	goto	l7578
 10705  002572                     u7480:
 10706  002572                     
 10707                           ; BSR set to: 0
 10708  002572  0E00               	movlw	0
 10709  002574  6F6D               	movwf	?___fladd& (0+255),b
 10710  002576  0E00               	movlw	0
 10711  002578  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10712  00257A  0E00               	movlw	0
 10713  00257C  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10714  00257E  0E00               	movlw	0
 10715  002580  6F70               	movwf	(?___fladd+3)& (0+255),b
 10716  002582  EF81  F013         	goto	l1935
 10717  002586                     l7562:
 10718                           
 10719                           ; BSR set to: 0
 10720  002586  90D8               	bcf	status,0,c
 10721  002588  376D               	rlcf	___fladd@b& (0+255),f,b
 10722  00258A  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10723  00258C  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10724  00258E  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10725  002590                     
 10726                           ; BSR set to: 0
 10727  002590  AF78               	btfss	___fladd@grs& (0+255),7,b
 10728  002592  EFCD  F012         	goto	u7491
 10729  002596  EFCF  F012         	goto	u7490
 10730  00259A                     u7491:
 10731  00259A  EFD0  F012         	goto	l7568
 10732  00259E                     u7490:
 10733  00259E                     
 10734                           ; BSR set to: 0
 10735  00259E  816D               	bsf	___fladd@b& (0+255),0,b
 10736  0025A0                     l7568:
 10737                           
 10738                           ; BSR set to: 0
 10739  0025A0  A178               	btfss	___fladd@grs& (0+255),0,b
 10740  0025A2  EFD5  F012         	goto	u7501
 10741  0025A6  EFD7  F012         	goto	u7500
 10742  0025AA                     u7501:
 10743  0025AA  EFDB  F012         	goto	l7572
 10744  0025AE                     u7500:
 10745  0025AE                     
 10746                           ; BSR set to: 0
 10747  0025AE  80D8               	bsf	status,0,c
 10748  0025B0  3778               	rlcf	___fladd@grs& (0+255),f,b
 10749  0025B2  EFDD  F012         	goto	l7574
 10750  0025B6                     l7572:
 10751                           
 10752                           ; BSR set to: 0
 10753  0025B6  90D8               	bcf	status,0,c
 10754  0025B8  3778               	rlcf	___fladd@grs& (0+255),f,b
 10755  0025BA                     l7574:
 10756                           
 10757                           ; BSR set to: 0
 10758  0025BA  5177               	movf	___fladd@bexp& (0+255),w,b
 10759  0025BC  B4D8               	btfsc	status,2,c
 10760  0025BE  EFE3  F012         	goto	u7511
 10761  0025C2  EFE5  F012         	goto	u7510
 10762  0025C6                     u7511:
 10763  0025C6  EFE6  F012         	goto	l7578
 10764  0025CA                     u7510:
 10765  0025CA                     
 10766                           ; BSR set to: 0
 10767  0025CA  0777               	decf	___fladd@bexp& (0+255),f,b
 10768  0025CC                     l7578:
 10769                           
 10770                           ; BSR set to: 0
 10771  0025CC  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10772  0025CE  EFEB  F012         	goto	u7521
 10773  0025D2  EFED  F012         	goto	u7520
 10774  0025D6                     u7521:
 10775  0025D6  EFC3  F012         	goto	l7562
 10776  0025DA                     u7520:
 10777  0025DA                     l7580:
 10778                           
 10779                           ; BSR set to: 0
 10780  0025DA  0E00               	movlw	0
 10781  0025DC  6F76               	movwf	___fladd@aexp& (0+255),b
 10782  0025DE                     
 10783                           ; BSR set to: 0
 10784  0025DE  AF78               	btfss	___fladd@grs& (0+255),7,b
 10785  0025E0  EFF4  F012         	goto	u7531
 10786  0025E4  EFF6  F012         	goto	u7530
 10787  0025E8                     u7531:
 10788  0025E8  EF0E  F013         	goto	l1952
 10789  0025EC                     u7530:
 10790  0025EC                     
 10791                           ; BSR set to: 0
 10792  0025EC  C078  F036         	movff	___fladd@grs,??___fladd
 10793  0025F0  0E7F               	movlw	127
 10794  0025F2  1636               	andwf	??___fladd^0,f,c
 10795  0025F4  B4D8               	btfsc	status,2,c
 10796  0025F6  EFFF  F012         	goto	u7541
 10797  0025FA  EF01  F013         	goto	u7540
 10798  0025FE                     u7541:
 10799  0025FE  EF05  F013         	goto	l1953
 10800  002602                     u7540:
 10801  002602                     l7586:
 10802                           
 10803                           ; BSR set to: 0
 10804  002602  0E01               	movlw	1
 10805  002604  6F76               	movwf	___fladd@aexp& (0+255),b
 10806  002606  EF0E  F013         	goto	l1952
 10807  00260A                     l1953:
 10808                           
 10809                           ; BSR set to: 0
 10810  00260A  A16D               	btfss	___fladd@b& (0+255),0,b
 10811  00260C  EF0A  F013         	goto	u7551
 10812  002610  EF0C  F013         	goto	u7550
 10813  002614                     u7551:
 10814  002614  EF0E  F013         	goto	l1952
 10815  002618                     u7550:
 10816  002618  EF01  F013         	goto	l7586
 10817  00261C                     l1952:
 10818                           
 10819                           ; BSR set to: 0
 10820  00261C  5176               	movf	___fladd@aexp& (0+255),w,b
 10821  00261E  B4D8               	btfsc	status,2,c
 10822  002620  EF14  F013         	goto	u7561
 10823  002624  EF16  F013         	goto	u7560
 10824  002628                     u7561:
 10825  002628  EF41  F013         	goto	l7598
 10826  00262C                     u7560:
 10827  00262C                     
 10828                           ; BSR set to: 0
 10829  00262C  0E01               	movlw	1
 10830  00262E  276D               	addwf	___fladd@b& (0+255),f,b
 10831  002630  0E00               	movlw	0
 10832  002632  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10833  002634  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10834  002636  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10835  002638                     
 10836                           ; BSR set to: 0
 10837  002638  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10838  00263A  EF21  F013         	goto	u7571
 10839  00263E  EF23  F013         	goto	u7570
 10840  002642                     u7571:
 10841  002642  EF41  F013         	goto	l7598
 10842  002646                     u7570:
 10843  002646                     
 10844                           ; BSR set to: 0
 10845  002646  C06D  F036         	movff	___fladd@b,??___fladd
 10846  00264A  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10847  00264E  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10848  002652  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10849  002656  3439               	rlcf	(??___fladd+3)^0,w,c
 10850  002658  3239               	rrcf	(??___fladd+3)^0,f,c
 10851  00265A  3238               	rrcf	(??___fladd+2)^0,f,c
 10852  00265C  3237               	rrcf	(??___fladd+1)^0,f,c
 10853  00265E  3236               	rrcf	??___fladd^0,f,c
 10854  002660  C036  F06D         	movff	??___fladd,___fladd@b
 10855  002664  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10856  002668  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10857  00266C  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10858  002670  2977               	incf	___fladd@bexp& (0+255),w,b
 10859  002672  B4D8               	btfsc	status,2,c
 10860  002674  EF3E  F013         	goto	u7581
 10861  002678  EF40  F013         	goto	u7580
 10862  00267C                     u7581:
 10863  00267C  EF41  F013         	goto	l7598
 10864  002680                     u7580:
 10865  002680                     
 10866                           ; BSR set to: 0
 10867  002680  2B77               	incf	___fladd@bexp& (0+255),f,b
 10868  002682                     l7598:
 10869                           
 10870                           ; BSR set to: 0
 10871  002682  2977               	incf	___fladd@bexp& (0+255),w,b
 10872  002684  B4D8               	btfsc	status,2,c
 10873  002686  EF47  F013         	goto	u7591
 10874  00268A  EF49  F013         	goto	u7590
 10875  00268E                     u7591:
 10876  00268E  EF51  F013         	goto	l7602
 10877  002692                     u7590:
 10878  002692                     
 10879                           ; BSR set to: 0
 10880  002692  5177               	movf	___fladd@bexp& (0+255),w,b
 10881  002694  A4D8               	btfss	status,2,c
 10882  002696  EF4F  F013         	goto	u7601
 10883  00269A  EF51  F013         	goto	u7600
 10884  00269E                     u7601:
 10885  00269E  EF63  F013         	goto	l7606
 10886  0026A2                     u7600:
 10887  0026A2                     l7602:
 10888                           
 10889                           ; BSR set to: 0
 10890  0026A2  0E00               	movlw	0
 10891  0026A4  6F6D               	movwf	___fladd@b& (0+255),b
 10892  0026A6  0E00               	movlw	0
 10893  0026A8  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10894  0026AA  0E00               	movlw	0
 10895  0026AC  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10896  0026AE  0E00               	movlw	0
 10897  0026B0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10898  0026B2  5177               	movf	___fladd@bexp& (0+255),w,b
 10899  0026B4  A4D8               	btfss	status,2,c
 10900  0026B6  EF5F  F013         	goto	u7611
 10901  0026BA  EF61  F013         	goto	u7610
 10902  0026BE                     u7611:
 10903  0026BE  EF63  F013         	goto	l7606
 10904  0026C2                     u7610:
 10905  0026C2                     
 10906                           ; BSR set to: 0
 10907  0026C2  0E00               	movlw	0
 10908  0026C4  6F75               	movwf	___fladd@signs& (0+255),b
 10909  0026C6                     l7606:
 10910                           
 10911                           ; BSR set to: 0
 10912  0026C6  A177               	btfss	___fladd@bexp& (0+255),0,b
 10913  0026C8  EF68  F013         	goto	u7621
 10914  0026CC  EF6A  F013         	goto	u7620
 10915  0026D0                     u7621:
 10916  0026D0  EF6D  F013         	goto	l7610
 10917  0026D4                     u7620:
 10918  0026D4                     
 10919                           ; BSR set to: 0
 10920  0026D4  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10921  0026D6  EF6E  F013         	goto	l7612
 10922  0026DA                     l7610:
 10923                           
 10924                           ; BSR set to: 0
 10925  0026DA  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10926  0026DC                     l7612:
 10927                           
 10928                           ; BSR set to: 0
 10929  0026DC  90D8               	bcf	status,0,c
 10930  0026DE  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10931  0026E0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10932  0026E2                     
 10933                           ; BSR set to: 0
 10934  0026E2  AF75               	btfss	___fladd@signs& (0+255),7,b
 10935  0026E4  EF76  F013         	goto	u7631
 10936  0026E8  EF78  F013         	goto	u7630
 10937  0026EC                     u7631:
 10938  0026EC  EF79  F013         	goto	l7618
 10939  0026F0                     u7630:
 10940  0026F0                     
 10941                           ; BSR set to: 0
 10942  0026F0  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10943  0026F2                     l7618:
 10944                           
 10945                           ; BSR set to: 0
 10946  0026F2  C06D  F06D         	movff	___fladd@b,?___fladd
 10947  0026F6  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10948  0026FA  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10949  0026FE  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10950  002702                     l1935:
 10951                           
 10952                           ; BSR set to: 0
 10953  002702  0012               	return		;funcret
 10954  002704                     __end_of___fladd:
 10955                           	callstack 0
 10956                           
 10957 ;; *************** function _calcMotorPow *****************
 10958 ;; Defined at:
 10959 ;;		line 342 in file "main.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;		None
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10964 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10965 ;;  addMPow         1   41[BANK0 ] char 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      void 
 10968 ;; Registers used:
 10969 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10977 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10978 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;Total ram usage:        7 bytes
 10980 ;; Hardware stack levels used: 1
 10981 ;; Hardware stack levels required when called: 10
 10982 ;; This function calls:
 10983 ;;		___awdiv
 10984 ;;		___flmul
 10985 ;;		___fltol
 10986 ;;		___xxtofl
 10987 ;;		_actSpeed
 10988 ;;		_setMotor
 10989 ;; This function is called by:
 10990 ;;		_loop
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text40
 10995  00428E                     __ptext40:
 10996                           	callstack 0
 10997  00428E                     _calcMotorPow:
 10998                           	callstack 19
 10999  00428E                     
 11000                           ;main.c: 343:     currentSpeed = actSpeed();
 11001  00428E  ECD4  F028         	call	_actSpeed	;wreg free
 11002  004292  C022  F0E9         	movff	?_actSpeed,_currentSpeed
 11003  004296  C023  F0EA         	movff	?_actSpeed+1,_currentSpeed+1
 11004  00429A                     
 11005                           ;main.c: 345:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11006  00429A  0100               	movlb	0	; () banked
 11007  00429C  51E9               	movf	_currentSpeed& (0+255),w,b
 11008  00429E  5DEB               	subwf	_setSpeed& (0+255),w,b
 11009  0042A0  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11010  0042A2  51EA               	movf	(_currentSpeed+1)& (0+255),w,b
 11011  0042A4  59EC               	subwfb	(_setSpeed+1)& (0+255),w,b
 11012  0042A6  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11013  0042A8                     
 11014                           ; BSR set to: 0
 11015                           ;main.c: 346:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11016  0042A8  0101               	movlb	1	; () banked
 11017  0042AA  512C               	movf	_oldSpeed& (0+255),w,b
 11018  0042AC  0100               	movlb	0	; () banked
 11019  0042AE  5DE9               	subwf	_currentSpeed& (0+255),w,b
 11020  0042B0  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11021  0042B2  0101               	movlb	1	; () banked
 11022  0042B4  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11023  0042B6  0100               	movlb	0	; () banked
 11024  0042B8  59EA               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11025  0042BA  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11026  0042BC                     
 11027                           ; BSR set to: 0
 11028                           ;main.c: 352:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11029  0042BC  0E0A               	movlw	10
 11030  0042BE  6E2E               	movwf	___flmul@a^0,c
 11031  0042C0  0ED7               	movlw	215
 11032  0042C2  6E2F               	movwf	(___flmul@a+1)^0,c
 11033  0042C4  0EA3               	movlw	163
 11034  0042C6  6E30               	movwf	(___flmul@a+2)^0,c
 11035  0042C8  0E3C               	movlw	60
 11036  0042CA  6E31               	movwf	(___flmul@a+3)^0,c
 11037  0042CC  0E00               	movlw	0
 11038  0042CE  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11039  0042D0  0E02               	movlw	2
 11040  0042D2  6E16               	movwf	___awdiv@divisor^0,c
 11041  0042D4  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11042  0042D8  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11043  0042DC  EC67  F026         	call	___awdiv	;wreg free
 11044  0042E0  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11045  0042E4  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11046  0042E8  5014               	movf	?___awdiv^0,w,c
 11047  0042EA  0100               	movlb	0	; () banked
 11048  0042EC  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11049  0042EE  5015               	movf	(?___awdiv+1)^0,w,c
 11050  0042F0  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11051  0042F2  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11052  0042F6  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11053  0042FA  0E00               	movlw	0
 11054  0042FC  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11055  0042FE  0EFF               	movlw	-1
 11056  004300  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11057  004302  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11058  004304  0E01               	movlw	1
 11059  004306  EC66  F01D         	call	___xxtofl
 11060  00430A  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11061  00430E  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11062  004312  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11063  004316  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11064  00431A  EC82  F013         	call	___flmul	;wreg free
 11065  00431E  C02A  F079         	movff	?___flmul,___fltol@f1
 11066  004322  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11067  004326  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11068  00432A  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11069  00432E  EC0E  F023         	call	___fltol	;wreg free
 11070  004332  0100               	movlb	0	; () banked
 11071  004334  5179               	movf	?___fltol& (0+255),w,b
 11072  004336  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11073  004338                     
 11074                           ; BSR set to: 0
 11075                           ;main.c: 354:     if (addMPow > (5)) {
 11076  004338  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11077  00433A  0A80               	xorlw	128
 11078  00433C  0F7A               	addlw	-134
 11079  00433E  A0D8               	btfss	status,0,c
 11080  004340  EFA4  F021         	goto	u10191
 11081  004344  EFA6  F021         	goto	u10190
 11082  004348                     u10191:
 11083  004348  EFAA  F021         	goto	l9116
 11084  00434C                     u10190:
 11085  00434C                     
 11086                           ; BSR set to: 0
 11087                           ;main.c: 355:         addMPow = (5);
 11088  00434C  0E05               	movlw	5
 11089  00434E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11090                           
 11091                           ;main.c: 356:     } else if (addMPow < -(5)) {
 11092  004350  EFB6  F021         	goto	l9120
 11093  004354                     l9116:
 11094                           
 11095                           ; BSR set to: 0
 11096  004354  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11097  004356  0A80               	xorlw	128
 11098  004358  0F85               	addlw	133
 11099  00435A  B0D8               	btfsc	status,0,c
 11100  00435C  EFB2  F021         	goto	u10201
 11101  004360  EFB4  F021         	goto	u10200
 11102  004364                     u10201:
 11103  004364  EFB6  F021         	goto	l9120
 11104  004368                     u10200:
 11105  004368                     
 11106                           ; BSR set to: 0
 11107                           ;main.c: 357:         addMPow = -(5);
 11108  004368  0EFB               	movlw	251
 11109  00436A  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11110  00436C                     l9120:
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;main.c: 360:     actMotorPow += addMPow;
 11114  00436C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11115  00436E  27E7               	addwf	_actMotorPow& (0+255),f,b
 11116  004370  0E00               	movlw	0
 11117  004372  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11118  004374  0EFF               	movlw	255
 11119  004376  23E8               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11120  004378                     
 11121                           ; BSR set to: 0
 11122                           ;main.c: 362:     if (actMotorPow > (700)) {
 11123  004378  BFE8               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11124  00437A  EFC8  F021         	goto	u10211
 11125  00437E  0EBD               	movlw	189
 11126  004380  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11127  004382  0E02               	movlw	2
 11128  004384  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11129  004386  A0D8               	btfss	status,0,c
 11130  004388  EFC8  F021         	goto	u10211
 11131  00438C  EFCA  F021         	goto	u10210
 11132  004390                     u10211:
 11133  004390  EFD0  F021         	goto	l9126
 11134  004394                     u10210:
 11135  004394                     
 11136                           ; BSR set to: 0
 11137                           ;main.c: 363:         actMotorPow = (700);
 11138  004394  0E02               	movlw	2
 11139  004396  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11140  004398  0EBC               	movlw	188
 11141  00439A  6FE7               	movwf	_actMotorPow& (0+255),b
 11142                           
 11143                           ;main.c: 364:     } else if (actMotorPow < (-400)) {
 11144  00439C  EFE2  F021         	goto	l9130
 11145  0043A0                     l9126:
 11146                           
 11147                           ; BSR set to: 0
 11148  0043A0  AFE8               	btfss	(_actMotorPow+1)& (0+255),7,b
 11149  0043A2  EFDC  F021         	goto	u10221
 11150  0043A6  0E70               	movlw	112
 11151  0043A8  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11152  0043AA  0EFE               	movlw	254
 11153  0043AC  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11154  0043AE  B0D8               	btfsc	status,0,c
 11155  0043B0  EFDC  F021         	goto	u10221
 11156  0043B4  EFDE  F021         	goto	u10220
 11157  0043B8                     u10221:
 11158  0043B8  EFE2  F021         	goto	l9130
 11159  0043BC                     u10220:
 11160  0043BC                     
 11161                           ; BSR set to: 0
 11162                           ;main.c: 365:         actMotorPow = (-400);
 11163  0043BC  0EFE               	movlw	254
 11164  0043BE  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11165  0043C0  0E70               	movlw	112
 11166  0043C2  6FE7               	movwf	_actMotorPow& (0+255),b
 11167  0043C4                     l9130:
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;main.c: 368:     setMotor(actMotorPow);
 11171  0043C4  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
 11172  0043C8  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11173  0043CC  EC91  F025         	call	_setMotor	;wreg free
 11174  0043D0                     
 11175                           ;main.c: 370:     oldSpeed = currentSpeed;
 11176  0043D0  C0E9  F12C         	movff	_currentSpeed,_oldSpeed
 11177  0043D4  C0EA  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11178  0043D8  0012               	return		;funcret
 11179  0043DA                     __end_of_calcMotorPow:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _setMotor *****************
 11183 ;; Defined at:
 11184 ;;		line 373 in file "main.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  motorPower      2   23[COMRAM] short 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;		None
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  1    wreg      void 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0, cstack
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:        4 bytes
 11203 ;; Hardware stack levels used: 1
 11204 ;; Hardware stack levels required when called: 9
 11205 ;; This function calls:
 11206 ;;		_PWM7_LoadDutyValue
 11207 ;;		_PWM8_LoadDutyValue
 11208 ;; This function is called by:
 11209 ;;		_loop
 11210 ;;		_startAccell
 11211 ;;		_calcMotorPow
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text41
 11216  004B22                     __ptext41:
 11217                           	callstack 0
 11218  004B22                     _setMotor:
 11219                           	callstack 19
 11220  004B22                     
 11221                           ;main.c: 374:     if (motorPower >= (40)) {
 11222  004B22  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11223  004B24  EF9D  F025         	goto	u9821
 11224  004B28  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11225  004B2A  E109               	bnz	u9820
 11226  004B2C  0E28               	movlw	40
 11227  004B2E  5C18               	subwf	setMotor@motorPower^0,w,c
 11228  004B30  A0D8               	btfss	status,0,c
 11229  004B32  EF9D  F025         	goto	u9821
 11230  004B36  EF9F  F025         	goto	u9820
 11231  004B3A                     u9821:
 11232  004B3A  EFBF  F025         	goto	l8840
 11233  004B3E                     u9820:
 11234  004B3E                     
 11235                           ;main.c: 375:         if (motorPower > (700)) {
 11236  004B3E  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11237  004B40  EFAB  F025         	goto	u9831
 11238  004B44  0EBD               	movlw	189
 11239  004B46  5C18               	subwf	setMotor@motorPower^0,w,c
 11240  004B48  0E02               	movlw	2
 11241  004B4A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11242  004B4C  A0D8               	btfss	status,0,c
 11243  004B4E  EFAB  F025         	goto	u9831
 11244  004B52  EFAD  F025         	goto	u9830
 11245  004B56                     u9831:
 11246  004B56  EFB1  F025         	goto	l8836
 11247  004B5A                     u9830:
 11248  004B5A                     
 11249                           ;main.c: 376:             motorPower = (700);
 11250  004B5A  0E02               	movlw	2
 11251  004B5C  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11252  004B5E  0EBC               	movlw	188
 11253  004B60  6E18               	movwf	setMotor@motorPower^0,c
 11254  004B62                     l8836:
 11255                           
 11256                           ;main.c: 378:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11257  004B62  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11258  004B66  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11259  004B6A  ECE4  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11260  004B6E                     
 11261                           ;main.c: 379:         PWM8_LoadDutyValue(0);
 11262  004B6E  0E00               	movlw	0
 11263  004B70  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11264  004B72  0E00               	movlw	0
 11265  004B74  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11266  004B76  ECCA  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11267                           
 11268                           ;main.c: 380:     } else if (motorPower <= -(40)) {
 11269  004B7A  EF01  F026         	goto	l1378
 11270  004B7E                     l8840:
 11271  004B7E  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11272  004B80  EFCB  F025         	goto	u9841
 11273  004B84  0ED9               	movlw	217
 11274  004B86  5C18               	subwf	setMotor@motorPower^0,w,c
 11275  004B88  0EFF               	movlw	255
 11276  004B8A  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11277  004B8C  B0D8               	btfsc	status,0,c
 11278  004B8E  EFCB  F025         	goto	u9841
 11279  004B92  EFCD  F025         	goto	u9840
 11280  004B96                     u9841:
 11281  004B96  EFF5  F025         	goto	l8850
 11282  004B9A                     u9840:
 11283  004B9A                     
 11284                           ;main.c: 381:         if (motorPower < (-400)) {
 11285  004B9A  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11286  004B9C  EFD9  F025         	goto	u9851
 11287  004BA0  0E70               	movlw	112
 11288  004BA2  5C18               	subwf	setMotor@motorPower^0,w,c
 11289  004BA4  0EFE               	movlw	254
 11290  004BA6  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11291  004BA8  B0D8               	btfsc	status,0,c
 11292  004BAA  EFD9  F025         	goto	u9851
 11293  004BAE  EFDB  F025         	goto	u9850
 11294  004BB2                     u9851:
 11295  004BB2  EFDF  F025         	goto	l8846
 11296  004BB6                     u9850:
 11297  004BB6                     
 11298                           ;main.c: 382:             motorPower = (-400);
 11299  004BB6  0EFE               	movlw	254
 11300  004BB8  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11301  004BBA  0E70               	movlw	112
 11302  004BBC  6E18               	movwf	setMotor@motorPower^0,c
 11303  004BBE                     l8846:
 11304                           
 11305                           ;main.c: 384:         PWM7_LoadDutyValue(0);
 11306  004BBE  0E00               	movlw	0
 11307  004BC0  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11308  004BC2  0E00               	movlw	0
 11309  004BC4  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11310  004BC6  ECE4  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11311  004BCA                     
 11312                           ;main.c: 385:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11313  004BCA  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11314  004BCE  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11315  004BD2  1E1A               	comf	??_setMotor^0,f,c
 11316  004BD4  1E1B               	comf	(??_setMotor+1)^0,f,c
 11317  004BD6  4A1A               	infsnz	??_setMotor^0,f,c
 11318  004BD8  2A1B               	incf	(??_setMotor+1)^0,f,c
 11319  004BDA  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11320  004BDE  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11321  004BE2  ECCA  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11322                           
 11323                           ;main.c: 386:     } else {
 11324  004BE6  EF01  F026         	goto	l1378
 11325  004BEA                     l8850:
 11326                           
 11327                           ;main.c: 388:         PWM7_LoadDutyValue(0);
 11328  004BEA  0E00               	movlw	0
 11329  004BEC  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11330  004BEE  0E00               	movlw	0
 11331  004BF0  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11332  004BF2  ECE4  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11333                           
 11334                           ;main.c: 389:         PWM8_LoadDutyValue(0);
 11335  004BF6  0E00               	movlw	0
 11336  004BF8  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11337  004BFA  0E00               	movlw	0
 11338  004BFC  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11339  004BFE  ECCA  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11340  004C02                     l1378:
 11341  004C02  0012               	return		;funcret
 11342  004C04                     __end_of_setMotor:
 11343                           	callstack 0
 11344                           
 11345 ;; *************** function _PWM8_LoadDutyValue *****************
 11346 ;; Defined at:
 11347 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;		None
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  1    wreg      void 
 11354 ;; Registers used:
 11355 ;;		wreg, status,2, status,0
 11356 ;; Tracked objects:
 11357 ;;		On entry : 0/0
 11358 ;;		On exit  : 0/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11364 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;Total ram usage:        4 bytes
 11366 ;; Hardware stack levels used: 1
 11367 ;; Hardware stack levels required when called: 8
 11368 ;; This function calls:
 11369 ;;		Nothing
 11370 ;; This function is called by:
 11371 ;;		_setMotor
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           	psect	text42
 11376  005994                     __ptext42:
 11377                           	callstack 0
 11378  005994                     _PWM8_LoadDutyValue:
 11379                           	callstack 19
 11380  005994                     
 11381                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11382  005994  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11383  005998  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11384  00599C  90D8               	bcf	status,0,c
 11385  00599E  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11386  0059A0  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11387  0059A2  90D8               	bcf	status,0,c
 11388  0059A4  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11389  0059A6  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11390  0059A8  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11391  0059AA  6E61               	movwf	97,c	;volatile
 11392                           
 11393                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11394  0059AC  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11395  0059B0  0E03               	movlw	3
 11396  0059B2  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11397  0059B4  0E06               	movlw	6
 11398  0059B6  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11399  0059B8                     u9665:
 11400  0059B8  90D8               	bcf	status,0,c
 11401  0059BA  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11402  0059BC  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11403  0059BE  EFDC  F02C         	goto	u9665
 11404  0059C2  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11405  0059C4  6E60               	movwf	96,c	;volatile
 11406  0059C6  0012               	return		;funcret
 11407  0059C8                     __end_of_PWM8_LoadDutyValue:
 11408                           	callstack 0
 11409                           
 11410 ;; *************** function _PWM7_LoadDutyValue *****************
 11411 ;; Defined at:
 11412 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11413 ;; Parameters:    Size  Location     Type
 11414 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11415 ;; Auto vars:     Size  Location     Type
 11416 ;;		None
 11417 ;; Return value:  Size  Location     Type
 11418 ;;                  1    wreg      void 
 11419 ;; Registers used:
 11420 ;;		wreg, status,2, status,0
 11421 ;; Tracked objects:
 11422 ;;		On entry : 0/0
 11423 ;;		On exit  : 0/0
 11424 ;;		Unchanged: 0/0
 11425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11428 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;Total ram usage:        4 bytes
 11431 ;; Hardware stack levels used: 1
 11432 ;; Hardware stack levels required when called: 8
 11433 ;; This function calls:
 11434 ;;		Nothing
 11435 ;; This function is called by:
 11436 ;;		_setMotor
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           	psect	text43
 11441  0059C8                     __ptext43:
 11442                           	callstack 0
 11443  0059C8                     _PWM7_LoadDutyValue:
 11444                           	callstack 19
 11445  0059C8                     
 11446                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11447  0059C8  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11448  0059CC  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11449  0059D0  90D8               	bcf	status,0,c
 11450  0059D2  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11451  0059D4  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11452  0059D6  90D8               	bcf	status,0,c
 11453  0059D8  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11454  0059DA  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11455  0059DC  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11456  0059DE  6E65               	movwf	101,c	;volatile
 11457                           
 11458                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11459  0059E0  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11460  0059E4  0E03               	movlw	3
 11461  0059E6  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11462  0059E8  0E06               	movlw	6
 11463  0059EA  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11464  0059EC                     u9655:
 11465  0059EC  90D8               	bcf	status,0,c
 11466  0059EE  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11467  0059F0  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11468  0059F2  EFF6  F02C         	goto	u9655
 11469  0059F6  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11470  0059F8  6E64               	movwf	100,c	;volatile
 11471  0059FA  0012               	return		;funcret
 11472  0059FC                     __end_of_PWM7_LoadDutyValue:
 11473                           	callstack 0
 11474                           
 11475 ;; *************** function _actSpeed *****************
 11476 ;; Defined at:
 11477 ;;		line 66 in file "main.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;		None
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  speed           2   35[COMRAM] short 
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  2   33[COMRAM] short 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0, cstack
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11492 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;Total ram usage:        4 bytes
 11496 ;; Hardware stack levels used: 1
 11497 ;; Hardware stack levels required when called: 9
 11498 ;; This function calls:
 11499 ;;		___aldiv
 11500 ;; This function is called by:
 11501 ;;		_calcMotorPow
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text44
 11506  0051A8                     __ptext44:
 11507                           	callstack 0
 11508  0051A8                     _actSpeed:
 11509                           	callstack 19
 11510  0051A8                     
 11511                           ;main.c: 67:     int16_t speed = 0;
 11512  0051A8  0E00               	movlw	0
 11513  0051AA  6E25               	movwf	(actSpeed@speed+1)^0,c
 11514  0051AC  0E00               	movlw	0
 11515  0051AE  6E24               	movwf	actSpeed@speed^0,c
 11516  0051B0                     
 11517                           ;main.c: 68:     if (smtPeriod) {
 11518  0051B0  5048               	movf	_smtPeriod^0,w,c	;volatile
 11519  0051B2  1049               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11520  0051B4  104A               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11521  0051B6  104B               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11522  0051B8  B4D8               	btfsc	status,2,c
 11523  0051BA  EFE1  F028         	goto	u6421
 11524  0051BE  EFE3  F028         	goto	u6420
 11525  0051C2                     u6421:
 11526  0051C2  EF19  F029         	goto	l6662
 11527  0051C6                     u6420:
 11528  0051C6                     
 11529                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
 11530  0051C6  013C               	movlb	60	; () banked
 11531  0051C8  AB60               	btfss	96,5,b	;volatile
 11532  0051CA  EFE9  F028         	goto	u6431
 11533  0051CE  EFEB  F028         	goto	u6430
 11534  0051D2                     u6431:
 11535  0051D2  EF03  F029         	goto	l6660
 11536  0051D6                     u6430:
 11537  0051D6                     
 11538                           ; BSR set to: 60
 11539                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11540  0051D6  0E20               	movlw	32
 11541  0051D8  6E14               	movwf	___aldiv@dividend^0,c
 11542  0051DA  0EA1               	movlw	161
 11543  0051DC  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11544  0051DE  0E07               	movlw	7
 11545  0051E0  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11546  0051E2  0E00               	movlw	0
 11547  0051E4  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11548  0051E6  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11549  0051EA  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11550  0051EE  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11551  0051F2  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11552  0051F6  EC88  F022         	call	___aldiv	;wreg free
 11553  0051FA  C014  F024         	movff	?___aldiv,actSpeed@speed
 11554  0051FE  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11555                           
 11556                           ;main.c: 71:         } else {
 11557  005202  EF19  F029         	goto	l6662
 11558  005206                     l6660:
 11559                           
 11560                           ; BSR set to: 60
 11561                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11562  005206  0EE0               	movlw	224
 11563  005208  6E14               	movwf	___aldiv@dividend^0,c
 11564  00520A  0E5E               	movlw	94
 11565  00520C  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11566  00520E  0EF8               	movlw	248
 11567  005210  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11568  005212  0EFF               	movlw	255
 11569  005214  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11570  005216  C048  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11571  00521A  C049  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11572  00521E  C04A  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11573  005222  C04B  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11574  005226  EC88  F022         	call	___aldiv	;wreg free
 11575  00522A  C014  F024         	movff	?___aldiv,actSpeed@speed
 11576  00522E  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11577  005232                     l6662:
 11578                           
 11579                           ;main.c: 75:     return speed;
 11580  005232  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11581  005236  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11582  00523A  0012               	return		;funcret
 11583  00523C                     __end_of_actSpeed:
 11584                           	callstack 0
 11585                           
 11586 ;; *************** function ___aldiv *****************
 11587 ;; Defined at:
 11588 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  dividend        4   19[COMRAM] long 
 11591 ;;  divisor         4   23[COMRAM] long 
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;  quotient        4   29[COMRAM] long 
 11594 ;;  sign            1   28[COMRAM] unsigned char 
 11595 ;;  counter         1   27[COMRAM] unsigned char 
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  4   19[COMRAM] long 
 11598 ;; Registers used:
 11599 ;;		wreg, status,2, status,0
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/0
 11602 ;;		On exit  : 0/0
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11605 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11608 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;Total ram usage:       14 bytes
 11610 ;; Hardware stack levels used: 1
 11611 ;; Hardware stack levels required when called: 8
 11612 ;; This function calls:
 11613 ;;		Nothing
 11614 ;; This function is called by:
 11615 ;;		_actSpeed
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           	psect	text45
 11620  004510                     __ptext45:
 11621                           	callstack 0
 11622  004510                     ___aldiv:
 11623                           	callstack 19
 11624  004510  0E00               	movlw	0
 11625  004512  6E1D               	movwf	___aldiv@sign^0,c
 11626  004514  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11627  004516  EF91  F022         	goto	u6150
 11628  00451A  EF8F  F022         	goto	u6151
 11629  00451E                     u6151:
 11630  00451E  EF9B  F022         	goto	l6438
 11631  004522                     u6150:
 11632  004522  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11633  004524  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11634  004526  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11635  004528  6C18               	negf	___aldiv@divisor^0,c
 11636  00452A  0E00               	movlw	0
 11637  00452C  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11638  00452E  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11639  004530  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11640  004532  0E01               	movlw	1
 11641  004534  6E1D               	movwf	___aldiv@sign^0,c
 11642  004536                     l6438:
 11643  004536  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11644  004538  EFA2  F022         	goto	u6160
 11645  00453C  EFA0  F022         	goto	u6161
 11646  004540                     u6161:
 11647  004540  EFAC  F022         	goto	l6444
 11648  004544                     u6160:
 11649  004544  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11650  004546  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11651  004548  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11652  00454A  6C14               	negf	___aldiv@dividend^0,c
 11653  00454C  0E00               	movlw	0
 11654  00454E  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11655  004550  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11656  004552  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11657  004554  0E01               	movlw	1
 11658  004556  1A1D               	xorwf	___aldiv@sign^0,f,c
 11659  004558                     l6444:
 11660  004558  0E00               	movlw	0
 11661  00455A  6E1E               	movwf	___aldiv@quotient^0,c
 11662  00455C  0E00               	movlw	0
 11663  00455E  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11664  004560  0E00               	movlw	0
 11665  004562  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11666  004564  0E00               	movlw	0
 11667  004566  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11668  004568  5018               	movf	___aldiv@divisor^0,w,c
 11669  00456A  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11670  00456C  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11671  00456E  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11672  004570  B4D8               	btfsc	status,2,c
 11673  004572  EFBD  F022         	goto	u6171
 11674  004576  EFBF  F022         	goto	u6170
 11675  00457A                     u6171:
 11676  00457A  EFF5  F022         	goto	l6466
 11677  00457E                     u6170:
 11678  00457E  0E01               	movlw	1
 11679  004580  6E1C               	movwf	___aldiv@counter^0,c
 11680  004582  EFC9  F022         	goto	l6452
 11681  004586                     l6450:
 11682  004586  90D8               	bcf	status,0,c
 11683  004588  3618               	rlcf	___aldiv@divisor^0,f,c
 11684  00458A  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11685  00458C  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11686  00458E  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11687  004590  2A1C               	incf	___aldiv@counter^0,f,c
 11688  004592                     l6452:
 11689  004592  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11690  004594  EFCE  F022         	goto	u6181
 11691  004598  EFD0  F022         	goto	u6180
 11692  00459C                     u6181:
 11693  00459C  EFC3  F022         	goto	l6450
 11694  0045A0                     u6180:
 11695  0045A0                     l6454:
 11696  0045A0  90D8               	bcf	status,0,c
 11697  0045A2  361E               	rlcf	___aldiv@quotient^0,f,c
 11698  0045A4  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11699  0045A6  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11700  0045A8  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11701  0045AA  5018               	movf	___aldiv@divisor^0,w,c
 11702  0045AC  5C14               	subwf	___aldiv@dividend^0,w,c
 11703  0045AE  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11704  0045B0  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11705  0045B2  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11706  0045B4  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11707  0045B6  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11708  0045B8  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11709  0045BA  A0D8               	btfss	status,0,c
 11710  0045BC  EFE2  F022         	goto	u6191
 11711  0045C0  EFE4  F022         	goto	u6190
 11712  0045C4                     u6191:
 11713  0045C4  EFED  F022         	goto	l6462
 11714  0045C8                     u6190:
 11715  0045C8  5018               	movf	___aldiv@divisor^0,w,c
 11716  0045CA  5E14               	subwf	___aldiv@dividend^0,f,c
 11717  0045CC  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11718  0045CE  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11719  0045D0  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11720  0045D2  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11721  0045D4  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11722  0045D6  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11723  0045D8  801E               	bsf	___aldiv@quotient^0,0,c
 11724  0045DA                     l6462:
 11725  0045DA  90D8               	bcf	status,0,c
 11726  0045DC  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11727  0045DE  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11728  0045E0  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11729  0045E2  3218               	rrcf	___aldiv@divisor^0,f,c
 11730  0045E4  2E1C               	decfsz	___aldiv@counter^0,f,c
 11731  0045E6  EFD0  F022         	goto	l6454
 11732  0045EA                     l6466:
 11733  0045EA  501D               	movf	___aldiv@sign^0,w,c
 11734  0045EC  B4D8               	btfsc	status,2,c
 11735  0045EE  EFFB  F022         	goto	u6201
 11736  0045F2  EFFD  F022         	goto	u6200
 11737  0045F6                     u6201:
 11738  0045F6  EF05  F023         	goto	l6470
 11739  0045FA                     u6200:
 11740  0045FA  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11741  0045FC  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11742  0045FE  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11743  004600  6C1E               	negf	___aldiv@quotient^0,c
 11744  004602  0E00               	movlw	0
 11745  004604  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11746  004606  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11747  004608  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11748  00460A                     l6470:
 11749  00460A  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11750  00460E  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11751  004612  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11752  004616  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11753  00461A  0012               	return		;funcret
 11754  00461C                     __end_of___aldiv:
 11755                           	callstack 0
 11756                           
 11757 ;; *************** function ___xxtofl *****************
 11758 ;; Defined at:
 11759 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  sign            1    wreg     unsigned char 
 11762 ;;  val             4   27[COMRAM] long 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  sign            1   35[COMRAM] unsigned char 
 11765 ;;  arg             4   37[COMRAM] unsigned long 
 11766 ;;  exp             1   36[COMRAM] unsigned char 
 11767 ;; Return value:  Size  Location     Type
 11768 ;;                  4   27[COMRAM] unsigned char 
 11769 ;; Registers used:
 11770 ;;		wreg, status,2, status,0
 11771 ;; Tracked objects:
 11772 ;;		On entry : 0/0
 11773 ;;		On exit  : 0/0
 11774 ;;		Unchanged: 0/0
 11775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11777 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;Total ram usage:       14 bytes
 11781 ;; Hardware stack levels used: 1
 11782 ;; Hardware stack levels required when called: 8
 11783 ;; This function calls:
 11784 ;;		Nothing
 11785 ;; This function is called by:
 11786 ;;		_loop
 11787 ;;		_checkBatt
 11788 ;;		_startAccell
 11789 ;;		_calcSteering
 11790 ;;		_calcSpeed
 11791 ;;		_calcMotorPow
 11792 ;; This function uses a non-reentrant model
 11793 ;;
 11794                           
 11795                           	psect	text46
 11796  003ACC                     __ptext46:
 11797                           	callstack 0
 11798  003ACC                     ___xxtofl:
 11799                           	callstack 19
 11800                           
 11801                           ;incstack = 0
 11802                           ;___xxtofl@sign stored from wreg
 11803  003ACC  6E24               	movwf	___xxtofl@sign^0,c
 11804  003ACE  5024               	movf	___xxtofl@sign^0,w,c
 11805  003AD0  B4D8               	btfsc	status,2,c
 11806  003AD2  EF6D  F01D         	goto	u9711
 11807  003AD6  EF6F  F01D         	goto	u9710
 11808  003ADA                     u9711:
 11809  003ADA  EF91  F01D         	goto	l2053
 11810  003ADE                     u9710:
 11811  003ADE  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11812  003AE0  EF76  F01D         	goto	u9720
 11813  003AE4  EF74  F01D         	goto	u9721
 11814  003AE8                     u9721:
 11815  003AE8  EF91  F01D         	goto	l2053
 11816  003AEC                     u9720:
 11817  003AEC  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11818  003AF0  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11819  003AF4  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11820  003AF8  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11821  003AFC  1E20               	comf	??___xxtofl^0,f,c
 11822  003AFE  1E21               	comf	(??___xxtofl+1)^0,f,c
 11823  003B00  1E22               	comf	(??___xxtofl+2)^0,f,c
 11824  003B02  1E23               	comf	(??___xxtofl+3)^0,f,c
 11825  003B04  2A20               	incf	??___xxtofl^0,f,c
 11826  003B06  0E00               	movlw	0
 11827  003B08  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11828  003B0A  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11829  003B0C  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11830  003B0E  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11831  003B12  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11832  003B16  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11833  003B1A  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11834  003B1E  EF99  F01D         	goto	l8782
 11835  003B22                     l2053:
 11836  003B22  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11837  003B26  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11838  003B2A  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11839  003B2E  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11840  003B32                     l8782:
 11841  003B32  501C               	movf	___xxtofl@val^0,w,c
 11842  003B34  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11843  003B36  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11844  003B38  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11845  003B3A  A4D8               	btfss	status,2,c
 11846  003B3C  EFA2  F01D         	goto	u9731
 11847  003B40  EFA4  F01D         	goto	u9730
 11848  003B44                     u9731:
 11849  003B44  EFAE  F01D         	goto	l8788
 11850  003B48                     u9730:
 11851  003B48  0E00               	movlw	0
 11852  003B4A  6E1C               	movwf	?___xxtofl^0,c
 11853  003B4C  0E00               	movlw	0
 11854  003B4E  6E1D               	movwf	(?___xxtofl+1)^0,c
 11855  003B50  0E00               	movlw	0
 11856  003B52  6E1E               	movwf	(?___xxtofl+2)^0,c
 11857  003B54  0E00               	movlw	0
 11858  003B56  6E1F               	movwf	(?___xxtofl+3)^0,c
 11859  003B58  EF3F  F01E         	goto	l2056
 11860  003B5C                     l8788:
 11861  003B5C  0E96               	movlw	150
 11862  003B5E  6E25               	movwf	___xxtofl@exp^0,c
 11863  003B60  EFB8  F01D         	goto	l8792
 11864  003B64                     l8790:
 11865  003B64  2A25               	incf	___xxtofl@exp^0,f,c
 11866  003B66  90D8               	bcf	status,0,c
 11867  003B68  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11868  003B6A  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11869  003B6C  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11870  003B6E  3226               	rrcf	___xxtofl@arg^0,f,c
 11871  003B70                     l8792:
 11872  003B70  0E00               	movlw	0
 11873  003B72  1426               	andwf	___xxtofl@arg^0,w,c
 11874  003B74  6E20               	movwf	??___xxtofl^0,c
 11875  003B76  0E00               	movlw	0
 11876  003B78  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11877  003B7A  6E21               	movwf	(??___xxtofl+1)^0,c
 11878  003B7C  0E00               	movlw	0
 11879  003B7E  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11880  003B80  6E22               	movwf	(??___xxtofl+2)^0,c
 11881  003B82  0EFE               	movlw	254
 11882  003B84  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11883  003B86  6E23               	movwf	(??___xxtofl+3)^0,c
 11884  003B88  5020               	movf	??___xxtofl^0,w,c
 11885  003B8A  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11886  003B8C  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11887  003B8E  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11888  003B90  A4D8               	btfss	status,2,c
 11889  003B92  EFCD  F01D         	goto	u9741
 11890  003B96  EFCF  F01D         	goto	u9740
 11891  003B9A                     u9741:
 11892  003B9A  EFB2  F01D         	goto	l8790
 11893  003B9E                     u9740:
 11894  003B9E  EFDD  F01D         	goto	l2060
 11895  003BA2                     l8794:
 11896  003BA2  2A25               	incf	___xxtofl@exp^0,f,c
 11897  003BA4  0E01               	movlw	1
 11898  003BA6  2626               	addwf	___xxtofl@arg^0,f,c
 11899  003BA8  0E00               	movlw	0
 11900  003BAA  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11901  003BAC  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11902  003BAE  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11903  003BB0  90D8               	bcf	status,0,c
 11904  003BB2  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11905  003BB4  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11906  003BB6  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11907  003BB8  3226               	rrcf	___xxtofl@arg^0,f,c
 11908  003BBA                     l2060:
 11909  003BBA  0E00               	movlw	0
 11910  003BBC  1426               	andwf	___xxtofl@arg^0,w,c
 11911  003BBE  6E20               	movwf	??___xxtofl^0,c
 11912  003BC0  0E00               	movlw	0
 11913  003BC2  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11914  003BC4  6E21               	movwf	(??___xxtofl+1)^0,c
 11915  003BC6  0E00               	movlw	0
 11916  003BC8  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11917  003BCA  6E22               	movwf	(??___xxtofl+2)^0,c
 11918  003BCC  0EFF               	movlw	255
 11919  003BCE  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11920  003BD0  6E23               	movwf	(??___xxtofl+3)^0,c
 11921  003BD2  5020               	movf	??___xxtofl^0,w,c
 11922  003BD4  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11923  003BD6  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11924  003BD8  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11925  003BDA  A4D8               	btfss	status,2,c
 11926  003BDC  EFF2  F01D         	goto	u9751
 11927  003BE0  EFF4  F01D         	goto	u9750
 11928  003BE4                     u9751:
 11929  003BE4  EFD1  F01D         	goto	l8794
 11930  003BE8                     u9750:
 11931  003BE8  EFFC  F01D         	goto	l8802
 11932  003BEC                     l8800:
 11933  003BEC  0625               	decf	___xxtofl@exp^0,f,c
 11934  003BEE  90D8               	bcf	status,0,c
 11935  003BF0  3626               	rlcf	___xxtofl@arg^0,f,c
 11936  003BF2  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11937  003BF4  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11938  003BF6  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11939  003BF8                     l8802:
 11940  003BF8  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11941  003BFA  EF01  F01E         	goto	u9761
 11942  003BFE  EF03  F01E         	goto	u9760
 11943  003C02                     u9761:
 11944  003C02  EF0B  F01E         	goto	l2067
 11945  003C06                     u9760:
 11946  003C06  0E02               	movlw	2
 11947  003C08  6025               	cpfslt	___xxtofl@exp^0,c
 11948  003C0A  EF09  F01E         	goto	u9771
 11949  003C0E  EF0B  F01E         	goto	u9770
 11950  003C12                     u9771:
 11951  003C12  EFF6  F01D         	goto	l8800
 11952  003C16                     u9770:
 11953  003C16                     l2067:
 11954  003C16  B025               	btfsc	___xxtofl@exp^0,0,c
 11955  003C18  EF10  F01E         	goto	u9781
 11956  003C1C  EF12  F01E         	goto	u9780
 11957  003C20                     u9781:
 11958  003C20  EF13  F01E         	goto	l8808
 11959  003C24                     u9780:
 11960  003C24  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11961  003C26                     l8808:
 11962  003C26  90D8               	bcf	status,0,c
 11963  003C28  3225               	rrcf	___xxtofl@exp^0,f,c
 11964  003C2A  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11965  003C2E  6A21               	clrf	(??___xxtofl+1)^0,c
 11966  003C30  6A22               	clrf	(??___xxtofl+2)^0,c
 11967  003C32  6A23               	clrf	(??___xxtofl+3)^0,c
 11968  003C34  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11969  003C38  6A22               	clrf	(??___xxtofl+2)^0,c
 11970  003C3A  6A21               	clrf	(??___xxtofl+1)^0,c
 11971  003C3C  6A20               	clrf	??___xxtofl^0,c
 11972  003C3E  5020               	movf	??___xxtofl^0,w,c
 11973  003C40  1226               	iorwf	___xxtofl@arg^0,f,c
 11974  003C42  5021               	movf	(??___xxtofl+1)^0,w,c
 11975  003C44  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 11976  003C46  5022               	movf	(??___xxtofl+2)^0,w,c
 11977  003C48  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 11978  003C4A  5023               	movf	(??___xxtofl+3)^0,w,c
 11979  003C4C  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 11980  003C4E  5024               	movf	___xxtofl@sign^0,w,c
 11981  003C50  B4D8               	btfsc	status,2,c
 11982  003C52  EF2D  F01E         	goto	u9791
 11983  003C56  EF2F  F01E         	goto	u9790
 11984  003C5A                     u9791:
 11985  003C5A  EF37  F01E         	goto	l8818
 11986  003C5E                     u9790:
 11987  003C5E  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11988  003C60  EF36  F01E         	goto	u9800
 11989  003C64  EF34  F01E         	goto	u9801
 11990  003C68                     u9801:
 11991  003C68  EF37  F01E         	goto	l8818
 11992  003C6C                     u9800:
 11993  003C6C  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 11994  003C6E                     l8818:
 11995  003C6E  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 11996  003C72  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 11997  003C76  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 11998  003C7A  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 11999  003C7E                     l2056:
 12000  003C7E  0012               	return		;funcret
 12001  003C80                     __end_of___xxtofl:
 12002                           	callstack 0
 12003                           
 12004 ;; *************** function ___fltol *****************
 12005 ;; Defined at:
 12006 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12007 ;; Parameters:    Size  Location     Type
 12008 ;;  f1              4   25[BANK0 ] unsigned char 
 12009 ;; Auto vars:     Size  Location     Type
 12010 ;;  exp1            1   34[BANK0 ] unsigned char 
 12011 ;;  sign1           1   33[BANK0 ] unsigned char 
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  4   25[BANK0 ] long 
 12014 ;; Registers used:
 12015 ;;		wreg, status,2, status,0
 12016 ;; Tracked objects:
 12017 ;;		On entry : 0/0
 12018 ;;		On exit  : 0/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12023 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12024 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12025 ;;Total ram usage:       10 bytes
 12026 ;; Hardware stack levels used: 1
 12027 ;; Hardware stack levels required when called: 8
 12028 ;; This function calls:
 12029 ;;		Nothing
 12030 ;; This function is called by:
 12031 ;;		_startAccell
 12032 ;;		_calcSteering
 12033 ;;		_calcSpeed
 12034 ;;		_calcMotorPow
 12035 ;;		_efgtoa
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           	psect	text47
 12040  00461C                     __ptext47:
 12041                           	callstack 0
 12042  00461C                     ___fltol:
 12043                           	callstack 16
 12044  00461C  0100               	movlb	0	; () banked
 12045  00461E  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12046  004620  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12047  004622  6F82               	movwf	___fltol@exp1& (0+255),b
 12048  004624  5182               	movf	___fltol@exp1& (0+255),w,b
 12049  004626  A4D8               	btfss	status,2,c
 12050  004628  EF18  F023         	goto	u8441
 12051  00462C  EF1A  F023         	goto	u8440
 12052  004630                     u8441:
 12053  004630  EF24  F023         	goto	l8130
 12054  004634                     u8440:
 12055  004634                     l8126:
 12056                           
 12057                           ; BSR set to: 0
 12058  004634  0E00               	movlw	0
 12059  004636  6F79               	movwf	?___fltol& (0+255),b
 12060  004638  0E00               	movlw	0
 12061  00463A  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12062  00463C  0E00               	movlw	0
 12063  00463E  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12064  004640  0E00               	movlw	0
 12065  004642  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12066  004644  EF91  F023         	goto	l1695
 12067  004648                     l8130:
 12068                           
 12069                           ; BSR set to: 0
 12070  004648  C079  F07D         	movff	___fltol@f1,??___fltol
 12071  00464C  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12072  004650  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12073  004654  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12074  004658  0E20               	movlw	32
 12075  00465A  EF34  F023         	goto	u8450
 12076  00465E                     u8455:
 12077  00465E  90D8               	bcf	status,0,c
 12078  004660  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12079  004662  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12080  004664  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12081  004666  337D               	rrcf	??___fltol& (0+255),f,b
 12082  004668                     u8450:
 12083  004668  2EE8               	decfsz	wreg,f,c
 12084  00466A  EF2F  F023         	goto	u8455
 12085  00466E  517D               	movf	??___fltol& (0+255),w,b
 12086  004670  6F81               	movwf	___fltol@sign1& (0+255),b
 12087  004672                     
 12088                           ; BSR set to: 0
 12089  004672  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12090  004674                     
 12091                           ; BSR set to: 0
 12092  004674  0EFF               	movlw	255
 12093  004676  1779               	andwf	___fltol@f1& (0+255),f,b
 12094  004678  0EFF               	movlw	255
 12095  00467A  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12096  00467C  0EFF               	movlw	255
 12097  00467E  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12098  004680  0E00               	movlw	0
 12099  004682  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12100  004684                     
 12101                           ; BSR set to: 0
 12102  004684  0E96               	movlw	150
 12103  004686  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12104  004688                     
 12105                           ; BSR set to: 0
 12106  004688  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12107  00468A  EF4B  F023         	goto	u8460
 12108  00468E  EF49  F023         	goto	u8461
 12109  004692                     u8461:
 12110  004692  EF61  F023         	goto	l8150
 12111  004696                     u8460:
 12112  004696                     
 12113                           ; BSR set to: 0
 12114  004696  5182               	movf	___fltol@exp1& (0+255),w,b
 12115  004698  0A80               	xorlw	128
 12116  00469A  0F97               	addlw	151
 12117  00469C  B0D8               	btfsc	status,0,c
 12118  00469E  EF53  F023         	goto	u8471
 12119  0046A2  EF55  F023         	goto	u8470
 12120  0046A6                     u8471:
 12121  0046A6  EF57  F023         	goto	l8146
 12122  0046AA                     u8470:
 12123  0046AA  EF1A  F023         	goto	l8126
 12124  0046AE                     l8146:
 12125                           
 12126                           ; BSR set to: 0
 12127  0046AE  90D8               	bcf	status,0,c
 12128  0046B0  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12129  0046B2  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12130  0046B4  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12131  0046B6  3379               	rrcf	___fltol@f1& (0+255),f,b
 12132  0046B8                     
 12133                           ; BSR set to: 0
 12134  0046B8  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12135  0046BA  EF57  F023         	goto	l8146
 12136  0046BE  EF79  F023         	goto	l8160
 12137  0046C2                     l8150:
 12138                           
 12139                           ; BSR set to: 0
 12140  0046C2  0E1F               	movlw	31
 12141  0046C4  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12142  0046C6  EF67  F023         	goto	u8481
 12143  0046CA  EF69  F023         	goto	u8480
 12144  0046CE                     u8481:
 12145  0046CE  EF71  F023         	goto	l8158
 12146  0046D2                     u8480:
 12147  0046D2  EF1A  F023         	goto	l8126
 12148  0046D6                     l8156:
 12149                           
 12150                           ; BSR set to: 0
 12151  0046D6  90D8               	bcf	status,0,c
 12152  0046D8  3779               	rlcf	___fltol@f1& (0+255),f,b
 12153  0046DA  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12154  0046DC  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12155  0046DE  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12156  0046E0  0782               	decf	___fltol@exp1& (0+255),f,b
 12157  0046E2                     l8158:
 12158                           
 12159                           ; BSR set to: 0
 12160  0046E2  5182               	movf	___fltol@exp1& (0+255),w,b
 12161  0046E4  A4D8               	btfss	status,2,c
 12162  0046E6  EF77  F023         	goto	u8491
 12163  0046EA  EF79  F023         	goto	u8490
 12164  0046EE                     u8491:
 12165  0046EE  EF6B  F023         	goto	l8156
 12166  0046F2                     u8490:
 12167  0046F2                     l8160:
 12168                           
 12169                           ; BSR set to: 0
 12170  0046F2  5181               	movf	___fltol@sign1& (0+255),w,b
 12171  0046F4  B4D8               	btfsc	status,2,c
 12172  0046F6  EF7F  F023         	goto	u8501
 12173  0046FA  EF81  F023         	goto	u8500
 12174  0046FE                     u8501:
 12175  0046FE  EF89  F023         	goto	l8164
 12176  004702                     u8500:
 12177  004702                     
 12178                           ; BSR set to: 0
 12179  004702  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12180  004704  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12181  004706  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12182  004708  6D79               	negf	___fltol@f1& (0+255),b
 12183  00470A  0E00               	movlw	0
 12184  00470C  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12185  00470E  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12186  004710  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12187  004712                     l8164:
 12188                           
 12189                           ; BSR set to: 0
 12190  004712  C079  F079         	movff	___fltol@f1,?___fltol
 12191  004716  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12192  00471A  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12193  00471E  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12194  004722                     l1695:
 12195                           
 12196                           ; BSR set to: 0
 12197  004722  0012               	return		;funcret
 12198  004724                     __end_of___fltol:
 12199                           	callstack 0
 12200                           
 12201 ;; *************** function ___flmul *****************
 12202 ;; Defined at:
 12203 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  b               4   41[COMRAM] long 
 12206 ;;  a               4   45[COMRAM] long 
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;  prod            4    7[BANK0 ] struct .
 12209 ;;  grs             4    2[BANK0 ] unsigned long 
 12210 ;;  temp            2   11[BANK0 ] struct .
 12211 ;;  bexp            1    6[BANK0 ] unsigned char 
 12212 ;;  aexp            1    1[BANK0 ] unsigned char 
 12213 ;;  sign            1    0[BANK0 ] unsigned char 
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  4   41[COMRAM] unsigned char 
 12216 ;; Registers used:
 12217 ;;		wreg, status,2, status,0, prodl, prodh
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12226 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;Total ram usage:       25 bytes
 12228 ;; Hardware stack levels used: 1
 12229 ;; Hardware stack levels required when called: 8
 12230 ;; This function calls:
 12231 ;;		Nothing
 12232 ;; This function is called by:
 12233 ;;		_startAccell
 12234 ;;		_calcSteering
 12235 ;;		_calcSpeed
 12236 ;;		_calcMotorPow
 12237 ;;		_efgtoa
 12238 ;; This function uses a non-reentrant model
 12239 ;;
 12240                           
 12241                           	psect	text48
 12242  002704                     __ptext48:
 12243                           	callstack 0
 12244  002704                     ___flmul:
 12245                           	callstack 16
 12246  002704  502D               	movf	(___flmul@b+3)^0,w,c
 12247  002706  0B80               	andlw	128
 12248  002708  0100               	movlb	0	; () banked
 12249  00270A  6F60               	movwf	___flmul@sign& (0+255),b
 12250  00270C  502D               	movf	(___flmul@b+3)^0,w,c
 12251  00270E  242D               	addwf	(___flmul@b+3)^0,w,c
 12252  002710  6F66               	movwf	___flmul@bexp& (0+255),b
 12253  002712                     
 12254                           ; BSR set to: 0
 12255  002712  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12256  002714  EF8E  F013         	goto	u8041
 12257  002718  EF90  F013         	goto	u8040
 12258  00271C                     u8041:
 12259  00271C  EF91  F013         	goto	l7868
 12260  002720                     u8040:
 12261  002720                     
 12262                           ; BSR set to: 0
 12263  002720  8166               	bsf	___flmul@bexp& (0+255),0,b
 12264  002722                     l7868:
 12265                           
 12266                           ; BSR set to: 0
 12267  002722  5166               	movf	___flmul@bexp& (0+255),w,b
 12268  002724  B4D8               	btfsc	status,2,c
 12269  002726  EF97  F013         	goto	u8051
 12270  00272A  EF99  F013         	goto	u8050
 12271  00272E                     u8051:
 12272  00272E  EFAC  F013         	goto	l7876
 12273  002732                     u8050:
 12274  002732                     
 12275                           ; BSR set to: 0
 12276  002732  2966               	incf	___flmul@bexp& (0+255),w,b
 12277  002734  A4D8               	btfss	status,2,c
 12278  002736  EF9F  F013         	goto	u8061
 12279  00273A  EFA1  F013         	goto	u8060
 12280  00273E                     u8061:
 12281  00273E  EFA9  F013         	goto	l7874
 12282  002742                     u8060:
 12283  002742                     
 12284                           ; BSR set to: 0
 12285  002742  0E00               	movlw	0
 12286  002744  6E2A               	movwf	___flmul@b^0,c
 12287  002746  0E00               	movlw	0
 12288  002748  6E2B               	movwf	(___flmul@b+1)^0,c
 12289  00274A  0E00               	movlw	0
 12290  00274C  6E2C               	movwf	(___flmul@b+2)^0,c
 12291  00274E  0E00               	movlw	0
 12292  002750  6E2D               	movwf	(___flmul@b+3)^0,c
 12293  002752                     l7874:
 12294                           
 12295                           ; BSR set to: 0
 12296  002752  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12297  002754  EFB4  F013         	goto	l7878
 12298  002758                     l7876:
 12299                           
 12300                           ; BSR set to: 0
 12301  002758  0E00               	movlw	0
 12302  00275A  6E2A               	movwf	___flmul@b^0,c
 12303  00275C  0E00               	movlw	0
 12304  00275E  6E2B               	movwf	(___flmul@b+1)^0,c
 12305  002760  0E00               	movlw	0
 12306  002762  6E2C               	movwf	(___flmul@b+2)^0,c
 12307  002764  0E00               	movlw	0
 12308  002766  6E2D               	movwf	(___flmul@b+3)^0,c
 12309  002768                     l7878:
 12310                           
 12311                           ; BSR set to: 0
 12312  002768  5031               	movf	(___flmul@a+3)^0,w,c
 12313  00276A  0B80               	andlw	128
 12314  00276C  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12315  00276E                     
 12316                           ; BSR set to: 0
 12317  00276E  5031               	movf	(___flmul@a+3)^0,w,c
 12318  002770  2431               	addwf	(___flmul@a+3)^0,w,c
 12319  002772  6F61               	movwf	___flmul@aexp& (0+255),b
 12320  002774                     
 12321                           ; BSR set to: 0
 12322  002774  AE30               	btfss	(___flmul@a+2)^0,7,c
 12323  002776  EFBF  F013         	goto	u8071
 12324  00277A  EFC1  F013         	goto	u8070
 12325  00277E                     u8071:
 12326  00277E  EFC2  F013         	goto	l7886
 12327  002782                     u8070:
 12328  002782                     
 12329                           ; BSR set to: 0
 12330  002782  8161               	bsf	___flmul@aexp& (0+255),0,b
 12331  002784                     l7886:
 12332                           
 12333                           ; BSR set to: 0
 12334  002784  5161               	movf	___flmul@aexp& (0+255),w,b
 12335  002786  B4D8               	btfsc	status,2,c
 12336  002788  EFC8  F013         	goto	u8081
 12337  00278C  EFCA  F013         	goto	u8080
 12338  002790                     u8081:
 12339  002790  EFDD  F013         	goto	l7894
 12340  002794                     u8080:
 12341  002794                     
 12342                           ; BSR set to: 0
 12343  002794  2961               	incf	___flmul@aexp& (0+255),w,b
 12344  002796  A4D8               	btfss	status,2,c
 12345  002798  EFD0  F013         	goto	u8091
 12346  00279C  EFD2  F013         	goto	u8090
 12347  0027A0                     u8091:
 12348  0027A0  EFDA  F013         	goto	l7892
 12349  0027A4                     u8090:
 12350  0027A4                     
 12351                           ; BSR set to: 0
 12352  0027A4  0E00               	movlw	0
 12353  0027A6  6E2E               	movwf	___flmul@a^0,c
 12354  0027A8  0E00               	movlw	0
 12355  0027AA  6E2F               	movwf	(___flmul@a+1)^0,c
 12356  0027AC  0E00               	movlw	0
 12357  0027AE  6E30               	movwf	(___flmul@a+2)^0,c
 12358  0027B0  0E00               	movlw	0
 12359  0027B2  6E31               	movwf	(___flmul@a+3)^0,c
 12360  0027B4                     l7892:
 12361                           
 12362                           ; BSR set to: 0
 12363  0027B4  8E30               	bsf	(___flmul@a+2)^0,7,c
 12364  0027B6  EFE5  F013         	goto	l2012
 12365  0027BA                     l7894:
 12366                           
 12367                           ; BSR set to: 0
 12368  0027BA  0E00               	movlw	0
 12369  0027BC  6E2E               	movwf	___flmul@a^0,c
 12370  0027BE  0E00               	movlw	0
 12371  0027C0  6E2F               	movwf	(___flmul@a+1)^0,c
 12372  0027C2  0E00               	movlw	0
 12373  0027C4  6E30               	movwf	(___flmul@a+2)^0,c
 12374  0027C6  0E00               	movlw	0
 12375  0027C8  6E31               	movwf	(___flmul@a+3)^0,c
 12376  0027CA                     l2012:
 12377                           
 12378                           ; BSR set to: 0
 12379  0027CA  5161               	movf	___flmul@aexp& (0+255),w,b
 12380  0027CC  B4D8               	btfsc	status,2,c
 12381  0027CE  EFEB  F013         	goto	u8101
 12382  0027D2  EFED  F013         	goto	u8100
 12383  0027D6                     u8101:
 12384  0027D6  EFF5  F013         	goto	l7898
 12385  0027DA                     u8100:
 12386  0027DA                     
 12387                           ; BSR set to: 0
 12388  0027DA  5166               	movf	___flmul@bexp& (0+255),w,b
 12389  0027DC  A4D8               	btfss	status,2,c
 12390  0027DE  EFF3  F013         	goto	u8111
 12391  0027E2  EFF5  F013         	goto	u8110
 12392  0027E6                     u8111:
 12393  0027E6  EFFF  F013         	goto	l7902
 12394  0027EA                     u8110:
 12395  0027EA                     l7898:
 12396                           
 12397                           ; BSR set to: 0
 12398  0027EA  0E00               	movlw	0
 12399  0027EC  6E2A               	movwf	?___flmul^0,c
 12400  0027EE  0E00               	movlw	0
 12401  0027F0  6E2B               	movwf	(?___flmul+1)^0,c
 12402  0027F2  0E00               	movlw	0
 12403  0027F4  6E2C               	movwf	(?___flmul+2)^0,c
 12404  0027F6  0E00               	movlw	0
 12405  0027F8  6E2D               	movwf	(?___flmul+3)^0,c
 12406  0027FA  EFA9  F015         	goto	l2016
 12407  0027FE                     l7902:
 12408                           
 12409                           ; BSR set to: 0
 12410  0027FE  5030               	movf	(___flmul@a+2)^0,w,c
 12411  002800  022A               	mulwf	___flmul@b^0,c
 12412  002802  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12413  002808  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12414  00280E                     
 12415                           ; BSR set to: 0
 12416  00280E  516B               	movf	___flmul@temp& (0+255),w,b
 12417  002810  6F62               	movwf	___flmul@grs& (0+255),b
 12418  002812  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12419  002814  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12420  002816  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12421  002818                     
 12422                           ; BSR set to: 0
 12423  002818  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12424  00281A  6F67               	movwf	___flmul@prod& (0+255),b
 12425  00281C  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12426  00281E  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12427  002820  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12428  002822  502F               	movf	(___flmul@a+1)^0,w,c
 12429  002824  022B               	mulwf	(___flmul@b+1)^0,c
 12430  002826  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12431  00282C  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12432  002832                     
 12433                           ; BSR set to: 0
 12434  002832  516B               	movf	___flmul@temp& (0+255),w,b
 12435  002834  2762               	addwf	___flmul@grs& (0+255),f,b
 12436  002836  0E00               	movlw	0
 12437  002838  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12438  00283A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12439  00283C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12440  00283E                     
 12441                           ; BSR set to: 0
 12442  00283E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12443  002840  2767               	addwf	___flmul@prod& (0+255),f,b
 12444  002842  0E00               	movlw	0
 12445  002844  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12446  002846  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12447  002848  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12448  00284A  502E               	movf	___flmul@a^0,w,c
 12449  00284C  022C               	mulwf	(___flmul@b+2)^0,c
 12450  00284E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12451  002854  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12452  00285A                     
 12453                           ; BSR set to: 0
 12454  00285A  516B               	movf	___flmul@temp& (0+255),w,b
 12455  00285C  2762               	addwf	___flmul@grs& (0+255),f,b
 12456  00285E  0E00               	movlw	0
 12457  002860  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12458  002862  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12459  002864  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12460  002866                     
 12461                           ; BSR set to: 0
 12462  002866  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12463  002868  2767               	addwf	___flmul@prod& (0+255),f,b
 12464  00286A  0E00               	movlw	0
 12465  00286C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12466  00286E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12467  002870  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12468  002872                     
 12469                           ; BSR set to: 0
 12470  002872  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12471  002876  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12472  00287A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12473  00287E  6B62               	clrf	___flmul@grs& (0+255),b
 12474  002880                     
 12475                           ; BSR set to: 0
 12476  002880  502E               	movf	___flmul@a^0,w,c
 12477  002882  022B               	mulwf	(___flmul@b+1)^0,c
 12478  002884  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12479  00288A  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12480  002890                     
 12481                           ; BSR set to: 0
 12482  002890  516B               	movf	___flmul@temp& (0+255),w,b
 12483  002892  2762               	addwf	___flmul@grs& (0+255),f,b
 12484  002894  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12485  002896  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12486  002898  0E00               	movlw	0
 12487  00289A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12488  00289C  0E00               	movlw	0
 12489  00289E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12490  0028A0                     
 12491                           ; BSR set to: 0
 12492  0028A0  502F               	movf	(___flmul@a+1)^0,w,c
 12493  0028A2  022A               	mulwf	___flmul@b^0,c
 12494  0028A4  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12495  0028AA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12496  0028B0                     
 12497                           ; BSR set to: 0
 12498  0028B0  516B               	movf	___flmul@temp& (0+255),w,b
 12499  0028B2  2762               	addwf	___flmul@grs& (0+255),f,b
 12500  0028B4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12501  0028B6  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12502  0028B8  0E00               	movlw	0
 12503  0028BA  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12504  0028BC  0E00               	movlw	0
 12505  0028BE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12506  0028C0                     
 12507                           ; BSR set to: 0
 12508  0028C0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12509  0028C4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12510  0028C8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12511  0028CC  6B62               	clrf	___flmul@grs& (0+255),b
 12512  0028CE  502E               	movf	___flmul@a^0,w,c
 12513  0028D0  022A               	mulwf	___flmul@b^0,c
 12514  0028D2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12515  0028D8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12516  0028DE                     
 12517                           ; BSR set to: 0
 12518  0028DE  516B               	movf	___flmul@temp& (0+255),w,b
 12519  0028E0  2762               	addwf	___flmul@grs& (0+255),f,b
 12520  0028E2  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12521  0028E4  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12522  0028E6  0E00               	movlw	0
 12523  0028E8  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12524  0028EA  0E00               	movlw	0
 12525  0028EC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12526  0028EE                     
 12527                           ; BSR set to: 0
 12528  0028EE  5030               	movf	(___flmul@a+2)^0,w,c
 12529  0028F0  022B               	mulwf	(___flmul@b+1)^0,c
 12530  0028F2  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12531  0028F8  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12532  0028FE  516B               	movf	___flmul@temp& (0+255),w,b
 12533  002900  2767               	addwf	___flmul@prod& (0+255),f,b
 12534  002902  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12535  002904  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12536  002906  0E00               	movlw	0
 12537  002908  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12538  00290A  0E00               	movlw	0
 12539  00290C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12540  00290E                     
 12541                           ; BSR set to: 0
 12542  00290E  502F               	movf	(___flmul@a+1)^0,w,c
 12543  002910  022C               	mulwf	(___flmul@b+2)^0,c
 12544  002912  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12545  002918  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12546  00291E                     
 12547                           ; BSR set to: 0
 12548  00291E  516B               	movf	___flmul@temp& (0+255),w,b
 12549  002920  2767               	addwf	___flmul@prod& (0+255),f,b
 12550  002922  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12551  002924  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12552  002926  0E00               	movlw	0
 12553  002928  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12554  00292A  0E00               	movlw	0
 12555  00292C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12556  00292E  5030               	movf	(___flmul@a+2)^0,w,c
 12557  002930  022C               	mulwf	(___flmul@b+2)^0,c
 12558  002932  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12559  002938  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12560  00293E                     
 12561                           ; BSR set to: 0
 12562  00293E  516B               	movf	___flmul@temp& (0+255),w,b
 12563  002940  6E32               	movwf	??___flmul^0,c
 12564  002942  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12565  002944  6E33               	movwf	(??___flmul+1)^0,c
 12566  002946  6A34               	clrf	(??___flmul+2)^0,c
 12567  002948  6A35               	clrf	(??___flmul+3)^0,c
 12568  00294A  C034  F035         	movff	??___flmul+2,??___flmul+3
 12569  00294E  C033  F034         	movff	??___flmul+1,??___flmul+2
 12570  002952  C032  F033         	movff	??___flmul,??___flmul+1
 12571  002956  6A32               	clrf	??___flmul^0,c
 12572  002958  5032               	movf	??___flmul^0,w,c
 12573  00295A  2767               	addwf	___flmul@prod& (0+255),f,b
 12574  00295C  5033               	movf	(??___flmul+1)^0,w,c
 12575  00295E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12576  002960  5034               	movf	(??___flmul+2)^0,w,c
 12577  002962  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12578  002964  5035               	movf	(??___flmul+3)^0,w,c
 12579  002966  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12580  002968                     
 12581                           ; BSR set to: 0
 12582  002968  C062  F032         	movff	___flmul@grs,??___flmul
 12583  00296C  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12584  002970  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12585  002974  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12586  002978  0E19               	movlw	25
 12587  00297A  EFC4  F014         	goto	u8120
 12588  00297E                     u8125:
 12589  00297E  90D8               	bcf	status,0,c
 12590  002980  3235               	rrcf	(??___flmul+3)^0,f,c
 12591  002982  3234               	rrcf	(??___flmul+2)^0,f,c
 12592  002984  3233               	rrcf	(??___flmul+1)^0,f,c
 12593  002986  3232               	rrcf	??___flmul^0,f,c
 12594  002988                     u8120:
 12595  002988  2EE8               	decfsz	wreg,f,c
 12596  00298A  EFBF  F014         	goto	u8125
 12597  00298E  5032               	movf	??___flmul^0,w,c
 12598  002990  2767               	addwf	___flmul@prod& (0+255),f,b
 12599  002992  5033               	movf	(??___flmul+1)^0,w,c
 12600  002994  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12601  002996  5034               	movf	(??___flmul+2)^0,w,c
 12602  002998  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12603  00299A  5035               	movf	(??___flmul+3)^0,w,c
 12604  00299C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12605  00299E                     
 12606                           ; BSR set to: 0
 12607  00299E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12608  0029A2  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12609  0029A6  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12610  0029AA  6B62               	clrf	___flmul@grs& (0+255),b
 12611  0029AC                     
 12612                           ; BSR set to: 0
 12613  0029AC  5161               	movf	___flmul@aexp& (0+255),w,b
 12614  0029AE  C066  F032         	movff	___flmul@bexp,??___flmul
 12615  0029B2  6A33               	clrf	(??___flmul+1)^0,c
 12616  0029B4  2632               	addwf	??___flmul^0,f,c
 12617  0029B6  0E00               	movlw	0
 12618  0029B8  2233               	addwfc	(??___flmul+1)^0,f,c
 12619  0029BA  0E82               	movlw	130
 12620  0029BC  2432               	addwf	??___flmul^0,w,c
 12621  0029BE  6F6B               	movwf	___flmul@temp& (0+255),b
 12622  0029C0  0EFF               	movlw	255
 12623  0029C2  2033               	addwfc	(??___flmul+1)^0,w,c
 12624  0029C4  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12625  0029C6  EFFA  F014         	goto	l7950
 12626  0029CA                     l7944:
 12627                           
 12628                           ; BSR set to: 0
 12629  0029CA  90D8               	bcf	status,0,c
 12630  0029CC  3767               	rlcf	___flmul@prod& (0+255),f,b
 12631  0029CE  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12632  0029D0  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12633  0029D2  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12634  0029D4                     
 12635                           ; BSR set to: 0
 12636  0029D4  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12637  0029D6  EFEF  F014         	goto	u8131
 12638  0029DA  EFF1  F014         	goto	u8130
 12639  0029DE                     u8131:
 12640  0029DE  EFF2  F014         	goto	l2019
 12641  0029E2                     u8130:
 12642  0029E2                     
 12643                           ; BSR set to: 0
 12644  0029E2  8167               	bsf	___flmul@prod& (0+255),0,b
 12645  0029E4                     l2019:
 12646                           
 12647                           ; BSR set to: 0
 12648  0029E4  90D8               	bcf	status,0,c
 12649  0029E6  3762               	rlcf	___flmul@grs& (0+255),f,b
 12650  0029E8  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12651  0029EA  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12652  0029EC  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12653  0029EE  076B               	decf	___flmul@temp& (0+255),f,b
 12654  0029F0  A0D8               	btfss	status,0,c
 12655  0029F2  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12656  0029F4                     l7950:
 12657                           
 12658                           ; BSR set to: 0
 12659  0029F4  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12660  0029F6  EFFF  F014         	goto	u8141
 12661  0029FA  EF01  F015         	goto	u8140
 12662  0029FE                     u8141:
 12663  0029FE  EFE5  F014         	goto	l7944
 12664  002A02                     u8140:
 12665  002A02                     
 12666                           ; BSR set to: 0
 12667  002A02  0E00               	movlw	0
 12668  002A04  6F61               	movwf	___flmul@aexp& (0+255),b
 12669  002A06                     
 12670                           ; BSR set to: 0
 12671  002A06  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12672  002A08  EF08  F015         	goto	u8151
 12673  002A0C  EF0A  F015         	goto	u8150
 12674  002A10                     u8151:
 12675  002A10  EF2E  F015         	goto	l2021
 12676  002A14                     u8150:
 12677  002A14                     
 12678                           ; BSR set to: 0
 12679  002A14  0EFF               	movlw	255
 12680  002A16  1562               	andwf	___flmul@grs& (0+255),w,b
 12681  002A18  6E32               	movwf	??___flmul^0,c
 12682  002A1A  0EFF               	movlw	255
 12683  002A1C  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12684  002A1E  6E33               	movwf	(??___flmul+1)^0,c
 12685  002A20  0EFF               	movlw	255
 12686  002A22  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12687  002A24  6E34               	movwf	(??___flmul+2)^0,c
 12688  002A26  0E7F               	movlw	127
 12689  002A28  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12690  002A2A  6E35               	movwf	(??___flmul+3)^0,c
 12691  002A2C  5032               	movf	??___flmul^0,w,c
 12692  002A2E  1033               	iorwf	(??___flmul+1)^0,w,c
 12693  002A30  1034               	iorwf	(??___flmul+2)^0,w,c
 12694  002A32  1035               	iorwf	(??___flmul+3)^0,w,c
 12695  002A34  B4D8               	btfsc	status,2,c
 12696  002A36  EF1F  F015         	goto	u8161
 12697  002A3A  EF21  F015         	goto	u8160
 12698  002A3E                     u8161:
 12699  002A3E  EF25  F015         	goto	l2022
 12700  002A42                     u8160:
 12701  002A42                     l7958:
 12702                           
 12703                           ; BSR set to: 0
 12704  002A42  0E01               	movlw	1
 12705  002A44  6F61               	movwf	___flmul@aexp& (0+255),b
 12706  002A46  EF2E  F015         	goto	l2021
 12707  002A4A                     l2022:
 12708                           
 12709                           ; BSR set to: 0
 12710  002A4A  A167               	btfss	___flmul@prod& (0+255),0,b
 12711  002A4C  EF2A  F015         	goto	u8171
 12712  002A50  EF2C  F015         	goto	u8170
 12713  002A54                     u8171:
 12714  002A54  EF2E  F015         	goto	l2021
 12715  002A58                     u8170:
 12716  002A58  EF21  F015         	goto	l7958
 12717  002A5C                     l2021:
 12718                           
 12719                           ; BSR set to: 0
 12720  002A5C  5161               	movf	___flmul@aexp& (0+255),w,b
 12721  002A5E  B4D8               	btfsc	status,2,c
 12722  002A60  EF34  F015         	goto	u8181
 12723  002A64  EF36  F015         	goto	u8180
 12724  002A68                     u8181:
 12725  002A68  EF5A  F015         	goto	l7970
 12726  002A6C                     u8180:
 12727  002A6C                     
 12728                           ; BSR set to: 0
 12729  002A6C  0E01               	movlw	1
 12730  002A6E  2767               	addwf	___flmul@prod& (0+255),f,b
 12731  002A70  0E00               	movlw	0
 12732  002A72  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12733  002A74  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12734  002A76  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12735  002A78                     
 12736                           ; BSR set to: 0
 12737  002A78  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12738  002A7A  EF41  F015         	goto	u8191
 12739  002A7E  EF43  F015         	goto	u8190
 12740  002A82                     u8191:
 12741  002A82  EF5A  F015         	goto	l7970
 12742  002A86                     u8190:
 12743  002A86                     
 12744                           ; BSR set to: 0
 12745  002A86  C067  F032         	movff	___flmul@prod,??___flmul
 12746  002A8A  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12747  002A8E  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12748  002A92  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12749  002A96  3435               	rlcf	(??___flmul+3)^0,w,c
 12750  002A98  3235               	rrcf	(??___flmul+3)^0,f,c
 12751  002A9A  3234               	rrcf	(??___flmul+2)^0,f,c
 12752  002A9C  3233               	rrcf	(??___flmul+1)^0,f,c
 12753  002A9E  3232               	rrcf	??___flmul^0,f,c
 12754  002AA0  C032  F067         	movff	??___flmul,___flmul@prod
 12755  002AA4  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12756  002AA8  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12757  002AAC  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12758  002AB0                     
 12759                           ; BSR set to: 0
 12760  002AB0  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12761  002AB2  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12762  002AB4                     l7970:
 12763                           
 12764                           ; BSR set to: 0
 12765  002AB4  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12766  002AB6  EF65  F015         	goto	u8201
 12767  002ABA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12768  002ABC  E108               	bnz	u8200
 12769  002ABE  296B               	incf	___flmul@temp& (0+255),w,b
 12770  002AC0  A0D8               	btfss	status,0,c
 12771  002AC2  EF65  F015         	goto	u8201
 12772  002AC6  EF67  F015         	goto	u8200
 12773  002ACA                     u8201:
 12774  002ACA  EF71  F015         	goto	l7974
 12775  002ACE                     u8200:
 12776  002ACE                     
 12777                           ; BSR set to: 0
 12778  002ACE  0E00               	movlw	0
 12779  002AD0  6F67               	movwf	___flmul@prod& (0+255),b
 12780  002AD2  0E00               	movlw	0
 12781  002AD4  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12782  002AD6  0E80               	movlw	128
 12783  002AD8  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12784  002ADA  0E7F               	movlw	127
 12785  002ADC  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12786  002ADE  EF9F  F015         	goto	l7986
 12787  002AE2                     l7974:
 12788                           
 12789                           ; BSR set to: 0
 12790  002AE2  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12791  002AE4  EF7E  F015         	goto	u8210
 12792  002AE8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12793  002AEA  E106               	bnz	u8211
 12794  002AEC  056B               	decf	___flmul@temp& (0+255),w,b
 12795  002AEE  B0D8               	btfsc	status,0,c
 12796  002AF0  EF7C  F015         	goto	u8211
 12797  002AF4  EF7E  F015         	goto	u8210
 12798  002AF8                     u8211:
 12799  002AF8  EF8A  F015         	goto	l2029
 12800  002AFC                     u8210:
 12801  002AFC                     
 12802                           ; BSR set to: 0
 12803  002AFC  0E00               	movlw	0
 12804  002AFE  6F67               	movwf	___flmul@prod& (0+255),b
 12805  002B00  0E00               	movlw	0
 12806  002B02  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12807  002B04  0E00               	movlw	0
 12808  002B06  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12809  002B08  0E00               	movlw	0
 12810  002B0A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12811  002B0C  0E00               	movlw	0
 12812  002B0E  6F60               	movwf	___flmul@sign& (0+255),b
 12813  002B10  EF9F  F015         	goto	l7986
 12814  002B14                     l2029:
 12815                           
 12816                           ; BSR set to: 0
 12817  002B14  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12818  002B18                     
 12819                           ; BSR set to: 0
 12820  002B18  0EFF               	movlw	255
 12821  002B1A  1767               	andwf	___flmul@prod& (0+255),f,b
 12822  002B1C  0EFF               	movlw	255
 12823  002B1E  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12824  002B20  0E7F               	movlw	127
 12825  002B22  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12826  002B24  0E00               	movlw	0
 12827  002B26  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12828  002B28                     
 12829                           ; BSR set to: 0
 12830  002B28  A166               	btfss	___flmul@bexp& (0+255),0,b
 12831  002B2A  EF99  F015         	goto	u8221
 12832  002B2E  EF9B  F015         	goto	u8220
 12833  002B32                     u8221:
 12834  002B32  EF9C  F015         	goto	l7984
 12835  002B36                     u8220:
 12836  002B36                     
 12837                           ; BSR set to: 0
 12838  002B36  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12839  002B38                     l7984:
 12840                           
 12841                           ; BSR set to: 0
 12842  002B38  90D8               	bcf	status,0,c
 12843  002B3A  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12844  002B3C  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12845  002B3E                     l7986:
 12846                           
 12847                           ; BSR set to: 0
 12848  002B3E  5160               	movf	___flmul@sign& (0+255),w,b
 12849  002B40  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12850  002B42                     
 12851                           ; BSR set to: 0
 12852  002B42  C067  F02A         	movff	___flmul@prod,?___flmul
 12853  002B46  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12854  002B4A  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12855  002B4E  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12856  002B52                     l2016:
 12857                           
 12858                           ; BSR set to: 0
 12859  002B52  0012               	return		;funcret
 12860  002B54                     __end_of___flmul:
 12861                           	callstack 0
 12862                           
 12863 ;; *************** function ___awdiv *****************
 12864 ;; Defined at:
 12865 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12866 ;; Parameters:    Size  Location     Type
 12867 ;;  dividend        2   19[COMRAM] int 
 12868 ;;  divisor         2   21[COMRAM] int 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  quotient        2   25[COMRAM] int 
 12871 ;;  sign            1   24[COMRAM] unsigned char 
 12872 ;;  counter         1   23[COMRAM] unsigned char 
 12873 ;; Return value:  Size  Location     Type
 12874 ;;                  2   19[COMRAM] int 
 12875 ;; Registers used:
 12876 ;;		wreg, status,2, status,0
 12877 ;; Tracked objects:
 12878 ;;		On entry : 0/0
 12879 ;;		On exit  : 0/0
 12880 ;;		Unchanged: 0/0
 12881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12885 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;Total ram usage:        8 bytes
 12887 ;; Hardware stack levels used: 1
 12888 ;; Hardware stack levels required when called: 8
 12889 ;; This function calls:
 12890 ;;		Nothing
 12891 ;; This function is called by:
 12892 ;;		_calcSteering
 12893 ;;		_calcMotorPow
 12894 ;;		_setSteering
 12895 ;;		_efgtoa
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           	psect	text49
 12900  004CCE                     __ptext49:
 12901                           	callstack 0
 12902  004CCE                     ___awdiv:
 12903                           	callstack 19
 12904  004CCE  0E00               	movlw	0
 12905  004CD0  6E19               	movwf	___awdiv@sign^0,c
 12906  004CD2  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12907  004CD4  EF70  F026         	goto	u8230
 12908  004CD8  EF6E  F026         	goto	u8231
 12909  004CDC                     u8231:
 12910  004CDC  EF76  F026         	goto	l8006
 12911  004CE0                     u8230:
 12912  004CE0  6C16               	negf	___awdiv@divisor^0,c
 12913  004CE2  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12914  004CE4  B0D8               	btfsc	status,0,c
 12915  004CE6  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12916  004CE8  0E01               	movlw	1
 12917  004CEA  6E19               	movwf	___awdiv@sign^0,c
 12918  004CEC                     l8006:
 12919  004CEC  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12920  004CEE  EF7D  F026         	goto	u8240
 12921  004CF2  EF7B  F026         	goto	u8241
 12922  004CF6                     u8241:
 12923  004CF6  EF83  F026         	goto	l8012
 12924  004CFA                     u8240:
 12925  004CFA  6C14               	negf	___awdiv@dividend^0,c
 12926  004CFC  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12927  004CFE  B0D8               	btfsc	status,0,c
 12928  004D00  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12929  004D02  0E01               	movlw	1
 12930  004D04  1A19               	xorwf	___awdiv@sign^0,f,c
 12931  004D06                     l8012:
 12932  004D06  0E00               	movlw	0
 12933  004D08  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12934  004D0A  0E00               	movlw	0
 12935  004D0C  6E1A               	movwf	___awdiv@quotient^0,c
 12936  004D0E  5016               	movf	___awdiv@divisor^0,w,c
 12937  004D10  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12938  004D12  B4D8               	btfsc	status,2,c
 12939  004D14  EF8E  F026         	goto	u8251
 12940  004D18  EF90  F026         	goto	u8250
 12941  004D1C                     u8251:
 12942  004D1C  EFB8  F026         	goto	l8034
 12943  004D20                     u8250:
 12944  004D20  0E01               	movlw	1
 12945  004D22  6E18               	movwf	___awdiv@counter^0,c
 12946  004D24  EF98  F026         	goto	l8020
 12947  004D28                     l8018:
 12948  004D28  90D8               	bcf	status,0,c
 12949  004D2A  3616               	rlcf	___awdiv@divisor^0,f,c
 12950  004D2C  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12951  004D2E  2A18               	incf	___awdiv@counter^0,f,c
 12952  004D30                     l8020:
 12953  004D30  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12954  004D32  EF9D  F026         	goto	u8261
 12955  004D36  EF9F  F026         	goto	u8260
 12956  004D3A                     u8261:
 12957  004D3A  EF94  F026         	goto	l8018
 12958  004D3E                     u8260:
 12959  004D3E                     l8022:
 12960  004D3E  90D8               	bcf	status,0,c
 12961  004D40  361A               	rlcf	___awdiv@quotient^0,f,c
 12962  004D42  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12963  004D44  5016               	movf	___awdiv@divisor^0,w,c
 12964  004D46  5C14               	subwf	___awdiv@dividend^0,w,c
 12965  004D48  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12966  004D4A  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12967  004D4C  A0D8               	btfss	status,0,c
 12968  004D4E  EFAB  F026         	goto	u8271
 12969  004D52  EFAD  F026         	goto	u8270
 12970  004D56                     u8271:
 12971  004D56  EFB2  F026         	goto	l8030
 12972  004D5A                     u8270:
 12973  004D5A  5016               	movf	___awdiv@divisor^0,w,c
 12974  004D5C  5E14               	subwf	___awdiv@dividend^0,f,c
 12975  004D5E  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12976  004D60  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 12977  004D62  801A               	bsf	___awdiv@quotient^0,0,c
 12978  004D64                     l8030:
 12979  004D64  90D8               	bcf	status,0,c
 12980  004D66  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 12981  004D68  3216               	rrcf	___awdiv@divisor^0,f,c
 12982  004D6A  2E18               	decfsz	___awdiv@counter^0,f,c
 12983  004D6C  EF9F  F026         	goto	l8022
 12984  004D70                     l8034:
 12985  004D70  5019               	movf	___awdiv@sign^0,w,c
 12986  004D72  B4D8               	btfsc	status,2,c
 12987  004D74  EFBE  F026         	goto	u8281
 12988  004D78  EFC0  F026         	goto	u8280
 12989  004D7C                     u8281:
 12990  004D7C  EFC4  F026         	goto	l8038
 12991  004D80                     u8280:
 12992  004D80  6C1A               	negf	___awdiv@quotient^0,c
 12993  004D82  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 12994  004D84  B0D8               	btfsc	status,0,c
 12995  004D86  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 12996  004D88                     l8038:
 12997  004D88  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 12998  004D8C  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 12999  004D90  0012               	return		;funcret
 13000  004D92                     __end_of___awdiv:
 13001                           	callstack 0
 13002                           
 13003 ;; *************** function _SYSTEM_Initialize *****************
 13004 ;; Defined at:
 13005 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;		None
 13008 ;; Auto vars:     Size  Location     Type
 13009 ;;		None
 13010 ;; Return value:  Size  Location     Type
 13011 ;;                  1    wreg      void 
 13012 ;; Registers used:
 13013 ;;		wreg, status,2, status,0, cstack
 13014 ;; Tracked objects:
 13015 ;;		On entry : 0/0
 13016 ;;		On exit  : 0/0
 13017 ;;		Unchanged: 0/0
 13018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13023 ;;Total ram usage:        0 bytes
 13024 ;; Hardware stack levels used: 1
 13025 ;; Hardware stack levels required when called: 10
 13026 ;; This function calls:
 13027 ;;		_ADCC_Initialize
 13028 ;;		_CCP3_Initialize
 13029 ;;		_CCP4_Initialize
 13030 ;;		_CLC3_Initialize
 13031 ;;		_INTERRUPT_Initialize
 13032 ;;		_OSCILLATOR_Initialize
 13033 ;;		_PIN_MANAGER_Initialize
 13034 ;;		_PMD_Initialize
 13035 ;;		_PWM5_Initialize
 13036 ;;		_PWM6_Initialize
 13037 ;;		_PWM7_Initialize
 13038 ;;		_PWM8_Initialize
 13039 ;;		_SMT1_Initialize
 13040 ;;		_TMR2_Initialize
 13041 ;;		_TMR3_Initialize
 13042 ;;		_TMR4_Initialize
 13043 ;;		_TMR5_Initialize
 13044 ;;		_UART1_Initialize
 13045 ;; This function is called by:
 13046 ;;		_main
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text50
 13051  0055AA                     __ptext50:
 13052                           	callstack 0
 13053  0055AA                     _SYSTEM_Initialize:
 13054                           	callstack 20
 13055  0055AA                     
 13056                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13057  0055AA  EC8A  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13058                           
 13059                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13060  0055AE  EC72  F02E         	call	_PMD_Initialize	;wreg free
 13061                           
 13062                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13063  0055B2  EC02  F026         	call	_PIN_MANAGER_Initialize	;wreg free
 13064                           
 13065                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13066  0055B6  ECF3  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 13067  0055BA                     
 13068                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13069  0055BA  ECC4  F02D         	call	_CCP3_Initialize	;wreg free
 13070  0055BE                     
 13071                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13072  0055BE  EC32  F02A         	call	_ADCC_Initialize	;wreg free
 13073                           
 13074                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13075  0055C2  ECF2  F02D         	call	_TMR4_Initialize	;wreg free
 13076  0055C6                     
 13077                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13078  0055C6  EC65  F02D         	call	_SMT1_Initialize	;wreg free
 13079  0055CA                     
 13080                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13081  0055CA  ECC3  F02E         	call	_PWM8_Initialize	;wreg free
 13082  0055CE                     
 13083                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13084  0055CE  ECB5  F02E         	call	_TMR2_Initialize	;wreg free
 13085  0055D2                     
 13086                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13087  0055D2  ECDB  F02E         	call	_PWM6_Initialize	;wreg free
 13088                           
 13089                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13090  0055D6  ECAD  F02D         	call	_CCP4_Initialize	;wreg free
 13091  0055DA                     
 13092                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13093  0055DA  EC08  F02E         	call	_CLC3_Initialize	;wreg free
 13094  0055DE                     
 13095                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13096  0055DE  EC5D  F02C         	call	_TMR3_Initialize	;wreg free
 13097                           
 13098                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13099  0055E2  ECE7  F02E         	call	_PWM5_Initialize	;wreg free
 13100  0055E6                     
 13101                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13102  0055E6  ECFA  F02A         	call	_TMR5_Initialize	;wreg free
 13103  0055EA                     
 13104                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13105  0055EA  ECCF  F02E         	call	_PWM7_Initialize	;wreg free
 13106                           
 13107                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13108  0055EE  EC37  F028         	call	_UART1_Initialize	;wreg free
 13109  0055F2  0012               	return		;funcret
 13110  0055F4                     __end_of_SYSTEM_Initialize:
 13111                           	callstack 0
 13112                           
 13113 ;; *************** function _UART1_Initialize *****************
 13114 ;; Defined at:
 13115 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		wreg, status,2, status,0, cstack
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;Total ram usage:        0 bytes
 13134 ;; Hardware stack levels used: 1
 13135 ;; Hardware stack levels required when called: 9
 13136 ;; This function calls:
 13137 ;;		_UART1_SetErrorHandler
 13138 ;;		_UART1_SetFramingErrorHandler
 13139 ;;		_UART1_SetOverrunErrorHandler
 13140 ;;		_UART1_SetRxInterruptHandler
 13141 ;;		_UART1_SetTxInterruptHandler
 13142 ;; This function is called by:
 13143 ;;		_SYSTEM_Initialize
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           	psect	text51
 13148  00506E                     __ptext51:
 13149                           	callstack 0
 13150  00506E                     _UART1_Initialize:
 13151                           	callstack 20
 13152  00506E                     
 13153                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13154  00506E  0139               	movlb	57	; () banked
 13155  005070  9793               	bcf	147,3,b	;volatile
 13156  005072                     
 13157                           ; BSR set to: 57
 13158                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13159  005072  0E54               	movlw	low _UART1_Receive_ISR
 13160  005074  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13161  005076  0E4E               	movlw	high _UART1_Receive_ISR
 13162  005078  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13163  00507A  EC18  F02F         	call	_UART1_SetRxInterruptHandler	;wreg free
 13164  00507E                     
 13165                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13166  00507E  0139               	movlb	57	; () banked
 13167  005080  9993               	bcf	147,4,b	;volatile
 13168                           
 13169                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13170  005082  0E16               	movlw	low _UART1_Transmit_ISR
 13171  005084  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13172  005086  0E57               	movlw	high _UART1_Transmit_ISR
 13173  005088  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13174  00508A  EC13  F02F         	call	_UART1_SetTxInterruptHandler	;wreg free
 13175  00508E                     
 13176                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13177  00508E  0E00               	movlw	0
 13178  005090  013D               	movlb	61	; () banked
 13179  005092  6FEC               	movwf	236,b	;volatile
 13180  005094                     
 13181                           ; BSR set to: 61
 13182                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13183  005094  0E00               	movlw	0
 13184  005096  6FED               	movwf	237,b	;volatile
 13185  005098                     
 13186                           ; BSR set to: 61
 13187                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13188  005098  0E00               	movlw	0
 13189  00509A  6FEE               	movwf	238,b	;volatile
 13190  00509C                     
 13191                           ; BSR set to: 61
 13192                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13193  00509C  0E00               	movlw	0
 13194  00509E  6FEF               	movwf	239,b	;volatile
 13195  0050A0                     
 13196                           ; BSR set to: 61
 13197                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13198  0050A0  0E00               	movlw	0
 13199  0050A2  6FF0               	movwf	240,b	;volatile
 13200  0050A4                     
 13201                           ; BSR set to: 61
 13202                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13203  0050A4  0E00               	movlw	0
 13204  0050A6  6FF1               	movwf	241,b	;volatile
 13205  0050A8                     
 13206                           ; BSR set to: 61
 13207                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13208  0050A8  0EB0               	movlw	176
 13209  0050AA  6FF2               	movwf	242,b	;volatile
 13210  0050AC                     
 13211                           ; BSR set to: 61
 13212                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13213  0050AC  0E80               	movlw	128
 13214  0050AE  6FF3               	movwf	243,b	;volatile
 13215  0050B0                     
 13216                           ; BSR set to: 61
 13217                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13218  0050B0  0E00               	movlw	0
 13219  0050B2  6FF4               	movwf	244,b	;volatile
 13220  0050B4                     
 13221                           ; BSR set to: 61
 13222                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13223  0050B4  0E8A               	movlw	138
 13224  0050B6  6FF5               	movwf	245,b	;volatile
 13225  0050B8                     
 13226                           ; BSR set to: 61
 13227                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13228  0050B8  0E00               	movlw	0
 13229  0050BA  6FF6               	movwf	246,b	;volatile
 13230  0050BC                     
 13231                           ; BSR set to: 61
 13232                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13233  0050BC  0E00               	movlw	0
 13234  0050BE  6FF7               	movwf	247,b	;volatile
 13235  0050C0                     
 13236                           ; BSR set to: 61
 13237                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13238  0050C0  0E00               	movlw	0
 13239  0050C2  6FF8               	movwf	248,b	;volatile
 13240  0050C4                     
 13241                           ; BSR set to: 61
 13242                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13243  0050C4  0E00               	movlw	0
 13244  0050C6  6FF9               	movwf	249,b	;volatile
 13245  0050C8                     
 13246                           ; BSR set to: 61
 13247                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13248  0050C8  0E00               	movlw	0
 13249  0050CA  6FFA               	movwf	250,b	;volatile
 13250  0050CC                     
 13251                           ; BSR set to: 61
 13252                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13253  0050CC  0E8E               	movlw	low _UART1_DefaultFramingErrorHandler
 13254  0050CE  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13255  0050D0  0E5E               	movlw	high _UART1_DefaultFramingErrorHandler
 13256  0050D2  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13257  0050D4  EC22  F02F         	call	_UART1_SetFramingErrorHandler	;wreg free
 13258  0050D8                     
 13259                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13260  0050D8  0E8C               	movlw	low _UART1_DefaultOverrunErrorHandler
 13261  0050DA  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13262  0050DC  0E5E               	movlw	high _UART1_DefaultOverrunErrorHandler
 13263  0050DE  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13264  0050E0  EC1D  F02F         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13265  0050E4                     
 13266                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13267  0050E4  0E80               	movlw	low _UART1_DefaultErrorHandler
 13268  0050E6  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13269  0050E8  0E5E               	movlw	high _UART1_DefaultErrorHandler
 13270  0050EA  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13271  0050EC  EC27  F02F         	call	_UART1_SetErrorHandler	;wreg free
 13272                           
 13273                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13274  0050F0  0E00               	movlw	0
 13275  0050F2  6E42               	movwf	_uart1RxLastError^0,c	;volatile
 13276                           
 13277                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13278  0050F4  0E00               	movlw	0
 13279  0050F6  6E47               	movwf	_uart1TxHead^0,c	;volatile
 13280                           
 13281                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13282  0050F8  0E00               	movlw	0
 13283  0050FA  6E46               	movwf	_uart1TxTail^0,c	;volatile
 13284                           
 13285                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13286  0050FC  0E08               	movlw	8
 13287  0050FE  6E4C               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 13288                           
 13289                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13290  005100  0E00               	movlw	0
 13291  005102  6E45               	movwf	_uart1RxHead^0,c	;volatile
 13292                           
 13293                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13294  005104  0E00               	movlw	0
 13295  005106  6E44               	movwf	_uart1RxTail^0,c	;volatile
 13296                           
 13297                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13298  005108  0E00               	movlw	0
 13299  00510A  6E43               	movwf	_uart1RxCount^0,c	;volatile
 13300  00510C                     
 13301                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13302  00510C  0139               	movlb	57	; () banked
 13303  00510E  8793               	bsf	147,3,b	;volatile
 13304  005110                     
 13305                           ; BSR set to: 57
 13306  005110  0012               	return		;funcret
 13307  005112                     __end_of_UART1_Initialize:
 13308                           	callstack 0
 13309                           
 13310 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13311 ;; Defined at:
 13312 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13313 ;; Parameters:    Size  Location     Type
 13314 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13315 ;;		 -> UART1_Transmit_ISR(1), 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;Total ram usage:        2 bytes
 13332 ;; Hardware stack levels used: 1
 13333 ;; Hardware stack levels required when called: 8
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_UART1_Initialize
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           
 13341                           	psect	text52
 13342  005E26                     __ptext52:
 13343                           	callstack 0
 13344  005E26                     _UART1_SetTxInterruptHandler:
 13345                           	callstack 20
 13346  005E26                     
 13347                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13348  005E26  C014  F198         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13349  005E2A  C015  F199         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13350  005E2E  0012               	return		;funcret
 13351  005E30                     __end_of_UART1_SetTxInterruptHandler:
 13352                           	callstack 0
 13353                           
 13354 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13355 ;; Defined at:
 13356 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13359 ;;		 -> UART1_Receive_ISR(1), 
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      void 
 13364 ;; Registers used:
 13365 ;;		wreg, status,2, status,0
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13375 ;;Total ram usage:        2 bytes
 13376 ;; Hardware stack levels used: 1
 13377 ;; Hardware stack levels required when called: 8
 13378 ;; This function calls:
 13379 ;;		Nothing
 13380 ;; This function is called by:
 13381 ;;		_UART1_Initialize
 13382 ;; This function uses a non-reentrant model
 13383 ;;
 13384                           
 13385                           	psect	text53
 13386  005E30                     __ptext53:
 13387                           	callstack 0
 13388  005E30                     _UART1_SetRxInterruptHandler:
 13389                           	callstack 20
 13390  005E30                     
 13391                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13392  005E30  C014  F19A         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13393  005E34  C015  F19B         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13394  005E38  0012               	return		;funcret
 13395  005E3A                     __end_of_UART1_SetRxInterruptHandler:
 13396                           	callstack 0
 13397                           
 13398 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13399 ;; Defined at:
 13400 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13403 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;		None
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      void 
 13408 ;; Registers used:
 13409 ;;		wreg, status,2, status,0
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;Total ram usage:        2 bytes
 13420 ;; Hardware stack levels used: 1
 13421 ;; Hardware stack levels required when called: 8
 13422 ;; This function calls:
 13423 ;;		Nothing
 13424 ;; This function is called by:
 13425 ;;		_UART1_Initialize
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           	psect	text54
 13430  005E3A                     __ptext54:
 13431                           	callstack 0
 13432  005E3A                     _UART1_SetOverrunErrorHandler:
 13433                           	callstack 20
 13434  005E3A                     
 13435                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13436  005E3A  C014  F194         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13437  005E3E  C015  F195         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13438  005E42  0012               	return		;funcret
 13439  005E44                     __end_of_UART1_SetOverrunErrorHandler:
 13440                           	callstack 0
 13441                           
 13442 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13443 ;; Defined at:
 13444 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13447 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;		None
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  1    wreg      void 
 13452 ;; Registers used:
 13453 ;;		wreg, status,2, status,0
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/0
 13456 ;;		On exit  : 0/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;Total ram usage:        2 bytes
 13464 ;; Hardware stack levels used: 1
 13465 ;; Hardware stack levels required when called: 8
 13466 ;; This function calls:
 13467 ;;		Nothing
 13468 ;; This function is called by:
 13469 ;;		_UART1_Initialize
 13470 ;; This function uses a non-reentrant model
 13471 ;;
 13472                           
 13473                           	psect	text55
 13474  005E44                     __ptext55:
 13475                           	callstack 0
 13476  005E44                     _UART1_SetFramingErrorHandler:
 13477                           	callstack 20
 13478  005E44                     
 13479                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13480  005E44  C014  F196         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13481  005E48  C015  F197         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13482  005E4C  0012               	return		;funcret
 13483  005E4E                     __end_of_UART1_SetFramingErrorHandler:
 13484                           	callstack 0
 13485                           
 13486 ;; *************** function _UART1_SetErrorHandler *****************
 13487 ;; Defined at:
 13488 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13489 ;; Parameters:    Size  Location     Type
 13490 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13491 ;;		 -> UART1_DefaultErrorHandler(1), 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;		None
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      void 
 13496 ;; Registers used:
 13497 ;;		wreg, status,2, status,0
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13507 ;;Total ram usage:        2 bytes
 13508 ;; Hardware stack levels used: 1
 13509 ;; Hardware stack levels required when called: 8
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_UART1_Initialize
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text56
 13518  005E4E                     __ptext56:
 13519                           	callstack 0
 13520  005E4E                     _UART1_SetErrorHandler:
 13521                           	callstack 20
 13522  005E4E                     
 13523                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13524  005E4E  C014  F192         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13525  005E52  C015  F193         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13526  005E56  0012               	return		;funcret
 13527  005E58                     __end_of_UART1_SetErrorHandler:
 13528                           	callstack 0
 13529                           
 13530 ;; *************** function _TMR5_Initialize *****************
 13531 ;; Defined at:
 13532 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;		None
 13535 ;; Auto vars:     Size  Location     Type
 13536 ;;		None
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  1    wreg      void 
 13539 ;; Registers used:
 13540 ;;		wreg, status,2, status,0, cstack
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;Total ram usage:        2 bytes
 13551 ;; Hardware stack levels used: 1
 13552 ;; Hardware stack levels required when called: 9
 13553 ;; This function calls:
 13554 ;;		_TMR5_SetGateInterruptHandler
 13555 ;; This function is called by:
 13556 ;;		_SYSTEM_Initialize
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           	psect	text57
 13561  0055F4                     __ptext57:
 13562                           	callstack 0
 13563  0055F4                     _TMR5_Initialize:
 13564                           	callstack 20
 13565  0055F4                     
 13566                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13567  0055F4  0EC0               	movlw	192
 13568  0055F6  6E9B               	movwf	155,c	;volatile
 13569                           
 13570                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13571  0055F8  0E00               	movlw	0
 13572  0055FA  6E9C               	movwf	156,c	;volatile
 13573                           
 13574                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13575  0055FC  0E05               	movlw	5
 13576  0055FE  6E9D               	movwf	157,c	;volatile
 13577                           
 13578                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13579  005600  0E00               	movlw	0
 13580  005602  6E99               	movwf	153,c	;volatile
 13581                           
 13582                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13583  005604  0E00               	movlw	0
 13584  005606  6E98               	movwf	152,c	;volatile
 13585  005608                     
 13586                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13587  005608  0139               	movlb	57	; () banked
 13588  00560A  9DA8               	bcf	168,6,b	;volatile
 13589  00560C                     
 13590                           ; BSR set to: 57
 13591                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13592  00560C  5098               	movf	152,w,c	;volatile
 13593  00560E  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13594  005614  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13595  005616  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13596  00561A  6A16               	clrf	??_TMR5_Initialize^0,c
 13597  00561C  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13598  00561E  0101               	movlb	1	; () banked
 13599  005620  6F8C               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13600  005622  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13601  005624  6F8D               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13602  005626                     
 13603                           ; BSR set to: 1
 13604                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13605  005626  0139               	movlb	57	; () banked
 13606  005628  9FA8               	bcf	168,7,b	;volatile
 13607  00562A                     
 13608                           ; BSR set to: 57
 13609                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13610  00562A  8F98               	bsf	152,7,b	;volatile
 13611  00562C                     
 13612                           ; BSR set to: 57
 13613                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13614  00562C  0E4C               	movlw	low _TMR5_DefaultGateInterruptHandler
 13615  00562E  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13616  005630  0E5D               	movlw	high _TMR5_DefaultGateInterruptHandler
 13617  005632  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13618  005634  EC2C  F02F         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13619  005638                     
 13620                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13621  005638  0E03               	movlw	3
 13622  00563A  6E9A               	movwf	154,c	;volatile
 13623  00563C  0012               	return		;funcret
 13624  00563E                     __end_of_TMR5_Initialize:
 13625                           	callstack 0
 13626                           
 13627 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13628 ;; Defined at:
 13629 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13630 ;; Parameters:    Size  Location     Type
 13631 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13632 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13633 ;; Auto vars:     Size  Location     Type
 13634 ;;		None
 13635 ;; Return value:  Size  Location     Type
 13636 ;;                  1    wreg      void 
 13637 ;; Registers used:
 13638 ;;		wreg, status,2, status,0
 13639 ;; Tracked objects:
 13640 ;;		On entry : 0/0
 13641 ;;		On exit  : 0/0
 13642 ;;		Unchanged: 0/0
 13643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13648 ;;Total ram usage:        2 bytes
 13649 ;; Hardware stack levels used: 1
 13650 ;; Hardware stack levels required when called: 8
 13651 ;; This function calls:
 13652 ;;		Nothing
 13653 ;; This function is called by:
 13654 ;;		_TMR5_Initialize
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658                           	psect	text58
 13659  005E58                     __ptext58:
 13660                           	callstack 0
 13661  005E58                     _TMR5_SetGateInterruptHandler:
 13662                           	callstack 20
 13663  005E58                     
 13664                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13665  005E58  C014  F18A         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13666  005E5C  C015  F18B         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13667  005E60  0012               	return		;funcret
 13668  005E62                     __end_of_TMR5_SetGateInterruptHandler:
 13669                           	callstack 0
 13670                           
 13671 ;; *************** function _TMR4_Initialize *****************
 13672 ;; Defined at:
 13673 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;		None
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  1    wreg      void 
 13680 ;; Registers used:
 13681 ;;		wreg, status,2, status,0, cstack
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13691 ;;Total ram usage:        0 bytes
 13692 ;; Hardware stack levels used: 1
 13693 ;; Hardware stack levels required when called: 9
 13694 ;; This function calls:
 13695 ;;		_TMR4_SetInterruptHandler
 13696 ;; This function is called by:
 13697 ;;		_SYSTEM_Initialize
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text59
 13702  005BE4                     __ptext59:
 13703                           	callstack 0
 13704  005BE4                     _TMR4_Initialize:
 13705                           	callstack 20
 13706  005BE4                     
 13707                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13708  005BE4  0E01               	movlw	1
 13709  005BE6  6EA2               	movwf	162,c	;volatile
 13710                           
 13711                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13712  005BE8  0E00               	movlw	0
 13713  005BEA  6EA1               	movwf	161,c	;volatile
 13714                           
 13715                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13716  005BEC  0E00               	movlw	0
 13717  005BEE  6EA3               	movwf	163,c	;volatile
 13718                           
 13719                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13720  005BF0  0EF9               	movlw	249
 13721  005BF2  6E9F               	movwf	159,c	;volatile
 13722                           
 13723                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13724  005BF4  0E00               	movlw	0
 13725  005BF6  6E9E               	movwf	158,c	;volatile
 13726  005BF8                     
 13727                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13728  005BF8  0139               	movlb	57	; () banked
 13729  005BFA  91A7               	bcf	167,0,b	;volatile
 13730  005BFC                     
 13731                           ; BSR set to: 57
 13732                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13733  005BFC  8197               	bsf	151,0,b	;volatile
 13734  005BFE                     
 13735                           ; BSR set to: 57
 13736                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13737  005BFE  0E90               	movlw	low _TMR4_DefaultInterruptHandler
 13738  005C00  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13739  005C02  0E5E               	movlw	high _TMR4_DefaultInterruptHandler
 13740  005C04  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13741  005C06  EC31  F02F         	call	_TMR4_SetInterruptHandler	;wreg free
 13742  005C0A                     
 13743                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13744  005C0A  0EE0               	movlw	224
 13745  005C0C  6EA0               	movwf	160,c	;volatile
 13746  005C0E  0012               	return		;funcret
 13747  005C10                     __end_of_TMR4_Initialize:
 13748                           	callstack 0
 13749                           
 13750 ;; *************** function _TMR4_SetInterruptHandler *****************
 13751 ;; Defined at:
 13752 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13753 ;; Parameters:    Size  Location     Type
 13754 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13755 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;		None
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  1    wreg      void 
 13760 ;; Registers used:
 13761 ;;		wreg, status,2, status,0
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13770 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;Total ram usage:        2 bytes
 13772 ;; Hardware stack levels used: 1
 13773 ;; Hardware stack levels required when called: 8
 13774 ;; This function calls:
 13775 ;;		Nothing
 13776 ;; This function is called by:
 13777 ;;		_TMR4_Initialize
 13778 ;;		_main
 13779 ;; This function uses a non-reentrant model
 13780 ;;
 13781                           
 13782                           	psect	text60
 13783  005E62                     __ptext60:
 13784                           	callstack 0
 13785  005E62                     _TMR4_SetInterruptHandler:
 13786                           	callstack 22
 13787  005E62                     
 13788                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13789  005E62  C014  F186         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13790  005E66  C015  F187         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13791  005E6A  0012               	return		;funcret
 13792  005E6C                     __end_of_TMR4_SetInterruptHandler:
 13793                           	callstack 0
 13794                           
 13795 ;; *************** function _TMR3_Initialize *****************
 13796 ;; Defined at:
 13797 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;		None
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;		None
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1    wreg      void 
 13804 ;; Registers used:
 13805 ;;		wreg, status,2, status,0
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;Total ram usage:        2 bytes
 13816 ;; Hardware stack levels used: 1
 13817 ;; Hardware stack levels required when called: 8
 13818 ;; This function calls:
 13819 ;;		Nothing
 13820 ;; This function is called by:
 13821 ;;		_SYSTEM_Initialize
 13822 ;; This function uses a non-reentrant model
 13823 ;;
 13824                           
 13825                           	psect	text61
 13826  0058BA                     __ptext61:
 13827                           	callstack 0
 13828  0058BA                     _TMR3_Initialize:
 13829                           	callstack 21
 13830  0058BA                     
 13831                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13832  0058BA  0E00               	movlw	0
 13833  0058BC  6EA7               	movwf	167,c	;volatile
 13834                           
 13835                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13836  0058BE  0E00               	movlw	0
 13837  0058C0  6EA8               	movwf	168,c	;volatile
 13838                           
 13839                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13840  0058C2  0E05               	movlw	5
 13841  0058C4  6EA9               	movwf	169,c	;volatile
 13842                           
 13843                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13844  0058C6  0E00               	movlw	0
 13845  0058C8  6EA5               	movwf	165,c	;volatile
 13846                           
 13847                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13848  0058CA  0E00               	movlw	0
 13849  0058CC  6EA4               	movwf	164,c	;volatile
 13850  0058CE                     
 13851                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13852  0058CE  0139               	movlb	57	; () banked
 13853  0058D0  9DA6               	bcf	166,6,b	;volatile
 13854  0058D2                     
 13855                           ; BSR set to: 57
 13856                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13857  0058D2  50A4               	movf	164,w,c	;volatile
 13858  0058D4  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13859  0058DA  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13860  0058DC  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13861  0058E0  6A14               	clrf	??_TMR3_Initialize^0,c
 13862  0058E2  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13863  0058E4  0101               	movlb	1	; () banked
 13864  0058E6  6F88               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13865  0058E8  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13866  0058EA  6F89               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13867  0058EC                     
 13868                           ; BSR set to: 1
 13869                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13870  0058EC  0E01               	movlw	1
 13871  0058EE  6EA6               	movwf	166,c	;volatile
 13872  0058F0                     
 13873                           ; BSR set to: 1
 13874  0058F0  0012               	return		;funcret
 13875  0058F2                     __end_of_TMR3_Initialize:
 13876                           	callstack 0
 13877                           
 13878 ;; *************** function _TMR2_Initialize *****************
 13879 ;; Defined at:
 13880 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;		None
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;		None
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1    wreg      void 
 13887 ;; Registers used:
 13888 ;;		wreg, status,2
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13898 ;;Total ram usage:        0 bytes
 13899 ;; Hardware stack levels used: 1
 13900 ;; Hardware stack levels required when called: 8
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_SYSTEM_Initialize
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           	psect	text62
 13909  005D6A                     __ptext62:
 13910                           	callstack 0
 13911  005D6A                     _TMR2_Initialize:
 13912                           	callstack 21
 13913  005D6A                     
 13914                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13915  005D6A  0E05               	movlw	5
 13916  005D6C  6EAE               	movwf	174,c	;volatile
 13917                           
 13918                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13919  005D6E  0E00               	movlw	0
 13920  005D70  6EAD               	movwf	173,c	;volatile
 13921                           
 13922                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13923  005D72  0E00               	movlw	0
 13924  005D74  6EAF               	movwf	175,c	;volatile
 13925  005D76                     
 13926                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13927  005D76  68AB               	setf	171,c	;volatile
 13928                           
 13929                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13930  005D78  0E00               	movlw	0
 13931  005D7A  6EAA               	movwf	170,c	;volatile
 13932  005D7C                     
 13933                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13934  005D7C  0139               	movlb	57	; () banked
 13935  005D7E  95A4               	bcf	164,2,b	;volatile
 13936                           
 13937                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13938  005D80  0EB0               	movlw	176
 13939  005D82  6EAC               	movwf	172,c	;volatile
 13940  005D84                     
 13941                           ; BSR set to: 57
 13942  005D84  0012               	return		;funcret
 13943  005D86                     __end_of_TMR2_Initialize:
 13944                           	callstack 0
 13945                           
 13946 ;; *************** function _SMT1_Initialize *****************
 13947 ;; Defined at:
 13948 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      void 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13966 ;;Total ram usage:        0 bytes
 13967 ;; Hardware stack levels used: 1
 13968 ;; Hardware stack levels required when called: 8
 13969 ;; This function calls:
 13970 ;;		Nothing
 13971 ;; This function is called by:
 13972 ;;		_SYSTEM_Initialize
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           	psect	text63
 13977  005ACA                     __ptext63:
 13978                           	callstack 0
 13979  005ACA                     _SMT1_Initialize:
 13980                           	callstack 21
 13981  005ACA                     
 13982                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 13983  005ACA  0E80               	movlw	128
 13984  005ACC  013F               	movlb	63	; () banked
 13985  005ACE  6F1E               	movwf	30,b	;volatile
 13986                           
 13987                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 13988  005AD0  0E42               	movlw	66
 13989  005AD2  6F1F               	movwf	31,b	;volatile
 13990                           
 13991                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 13992  005AD4  0E00               	movlw	0
 13993  005AD6  6F20               	movwf	32,b	;volatile
 13994                           
 13995                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 13996  005AD8  0E04               	movlw	4
 13997  005ADA  6F21               	movwf	33,b	;volatile
 13998                           
 13999                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14000  005ADC  0E00               	movlw	0
 14001  005ADE  6F23               	movwf	35,b	;volatile
 14002                           
 14003                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14004  005AE0  0E00               	movlw	0
 14005  005AE2  6F22               	movwf	34,b	;volatile
 14006                           
 14007                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14008  005AE4  0E01               	movlw	1
 14009  005AE6  6F1D               	movwf	29,b	;volatile
 14010  005AE8                     
 14011                           ; BSR set to: 63
 14012                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14013  005AE8  691C               	setf	28,b	;volatile
 14014  005AEA                     
 14015                           ; BSR set to: 63
 14016                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14017  005AEA  691B               	setf	27,b	;volatile
 14018  005AEC                     
 14019                           ; BSR set to: 63
 14020                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14021  005AEC  0139               	movlb	57	; () banked
 14022  005AEE  8B91               	bsf	145,5,b	;volatile
 14023  005AF0                     
 14024                           ; BSR set to: 57
 14025                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14026  005AF0  8F91               	bsf	145,7,b	;volatile
 14027  005AF2                     
 14028                           ; BSR set to: 57
 14029                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14030  005AF2  8D91               	bsf	145,6,b	;volatile
 14031  005AF4                     
 14032                           ; BSR set to: 57
 14033                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14034  005AF4  013F               	movlb	63	; () banked
 14035  005AF6  8F1F               	bsf	31,7,b	;volatile
 14036  005AF8                     
 14037                           ; BSR set to: 63
 14038  005AF8  0012               	return		;funcret
 14039  005AFA                     __end_of_SMT1_Initialize:
 14040                           	callstack 0
 14041                           
 14042 ;; *************** function _PWM8_Initialize *****************
 14043 ;; Defined at:
 14044 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		wreg, status,2
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used: 1
 14064 ;; Hardware stack levels required when called: 8
 14065 ;; This function calls:
 14066 ;;		Nothing
 14067 ;; This function is called by:
 14068 ;;		_SYSTEM_Initialize
 14069 ;; This function uses a non-reentrant model
 14070 ;;
 14071                           
 14072                           	psect	text64
 14073  005D86                     __ptext64:
 14074                           	callstack 0
 14075  005D86                     _PWM8_Initialize:
 14076                           	callstack 21
 14077  005D86                     
 14078                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14079  005D86  0E80               	movlw	128
 14080  005D88  6E62               	movwf	98,c	;volatile
 14081                           
 14082                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14083  005D8A  0E00               	movlw	0
 14084  005D8C  6E61               	movwf	97,c	;volatile
 14085                           
 14086                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14087  005D8E  0E00               	movlw	0
 14088  005D90  6E60               	movwf	96,c	;volatile
 14089                           
 14090                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14091  005D92  013F               	movlb	63	; () banked
 14092  005D94  515F               	movf	95,w,b	;volatile
 14093  005D96  0B3F               	andlw	-193
 14094  005D98  0980               	iorlw	128
 14095  005D9A  6F5F               	movwf	95,b	;volatile
 14096  005D9C                     
 14097                           ; BSR set to: 63
 14098  005D9C  0012               	return		;funcret
 14099  005D9E                     __end_of_PWM8_Initialize:
 14100                           	callstack 0
 14101                           
 14102 ;; *************** function _PWM7_Initialize *****************
 14103 ;; Defined at:
 14104 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;		None
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      void 
 14111 ;; Registers used:
 14112 ;;		wreg, status,2
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;Total ram usage:        0 bytes
 14123 ;; Hardware stack levels used: 1
 14124 ;; Hardware stack levels required when called: 8
 14125 ;; This function calls:
 14126 ;;		Nothing
 14127 ;; This function is called by:
 14128 ;;		_SYSTEM_Initialize
 14129 ;; This function uses a non-reentrant model
 14130 ;;
 14131                           
 14132                           	psect	text65
 14133  005D9E                     __ptext65:
 14134                           	callstack 0
 14135  005D9E                     _PWM7_Initialize:
 14136                           	callstack 21
 14137  005D9E                     
 14138                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14139  005D9E  0E80               	movlw	128
 14140  005DA0  6E66               	movwf	102,c	;volatile
 14141                           
 14142                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14143  005DA2  0E00               	movlw	0
 14144  005DA4  6E65               	movwf	101,c	;volatile
 14145                           
 14146                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14147  005DA6  0E00               	movlw	0
 14148  005DA8  6E64               	movwf	100,c	;volatile
 14149                           
 14150                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14151  005DAA  013F               	movlb	63	; () banked
 14152  005DAC  515F               	movf	95,w,b	;volatile
 14153  005DAE  0BCF               	andlw	-49
 14154  005DB0  0920               	iorlw	32
 14155  005DB2  6F5F               	movwf	95,b	;volatile
 14156  005DB4                     
 14157                           ; BSR set to: 63
 14158  005DB4  0012               	return		;funcret
 14159  005DB6                     __end_of_PWM7_Initialize:
 14160                           	callstack 0
 14161                           
 14162 ;; *************** function _PWM6_Initialize *****************
 14163 ;; Defined at:
 14164 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;		None
 14167 ;; Auto vars:     Size  Location     Type
 14168 ;;		None
 14169 ;; Return value:  Size  Location     Type
 14170 ;;                  1    wreg      void 
 14171 ;; Registers used:
 14172 ;;		wreg, status,2
 14173 ;; Tracked objects:
 14174 ;;		On entry : 0/0
 14175 ;;		On exit  : 0/0
 14176 ;;		Unchanged: 0/0
 14177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14182 ;;Total ram usage:        0 bytes
 14183 ;; Hardware stack levels used: 1
 14184 ;; Hardware stack levels required when called: 8
 14185 ;; This function calls:
 14186 ;;		Nothing
 14187 ;; This function is called by:
 14188 ;;		_SYSTEM_Initialize
 14189 ;; This function uses a non-reentrant model
 14190 ;;
 14191                           
 14192                           	psect	text66
 14193  005DB6                     __ptext66:
 14194                           	callstack 0
 14195  005DB6                     _PWM6_Initialize:
 14196                           	callstack 21
 14197  005DB6                     
 14198                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14199  005DB6  0E80               	movlw	128
 14200  005DB8  6E6A               	movwf	106,c	;volatile
 14201                           
 14202                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14203  005DBA  0E59               	movlw	89
 14204  005DBC  6E69               	movwf	105,c	;volatile
 14205                           
 14206                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14207  005DBE  0E40               	movlw	64
 14208  005DC0  6E68               	movwf	104,c	;volatile
 14209                           
 14210                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14211  005DC2  013F               	movlb	63	; () banked
 14212  005DC4  515F               	movf	95,w,b	;volatile
 14213  005DC6  0BF3               	andlw	-13
 14214  005DC8  0904               	iorlw	4
 14215  005DCA  6F5F               	movwf	95,b	;volatile
 14216  005DCC                     
 14217                           ; BSR set to: 63
 14218  005DCC  0012               	return		;funcret
 14219  005DCE                     __end_of_PWM6_Initialize:
 14220                           	callstack 0
 14221                           
 14222 ;; *************** function _PWM5_Initialize *****************
 14223 ;; Defined at:
 14224 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;		None
 14227 ;; Auto vars:     Size  Location     Type
 14228 ;;		None
 14229 ;; Return value:  Size  Location     Type
 14230 ;;                  1    wreg      void 
 14231 ;; Registers used:
 14232 ;;		wreg, status,2
 14233 ;; Tracked objects:
 14234 ;;		On entry : 0/0
 14235 ;;		On exit  : 0/0
 14236 ;;		Unchanged: 0/0
 14237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;Total ram usage:        0 bytes
 14243 ;; Hardware stack levels used: 1
 14244 ;; Hardware stack levels required when called: 8
 14245 ;; This function calls:
 14246 ;;		Nothing
 14247 ;; This function is called by:
 14248 ;;		_SYSTEM_Initialize
 14249 ;; This function uses a non-reentrant model
 14250 ;;
 14251                           
 14252                           	psect	text67
 14253  005DCE                     __ptext67:
 14254                           	callstack 0
 14255  005DCE                     _PWM5_Initialize:
 14256                           	callstack 21
 14257  005DCE                     
 14258                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14259  005DCE  0E80               	movlw	128
 14260  005DD0  6E6E               	movwf	110,c	;volatile
 14261                           
 14262                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14263  005DD2  0E59               	movlw	89
 14264  005DD4  6E6D               	movwf	109,c	;volatile
 14265                           
 14266                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14267  005DD6  0E40               	movlw	64
 14268  005DD8  6E6C               	movwf	108,c	;volatile
 14269                           
 14270                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14271  005DDA  013F               	movlb	63	; () banked
 14272  005DDC  515F               	movf	95,w,b	;volatile
 14273  005DDE  0BFC               	andlw	-4
 14274  005DE0  0901               	iorlw	1
 14275  005DE2  6F5F               	movwf	95,b	;volatile
 14276  005DE4                     
 14277                           ; BSR set to: 63
 14278  005DE4  0012               	return		;funcret
 14279  005DE6                     __end_of_PWM5_Initialize:
 14280                           	callstack 0
 14281                           
 14282 ;; *************** function _PMD_Initialize *****************
 14283 ;; Defined at:
 14284 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14285 ;; Parameters:    Size  Location     Type
 14286 ;;		None
 14287 ;; Auto vars:     Size  Location     Type
 14288 ;;		None
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  1    wreg      void 
 14291 ;; Registers used:
 14292 ;;		wreg, status,2
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14302 ;;Total ram usage:        0 bytes
 14303 ;; Hardware stack levels used: 1
 14304 ;; Hardware stack levels required when called: 8
 14305 ;; This function calls:
 14306 ;;		Nothing
 14307 ;; This function is called by:
 14308 ;;		_SYSTEM_Initialize
 14309 ;; This function uses a non-reentrant model
 14310 ;;
 14311                           
 14312                           	psect	text68
 14313  005CE4                     __ptext68:
 14314                           	callstack 0
 14315  005CE4                     _PMD_Initialize:
 14316                           	callstack 21
 14317  005CE4                     
 14318                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14319  005CE4  0E00               	movlw	0
 14320  005CE6  0139               	movlb	57	; () banked
 14321  005CE8  6FC0               	movwf	192,b	;volatile
 14322                           
 14323                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14324  005CEA  0E00               	movlw	0
 14325  005CEC  6FC1               	movwf	193,b	;volatile
 14326                           
 14327                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14328  005CEE  0E00               	movlw	0
 14329  005CF0  6FC2               	movwf	194,b	;volatile
 14330                           
 14331                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14332  005CF2  0E00               	movlw	0
 14333  005CF4  6FC3               	movwf	195,b	;volatile
 14334                           
 14335                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14336  005CF6  0E00               	movlw	0
 14337  005CF8  6FC4               	movwf	196,b	;volatile
 14338                           
 14339                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14340  005CFA  0E00               	movlw	0
 14341  005CFC  6FC5               	movwf	197,b	;volatile
 14342                           
 14343                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14344  005CFE  0E00               	movlw	0
 14345  005D00  6FC6               	movwf	198,b	;volatile
 14346                           
 14347                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14348  005D02  0E00               	movlw	0
 14349  005D04  6FC7               	movwf	199,b	;volatile
 14350  005D06                     
 14351                           ; BSR set to: 57
 14352  005D06  0012               	return		;funcret
 14353  005D08                     __end_of_PMD_Initialize:
 14354                           	callstack 0
 14355                           
 14356 ;; *************** function _PIN_MANAGER_Initialize *****************
 14357 ;; Defined at:
 14358 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14359 ;; Parameters:    Size  Location     Type
 14360 ;;		None
 14361 ;; Auto vars:     Size  Location     Type
 14362 ;;		None
 14363 ;; Return value:  Size  Location     Type
 14364 ;;                  1    wreg      void 
 14365 ;; Registers used:
 14366 ;;		wreg, status,2
 14367 ;; Tracked objects:
 14368 ;;		On entry : 0/0
 14369 ;;		On exit  : 0/0
 14370 ;;		Unchanged: 0/0
 14371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14376 ;;Total ram usage:        0 bytes
 14377 ;; Hardware stack levels used: 1
 14378 ;; Hardware stack levels required when called: 8
 14379 ;; This function calls:
 14380 ;;		Nothing
 14381 ;; This function is called by:
 14382 ;;		_SYSTEM_Initialize
 14383 ;; This function uses a non-reentrant model
 14384 ;;
 14385                           
 14386                           	psect	text69
 14387  004C04                     __ptext69:
 14388                           	callstack 0
 14389  004C04                     _PIN_MANAGER_Initialize:
 14390                           	callstack 21
 14391  004C04                     
 14392                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14393  004C04  0E00               	movlw	0
 14394  004C06  6EBE               	movwf	190,c	;volatile
 14395                           
 14396                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14397  004C08  0E00               	movlw	0
 14398  004C0A  6EBD               	movwf	189,c	;volatile
 14399                           
 14400                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14401  004C0C  0E24               	movlw	36
 14402  004C0E  6EBA               	movwf	186,c	;volatile
 14403                           
 14404                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14405  004C10  0E00               	movlw	0
 14406  004C12  6EBB               	movwf	187,c	;volatile
 14407                           
 14408                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14409  004C14  0E00               	movlw	0
 14410  004C16  6EBC               	movwf	188,c	;volatile
 14411                           
 14412                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14413  004C18  0E07               	movlw	7
 14414  004C1A  6EC6               	movwf	198,c	;volatile
 14415                           
 14416                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14417  004C1C  0EC0               	movlw	192
 14418  004C1E  6EC2               	movwf	194,c	;volatile
 14419                           
 14420                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14421  004C20  0EF7               	movlw	247
 14422  004C22  6EC3               	movwf	195,c	;volatile
 14423  004C24                     
 14424                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14425  004C24  68C4               	setf	196,c	;volatile
 14426  004C26                     
 14427                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14428  004C26  68C5               	setf	197,c	;volatile
 14429                           
 14430                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14431  004C28  0E1F               	movlw	31
 14432  004C2A  013A               	movlb	58	; () banked
 14433  004C2C  6F70               	movwf	112,b	;volatile
 14434  004C2E                     
 14435                           ; BSR set to: 58
 14436                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14437  004C2E  6960               	setf	96,b	;volatile
 14438                           
 14439                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14440  004C30  0EC0               	movlw	192
 14441  004C32  6F50               	movwf	80,b	;volatile
 14442                           
 14443                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14444  004C34  0E07               	movlw	7
 14445  004C36  6F80               	movwf	128,b	;volatile
 14446                           
 14447                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14448  004C38  0E7F               	movlw	127
 14449  004C3A  6F40               	movwf	64,b	;volatile
 14450                           
 14451                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14452  004C3C  0E00               	movlw	0
 14453  004C3E  6F71               	movwf	113,b	;volatile
 14454                           
 14455                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14456  004C40  0E00               	movlw	0
 14457  004C42  6F81               	movwf	129,b	;volatile
 14458                           
 14459                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14460  004C44  0E00               	movlw	0
 14461  004C46  6F51               	movwf	81,b	;volatile
 14462                           
 14463                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14464  004C48  0E00               	movlw	0
 14465  004C4A  6F41               	movwf	65,b	;volatile
 14466                           
 14467                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14468  004C4C  0E00               	movlw	0
 14469  004C4E  6F61               	movwf	97,b	;volatile
 14470                           
 14471                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14472  004C50  0E00               	movlw	0
 14473  004C52  6F5A               	movwf	90,b	;volatile
 14474                           
 14475                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14476  004C54  0E00               	movlw	0
 14477  004C56  6F5B               	movwf	91,b	;volatile
 14478                           
 14479                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14480  004C58  0E00               	movlw	0
 14481  004C5A  6F6A               	movwf	106,b	;volatile
 14482                           
 14483                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14484  004C5C  0E00               	movlw	0
 14485  004C5E  6F6B               	movwf	107,b	;volatile
 14486                           
 14487                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14488  004C60  0E00               	movlw	0
 14489  004C62  6F7A               	movwf	122,b	;volatile
 14490                           
 14491                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14492  004C64  0E00               	movlw	0
 14493  004C66  6F7B               	movwf	123,b	;volatile
 14494                           
 14495                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14496  004C68  0E00               	movlw	0
 14497  004C6A  6F82               	movwf	130,b	;volatile
 14498                           
 14499                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14500  004C6C  0E00               	movlw	0
 14501  004C6E  6F42               	movwf	66,b	;volatile
 14502                           
 14503                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14504  004C70  0E00               	movlw	0
 14505  004C72  6F52               	movwf	82,b	;volatile
 14506                           
 14507                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14508  004C74  0E00               	movlw	0
 14509  004C76  6F62               	movwf	98,b	;volatile
 14510                           
 14511                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14512  004C78  0E00               	movlw	0
 14513  004C7A  6F72               	movwf	114,b	;volatile
 14514  004C7C                     
 14515                           ; BSR set to: 58
 14516                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14517  004C7C  6943               	setf	67,b	;volatile
 14518  004C7E                     
 14519                           ; BSR set to: 58
 14520                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14521  004C7E  6953               	setf	83,b	;volatile
 14522  004C80                     
 14523                           ; BSR set to: 58
 14524                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14525  004C80  6963               	setf	99,b	;volatile
 14526  004C82                     
 14527                           ; BSR set to: 58
 14528                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14529  004C82  6973               	setf	115,b	;volatile
 14530                           
 14531                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14532  004C84  0E07               	movlw	7
 14533  004C86  6F83               	movwf	131,b	;volatile
 14534  004C88                     
 14535                           ; BSR set to: 58
 14536                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14537  004C88  6944               	setf	68,b	;volatile
 14538  004C8A                     
 14539                           ; BSR set to: 58
 14540                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14541  004C8A  6954               	setf	84,b	;volatile
 14542  004C8C                     
 14543                           ; BSR set to: 58
 14544                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14545  004C8C  6964               	setf	100,b	;volatile
 14546  004C8E                     
 14547                           ; BSR set to: 58
 14548                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14549  004C8E  6974               	setf	116,b	;volatile
 14550                           
 14551                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14552  004C90  0E0F               	movlw	15
 14553  004C92  6F84               	movwf	132,b	;volatile
 14554                           
 14555                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14556  004C94  0E1F               	movlw	31
 14557  004C96  6FCF               	movwf	207,b	;volatile
 14558                           
 14559                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14560  004C98  0E09               	movlw	9
 14561  004C9A  6FDC               	movwf	220,b	;volatile
 14562                           
 14563                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14564  004C9C  0E0E               	movlw	14
 14565  004C9E  6F01               	movwf	1,b	;volatile
 14566                           
 14567                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14568  004CA0  0E0A               	movlw	10
 14569  004CA2  6FE5               	movwf	229,b	;volatile
 14570                           
 14571                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14572  004CA4  0E0D               	movlw	13
 14573  004CA6  6F00               	movwf	0,b	;volatile
 14574                           
 14575                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14576  004CA8  0E1D               	movlw	29
 14577  004CAA  6FC9               	movwf	201,b	;volatile
 14578                           
 14579                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14580  004CAC  0E10               	movlw	16
 14581  004CAE  6F04               	movwf	4,b	;volatile
 14582                           
 14583                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14584  004CB0  0E07               	movlw	7
 14585  004CB2  6FD9               	movwf	217,b	;volatile
 14586                           
 14587                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14588  004CB4  0E09               	movlw	9
 14589  004CB6  6FD1               	movwf	209,b	;volatile
 14590                           
 14591                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14592  004CB8  0E0F               	movlw	15
 14593  004CBA  6F03               	movwf	3,b	;volatile
 14594                           
 14595                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14596  004CBC  0E13               	movlw	19
 14597  004CBE  6F0B               	movwf	11,b	;volatile
 14598                           
 14599                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14600  004CC0  0E08               	movlw	8
 14601  004CC2  6FDB               	movwf	219,b	;volatile
 14602                           
 14603                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14604  004CC4  0E08               	movlw	8
 14605  004CC6  6FD2               	movwf	210,b	;volatile
 14606                           
 14607                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14608  004CC8  0E1E               	movlw	30
 14609  004CCA  6FD0               	movwf	208,b	;volatile
 14610  004CCC                     
 14611                           ; BSR set to: 58
 14612  004CCC  0012               	return		;funcret
 14613  004CCE                     __end_of_PIN_MANAGER_Initialize:
 14614                           	callstack 0
 14615                           
 14616 ;; *************** function _OSCILLATOR_Initialize *****************
 14617 ;; Defined at:
 14618 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;		None
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;		None
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      void 
 14625 ;; Registers used:
 14626 ;;		wreg, status,2
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14636 ;;Total ram usage:        0 bytes
 14637 ;; Hardware stack levels used: 1
 14638 ;; Hardware stack levels required when called: 8
 14639 ;; This function calls:
 14640 ;;		Nothing
 14641 ;; This function is called by:
 14642 ;;		_SYSTEM_Initialize
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           	psect	text70
 14647  005DE6                     __ptext70:
 14648                           	callstack 0
 14649  005DE6                     _OSCILLATOR_Initialize:
 14650                           	callstack 21
 14651  005DE6                     
 14652                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14653  005DE6  0E60               	movlw	96
 14654  005DE8  0139               	movlb	57	; () banked
 14655  005DEA  6FD9               	movwf	217,b	;volatile
 14656                           
 14657                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14658  005DEC  0E00               	movlw	0
 14659  005DEE  6FDB               	movwf	219,b	;volatile
 14660                           
 14661                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14662  005DF0  0E00               	movlw	0
 14663  005DF2  6FDD               	movwf	221,b	;volatile
 14664                           
 14665                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14666  005DF4  0E08               	movlw	8
 14667  005DF6  6FDF               	movwf	223,b	;volatile
 14668                           
 14669                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14670  005DF8  0E00               	movlw	0
 14671  005DFA  6FDE               	movwf	222,b	;volatile
 14672  005DFC                     
 14673                           ; BSR set to: 57
 14674  005DFC  0012               	return		;funcret
 14675  005DFE                     __end_of_OSCILLATOR_Initialize:
 14676                           	callstack 0
 14677                           
 14678 ;; *************** function _INTERRUPT_Initialize *****************
 14679 ;; Defined at:
 14680 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;		None
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;  state           1   19[COMRAM] _Bool 
 14685 ;; Return value:  Size  Location     Type
 14686 ;;                  1    wreg      void 
 14687 ;; Registers used:
 14688 ;;		wreg, status,2
 14689 ;; Tracked objects:
 14690 ;;		On entry : 0/0
 14691 ;;		On exit  : 0/0
 14692 ;;		Unchanged: 0/0
 14693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14698 ;;Total ram usage:        1 bytes
 14699 ;; Hardware stack levels used: 1
 14700 ;; Hardware stack levels required when called: 8
 14701 ;; This function calls:
 14702 ;;		Nothing
 14703 ;; This function is called by:
 14704 ;;		_SYSTEM_Initialize
 14705 ;; This function uses a non-reentrant model
 14706 ;;
 14707                           
 14708                           	psect	text71
 14709  005514                     __ptext71:
 14710                           	callstack 0
 14711  005514                     _INTERRUPT_Initialize:
 14712                           	callstack 21
 14713  005514                     
 14714                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14715  005514  8AD2               	bsf	210,5,c	;volatile
 14716  005516                     
 14717                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14718  005516  0E00               	movlw	0
 14719  005518  BED2               	btfsc	16338,7,c	;volatile
 14720  00551A  0E01               	movlw	1
 14721  00551C  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14722  00551E                     
 14723                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14724  00551E  9ED2               	bcf	16338,7,c	;volatile
 14725                           
 14726                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14727  005520  0E55               	movlw	85
 14728  005522  6ED4               	movwf	212,c	;volatile
 14729                           
 14730                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14731  005524  0EAA               	movlw	170
 14732  005526  6ED4               	movwf	212,c	;volatile
 14733  005528                     
 14734                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14735  005528  90D4               	bcf	212,0,c	;volatile
 14736                           
 14737                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14738  00552A  0E00               	movlw	0
 14739  00552C  6ED7               	movwf	215,c	;volatile
 14740                           
 14741                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14742  00552E  0E00               	movlw	0
 14743  005530  6ED6               	movwf	214,c	;volatile
 14744                           
 14745                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14746  005532  0E08               	movlw	8
 14747  005534  6ED5               	movwf	213,c	;volatile
 14748                           
 14749                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14750  005536  0E55               	movlw	85
 14751  005538  6ED4               	movwf	212,c	;volatile
 14752                           
 14753                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14754  00553A  0EAA               	movlw	170
 14755  00553C  6ED4               	movwf	212,c	;volatile
 14756  00553E                     
 14757                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14758  00553E  80D4               	bsf	212,0,c	;volatile
 14759  005540                     
 14760                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14761  005540  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14762  005542  D002               	bra	u2845
 14763  005544  9ED2               	bcf	16338,7,c	;volatile
 14764  005546  D001               	bra	u2846
 14765  005548                     u2845:
 14766  005548  8ED2               	bsf	16338,7,c	;volatile
 14767  00554A                     u2846:
 14768  00554A                     
 14769                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14770  00554A  0139               	movlb	57	; () banked
 14771  00554C  9983               	bcf	131,4,b	;volatile
 14772  00554E                     
 14773                           ; BSR set to: 57
 14774                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14775  00554E  9783               	bcf	131,3,b	;volatile
 14776  005550                     
 14777                           ; BSR set to: 57
 14778                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14779  005550  8F81               	bsf	129,7,b	;volatile
 14780  005552                     
 14781                           ; BSR set to: 57
 14782                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14783  005552  8B81               	bsf	129,5,b	;volatile
 14784  005554                     
 14785                           ; BSR set to: 57
 14786                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14787  005554  8D81               	bsf	129,6,b	;volatile
 14788  005556                     
 14789                           ; BSR set to: 57
 14790                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14791  005556  818A               	bsf	138,0,b	;volatile
 14792  005558                     
 14793                           ; BSR set to: 57
 14794                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14795  005558  8F88               	bsf	136,7,b	;volatile
 14796  00555A                     
 14797                           ; BSR set to: 57
 14798                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14799  00555A  9187               	bcf	135,0,b	;volatile
 14800  00555C                     
 14801                           ; BSR set to: 57
 14802                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14803  00555C  8389               	bsf	137,1,b	;volatile
 14804  00555E                     
 14805                           ; BSR set to: 57
 14806  00555E  0012               	return		;funcret
 14807  005560                     __end_of_INTERRUPT_Initialize:
 14808                           	callstack 0
 14809                           
 14810 ;; *************** function _CLC3_Initialize *****************
 14811 ;; Defined at:
 14812 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14813 ;; Parameters:    Size  Location     Type
 14814 ;;		None
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;		None
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  1    wreg      void 
 14819 ;; Registers used:
 14820 ;;		wreg, status,2
 14821 ;; Tracked objects:
 14822 ;;		On entry : 0/0
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;Total ram usage:        0 bytes
 14831 ;; Hardware stack levels used: 1
 14832 ;; Hardware stack levels required when called: 8
 14833 ;; This function calls:
 14834 ;;		Nothing
 14835 ;; This function is called by:
 14836 ;;		_SYSTEM_Initialize
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           	psect	text72
 14841  005C10                     __ptext72:
 14842                           	callstack 0
 14843  005C10                     _CLC3_Initialize:
 14844                           	callstack 21
 14845  005C10                     
 14846                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14847  005C10  0E00               	movlw	0
 14848  005C12  013C               	movlb	60	; () banked
 14849  005C14  6F61               	movwf	97,b	;volatile
 14850                           
 14851                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14852  005C16  0E03               	movlw	3
 14853  005C18  6F62               	movwf	98,b	;volatile
 14854                           
 14855                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14856  005C1A  0E02               	movlw	2
 14857  005C1C  6F63               	movwf	99,b	;volatile
 14858                           
 14859                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14860  005C1E  0E00               	movlw	0
 14861  005C20  6F64               	movwf	100,b	;volatile
 14862                           
 14863                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14864  005C22  0E00               	movlw	0
 14865  005C24  6F65               	movwf	101,b	;volatile
 14866                           
 14867                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14868  005C26  0E02               	movlw	2
 14869  005C28  6F66               	movwf	102,b	;volatile
 14870                           
 14871                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14872  005C2A  0E08               	movlw	8
 14873  005C2C  6F67               	movwf	103,b	;volatile
 14874                           
 14875                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14876  005C2E  0E00               	movlw	0
 14877  005C30  6F68               	movwf	104,b	;volatile
 14878                           
 14879                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14880  005C32  0E00               	movlw	0
 14881  005C34  6F69               	movwf	105,b	;volatile
 14882                           
 14883                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14884  005C36  0E85               	movlw	133
 14885  005C38  6F60               	movwf	96,b	;volatile
 14886  005C3A                     
 14887                           ; BSR set to: 60
 14888  005C3A  0012               	return		;funcret
 14889  005C3C                     __end_of_CLC3_Initialize:
 14890                           	callstack 0
 14891                           
 14892 ;; *************** function _CCP4_Initialize *****************
 14893 ;; Defined at:
 14894 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;		None
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;		None
 14899 ;; Return value:  Size  Location     Type
 14900 ;;                  1    wreg      void 
 14901 ;; Registers used:
 14902 ;;		wreg, status,2, status,0, cstack
 14903 ;; Tracked objects:
 14904 ;;		On entry : 0/0
 14905 ;;		On exit  : 0/0
 14906 ;;		Unchanged: 0/0
 14907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;Total ram usage:        0 bytes
 14913 ;; Hardware stack levels used: 1
 14914 ;; Hardware stack levels required when called: 9
 14915 ;; This function calls:
 14916 ;;		_CCP4_SetCallBack
 14917 ;; This function is called by:
 14918 ;;		_SYSTEM_Initialize
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           	psect	text73
 14923  005B5A                     __ptext73:
 14924                           	callstack 0
 14925  005B5A                     _CCP4_Initialize:
 14926                           	callstack 20
 14927  005B5A                     
 14928                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14929  005B5A  0E83               	movlw	131
 14930  005B5C  6E72               	movwf	114,c	;volatile
 14931                           
 14932                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14933  005B5E  0E00               	movlw	0
 14934  005B60  6E73               	movwf	115,c	;volatile
 14935                           
 14936                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14937  005B62  0E00               	movlw	0
 14938  005B64  6E71               	movwf	113,c	;volatile
 14939                           
 14940                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14941  005B66  0E00               	movlw	0
 14942  005B68  6E70               	movwf	112,c	;volatile
 14943  005B6A                     
 14944                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14945  005B6A  0E2A               	movlw	low _CCP4_DefaultCallBack
 14946  005B6C  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14947  005B6E  0E5B               	movlw	high _CCP4_DefaultCallBack
 14948  005B70  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14949  005B72  EC36  F02F         	call	_CCP4_SetCallBack	;wreg free
 14950  005B76                     
 14951                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14952  005B76  013F               	movlb	63	; () banked
 14953  005B78  515E               	movf	94,w,b	;volatile
 14954  005B7A  0B3F               	andlw	-193
 14955  005B7C  0980               	iorlw	128
 14956  005B7E  6F5E               	movwf	94,b	;volatile
 14957  005B80                     
 14958                           ; BSR set to: 63
 14959                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14960  005B80  0139               	movlb	57	; () banked
 14961  005B82  91AA               	bcf	170,0,b	;volatile
 14962  005B84                     
 14963                           ; BSR set to: 57
 14964                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14965  005B84  819A               	bsf	154,0,b	;volatile
 14966  005B86                     
 14967                           ; BSR set to: 57
 14968  005B86  0012               	return		;funcret
 14969  005B88                     __end_of_CCP4_Initialize:
 14970                           	callstack 0
 14971                           
 14972 ;; *************** function _CCP4_SetCallBack *****************
 14973 ;; Defined at:
 14974 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 14975 ;; Parameters:    Size  Location     Type
 14976 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 14977 ;;		 -> CCP4_DefaultCallBack(1), 
 14978 ;; Auto vars:     Size  Location     Type
 14979 ;;		None
 14980 ;; Return value:  Size  Location     Type
 14981 ;;                  1    wreg      void 
 14982 ;; Registers used:
 14983 ;;		wreg, status,2, status,0
 14984 ;; Tracked objects:
 14985 ;;		On entry : 0/0
 14986 ;;		On exit  : 0/0
 14987 ;;		Unchanged: 0/0
 14988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14993 ;;Total ram usage:        2 bytes
 14994 ;; Hardware stack levels used: 1
 14995 ;; Hardware stack levels required when called: 8
 14996 ;; This function calls:
 14997 ;;		Nothing
 14998 ;; This function is called by:
 14999 ;;		_CCP4_Initialize
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text74
 15004  005E6C                     __ptext74:
 15005                           	callstack 0
 15006  005E6C                     _CCP4_SetCallBack:
 15007                           	callstack 20
 15008  005E6C                     
 15009                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15010  005E6C  C014  F18E         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15011  005E70  C015  F18F         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15012  005E74  0012               	return		;funcret
 15013  005E76                     __end_of_CCP4_SetCallBack:
 15014                           	callstack 0
 15015                           
 15016 ;; *************** function _CCP3_Initialize *****************
 15017 ;; Defined at:
 15018 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg, status,2, status,0, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;Total ram usage:        0 bytes
 15037 ;; Hardware stack levels used: 1
 15038 ;; Hardware stack levels required when called: 9
 15039 ;; This function calls:
 15040 ;;		_CCP3_SetCallBack
 15041 ;; This function is called by:
 15042 ;;		_SYSTEM_Initialize
 15043 ;; This function uses a non-reentrant model
 15044 ;;
 15045                           
 15046                           	psect	text75
 15047  005B88                     __ptext75:
 15048                           	callstack 0
 15049  005B88                     _CCP3_Initialize:
 15050                           	callstack 20
 15051  005B88                     
 15052                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15053  005B88  0E83               	movlw	131
 15054  005B8A  6E76               	movwf	118,c	;volatile
 15055                           
 15056                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15057  005B8C  0E00               	movlw	0
 15058  005B8E  6E77               	movwf	119,c	;volatile
 15059                           
 15060                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15061  005B90  0E00               	movlw	0
 15062  005B92  6E75               	movwf	117,c	;volatile
 15063                           
 15064                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15065  005B94  0E00               	movlw	0
 15066  005B96  6E74               	movwf	116,c	;volatile
 15067  005B98                     
 15068                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15069  005B98  0EFA               	movlw	low _CCP3_DefaultCallBack
 15070  005B9A  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15071  005B9C  0E5A               	movlw	high _CCP3_DefaultCallBack
 15072  005B9E  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15073  005BA0  EC3B  F02F         	call	_CCP3_SetCallBack	;wreg free
 15074  005BA4                     
 15075                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15076  005BA4  013F               	movlb	63	; () banked
 15077  005BA6  515E               	movf	94,w,b	;volatile
 15078  005BA8  0BCF               	andlw	-49
 15079  005BAA  0920               	iorlw	32
 15080  005BAC  6F5E               	movwf	94,b	;volatile
 15081  005BAE                     
 15082                           ; BSR set to: 63
 15083                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15084  005BAE  0139               	movlb	57	; () banked
 15085  005BB0  93A9               	bcf	169,1,b	;volatile
 15086  005BB2                     
 15087                           ; BSR set to: 57
 15088                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15089  005BB2  8399               	bsf	153,1,b	;volatile
 15090  005BB4                     
 15091                           ; BSR set to: 57
 15092  005BB4  0012               	return		;funcret
 15093  005BB6                     __end_of_CCP3_Initialize:
 15094                           	callstack 0
 15095                           
 15096 ;; *************** function _CCP3_SetCallBack *****************
 15097 ;; Defined at:
 15098 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15099 ;; Parameters:    Size  Location     Type
 15100 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15101 ;;		 -> CCP3_DefaultCallBack(1), 
 15102 ;; Auto vars:     Size  Location     Type
 15103 ;;		None
 15104 ;; Return value:  Size  Location     Type
 15105 ;;                  1    wreg      void 
 15106 ;; Registers used:
 15107 ;;		wreg, status,2, status,0
 15108 ;; Tracked objects:
 15109 ;;		On entry : 0/0
 15110 ;;		On exit  : 0/0
 15111 ;;		Unchanged: 0/0
 15112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15117 ;;Total ram usage:        2 bytes
 15118 ;; Hardware stack levels used: 1
 15119 ;; Hardware stack levels required when called: 8
 15120 ;; This function calls:
 15121 ;;		Nothing
 15122 ;; This function is called by:
 15123 ;;		_CCP3_Initialize
 15124 ;; This function uses a non-reentrant model
 15125 ;;
 15126                           
 15127                           	psect	text76
 15128  005E76                     __ptext76:
 15129                           	callstack 0
 15130  005E76                     _CCP3_SetCallBack:
 15131                           	callstack 20
 15132  005E76                     
 15133                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15134  005E76  C014  F190         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15135  005E7A  C015  F191         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15136  005E7E  0012               	return		;funcret
 15137  005E80                     __end_of_CCP3_SetCallBack:
 15138                           	callstack 0
 15139                           
 15140 ;; *************** function _ADCC_Initialize *****************
 15141 ;; Defined at:
 15142 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15143 ;; Parameters:    Size  Location     Type
 15144 ;;		None
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;		None
 15147 ;; Return value:  Size  Location     Type
 15148 ;;                  1    wreg      void 
 15149 ;; Registers used:
 15150 ;;		wreg, status,2
 15151 ;; Tracked objects:
 15152 ;;		On entry : 0/0
 15153 ;;		On exit  : 0/0
 15154 ;;		Unchanged: 0/0
 15155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15160 ;;Total ram usage:        0 bytes
 15161 ;; Hardware stack levels used: 1
 15162 ;; Hardware stack levels required when called: 8
 15163 ;; This function calls:
 15164 ;;		Nothing
 15165 ;; This function is called by:
 15166 ;;		_SYSTEM_Initialize
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           
 15170                           	psect	text77
 15171  005464                     __ptext77:
 15172                           	callstack 0
 15173  005464                     _ADCC_Initialize:
 15174                           	callstack 21
 15175  005464                     
 15176                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15177  005464  0E00               	movlw	0
 15178  005466  013E               	movlb	62	; () banked
 15179  005468  6FDE               	movwf	222,b	;volatile
 15180                           
 15181                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15182  00546A  0E00               	movlw	0
 15183  00546C  6FDF               	movwf	223,b	;volatile
 15184                           
 15185                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15186  00546E  0E00               	movlw	0
 15187  005470  6FE0               	movwf	224,b	;volatile
 15188                           
 15189                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15190  005472  0E00               	movlw	0
 15191  005474  6FE1               	movwf	225,b	;volatile
 15192                           
 15193                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15194  005476  0E00               	movlw	0
 15195  005478  6FE4               	movwf	228,b	;volatile
 15196                           
 15197                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15198  00547A  0E00               	movlw	0
 15199  00547C  6FE5               	movwf	229,b	;volatile
 15200                           
 15201                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15202  00547E  0E00               	movlw	0
 15203  005480  6FEA               	movwf	234,b	;volatile
 15204                           
 15205                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15206  005482  0E00               	movlw	0
 15207  005484  6FEC               	movwf	236,b	;volatile
 15208                           
 15209                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15210  005486  0E00               	movlw	0
 15211  005488  6FF1               	movwf	241,b	;volatile
 15212                           
 15213                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15214  00548A  0E58               	movlw	88
 15215  00548C  6FF3               	movwf	243,b	;volatile
 15216                           
 15217                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15218  00548E  0E02               	movlw	2
 15219  005490  6FF4               	movwf	244,b	;volatile
 15220                           
 15221                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15222  005492  0E00               	movlw	0
 15223  005494  6FF5               	movwf	245,b	;volatile
 15224                           
 15225                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15226  005496  0E00               	movlw	0
 15227  005498  6FF6               	movwf	246,b	;volatile
 15228                           
 15229                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15230  00549A  0E00               	movlw	0
 15231  00549C  6FF7               	movwf	247,b	;volatile
 15232                           
 15233                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15234  00549E  0E00               	movlw	0
 15235  0054A0  6FF9               	movwf	249,b	;volatile
 15236                           
 15237                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15238  0054A2  0E00               	movlw	0
 15239  0054A4  6FFA               	movwf	250,b	;volatile
 15240                           
 15241                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15242  0054A6  0E00               	movlw	0
 15243  0054A8  6FFB               	movwf	251,b	;volatile
 15244                           
 15245                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15246  0054AA  0E00               	movlw	0
 15247  0054AC  6FFC               	movwf	252,b	;volatile
 15248                           
 15249                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15250  0054AE  0E00               	movlw	0
 15251  0054B0  6FFD               	movwf	253,b	;volatile
 15252                           
 15253                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15254  0054B2  0E00               	movlw	0
 15255  0054B4  6FFE               	movwf	254,b	;volatile
 15256                           
 15257                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15258  0054B6  0E1F               	movlw	31
 15259  0054B8  6FFF               	movwf	255,b	;volatile
 15260                           
 15261                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15262  0054BA  0E84               	movlw	132
 15263  0054BC  6FF8               	movwf	248,b	;volatile
 15264  0054BE                     
 15265                           ; BSR set to: 62
 15266  0054BE  0012               	return		;funcret
 15267  0054C0                     __end_of_ADCC_Initialize:
 15268                           	callstack 0
 15269                           
 15270 ;; *************** function _UART1_tx_vect_isr *****************
 15271 ;; Defined at:
 15272 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;		None
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15290 ;;Total ram usage:        1 bytes
 15291 ;; Hardware stack levels used: 1
 15292 ;; Hardware stack levels required when called: 5
 15293 ;; This function calls:
 15294 ;;		Absolute function
 15295 ;;		_UART1_Transmit_ISR
 15296 ;; This function is called by:
 15297 ;;		Interrupt level 1
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           	psect	text78
 15302  0057D4                     __ptext78:
 15303                           	callstack 0
 15304  0057D4                     _UART1_tx_vect_isr:
 15305                           	callstack 14
 15306                           
 15307                           ; BSR set to: 62
 15308                           ;incstack = 0
 15309  0057D4  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15310  0057DA                     
 15311                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15312  0057DA  0101               	movlb	1	; () banked
 15313  0057DC  5198               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15314  0057DE  1199               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15315  0057E0  B4D8               	btfsc	status,2,c
 15316  0057E2  EFF5  F02B         	goto	i1u707_21
 15317  0057E6  EFF7  F02B         	goto	i1u707_20
 15318  0057EA                     i1u707_21:
 15319  0057EA  EF03  F02C         	goto	i1l324
 15320  0057EE                     i1u707_20:
 15321  0057EE                     
 15322                           ; BSR set to: 1
 15323                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15324  0057EE  D802               	call	i1u708_28
 15325  0057F0  EF03  F02C         	goto	i1u708_29
 15326  0057F4                     i1u708_28:
 15327  0057F4  0005               	push	
 15328  0057F6  6EFA               	movwf	pclath,c
 15329  0057F8  5198               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15330  0057FA  6EFD               	movwf	tosl,c
 15331  0057FC  5199               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15332  0057FE  6EFE               	movwf	tosh,c
 15333  005800  6AFF               	clrf	tosu,c
 15334  005802  50FA               	movf	pclath,w,c
 15335  005804  0012               	return		;indir
 15336  005806                     i1u708_29:
 15337  005806                     i1l324:
 15338  005806  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15339  00580C  0011               	retfie		f
 15340  00580E                     __end_of_UART1_tx_vect_isr:
 15341                           	callstack 0
 15342                           
 15343 ;; *************** function _UART1_Transmit_ISR *****************
 15344 ;; Defined at:
 15345 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;		None
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;		None
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  1    wreg      void 
 15352 ;; Registers used:
 15353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;Total ram usage:        0 bytes
 15364 ;; Hardware stack levels used: 1
 15365 ;; Hardware stack levels required when called: 4
 15366 ;; This function calls:
 15367 ;;		Nothing
 15368 ;; This function is called by:
 15369 ;;		_UART1_Initialize
 15370 ;;		_UART1_tx_vect_isr
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           	psect	text79
 15375  005716                     __ptext79:
 15376                           	callstack 0
 15377  005716                     _UART1_Transmit_ISR:
 15378                           	callstack 14
 15379  005716                     
 15380                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15381  005716  0E08               	movlw	8
 15382  005718  604C               	cpfslt	_uart1TxBufferRemaining^0,c	;volatile
 15383  00571A  EF91  F02B         	goto	i1u688_21
 15384  00571E  EF93  F02B         	goto	i1u688_20
 15385  005722                     i1u688_21:
 15386  005722  EFAA  F02B         	goto	i1l333
 15387  005726                     i1u688_20:
 15388  005726                     
 15389                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15390  005726  0E10               	movlw	low _uart1TxBuffer
 15391  005728  2446               	addwf	_uart1TxTail^0,w,c	;volatile
 15392  00572A  6ED9               	movwf	fsr2l,c
 15393  00572C  6ADA               	clrf	fsr2h,c
 15394  00572E  0E01               	movlw	high _uart1TxBuffer
 15395  005730  22DA               	addwfc	fsr2h,f,c
 15396  005732  50DF               	movf	indf2,w,c
 15397  005734  013D               	movlb	61	; () banked
 15398  005736  6FEA               	movwf	234,b	;volatile
 15399  005738                     
 15400                           ; BSR set to: 61
 15401  005738  2A46               	incf	_uart1TxTail^0,f,c	;volatile
 15402  00573A                     
 15403                           ; BSR set to: 61
 15404                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15405  00573A  0E07               	movlw	7
 15406  00573C  6446               	cpfsgt	_uart1TxTail^0,c	;volatile
 15407  00573E  EFA3  F02B         	goto	i1u689_21
 15408  005742  EFA5  F02B         	goto	i1u689_20
 15409  005746                     i1u689_21:
 15410  005746  EFA7  F02B         	goto	i1l7088
 15411  00574A                     i1u689_20:
 15412  00574A                     
 15413                           ; BSR set to: 61
 15414                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15415  00574A  0E00               	movlw	0
 15416  00574C  6E46               	movwf	_uart1TxTail^0,c	;volatile
 15417  00574E                     i1l7088:
 15418                           
 15419                           ; BSR set to: 61
 15420                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15421  00574E  2A4C               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 15422                           
 15423                           ;mcc_generated_files/uart1.c: 264:     }
 15424  005750  EFAC  F02B         	goto	i1l336
 15425  005754                     i1l333:
 15426                           
 15427                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15428  005754  0139               	movlb	57	; () banked
 15429  005756  9993               	bcf	147,4,b	;volatile
 15430  005758                     i1l336:
 15431  005758  0012               	return		;funcret
 15432  00575A                     __end_of_UART1_Transmit_ISR:
 15433                           	callstack 0
 15434                           
 15435 ;; *************** function _UART1_rx_vect_isr *****************
 15436 ;; Defined at:
 15437 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15438 ;; Parameters:    Size  Location     Type
 15439 ;;		None
 15440 ;; Auto vars:     Size  Location     Type
 15441 ;;		None
 15442 ;; Return value:  Size  Location     Type
 15443 ;;                  1    wreg      void 
 15444 ;; Registers used:
 15445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15446 ;; Tracked objects:
 15447 ;;		On entry : 0/0
 15448 ;;		On exit  : 0/0
 15449 ;;		Unchanged: 0/0
 15450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15453 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15455 ;;Total ram usage:        1 bytes
 15456 ;; Hardware stack levels used: 1
 15457 ;; Hardware stack levels required when called: 7
 15458 ;; This function calls:
 15459 ;;		Absolute function
 15460 ;;		_UART1_Receive_ISR
 15461 ;; This function is called by:
 15462 ;;		Interrupt level 1
 15463 ;; This function uses a non-reentrant model
 15464 ;;
 15465                           
 15466                           	psect	text80
 15467  005810                     __ptext80:
 15468                           	callstack 0
 15469  005810                     _UART1_rx_vect_isr:
 15470                           	callstack 12
 15471                           
 15472                           ;incstack = 0
 15473  005810  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15474  005816                     
 15475                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15476  005816  0101               	movlb	1	; () banked
 15477  005818  519A               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15478  00581A  119B               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15479  00581C  B4D8               	btfsc	status,2,c
 15480  00581E  EF13  F02C         	goto	i1u709_21
 15481  005822  EF15  F02C         	goto	i1u709_20
 15482  005826                     i1u709_21:
 15483  005826  EF21  F02C         	goto	i1l330
 15484  00582A                     i1u709_20:
 15485  00582A                     
 15486                           ; BSR set to: 1
 15487                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15488  00582A  D802               	call	i1u710_28
 15489  00582C  EF21  F02C         	goto	i1u710_29
 15490  005830                     i1u710_28:
 15491  005830  0005               	push	
 15492  005832  6EFA               	movwf	pclath,c
 15493  005834  519A               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15494  005836  6EFD               	movwf	tosl,c
 15495  005838  519B               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15496  00583A  6EFE               	movwf	tosh,c
 15497  00583C  6AFF               	clrf	tosu,c
 15498  00583E  50FA               	movf	pclath,w,c
 15499  005840  0012               	return		;indir
 15500  005842                     i1u710_29:
 15501  005842                     i1l330:
 15502  005842  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15503  005848  0011               	retfie		f
 15504  00584A                     __end_of_UART1_rx_vect_isr:
 15505                           	callstack 0
 15506                           
 15507 ;; *************** function _UART1_Receive_ISR *****************
 15508 ;; Defined at:
 15509 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;		None
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1    wreg      void 
 15516 ;; Registers used:
 15517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15518 ;; Tracked objects:
 15519 ;;		On entry : 0/0
 15520 ;;		On exit  : 0/0
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15527 ;;Total ram usage:        0 bytes
 15528 ;; Hardware stack levels used: 1
 15529 ;; Hardware stack levels required when called: 6
 15530 ;; This function calls:
 15531 ;;		Absolute function
 15532 ;;		_UART1_DefaultErrorHandler
 15533 ;;		_UART1_DefaultFramingErrorHandler
 15534 ;;		_UART1_DefaultOverrunErrorHandler
 15535 ;;		_UART1_RxDataHandler
 15536 ;; This function is called by:
 15537 ;;		_UART1_Initialize
 15538 ;;		_UART1_rx_vect_isr
 15539 ;; This function uses a non-reentrant model
 15540 ;;
 15541                           
 15542                           	psect	text81
 15543  004E54                     __ptext81:
 15544                           	callstack 0
 15545  004E54                     _UART1_Receive_ISR:
 15546                           	callstack 12
 15547  004E54                     
 15548                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15549  004E54  0E00               	movlw	low _uart1RxStatusBuffer
 15550  004E56  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15551  004E58  6ED9               	movwf	fsr2l,c
 15552  004E5A  6ADA               	clrf	fsr2h,c
 15553  004E5C  0E01               	movlw	high _uart1RxStatusBuffer
 15554  004E5E  22DA               	addwfc	fsr2h,f,c
 15555  004E60  0E00               	movlw	0
 15556  004E62  6EDF               	movwf	indf2,c
 15557  004E64                     
 15558                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15559  004E64  013D               	movlb	61	; () banked
 15560  004E66  A7F9               	btfss	249,3,b	;volatile
 15561  004E68  EF38  F027         	goto	i1u690_21
 15562  004E6C  EF3A  F027         	goto	i1u690_20
 15563  004E70                     i1u690_21:
 15564  004E70  EF4E  F027         	goto	i1l7098
 15565  004E74                     i1u690_20:
 15566  004E74                     
 15567                           ; BSR set to: 61
 15568                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15569  004E74  0E00               	movlw	low _uart1RxStatusBuffer
 15570  004E76  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15571  004E78  6ED9               	movwf	fsr2l,c
 15572  004E7A  6ADA               	clrf	fsr2h,c
 15573  004E7C  0E01               	movlw	high _uart1RxStatusBuffer
 15574  004E7E  22DA               	addwfc	fsr2h,f,c
 15575  004E80  0101               	movlb	1	; () banked
 15576  004E82  82DF               	bsf	indf2,1,c
 15577  004E84                     
 15578                           ; BSR set to: 1
 15579                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15580  004E84  D802               	call	i1u691_28
 15581  004E86  EF4E  F027         	goto	i1u691_29
 15582  004E8A                     i1u691_28:
 15583  004E8A  0005               	push	
 15584  004E8C  6EFA               	movwf	pclath,c
 15585  004E8E  5196               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15586  004E90  6EFD               	movwf	tosl,c
 15587  004E92  5197               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15588  004E94  6EFE               	movwf	tosh,c
 15589  004E96  6AFF               	clrf	tosu,c
 15590  004E98  50FA               	movf	pclath,w,c
 15591  004E9A  0012               	return		;indir
 15592  004E9C                     i1u691_29:
 15593  004E9C                     i1l7098:
 15594                           
 15595                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15596  004E9C  013D               	movlb	61	; () banked
 15597  004E9E  A3F9               	btfss	249,1,b	;volatile
 15598  004EA0  EF54  F027         	goto	i1u692_21
 15599  004EA4  EF56  F027         	goto	i1u692_20
 15600  004EA8                     i1u692_21:
 15601  004EA8  EF6A  F027         	goto	i1l7104
 15602  004EAC                     i1u692_20:
 15603  004EAC                     
 15604                           ; BSR set to: 61
 15605                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15606  004EAC  0E00               	movlw	low _uart1RxStatusBuffer
 15607  004EAE  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15608  004EB0  6ED9               	movwf	fsr2l,c
 15609  004EB2  6ADA               	clrf	fsr2h,c
 15610  004EB4  0E01               	movlw	high _uart1RxStatusBuffer
 15611  004EB6  22DA               	addwfc	fsr2h,f,c
 15612  004EB8  0101               	movlb	1	; () banked
 15613  004EBA  84DF               	bsf	indf2,2,c
 15614  004EBC                     
 15615                           ; BSR set to: 1
 15616                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15617  004EBC  D802               	call	i1u693_28
 15618  004EBE  EF6A  F027         	goto	i1u693_29
 15619  004EC2                     i1u693_28:
 15620  004EC2  0005               	push	
 15621  004EC4  6EFA               	movwf	pclath,c
 15622  004EC6  5194               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15623  004EC8  6EFD               	movwf	tosl,c
 15624  004ECA  5195               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15625  004ECC  6EFE               	movwf	tosh,c
 15626  004ECE  6AFF               	clrf	tosu,c
 15627  004ED0  50FA               	movf	pclath,w,c
 15628  004ED2  0012               	return		;indir
 15629  004ED4                     i1u693_29:
 15630  004ED4                     i1l7104:
 15631                           
 15632                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15633  004ED4  0E00               	movlw	low _uart1RxStatusBuffer
 15634  004ED6  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15635  004ED8  6ED9               	movwf	fsr2l,c
 15636  004EDA  6ADA               	clrf	fsr2h,c
 15637  004EDC  0E01               	movlw	high _uart1RxStatusBuffer
 15638  004EDE  22DA               	addwfc	fsr2h,f,c
 15639  004EE0  50DF               	movf	indf2,w,c
 15640  004EE2  B4D8               	btfsc	status,2,c
 15641  004EE4  EF76  F027         	goto	i1u694_21
 15642  004EE8  EF78  F027         	goto	i1u694_20
 15643  004EEC                     i1u694_21:
 15644  004EEC  EF87  F027         	goto	i1l7108
 15645  004EF0                     i1u694_20:
 15646  004EF0                     
 15647                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15648  004EF0  D802               	call	i1u695_28
 15649  004EF2  EF85  F027         	goto	i1u695_29
 15650  004EF6                     i1u695_28:
 15651  004EF6  0005               	push	
 15652  004EF8  6EFA               	movwf	pclath,c
 15653  004EFA  0101               	movlb	1	; () banked
 15654  004EFC  5192               	movf	_UART1_ErrorHandler& (0+255),w,b
 15655  004EFE  6EFD               	movwf	tosl,c
 15656  004F00  5193               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15657  004F02  6EFE               	movwf	tosh,c
 15658  004F04  6AFF               	clrf	tosu,c
 15659  004F06  50FA               	movf	pclath,w,c
 15660  004F08  0012               	return		;indir
 15661  004F0A                     i1u695_29:
 15662                           
 15663                           ;mcc_generated_files/uart1.c: 290:     } else {
 15664  004F0A  EF89  F027         	goto	i1l343
 15665  004F0E                     i1l7108:
 15666                           
 15667                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15668  004F0E  EC1E  F02E         	call	_UART1_RxDataHandler	;wreg free
 15669  004F12                     i1l343:
 15670  004F12  0012               	return		;funcret
 15671  004F14                     __end_of_UART1_Receive_ISR:
 15672                           	callstack 0
 15673                           
 15674 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15675 ;; Defined at:
 15676 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15677 ;; Parameters:    Size  Location     Type
 15678 ;;		None
 15679 ;; Auto vars:     Size  Location     Type
 15680 ;;		None
 15681 ;; Return value:  Size  Location     Type
 15682 ;;                  1    wreg      void 
 15683 ;; Registers used:
 15684 ;;		None
 15685 ;; Tracked objects:
 15686 ;;		On entry : 0/0
 15687 ;;		On exit  : 0/0
 15688 ;;		Unchanged: 0/0
 15689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;Total ram usage:        0 bytes
 15695 ;; Hardware stack levels used: 1
 15696 ;; Hardware stack levels required when called: 4
 15697 ;; This function calls:
 15698 ;;		Nothing
 15699 ;; This function is called by:
 15700 ;;		_UART1_Initialize
 15701 ;;		_UART1_Receive_ISR
 15702 ;; This function uses a non-reentrant model
 15703 ;;
 15704                           
 15705                           	psect	text82
 15706  005E8C                     __ptext82:
 15707                           	callstack 0
 15708  005E8C                     _UART1_DefaultOverrunErrorHandler:
 15709                           	callstack 13
 15710  005E8C  0012               	return		;funcret
 15711  005E8E                     __end_of_UART1_DefaultOverrunErrorHandler:
 15712                           	callstack 0
 15713                           
 15714 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15715 ;; Defined at:
 15716 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15717 ;; Parameters:    Size  Location     Type
 15718 ;;		None
 15719 ;; Auto vars:     Size  Location     Type
 15720 ;;		None
 15721 ;; Return value:  Size  Location     Type
 15722 ;;                  1    wreg      void 
 15723 ;; Registers used:
 15724 ;;		None
 15725 ;; Tracked objects:
 15726 ;;		On entry : 0/0
 15727 ;;		On exit  : 0/0
 15728 ;;		Unchanged: 0/0
 15729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15734 ;;Total ram usage:        0 bytes
 15735 ;; Hardware stack levels used: 1
 15736 ;; Hardware stack levels required when called: 4
 15737 ;; This function calls:
 15738 ;;		Nothing
 15739 ;; This function is called by:
 15740 ;;		_UART1_Initialize
 15741 ;;		_UART1_Receive_ISR
 15742 ;; This function uses a non-reentrant model
 15743 ;;
 15744                           
 15745                           	psect	text83
 15746  005E8E                     __ptext83:
 15747                           	callstack 0
 15748  005E8E                     _UART1_DefaultFramingErrorHandler:
 15749                           	callstack 13
 15750  005E8E  0012               	return		;funcret
 15751  005E90                     __end_of_UART1_DefaultFramingErrorHandler:
 15752                           	callstack 0
 15753                           
 15754 ;; *************** function _UART1_DefaultErrorHandler *****************
 15755 ;; Defined at:
 15756 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15757 ;; Parameters:    Size  Location     Type
 15758 ;;		None
 15759 ;; Auto vars:     Size  Location     Type
 15760 ;;		None
 15761 ;; Return value:  Size  Location     Type
 15762 ;;                  1    wreg      void 
 15763 ;; Registers used:
 15764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/0
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15774 ;;Total ram usage:        0 bytes
 15775 ;; Hardware stack levels used: 1
 15776 ;; Hardware stack levels required when called: 5
 15777 ;; This function calls:
 15778 ;;		_UART1_RxDataHandler
 15779 ;; This function is called by:
 15780 ;;		_UART1_Initialize
 15781 ;;		_UART1_Receive_ISR
 15782 ;; This function uses a non-reentrant model
 15783 ;;
 15784                           
 15785                           	psect	text84
 15786  005E80                     __ptext84:
 15787                           	callstack 0
 15788  005E80                     _UART1_DefaultErrorHandler:
 15789                           	callstack 12
 15790  005E80                     
 15791                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15792  005E80  EC1E  F02E         	call	_UART1_RxDataHandler	;wreg free
 15793  005E84  0012               	return		;funcret
 15794  005E86                     __end_of_UART1_DefaultErrorHandler:
 15795                           	callstack 0
 15796                           
 15797 ;; *************** function _UART1_RxDataHandler *****************
 15798 ;; Defined at:
 15799 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;		None
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;		None
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  1    wreg      void 
 15806 ;; Registers used:
 15807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15817 ;;Total ram usage:        0 bytes
 15818 ;; Hardware stack levels used: 1
 15819 ;; Hardware stack levels required when called: 4
 15820 ;; This function calls:
 15821 ;;		Nothing
 15822 ;; This function is called by:
 15823 ;;		_UART1_Receive_ISR
 15824 ;;		_UART1_DefaultErrorHandler
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           	psect	text85
 15829  005C3C                     __ptext85:
 15830                           	callstack 0
 15831  005C3C                     _UART1_RxDataHandler:
 15832                           	callstack 13
 15833  005C3C                     
 15834                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15835  005C3C  0E08               	movlw	low _uart1RxBuffer
 15836  005C3E  2445               	addwf	_uart1RxHead^0,w,c	;volatile
 15837  005C40  6ED9               	movwf	fsr2l,c
 15838  005C42  6ADA               	clrf	fsr2h,c
 15839  005C44  0E01               	movlw	high _uart1RxBuffer
 15840  005C46  22DA               	addwfc	fsr2h,f,c
 15841  005C48  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15842  005C4E  2A45               	incf	_uart1RxHead^0,f,c	;volatile
 15843  005C50                     
 15844                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15845  005C50  0E07               	movlw	7
 15846  005C52  6445               	cpfsgt	_uart1RxHead^0,c	;volatile
 15847  005C54  EF2E  F02E         	goto	i1u632_21
 15848  005C58  EF30  F02E         	goto	i1u632_20
 15849  005C5C                     i1u632_21:
 15850  005C5C  EF32  F02E         	goto	i1l6546
 15851  005C60                     i1u632_20:
 15852  005C60                     
 15853                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15854  005C60  0E00               	movlw	0
 15855  005C62  6E45               	movwf	_uart1RxHead^0,c	;volatile
 15856  005C64                     i1l6546:
 15857                           
 15858                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15859  005C64  2A43               	incf	_uart1RxCount^0,f,c	;volatile
 15860  005C66  0012               	return		;funcret
 15861  005C68                     __end_of_UART1_RxDataHandler:
 15862                           	callstack 0
 15863                           
 15864 ;; *************** function _TMR4_ISR *****************
 15865 ;; Defined at:
 15866 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15867 ;; Parameters:    Size  Location     Type
 15868 ;;		None
 15869 ;; Auto vars:     Size  Location     Type
 15870 ;;		None
 15871 ;; Return value:  Size  Location     Type
 15872 ;;                  1    wreg      void 
 15873 ;; Registers used:
 15874 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15875 ;; Tracked objects:
 15876 ;;		On entry : 0/0
 15877 ;;		On exit  : 0/0
 15878 ;;		Unchanged: 0/0
 15879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15884 ;;Total ram usage:        1 bytes
 15885 ;; Hardware stack levels used: 1
 15886 ;; Hardware stack levels required when called: 6
 15887 ;; This function calls:
 15888 ;;		_TMR4_CallBack
 15889 ;; This function is called by:
 15890 ;;		Interrupt level 1
 15891 ;; This function uses a non-reentrant model
 15892 ;;
 15893                           
 15894                           	psect	text86
 15895  0058F4                     __ptext86:
 15896                           	callstack 0
 15897  0058F4                     _TMR4_ISR:
 15898                           	callstack 13
 15899                           
 15900                           ;incstack = 0
 15901  0058F4  006F FF60  F013    	movff	status,??_TMR4_ISR
 15902  0058FA                     
 15903                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15904  0058FA  0139               	movlb	57	; () banked
 15905  0058FC  91A7               	bcf	167,0,b	;volatile
 15906  0058FE                     
 15907                           ; BSR set to: 57
 15908                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15909  0058FE  4A40               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
 15910  005900  2A41               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
 15911  005902  5041               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
 15912  005904  E109               	bnz	i1u715_20
 15913  005906  0E0A               	movlw	10
 15914  005908  5C40               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
 15915  00590A  A0D8               	btfss	status,0,c
 15916  00590C  EF8A  F02C         	goto	i1u715_21
 15917  005910  EF8C  F02C         	goto	i1u715_20
 15918  005914                     i1u715_21:
 15919  005914  EF92  F02C         	goto	i1l688
 15920  005918                     i1u715_20:
 15921  005918                     
 15922                           ; BSR set to: 57
 15923                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15924  005918  ECDB  F02D         	call	_TMR4_CallBack	;wreg free
 15925  00591C                     
 15926                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15927  00591C  0E00               	movlw	0
 15928  00591E  6E41               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
 15929  005920  0E00               	movlw	0
 15930  005922  6E40               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
 15931  005924                     i1l688:
 15932  005924  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15933  00592A  0011               	retfie		f
 15934  00592C                     __end_of_TMR4_ISR:
 15935                           	callstack 0
 15936                           
 15937 ;; *************** function _TMR4_CallBack *****************
 15938 ;; Defined at:
 15939 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15940 ;; Parameters:    Size  Location     Type
 15941 ;;		None
 15942 ;; Auto vars:     Size  Location     Type
 15943 ;;		None
 15944 ;; Return value:  Size  Location     Type
 15945 ;;                  1    wreg      void 
 15946 ;; Registers used:
 15947 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15948 ;; Tracked objects:
 15949 ;;		On entry : 0/0
 15950 ;;		On exit  : 0/0
 15951 ;;		Unchanged: 0/0
 15952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15957 ;;Total ram usage:        0 bytes
 15958 ;; Hardware stack levels used: 1
 15959 ;; Hardware stack levels required when called: 5
 15960 ;; This function calls:
 15961 ;;		Absolute function
 15962 ;;		_TMR4_10msISR
 15963 ;;		_TMR4_DefaultInterruptHandler
 15964 ;; This function is called by:
 15965 ;;		_TMR4_ISR
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           	psect	text87
 15970  005BB6                     __ptext87:
 15971                           	callstack 0
 15972  005BB6                     _TMR4_CallBack:
 15973                           	callstack 13
 15974  005BB6                     
 15975                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 15976  005BB6  0101               	movlb	1	; () banked
 15977  005BB8  5186               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15978  005BBA  1187               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15979  005BBC  B4D8               	btfsc	status,2,c
 15980  005BBE  EFE3  F02D         	goto	i1u699_21
 15981  005BC2  EFE5  F02D         	goto	i1u699_20
 15982  005BC6                     i1u699_21:
 15983  005BC6  EFF1  F02D         	goto	i1l692
 15984  005BCA                     i1u699_20:
 15985  005BCA                     
 15986                           ; BSR set to: 1
 15987                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 15988  005BCA  D802               	call	i1u700_28
 15989  005BCC  EFF1  F02D         	goto	i1u700_29
 15990  005BD0                     i1u700_28:
 15991  005BD0  0005               	push	
 15992  005BD2  6EFA               	movwf	pclath,c
 15993  005BD4  5186               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15994  005BD6  6EFD               	movwf	tosl,c
 15995  005BD8  5187               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15996  005BDA  6EFE               	movwf	tosh,c
 15997  005BDC  6AFF               	clrf	tosu,c
 15998  005BDE  50FA               	movf	pclath,w,c
 15999  005BE0  0012               	return		;indir
 16000  005BE2                     i1u700_29:
 16001  005BE2                     i1l692:
 16002  005BE2  0012               	return		;funcret
 16003  005BE4                     __end_of_TMR4_CallBack:
 16004                           	callstack 0
 16005                           
 16006 ;; *************** function _TMR4_10msISR *****************
 16007 ;; Defined at:
 16008 ;;		line 62 in file "main.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;		None
 16011 ;; Auto vars:     Size  Location     Type
 16012 ;;		None
 16013 ;; Return value:  Size  Location     Type
 16014 ;;                  1    wreg      void 
 16015 ;; Registers used:
 16016 ;;		status,2, status,0
 16017 ;; Tracked objects:
 16018 ;;		On entry : 0/0
 16019 ;;		On exit  : 0/0
 16020 ;;		Unchanged: 0/0
 16021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16026 ;;Total ram usage:        0 bytes
 16027 ;; Hardware stack levels used: 1
 16028 ;; Hardware stack levels required when called: 4
 16029 ;; This function calls:
 16030 ;;		Nothing
 16031 ;; This function is called by:
 16032 ;;		_main
 16033 ;;		_TMR4_CallBack
 16034 ;; This function uses a non-reentrant model
 16035 ;;
 16036                           
 16037                           	psect	text88
 16038  005E86                     __ptext88:
 16039                           	callstack 0
 16040  005E86                     _TMR4_10msISR:
 16041                           	callstack 13
 16042  005E86                     
 16043                           ;main.c: 63:     ++cycle10ms;
 16044  005E86  0100               	movlb	0	; () banked
 16045  005E88  2BFA               	incf	_cycle10ms& (0+255),f,b	;volatile
 16046  005E8A                     
 16047                           ; BSR set to: 0
 16048  005E8A  0012               	return		;funcret
 16049  005E8C                     __end_of_TMR4_10msISR:
 16050                           	callstack 0
 16051                           
 16052 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16053 ;; Defined at:
 16054 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16055 ;; Parameters:    Size  Location     Type
 16056 ;;		None
 16057 ;; Auto vars:     Size  Location     Type
 16058 ;;		None
 16059 ;; Return value:  Size  Location     Type
 16060 ;;                  1    wreg      void 
 16061 ;; Registers used:
 16062 ;;		None
 16063 ;; Tracked objects:
 16064 ;;		On entry : 0/0
 16065 ;;		On exit  : 0/0
 16066 ;;		Unchanged: 0/0
 16067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16072 ;;Total ram usage:        0 bytes
 16073 ;; Hardware stack levels used: 1
 16074 ;; Hardware stack levels required when called: 4
 16075 ;; This function calls:
 16076 ;;		Nothing
 16077 ;; This function is called by:
 16078 ;;		_TMR4_Initialize
 16079 ;;		_TMR4_CallBack
 16080 ;; This function uses a non-reentrant model
 16081 ;;
 16082                           
 16083                           	psect	text89
 16084  005E90                     __ptext89:
 16085                           	callstack 0
 16086  005E90                     _TMR4_DefaultInterruptHandler:
 16087                           	callstack 13
 16088  005E90  0012               	return		;funcret
 16089  005E92                     __end_of_TMR4_DefaultInterruptHandler:
 16090                           	callstack 0
 16091                           
 16092 ;; *************** function _Default_ISR *****************
 16093 ;; Defined at:
 16094 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16095 ;; Parameters:    Size  Location     Type
 16096 ;;		None
 16097 ;; Auto vars:     Size  Location     Type
 16098 ;;		None
 16099 ;; Return value:  Size  Location     Type
 16100 ;;                  1    wreg      void 
 16101 ;; Registers used:
 16102 ;;		None
 16103 ;; Tracked objects:
 16104 ;;		On entry : 0/0
 16105 ;;		On exit  : 0/0
 16106 ;;		Unchanged: 0/0
 16107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16112 ;;Total ram usage:        0 bytes
 16113 ;; Hardware stack levels used: 1
 16114 ;; This function calls:
 16115 ;;		Nothing
 16116 ;; This function is called by:
 16117 ;;		Interrupt level 2
 16118 ;; This function uses a non-reentrant model
 16119 ;;
 16120                           
 16121                           	psect	text90
 16122  005E94                     __ptext90:
 16123                           	callstack 0
 16124  005E94                     _Default_ISR:
 16125                           	callstack 15
 16126  005E94  0011               	retfie		f
 16127  005E96                     __end_of_Default_ISR:
 16128                           	callstack 0
 16129                           
 16130 ;; *************** function _CCP3_CaptureISR *****************
 16131 ;; Defined at:
 16132 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16133 ;; Parameters:    Size  Location     Type
 16134 ;;		None
 16135 ;; Auto vars:     Size  Location     Type
 16136 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16137 ;; Return value:  Size  Location     Type
 16138 ;;                  1    wreg      void 
 16139 ;; Registers used:
 16140 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16141 ;; Tracked objects:
 16142 ;;		On entry : 0/0
 16143 ;;		On exit  : 0/0
 16144 ;;		Unchanged: 0/0
 16145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16150 ;;Total ram usage:        2 bytes
 16151 ;; Hardware stack levels used: 1
 16152 ;; Hardware stack levels required when called: 1
 16153 ;; This function calls:
 16154 ;;		Absolute function
 16155 ;;		_CCP3_DefaultCallBack
 16156 ;; This function is called by:
 16157 ;;		Interrupt level 2
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           	psect	text91
 16162  0059FC                     __ptext91:
 16163                           	callstack 0
 16164  0059FC                     _CCP3_CaptureISR:
 16165                           	callstack 14
 16166  0059FC                     
 16167                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16168  0059FC  0139               	movlb	57	; () banked
 16169  0059FE  93A9               	bcf	169,1,b	;volatile
 16170                           
 16171                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16172  005A00  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16173                           
 16174                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16175  005A06  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16176  005A0C                     
 16177                           ; BSR set to: 57
 16178                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16179  005A0C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16180  005A10  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16181  005A14  D802               	call	i2u711_48
 16182  005A16  EF17  F02D         	goto	i2u711_49
 16183  005A1A                     i2u711_48:
 16184  005A1A  0005               	push	
 16185  005A1C  6EFA               	movwf	pclath,c
 16186  005A1E  0101               	movlb	1	; () banked
 16187  005A20  5190               	movf	_CCP3_CallBack& (0+255),w,b
 16188  005A22  6EFD               	movwf	tosl,c
 16189  005A24  5191               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16190  005A26  6EFE               	movwf	tosh,c
 16191  005A28  6AFF               	clrf	tosu,c
 16192  005A2A  50FA               	movf	pclath,w,c
 16193  005A2C  0012               	return		;indir
 16194  005A2E                     i2u711_49:
 16195  005A2E  0011               	retfie		f
 16196  005A30                     __end_of_CCP3_CaptureISR:
 16197                           	callstack 0
 16198                           
 16199 ;; *************** function _CCP3_DefaultCallBack *****************
 16200 ;; Defined at:
 16201 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16204 ;; Auto vars:     Size  Location     Type
 16205 ;;		None
 16206 ;; Return value:  Size  Location     Type
 16207 ;;                  1    wreg      void 
 16208 ;; Registers used:
 16209 ;;		wreg, status,2, status,0
 16210 ;; Tracked objects:
 16211 ;;		On entry : 0/0
 16212 ;;		On exit  : 0/0
 16213 ;;		Unchanged: 0/0
 16214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16218 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16219 ;;Total ram usage:        2 bytes
 16220 ;; Hardware stack levels used: 1
 16221 ;; This function calls:
 16222 ;;		Nothing
 16223 ;; This function is called by:
 16224 ;;		_CCP3_Initialize
 16225 ;;		_CCP3_CaptureISR
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text92
 16230  005AFA                     __ptext92:
 16231                           	callstack 0
 16232  005AFA                     _CCP3_DefaultCallBack:
 16233                           	callstack 14
 16234  005AFA                     
 16235                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16236  005AFA  AECD               	btfss	205,7,c	;volatile
 16237  005AFC  EF82  F02D         	goto	i2u696_41
 16238  005B00  EF84  F02D         	goto	i2u696_40
 16239  005B04                     i2u696_41:
 16240  005B04  EF8A  F02D         	goto	i2l7114
 16241  005B08                     i2u696_40:
 16242  005B08                     
 16243                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16244  005B08  C001  F0F5         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16245  005B0C  C002  F0F6         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16246                           
 16247                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16248  005B10  EF94  F02D         	goto	i2l438
 16249  005B14                     i2l7114:
 16250                           
 16251                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16252  005B14  0100               	movlb	0	; () banked
 16253  005B16  51F5               	movf	_distLeftM& (0+255),w,b
 16254  005B18  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16255  005B1A  6FF7               	movwf	_distLeft& (0+255),b	;volatile
 16256  005B1C  51F6               	movf	(_distLeftM+1)& (0+255),w,b
 16257  005B1E  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16258  005B20  6FF8               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16259  005B22                     
 16260                           ; BSR set to: 0
 16261                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16262  005B22  90D8               	bcf	status,0,c
 16263  005B24  33F8               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16264  005B26  33F7               	rrcf	_distLeft& (0+255),f,b	;volatile
 16265  005B28                     i2l438:
 16266  005B28  0012               	return		;funcret
 16267  005B2A                     __end_of_CCP3_DefaultCallBack:
 16268                           	callstack 0
 16269                           
 16270 ;; *************** function _CCP4_CaptureISR *****************
 16271 ;; Defined at:
 16272 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16273 ;; Parameters:    Size  Location     Type
 16274 ;;		None
 16275 ;; Auto vars:     Size  Location     Type
 16276 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16277 ;; Return value:  Size  Location     Type
 16278 ;;                  1    wreg      void 
 16279 ;; Registers used:
 16280 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16281 ;; Tracked objects:
 16282 ;;		On entry : 0/0
 16283 ;;		On exit  : 0/0
 16284 ;;		Unchanged: 0/0
 16285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16290 ;;Total ram usage:        2 bytes
 16291 ;; Hardware stack levels used: 1
 16292 ;; Hardware stack levels required when called: 1
 16293 ;; This function calls:
 16294 ;;		Absolute function
 16295 ;;		_CCP4_DefaultCallBack
 16296 ;; This function is called by:
 16297 ;;		Interrupt level 2
 16298 ;; This function uses a non-reentrant model
 16299 ;;
 16300                           
 16301                           	psect	text93
 16302  005A30                     __ptext93:
 16303                           	callstack 0
 16304  005A30                     _CCP4_CaptureISR:
 16305                           	callstack 14
 16306  005A30                     
 16307                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16308  005A30  0139               	movlb	57	; () banked
 16309  005A32  91AA               	bcf	170,0,b	;volatile
 16310                           
 16311                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16312  005A34  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16313                           
 16314                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16315  005A3A  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16316  005A40                     
 16317                           ; BSR set to: 57
 16318                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16319  005A40  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16320  005A44  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16321  005A48  D802               	call	i2u712_48
 16322  005A4A  EF31  F02D         	goto	i2u712_49
 16323  005A4E                     i2u712_48:
 16324  005A4E  0005               	push	
 16325  005A50  6EFA               	movwf	pclath,c
 16326  005A52  0101               	movlb	1	; () banked
 16327  005A54  518E               	movf	_CCP4_CallBack& (0+255),w,b
 16328  005A56  6EFD               	movwf	tosl,c
 16329  005A58  518F               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16330  005A5A  6EFE               	movwf	tosh,c
 16331  005A5C  6AFF               	clrf	tosu,c
 16332  005A5E  50FA               	movf	pclath,w,c
 16333  005A60  0012               	return		;indir
 16334  005A62                     i2u712_49:
 16335  005A62  0011               	retfie		f
 16336  005A64                     __end_of_CCP4_CaptureISR:
 16337                           	callstack 0
 16338                           
 16339 ;; *************** function _CCP4_DefaultCallBack *****************
 16340 ;; Defined at:
 16341 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;		None
 16346 ;; Return value:  Size  Location     Type
 16347 ;;                  1    wreg      void 
 16348 ;; Registers used:
 16349 ;;		wreg, status,2, status,0
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16359 ;;Total ram usage:        2 bytes
 16360 ;; Hardware stack levels used: 1
 16361 ;; This function calls:
 16362 ;;		Nothing
 16363 ;; This function is called by:
 16364 ;;		_CCP4_Initialize
 16365 ;;		_CCP4_CaptureISR
 16366 ;; This function uses a non-reentrant model
 16367 ;;
 16368                           
 16369                           	psect	text94
 16370  005B2A                     __ptext94:
 16371                           	callstack 0
 16372  005B2A                     _CCP4_DefaultCallBack:
 16373                           	callstack 14
 16374  005B2A                     
 16375                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16376  005B2A  ACCD               	btfss	205,6,c	;volatile
 16377  005B2C  EF9A  F02D         	goto	i2u697_41
 16378  005B30  EF9C  F02D         	goto	i2u697_40
 16379  005B34                     i2u697_41:
 16380  005B34  EFA2  F02D         	goto	i2l7122
 16381  005B38                     i2u697_40:
 16382  005B38                     
 16383                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16384  005B38  C005  F0F1         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16385  005B3C  C006  F0F2         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16386                           
 16387                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16388  005B40  EFAC  F02D         	goto	i2l476
 16389  005B44                     i2l7122:
 16390                           
 16391                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16392  005B44  0100               	movlb	0	; () banked
 16393  005B46  51F1               	movf	_distRightM& (0+255),w,b
 16394  005B48  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16395  005B4A  6FF3               	movwf	_distRight& (0+255),b	;volatile
 16396  005B4C  51F2               	movf	(_distRightM+1)& (0+255),w,b
 16397  005B4E  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16398  005B50  6FF4               	movwf	(_distRight+1)& (0+255),b	;volatile
 16399  005B52                     
 16400                           ; BSR set to: 0
 16401                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16402  005B52  90D8               	bcf	status,0,c
 16403  005B54  33F4               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16404  005B56  33F3               	rrcf	_distRight& (0+255),f,b	;volatile
 16405  005B58                     i2l476:
 16406  005B58  0012               	return		;funcret
 16407  005B5A                     __end_of_CCP4_DefaultCallBack:
 16408                           	callstack 0
 16409                           
 16410 ;; *************** function _TMR5_GATE_ISR *****************
 16411 ;; Defined at:
 16412 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16413 ;; Parameters:    Size  Location     Type
 16414 ;;		None
 16415 ;; Auto vars:     Size  Location     Type
 16416 ;;		None
 16417 ;; Return value:  Size  Location     Type
 16418 ;;                  1    wreg      void 
 16419 ;; Registers used:
 16420 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16421 ;; Tracked objects:
 16422 ;;		On entry : 0/0
 16423 ;;		On exit  : 0/0
 16424 ;;		Unchanged: 0/0
 16425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16430 ;;Total ram usage:        0 bytes
 16431 ;; Hardware stack levels used: 1
 16432 ;; Hardware stack levels required when called: 3
 16433 ;; This function calls:
 16434 ;;		Absolute function
 16435 ;;		_TMR5_DefaultGateInterruptHandler
 16436 ;; This function is called by:
 16437 ;;		Interrupt level 2
 16438 ;; This function uses a non-reentrant model
 16439 ;;
 16440                           
 16441                           	psect	text95
 16442  005A98                     __ptext95:
 16443                           	callstack 0
 16444  005A98                     _TMR5_GATE_ISR:
 16445                           	callstack 12
 16446  005A98                     
 16447                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16448  005A98  0139               	movlb	57	; () banked
 16449  005A9A  9FA8               	bcf	168,7,b	;volatile
 16450  005A9C                     
 16451                           ; BSR set to: 57
 16452                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16453  005A9C  0101               	movlb	1	; () banked
 16454  005A9E  518A               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16455  005AA0  118B               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16456  005AA2  B4D8               	btfsc	status,2,c
 16457  005AA4  EF56  F02D         	goto	i2u713_41
 16458  005AA8  EF58  F02D         	goto	i2u713_40
 16459  005AAC                     i2u713_41:
 16460  005AAC  EF64  F02D         	goto	i2l552
 16461  005AB0                     i2u713_40:
 16462  005AB0                     
 16463                           ; BSR set to: 1
 16464                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16465  005AB0  D802               	call	i2u714_48
 16466  005AB2  EF64  F02D         	goto	i2u714_49
 16467  005AB6                     i2u714_48:
 16468  005AB6  0005               	push	
 16469  005AB8  6EFA               	movwf	pclath,c
 16470  005ABA  518A               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16471  005ABC  6EFD               	movwf	tosl,c
 16472  005ABE  518B               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16473  005AC0  6EFE               	movwf	tosh,c
 16474  005AC2  6AFF               	clrf	tosu,c
 16475  005AC4  50FA               	movf	pclath,w,c
 16476  005AC6  0012               	return		;indir
 16477  005AC8                     i2u714_49:
 16478  005AC8                     i2l552:
 16479  005AC8  0011               	retfie		f
 16480  005ACA                     __end_of_TMR5_GATE_ISR:
 16481                           	callstack 0
 16482                           
 16483 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16484 ;; Defined at:
 16485 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16486 ;; Parameters:    Size  Location     Type
 16487 ;;		None
 16488 ;; Auto vars:     Size  Location     Type
 16489 ;;		None
 16490 ;; Return value:  Size  Location     Type
 16491 ;;                  1    wreg      void 
 16492 ;; Registers used:
 16493 ;;		wreg, status,2, status,0, cstack
 16494 ;; Tracked objects:
 16495 ;;		On entry : 0/0
 16496 ;;		On exit  : 0/0
 16497 ;;		Unchanged: 0/0
 16498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16503 ;;Total ram usage:        0 bytes
 16504 ;; Hardware stack levels used: 1
 16505 ;; Hardware stack levels required when called: 2
 16506 ;; This function calls:
 16507 ;;		_TMR5_ReadTimer
 16508 ;;		_TMR5_Reload
 16509 ;; This function is called by:
 16510 ;;		_TMR5_Initialize
 16511 ;;		_TMR5_GATE_ISR
 16512 ;; This function uses a non-reentrant model
 16513 ;;
 16514                           
 16515                           	psect	text96
 16516  005D4C                     __ptext96:
 16517                           	callstack 0
 16518  005D4C                     _TMR5_DefaultGateInterruptHandler:
 16519                           	callstack 12
 16520  005D4C                     
 16521                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16522  005D4C  EC84  F02E         	call	_TMR5_ReadTimer	;wreg free
 16523  005D50  C009  F0FC         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16524  005D54  C00A  F0FD         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16525  005D58                     
 16526                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16527  005D58  0100               	movlb	0	; () banked
 16528  005D5A  90D8               	bcf	status,0,c
 16529  005D5C  33FD               	rrcf	(_distFront+1)& (0+255),f,b	;volatile
 16530  005D5E  33FC               	rrcf	_distFront& (0+255),f,b	;volatile
 16531  005D60                     
 16532                           ; BSR set to: 0
 16533                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16534  005D60  EC07  F02F         	call	_TMR5_Reload	;wreg free
 16535  005D64                     
 16536                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16537  005D64  0139               	movlb	57	; () banked
 16538  005D66  9FA8               	bcf	168,7,b	;volatile
 16539  005D68                     
 16540                           ; BSR set to: 57
 16541  005D68  0012               	return		;funcret
 16542  005D6A                     __end_of_TMR5_DefaultGateInterruptHandler:
 16543                           	callstack 0
 16544                           
 16545 ;; *************** function _TMR5_Reload *****************
 16546 ;; Defined at:
 16547 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16548 ;; Parameters:    Size  Location     Type
 16549 ;;		None
 16550 ;; Auto vars:     Size  Location     Type
 16551 ;;		None
 16552 ;; Return value:  Size  Location     Type
 16553 ;;                  1    wreg      void 
 16554 ;; Registers used:
 16555 ;;		wreg, status,2, cstack
 16556 ;; Tracked objects:
 16557 ;;		On entry : 0/0
 16558 ;;		On exit  : 0/0
 16559 ;;		Unchanged: 0/0
 16560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16565 ;;Total ram usage:        0 bytes
 16566 ;; Hardware stack levels used: 1
 16567 ;; Hardware stack levels required when called: 1
 16568 ;; This function calls:
 16569 ;;		_TMR5_WriteTimer
 16570 ;; This function is called by:
 16571 ;;		_TMR5_DefaultGateInterruptHandler
 16572 ;; This function uses a non-reentrant model
 16573 ;;
 16574                           
 16575                           	psect	text97
 16576  005E0E                     __ptext97:
 16577                           	callstack 0
 16578  005E0E                     _TMR5_Reload:
 16579                           	callstack 12
 16580  005E0E                     
 16581                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16582  005E0E  C18C  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16583  005E12  C18D  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16584  005E16  EC34  F02E         	call	_TMR5_WriteTimer	;wreg free
 16585  005E1A  0012               	return		;funcret
 16586  005E1C                     __end_of_TMR5_Reload:
 16587                           	callstack 0
 16588                           
 16589 ;; *************** function _TMR5_WriteTimer *****************
 16590 ;; Defined at:
 16591 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;  timerVal        2    8[COMRAM] unsigned short 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		wreg, status,2
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16609 ;;Total ram usage:        2 bytes
 16610 ;; Hardware stack levels used: 1
 16611 ;; This function calls:
 16612 ;;		Nothing
 16613 ;; This function is called by:
 16614 ;;		_TMR5_Reload
 16615 ;; This function uses a non-reentrant model
 16616 ;;
 16617                           
 16618                           	psect	text98
 16619  005C68                     __ptext98:
 16620                           	callstack 0
 16621  005C68                     _TMR5_WriteTimer:
 16622                           	callstack 12
 16623  005C68                     
 16624                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16625  005C68  A49A               	btfss	154,2,c	;volatile
 16626  005C6A  EF39  F02E         	goto	i2u633_41
 16627  005C6E  EF3B  F02E         	goto	i2u633_40
 16628  005C72                     i2u633_41:
 16629  005C72  EF44  F02E         	goto	i2l6564
 16630  005C76                     i2u633_40:
 16631  005C76                     
 16632                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16633  005C76  909A               	bcf	154,0,c	;volatile
 16634  005C78                     
 16635                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16636  005C78  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16637  005C7A  6E99               	movwf	153,c	;volatile
 16638  005C7C                     
 16639                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16640  005C7C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16641  005C82                     
 16642                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16643  005C82  809A               	bsf	154,0,c	;volatile
 16644                           
 16645                           ;mcc_generated_files/tmr5.c: 146:     }
 16646  005C84  EF49  F02E         	goto	i2l534
 16647  005C88                     i2l6564:
 16648                           
 16649                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16650  005C88  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16651  005C8A  6E99               	movwf	153,c	;volatile
 16652  005C8C                     
 16653                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16654  005C8C  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16655  005C92                     i2l534:
 16656  005C92  0012               	return		;funcret
 16657  005C94                     __end_of_TMR5_WriteTimer:
 16658                           	callstack 0
 16659                           
 16660 ;; *************** function _TMR5_ReadTimer *****************
 16661 ;; Defined at:
 16662 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;		None
 16665 ;; Auto vars:     Size  Location     Type
 16666 ;;  readVal         2   12[COMRAM] unsigned short 
 16667 ;;  readValLow      1   15[COMRAM] unsigned char 
 16668 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16669 ;; Return value:  Size  Location     Type
 16670 ;;                  2    8[COMRAM] unsigned short 
 16671 ;; Registers used:
 16672 ;;		wreg, status,2
 16673 ;; Tracked objects:
 16674 ;;		On entry : 0/0
 16675 ;;		On exit  : 0/0
 16676 ;;		Unchanged: 0/0
 16677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16679 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16681 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16682 ;;Total ram usage:        8 bytes
 16683 ;; Hardware stack levels used: 1
 16684 ;; This function calls:
 16685 ;;		Nothing
 16686 ;; This function is called by:
 16687 ;;		_TMR5_DefaultGateInterruptHandler
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text99
 16692  005D08                     __ptext99:
 16693                           	callstack 0
 16694  005D08                     _TMR5_ReadTimer:
 16695                           	callstack 13
 16696  005D08                     
 16697                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16698  005D08  829A               	bsf	154,1,c	;volatile
 16699                           
 16700                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16701  005D0A  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16702                           
 16703                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16704  005D10  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16705  005D16                     
 16706                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16707  005D16  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16708  005D18  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16709  005D1A  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16710  005D1C  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16711  005D1E  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16712  005D22                     
 16713                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16714  005D22  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16715  005D26  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16716  005D2A  0012               	return		;funcret
 16717  005D2C                     __end_of_TMR5_ReadTimer:
 16718                           	callstack 0
 16719                           
 16720 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16721 ;; Defined at:
 16722 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16723 ;; Parameters:    Size  Location     Type
 16724 ;;		None
 16725 ;; Auto vars:     Size  Location     Type
 16726 ;;		None
 16727 ;; Return value:  Size  Location     Type
 16728 ;;                  1    wreg      void 
 16729 ;; Registers used:
 16730 ;;		wreg, status,2, status,0
 16731 ;; Tracked objects:
 16732 ;;		On entry : 0/0
 16733 ;;		On exit  : 0/0
 16734 ;;		Unchanged: 0/0
 16735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16740 ;;Total ram usage:        0 bytes
 16741 ;; Hardware stack levels used: 1
 16742 ;; This function calls:
 16743 ;;		Nothing
 16744 ;; This function is called by:
 16745 ;;		Interrupt level 2
 16746 ;; This function uses a non-reentrant model
 16747 ;;
 16748                           
 16749                           	psect	text100
 16750  005640                     __ptext100:
 16751                           	callstack 0
 16752  005640                     _SMT1_PR_ACQ_ISR:
 16753                           	callstack 15
 16754  005640                     
 16755                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16756  005640  0139               	movlb	57	; () banked
 16757  005642  9DA1               	bcf	161,6,b	;volatile
 16758  005644                     
 16759                           ; BSR set to: 57
 16760                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16761  005644  013F               	movlb	63	; () banked
 16762  005646  5115               	movf	21,w,b	;volatile
 16763  005648  6E48               	movwf	_smtPeriod^0,c	;volatile
 16764  00564A  5116               	movf	22,w,b	;volatile
 16765  00564C  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16766  00564E  5117               	movf	23,w,b	;volatile
 16767  005650  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16768  005652  6A4B               	clrf	(_smtPeriod+3)^0,c	;volatile
 16769  005654                     
 16770                           ; BSR set to: 63
 16771                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16772  005654  013C               	movlb	60	; () banked
 16773  005656  AB60               	btfss	96,5,b	;volatile
 16774  005658  EF30  F02B         	goto	i2u716_41
 16775  00565C  EF32  F02B         	goto	i2u716_40
 16776  005660                     i2u716_41:
 16777  005660  EF3B  F02B         	goto	i2l7242
 16778  005664                     i2u716_40:
 16779  005664                     
 16780                           ; BSR set to: 60
 16781  005664  0E01               	movlw	1
 16782  005666  0101               	movlb	1	; () banked
 16783  005668  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16784  00566A  0E00               	movlw	0
 16785  00566C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16786  00566E  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16787  005670  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16788  005672  EF44  F02B         	goto	i2l856
 16789  005676                     i2l7242:
 16790                           
 16791                           ; BSR set to: 60
 16792  005676  0EFF               	movlw	255
 16793  005678  0101               	movlb	1	; () banked
 16794  00567A  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16795  00567C  0EFF               	movlw	255
 16796  00567E  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16797  005680  0EFF               	movlw	255
 16798  005682  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16799  005684  0EFF               	movlw	255
 16800  005686  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16801  005688                     i2l856:
 16802                           
 16803                           ; BSR set to: 1
 16804  005688  0011               	retfie		f
 16805  00568A                     __end_of_SMT1_PR_ACQ_ISR:
 16806                           	callstack 0
 16807                           
 16808 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16809 ;; Defined at:
 16810 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16811 ;; Parameters:    Size  Location     Type
 16812 ;;		None
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;		None
 16815 ;; Return value:  Size  Location     Type
 16816 ;;                  1    wreg      void 
 16817 ;; Registers used:
 16818 ;;		wreg, status,2, status,0
 16819 ;; Tracked objects:
 16820 ;;		On entry : 0/0
 16821 ;;		On exit  : 0/0
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16828 ;;Total ram usage:        0 bytes
 16829 ;; Hardware stack levels used: 1
 16830 ;; This function calls:
 16831 ;;		Nothing
 16832 ;; This function is called by:
 16833 ;;		Interrupt level 2
 16834 ;; This function uses a non-reentrant model
 16835 ;;
 16836                           
 16837                           	psect	text101
 16838  0054C0                     __ptext101:
 16839                           	callstack 0
 16840  0054C0                     _SMT1_PW_ACQ_ISR:
 16841                           	callstack 15
 16842  0054C0                     
 16843                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16844  0054C0  0139               	movlb	57	; () banked
 16845  0054C2  9FA1               	bcf	161,7,b	;volatile
 16846  0054C4                     
 16847                           ; BSR set to: 57
 16848                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16849  0054C4  013F               	movlb	63	; () banked
 16850  0054C6  5118               	movf	24,w,b	;volatile
 16851  0054C8  0101               	movlb	1	; () banked
 16852  0054CA  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16853  0054CC  013F               	movlb	63	; () banked
 16854  0054CE  5119               	movf	25,w,b	;volatile
 16855  0054D0  0101               	movlb	1	; () banked
 16856  0054D2  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16857  0054D4  013F               	movlb	63	; () banked
 16858  0054D6  511A               	movf	26,w,b	;volatile
 16859  0054D8  0101               	movlb	1	; () banked
 16860  0054DA  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16861  0054DC  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16862  0054DE                     
 16863                           ; BSR set to: 1
 16864                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16865  0054DE  013C               	movlb	60	; () banked
 16866  0054E0  AB60               	btfss	96,5,b	;volatile
 16867  0054E2  EF75  F02A         	goto	i2u717_41
 16868  0054E6  EF77  F02A         	goto	i2u717_40
 16869  0054EA                     i2u717_41:
 16870  0054EA  EF80  F02A         	goto	i2l7252
 16871  0054EE                     i2u717_40:
 16872  0054EE                     
 16873                           ; BSR set to: 60
 16874  0054EE  0E01               	movlw	1
 16875  0054F0  0101               	movlb	1	; () banked
 16876  0054F2  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16877  0054F4  0E00               	movlw	0
 16878  0054F6  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16879  0054F8  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16880  0054FA  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16881  0054FC  EF89  F02A         	goto	i2l863
 16882  005500                     i2l7252:
 16883                           
 16884                           ; BSR set to: 60
 16885  005500  0EFF               	movlw	255
 16886  005502  0101               	movlb	1	; () banked
 16887  005504  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16888  005506  0EFF               	movlw	255
 16889  005508  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16890  00550A  0EFF               	movlw	255
 16891  00550C  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16892  00550E  0EFF               	movlw	255
 16893  005510  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16894  005512                     i2l863:
 16895                           
 16896                           ; BSR set to: 1
 16897  005512  0011               	retfie		f
 16898  005514                     __end_of_SMT1_PW_ACQ_ISR:
 16899                           	callstack 0
 16900                           
 16901 ;; *************** function _SMT1_Overflow_ISR *****************
 16902 ;; Defined at:
 16903 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16904 ;; Parameters:    Size  Location     Type
 16905 ;;		None
 16906 ;; Auto vars:     Size  Location     Type
 16907 ;;		None
 16908 ;; Return value:  Size  Location     Type
 16909 ;;                  1    wreg      void 
 16910 ;; Registers used:
 16911 ;;		wreg, status,2
 16912 ;; Tracked objects:
 16913 ;;		On entry : 0/0
 16914 ;;		On exit  : 0/0
 16915 ;;		Unchanged: 0/0
 16916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16921 ;;Total ram usage:        0 bytes
 16922 ;; Hardware stack levels used: 1
 16923 ;; This function calls:
 16924 ;;		Nothing
 16925 ;; This function is called by:
 16926 ;;		Interrupt level 2
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930                           	psect	text102
 16931  005CBC                     __ptext102:
 16932                           	callstack 0
 16933  005CBC                     _SMT1_Overflow_ISR:
 16934                           	callstack 15
 16935  005CBC                     
 16936                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16937  005CBC  0139               	movlb	57	; () banked
 16938  005CBE  9BA1               	bcf	161,5,b	;volatile
 16939  005CC0                     
 16940                           ; BSR set to: 57
 16941                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16942  005CC0  0E00               	movlw	0
 16943  005CC2  6E48               	movwf	_smtPeriod^0,c	;volatile
 16944  005CC4  0E00               	movlw	0
 16945  005CC6  6E49               	movwf	(_smtPeriod+1)^0,c	;volatile
 16946  005CC8  0E00               	movlw	0
 16947  005CCA  6E4A               	movwf	(_smtPeriod+2)^0,c	;volatile
 16948  005CCC  0E00               	movlw	0
 16949  005CCE  6E4B               	movwf	(_smtPeriod+3)^0,c	;volatile
 16950                           
 16951                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16952  005CD0  0E00               	movlw	0
 16953  005CD2  0101               	movlb	1	; () banked
 16954  005CD4  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16955  005CD6  0E00               	movlw	0
 16956  005CD8  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16957  005CDA  0E00               	movlw	0
 16958  005CDC  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16959  005CDE  0E00               	movlw	0
 16960  005CE0  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16961  005CE2                     
 16962                           ; BSR set to: 1
 16963  005CE2  0011               	retfie		f
 16964  005CE4                     __end_of_SMT1_Overflow_ISR:
 16965                           	callstack 0
 16966                           
 16967                           ;
 16968                           ; Interrupt Vector Table @ 0x8
 16969                           ;
 16970                           
 16971                           	psect	ivt0x8
 16972  000008                     __pivt0x8:
 16973                           	callstack 0
 16974  000008                     ivt0x8_base:
 16975                           	callstack 0
 16976                           
 16977                           ; Vector 0 : SWINT
 16978  000008  17A5               	dw	_Default_ISR shr (0+2)
 16979                           
 16980                           ; Vector 1 : HLVD
 16981  00000A  17A5               	dw	_Default_ISR shr (0+2)
 16982                           
 16983                           ; Vector 2 : OSF
 16984  00000C  17A5               	dw	_Default_ISR shr (0+2)
 16985                           
 16986                           ; Vector 3 : CSW
 16987  00000E  17A5               	dw	_Default_ISR shr (0+2)
 16988                           
 16989                           ; Vector 4 : NVM
 16990  000010  17A5               	dw	_Default_ISR shr (0+2)
 16991                           
 16992                           ; Vector 5 : SCAN
 16993  000012  17A5               	dw	_Default_ISR shr (0+2)
 16994                           
 16995                           ; Vector 6 : CRC
 16996  000014  17A5               	dw	_Default_ISR shr (0+2)
 16997                           
 16998                           ; Vector 7 : IOC
 16999  000016  17A5               	dw	_Default_ISR shr (0+2)
 17000                           
 17001                           ; Vector 8 : INT0
 17002  000018  17A5               	dw	_Default_ISR shr (0+2)
 17003                           
 17004                           ; Vector 9 : ZCD
 17005  00001A  17A5               	dw	_Default_ISR shr (0+2)
 17006                           
 17007                           ; Vector 10 : AD
 17008  00001C  17A5               	dw	_Default_ISR shr (0+2)
 17009                           
 17010                           ; Vector 11 : ADT
 17011  00001E  17A5               	dw	_Default_ISR shr (0+2)
 17012                           
 17013                           ; Vector 12 : CMP1
 17014  000020  17A5               	dw	_Default_ISR shr (0+2)
 17015                           
 17016                           ; Vector 13 : SMT1
 17017  000022  172F               	dw	_SMT1_Overflow_ISR shr (0+2)
 17018                           
 17019                           ; Vector 14 : SMT1PRA
 17020  000024  1590               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17021                           
 17022                           ; Vector 15 : SMT1PRW
 17023  000026  1530               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17024                           
 17025                           ; Vector 16 : DMA1SCNT
 17026  000028  17A5               	dw	_Default_ISR shr (0+2)
 17027                           
 17028                           ; Vector 17 : DMA1DCNT
 17029  00002A  17A5               	dw	_Default_ISR shr (0+2)
 17030                           
 17031                           ; Vector 18 : DMA1OR
 17032  00002C  17A5               	dw	_Default_ISR shr (0+2)
 17033                           
 17034                           ; Vector 19 : DMA1A
 17035  00002E  17A5               	dw	_Default_ISR shr (0+2)
 17036                           
 17037                           ; Vector 20 : SPI1RX
 17038  000030  17A5               	dw	_Default_ISR shr (0+2)
 17039                           
 17040                           ; Vector 21 : SPI1TX
 17041  000032  17A5               	dw	_Default_ISR shr (0+2)
 17042                           
 17043                           ; Vector 22 : SPI1
 17044  000034  17A5               	dw	_Default_ISR shr (0+2)
 17045                           
 17046                           ; Vector 23 : I2C1RX
 17047  000036  17A5               	dw	_Default_ISR shr (0+2)
 17048                           
 17049                           ; Vector 24 : I2C1TX
 17050  000038  17A5               	dw	_Default_ISR shr (0+2)
 17051                           
 17052                           ; Vector 25 : I2C1
 17053  00003A  17A5               	dw	_Default_ISR shr (0+2)
 17054                           
 17055                           ; Vector 26 : I2C1E
 17056  00003C  17A5               	dw	_Default_ISR shr (0+2)
 17057                           
 17058                           ; Vector 27 : U1RX
 17059  00003E  1604               	dw	_UART1_rx_vect_isr shr (0+2)
 17060                           
 17061                           ; Vector 28 : U1TX
 17062  000040  15F5               	dw	_UART1_tx_vect_isr shr (0+2)
 17063                           
 17064                           ; Vector 29 : U1E
 17065  000042  17A5               	dw	_Default_ISR shr (0+2)
 17066                           
 17067                           ; Vector 30 : U1
 17068  000044  17A5               	dw	_Default_ISR shr (0+2)
 17069                           
 17070                           ; Vector 31 : TMR0
 17071  000046  17A5               	dw	_Default_ISR shr (0+2)
 17072                           
 17073                           ; Vector 32 : TMR1
 17074  000048  17A5               	dw	_Default_ISR shr (0+2)
 17075                           
 17076                           ; Vector 33 : TMR1G
 17077  00004A  17A5               	dw	_Default_ISR shr (0+2)
 17078                           
 17079                           ; Vector 34 : TMR2
 17080  00004C  17A5               	dw	_Default_ISR shr (0+2)
 17081                           
 17082                           ; Vector 35 : CCP1
 17083  00004E  17A5               	dw	_Default_ISR shr (0+2)
 17084                           
 17085                           ; Vector 36 : Undefined
 17086  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17087                           
 17088                           ; Vector 37 : NCO1
 17089  000052  17A5               	dw	_Default_ISR shr (0+2)
 17090                           
 17091                           ; Vector 38 : CWG1
 17092  000054  17A5               	dw	_Default_ISR shr (0+2)
 17093                           
 17094                           ; Vector 39 : CLC1
 17095  000056  17A5               	dw	_Default_ISR shr (0+2)
 17096                           
 17097                           ; Vector 40 : INT1
 17098  000058  17A5               	dw	_Default_ISR shr (0+2)
 17099                           
 17100                           ; Vector 41 : CMP2
 17101  00005A  17A5               	dw	_Default_ISR shr (0+2)
 17102                           
 17103                           ; Vector 42 : DMA2SCNT
 17104  00005C  17A5               	dw	_Default_ISR shr (0+2)
 17105                           
 17106                           ; Vector 43 : DMA2DCNT
 17107  00005E  17A5               	dw	_Default_ISR shr (0+2)
 17108                           
 17109                           ; Vector 44 : DMA2OR
 17110  000060  17A5               	dw	_Default_ISR shr (0+2)
 17111                           
 17112                           ; Vector 45 : DMA2A
 17113  000062  17A5               	dw	_Default_ISR shr (0+2)
 17114                           
 17115                           ; Vector 46 : I2C2RX
 17116  000064  17A5               	dw	_Default_ISR shr (0+2)
 17117                           
 17118                           ; Vector 47 : I2C2TX
 17119  000066  17A5               	dw	_Default_ISR shr (0+2)
 17120                           
 17121                           ; Vector 48 : I2C2
 17122  000068  17A5               	dw	_Default_ISR shr (0+2)
 17123                           
 17124                           ; Vector 49 : I2C2E
 17125  00006A  17A5               	dw	_Default_ISR shr (0+2)
 17126                           
 17127                           ; Vector 50 : U2RX
 17128  00006C  17A5               	dw	_Default_ISR shr (0+2)
 17129                           
 17130                           ; Vector 51 : U2TX
 17131  00006E  17A5               	dw	_Default_ISR shr (0+2)
 17132                           
 17133                           ; Vector 52 : U2E
 17134  000070  17A5               	dw	_Default_ISR shr (0+2)
 17135                           
 17136                           ; Vector 53 : U2
 17137  000072  17A5               	dw	_Default_ISR shr (0+2)
 17138                           
 17139                           ; Vector 54 : TMR3
 17140  000074  17A5               	dw	_Default_ISR shr (0+2)
 17141                           
 17142                           ; Vector 55 : TMR3G
 17143  000076  17A5               	dw	_Default_ISR shr (0+2)
 17144                           
 17145                           ; Vector 56 : TMR4
 17146  000078  163D               	dw	_TMR4_ISR shr (0+2)
 17147                           
 17148                           ; Vector 57 : CCP2
 17149  00007A  17A5               	dw	_Default_ISR shr (0+2)
 17150                           
 17151                           ; Vector 58 : Undefined
 17152  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17153                           
 17154                           ; Vector 59 : CWG2
 17155  00007E  17A5               	dw	_Default_ISR shr (0+2)
 17156                           
 17157                           ; Vector 60 : CLC2
 17158  000080  17A5               	dw	_Default_ISR shr (0+2)
 17159                           
 17160                           ; Vector 61 : INT2
 17161  000082  17A5               	dw	_Default_ISR shr (0+2)
 17162                           
 17163                           ; Vector 62 : Undefined
 17164  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17165                           
 17166                           ; Vector 63 : Undefined
 17167  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17168                           
 17169                           ; Vector 64 : Undefined
 17170  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17171                           
 17172                           ; Vector 65 : Undefined
 17173  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17174                           
 17175                           ; Vector 66 : Undefined
 17176  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17177                           
 17178                           ; Vector 67 : Undefined
 17179  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17180                           
 17181                           ; Vector 68 : Undefined
 17182  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17183                           
 17184                           ; Vector 69 : Undefined
 17185  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17186                           
 17187                           ; Vector 70 : TMR5
 17188  000094  17A5               	dw	_Default_ISR shr (0+2)
 17189                           
 17190                           ; Vector 71 : TMR5G
 17191  000096  16A6               	dw	_TMR5_GATE_ISR shr (0+2)
 17192                           
 17193                           ; Vector 72 : TMR6
 17194  000098  17A5               	dw	_Default_ISR shr (0+2)
 17195                           
 17196                           ; Vector 73 : CCP3
 17197  00009A  167F               	dw	_CCP3_CaptureISR shr (0+2)
 17198                           
 17199                           ; Vector 74 : CWG3
 17200  00009C  17A5               	dw	_Default_ISR shr (0+2)
 17201                           
 17202                           ; Vector 75 : CLC3
 17203  00009E  17A5               	dw	_Default_ISR shr (0+2)
 17204                           
 17205                           ; Vector 76 : Undefined
 17206  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17207                           
 17208                           ; Vector 77 : Undefined
 17209  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17210                           
 17211                           ; Vector 78 : Undefined
 17212  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17213                           
 17214                           ; Vector 79 : Undefined
 17215  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17216                           
 17217                           ; Vector 80 : CCP4
 17218  0000A8  168C               	dw	_CCP4_CaptureISR shr (0+2)
 17219                           
 17220                           ; Vector 81 : CLC4
 17221  0000AA  17A5               	dw	_Default_ISR shr (0+2)
 17222  0000AC                     ivt0x8_undefint:
 17223                           	callstack 0
 17224  0000AC  00FF               	reset	
 17225                           
 17226                           	psect	text103
 17227  000000                     __ptext103:
 17228                           	callstack 0
 17229  000000                     
 17230                           	psect	rparam
 17231  0000                     
 17232                           	psect	idloc
 17233                           
 17234                           ;Config register IDLOC0 @ 0x200000
 17235                           ;	unspecified, using default values
 17236  200000                     	org	2097152
 17237  200000  0FFF               	dw	4095
 17238                           
 17239                           ;Config register IDLOC1 @ 0x200002
 17240                           ;	unspecified, using default values
 17241  200002                     	org	2097154
 17242  200002  0FFF               	dw	4095
 17243                           
 17244                           ;Config register IDLOC2 @ 0x200004
 17245                           ;	unspecified, using default values
 17246  200004                     	org	2097156
 17247  200004  0FFF               	dw	4095
 17248                           
 17249                           ;Config register IDLOC3 @ 0x200006
 17250                           ;	unspecified, using default values
 17251  200006                     	org	2097158
 17252  200006  0FFF               	dw	4095
 17253                           
 17254                           ;Config register IDLOC4 @ 0x200008
 17255                           ;	unspecified, using default values
 17256  200008                     	org	2097160
 17257  200008  0FFF               	dw	4095
 17258                           
 17259                           ;Config register IDLOC5 @ 0x20000A
 17260                           ;	unspecified, using default values
 17261  20000A                     	org	2097162
 17262  20000A  0FFF               	dw	4095
 17263                           
 17264                           ;Config register IDLOC6 @ 0x20000C
 17265                           ;	unspecified, using default values
 17266  20000C                     	org	2097164
 17267  20000C  0FFF               	dw	4095
 17268                           
 17269                           ;Config register IDLOC7 @ 0x20000E
 17270                           ;	unspecified, using default values
 17271  20000E                     	org	2097166
 17272  20000E  0FFF               	dw	4095
 17273                           
 17274                           	psect	config
 17275                           
 17276                           ;Config register CONFIG1L @ 0x300000
 17277                           ;	External Oscillator Selection
 17278                           ;	FEXTOSC = OFF, Oscillator not enabled
 17279                           ;	Reset Oscillator Selection
 17280                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17281  300000                     	org	3145728
 17282  300000  8C                 	db	140
 17283                           
 17284                           ;Config register CONFIG1H @ 0x300001
 17285                           ;	Clock out Enable bit
 17286                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17287                           ;	PRLOCKED One-Way Set Enable bit
 17288                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17289                           ;	Clock Switch Enable bit
 17290                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17291                           ;	Fail-Safe Clock Monitor Enable bit
 17292                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17293  300001                     	org	3145729
 17294  300001  FF                 	db	255
 17295                           
 17296                           ;Config register CONFIG2L @ 0x300002
 17297                           ;	MCLR Enable bit
 17298                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17299                           ;	Power-up timer selection bits
 17300                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17301                           ;	Multi-vector enable bit
 17302                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17303                           ;	IVTLOCK bit One-way set enable bit
 17304                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17305                           ;	Low Power BOR Enable bit
 17306                           ;	LPBOREN = OFF, ULPBOR disabled
 17307                           ;	Brown-out Reset Enable bits
 17308                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17309  300002                     	org	3145730
 17310  300002  FF                 	db	255
 17311                           
 17312                           ;Config register CONFIG2H @ 0x300003
 17313                           ;	Brown-out Reset Voltage Selection bits
 17314                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17315                           ;	ZCD Disable bit
 17316                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17317                           ;	PPSLOCK bit One-Way Set Enable bit
 17318                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17319                           ;	Stack Full/Underflow Reset Enable bit
 17320                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17321                           ;	Debugger Enable bit
 17322                           ;	DEBUG = OFF, Background debugger disabled
 17323                           ;	Extended Instruction Set Enable bit
 17324                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17325  300003                     	org	3145731
 17326  300003  FF                 	db	255
 17327                           
 17328                           ;Config register CONFIG3L @ 0x300004
 17329                           ;	WDT Period selection bits
 17330                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17331                           ;	WDT operating mode
 17332                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17333  300004                     	org	3145732
 17334  300004  9F                 	db	159
 17335                           
 17336                           ;Config register CONFIG3H @ 0x300005
 17337                           ;	WDT Window Select bits
 17338                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17339                           ;	WDT input clock selector
 17340                           ;	WDTCCS = SC, Software Control
 17341  300005                     	org	3145733
 17342  300005  FF                 	db	255
 17343                           
 17344                           ;Config register CONFIG4L @ 0x300006
 17345                           ;	Boot Block Size selection bits
 17346                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17347                           ;	Boot Block enable bit
 17348                           ;	BBEN = OFF, Boot block disabled
 17349                           ;	Storage Area Flash enable bit
 17350                           ;	SAFEN = OFF, SAF disabled
 17351                           ;	Application Block write protection bit
 17352                           ;	WRTAPP = OFF, Application Block not write protected
 17353  300006                     	org	3145734
 17354  300006  FF                 	db	255
 17355                           
 17356                           ;Config register CONFIG4H @ 0x300007
 17357                           ;	Configuration Register Write Protection bit
 17358                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17359                           ;	Boot Block Write Protection bit
 17360                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17361                           ;	Data EEPROM Write Protection bit
 17362                           ;	WRTD = OFF, Data EEPROM not write-protected
 17363                           ;	SAF Write protection bit
 17364                           ;	WRTSAF = OFF, SAF not Write Protected
 17365                           ;	Low Voltage Programming Enable bit
 17366                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17367  300007                     	org	3145735
 17368  300007  FF                 	db	255
 17369                           
 17370                           ;Config register CONFIG5L @ 0x300008
 17371                           ;	PFM and Data EEPROM Code Protection bit
 17372                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17373  300008                     	org	3145736
 17374  300008  FF                 	db	255
 17375                           
 17376                           ;Config register CONFIG5H @ 0x300009
 17377                           ;	unspecified, using default values
 17378  300009                     	org	3145737
 17379  300009  FF                 	db	255
 17380                           tosu	equ	0x3FFF
 17381                           tosh	equ	0x3FFE
 17382                           tosl	equ	0x3FFD
 17383                           stkptr	equ	0x3FFC
 17384                           pclatu	equ	0x3FFB
 17385                           pclath	equ	0x3FFA
 17386                           pcl	equ	0x3FF9
 17387                           tblptru	equ	0x3FF8
 17388                           tblptrh	equ	0x3FF7
 17389                           tblptrl	equ	0x3FF6
 17390                           tablat	equ	0x3FF5
 17391                           prodh	equ	0x3FF4
 17392                           prodl	equ	0x3FF3
 17393                           indf0	equ	0x3FEF
 17394                           postinc0	equ	0x3FEE
 17395                           postdec0	equ	0x3FED
 17396                           preinc0	equ	0x3FEC
 17397                           plusw0	equ	0x3FEB
 17398                           fsr0h	equ	0x3FEA
 17399                           fsr0l	equ	0x3FE9
 17400                           wreg	equ	0x3FE8
 17401                           indf1	equ	0x3FE7
 17402                           postinc1	equ	0x3FE6
 17403                           postdec1	equ	0x3FE5
 17404                           preinc1	equ	0x3FE4
 17405                           plusw1	equ	0x3FE3
 17406                           fsr1h	equ	0x3FE2
 17407                           fsr1l	equ	0x3FE1
 17408                           bsr	equ	0x3FE0
 17409                           indf2	equ	0x3FDF
 17410                           postinc2	equ	0x3FDE
 17411                           postdec2	equ	0x3FDD
 17412                           preinc2	equ	0x3FDC
 17413                           plusw2	equ	0x3FDB
 17414                           fsr2h	equ	0x3FDA
 17415                           fsr2l	equ	0x3FD9
 17416                           status	equ	0x3FD8

Data Sizes:
    Strings     111
    Constant    0
    Data        1
    BSS         177
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    133     159
    BANK1           256     20     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_18(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_13(CODE[4]), STR_12(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3433_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[12]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[20]), 
		 -> STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _startAccell->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    _setSteering->___awdiv
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _calcSteering->___fltol
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    ___flsub->___fladd
    _checkBatt->___flge
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_getCurve
    _startAccell->_printf
    _getCurve->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  207813
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  206666
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   70309
                                             14 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         6     6      0   11959
                                             35 BANK0      6     6      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0   45105
                                             14 BANK1      6     6      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44944
                                              6 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   44215
                                            131 BANK0      2     2      0
                                              0 BANK1      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43709
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32330
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             44 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2723
                                             19 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0    6892
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    4328
                                             27 COMRAM     9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1526
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9960
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    9389
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4313
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1165
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       ___flmul
       ___fltol
       ___xxtofl
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
               _strcpy
               _tolower
                 _isupper
             _fputc
             _isupper
             _strncmp
             _tolower
     _getReverse
     _printf
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      B0       7       68.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      32        0.0%
DATA                 0      0     19B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 15:42:28 2024

                             _CCP4_Initialize 5B5A                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 002C                                  ___fldiv@bexp 002B  
                                 _startAccell 3FAC                                  ___fldiv@sign 0024  
                                          l72 5DFC                                            l75 5D06  
                                          l69 55F2                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 5462                                           l404 555E  
                                         l308 541A                                           l309 5434  
                                         l318 5E24                                           l520 563C  
                                         l441 5BB4                                           l362 5E42  
                                         l371 5E2E                                           l188 4CCC  
                                         l284 5110                                           l365 5E56  
                                         l359 5E4C                                           l368 5E38  
                                         l712 59FA                                           l449 5E7E  
                                         l482 5B86                                           l723 5D9C  
                                         l555 5E60                                           l644 5C0E  
                                         l740 5992                                           l709 5DB4  
                                         l581 58F0                                           l726 59C6  
                                         l479 5E74                                           l751 5DCC  
                                         l737 5DE4                                           l754 595E  
                                         l923 5D84                                           l695 5E6A  
                                         l795 5AF8                                           l893 5C3A  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 575A  
                                         _pad 4D92                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5D6A  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5E6C  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 5716                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 5A64                                  ___fltol@exp1 0082  
                                        l1042 54BE                                          ?_abs 0026  
                                        l2012 27CA                                          l2021 2A5C  
                                        l2022 2A4A                                          l1054 5A74  
                                        l1311 4816                                          l2016 2B52  
                                        l2120 4E52                                          l1312 4828  
                                        l1240 450E                                          l1224 43F6  
                                        l1057 5A94                                          l2210 18CE  
                                        l2019 29E4                                          l2115 4DD6  
                                        l2060 3BBA                                          l1252 5E0C  
                                        l1324 3588                                          l2029 2B14  
                                        l2053 3B22                                          l2118 4E18  
                                        l2126 2F8E                                          l1319 34F6  
                                        l4000 5540                                          l2056 3C7E  
                                        l1360 3ACA                                          l1512 3FAA  
                                        l2312 51A6                                          l2320 5714  
                                        l2128 2F96                                          l1249 523A  
                                        l1257 52CC                                          l4010 5554  
                                        l4002 554A                                          l2146 31D2  
                                        l2067 3C16                                          l1339 36AA  
                             _timer3ReloadVal 0188                                          l4012 5556  
                                        l4004 554E                                          l4020 5CE4  
                                        l2332 57D2                                          l2164 1D1E  
                                        l2076 5CBA                                          l1525 428C  
                                        l1277 346A                                          l1269 4128  
                                        l4014 5558                                          l4006 5550  
                                        l4030 4C7C                                          l4022 4C04  
                                        l1382 3C8C                                          l2326 53A6  
                                        l2182 1490                                          l2262 5334  
                                        l2351 5406                                          l2263 533C  
                                        l4104 5C10                                          l4016 555A  
                                        l4008 5552                                          l4040 4C8A  
                                        l4032 4C7E                                          l4024 4C24  
                                        l1384 3CB0                                          l2336 4B20  
                                        l2256 213A                                          l2248 2240  
                                        l1369 43D8                                          l1385 3CC4  
                                        l2281 5798                                          l2273 4A2C  
                                        l1297 347A                                          l4018 555C  
                                        l4042 4C8C                                          l4034 4C80  
                                        l4026 4C26                                          l4114 5DCE  
                                        l4130 5D9E                                          l1378 4C02  
                                        l1386 3CEC                                          l1642 4FC2  
                                        l2290 3804                                          l2346 53FE  
                                        l1395 3E22                                          l4044 4C8E  
                                        l4036 4C82                                          l4028 4C2E  
                                        l1629 4D90                                          l1477 461A  
                                        l4046 5DE6                                          l4038 4C88  
                                        l4070 5ACA                                          l2278 5790  
                                        l1663 48E8                                          l2287 38C0  
                                        l4080 5AF2                                          l4072 5AE8  
                                        l1672 58B8                                          l1657 506C  
                                        l2297 5880                                          l4058 5464  
                                        l4082 5AF4                                          l4074 5AEA  
                                        l4090 5D7C                                          l4092 5DB6  
                                        l4084 5D86                                          l4076 5AEC  
                                        l1668 492E                                          l4078 5AF0  
                                        l4086 5D6A                                          l1926 2432  
                                        l1695 4722                                          l1943 254C  
                                        l1935 2702                                          l1927 2420  
                                        l4088 5D76                                          l1952 261C  
                                        l1928 23E6                                          l1953 260A  
                                        l1980 2EEC                                          l1982 2D4C  
                                        ?_pad 0026                                          l1991 2D92  
                                        l7040 55C6                                          l8000 4CD2  
                                        l1968 56D0                                          l1993 2E0A  
                                        l1985 2D10                                          l7050 55DE  
                                        l7042 55CA                                          l7034 55AA  
                                        l8010 4D02                                          l8002 4CE0  
                                        l1994 2DF8                                          l7052 55E6  
                                        l7044 55CE                                          l7036 55BA  
                                        l8020 4D30                                          l8012 4D06  
                                        l8004 4CE8                                          l8100 4898  
                                        l7054 55EA                                          l7046 55D2  
                                        l7038 55BE                                          l8030 4D64  
                                        l8022 4D3E                                          l8014 4D0E  
                                        l8006 4CEC                                          l6430 4510  
                                        l8110 4926                                          l8102 48A8  
                                        l7048 55DA                                          l8032 4D6A  
                                        l8024 4D44                                          l8016 4D20  
                                        l8008 4CFA                                          l6440 4544  
                                        l6432 4514                                          l8112 492C  
                                        l8104 48B6                                          l7400 545E  
                                        l8120 58A8                                          l8200 49B6  
                                        l9000 330C                                          l6530 5E26  
                                        l8026 4D5A                                          l8018 4D28  
                                        l8034 4D70                                          l8130 4648  
                                        l6450 4586                                          l6442 4554  
                                        l6434 4522                                          l8106 48C8  
                                        l7402 5460                                          l7410 5136  
                                        l8050 4F32                                          l8042 4F14  
                                        l8202 49C2                                          l9010 3374  
                                        l9002 3322                                          l6700 58D2  
                                        l6532 5E44                                          l8036 4D80  
                                        l8028 4D62                                          l8140 4696  
                                        l8132 4672                                          l8124 461C  
                                        l6460 45D8                                          l6452 4592  
                                        l6444 4558                                          l6436 4532  
                                        l7500 2388                                          l7420 2242  
                                        l8108 48D6                                          l6380 5A6C  
                                        l7404 5E1E                                          l7412 5140  
                                        l8300 313E                                          l8060 4F6A  
                                        l8052 4F40                                          l8044 4F18  
                                        l8116 5882                                          l8212 4A24  
                                        l8220 53A8                                          l9020 33BA  
                                        l9012 3386                                          l9004 3334  
                                        l6550 5E6C                                          l3990 5514  
                                        l6702 58EC                                          l6710 5626  
                                        l6534 5E3A                                          l8038 4D88  
                                        l8150 46C2                                          l8134 4674  
                                        l8126 4634                                          l6470 460A  
                                        l6462 45DA                                          l6454 45A0  
                                        l6446 4568                                          l6438 4536  
                                        l9110 42BC                                          l9102 428E  
                                        l7510 2400                                          l7502 23B2  
                                        l7430 2280                                          l7422 2250  
                                        l6382 5A70                                          l7414 515E  
                                        l7406 5112                                          l8310 3184  
                                        l8302 314C                                          l8062 4F78  
                                        l8070 4FA2                                          l8054 4F48  
                                        l8046 4F26                                          l8118 5898  
                                        l8206 49CE                                          l8230 36AC  
                                        l9030 33FC                                          l9022 33C0  
                                        l9014 3394                                          l9006 334A  
                                        l3992 5516                                          l6552 5E58  
                                        l6712 562A                                          l6704 55F4  
                                        l6536 5E4E                                          l6528 5E30  
                                        l6720 5072                                          l8160 46F2  
                                        l8136 4684                                          l6464 45E4  
                                        l6456 45AA                                          l6448 457E  
                                        l9120 436C                                          l9112 4338  
                                        l9104 429A                                          l7600 2692  
                                        l7520 2440                                          l7512 2404  
                                        l7504 23CE                                          l7440 22B0  
                                        l7432 2290                                          l7424 225E  
                                        l6384 5A72                                          l7416 5194  
                                        l7408 5124                                          l8312 3190  
                                        l8304 315E                                          l8072 4FB2  
                                        l8064 4F8E                                          l8056 4F5A  
                                        l8048 4F2E                                          l8080 4FF2  
                                        l8208 49E0                                          l8232 36CC  
                                        l8216 533E                                          l8224 53DE  
                                        l8400 13EE                                          l8320 1072  
                                        l9024 33C4                                          l9016 33A2  
                                        l9008 3360                                          l3994 551E  
                                        l6714 562C                                          l6706 5608  
                                        l6730 509C                                          l6722 507E  
                                        l8162 4702                                          l8146 46AE  
                                        l8138 4688                                          l6458 45C8  
                                        l6466 45EA                                          l9130 43C4  
                                        l9122 4378                                          l9114 434C  
                                        l9106 42A8                                          l7610 26DA  
                                        l7602 26A2                                          l7530 2482  
                                        l7522 2450                                          l7514 2412  
                                        l7506 23DE                                          l7450 22DA  
                                        l7442 22C2                                          l7434 2292  
                                        l7426 2260                                          l9050 38D0  
                                        l6386 5A82                                          l6378 5A66  
                                        l8170 4DA0                                          l8314 3198  
                                        l8306 316C                                          l8074 4FBA  
                                        l8066 4F96                                          l8058 4F62  
                                        l8090 506A                                          l8082 5002  
                                        l8250 3878                                          l8242 37B8  
                                        l8234 3724                                          l8218 534E  
                                        l8226 53F0                                          l8410 1450  
                                        l8402 13F6                                          l8330 10C6  
                                        l8322 107C                                          l9034 340E  
                                        l9018 33B0                                          l9026 33CC  
                                        l9042 342C                                          l6548 5E76  
                                        l3996 5528                                          l6716 5638  
                                        l6708 560C                                          l6740 50B0  
                                        l6732 50A0                                          l6724 508E  
                                        l8164 4712                                          l8156 46D6  
                                        l8148 46B8                                          l6468 45FA  
                                        l6660 5206                                          l6652 51A8  
                                        l9132 43D0                                          l9124 4394  
                                        l9116 4354                                          l9108 42BC  
                                        l7612 26DC                                          l7604 26C2  
                                        l7540 24B0                                          l7532 2490  
                                        l7516 2414                                          l7508 23F4  
                                        l7452 22EA                                          l7460 2314  
                                        l7444 22C4                                          l7428 2270  
                                        l7436 229A                                          l9060 3924  
                                        l9052 38E6                                          l7700 418E  
                                        l8180 4DF6                                          l8172 4DB4  
                                        l8308 3172                                          l8316 31AA  
                                        l8260 2F0E                                          l8068 4F9C  
                                        l8084 5030                                          l8252 38A0  
                                        l8244 37F4                                          l8236 3738  
                                        l8500 18C6                                          l8412 1462  
                                        l8404 142A                                          l8340 110A  
                                        l8332 10D0                                          l8324 108C  
                                        l9036 3420                                          l9028 33DE  
                                        l9140 441A                                          l6670 5BA4  
                                        l3998 553E                                          l6750 50C4  
                                        l6742 50B4                                          l6734 50A4  
                                        l6726 5094                                          l6718 506E  
                                        l8158 46E2                                          l6662 5232  
                                        l6654 51B0                                          l9126 43A0  
                                        l9118 4368                                          l7614 26E2  
                                        l7606 26C6                                          l7550 251C  
                                        l7542 24BA                                          l7534 249C  
                                        l7526 2464                                          l7518 241E  
                                        l7470 234C                                          l7462 2324  
                                        l7454 22FA                                          l7446 22CA  
                                        l7438 22AA                                          l9070 3962  
                                        l9062 3930                                          l9054 38EA  
                                        l8094 482A                                          l7710 4204  
                                        l7702 41AC                                          l8190 575A  
                                        l7390 542A                                          l7622 56D2  
                                        l7630 579A                                          l8182 4DFA  
                                        l8174 4DC2                                          l8270 2F82  
                                        l8262 2F38                                          l8086 5040  
                                        l8078 4FC4                                          l8254 38B0  
                                        l8238 3746                                          l8246 3828  
                                        l8510 1982                                          l8502 18EA  
                                        l8430 1512                                          l8414 146A  
                                        l8406 143A                                          l8342 1116  
                                        l8350 112C                                          l8334 10D8  
                                        l8326 109A                                          l9310 366C  
                                        l9150 4474                                          l9142 441E  
                                        l9134 43DA                                          l6672 5BAE  
                                        l6568 5E62                                          l6680 5BFC  
                                        l6760 510C                                          l6752 50C8  
                                        l6744 50B8                                          l6736 50A8  
                                        l6728 5098                                          l6656 51C6  
                                        l9128 43BC                                          l7616 26F0  
                                        l7608 26D4                                          l7552 252C  
                                        l7536 24A0                                          l7528 2474  
                                        l7544 24C0                                          l7480 2360  
                                        l7472 2350                                          l7464 2336  
                                        l7456 230A                                          l7448 22D8  
                                        l9080 3A22                                          l9072 3978  
                                        l9056 3906                                          l9064 393C  
                                        l9048 38C2                                          l8096 485A  
                                        l6592 5DFE                                          l7720 426C  
                                        l7712 4224                                          l7704 41B4  
                                        l8192 5774                                          l7392 5436  
                                        l7624 56DE                                          l7632 57A6  
                                        l8184 4E26                                          l8176 4DCE  
                                        l8168 4D92                                          l8280 2FCC  
                                        l8272 2F9E                                          l8264 2F58  
                                        l7800 2D1A                                          l8088 5064  
                                        l8248 3864                                          l7640 584A  
                                        l8600 1C46                                          l8520 19CA  
                                        l8512 1990                                          l8504 194E  
                                        l8440 154A                                          l8432 151A  
                                        l8424 14AE                                          l8416 1484  
                                        l8408 143E                                          l8360 11B6  
                                        l8352 1152                                          l8344 111E  
                                        l8336 10EA                                          l8328 10A2  
                                        l9312 3444                                          l6920 476A  
                                        l6912 4724                                          l9160 449E  
                                        l9152 447C                                          l9144 4466  
                                        l9136 4404                                          l6674 5BB2  
                                        l6666 5B88                                          l6690 5B76  
                                        l6682 5BFE                                          l6754 50CC  
                                        l6746 50BC                                          l6738 50AC  
                                        l6658 51D6                                          l7618 26F2  
                                        l7570 25AE                                          l7562 2586  
                                        l7546 24E6                                          l7554 253C  
                                        l7538 24AE                                          l7490 2374  
                                        l7482 2364                                          l7474 2354  
                                        l7466 2344                                          l7458 230C  
                                        l9090 3A96                                          l9074 3A0A  
                                        l9066 3948                                          l9058 390E  
                                        l8098 486A                                          l9314 3D3C  
                                        l7650 3E56                                          l7714 4236  
                                        l7706 41C8                                          l7394 5448  
                                        l7386 540A                                          l7626 56F0  
                                        l7634 57AA                                          l8186 4E3A  
                                        l8178 4DE2                                          l8290 306C  
                                        l8282 2FD6                                          l8274 2FB0  
                                        l8266 2F66                                          l8258 2EEE  
                                        l7810 2D72                                          l7802 2D38  
                                        l7730 2B70                                          l8194 4930  
                                        l8602 1C4E                                          l8530 19F4  
                                        l8522 19CE                                          l8506 195C  
                                        l8514 1998                                          l8450 1594  
                                        l8442 1558                                          l8426 14C0  
                                        l8434 151E                                          l8418 149C  
                                        l8370 1226                                          l8362 11CE  
                                        l8346 1122                                          l8338 10F8  
                                        l6930 47B6                                          l6922 4774  
                                        l6914 473C                                          l9170 44F6  
                                        l9162 44AC                                          l9154 4484  
                                        l9146 446A                                          l9138 4416  
                                        l6668 5B98                                          l6692 5B80  
                                        l6684 5C0A                                          l6676 5BE4  
                                        l6756 50D8                                          l6748 50C0  
                                        l7572 25B6                                          l7564 2590  
                                        l7556 2562                                          l7548 251A  
                                        l7580 25DA                                          l7492 2378  
                                        l7484 2368                                          l7476 2358  
                                        l7468 2348                                          l9092 3A9E  
                                        l9316 3A42                                          l9076 3A16  
                                        l9068 395E                                          l7660 3E98  
                                        l7652 3E5A                                          l7644 3E24  
                                        l7708 41D6                                          l7716 423C  
                                        l7396 544A                                          l7388 540A  
                                        l7628 56F4                                          l7636 57C6  
                                        l8284 2FDC                                          l8292 30D0  
                                        l8276 2FBE                                          l8268 2F68  
                                        l7820 2DB0                                          l7812 2D78  
                                        l7804 2D3A                                          l7732 2B80  
                                        l7740 2BAA                                          l7724 2B54  
                                        l8196 4950                                          l8620 1CD8  
                                        l8612 1CA0                                          l8604 1C60  
                                        l8540 1A28                                          l8532 19FA  
                                        l8524 19D4                                          l8516 19AC  
                                        l8508 1970                                          l8460 15DA  
                                        l8452 15A6                                          l8444 155C  
                                        l8436 1526                                          l8428 14DC  
                                        l8380 12A2                                          l8364 11D8  
                                        l8356 1188                                          l8348 1126  
                                        l8700 20AE                                          l6940 4810  
                                        l6932 47CC                                          l6924 478C  
                                        l6916 4746                                          l9308 355A  
                                        l9172 44FA                                          l9164 44BC  
                                        l9156 4488                                          l9148 4470  
                                        l9180 5D2C                                          l6694 5B84  
                                        l6686 5B5A                                          l6678 5BF8  
                                        l6758 50E4                                          l7910 283E  
                                        l7902 27FE                                          l7590 262C  
                                        l7582 25DE                                          l7574 25BA  
                                        l7566 259E                                          l7558 2572  
                                        l7494 237C                                          l7486 236C  
                                        l7478 235C                                          l9094 3ABA  
                                        l9086 3A2E                                          l7670 3EF2  
                                        l7662 3EB6                                          l7654 3E68  
                                        l7646 3E28                                          l7718 424C  
                                        l7398 545A                                          l8294 30EC  
                                        l8286 305E                                          l8278 2FC4  
                                        l7830 2E1A                                          l7822 2DB4  
                                        l7814 2D82                                          l7806 2D4A  
                                        l7750 2BD6                                          l7742 2BBA  
                                        l7734 2B90                                          l7726 2B60  
                                        l8198 498E                                          l8622 1CDE  
                                        l8614 1CB2                                          l8606 1C66  
                                        l8526 19E0                                          l8518 19BA  
                                        l8534 1A00                                          l8542 1A2E  
                                        l8550 1AC6                                          l8470 16EE  
                                        l8462 163E                                          l8446 156E  
                                        l8454 15AE                                          l8438 1538  
                                        l8382 12AC                                          l8374 125C  
                                        l8358 119A                                          l8630 4A58  
                                        l8710 21A8                                          l8702 20F6  
                                        l6942 4810                                          l6934 47D4  
                                        l6926 4790                                          l6918 4758  
                                        l9174 44FE                                          l9166 44D0  
                                        l9158 449A                                          l9182 5D30  
                                        l6688 5B6A                                          l6696 58BA  
                                        l7920 2890                                          l7912 285A  
                                        l7904 280E                                          l8800 3BEC  
                                        l7592 2638                                          l7584 25EC  
                                        l7576 25CA                                          l7568 25A0  
                                        l7496 2380                                          l7488 2370  
                                        l9096 3AC2                                          l9088 3A78  
                                        l7672 3F20                                          l7664 3EBE  
                                        l7680 3F5A                                          l7656 3E88  
                                        l7648 3E36                                          l8296 310A  
                                        l8288 3066                                          l7840 2E7C  
                                        l7832 2E26                                          l7824 2DC2  
                                        l7816 2D90                                          l7808 2D5C  
                                        l7752 2BE6                                          l7760 2C10  
                                        l7744 2BC0                                          l7736 2BA0  
                                        l7728 2B6E                                          l8616 1CBE  
                                        l8608 1C6C                                          l8624 1CFA  
                                        l8560 1B30                                          l8552 1AE4  
                                        l8544 1A86                                          l8536 1A12  
                                        l8528 19F0                                          l8480 17AC  
                                        l8472 1722                                          l8464 1696  
                                        l8456 15B6                                          l8448 157C  
                                        l8392 1324                                          l8376 126E  
                                        l8368 1200                                          l8640 4AB0  
                                        l8720 21EE                                          l8712 21BA  
                                        l8704 214E                                          l6928 47A4  
                                        l6936 47D8                                          l9176 4502  
                                        l9168 44E4                                          l9184 5D32  
                                        l6698 58CE                                          l7930 28EE  
                                        l7922 28A0                                          l7914 2866  
                                        l7906 2818                                          l8810 3C2A  
                                        l8802 3BF8                                          l7594 2646  
                                        l7586 2602                                          l7578 25CC  
                                        l7498 2384                                          l8650 592C  
                                        l7682 3F6A                                          l7674 3F40  
                                        l7666 3ED2                                          l7658 3E8C  
                                        l7690 412E                                          l8298 3124  
                                        l7850 2EDA                                          l7842 2E92  
                                        l7834 2E34                                          l7826 2DF0  
                                        l7818 2DA2                                          l7770 2C52  
                                        l7762 2C20                                          l7754 2BF6  
                                        l7746 2BC6                                          l7738 2BA2  
                                        l8618 1CC6                                          l8570 1B6E  
                                        l8562 1B34                                          l8554 1B00  
                                        l8546 1ABA                                          l8538 1A24  
                                        l8490 1880                                          l8482 17BC  
                                        l8474 1756                                          l8466 16CA  
                                        l8458 15C6                                          l8394 1358  
                                        l8378 128A                                          l8386 12D4  
                                        l8642 4AC2                                          l8634 4A64  
                                        l8714 21CE                                          l6938 47EE  
                                        l9178 4506                                          l9186 5D40  
                                        l7940 299E                                          l7932 290E  
                                        l7924 28B0                                          l7916 2872  
                                        l7908 2832                                          l8812 3C4E  
                                        l8804 3C06                                          l8732 59C8  
                                        l7596 2680                                          l8740 3CF4  
                                        l7684 3F8A                                          l7676 3F42  
                                        l7668 3EE0                                          l7692 413C  
                                        l7852 2EE0                                          l7844 2EAC  
                                        l7836 2E5E                                          l7764 2C36  
                                        l7756 2C06                                          l7748 2BD4  
                                        l8580 1BA0                                          l8572 1B76  
                                        l8564 1B44                                          l8556 1B12  
                                        l8548 1AC2                                          l8492 1894  
                                        l8484 17F0                                          l8476 176A  
                                        l8468 16D0                                          l8396 135E  
                                        l8388 12EE                                          l8644 4AF4  
                                        l8636 4A72                                          l8628 4A2E  
                                        l8708 217A                                          l8660 1D74  
                                        l8724 21FC                                          l8652 1D20  
                                        l7950 29F4                                          l7942 29AC  
                                        l7934 291E                                          l7926 28C0  
                                        l7918 2880                                          l7870 2732  
                                        l7862 2704                                          l8814 3C5E  
                                        l8806 3C24                                          l8734 5994  
                                        l8830 4B22                                          l7598 2682  
                                        l8742 3D00                                          l8750 3D28  
                                        l7678 3F54                                          l7694 415C  
                                        l7854 2EE2                                          l7846 2EC8  
                                        l7838 2E62                                          l7790 2CD4  
                                        l7782 2C8A                                          l7766 2C46  
                                        l7774 2C66                                          l7758 2C08  
                                        l8582 1BA6                                          l8590 1BF6  
                                        l8574 1B84                                          l8566 1B56  
                                        l8558 1B20                                          l8486 1848  
                                        l8494 1898                                          l8478 179C  
                                        l8398 13BA                                          l8638 4A8E  
                                        l8726 222A                                          l8718 21DC  
                                        l8670 1E40                                          l8662 1DA0  
                                        l8654 1D4E                                          l8822 52CE  
                                        l8910 3FAC                                          l7952 2A02  
                                        l7944 29CA                                          l7936 293E  
                                        l7928 28DE                                          l7880 276E  
                                        l7872 2742                                          l7864 2712  
                                        l8816 3C6C                                          l8808 3C26  
                                        l8832 4B3E                                          l8840 4B7E  
                                        l8648 5960                                          l8760 3DB6  
                                        l8744 3D08                                          l8752 3D6A  
                                        l8736 3C80                                          l7696 4160  
                                        l7688 412A                                          l7848 2ECC  
                                        l7792 2CDC                                          l7784 2CA4  
                                        l7776 2C76                                          l7768 2C4E  
                                        l8592 1C08                                          l8584 1BCC  
                                        l8576 1B8C                                          l8568 1B5E  
                                        l8496 18A8                                          l8488 184C  
                                        l8680 1F30                                          l8672 1E6E  
                                        l8664 1DB0                                          l8656 1D60  
                                        l8824 52D6                                          l8920 4048  
                                        l8912 3FBC                                          l7962 2A6C  
                                        l7970 2AB4                                          l7954 2A06  
                                        l7946 29D4                                          l7938 2968  
                                        l7890 27A4                                          l7882 2774  
                                        l7874 2752                                          l7866 2720  
                                        l8818 3C6E                                          l8842 4B9A  
                                        l8850 4BEA                                          l8834 4B5A  
                                        l8770 3E12                                          l8762 3DD2  
                                        l8754 3D86                                          l8746 3D14  
                                        l8738 3CCC                                          l7698 416E  
                                        l7794 2CEC                                          l7786 2CB4  
                                        l7778 2C76                                          l8594 1C22  
                                        l8586 1BE8                                          l8578 1B94  
                                        l8498 18BA                                          l8682 1F42  
                                        l8674 1E9C                                          l8666 1DF0  
                                        l8658 1D70                                          l8826 52E4  
                                        l8930 4090                                          l8922 4064  
                                        l8914 3FC2                                          l7980 2B28  
                                        l7972 2ACE                                          l7964 2A78  
                                        l7956 2A14                                          l7948 29E2  
                                        l7892 27B4                                          l7884 2782  
                                        l7876 2758                                          l7868 2722  
                                        l8780 3AEC                                          l8844 4BB6  
                                        l8836 4B62                                          l8764 3DDE  
                                        l8756 3D92                                          l7796 2D00  
                                        l7788 2CC4                                          l8596 1C28  
                                        l8588 1BF0                                          l8684 1F64  
                                        l8692 1FE6                                          l8676 1EF8  
                                        l8668 1E00                                          l8828 5312  
                                        l8852 5C94                                          l8860 34F6  
                                        l8940 4100                                          l8924 4070  
                                        l8932 40A0                                          l8916 3FF2  
                                        l7982 2B36                                          l7974 2AE2  
                                        l7966 2A86                                          l7958 2A42  
                                        l7894 27BA                                          l7886 2784  
                                        l7878 2768                                          l8790 3B64  
                                        l8782 3B32                                          l8846 4BBE  
                                        l8838 4B6E                                          l8766 3DFA  
                                        l8758 3DAE                                          l8950 523C  
                                        l7798 2D0E                                          l8598 1C3A  
                                        l8694 2014                                          l8686 1F76  
                                        l8854 5C9E                                          l8862 3512  
                                        l8870 3546                                          l8942 410A  
                                        l8934 40D6                                          l8926 4086  
                                        l8918 4014                                          l7984 2B38  
                                        l7976 2AFC                                          l7968 2AB0  
                                        l7896 27DA                                          l7888 2794  
                                        l8792 3B70                                          l8784 3B48  
                                        l8776 3ACE                                          l8848 4BCA  
                                        l8768 3E02                                          l8960 52AC  
                                        l8952 5242                                          l7992 568A  
                                        l8688 1FBA                                          l8880 35F8  
                                        l8872 358C                                          l8864 351E  
                                        l8944 410E                                          l8936 40DE  
                                        l8928 408A                                          l7978 2B18  
                                        l7986 2B3E                                          l7898 27EA  
                                        l8794 3BA2                                          l8778 3ADE  
                                        l8962 52B4                                          l8954 5258  
                                        l7994 569C                                          l8698 209C  
                                        l8890 3644                                          l8882 360C  
                                        l8874 35A0                                          l8866 353A  
                                        l8858 347C                                          l8946 4120  
                                        l8938 40EA                                          l7988 2B42  
                                        l8796 3BA4                                          l8788 3B5C  
                                        l8964 52C4                                          l8956 5260  
                                        l8980 3250                                          l8972 31D4  
                                        l8884 361E                                          l8876 35B4  
                                        l8948 4124                                          l7998 4CCE  
                                        l8798 3BB0                                          l8958 5264  
                                        l8990 32C2                                          l8982 3260  
                                        l8974 3200                                          l8878 35E4  
                                        STR_1 103C                                          l8968 52CA  
                                        l8992 32D4                                          l8984 327E  
                                        l8976 321C                                          l8888 3632  
                                        l8896 3658                                          STR_2 1053  
                                        STR_3 1023                                          l8994 32E0  
                                        l8986 329A                                          l8978 3238  
                                        STR_4 1001                                          STR_5 1015  
                                        l8996 32E8                                          l8988 32B2  
                                        STR_6 1048                                          STR_7 1030  
                                        l8998 32FA                                          STR_8 105D  
                                        STR_9 1065                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                                        _LATD 003FBD                                          _LATE 003FBE  
                                        _T2PR 003FAB                                          _T4PR 003F9F  
                                        u6100 5A82                                          u6101 5A7E  
                                        u6200 45FA                                          u6201 45F6  
                                        _PMD0 0039C0                                          u2845 5548  
                                        _PMD1 0039C1                                          u2846 554A  
                                        u6150 4522                                          _PMD2 0039C2  
                                        u6151 451E                                          _PMD3 0039C3  
                                        u6160 4544                                          u7200 545A  
                                        u8000 2E34                                          _PMD4 0039C4  
                                        u6161 4540                                          u7201 5456  
                                        u8001 2E30                                          _PMD5 0039C5  
                                        u6170 457E                                          u7210 5124  
                                        u8010 2E7C                                          _PMD6 0039C6  
                                        u6171 457A                                          u7211 5120  
                                        u8011 2E78                                          _PMD7 0039C7  
                                        u8100 27DA                                          u6180 45A0  
                                        u6420 51C6                                          u7300 22EA  
                                        u7220 5136                                          u8020 2EAC  
                                        u8101 27D6                                          u6181 459C  
                                        u6421 51C2                                          u7301 22E6  
                                        u7221 5132                                          u8021 2EA8  
                                        u8110 27EA                                          u6190 45C8  
                                        u6430 51D6                                          u7310 22FA  
                                        u7230 515E                                          u8030 2EDA  
                                        u8111 27E6                                          u6191 45C4  
                                        u6431 51D2                                          u7311 22F6  
                                        u7231 515A                                          u8031 2ED6  
                                        u8200 2ACE                                          u8120 2988  
                                        u8040 2720                                          u7400 2440  
                                        u7320 2336                                          u7240 5194  
                                        u9000 119A                                          u8201 2ACA  
                                        u8041 271C                                          u7401 243C  
                                        u7321 2332                                          u7241 5190  
                                        u9001 1196                                          u8210 2AFC  
                                        u8130 29E2                                          u8050 2732  
                                        u7410 2450                                          u7330 2344  
                                        u7250 225E                                          u9010 1226  
                                        u8211 2AF8                                          u8131 29DE  
                                        u8051 272E                                          u7411 244C  
                                        u7331 2340                                          u7251 225A  
                                        u9011 1222                                          u8220 2B36  
                                        u8140 2A02                                          u8060 2742  
                                        u7500 25AE                                          u7420 2482  
                                        u7340 23B2                                          u7260 2270  
                                        u7180 541A                                          u8300 4F40  
                                        u9100 1484                                          u9020 1256  
                                        u6700 47A4                                          u8221 2B32  
                                        u8141 29FE                                          u8125 297E  
                                        u8061 273E                                          u7501 25AA  
                                        u7421 247E                                          u7341 23AE  
                                        u7261 226C                                          u7181 5416  
                                        u8301 4F3C                                          u9101 1480  
                                        u9021 1250                                          u6701 47A0  
                                        u8230 4CE0                                          u8150 2A14  
                                        u8070 2782                                          u7510 25CA  
                                        u7430 2490                                          u7350 23CA  
                                        u7270 2280                                          u7190 542A  
                                        u8310 4F5A                                          u9110 14AA  
                                        u9030 1258                                          u6710 47B6  
                                        u8231 4CDC                                          u8151 2A10  
                                        u8071 277E                                          u7511 25C6  
                                        u7431 248C                                          u7351 23C4  
                                        u7271 227C                                          u7191 5426  
                                        u8311 4F56                                          u9111 14A6  
                                        u6711 47B2                                          u8240 4CFA  
                                        u8160 2A42                                          u8080 2794  
                                        u7600 26A2                                          u7520 25DA  
                                        u7440 24AE                                          u7360 23CC  
                                        u7280 22C2                                          u8400 48B6  
                                        u8320 4F78                                          u9200 15A6  
                                        u9120 14C0                                          u9040 126E  
                                        u6720 47CC                                          u8241 4CF6  
                                        u8161 2A3E                                          u8081 2790  
                                        u7601 269E                                          u7521 25D6  
                                        u7441 24AA                                          u7281 22BE  
                                        u8401 48B2                                          u8321 4F74  
                                        u9201 15A2                                          u9121 14BC  
                                        u9041 126A                                          u6721 47C8  
                                        u8250 4D20                                          u8170 2A58  
                                        u8090 27A4                                          u7610 26C2  
                                        u7530 25EC                                          u7450 24E6  
                                        u7370 23F4                                          u7290 22D8  
                                        u8410 48D6                                          u8330 4F8E  
                                        u9210 16EE                                          u9130 14DC  
                                        u9050 1320                                          u6730 47EE  
                                        u8251 4D1C                                          u8171 2A54  
                                        u8091 27A0                                          u7611 26BE  
                                        u7531 25E8                                          u7451 24E2  
                                        u7371 23F0                                          u7291 22D4  
                                        u8411 48D2                                          u8331 4F8A  
                                        u9211 16EA                                          u9131 14D8  
                                        u9051 131C                                          u6731 47EA  
                                        u8260 4D3E                                          u8180 2A6C  
                                        u8500 4702                                          u7620 26D4  
                                        u7540 2602                                          u7460 252C  
                                        u7380 2412                                          u8420 4926  
                                        u8340 4FB2                                          u9300 1982  
                                        u9220 1756                                          u9140 1512  
                                        u9060 13B6                                          u6740 480C  
                                        u6660 473C                                          u8261 4D3A  
                                        u8181 2A68                                          u8501 46FE  
                                        u7621 26D0                                          u7541 25FE  
                                        u7461 2528                                          u7381 240E  
                                        u8421 4922                                          u7701 3E92  
                                        u8341 4FAE                                          u9301 197E  
                                        u9221 1752                                          u9141 150E  
                                        u9061 13B2                                          u6741 4808  
                                        u6661 4738                                          u8270 4D5A  
                                        u8190 2A86                                          u7630 26F0  
                                        u7550 2618                                          u7470 2562  
                                        u7390 2432                                          u7710 3EB6  
                                        u8510 4DA0                                          u8350 4FF2  
                                        u8430 5898                                          u9310 1990  
                                        u9230 179C                                          u9150 1538  
                                        u9070 142A                                          u6670 4758  
                                        u8271 4D56                                          u8191 2A82  
                                        u7631 26EC                                          u7551 2614  
                                        u7471 255E                                          u7391 242E  
                                        u7711 3EB2                                          u8511 4D9C  
                                        u8351 4FEE                                          u8431 5894  
                                        u9311 198C                                          u9231 1798  
                                        u9151 1534                                          u9071 1426  
                                        u6671 4754                                          u8280 4D80  
                                        u8440 4634                                          u7560 262C  
                                        u7480 2572                                          u7720 3EE0  
                                        u7800 424C                                          u7640 5714  
                                        u8520 4DC2                                          u8360 5030  
                                        u9400 1B84                                          u9320 19AC  
                                        u9240 17AC                                          u9160 154A  
                                        u9080 1450                                          u6680 476A  
                                        u8281 4D7C                                          u8441 4630  
                                        u7561 2628                                          u7481 256E  
                                        u7721 3EDC                                          u7801 4248  
                                        u7641 5710                                          u8521 4DBE  
                                        u8361 502C                                          u9401 1B80  
                                        u9321 19A8                                          u9241 17A8  
                                        u9161 1546                                          u9081 144C  
                                        u6681 4766                                          u8450 4668  
                                        u7570 2646                                          u7490 259E  
                                        u7730 3F20                                          u7650 57C6  
                                        u8530 4E18                                          u8290 4F26  
                                        u7810 2B6E                                          u8370 5064  
                                        u8610 4A1A                                          u9410 1C08  
                                        u9330 19BA                                          u9250 1848  
                                        u9170 1558                                          u9090 1462  
                                        u6690 478C                                          u7571 2642  
                                        u7491 259A                                          u7731 3F1C  
                                        u7651 57C2                                          u8531 4E14  
                                        u8291 4F22                                          u7811 2B6A  
                                        u8371 5060                                          u8611 4A14  
                                        u9411 1C04                                          u9331 19B6  
                                        u9251 1844                                          u9171 1554  
                                        u9091 145E                                          u6691 4788  
                                        u8460 4696                                          u7580 2680  
                                        u8380 485A                                          u7740 3F6A  
                                        u8540 4E26                                          u7900 2D0E  
                                        u7820 2B80                                          u8620 4A1C  
                                        u8700 3746                                          u7660 587A  
                                        u9420 1C22                                          u9340 1A12  
                                        u9260 1894                                          u9180 156E  
                                        u9500 4AC2                                          u8461 4692  
                                        u7581 267C                                          u8381 4856  
                                        u7741 3F66                                          u8541 4E22  
                                        u7901 2D0A                                          u7821 2B7C  
                                        u8605 49F2                                          u8701 3742  
                                        u7661 5874                                          u9421 1C1E  
                                        u9341 1A0E                                          u9261 1890  
                                        u9181 156A                                          u9501 4ABE  
                                        u8470 46AA                                          u7590 2692  
                                        u8390 4898                                          u7750 413C  
                                        u8550 5774                                          u7910 2D38  
                                        u7830 2B90                                          u8630 5394  
                                        u7670 587C                                          u9430 1C3A  
                                        u9350 1AE4                                          u9270 18BA  
                                        u9190 157C                                          u9510 4AF4  
                                        u8471 46A6                                          u8455 465E  
                                        u7591 268E                                          u8391 4894  
                                        u7751 4138                                          u8551 5770  
                                        u7911 2D34                                          u7831 2B8C  
                                        u9431 1C36                                          u9351 1AE0  
                                        u9271 18B6                                          u9191 1578  
                                        u9511 4AF0                                          u8480 46D2  
                                        u7680 3E36                                          u7760 416E  
                                        u8800 2F38                                          u7920 2D5C  
                                        u7840 2BD4                                          u8560 4970  
                                        u8720 37B4                                          u8640 53A6  
                                        u9440 1C9A                                          u9360 1B00  
                                        u9280 195C                                          u9600 2014  
                                        u8481 46CE                                          u7681 3E32  
                                        u7761 416A                                          u8801 2F34  
                                        u7921 2D58                                          u7841 2BD0  
                                        u8721 37B0                                          u8641 53A2  
                                        u9441 1C94                                          u9361 1AFC  
                                        u9281 1958                                          u9601 2010  
                                        u8490 46F2                                          u7690 3E68  
                                        u7770 41AC                                          u8810 2F66  
                                        u7930 2D72                                          u7850 2BE6  
                                        u8570 498E                                          u8730 37D8  
                                        u8650 53D8                                          u9450 1C9C  
                                        u9370 1B12                                          u9290 1970  
                                        u9610 2096                                          u8491 46EE  
                                        u7691 3E64                                          u7771 41A8  
                                        u8811 2F62                                          u7931 2D6E  
                                        u7851 2BE2                                          u8571 498A  
                                        u8715 375A                                          u8651 53D2  
                                        u9371 1B0E                                          u9291 196C  
                                        u9611 2090                                          u9700 3DFA  
                                        u7780 41D6                                          u8900 315E  
                                        u8820 2F82                                          u7940 2D90  
                                        u7860 2BF6                                          u8580 49B6  
                                        u8740 37F4                                          u8716 3764  
                                        u8660 53DA                                          u9460 1CB2  
                                        u9380 1B20                                          u9620 2098  
                                        u9540 1D4E                                          u9525 5984  
                                        u9701 3DF6                                          u7781 41D2  
                                        u8901 315A                                          u8821 2F7E  
                                        u7941 2D8C                                          u7861 2BF2  
                                        u8581 49B2                                          u8565 4966  
                                        u8741 37F0                                          u8717 3774  
                                        u8637 5386                                          u9461 1CAE  
                                        u9381 1B1C                                          u9541 1D4A  
                                        u9710 3ADE                                          u7790 4204  
                                        u8910 316C                                          u8830 2FB0  
                                        u7950 2DB0                                          u7870 2C36  
                                        u8590 49E0                                          u8750 3848  
                                        u8670 53F0                                          u9390 1B56  
                                        u9470 4A58                                          u9630 20AE  
                                        u9550 1DB0                                          u9711 3ADA  
                                        u9535 5950                                          u7791 4200  
                                        u8911 3168                                          u8831 2FAC  
                                        u7951 2DAC                                          u7871 2C32  
                                        u8591 49DC                                          u8735 37CE  
                                        u8671 53EC                                          u9391 1B52  
                                        u9471 4A54                                          u9631 20AA  
                                        u9551 1DAC                                          u9800 3C6C  
                                        u9720 3AEC                                          u8920 3184  
                                        u8840 2FBE                                          u7960 2DC2  
                                        u7880 2C76                                          u8760 3864  
                                        u8680 36F4                                          u9480 4A8E  
                                        u9640 21A8                                          u9560 1E00  
                                        u9801 3C68                                          u9721 3AE8  
                                        u8921 3180                                          u8841 2FBA  
                                        u7961 2DBE                                          u7881 2C72  
                                        u8761 3860                                          u9481 4A8A  
                                        u9641 21A4                                          u9561 1DFC  
                                        u9730 3B48                                          u8850 30EC  
                                        u7970 2DF0                                          u7890 2CEC  
                                        u8770 38A0                                          u8690 3724  
                                        u8930 109A                                          u9490 4AB0  
                                        u9570 1E6E                                          u9810 5334  
                                        u9731 3B44                                          u8851 30E8  
                                        u7971 2DEC                                          u7891 2CE8  
                                        u8771 389C                                          u8755 383E  
                                        u8691 3720                                          u8931 1096  
                                        u9491 4AAC                                          u9571 1E6A  
                                        u9811 5330                                          u9740 3B9E  
                                        u9820 4B3E                                          u8860 310A  
                                        u8780 2F20                                          u7980 2E06  
                                        u8940 10EA                                          u9580 1E9C  
                                        u9900 40A0                                          u9741 3B9A  
                                        u9821 4B3A                                          u8861 3106  
                                        u8781 2F1A                                          u7981 2E02  
                                        u8685 36EA                                          u8941 10E6  
                                        u9581 1E98                                          u9901 409C  
                                        u9750 3BE8                                          u9830 4B5A  
                                        u9670 3D86                                          u8870 3124  
                                        u8790 2F22                                          u7990 2E1A  
                                        u8950 10F8                                          u9590 1F42  
                                        u9910 40D6                                          u9751 3BE4  
                                        u9655 59EC                                          u9831 4B56  
                                        u9671 3D82                                          u8871 3120  
                                        u7991 2E16                                          u8951 10F4  
                                        u9591 1F3E                                          u9911 40D2  
                                        u9760 3C06                                          u9840 4B9A  
                                        u9680 3DAE                                          u8880 313E  
                                        u8960 110A                                          u9920 4120  
                                        u9761 3C02                                          u9665 59B8  
                                        u9841 4B96                                          u9681 3DAA  
                                        u8881 313A                                          u8961 1106  
                                        u9921 411C                                          u9770 3C16  
                                        u9850 4BB6                                          u9690 3DD2  
                                        u9930 5258                                          u8890 314C  
                                        u8970 1152                                          u9771 3C12  
                                        u9851 4BB2                                          u9691 3DCE  
                                        u9931 5254                                          u8891 3148  
                                        u8971 114E                                          u9780 3C24  
                                        u9940 52AC                                          u8980 1182  
                                        u9860 3512                                          u9781 3C20  
                                        u9941 52A8                                          u8981 117C  
                                        u9861 350E                                          u9790 3C5E  
                                        u8990 1184                                          u9950 321C  
                                        u9870 353A                                          u9791 3C5A  
                                        u9951 3218                                          u9871 3536  
                                        u9960 3238                                          u9880 361E  
                                        u9961 3234                                          u9881 361A  
                                        u9970 3250                                          u9890 3644  
                                        _TMR2 003FAA                                          u9971 324C  
                                        u9891 3640                                          u9980 327E  
                                        _TMR4 003F9E                                          u9981 327A  
                                        u9990 329A                                          u9991 3296  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUD 003A71  
                                        _WPUE 003A81                           ?_UART1_Transmit_ISR 0001  
                                        abs@a 0026                                          _dbuf 0136  
                                        _main 5D2C                                          _dtoa 2EEE  
                                        _loop 43DA                                          _prec 003C  
                                        _nout 0128                                          pad@i 002D  
                                        pad@p 002A                                          fsr1h 003FE2  
                                        fsr2h 003FDA                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 002F                                          fsr2l 003FD9  
                               ___fpclassifyf 4930                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                             _timer5ReloadVal 018C                               ___fldiv@new_exp 0025  
                             _TMR3_Initialize 58BA                               _PWM5_Initialize 5DCE  
                           ??_CLC3_Initialize 0014                 ??_UART1_SetTxInterruptHandler 0016  
                                _tolower$3676 0020                    ??_TMR4_SetInterruptHandler 0016  
                           _UART1_rx_vect_isr 5810                                  ___param_bank 000000  
                  __end_of_PWM5_LoadDutyValue 5994                            ?_UART1_rx_vect_isr 0001  
                                       ??_abs 0028                                         ??_pad 002C  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0011  
               __end_of_OSCILLATOR_Initialize 5DFE                                 ___fltol@sign1 0081  
                             __end_of___aldiv 461C                               __end_of___aodiv 3FAC  
                                       _ADCAP 003EF5                                         _ADACT 003EFE  
                     __end_of_CCP3_Initialize 5BB6                               __end_of___fladd 2704  
                                       ?_main 0001                                         ?_dtoa 0060  
                                       _ADCLK 003EFF                               __end_of___aomod 428E  
                                       _ADCNT 003EEB                                         _ADPCH 003EF1  
                             __end_of___fldiv 2EEE                                         _ADREF 003EFD  
                             __end_of___awdiv 4D92                               __end_of___flneg 58BA  
                                       ?_loop 0001                                         STR_12 1061  
                                       STR_13 1069                                         STR_16 106D  
                                       STR_18 106D                               __end_of___awmod 4FC4  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2B54                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 56D2                               __end_of___fltol 4724  
                                       u10000 32B2                                         u10001 32AE  
                                       u10010 32D4                                         u10011 32D0  
                                       u10100 33FC                                         u10020 32FA  
                                       u10101 33F8                                         u10021 32F6  
                                       u10110 3420                                         u10030 330C  
                                       u10111 341C                                         u10031 3308  
                                       u10200 4368                                         u10120 38E6  
                                       u10040 3322                                         u10201 4364  
                                       u10121 38E2                                         u10041 331E  
                                       u10210 4394                                         u10130 3906  
                                       u10050 3334                                         u10211 4390  
                                       u10131 3902                                         u10051 3330  
                                       u10220 43BC                                         u10140 3924  
                                       u10060 334A                                         u10221 43B8  
                                       u10141 3920                                         u10061 3346  
                                       u10150 395E                                         u10070 3360  
                                       u10230 4404                                         u10151 395A  
                                       u10071 335C                                         u10231 4400  
                                       u10160 3978                                         u10080 3386  
                                       u10240 4416                                         u10161 3974  
                                       u10081 3382                                         u10241 4412  
                                       u10170 3A96                                         u10090 33DE  
                                       u10250 4466                                         u10171 3A92  
                                       u10091 33DA                                         u10251 4462  
                                       u10180 3ABA                                         u10260 449A  
                                       u10181 3AB6                                         u10261 4496  
                                       u10190 434C                                         u10270 44AC  
                                       u10191 4348                                         u10271 44A8  
                                       u10280 44E4                                         u10281 44E0  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 5842  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 5806                                         i1l333 5754  
                                       i1l350 5E8E                                         i1l343 4F12  
                                       i1l336 5758                                         i1l353 5E8C  
                                       _U1TXB 003DEA                                         i1l347 5C66  
                                       i1l356 5E84                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5E94  
                                       i1l692 5BE2                                         i2l534 5C92  
                                       i2l438 5B28                                         i2l446 5A2E  
                                       i2l552 5AC8                                         i1l688 5924  
                                       i2l529 5D2A                                         i2l537 5E1A  
                                       i1l698 5E90                                         i2l476 5B58  
                                       i2l558 5D68                                         i2l487 5A62  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 5512  
                                       i2l856 5688                                         i2l868 5CE2  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5E94                               _TMR4_Initialize 5BE4  
                             _PWM6_Initialize 5DB6                             _UART1_tx_vect_isr 57D4  
                            __end_of_TMR4_ISR 592C                       setSteering@steeringMode 001E  
                                       _delay 00F9                                         _flags 003E  
                                       _fputc 5112                                         _fputs 56D2  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 003A  
                                       _putch 5E1C                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 5882                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E5  
                       __size_of_calcSteering 0230                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5E3A                   _UART1_SetRxInterruptHandler 5E30  
                     __end_of_CCP4_Initialize 5B88                                ?___fpclassifyf 0014  
                             __end_of_tolower 5408                               __end_of_strncmp 4B22  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 5E90  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5E8E  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 584A  
                             _TMR5_Initialize 55F4                               _PWM7_Initialize 5D9E  
                             __initialization 5560                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 5D4C  
                                __end_of_dtoa 31D4                                  __end_of_loop 4510  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 5D86  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 428E  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 580E  
                             _PWM8_Initialize 5D86                              _UART1_Initialize 506E  
                                _calcSteering 347C                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 5994  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1243 5E8A                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 5DE6                       __end_of_TMR3_Initialize 58F2  
                                      i1l7100 4EAC                                        i1l7102 4EBC  
                                      i1l7032 5E86                                        i1l7104 4ED4  
                                      i1l7106 4EF0                                        i1l7202 57DA  
                                      i1l7108 4F0E                                        i1l7204 57EE  
                                      i1l7150 5BCA                                        i1l7230 5918  
                                      i1l7206 5816                                        i1l7232 591C  
                                      i1l7208 582A                                        i1l7080 5726  
                                      i1l7226 58FA                                        i1l7090 4E54  
                                      i1l7082 5738                                        i1l7148 5BB6  
                                      i1l7228 58FE                                        i1l6540 5C4E  
                                      i1l7092 4E64                                        i1l7084 573A  
                                      i1l6542 5C50                                        i1l7094 4E74  
                                      i1l7086 574A                                        i1l7078 5716  
                                      i1l6544 5C60                                        i1l7096 4E84  
                                      i1l7088 574E                                        i1l6546 5C64  
                                      i1l6538 5C3C                                        i1l7098 4E9C  
                                      i1l6762 5E80                                        i2l7110 5AFA  
                                      i2l7120 5B38                                        i2l7112 5B08  
                                      _INLVLA 003A44                                        i2l7130 5D60  
                                      i2l7122 5B44                                        i2l7114 5B14  
                                      i2l7210 59FC                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        i2l7132 5D64  
                                      i2l7220 5A9C                                        i2l7124 5B52  
                                      i2l7116 5B22                                        i2l7212 5A0C  
                                      _INLVLD 003A74                                        _INLVLE 003A84  
                                      i2l7126 5D4C                                        i2l7222 5AB0  
                                      i2l7118 5B2A                                        i2l7214 5A30  
                                      i2l7240 5664                                        i2l7128 5D58  
                                      i2l7216 5A40                                        i2l7250 54EE  
                                      i2l7242 5676                                        i2l7234 5640  
                                      i2l7218 5A98                                        i2l7252 5500  
                                      i2l7244 54C0                                        i2l7236 5644  
                                      i2l7254 5CBC                                        i2l7246 54C4  
                                      i2l7238 5654                                        i2l7256 5CC0  
                                      i2l7248 54DE                                        i2l6560 5C7C  
                                      i2l6562 5C82                                        i2l6554 5C68  
                                      i2l6556 5C76                                        i2l6564 5C88  
                                      i2l6566 5C8C                                        i2l6558 5C78  
                                      i2l6764 5D08                                        i2l6772 5E0E  
                                      i2l6766 5D16                                        i2l6768 5D22  
                                ?_setSteering 001C                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 523C                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 5E4E                              __end_of___xxtofl 3C80  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 347C  
                    __end_of_CCP3_SetCallBack 5E80                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 00E3  
                                      ___flge 482A                                        ___fleq 4FC4  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 001C                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                        _efgtoa 1072  
                               _CCP3_CallBack 0190                                        _floorf 36AC  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 5DCE  
                     __end_of_TMR4_Initialize 5C10                                        clear_0 557A  
                                      clear_1 5586                                        clear_2 5592  
                            ___awdiv@quotient 001A                                        _motPow 012E  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 018E                                        _smtWay 0120  
                                      _printf 5C94                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 533E                                        _strlen 579A  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4C04  
                             _ADCC_Initialize 5464          __end_of_TMR4_DefaultInterruptHandler 5E92  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 5E90  
                                      fputc@c 0016                                _PMD_Initialize 5CE4  
                                      fputs@c 0023                                        fputs@i 0024  
                                      fputs@s 001F                               ___fpclassifyf@e 001C  
                             ___fpclassifyf@u 001E                               ___fpclassifyf@x 0014  
                                __mediumconst 0000                         __end_of_TMR5_GATE_ISR 5ACA  
                                      tblptrh 003FF7                                     ??_isupper 0016  
                                      tblptrl 003FF6                                        tblptru 003FF8  
           __size_of_ADCC_GetSingleConversion 0032                              __end_of_vfprintf 533E  
                   ?_ADCC_GetSingleConversion 0014      TMR4_SetInterruptHandler@InterruptHandler 0014  
TMR5_SetGateInterruptHandler@InterruptHandler 0014   UART1_SetTxInterruptHandler@InterruptHandler 0014  
 UART1_SetRxInterruptHandler@InterruptHandler 0014          __end_of_UART1_SetOverrunErrorHandler 5E44  
       __size_of_UART1_SetOverrunErrorHandler 000A                  _UART1_SetOverrunErrorHandler 5E3A  
                   _UART1_DefaultErrorHandler 5E80                                     ??_tolower 001C  
                                   ??_strncmp 001A                 __size_of_INTERRUPT_Initialize 004C  
                __size_of_UART1_RxDataHandler 002C                             getCurve@deltaLeft 01AE  
                                  ___flge@ff1 006D                               ??___fpclassifyf 0018  
                                  ___flge@ff2 0071                       __end_of_PWM7_Initialize 5DB6  
                     __end_of_TMR5_Initialize 563E                                  ___xxtofl@arg 0026  
                                ___xxtofl@exp 0025                             _SYSTEM_Initialize 55AA  
                                ___xxtofl@val 001C                                    ___fleq@ff1 0014  
                                  ___fleq@ff2 0018                                    __accesstop 0060  
                     __end_of__initialization 55A4                                    ___flneg@f1 0014  
                            ?_CCP4_Initialize 0001                           setSteering@steering 001C  
                          ?_SYSTEM_Initialize 0001                                 ___rparam_used 000001  
                  __size_of_UART1_rx_vect_isr 003A                                    ___fltol@f1 0079  
                             _TMR5_WriteTimer 5C68                            __size_of_calcSpeed 020A  
                   calcMotorPow@setSpeedDelta 0085                      __end_of_CCP4_SetCallBack 5E76  
                              __pcstackCOMRAM 0001                         __end_of_TMR4_CallBack 5BE4  
                                __pidataBANK0 5E96                            __size_of_checkBatt 0092  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 01AA  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 51A8  
                               __end_of_fputs 5716                               fp__TMR4_10msISR 0000  
                               __end_of_putch 5E26                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 5D9E                        __end_of_PMD_Initialize 5D08  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 0196               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                             _calcSteering$4174 0085  
                                     ??_fputc 001A                     __end_of_SYSTEM_Initialize 55F4  
                                     ??_fputs 0023                               _CLC3_Initialize 5C10  
                                     ??_putch 0015                   PWM7_LoadDutyValue@dutyValue 0014  
                                  __pbssBANK0 00E5                                    __pbssBANK1 0100  
               ?_UART1_SetOverrunErrorHandler 0014                        ?_UART1_SetErrorHandler 0014  
                            ?_PWM5_Initialize 0001                              ?_TMR3_Initialize 0001  
                                  __pnvCOMRAM 004C                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 0186                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 54C0  
                  __end_of_PWM6_LoadDutyValue 5960                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5E62         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5E58                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 002D                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A2  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4E54  
                                  _getReverse 4724                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 005C                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 5960                                    _distRightM 00F1  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 3ACC  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0522  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 52CE                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5C94                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01A4  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 5112                                       ___aldiv 4510  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3E24                                       ___fladd 2242  
                                     ___aomod 412A                                       ___fldiv 2B54  
                                     ___awdiv 4CCE                                       ___flneg 5882  
                                     ___awmod 4F14                                       ___flmul 2704  
                                     ___flsub 568A                                       ___fltol 461C  
                   __end_of_UART1_Receive_ISR 4F14                                     ?_vfprintf 019C  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 5560                     _TMR5_GateInterruptHandler 018A  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0044                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5D2C                                       __ptext1 43DA  
                                     __ptext2 3FAC                                       __ptext3 347C  
                                     __ptext4 4724                                       __ptext5 31D4  
                                     __ptext6 5C94                                       __ptext7 52CE  
                                     __ptext8 1D20                                       __ptext9 4A2E  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5C3C                         _OSCILLATOR_Initialize 5DE6  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 584A                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 01AA                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 53A8  
                                     _strncmp 4A2E                          end_of_initialization 55A4  
                                     floorf@e 0064                                     _T2RSTbits 003FAF  
                                     floorf@m 0060                                       floorf@u 0066  
                                     floorf@x 002D                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5E30                   _UART1_SetTxInterruptHandler 5E26  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 2242                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 5A96  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5C3C  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                        __size_of_startAccell 017E                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 0078  
                          getCurve@deltaRight 01AC                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0027                                   ___fldiv@rem 0020  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 0023                          setSteering@steeringF 0021  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 5560  
                              __end_of___flge 4930                                __end_of___fleq 506E  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00CB  
                                 vfpfcnvrt@ct 00DF                                   vfpfcnvrt@fp 00C7  
                                 vfpfcnvrt@ll 00D1                                __end_of_efgtoa 1D20  
                           __size_of_TMR4_ISR 0038                                __end_of_floorf 38C2  
                      ?_OSCILLATOR_Initialize 0001                                    floorf@F527 0118  
                              __end_of_printf 5CBC                   __size_of_PWM8_LoadDutyValue 0034  
                            ?_CLC3_Initialize 0001                                __end_of_strcpy 53A8  
                              __end_of_strlen 57D4                                _TMR5_ReadTimer 5D08  
                         start_initialization 5560                ??_TMR5_SetGateInterruptHandler 0016  
             __size_of_PIN_MANAGER_Initialize 00CA                                   __end_of_abs 579A  
                                 __end_of_pad 4E54                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0016                      __size_of_CCP3_Initialize 002E  
                       ??_UART1_RxDataHandler 0012                                   putch@txData 0015  
                                  ivt0x8_base 0008                                 _uart1RxBuffer 0108  
                                 _actMotorPow 00E7                         __end_of___fpclassifyf 4A2E  
                               _uart1TxBuffer 0110                           __size_of_getReverse 0106  
                        __end_of_TMR4_10msISR 5E8C                                  _middleOffSet 0130  
                                 vfprintf@fmt 019E                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00ED  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                 __pdataBANK0 00FE                                      ??_floorf 0031  
                  __end_of_PWM7_LoadDutyValue 59FC                             ??_SMT1_Initialize 0014  
                                    ??_printf 003A                                      ??_strcpy 0018  
                                    ??_strlen 0016                        __end_of_TMR5_ReadTimer 5D2C  
                       CCP4_CaptureISR@module 0007                                     ___fladd@a 0071  
                                   ___fladd@b 006D                           calcMotorPow@addMPow 0089  
                    _ADCC_GetSingleConversion 5A64                                     ___fldiv@a 0018  
                                   ___fldiv@b 0014                   PWM5_LoadDutyValue@dutyValue 0014  
                       TMR4_ISR@CountCallBack 0040                                     ___flmul@a 002E  
                                   ___flmul@b 002A                                   __pbssCOMRAM 003A  
                                   ___flsub@a 007D                                     ___flsub@b 0079  
                          _UART1_ErrorHandler 0192                                 __pcstackBANK0 0060  
                               __pcstackBANK1 019C                             __size_of_actSpeed 0094  
                            ___aodiv@dividend 0014                            _PWM6_LoadDutyValue 592C  
                    __size_of_TMR2_Initialize 001C                             __size_of___xxtofl 01B4  
                    _UART1_RxInterruptHandler 019A                             ??_CCP3_CaptureISR 0003  
                __end_of_CCP3_DefaultCallBack 5B2A                        __size_of_TMR4_CallBack 002E  
                                   _calcSpeed 38C2                             __size_of_getCurve 02A8  
                         ?_PWM6_LoadDutyValue 0014                   PWM8_LoadDutyValue@dutyValue 0014  
                fp__UART1_DefaultErrorHandler 0000                                     _checkBatt 523C  
                                _currentSpeed 00E9                  ?_UART1_SetRxInterruptHandler 0014  
                                   __pnvBANK1 0186                                   _efgtoa$3554 008F  
                                 _efgtoa$3563 0095                                   _efgtoa$3555 0091  
                                 _efgtoa$3564 0097                                   _efgtoa$3565 0099  
                                 _efgtoa$3559 0093                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4C04                                     _dtoa$3530 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5E4E  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 5E44  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 5E6C                                      ?___fldiv 0014  
                                    ?___awdiv 0014                                     __ptext100 5640  
                                   __ptext101 54C0                                     __ptext102 5CBC  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
                                   __ptext103 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                            ??_UART1_Initialize 0016  
                                   _distLeftM 00F5                                     _distFront 00FC  
                            _uart1RxLastError 0042                                 ??_UART1_Write 0014  
                                   _distRight 00F3                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FA                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 00FE  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 5E8E  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5E8C  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 5640                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 5A98  
                                   _curveMode 00FB                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 5514                                 ??_setSteering 001F  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 54C0  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5B5A                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u700_28 5BD0  
                                    i1u700_29 5BE2                                      i1u710_28 5830  
                                    i1u710_29 5842                                      i1u632_20 5C60  
                                    i1u632_21 5C5C                                      i1u715_20 5918  
                                    i1u707_20 57EE                                      i1u715_21 5914  
                                    i1u707_21 57EA                                      i1u709_20 582A  
                                    i1u708_28 57F4                                      i1u709_21 5826  
                                    i1u708_29 5806                                      _PIR1bits 0039A1  
                                    i1u690_20 4E74                                      i1u690_21 4E70  
                                    i1u692_20 4EAC                                      i1u691_28 4E8A  
                                    i1u692_21 4EA8                                      i1u691_29 4E9C  
                                    i1u694_20 4EF0                                      i1u693_28 4EC2  
                                    i1u694_21 4EEC                                      i1u693_29 4ED4  
                                    _PIR4bits 0039A4                                      i1u695_28 4EF6  
                                    i1u688_20 5726                                      i1u695_29 4F0A  
                                    i1u688_21 5722                                      i2u711_48 5A1A  
                                    i2u711_49 5A2E                                      i1u689_20 574A  
                                    i1u689_21 5746                                      i2u633_40 5C76  
                                    i2u713_40 5AB0                                      i2u712_48 5A4E  
                                    i2u633_41 5C72                                      i2u713_41 5AAC  
                                    i2u712_49 5A62                                      i1u699_20 5BCA  
                                    i1u699_21 5BC6                                      i2u714_48 5AB6  
                                    i2u714_49 5AC8                                      _PIR6bits 0039A6  
                                    i2u716_40 5664                                      i2u716_41 5660  
                                    i2u717_40 54EE                                      i2u717_41 54EA  
                                    _PIR7bits 0039A7                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      i2u696_40 5B08  
                                    i2u696_41 5B04                                      i2u697_40 5B38  
                                    i2u697_41 5B34                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 5CBC                                      _TMR4_ISR 58F4  
                  __end_of_UART1_Transmit_ISR 575A                                 _TMR4_CallBack 5BB6  
                                   _smtPeriod 0048                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1D20                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 5DFE                                  ??_getReverse 0014  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 0083  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 5464                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00E2                                    vfpfcnvrt@f 00DB  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 004C  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0043  
                          __end_of_getReverse 482A                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5CE4  
                         __end_of_setSteering 3E24                                    vfprintf@ap 01A0  
                                    __Lrparam 0000                                    vfprintf@fp 019C  
                                 _oldDistLeft 00EF                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 5E0E                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039A                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 5AFA                       __end_of_SMT1_PR_ACQ_ISR 568A  
                                  ?_vfpfcnvrt 00C7                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 5E62  
                          ___fpclassifyf@F465 011C                                      _actSpeed 51A8  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 5E86  
                                    ___xxtofl 3ACC                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 5E1C                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 5514  
                                    _getCurve 31D4                                      __ptext10 1072  
                                    __ptext11 53A8                                      __ptext20 4F14  
                                    __ptext12 584A                                      __ptext21 2EEE  
                                    __ptext13 533E                                      __ptext30 3E24  
                                    __ptext22 4D92                                      __ptext14 36AC  
                                    __ptext31 523C                                      __ptext23 579A  
                                    __ptext15 4930                                      __ptext40 428E  
                                    __ptext32 3C80                                      __ptext24 56D2  
                                    __ptext16 568A                                      __ptext41 4B22  
                                    __ptext33 592C                                      __ptext25 5112  
                                    __ptext17 5882                                      __ptext50 55AA  
                                    __ptext42 5994                                      __ptext34 5960  
                                    __ptext26 5E1C                                      __ptext18 4FC4  
                                    __ptext51 506E                                      __ptext43 59C8  
                                    __ptext35 5DFE                                      __ptext27 5408  
                                    __ptext19 2B54                                      __ptext60 5E62  
                                    __ptext52 5E26                                      __ptext44 51A8  
                                    __ptext36 5A64                                      __ptext28 575A  
                                    __ptext61 58BA                                      __ptext53 5E30  
                                    __ptext45 4510                                      __ptext37 482A  
                                    __ptext29 412A                                      __ptext70 5DE6  
                                    __ptext62 5D6A                                      __ptext54 5E3A  
                                    __ptext46 3ACC                                      __ptext38 38C2  
                                    __ptext71 5514                                      __ptext63 5ACA  
                                    __ptext55 5E44                                      __ptext47 461C  
                                    __ptext39 2242                                      __ptext80 5810  
                                    __ptext72 5C10                                      __ptext64 5D86  
                                    __ptext56 5E4E                                      __ptext48 2704  
                                    __ptext81 4E54                                      __ptext73 5B5A  
                                    __ptext65 5D9E                                      __ptext57 55F4  
                                    __ptext49 4CCE                                      __ptext90 5E94  
                                    __ptext82 5E8C                                      __ptext74 5E6C  
                                    __ptext66 5DB6                                      __ptext58 5E58  
                                    __ptext91 59FC                                      __ptext83 5E8E  
                                    __ptext75 5B88                                      __ptext67 5DCE  
                                    __ptext59 5BE4                                      __ptext92 5AFA  
                                    __ptext84 5E80                                      __ptext76 5E76  
                                    __ptext68 5CE4                                      __ptext93 5A30  
                                    __ptext85 5C3C                                      __ptext77 5464  
                                    __ptext69 4C04                                      __ptext94 5B2A  
                                    __ptext86 58F4                                      __ptext78 57D4  
                                    __ptext95 5A98                                      __ptext87 5BB6  
                                    __ptext79 5716                                      __ptext96 5D4C  
                                    __ptext88 5E86                                      __ptext97 5E0E  
                                    __ptext89 5E90                                      __ptext98 5C68  
                                    __ptext99 5D08                              __size_of_isupper 0038  
                                    _distLeft 00F7                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 5E58  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0136  
                             _SMT1_Initialize 5ACA                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4B22                                      _setSpeed 00EB  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 0194  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 52CE                                     printf@fmt 01A2  
                  __end_of_PWM8_LoadDutyValue 59C8                               _CCP3_CaptureISR 59FC  
                                 _UART1_Write 5408                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 5D6A  
   __size_of_TMR5_DefaultGateInterruptHandler 001E            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 5D4C  
                            ___aomod@dividend 0014                           __end_of_startAccell 412A  
                              _battCheckCount 0132                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 0134  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3583 00D9  
                 __end_of_UART1_RxDataHandler 5C68                                   _uart1RxHead 0045  
                        _CCP4_DefaultCallBack 5B2A                                   _uart1TxHead 0047  
                                 _uart1RxTail 0044                                   _uart1TxTail 0046  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 59C8  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 3C80  
                             _CCP4_CaptureISR 5A30                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 43DA                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 36AC  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01A8                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5E86                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5E0E                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5E76  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A4  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5B88                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 0087                      _UART1_TxInterruptHandler 0198  
                               ___fladd@signs 0075                           __end_of_Default_ISR 5E96  
                     __end_of_SMT1_Initialize 5AFA                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 4CCE                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5A30  
