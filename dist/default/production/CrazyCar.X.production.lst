

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 31 11:40:45 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=4,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=4,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=4,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=4,class=CODE,delta=1
   108                           	psect	text91,global,reloc=4,class=CODE,delta=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1
   110                           	psect	text93,global,reloc=4,class=CODE,delta=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1
   112                           	psect	text95,global,reloc=4,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=4,class=CODE,delta=1
   118                           	psect	text101,global,reloc=4,class=CODE,delta=1
   119                           	psect	text102,global,reloc=4,class=CODE,delta=1
   120                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   121                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   122                           	psect	text103,global,reloc=4,class=CODE,delta=1
   123                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   124                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   125                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   126  0000                     
   127                           ; Version 2.20
   128                           ; Generated 05/05/2020 GMT
   129                           ; 
   130                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   131                           ; All rights reserved.
   132                           ; 
   133                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   134                           ; 
   135                           ; Redistribution and use in source and binary forms, with or without modification, are
   136                           ; permitted provided that the following conditions are met:
   137                           ; 
   138                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   139                           ;        conditions and the following disclaimer.
   140                           ; 
   141                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   142                           ;        of conditions and the following disclaimer in the documentation and/or other
   143                           ;        materials provided with the distribution.
   144                           ; 
   145                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   146                           ;        software without specific prior written permission.
   147                           ; 
   148                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   149                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   150                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   151                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   152                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   153                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   154                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   155                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   156                           ; 
   157                           ; 
   158                           ; Code-generator required, PIC18F46K42 Definitions
   159                           ; 
   160                           ; SFR Addresses
   161  0000                     
   162                           	psect	idataCOMRAM
   163  005DE2                     __pidataCOMRAM:
   164                           	callstack 0
   165                           
   166                           ;initializer for _driveMode
   167  005DE2  01                 	db	1
   168                           
   169                           	psect	nvBANK0
   170  0000FE                     __pnvBANK0:
   171                           	callstack 0
   172  0000FE                     _uart1TxBufferRemaining:
   173                           	callstack 0
   174  0000FE                     	ds	1
   175                           
   176                           	psect	nvBANK1
   177  000182                     __pnvBANK1:
   178                           	callstack 0
   179  000182                     _TMR4_InterruptHandler:
   180                           	callstack 0
   181  000182                     	ds	2
   182  000184                     _timer3ReloadVal:
   183                           	callstack 0
   184  000184                     	ds	2
   185  000186                     _TMR5_GateInterruptHandler:
   186                           	callstack 0
   187  000186                     	ds	2
   188  000188                     _timer5ReloadVal:
   189                           	callstack 0
   190  000188                     	ds	2
   191  00018A                     _CCP4_CallBack:
   192                           	callstack 0
   193  00018A                     	ds	2
   194  00018C                     _CCP3_CallBack:
   195                           	callstack 0
   196  00018C                     	ds	2
   197  00018E                     _UART1_ErrorHandler:
   198                           	callstack 0
   199  00018E                     	ds	2
   200  000190                     _UART1_OverrunErrorHandler:
   201                           	callstack 0
   202  000190                     	ds	2
   203  000192                     _UART1_FramingErrorHandler:
   204                           	callstack 0
   205  000192                     	ds	2
   206  000194                     _UART1_TxInterruptHandler:
   207                           	callstack 0
   208  000194                     	ds	2
   209  000196                     _UART1_RxInterruptHandler:
   210                           	callstack 0
   211  000196                     	ds	2
   212  0000                     _PIR4bits	set	14756
   213  0000                     _PIR1bits	set	14753
   214  0000                     _PIE1bits	set	14737
   215  0000                     _PIE7bits	set	14743
   216  0000                     _PIR7bits	set	14759
   217  0000                     _PIR6bits	set	14758
   218  0000                     _PIE8bits	set	14744
   219  0000                     _PIR8bits	set	14760
   220  0000                     _PIE10bits	set	14746
   221  0000                     _PIR10bits	set	14762
   222  0000                     _PIE9bits	set	14745
   223  0000                     _PIR9bits	set	14761
   224  0000                     _IPR9bits	set	14729
   225  0000                     _IPR7bits	set	14727
   226  0000                     _IPR8bits	set	14728
   227  0000                     _IPR10bits	set	14730
   228  0000                     _IPR1bits	set	14721
   229  0000                     _IPR3bits	set	14723
   230  0000                     _PIE3bits	set	14739
   231  0000                     _PMD7	set	14791
   232  0000                     _PMD6	set	14790
   233  0000                     _PMD5	set	14789
   234  0000                     _PMD4	set	14788
   235  0000                     _PMD3	set	14787
   236  0000                     _PMD2	set	14786
   237  0000                     _PMD1	set	14785
   238  0000                     _PMD0	set	14784
   239  0000                     _OSCTUNE	set	14814
   240  0000                     _OSCFRQ	set	14815
   241  0000                     _OSCEN	set	14813
   242  0000                     _OSCCON3	set	14811
   243  0000                     _OSCCON1	set	14809
   244  0000                     _CCP4PPS	set	15056
   245  0000                     _SMT1SIGPPS	set	15058
   246  0000                     _CLCIN2PPS	set	15067
   247  0000                     _RB3PPS	set	14859
   248  0000                     _RA3PPS	set	14851
   249  0000                     _SMT1WINPPS	set	15057
   250  0000                     _CLCIN0PPS	set	15065
   251  0000                     _RA4PPS	set	14852
   252  0000                     _T5GPPS	set	15049
   253  0000                     _RA0PPS	set	14848
   254  0000                     _U1RXPPS	set	15077
   255  0000                     _RA1PPS	set	14849
   256  0000                     _CLCIN3PPS	set	15068
   257  0000                     _CCP3PPS	set	15055
   258  0000                     _INLVLE	set	14980
   259  0000                     _INLVLD	set	14964
   260  0000                     _INLVLC	set	14948
   261  0000                     _INLVLB	set	14932
   262  0000                     _INLVLA	set	14916
   263  0000                     _SLRCONE	set	14979
   264  0000                     _SLRCOND	set	14963
   265  0000                     _SLRCONC	set	14947
   266  0000                     _SLRCONB	set	14931
   267  0000                     _SLRCONA	set	14915
   268  0000                     _ODCOND	set	14962
   269  0000                     _ODCONC	set	14946
   270  0000                     _ODCONB	set	14930
   271  0000                     _ODCONA	set	14914
   272  0000                     _ODCONE	set	14978
   273  0000                     _RD1I2C	set	14971
   274  0000                     _RD0I2C	set	14970
   275  0000                     _RC4I2C	set	14955
   276  0000                     _RC3I2C	set	14954
   277  0000                     _RB2I2C	set	14939
   278  0000                     _RB1I2C	set	14938
   279  0000                     _WPUC	set	14945
   280  0000                     _WPUA	set	14913
   281  0000                     _WPUB	set	14929
   282  0000                     _WPUE	set	14977
   283  0000                     _WPUD	set	14961
   284  0000                     _ANSELA	set	14912
   285  0000                     _ANSELE	set	14976
   286  0000                     _ANSELB	set	14928
   287  0000                     _ANSELC	set	14944
   288  0000                     _ANSELD	set	14960
   289  0000                     _CLC3CON	set	15456
   290  0000                     _CLC3GLS3	set	15465
   291  0000                     _CLC3GLS2	set	15464
   292  0000                     _CLC3GLS1	set	15463
   293  0000                     _CLC3GLS0	set	15462
   294  0000                     _CLC3SEL3	set	15461
   295  0000                     _CLC3SEL2	set	15460
   296  0000                     _CLC3SEL1	set	15459
   297  0000                     _CLC3SEL0	set	15458
   298  0000                     _CLC3POL	set	15457
   299  0000                     _CLC3CONbits	set	15456
   300  0000                     _U1RXB	set	15848
   301  0000                     _U1TXB	set	15850
   302  0000                     _U1ERRIRbits	set	15865
   303  0000                     _U1ERRIE	set	15866
   304  0000                     _U1ERRIR	set	15865
   305  0000                     _U1UIR	set	15864
   306  0000                     _U1FIFO	set	15863
   307  0000                     _U1BRGH	set	15862
   308  0000                     _U1BRGL	set	15861
   309  0000                     _U1CON2	set	15860
   310  0000                     _U1CON1	set	15859
   311  0000                     _U1CON0	set	15858
   312  0000                     _U1P3H	set	15857
   313  0000                     _U1P3L	set	15856
   314  0000                     _U1P2H	set	15855
   315  0000                     _U1P2L	set	15854
   316  0000                     _U1P1H	set	15853
   317  0000                     _U1P1L	set	15852
   318  0000                     _ADCON1bits	set	16121
   319  0000                     _ADERRL	set	16098
   320  0000                     _ADERRH	set	16099
   321  0000                     _ADPREVL	set	16109
   322  0000                     _ADPREVH	set	16110
   323  0000                     _ADFLTRL	set	16102
   324  0000                     _ADFLTRH	set	16103
   325  0000                     _ADSTATbits	set	16124
   326  0000                     _ADACCL	set	16104
   327  0000                     _ADACCH	set	16105
   328  0000                     _ADCON2bits	set	16122
   329  0000                     _ADCNT	set	16107
   330  0000                     _ADCON3bits	set	16123
   331  0000                     _ADRESL	set	16111
   332  0000                     _ADRESH	set	16112
   333  0000                     _ADCON0bits	set	16120
   334  0000                     _ADCON0	set	16120
   335  0000                     _ADCLK	set	16127
   336  0000                     _ADACT	set	16126
   337  0000                     _ADREF	set	16125
   338  0000                     _ADSTAT	set	16124
   339  0000                     _ADCON3	set	16123
   340  0000                     _ADCON2	set	16122
   341  0000                     _ADCON1	set	16121
   342  0000                     _ADPREH	set	16119
   343  0000                     _ADPREL	set	16118
   344  0000                     _ADCAP	set	16117
   345  0000                     _ADACQH	set	16116
   346  0000                     _ADACQL	set	16115
   347  0000                     _ADPCH	set	16113
   348  0000                     _ADRPT	set	16108
   349  0000                     _ADACCU	set	16106
   350  0000                     _ADSTPTH	set	16101
   351  0000                     _ADSTPTL	set	16100
   352  0000                     _ADUTHH	set	16097
   353  0000                     _ADUTHL	set	16096
   354  0000                     _ADLTHH	set	16095
   355  0000                     _ADLTHL	set	16094
   356  0000                     _SMT1TMR	set	16146
   357  0000                     _SMT1CPR	set	16149
   358  0000                     _SMT1CPW	set	16152
   359  0000                     _SMT1PR	set	16155
   360  0000                     _SMT1STATbits	set	16160
   361  0000                     _SMT1CON0bits	set	16158
   362  0000                     _SMT1CON1bits	set	16159
   363  0000                     _SMT1PRL	set	16155
   364  0000                     _SMT1PRH	set	16156
   365  0000                     _SMT1PRU	set	16157
   366  0000                     _SMT1SIG	set	16162
   367  0000                     _SMT1WIN	set	16163
   368  0000                     _SMT1CLK	set	16161
   369  0000                     _SMT1STAT	set	16160
   370  0000                     _SMT1CON1	set	16159
   371  0000                     _SMT1CON0	set	16158
   372  0000                     _CCPTMRS1bits	set	16223
   373  0000                     _CCPTMRS0bits	set	16222
   374  0000                     _PORTBbits	set	16331
   375  0000                     _PR2	set	16299
   376  0000                     _TMR2	set	16298
   377  0000                     _T2CONbits	set	16300
   378  0000                     _T2RSTbits	set	16303
   379  0000                     _T2HLTbits	set	16301
   380  0000                     _T2CON	set	16300
   381  0000                     _T2TMR	set	16298
   382  0000                     _T2PR	set	16299
   383  0000                     _T2RST	set	16303
   384  0000                     _T2HLT	set	16301
   385  0000                     _T2CLKCON	set	16302
   386  0000                     _PWM6DCL	set	16232
   387  0000                     _PWM6DCH	set	16233
   388  0000                     _PWM6CON	set	16234
   389  0000                     _PWM5DCL	set	16236
   390  0000                     _PWM5DCH	set	16237
   391  0000                     _PWM5CON	set	16238
   392  0000                     _PWM8DCL	set	16224
   393  0000                     _PWM8DCH	set	16225
   394  0000                     _PWM8CON	set	16226
   395  0000                     _PWM7DCL	set	16228
   396  0000                     _PWM7DCH	set	16229
   397  0000                     _PWM7CON	set	16230
   398  0000                     _PR4	set	16287
   399  0000                     _TMR4	set	16286
   400  0000                     _T4CONbits	set	16288
   401  0000                     _T4RSTbits	set	16291
   402  0000                     _T4HLTbits	set	16289
   403  0000                     _T4CON	set	16288
   404  0000                     _T4TMR	set	16286
   405  0000                     _T4PR	set	16287
   406  0000                     _T4RST	set	16291
   407  0000                     _T4HLT	set	16289
   408  0000                     _T4CLKCON	set	16290
   409  0000                     _T3GCONbits	set	16295
   410  0000                     _T3CONbits	set	16294
   411  0000                     _T3CON	set	16294
   412  0000                     _TMR3L	set	16292
   413  0000                     _TMR3H	set	16293
   414  0000                     _T3CLK	set	16297
   415  0000                     _T3GATE	set	16296
   416  0000                     _T3GCON	set	16295
   417  0000                     _T5GCONbits	set	16283
   418  0000                     _T5CONbits	set	16282
   419  0000                     _T5CON	set	16282
   420  0000                     _TMR5L	set	16280
   421  0000                     _TMR5H	set	16281
   422  0000                     _T5CLK	set	16285
   423  0000                     _T5GATE	set	16284
   424  0000                     _T5GCON	set	16283
   425  0000                     _CCPR4L	set	16240
   426  0000                     _CCPR4H	set	16241
   427  0000                     _CCP4CAP	set	16243
   428  0000                     _CCP4CON	set	16242
   429  0000                     _CCPR3L	set	16244
   430  0000                     _CCPR3H	set	16245
   431  0000                     _CCP3CAP	set	16247
   432  0000                     _CCP3CON	set	16246
   433  0000                     _PORTDbits	set	16333
   434  0000                     _IVTBASEL	set	16341
   435  0000                     _IVTBASEH	set	16342
   436  0000                     _IVTBASEU	set	16343
   437  0000                     _IVTLOCKbits	set	16340
   438  0000                     _IVTLOCK	set	16340
   439  0000                     _INTCON0bits	set	16338
   440  0000                     _TRISD	set	16325
   441  0000                     _TRISC	set	16324
   442  0000                     _TRISB	set	16323
   443  0000                     _TRISA	set	16322
   444  0000                     _TRISE	set	16326
   445  0000                     _LATC	set	16316
   446  0000                     _LATB	set	16315
   447  0000                     _LATA	set	16314
   448  0000                     _LATD	set	16317
   449  0000                     _LATE	set	16318
   450  0000                     _GIE	set	130711
   451                           
   452                           	psect	smallconst
   453  001000                     __psmallconst:
   454                           	callstack 0
   455  001000  00                 	db	0
   456  001001                     STR_4:
   457                           
   458                           ; BSR set to: 1
   459  001001  73                 	db	115	;'s'
   460  001002  74                 	db	116	;'t'
   461  001003  61                 	db	97	;'a'
   462  001004  72                 	db	114	;'r'
   463  001005  41                 	db	65	;'A'
   464  001006  63                 	db	99	;'c'
   465  001007  63                 	db	99	;'c'
   466  001008  65                 	db	101	;'e'
   467  001009  6C                 	db	108	;'l'
   468  00100A  50                 	db	80	;'P'
   469  00100B  6F                 	db	111	;'o'
   470  00100C  77                 	db	119	;'w'
   471  00100D  65                 	db	101	;'e'
   472  00100E  72                 	db	114	;'r'
   473  00100F  3A                 	db	58	;':'
   474  001010  20                 	db	32
   475  001011  25                 	db	37
   476  001012  64                 	db	100	;'d'
   477  001013  0A                 	db	10
   478  001014  00                 	db	0
   479  001015                     STR_3:
   480                           
   481                           ; BSR set to: 1
   482  001015  61                 	db	97	;'a'
   483  001016  63                 	db	99	;'c'
   484  001017  74                 	db	116	;'t'
   485  001018  4D                 	db	77	;'M'
   486  001019  50                 	db	80	;'P'
   487  00101A  6F                 	db	111	;'o'
   488  00101B  77                 	db	119	;'w'
   489  00101C  3A                 	db	58	;':'
   490  00101D  20                 	db	32
   491  00101E  25                 	db	37
   492  00101F  64                 	db	100	;'d'
   493  001020  0A                 	db	10
   494  001021  00                 	db	0
   495  001022                     STR_1:
   496                           
   497                           ; BSR set to: 1
   498  001022  42                 	db	66	;'B'
   499  001023  61                 	db	97	;'a'
   500  001024  74                 	db	116	;'t'
   501  001025  74                 	db	116	;'t'
   502  001026  65                 	db	101	;'e'
   503  001027  72                 	db	114	;'r'
   504  001028  79                 	db	121	;'y'
   505  001029  20                 	db	32
   506  00102A  4C                 	db	76	;'L'
   507  00102B  6F                 	db	111	;'o'
   508  00102C  77                 	db	119	;'w'
   509  00102D  00                 	db	0
   510  00102E                     STR_2:
   511                           
   512                           ; BSR set to: 1
   513  00102E  4D                 	db	77	;'M'
   514  00102F  50                 	db	80	;'P'
   515  001030  6F                 	db	111	;'o'
   516  001031  77                 	db	119	;'w'
   517  001032  3A                 	db	58	;':'
   518  001033  20                 	db	32
   519  001034  25                 	db	37
   520  001035  66                 	db	102	;'f'
   521  001036  0A                 	db	10
   522  001037  00                 	db	0
   523  001038                     STR_5:
   524                           
   525                           ; BSR set to: 1
   526  001038  49                 	db	73	;'I'
   527  001039  4E                 	db	78	;'N'
   528  00103A  46                 	db	70	;'F'
   529  00103B  00                 	db	0
   530  00103C                     STR_9:
   531                           
   532                           ; BSR set to: 1
   533  00103C  4E                 	db	78	;'N'
   534  00103D  41                 	db	65	;'A'
   535  00103E  4E                 	db	78	;'N'
   536  00103F  00                 	db	0
   537  001040                     STR_6:
   538                           
   539                           ; BSR set to: 1
   540  001040  69                 	db	105	;'i'
   541  001041  6E                 	db	110	;'n'
   542  001042  66                 	db	102	;'f'
   543  001043  00                 	db	0
   544  001044                     STR_10:
   545                           
   546                           ; BSR set to: 1
   547  001044  6E                 	db	110	;'n'
   548  001045  61                 	db	97	;'a'
   549  001046  6E                 	db	110	;'n'
   550  001047  00                 	db	0
   551  001048                     STR_13:
   552                           
   553                           ; BSR set to: 1
   554  001048  6C                 	db	108	;'l'
   555  001049  66                 	db	102	;'f'
   556  00104A  00                 	db	0
   557  00104B  00                 	db	0	; dummy byte at the end
   558  0000                     
   559                           ; #config settings
   560                           
   561                           	psect	cinit
   562  0054A4                     __pcinit:
   563                           	callstack 0
   564  0054A4                     start_initialization:
   565                           	callstack 0
   566  0054A4                     __initialization:
   567                           	callstack 0
   568                           
   569                           ; Initialize objects allocated to COMRAM (1 bytes)
   570                           ; load TBLPTR registers with __pidataCOMRAM
   571  0054A4  0EE2               	movlw	low __pidataCOMRAM
   572  0054A6  6EF6               	movwf	tblptrl,c
   573  0054A8  0E5D               	movlw	high __pidataCOMRAM
   574  0054AA  6EF7               	movwf	tblptrh,c
   575  0054AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   576  0054AE  6EF8               	movwf	tblptru,c
   577  0054B0  0009               	tblrd		*+	;fetch initializer
   578  0054B2  006F FFD4  F04C    	movff	tablat,__pdataCOMRAM
   579                           
   580                           ; Clear objects allocated to BANK1 (130 bytes)
   581  0054B8  EE00  F100         	lfsr	0,__pbssBANK1
   582  0054BC  0E82               	movlw	130
   583  0054BE                     clear_0:
   584  0054BE  6AEE               	clrf	postinc0,c
   585  0054C0  06E8               	decf	wreg,f,c
   586  0054C2  E1FD               	bnz	clear_0
   587                           
   588                           ; Clear objects allocated to BANK0 (27 bytes)
   589  0054C4  EE00  F0E3         	lfsr	0,__pbssBANK0
   590  0054C8  0E1B               	movlw	27
   591  0054CA                     clear_1:
   592  0054CA  6AEE               	clrf	postinc0,c
   593  0054CC  06E8               	decf	wreg,f,c
   594  0054CE  E1FD               	bnz	clear_1
   595                           
   596                           ; Clear objects allocated to COMRAM (18 bytes)
   597  0054D0  EE00  F03A         	lfsr	0,__pbssCOMRAM
   598  0054D4  0E12               	movlw	18
   599  0054D6                     clear_2:
   600  0054D6  6AEE               	clrf	postinc0,c
   601  0054D8  06E8               	decf	wreg,f,c
   602  0054DA  E1FD               	bnz	clear_2
   603                           
   604                           ;
   605                           ; Setup IVTBASE
   606                           ;
   607  0054DC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   608  0054DE  6ED5               	movwf	213,c
   609  0054E0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   610  0054E2  6ED6               	movwf	214,c
   611  0054E4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   612  0054E6  6ED7               	movwf	215,c
   613  0054E8                     end_of_initialization:
   614                           	callstack 0
   615  0054E8                     __end_of__initialization:
   616                           	callstack 0
   617  0054E8  0100               	movlb	0
   618  0054EA  EF3E  F02E         	goto	_main	;jump to C main() function
   619                           
   620                           	psect	bssCOMRAM
   621  00003A                     __pbssCOMRAM:
   622                           	callstack 0
   623  00003A                     _prec:
   624                           	callstack 0
   625  00003A                     	ds	2
   626  00003C                     _flags:
   627                           	callstack 0
   628  00003C                     	ds	2
   629  00003E                     _delay:
   630                           	callstack 0
   631  00003E                     	ds	1
   632  00003F                     _curveMode:
   633                           	callstack 0
   634  00003F                     	ds	1
   635  000040                     _uart1RxLastError:
   636                           	callstack 0
   637  000040                     	ds	1
   638  000041                     _uart1RxCount:
   639                           	callstack 0
   640  000041                     	ds	1
   641  000042                     _uart1RxTail:
   642                           	callstack 0
   643  000042                     	ds	1
   644  000043                     _uart1RxHead:
   645                           	callstack 0
   646  000043                     	ds	1
   647  000044                     _uart1TxTail:
   648                           	callstack 0
   649  000044                     	ds	1
   650  000045                     _uart1TxHead:
   651                           	callstack 0
   652  000045                     	ds	1
   653  000046                     _smtPeriod:
   654                           	callstack 0
   655  000046                     	ds	4
   656  00004A                     _distFront:
   657                           	callstack 0
   658  00004A                     	ds	2
   659                           
   660                           	psect	dataCOMRAM
   661  00004C                     __pdataCOMRAM:
   662                           	callstack 0
   663  00004C                     _driveMode:
   664                           	callstack 0
   665  00004C                     	ds	1
   666                           
   667                           	psect	bssBANK0
   668  0000E3                     __pbssBANK0:
   669                           	callstack 0
   670  0000E3                     _width:
   671                           	callstack 0
   672  0000E3                     	ds	2
   673  0000E5                     _BatteryVolt:
   674                           	callstack 0
   675  0000E5                     	ds	2
   676  0000E7                     _actMotorPow:
   677                           	callstack 0
   678  0000E7                     	ds	2
   679  0000E9                     _currentSpeed:
   680                           	callstack 0
   681  0000E9                     	ds	2
   682  0000EB                     _setSpeed:
   683                           	callstack 0
   684  0000EB                     	ds	2
   685  0000ED                     _oldDistRight:
   686                           	callstack 0
   687  0000ED                     	ds	2
   688  0000EF                     _oldDistLeft:
   689                           	callstack 0
   690  0000EF                     	ds	2
   691  0000F1                     _reverseCount:
   692                           	callstack 0
   693  0000F1                     	ds	2
   694  0000F3                     TMR4_ISR@CountCallBack:
   695                           	callstack 0
   696  0000F3                     	ds	2
   697  0000F5                     _distRightM:
   698                           	callstack 0
   699  0000F5                     	ds	2
   700  0000F7                     _distRight:
   701                           	callstack 0
   702  0000F7                     	ds	2
   703  0000F9                     _distLeftM:
   704                           	callstack 0
   705  0000F9                     	ds	2
   706  0000FB                     _distLeft:
   707                           	callstack 0
   708  0000FB                     	ds	2
   709  0000FD                     _cycle10ms:
   710                           	callstack 0
   711  0000FD                     	ds	1
   712                           
   713                           	psect	bssBANK1
   714  000100                     __pbssBANK1:
   715                           	callstack 0
   716  000100                     _uart1RxStatusBuffer:
   717                           	callstack 0
   718  000100                     	ds	8
   719  000108                     _uart1RxBuffer:
   720                           	callstack 0
   721  000108                     	ds	8
   722  000110                     _uart1TxBuffer:
   723                           	callstack 0
   724  000110                     	ds	8
   725  000118                     floorf@F527:
   726                           	callstack 0
   727  000118                     	ds	4
   728  00011C                     ___fpclassifyf@F465:
   729                           	callstack 0
   730  00011C                     	ds	4
   731  000120                     _smtWay:
   732                           	callstack 0
   733  000120                     	ds	4
   734  000124                     _smtDuty:
   735                           	callstack 0
   736  000124                     	ds	4
   737  000128                     _nout:
   738                           	callstack 0
   739  000128                     	ds	2
   740  00012A                     _reverseTime:
   741                           	callstack 0
   742  00012A                     	ds	2
   743  00012C                     _oldSpeed:
   744                           	callstack 0
   745  00012C                     	ds	2
   746  00012E                     _motPow:
   747                           	callstack 0
   748  00012E                     	ds	2
   749  000130                     _battCheckCount:
   750                           	callstack 0
   751  000130                     	ds	2
   752  000132                     _dbuf:
   753                           	callstack 0
   754  000132                     	ds	80
   755                           
   756                           	psect	cstackBANK1
   757  000198                     __pcstackBANK1:
   758                           	callstack 0
   759  000198                     ?_vfprintf:
   760                           	callstack 0
   761  000198                     vfprintf@fp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x0
   765  000198                     	ds	2
   766  00019A                     vfprintf@fmt:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x2
   770  00019A                     	ds	2
   771  00019C                     vfprintf@ap:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x4
   775  00019C                     	ds	2
   776  00019E                     vfprintf@cfmt:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x6
   780  00019E                     	ds	2
   781  0001A0                     ?_printf:
   782                           	callstack 0
   783  0001A0                     printf@fmt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x8
   787  0001A0                     	ds	6
   788  0001A6                     printf@ap:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0xE
   792  0001A6                     	ds	2
   793  0001A8                     startAccell@MPow:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x10
   797  0001A8                     	ds	4
   798                           
   799                           	psect	cstackBANK0
   800  000060                     __pcstackBANK0:
   801                           	callstack 0
   802  000060                     ?_dtoa:
   803                           	callstack 0
   804  000060                     ___flmul@sign:
   805                           	callstack 0
   806  000060                     dtoa@fp:
   807                           	callstack 0
   808  000060                     ___fldiv@rem:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x0
   812  000060                     	ds	1
   813  000061                     ___flmul@aexp:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x1
   817  000061                     	ds	1
   818  000062                     ___flmul@grs:
   819                           	callstack 0
   820  000062                     dtoa@d:
   821                           	callstack 0
   822                           
   823                           ; 8 bytes @ 0x2
   824  000062                     	ds	2
   825  000064                     ___fldiv@sign:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x4
   829  000064                     	ds	1
   830  000065                     ___fldiv@new_exp:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x5
   834  000065                     	ds	1
   835  000066                     ___flmul@bexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x6
   839  000066                     	ds	1
   840  000067                     ___fldiv@grs:
   841                           	callstack 0
   842  000067                     ___flmul@prod:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x7
   846  000067                     	ds	3
   847  00006A                     _dtoa$3526:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0xA
   851  00006A                     	ds	1
   852  00006B                     ___fldiv@bexp:
   853                           	callstack 0
   854  00006B                     ___flmul@temp:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0xB
   858  00006B                     	ds	1
   859  00006C                     ___fldiv@aexp:
   860                           	callstack 0
   861  00006C                     dtoa@p:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0xC
   865  00006C                     	ds	1
   866  00006D                     ??_floorf:
   867  00006D                     ?___fladd:
   868                           	callstack 0
   869  00006D                     ___flge@ff1:
   870                           	callstack 0
   871  00006D                     ___fladd@b:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0xD
   875  00006D                     	ds	1
   876  00006E                     dtoa@w:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xE
   880  00006E                     	ds	2
   881  000070                     dtoa@s:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x10
   885  000070                     	ds	1
   886  000071                     ___flge@ff2:
   887                           	callstack 0
   888  000071                     ___fladd@a:
   889                           	callstack 0
   890                           
   891                           ; 4 bytes @ 0x11
   892  000071                     	ds	1
   893  000072                     dtoa@n:
   894                           	callstack 0
   895                           
   896                           ; 8 bytes @ 0x12
   897  000072                     	ds	1
   898  000073                     floorf@m:
   899                           	callstack 0
   900                           
   901                           ; 4 bytes @ 0x13
   902  000073                     	ds	2
   903  000075                     ___fladd@signs:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x15
   907  000075                     	ds	1
   908  000076                     ___fladd@aexp:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x16
   912  000076                     	ds	1
   913  000077                     ___fladd@bexp:
   914                           	callstack 0
   915  000077                     floorf@e:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x17
   919  000077                     	ds	1
   920  000078                     ___fladd@grs:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x18
   924  000078                     	ds	1
   925  000079                     ?___flsub:
   926                           	callstack 0
   927  000079                     ?___fltol:
   928                           	callstack 0
   929  000079                     ___fltol@f1:
   930                           	callstack 0
   931  000079                     ___flsub@b:
   932                           	callstack 0
   933  000079                     floorf@u:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x19
   937  000079                     	ds	1
   938  00007A                     dtoa@i:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x1A
   942  00007A                     	ds	3
   943  00007D                     ??___fltol:
   944  00007D                     ___flsub@a:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x1D
   948  00007D                     	ds	4
   949  000081                     ___fltol@sign1:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x21
   953  000081                     	ds	1
   954  000082                     ___fltol@exp1:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x22
   958  000082                     	ds	1
   959  000083                     ??_calcSpeed:
   960  000083                     ??_calcMotorPow:
   961  000083                     ?_efgtoa:
   962                           	callstack 0
   963  000083                     setSteering@steering:
   964                           	callstack 0
   965  000083                     efgtoa@fp:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x23
   969  000083                     	ds	2
   970  000085                     setSteering@steeringMode:
   971                           	callstack 0
   972  000085                     calcMotorPow@setSpeedDelta:
   973                           	callstack 0
   974  000085                     efgtoa@f:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x25
   978  000085                     	ds	1
   979  000086                     ??_setSteering:
   980                           
   981                           ; 1 bytes @ 0x26
   982  000086                     	ds	1
   983  000087                     calcSpeed@speed:
   984                           	callstack 0
   985  000087                     calcMotorPow@oldSpeedDelta:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x27
   989  000087                     	ds	1
   990  000088                     setSteering@steeringF:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x28
   994  000088                     	ds	1
   995  000089                     calcMotorPow@addMPow:
   996                           	callstack 0
   997  000089                     efgtoa@c:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x29
  1001  000089                     	ds	1
  1002  00008A                     ??_efgtoa:
  1003  00008A                     setSteering@steeringB:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x2A
  1007  00008A                     	ds	2
  1008  00008C                     ??_calcSteering:
  1009                           
  1010                           ; 1 bytes @ 0x2C
  1011  00008C                     	ds	2
  1012  00008E                     calcSteering@delta:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x2E
  1016  00008E                     	ds	1
  1017  00008F                     _efgtoa$3550:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2F
  1021  00008F                     	ds	2
  1022  000091                     _efgtoa$3551:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x31
  1026  000091                     	ds	2
  1027  000093                     _efgtoa$3555:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x33
  1031  000093                     	ds	2
  1032  000095                     _efgtoa$3559:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x35
  1036  000095                     	ds	2
  1037  000097                     _efgtoa$3560:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x37
  1041  000097                     	ds	2
  1042  000099                     _efgtoa$3561:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x39
  1046  000099                     	ds	2
  1047  00009B                     efgtoa@t:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x3B
  1051  00009B                     	ds	2
  1052  00009D                     efgtoa@pp:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x3D
  1056  00009D                     	ds	2
  1057  00009F                     efgtoa@ne:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x3F
  1061  00009F                     	ds	2
  1062  0000A1                     efgtoa@m:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x41
  1066  0000A1                     	ds	2
  1067  0000A3                     efgtoa@ou:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x43
  1071  0000A3                     	ds	4
  1072  0000A7                     efgtoa@d:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x47
  1076  0000A7                     	ds	2
  1077  0000A9                     efgtoa@sign:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x49
  1081  0000A9                     	ds	2
  1082  0000AB                     efgtoa@p:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x4B
  1086  0000AB                     	ds	2
  1087  0000AD                     efgtoa@w:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x4D
  1091  0000AD                     	ds	2
  1092  0000AF                     efgtoa@nmode:
  1093                           	callstack 0
  1094                           
  1095                           ; 1 bytes @ 0x4F
  1096  0000AF                     	ds	1
  1097  0000B0                     efgtoa@mode:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x50
  1101  0000B0                     	ds	1
  1102  0000B1                     efgtoa@h:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x51
  1106  0000B1                     	ds	4
  1107  0000B5                     efgtoa@l:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x55
  1111  0000B5                     	ds	4
  1112  0000B9                     efgtoa@i:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x59
  1116  0000B9                     	ds	2
  1117  0000BB                     efgtoa@g:
  1118                           	callstack 0
  1119                           
  1120                           ; 4 bytes @ 0x5B
  1121  0000BB                     	ds	4
  1122  0000BF                     efgtoa@e:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x5F
  1126  0000BF                     	ds	2
  1127  0000C1                     efgtoa@n:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x61
  1131  0000C1                     	ds	2
  1132  0000C3                     efgtoa@u:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x63
  1136  0000C3                     	ds	4
  1137  0000C7                     ?_vfpfcnvrt:
  1138                           	callstack 0
  1139  0000C7                     vfpfcnvrt@fp:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x67
  1143  0000C7                     	ds	2
  1144  0000C9                     vfpfcnvrt@fmt:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x69
  1148  0000C9                     	ds	2
  1149  0000CB                     vfpfcnvrt@ap:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x6B
  1153  0000CB                     	ds	2
  1154  0000CD                     ??_vfpfcnvrt:
  1155                           
  1156                           ; 1 bytes @ 0x6D
  1157  0000CD                     	ds	4
  1158  0000D1                     vfpfcnvrt@ll:
  1159                           	callstack 0
  1160                           
  1161                           ; 8 bytes @ 0x71
  1162  0000D1                     	ds	8
  1163  0000D9                     _vfpfcnvrt$3579:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x79
  1167  0000D9                     	ds	2
  1168  0000DB                     vfpfcnvrt@f:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x7B
  1172  0000DB                     	ds	4
  1173  0000DF                     vfpfcnvrt@ct:
  1174                           	callstack 0
  1175                           
  1176                           ; 3 bytes @ 0x7F
  1177  0000DF                     	ds	3
  1178  0000E2                     vfpfcnvrt@c:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x82
  1182  0000E2                     	ds	1
  1183                           
  1184                           	psect	cstackCOMRAM
  1185  000001                     __pcstackCOMRAM:
  1186                           	callstack 0
  1187  000001                     CCP3_DefaultCallBack@capturedValue:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x0
  1191  000001                     	ds	2
  1192  000003                     CCP3_CaptureISR@module:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x2
  1196  000003                     	ds	2
  1197  000005                     CCP4_DefaultCallBack@capturedValue:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x4
  1201  000005                     	ds	2
  1202  000007                     CCP4_CaptureISR@module:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x6
  1206  000007                     	ds	2
  1207  000009                     ?_TMR5_ReadTimer:
  1208                           	callstack 0
  1209  000009                     TMR5_WriteTimer@timerVal:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x8
  1213  000009                     	ds	2
  1214  00000B                     ??_TMR5_ReadTimer:
  1215  00000B                     
  1216                           ; 1 bytes @ 0xA
  1217  00000B                     	ds	2
  1218  00000D                     TMR5_ReadTimer@readVal:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0xC
  1222  00000D                     	ds	2
  1223  00000F                     TMR5_ReadTimer@readValHigh:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0xE
  1227  00000F                     	ds	1
  1228  000010                     TMR5_ReadTimer@readValLow:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0xF
  1232  000010                     	ds	1
  1233  000011                     ??_UART1_tx_vect_isr:
  1234  000011                     
  1235                           ; 1 bytes @ 0x10
  1236  000011                     	ds	1
  1237  000012                     ??_UART1_rx_vect_isr:
  1238                           
  1239                           ; 1 bytes @ 0x11
  1240  000012                     	ds	1
  1241  000013                     ??_TMR4_ISR:
  1242                           
  1243                           ; 1 bytes @ 0x12
  1244  000013                     	ds	1
  1245  000014                     ??_TMR3_Initialize:
  1246  000014                     ??_getCurve:
  1247  000014                     ?_strlen:
  1248                           	callstack 0
  1249  000014                     ?___fpclassifyf:
  1250                           	callstack 0
  1251  000014                     ?_isupper:
  1252                           	callstack 0
  1253  000014                     ?_strncmp:
  1254                           	callstack 0
  1255  000014                     ?_ADCC_GetSingleConversion:
  1256                           	callstack 0
  1257  000014                     ?___awdiv:
  1258                           	callstack 0
  1259  000014                     ?___awmod:
  1260                           	callstack 0
  1261  000014                     ?___aldiv:
  1262                           	callstack 0
  1263  000014                     ?___flneg:
  1264                           	callstack 0
  1265  000014                     ?___aodiv:
  1266                           	callstack 0
  1267  000014                     ?___aomod:
  1268                           	callstack 0
  1269  000014                     UART1_Write@txData:
  1270                           	callstack 0
  1271  000014                     INTERRUPT_Initialize@state:
  1272                           	callstack 0
  1273  000014                     UART1_SetFramingErrorHandler@interruptHandler:
  1274                           	callstack 0
  1275  000014                     UART1_SetOverrunErrorHandler@interruptHandler:
  1276                           	callstack 0
  1277  000014                     UART1_SetErrorHandler@interruptHandler:
  1278                           	callstack 0
  1279  000014                     UART1_SetRxInterruptHandler@InterruptHandler:
  1280                           	callstack 0
  1281  000014                     UART1_SetTxInterruptHandler@InterruptHandler:
  1282                           	callstack 0
  1283  000014                     CCP3_SetCallBack@customCallBack:
  1284                           	callstack 0
  1285  000014                     CCP4_SetCallBack@customCallBack:
  1286                           	callstack 0
  1287  000014                     TMR5_SetGateInterruptHandler@InterruptHandler:
  1288                           	callstack 0
  1289  000014                     TMR4_SetInterruptHandler@InterruptHandler:
  1290                           	callstack 0
  1291  000014                     PWM7_LoadDutyValue@dutyValue:
  1292                           	callstack 0
  1293  000014                     PWM8_LoadDutyValue@dutyValue:
  1294                           	callstack 0
  1295  000014                     PWM5_LoadDutyValue@dutyValue:
  1296                           	callstack 0
  1297  000014                     PWM6_LoadDutyValue@dutyValue:
  1298                           	callstack 0
  1299  000014                     ___awdiv@dividend:
  1300                           	callstack 0
  1301  000014                     ___awmod@dividend:
  1302                           	callstack 0
  1303  000014                     isupper@c:
  1304                           	callstack 0
  1305  000014                     strcpy@dest:
  1306                           	callstack 0
  1307  000014                     strlen@s:
  1308                           	callstack 0
  1309  000014                     strncmp@_l:
  1310                           	callstack 0
  1311  000014                     ___aldiv@dividend:
  1312                           	callstack 0
  1313  000014                     ___fleq@ff1:
  1314                           	callstack 0
  1315  000014                     ___flneg@f1:
  1316                           	callstack 0
  1317  000014                     ___fpclassifyf@x:
  1318                           	callstack 0
  1319  000014                     ___aodiv@dividend:
  1320                           	callstack 0
  1321  000014                     ___aomod@dividend:
  1322                           	callstack 0
  1323                           
  1324                           ; 8 bytes @ 0x13
  1325  000014                     	ds	1
  1326  000015                     putch@txData:
  1327                           	callstack 0
  1328                           
  1329                           ; 1 bytes @ 0x14
  1330  000015                     	ds	1
  1331  000016                     ??_TMR5_Initialize:
  1332  000016                     ??_isupper:
  1333  000016                     ??_PWM7_LoadDutyValue:
  1334  000016                     ??_PWM8_LoadDutyValue:
  1335  000016                     ??_PWM5_LoadDutyValue:
  1336  000016                     ??_PWM6_LoadDutyValue:
  1337  000016                     ??_ADCC_GetSingleConversion:
  1338  000016                     getCurve@deltaRight:
  1339                           	callstack 0
  1340  000016                     ___awdiv@divisor:
  1341                           	callstack 0
  1342  000016                     ___awmod@divisor:
  1343                           	callstack 0
  1344  000016                     fputc@c:
  1345                           	callstack 0
  1346  000016                     strcpy@src:
  1347                           	callstack 0
  1348  000016                     strlen@a:
  1349                           	callstack 0
  1350  000016                     strncmp@_r:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x15
  1354  000016                     	ds	2
  1355  000018                     ??___fpclassifyf:
  1356  000018                     ??_strcpy:
  1357  000018                     ADCC_GetSingleConversion@channel:
  1358                           	callstack 0
  1359  000018                     ___awdiv@counter:
  1360                           	callstack 0
  1361  000018                     ___awmod@counter:
  1362                           	callstack 0
  1363  000018                     getCurve@deltaLeft:
  1364                           	callstack 0
  1365  000018                     setMotor@motorPower:
  1366                           	callstack 0
  1367  000018                     fputc@fp:
  1368                           	callstack 0
  1369  000018                     strncmp@n:
  1370                           	callstack 0
  1371  000018                     ___aldiv@divisor:
  1372                           	callstack 0
  1373  000018                     ___fleq@ff2:
  1374                           	callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x17
  1377  000018                     	ds	1
  1378  000019                     ___awdiv@sign:
  1379                           	callstack 0
  1380  000019                     ___awmod@sign:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x18
  1384  000019                     	ds	1
  1385  00001A                     ??_setMotor:
  1386  00001A                     ??_fputc:
  1387  00001A                     ??_strncmp:
  1388  00001A                     ?_tolower:
  1389                           	callstack 0
  1390  00001A                     ___awdiv@quotient:
  1391                           	callstack 0
  1392  00001A                     strcpy@s:
  1393                           	callstack 0
  1394  00001A                     tolower@c:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x19
  1398  00001A                     	ds	1
  1399  00001B                     strncmp@l:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x1A
  1403  00001B                     	ds	1
  1404  00001C                     ??_tolower:
  1405  00001C                     ??___fleq:
  1406  00001C                     ?___xxtofl:
  1407                           	callstack 0
  1408  00001C                     ___aldiv@counter:
  1409                           	callstack 0
  1410  00001C                     ___fpclassifyf@e:
  1411                           	callstack 0
  1412  00001C                     strcpy@d:
  1413                           	callstack 0
  1414  00001C                     ___xxtofl@val:
  1415                           	callstack 0
  1416  00001C                     ___aodiv@divisor:
  1417                           	callstack 0
  1418  00001C                     ___aomod@divisor:
  1419                           	callstack 0
  1420                           
  1421                           ; 8 bytes @ 0x1B
  1422  00001C                     	ds	1
  1423  00001D                     ___aldiv@sign:
  1424                           	callstack 0
  1425  00001D                     strncmp@r:
  1426                           	callstack 0
  1427                           
  1428                           ; 2 bytes @ 0x1C
  1429  00001D                     	ds	1
  1430  00001E                     ___aldiv@quotient:
  1431                           	callstack 0
  1432  00001E                     ___fpclassifyf@u:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x1D
  1436  00001E                     	ds	1
  1437  00001F                     fputs@s:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x1E
  1441  00001F                     	ds	1
  1442  000020                     ??___xxtofl:
  1443  000020                     _tolower$3672:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x1F
  1447  000020                     	ds	1
  1448  000021                     fputs@fp:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x20
  1452  000021                     	ds	1
  1453  000022                     ?_actSpeed:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x21
  1457  000022                     	ds	1
  1458  000023                     fputs@c:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x22
  1462  000023                     	ds	1
  1463  000024                     ___aodiv@counter:
  1464                           	callstack 0
  1465  000024                     ___aomod@counter:
  1466                           	callstack 0
  1467  000024                     ___xxtofl@sign:
  1468                           	callstack 0
  1469  000024                     actSpeed@speed:
  1470                           	callstack 0
  1471  000024                     fputs@i:
  1472                           	callstack 0
  1473                           
  1474                           ; 2 bytes @ 0x23
  1475  000024                     	ds	1
  1476  000025                     ___aodiv@sign:
  1477                           	callstack 0
  1478  000025                     ___aomod@sign:
  1479                           	callstack 0
  1480  000025                     ___xxtofl@exp:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x24
  1484  000025                     	ds	1
  1485  000026                     ?_abs:
  1486                           	callstack 0
  1487  000026                     ?_pad:
  1488                           	callstack 0
  1489  000026                     pad@fp:
  1490                           	callstack 0
  1491  000026                     abs@a:
  1492                           	callstack 0
  1493  000026                     ___xxtofl@arg:
  1494                           	callstack 0
  1495  000026                     ___aodiv@quotient:
  1496                           	callstack 0
  1497                           
  1498                           ; 8 bytes @ 0x25
  1499  000026                     	ds	2
  1500  000028                     ??_abs:
  1501  000028                     pad@buf:
  1502                           	callstack 0
  1503                           
  1504                           ; 2 bytes @ 0x27
  1505  000028                     	ds	2
  1506  00002A                     ?___fldiv:
  1507                           	callstack 0
  1508  00002A                     ?___flmul:
  1509                           	callstack 0
  1510  00002A                     pad@p:
  1511                           	callstack 0
  1512  00002A                     ___fldiv@b:
  1513                           	callstack 0
  1514  00002A                     ___flmul@b:
  1515                           	callstack 0
  1516                           
  1517                           ; 4 bytes @ 0x29
  1518  00002A                     	ds	2
  1519  00002C                     ??_pad:
  1520                           
  1521                           ; 1 bytes @ 0x2B
  1522  00002C                     	ds	1
  1523  00002D                     pad@i:
  1524                           	callstack 0
  1525                           
  1526                           ; 2 bytes @ 0x2C
  1527  00002D                     	ds	1
  1528  00002E                     ___fldiv@a:
  1529                           	callstack 0
  1530  00002E                     ___flmul@a:
  1531                           	callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x2D
  1534  00002E                     	ds	1
  1535  00002F                     pad@w:
  1536                           	callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x2E
  1539  00002F                     	ds	2
  1540  000031                     ??_dtoa:
  1541                           
  1542                           ; 1 bytes @ 0x30
  1543  000031                     	ds	1
  1544  000032                     ??___fldiv:
  1545  000032                     ??___flmul:
  1546                           
  1547                           ; 1 bytes @ 0x31
  1548  000032                     	ds	4
  1549  000036                     ??___fladd:
  1550  000036                     ??___flge:
  1551  000036                     ?_floorf:
  1552                           	callstack 0
  1553  000036                     floorf@x:
  1554                           	callstack 0
  1555                           
  1556                           ; 4 bytes @ 0x35
  1557  000036                     	ds	4
  1558  00003A                     
  1559                           ; 1 bytes @ 0x39
  1560 ;;
  1561 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1562 ;;
  1563 ;; *************** function _main *****************
  1564 ;; Defined at:
  1565 ;;		line 8 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels required when called: 19
  1585 ;; This function calls:
  1586 ;;		_SYSTEM_Initialize
  1587 ;;		_TMR4_SetInterruptHandler
  1588 ;;		_loop
  1589 ;; This function is called by:
  1590 ;;		Startup code after reset
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text0
  1595  005C7C                     __ptext0:
  1596                           	callstack 0
  1597  005C7C                     _main:
  1598                           	callstack 12
  1599  005C7C                     
  1600                           ;main.c: 9:     SYSTEM_Initialize();
  1601  005C7C  EC77  F02A         	call	_SYSTEM_Initialize	;wreg free
  1602  005C80                     
  1603                           ;main.c: 10:     (INTCON0bits.GIEH = 1);
  1604  005C80  8ED2               	bsf	210,7,c	;volatile
  1605  005C82                     
  1606                           ;main.c: 11:     (INTCON0bits.GIEL = 1);
  1607  005C82  8CD2               	bsf	210,6,c	;volatile
  1608                           
  1609                           ;main.c: 12:     TMR4_SetInterruptHandler(TMR4_10msISR);
  1610  005C84  0ED4               	movlw	low _TMR4_10msISR
  1611  005C86  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  1612  005C88  0E5D               	movlw	high _TMR4_10msISR
  1613  005C8A  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  1614  005C8C  ECD8  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
  1615  005C90                     l9103:
  1616                           
  1617                           ;main.c: 15:         loop();
  1618  005C90  EC89  F021         	call	_loop	;wreg free
  1619  005C94  EF48  F02E         	goto	l9103
  1620  005C98  EF57  F000         	goto	start
  1621  005C9C                     __end_of_main:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _loop *****************
  1625 ;; Defined at:
  1626 ;;		line 19 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;		None
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;Total ram usage:        0 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 18
  1647 ;; This function calls:
  1648 ;;		___flge
  1649 ;;		___xxtofl
  1650 ;;		_calcMotorPow
  1651 ;;		_calcSpeed
  1652 ;;		_calcSteering
  1653 ;;		_checkBatt
  1654 ;;		_getBatteryVoltage
  1655 ;;		_getCurve
  1656 ;;		_getReverse
  1657 ;;		_printf
  1658 ;;		_setMotor
  1659 ;;		_setSteering
  1660 ;;		_startAccell
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text1
  1667  004312                     __ptext1:
  1668                           	callstack 0
  1669  004312                     _loop:
  1670                           	callstack 12
  1671  004312                     
  1672                           ;main.c: 20:     setMotor(0);
  1673  004312  0E00               	movlw	0
  1674  004314  6E19               	movwf	(setMotor@motorPower+1)^0,c
  1675  004316  0E00               	movlw	0
  1676  004318  6E18               	movwf	setMotor@motorPower^0,c
  1677  00431A  EC2E  F025         	call	_setMotor	;wreg free
  1678                           
  1679                           ;main.c: 21:     setSteering(0, Front);
  1680  00431E  0E00               	movlw	0
  1681  004320  0100               	movlb	0	; () banked
  1682  004322  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1683  004324  0E00               	movlw	0
  1684  004326  6F83               	movwf	setSteering@steering& (0+255),b
  1685  004328  0E03               	movlw	3
  1686  00432A  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1687  00432C  ECF7  F01B         	call	_setSteering	;wreg free
  1688  004330                     l1222:
  1689  004330  B8CB               	btfsc	203,4,c	;volatile
  1690  004332  EF9D  F021         	goto	u10041
  1691  004336  EF9F  F021         	goto	u10040
  1692  00433A                     u10041:
  1693  00433A  EF98  F021         	goto	l1222
  1694  00433E                     u10040:
  1695  00433E                     l9057:
  1696  00433E  0100               	movlb	0	; () banked
  1697  004340  51FD               	movf	_cycle10ms& (0+255),w,b	;volatile
  1698  004342  B4D8               	btfsc	status,2,c
  1699  004344  EFA6  F021         	goto	u10051
  1700  004348  EFA8  F021         	goto	u10050
  1701  00434C                     u10051:
  1702  00434C  EF9F  F021         	goto	l9057
  1703  004350                     u10050:
  1704  004350                     
  1705                           ; BSR set to: 0
  1706                           ;main.c: 26:         cycle10ms = 0;
  1707  004350  0E00               	movlw	0
  1708  004352  6FFD               	movwf	_cycle10ms& (0+255),b	;volatile
  1709  004354                     
  1710                           ; BSR set to: 0
  1711                           ;main.c: 28:         getBatteryVoltage();
  1712  004354  ECA6  F02E         	call	_getBatteryVoltage	;wreg free
  1713  004358                     
  1714                           ;main.c: 29:     } while (BatteryVolt < ((6.8) * 409.6));
  1715  004358  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  1716  00435C  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  1717  004360  6A1E               	clrf	(___xxtofl@val+2)^0,c
  1718  004362  6A1F               	clrf	(___xxtofl@val+3)^0,c
  1719  004364  0E00               	movlw	0
  1720  004366  ECD3  F01D         	call	___xxtofl
  1721  00436A  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  1722  00436E  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  1723  004372  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  1724  004376  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  1725  00437A  0E7B               	movlw	123
  1726  00437C  0100               	movlb	0	; () banked
  1727  00437E  6F71               	movwf	___flge@ff2& (0+255),b
  1728  004380  0E14               	movlw	20
  1729  004382  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  1730  004384  0E2E               	movlw	46
  1731  004386  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  1732  004388  0E45               	movlw	69
  1733  00438A  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  1734  00438C  ECB2  F023         	call	___flge	;wreg free
  1735  004390  0100               	movlb	0	; () banked
  1736  004392  A0D8               	btfss	status,0,c
  1737  004394  EFCE  F021         	goto	u10061
  1738  004398  EFD0  F021         	goto	u10060
  1739  00439C                     u10061:
  1740  00439C  EF9F  F021         	goto	l9057
  1741  0043A0                     u10060:
  1742  0043A0                     
  1743                           ; BSR set to: 0
  1744                           ;main.c: 31:     startAccell();
  1745  0043A0  EC71  F01F         	call	_startAccell	;wreg free
  1746  0043A4                     
  1747                           ;main.c: 32:     driveMode = Straight;
  1748  0043A4  0E01               	movlw	1
  1749  0043A6  6E4C               	movwf	_driveMode^0,c
  1750  0043A8                     
  1751                           ;main.c: 33:     curveMode = OutCurve;
  1752  0043A8  0E00               	movlw	0
  1753  0043AA  6E3F               	movwf	_curveMode^0,c
  1754  0043AC                     
  1755                           ;main.c: 34:     oldDistLeft = distLeft;
  1756  0043AC  C0FB  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  1757  0043B0  C0FC  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  1758  0043B4                     
  1759                           ;main.c: 35:     oldDistRight = distRight;
  1760  0043B4  C0F7  F0ED         	movff	_distRight,_oldDistRight	;volatile
  1761  0043B8  C0F8  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  1762  0043BC                     
  1763                           ;main.c: 36:     cycle10ms = 0;
  1764  0043BC  0E00               	movlw	0
  1765  0043BE  0100               	movlb	0	; () banked
  1766  0043C0  6FFD               	movwf	_cycle10ms& (0+255),b	;volatile
  1767  0043C2                     l9077:
  1768  0043C2  0100               	movlb	0	; () banked
  1769  0043C4  51FD               	movf	_cycle10ms& (0+255),w,b	;volatile
  1770  0043C6  B4D8               	btfsc	status,2,c
  1771  0043C8  EFE8  F021         	goto	u10071
  1772  0043CC  EFEA  F021         	goto	u10070
  1773  0043D0                     u10071:
  1774  0043D0  EFE1  F021         	goto	l9077
  1775  0043D4                     u10070:
  1776  0043D4                     
  1777                           ; BSR set to: 0
  1778                           ;main.c: 39:         cycle10ms = 0;
  1779  0043D4  0E00               	movlw	0
  1780  0043D6  6FFD               	movwf	_cycle10ms& (0+255),b	;volatile
  1781  0043D8                     
  1782                           ; BSR set to: 0
  1783                           ;main.c: 41:         if (!PORTBbits.RB5) {
  1784  0043D8  BACB               	btfsc	203,5,c	;volatile
  1785  0043DA  EFF1  F021         	goto	u10081
  1786  0043DE  EFF3  F021         	goto	u10080
  1787  0043E2                     u10081:
  1788  0043E2  EF05  F022         	goto	l9087
  1789  0043E6                     u10080:
  1790  0043E6                     
  1791                           ; BSR set to: 0
  1792                           ;main.c: 42:             setSpeed = 0;
  1793  0043E6  0E00               	movlw	0
  1794  0043E8  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  1795  0043EA  0E00               	movlw	0
  1796  0043EC  6FEB               	movwf	_setSpeed& (0+255),b
  1797                           
  1798                           ;main.c: 43:             actMotorPow = 0;
  1799  0043EE  0E00               	movlw	0
  1800  0043F0  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1801  0043F2  0E00               	movlw	0
  1802  0043F4  6FE7               	movwf	_actMotorPow& (0+255),b
  1803  0043F6                     
  1804                           ; BSR set to: 0
  1805                           ;main.c: 44:             setSteering(0, Front);
  1806  0043F6  0E00               	movlw	0
  1807  0043F8  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1808  0043FA  0E00               	movlw	0
  1809  0043FC  6F83               	movwf	setSteering@steering& (0+255),b
  1810  0043FE  0E03               	movlw	3
  1811  004400  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1812  004402  ECF7  F01B         	call	_setSteering	;wreg free
  1813                           
  1814                           ;main.c: 45:             break;
  1815  004406  EF24  F022         	goto	l1238
  1816  00440A                     l9087:
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;main.c: 48:         if (checkBatt()) {
  1820  00440A  ECBC  F028         	call	_checkBatt	;wreg free
  1821  00440E  0900               	iorlw	0
  1822  004410  B4D8               	btfsc	status,2,c
  1823  004412  EF0D  F022         	goto	u10091
  1824  004416  EF0F  F022         	goto	u10090
  1825  00441A                     u10091:
  1826  00441A  EF18  F022         	goto	l9091
  1827  00441E                     u10090:
  1828  00441E                     
  1829                           ;main.c: 49:             printf("Battery Low");
  1830  00441E  0E22               	movlw	low STR_1
  1831  004420  0101               	movlb	1	; () banked
  1832  004422  6FA0               	movwf	printf@fmt& (0+255),b
  1833  004424  0E10               	movlw	high STR_1
  1834  004426  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1835  004428  ECF2  F02D         	call	_printf	;wreg free
  1836                           
  1837                           ;main.c: 50:             break;
  1838  00442C  EF24  F022         	goto	l1238
  1839  004430                     l9091:
  1840                           
  1841                           ;main.c: 53:         getCurve();
  1842  004430  ECD9  F018         	call	_getCurve	;wreg free
  1843                           
  1844                           ;main.c: 54:         getReverse();
  1845  004434  EC2F  F023         	call	_getReverse	;wreg free
  1846                           
  1847                           ;main.c: 56:         calcSteering();
  1848  004438  ECF2  F01C         	call	_calcSteering	;wreg free
  1849  00443C                     
  1850                           ;main.c: 57:         calcSpeed();
  1851  00443C  ECF2  F01A         	call	_calcSpeed	;wreg free
  1852  004440                     
  1853                           ;main.c: 58:         calcMotorPow();
  1854  004440  ECE3  F020         	call	_calcMotorPow	;wreg free
  1855  004444  EFE1  F021         	goto	l9077
  1856  004448                     l1238:
  1857  004448  0012               	return		;funcret
  1858  00444A                     __end_of_loop:
  1859                           	callstack 0
  1860                           
  1861 ;; *************** function _startAccell *****************
  1862 ;; Defined at:
  1863 ;;		line 98 in file "main.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  MPow            4   16[BANK1 ] float 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;Total ram usage:        4 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 17
  1884 ;; This function calls:
  1885 ;;		___flge
  1886 ;;		___flmul
  1887 ;;		___fltol
  1888 ;;		___xxtofl
  1889 ;;		_calcSteering
  1890 ;;		_printf
  1891 ;;		_setMotor
  1892 ;;		_setSteering
  1893 ;; This function is called by:
  1894 ;;		_loop
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text2
  1899  003EE2                     __ptext2:
  1900                           	callstack 0
  1901  003EE2                     _startAccell:
  1902                           	callstack 12
  1903  003EE2                     
  1904                           ;main.c: 99:     setSteering(0, Front);
  1905  003EE2  0E00               	movlw	0
  1906  003EE4  0100               	movlb	0	; () banked
  1907  003EE6  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  1908  003EE8  0E00               	movlw	0
  1909  003EEA  6F83               	movwf	setSteering@steering& (0+255),b
  1910  003EEC  0E03               	movlw	3
  1911  003EEE  6F85               	movwf	setSteering@steeringMode& (0+255),b
  1912  003EF0  ECF7  F01B         	call	_setSteering	;wreg free
  1913  003EF4                     
  1914                           ;main.c: 100:     driveMode = Accel;
  1915  003EF4  0E00               	movlw	0
  1916  003EF6  6E4C               	movwf	_driveMode^0,c
  1917  003EF8                     
  1918                           ;main.c: 102:     actMotorPow = (40);
  1919  003EF8  0E00               	movlw	0
  1920  003EFA  0100               	movlb	0	; () banked
  1921  003EFC  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  1922  003EFE  0E28               	movlw	40
  1923  003F00  6FE7               	movwf	_actMotorPow& (0+255),b
  1924                           
  1925                           ;main.c: 103:     float MPow = actMotorPow;
  1926  003F02  C0E7  F01C         	movff	_actMotorPow,___xxtofl@val
  1927  003F06  C0E8  F01D         	movff	_actMotorPow+1,___xxtofl@val+1
  1928  003F0A  0E00               	movlw	0
  1929  003F0C  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  1930  003F0E  0EFF               	movlw	-1
  1931  003F10  6E1E               	movwf	(___xxtofl@val+2)^0,c
  1932  003F12  6E1F               	movwf	(___xxtofl@val+3)^0,c
  1933  003F14  0E01               	movlw	1
  1934  003F16  ECD3  F01D         	call	___xxtofl
  1935  003F1A  C01C  F1A8         	movff	?___xxtofl,startAccell@MPow
  1936  003F1E  C01D  F1A9         	movff	?___xxtofl+1,startAccell@MPow+1
  1937  003F22  C01E  F1AA         	movff	?___xxtofl+2,startAccell@MPow+2
  1938  003F26  C01F  F1AB         	movff	?___xxtofl+3,startAccell@MPow+3
  1939  003F2A                     
  1940                           ;main.c: 104:         printf("MPow: %f\n",MPow);
  1941  003F2A  0E2E               	movlw	low STR_2
  1942  003F2C  0101               	movlb	1	; () banked
  1943  003F2E  6FA0               	movwf	printf@fmt& (0+255),b
  1944  003F30  0E10               	movlw	high STR_2
  1945  003F32  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1946  003F34  C1A8  F1A2         	movff	startAccell@MPow,?_printf+2
  1947  003F38  C1A9  F1A3         	movff	startAccell@MPow+1,?_printf+3
  1948  003F3C  C1AA  F1A4         	movff	startAccell@MPow+2,?_printf+4
  1949  003F40  C1AB  F1A5         	movff	startAccell@MPow+3,?_printf+5
  1950  003F44  ECF2  F02D         	call	_printf	;wreg free
  1951                           
  1952                           ;main.c: 105:     while (MPow < (250)) {
  1953  003F48  EFEC  F01F         	goto	l8927
  1954  003F4C                     l8913:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;main.c: 106:         MPow *= (1.1);
  1958  003F4C  C1A8  F02A         	movff	startAccell@MPow,___flmul@b
  1959  003F50  C1A9  F02B         	movff	startAccell@MPow+1,___flmul@b+1
  1960  003F54  C1AA  F02C         	movff	startAccell@MPow+2,___flmul@b+2
  1961  003F58  C1AB  F02D         	movff	startAccell@MPow+3,___flmul@b+3
  1962  003F5C  0ECD               	movlw	205
  1963  003F5E  6E2E               	movwf	___flmul@a^0,c
  1964  003F60  0ECC               	movlw	204
  1965  003F62  6E2F               	movwf	(___flmul@a+1)^0,c
  1966  003F64  0E8C               	movlw	140
  1967  003F66  6E30               	movwf	(___flmul@a+2)^0,c
  1968  003F68  0E3F               	movlw	63
  1969  003F6A  6E31               	movwf	(___flmul@a+3)^0,c
  1970  003F6C  EC70  F013         	call	___flmul	;wreg free
  1971  003F70  C02A  F1A8         	movff	?___flmul,startAccell@MPow
  1972  003F74  C02B  F1A9         	movff	?___flmul+1,startAccell@MPow+1
  1973  003F78  C02C  F1AA         	movff	?___flmul+2,startAccell@MPow+2
  1974  003F7C  C02D  F1AB         	movff	?___flmul+3,startAccell@MPow+3
  1975  003F80                     
  1976                           ;main.c: 107:         actMotorPow = (int16_t) MPow;
  1977  003F80  C1A8  F079         	movff	startAccell@MPow,___fltol@f1
  1978  003F84  C1A9  F07A         	movff	startAccell@MPow+1,___fltol@f1+1
  1979  003F88  C1AA  F07B         	movff	startAccell@MPow+2,___fltol@f1+2
  1980  003F8C  C1AB  F07C         	movff	startAccell@MPow+3,___fltol@f1+3
  1981  003F90  ECAB  F022         	call	___fltol	;wreg free
  1982  003F94  C079  F0E7         	movff	?___fltol,_actMotorPow
  1983  003F98  C07A  F0E8         	movff	?___fltol+1,_actMotorPow+1
  1984  003F9C                     
  1985                           ;main.c: 108:         setMotor(actMotorPow);
  1986  003F9C  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  1987  003FA0  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  1988  003FA4  EC2E  F025         	call	_setMotor	;wreg free
  1989  003FA8                     
  1990                           ;main.c: 109:         printf("actMPow: %d\n",actMotorPow);
  1991  003FA8  0E15               	movlw	low STR_3
  1992  003FAA  0101               	movlb	1	; () banked
  1993  003FAC  6FA0               	movwf	printf@fmt& (0+255),b
  1994  003FAE  0E10               	movlw	high STR_3
  1995  003FB0  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  1996  003FB2  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  1997  003FB6  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  1998  003FBA  ECF2  F02D         	call	_printf	;wreg free
  1999  003FBE                     
  2000                           ;main.c: 110:         calcSteering();
  2001  003FBE  ECF2  F01C         	call	_calcSteering	;wreg free
  2002  003FC2                     
  2003                           ;main.c: 112:         cycle10ms = 0;
  2004  003FC2  0E00               	movlw	0
  2005  003FC4  0100               	movlb	0	; () banked
  2006  003FC6  6FFD               	movwf	_cycle10ms& (0+255),b	;volatile
  2007  003FC8                     l8925:
  2008                           
  2009                           ; BSR set to: 0
  2010  003FC8  51FD               	movf	_cycle10ms& (0+255),w,b	;volatile
  2011  003FCA  B4D8               	btfsc	status,2,c
  2012  003FCC  EFEA  F01F         	goto	u9881
  2013  003FD0  EFEC  F01F         	goto	u9880
  2014  003FD4                     u9881:
  2015  003FD4  EFE4  F01F         	goto	l8925
  2016  003FD8                     u9880:
  2017  003FD8                     l8927:
  2018                           
  2019                           ;main.c: 105:     while (MPow < (250)) {
  2020  003FD8  C1A8  F06D         	movff	startAccell@MPow,___flge@ff1
  2021  003FDC  C1A9  F06E         	movff	startAccell@MPow+1,___flge@ff1+1
  2022  003FE0  C1AA  F06F         	movff	startAccell@MPow+2,___flge@ff1+2
  2023  003FE4  C1AB  F070         	movff	startAccell@MPow+3,___flge@ff1+3
  2024  003FE8  0E00               	movlw	0
  2025  003FEA  0100               	movlb	0	; () banked
  2026  003FEC  6F71               	movwf	___flge@ff2& (0+255),b
  2027  003FEE  0E00               	movlw	0
  2028  003FF0  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  2029  003FF2  0E7A               	movlw	122
  2030  003FF4  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  2031  003FF6  0E43               	movlw	67
  2032  003FF8  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  2033  003FFA  ECB2  F023         	call	___flge	;wreg free
  2034  003FFE  0100               	movlb	0	; () banked
  2035  004000  A0D8               	btfss	status,0,c
  2036  004002  EF05  F020         	goto	u9891
  2037  004006  EF07  F020         	goto	u9890
  2038  00400A                     u9891:
  2039  00400A  EFA6  F01F         	goto	l8913
  2040  00400E                     u9890:
  2041  00400E                     
  2042                           ; BSR set to: 0
  2043                           ;main.c: 116:     actMotorPow = (250);
  2044  00400E  0E00               	movlw	0
  2045  004010  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
  2046  004012  0EFA               	movlw	250
  2047  004014  6FE7               	movwf	_actMotorPow& (0+255),b
  2048  004016                     
  2049                           ; BSR set to: 0
  2050                           ;main.c: 117:     setMotor(actMotorPow);
  2051  004016  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
  2052  00401A  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
  2053  00401E  EC2E  F025         	call	_setMotor	;wreg free
  2054  004022                     
  2055                           ;main.c: 118:     printf("starAccelPower: %d\n", actMotorPow);
  2056  004022  0E01               	movlw	low STR_4
  2057  004024  0101               	movlb	1	; () banked
  2058  004026  6FA0               	movwf	printf@fmt& (0+255),b
  2059  004028  0E10               	movlw	high STR_4
  2060  00402A  6FA1               	movwf	(printf@fmt+1)& (0+255),b
  2061  00402C  C0E7  F1A2         	movff	_actMotorPow,?_printf+2
  2062  004030  C0E8  F1A3         	movff	_actMotorPow+1,?_printf+3
  2063  004034  ECF2  F02D         	call	_printf	;wreg free
  2064  004038                     
  2065                           ;main.c: 120:     cycle10ms = 0;
  2066  004038  0E00               	movlw	0
  2067  00403A  0100               	movlb	0	; () banked
  2068  00403C  6FFD               	movwf	_cycle10ms& (0+255),b	;volatile
  2069                           
  2070                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2071  00403E  EF23  F020         	goto	l8939
  2072  004042                     l8937:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 122:         calcSteering();
  2076  004042  ECF2  F01C         	call	_calcSteering	;wreg free
  2077  004046                     l8939:
  2078                           
  2079                           ;main.c: 121:     while (cycle10ms < ((50) - (20))){
  2080  004046  0E1D               	movlw	29
  2081  004048  0100               	movlb	0	; () banked
  2082  00404A  65FD               	cpfsgt	_cycle10ms& (0+255),b	;volatile
  2083  00404C  EF2A  F020         	goto	u9901
  2084  004050  EF2C  F020         	goto	u9900
  2085  004054                     u9901:
  2086  004054  EF21  F020         	goto	l8937
  2087  004058                     u9900:
  2088  004058                     
  2089                           ; BSR set to: 0
  2090                           ;main.c: 124:     driveMode = Straight;
  2091  004058  0E01               	movlw	1
  2092  00405A  6E4C               	movwf	_driveMode^0,c
  2093  00405C                     
  2094                           ; BSR set to: 0
  2095                           ;main.c: 125:     calcSteering();
  2096  00405C  ECF2  F01C         	call	_calcSteering	;wreg free
  2097  004060  0012               	return		;funcret
  2098  004062                     __end_of_startAccell:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _printf *****************
  2102 ;; Defined at:
  2103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  fmt             2    8[BANK1 ] PTR const unsigned char 
  2106 ;;		 -> STR_4(20), STR_3(13), STR_2(10), STR_1(12), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  ap              2   14[BANK1 ] PTR void [1]
  2109 ;;		 -> ?_printf(2), 
  2110 ;;  ret             2    0        int 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  2    8[BANK1 ] int 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2120 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;Total ram usage:        8 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 16
  2127 ;; This function calls:
  2128 ;;		_vfprintf
  2129 ;; This function is called by:
  2130 ;;		_loop
  2131 ;;		_startAccell
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text3
  2136  005BE4                     __ptext3:
  2137                           	callstack 0
  2138  005BE4                     _printf:
  2139                           	callstack 12
  2140  005BE4  0EA2               	movlw	low (?_printf+2)
  2141  005BE6  0101               	movlb	1	; () banked
  2142  005BE8  6FA6               	movwf	printf@ap& (0+255),b
  2143  005BEA  0E01               	movlw	high (?_printf+2)
  2144  005BEC  6FA7               	movwf	(printf@ap+1)& (0+255),b
  2145  005BEE                     
  2146                           ; BSR set to: 1
  2147  005BEE  0E00               	movlw	0
  2148  005BF0  6F98               	movwf	vfprintf@fp& (0+255),b
  2149  005BF2  0E00               	movlw	0
  2150  005BF4  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  2151  005BF6  C1A0  F19A         	movff	printf@fmt,vfprintf@fmt
  2152  005BFA  C1A1  F19B         	movff	printf@fmt+1,vfprintf@fmt+1
  2153  005BFE  0EA6               	movlw	low printf@ap
  2154  005C00  6F9C               	movwf	vfprintf@ap& (0+255),b
  2155  005C02  0E01               	movlw	high printf@ap
  2156  005C04  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  2157  005C06  EC05  F029         	call	_vfprintf	;wreg free
  2158  005C0A  0012               	return		;funcret
  2159  005C0C                     __end_of_printf:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _vfprintf *****************
  2163 ;; Defined at:
  2164 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  2167 ;;		 -> NULL(0), 
  2168 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2169 ;;		 -> STR_4(20), STR_3(13), STR_2(10), STR_1(12), 
  2170 ;;  ap              2    4[BANK1 ] PTR PTR void 
  2171 ;;		 -> printf@ap(2), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  cfmt            2    6[BANK1 ] PTR unsigned char 
  2174 ;;		 -> STR_4(20), STR_3(13), STR_2(10), STR_1(12), 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  2    0[BANK1 ] int 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2184 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;Total ram usage:        8 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 15
  2191 ;; This function calls:
  2192 ;;		_vfpfcnvrt
  2193 ;; This function is called by:
  2194 ;;		_printf
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text4
  2199  00520A                     __ptext4:
  2200                           	callstack 0
  2201  00520A                     _vfprintf:
  2202                           	callstack 12
  2203  00520A                     
  2204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2205  00520A  C19A  F19E         	movff	vfprintf@fmt,vfprintf@cfmt
  2206  00520E  C19B  F19F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2207  005212                     
  2208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2209  005212  0E00               	movlw	0
  2210  005214  0101               	movlb	1	; () banked
  2211  005216  6F29               	movwf	(_nout+1)& (0+255),b
  2212  005218  0E00               	movlw	0
  2213  00521A  6F28               	movwf	_nout& (0+255),b
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2216  00521C  EF27  F029         	goto	l8823
  2217  005220                     l8821:
  2218                           
  2219                           ; BSR set to: 1
  2220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2221  005220  C198  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  2222  005224  C199  F0C8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2223  005228  0E9E               	movlw	low vfprintf@cfmt
  2224  00522A  0100               	movlb	0	; () banked
  2225  00522C  6FC9               	movwf	vfpfcnvrt@fmt& (0+255),b
  2226  00522E  0E01               	movlw	high vfprintf@cfmt
  2227  005230  6FCA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2228  005232  C19C  F0CB         	movff	vfprintf@ap,vfpfcnvrt@ap
  2229  005236  C19D  F0CC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2230  00523A  EC7D  F00E         	call	_vfpfcnvrt	;wreg free
  2231  00523E  0100               	movlb	0	; () banked
  2232  005240  51C7               	movf	?_vfpfcnvrt& (0+255),w,b
  2233  005242  0101               	movlb	1	; () banked
  2234  005244  2728               	addwf	_nout& (0+255),f,b
  2235  005246  0100               	movlb	0	; () banked
  2236  005248  51C8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2237  00524A  0101               	movlb	1	; () banked
  2238  00524C  2329               	addwfc	(_nout+1)& (0+255),f,b
  2239  00524E                     l8823:
  2240                           
  2241                           ; BSR set to: 1
  2242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2243  00524E  0060  F67B  FFF6   	movff	vfprintf@cfmt,tblptrl
  2244  005254  0060  F67F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2245  00525A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2246  00525A  6AF8               	clrf	tblptru,c
  2247  00525C                     	endif
  2248  00525C                     	if	0	;tblptru may be non-zero
  2249  00525C                     	endif
  2250  00525C  0008               	tblrd		*
  2251  00525E  50F5               	movf	tablat,w,c
  2252  005260  0900               	iorlw	0
  2253  005262  A4D8               	btfss	status,2,c
  2254  005264  EF36  F029         	goto	u9791
  2255  005268  EF38  F029         	goto	u9790
  2256  00526C                     u9791:
  2257  00526C  EF10  F029         	goto	l8821
  2258  005270                     u9790:
  2259  005270                     
  2260                           ; BSR set to: 1
  2261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2262  005270  C128  F198         	movff	_nout,?_vfprintf
  2263  005274  C129  F199         	movff	_nout+1,?_vfprintf+1
  2264  005278                     
  2265                           ; BSR set to: 1
  2266  005278  0012               	return		;funcret
  2267  00527A                     __end_of_vfprintf:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function _vfpfcnvrt *****************
  2271 ;; Defined at:
  2272 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  2275 ;;		 -> NULL(0), 
  2276 ;;  fmt             2  105[BANK0 ] PTR PTR unsigned char 
  2277 ;;		 -> vfprintf@cfmt(2), 
  2278 ;;  ap              2  107[BANK0 ] PTR PTR void 
  2279 ;;		 -> printf@ap(2), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  ll              8  113[BANK0 ] long long 
  2282 ;;  llu             8    0        unsigned long long 
  2283 ;;  f               4  123[BANK0 ] unsigned long long 
  2284 ;;  ct              3  127[BANK0 ] unsigned char [3]
  2285 ;;  vp              3    0        PTR void 
  2286 ;;  cp              3    0        PTR unsigned char 
  2287 ;;  i               2    0        int 
  2288 ;;  done            2    0        int 
  2289 ;;  c               1  130[BANK0 ] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  2  103[BANK0 ] int 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:       28 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 14
  2306 ;; This function calls:
  2307 ;;		_dtoa
  2308 ;;		_efgtoa
  2309 ;;		_fputc
  2310 ;;		_isupper
  2311 ;;		_strncmp
  2312 ;;		_tolower
  2313 ;; This function is called by:
  2314 ;;		_vfprintf
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text5
  2319  001CFA                     __ptext5:
  2320                           	callstack 0
  2321  001CFA                     _vfpfcnvrt:
  2322                           	callstack 12
  2323  001CFA                     
  2324                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2325  001CFA  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2326  001D00  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2327  001D06  006F FF7B FFF6     	movff	postinc2,tblptrl
  2328  001D0C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2329  001D12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2330  001D12  6AF8               	clrf	tblptru,c
  2331  001D14                     	endif
  2332  001D14                     	if	0	;tblptru may be non-zero
  2333  001D14                     	endif
  2334  001D14  0008               	tblrd		*
  2335  001D16  50F5               	movf	tablat,w,c
  2336  001D18  0A25               	xorlw	37
  2337  001D1A  A4D8               	btfss	status,2,c
  2338  001D1C  EF92  F00E         	goto	u9621
  2339  001D20  EF94  F00E         	goto	u9620
  2340  001D24                     u9621:
  2341  001D24  EFEC  F010         	goto	l8763
  2342  001D28                     u9620:
  2343  001D28                     
  2344                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2345  001D28  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2346  001D2E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2347  001D34  2ADE               	incf	postinc2,f,c
  2348  001D36  0E00               	movlw	0
  2349  001D38  22DD               	addwfc	postdec2,f,c
  2350  001D3A                     
  2351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2352  001D3A  0E00               	movlw	0
  2353  001D3C  0100               	movlb	0	; () banked
  2354  001D3E  6FE4               	movwf	(_width+1)& (0+255),b
  2355  001D40  0E00               	movlw	0
  2356  001D42  6FE3               	movwf	_width& (0+255),b
  2357  001D44  C0E3  F03C         	movff	_width,_flags
  2358  001D48  C0E4  F03D         	movff	_width+1,_flags+1
  2359  001D4C                     
  2360                           ; BSR set to: 0
  2361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2362  001D4C  683A               	setf	_prec^0,c
  2363  001D4E  683B               	setf	(_prec+1)^0,c
  2364  001D50                     
  2365                           ; BSR set to: 0
  2366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2367  001D50  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2368  001D56  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2369  001D5C  006F FF7B FFF6     	movff	postinc2,tblptrl
  2370  001D62  006F FF77 FFF7     	movff	postdec2,tblptrh
  2371  001D68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2372  001D68  6AF8               	clrf	tblptru,c
  2373  001D6A                     	endif
  2374  001D6A                     	if	0	;tblptru may be non-zero
  2375  001D6A                     	endif
  2376  001D6A  0008               	tblrd		*
  2377  001D6C  50F5               	movf	tablat,w,c
  2378  001D6E  6E1A               	movwf	tolower@c^0,c
  2379  001D70  6A1B               	clrf	(tolower@c+1)^0,c
  2380  001D72  ECA3  F029         	call	_tolower	;wreg free
  2381  001D76  501A               	movf	?_tolower^0,w,c
  2382  001D78  0100               	movlb	0	; () banked
  2383  001D7A  6FDF               	movwf	vfpfcnvrt@ct& (0+255),b
  2384  001D7C                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2387  001D7C  51DF               	movf	vfpfcnvrt@ct& (0+255),w,b
  2388  001D7E  B4D8               	btfsc	status,2,c
  2389  001D80  EFC4  F00E         	goto	u9631
  2390  001D84  EFC6  F00E         	goto	u9630
  2391  001D88                     u9631:
  2392  001D88  EF0E  F00F         	goto	l8709
  2393  001D8C                     u9630:
  2394  001D8C                     
  2395                           ; BSR set to: 0
  2396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2397  001D8C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2398  001D92  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  001D98  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  2400  001D9E  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  2401  001DA4  0E01               	movlw	1
  2402  001DA6  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2403  001DA8  0E00               	movlw	0
  2404  001DAA  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2405  001DAC  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2406  001DB2  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2407  001DB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2408  001DB8  6AF8               	clrf	tblptru,c
  2409  001DBA                     	endif
  2410  001DBA                     	if	0	;tblptru may be non-zero
  2411  001DBA                     	endif
  2412  001DBA  0008               	tblrd		*
  2413  001DBC  50F5               	movf	tablat,w,c
  2414  001DBE  6E1A               	movwf	tolower@c^0,c
  2415  001DC0  6A1B               	clrf	(tolower@c+1)^0,c
  2416  001DC2  ECA3  F029         	call	_tolower	;wreg free
  2417  001DC6  501A               	movf	?_tolower^0,w,c
  2418  001DC8  0100               	movlb	0	; () banked
  2419  001DCA  6FE0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2420  001DCC                     
  2421                           ; BSR set to: 0
  2422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2423  001DCC  51E0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2424  001DCE  B4D8               	btfsc	status,2,c
  2425  001DD0  EFEC  F00E         	goto	u9641
  2426  001DD4  EFEE  F00E         	goto	u9640
  2427  001DD8                     u9641:
  2428  001DD8  EF0E  F00F         	goto	l8709
  2429  001DDC                     u9640:
  2430  001DDC                     
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2433  001DDC  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2434  001DE2  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2435  001DE8  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  2436  001DEE  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  2437  001DF4  0E02               	movlw	2
  2438  001DF6  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2439  001DF8  0E00               	movlw	0
  2440  001DFA  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2441  001DFC  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2442  001E02  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2443  001E08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2444  001E08  6AF8               	clrf	tblptru,c
  2445  001E0A                     	endif
  2446  001E0A                     	if	0	;tblptru may be non-zero
  2447  001E0A                     	endif
  2448  001E0A  0008               	tblrd		*
  2449  001E0C  50F5               	movf	tablat,w,c
  2450  001E0E  6E1A               	movwf	tolower@c^0,c
  2451  001E10  6A1B               	clrf	(tolower@c+1)^0,c
  2452  001E12  ECA3  F029         	call	_tolower	;wreg free
  2453  001E16  501A               	movf	?_tolower^0,w,c
  2454  001E18  0100               	movlb	0	; () banked
  2455  001E1A  6FE1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2456  001E1C                     l8709:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2460  001E1C  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2461  001E22  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2462  001E28  006F FF7B FFF6     	movff	postinc2,tblptrl
  2463  001E2E  006F FF77 FFF7     	movff	postdec2,tblptrh
  2464  001E34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2465  001E34  6AF8               	clrf	tblptru,c
  2466  001E36                     	endif
  2467  001E36                     	if	0	;tblptru may be non-zero
  2468  001E36                     	endif
  2469  001E36  0008               	tblrd		*
  2470  001E38  50F5               	movf	tablat,w,c
  2471  001E3A  0A64               	xorlw	100
  2472  001E3C  B4D8               	btfsc	status,2,c
  2473  001E3E  EF23  F00F         	goto	u9651
  2474  001E42  EF25  F00F         	goto	u9650
  2475  001E46                     u9651:
  2476  001E46  EF3C  F00F         	goto	l8713
  2477  001E4A                     u9650:
  2478  001E4A                     
  2479                           ; BSR set to: 0
  2480  001E4A  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2481  001E50  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2482  001E56  006F FF7B FFF6     	movff	postinc2,tblptrl
  2483  001E5C  006F FF77 FFF7     	movff	postdec2,tblptrh
  2484  001E62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2485  001E62  6AF8               	clrf	tblptru,c
  2486  001E64                     	endif
  2487  001E64                     	if	0	;tblptru may be non-zero
  2488  001E64                     	endif
  2489  001E64  0008               	tblrd		*
  2490  001E66  50F5               	movf	tablat,w,c
  2491  001E68  0A69               	xorlw	105
  2492  001E6A  A4D8               	btfss	status,2,c
  2493  001E6C  EF3A  F00F         	goto	u9661
  2494  001E70  EF3C  F00F         	goto	u9660
  2495  001E74                     u9661:
  2496  001E74  EF86  F00F         	goto	l8719
  2497  001E78                     u9660:
  2498  001E78                     l8713:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2502  001E78  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2503  001E7E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2504  001E84  2ADE               	incf	postinc2,f,c
  2505  001E86  0E00               	movlw	0
  2506  001E88  22DD               	addwfc	postdec2,f,c
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2509  001E8A  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2510  001E90  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2511  001E96  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  2512  001E9C  0E02               	movlw	2
  2513  001E9E  26DE               	addwf	postinc2,f,c
  2514  001EA0  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  2515  001EA6  0E00               	movlw	0
  2516  001EA8  22DD               	addwfc	postdec2,f,c
  2517  001EAA  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2518  001EB0  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2519  001EB6  006F FF78  F0D1    	movff	postinc2,vfpfcnvrt@ll
  2520  001EBC  006F FF74  F0D2    	movff	postdec2,vfpfcnvrt@ll+1
  2521  001EC2  0E00               	movlw	0
  2522  001EC4  BFD2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2523  001EC6  0EFF               	movlw	-1
  2524  001EC8  6FD3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2525  001ECA  6FD4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2526  001ECC  6FD5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2527  001ECE  6FD6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2528  001ED0  6FD7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2529  001ED2  6FD8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2530  001ED4                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2533  001ED4  C0C7  F060         	movff	vfpfcnvrt@fp,dtoa@fp
  2534  001ED8  C0C8  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2535  001EDC  C0D1  F062         	movff	vfpfcnvrt@ll,dtoa@d
  2536  001EE0  C0D2  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2537  001EE4  C0D3  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2538  001EE8  C0D4  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2539  001EEC  C0D5  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2540  001EF0  C0D6  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2541  001EF4  C0D7  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2542  001EF8  C0D8  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2543  001EFC  EC66  F017         	call	_dtoa	;wreg free
  2544  001F00  C060  F0C7         	movff	?_dtoa,?_vfpfcnvrt
  2545  001F04  C061  F0C8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2546  001F08  EF0E  F011         	goto	l2245
  2547  001F0C                     l8719:
  2548                           
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2551  001F0C  0E66               	movlw	102
  2552  001F0E  19DF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2553  001F10  A4D8               	btfss	status,2,c
  2554  001F12  EF8D  F00F         	goto	u9671
  2555  001F16  EF8F  F00F         	goto	u9670
  2556  001F1A                     u9671:
  2557  001F1A  EFE1  F00F         	goto	l8731
  2558  001F1E                     u9670:
  2559  001F1E                     
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2562  001F1E  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2563  001F24  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2564  001F2A  006F FF7B FFF6     	movff	postinc2,tblptrl
  2565  001F30  006F FF77 FFF7     	movff	postdec2,tblptrh
  2566  001F36                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2567  001F36  6AF8               	clrf	tblptru,c
  2568  001F38                     	endif
  2569  001F38                     	if	0	;tblptru may be non-zero
  2570  001F38                     	endif
  2571  001F38  0008               	tblrd		*
  2572  001F3A  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  2573  001F40                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2576  001F40  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2577  001F46  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2578  001F4C  2ADE               	incf	postinc2,f,c
  2579  001F4E  0E00               	movlw	0
  2580  001F50  22DD               	addwfc	postdec2,f,c
  2581  001F52                     
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2584  001F52  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2585  001F58  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2586  001F5E  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  2587  001F64  0E04               	movlw	4
  2588  001F66  26DE               	addwf	postinc2,f,c
  2589  001F68  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  2590  001F6E  0E00               	movlw	0
  2591  001F70  22DD               	addwfc	postdec2,f,c
  2592  001F72  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2593  001F78  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2594  001F7E  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  2595  001F84  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  2596  001F8A  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  2597  001F90  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  2598  001F96                     
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2601  001F96  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  2602  001F9A  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2603  001F9E  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  2604  001FA2  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2605  001FA6  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2606  001FAA  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2607  001FAE  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  2608  001FB2  EC26  F008         	call	_efgtoa	;wreg free
  2609  001FB6  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  2610  001FBA  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2611  001FBE  EF0E  F011         	goto	l2245
  2612  001FC2                     l8731:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2616  001FC2  0EDF               	movlw	low vfpfcnvrt@ct
  2617  001FC4  6E14               	movwf	strncmp@_l^0,c
  2618  001FC6  0E00               	movlw	high vfpfcnvrt@ct
  2619  001FC8  6E15               	movwf	(strncmp@_l+1)^0,c
  2620  001FCA  0E48               	movlw	low STR_13
  2621  001FCC  6E16               	movwf	strncmp@_r^0,c
  2622  001FCE  0E10               	movlw	high STR_13
  2623  001FD0  6E17               	movwf	(strncmp@_r+1)^0,c
  2624  001FD2  0E00               	movlw	0
  2625  001FD4  6E19               	movwf	(strncmp@n+1)^0,c
  2626  001FD6  0E02               	movlw	2
  2627  001FD8  6E18               	movwf	strncmp@n^0,c
  2628  001FDA  ECB4  F024         	call	_strncmp	;wreg free
  2629  001FDE  5014               	movf	?_strncmp^0,w,c
  2630  001FE0  1015               	iorwf	(?_strncmp+1)^0,w,c
  2631  001FE2  A4D8               	btfss	status,2,c
  2632  001FE4  EFF6  F00F         	goto	u9681
  2633  001FE8  EFF8  F00F         	goto	u9680
  2634  001FEC                     u9681:
  2635  001FEC  EFAB  F010         	goto	l8747
  2636  001FF0                     u9680:
  2637  001FF0                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2639  001FF0  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2640  001FF6  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2641  001FFC  006F FF78  F0CD    	movff	postinc2,??_vfpfcnvrt
  2642  002002  006F FF74  F0CE    	movff	postdec2,??_vfpfcnvrt+1
  2643  002008  0E01               	movlw	1
  2644  00200A  0100               	movlb	0	; () banked
  2645  00200C  27CD               	addwf	??_vfpfcnvrt& (0+255),f,b
  2646  00200E  0E00               	movlw	0
  2647  002010  23CE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2648  002012  0060  F337  FFF6   	movff	??_vfpfcnvrt,tblptrl
  2649  002018  0060  F33B  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  2650  00201E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2651  00201E  6AF8               	clrf	tblptru,c
  2652  002020                     	endif
  2653  002020                     	if	0	;tblptru may be non-zero
  2654  002020                     	endif
  2655  002020  0008               	tblrd		*
  2656  002022  006F FFD4  F0E2    	movff	tablat,vfpfcnvrt@c
  2657  002028  0EBF               	movlw	191
  2658  00202A  6FCD               	movwf	??_vfpfcnvrt& (0+255),b
  2659  00202C  0EFF               	movlw	255
  2660  00202E  6FCE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2661  002030  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2662  002036  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2663  00203C  006F FF7B FFF6     	movff	postinc2,tblptrl
  2664  002042  006F FF77 FFF7     	movff	postdec2,tblptrh
  2665  002048                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2666  002048  6AF8               	clrf	tblptru,c
  2667  00204A                     	endif
  2668  00204A                     	if	0	;tblptru may be non-zero
  2669  00204A                     	endif
  2670  00204A  0008               	tblrd		*
  2671  00204C  50F5               	movf	tablat,w,c
  2672  00204E  6FCF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2673  002050  6BD0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2674  002052  51CD               	movf	??_vfpfcnvrt& (0+255),w,b
  2675  002054  27CF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2676  002056  51CE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2677  002058  23D0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2678  00205A  51D0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2679  00205C  E10A               	bnz	u9690
  2680  00205E  0E1A               	movlw	26
  2681  002060  5DCF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2682  002062  A0D8               	btfss	status,0,c
  2683  002064  EF36  F010         	goto	u9691
  2684  002068  EF39  F010         	goto	u9690
  2685  00206C                     u9691:
  2686  00206C  0E01               	movlw	1
  2687  00206E  EF3A  F010         	goto	u9700
  2688  002072                     u9690:
  2689  002072  0E00               	movlw	0
  2690  002074                     u9700:
  2691  002074  6FD9               	movwf	_vfpfcnvrt$3579& (0+255),b
  2692  002076  6BDA               	clrf	(_vfpfcnvrt$3579+1)& (0+255),b
  2693  002078                     
  2694                           ; BSR set to: 0
  2695  002078  51D9               	movf	_vfpfcnvrt$3579& (0+255),w,b
  2696  00207A  11DA               	iorwf	(_vfpfcnvrt$3579+1)& (0+255),w,b
  2697  00207C  B4D8               	btfsc	status,2,c
  2698  00207E  EF43  F010         	goto	u9711
  2699  002082  EF45  F010         	goto	u9710
  2700  002086                     u9711:
  2701  002086  EF69  F010         	goto	l8741
  2702  00208A                     u9710:
  2703  00208A                     
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2706  00208A  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2707  002090  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2708  002096  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  2709  00209C  0E04               	movlw	4
  2710  00209E  26DE               	addwf	postinc2,f,c
  2711  0020A0  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  2712  0020A6  0E00               	movlw	0
  2713  0020A8  22DD               	addwfc	postdec2,f,c
  2714  0020AA  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2715  0020B0  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2716  0020B6  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  2717  0020BC  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  2718  0020C2  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  2719  0020C8  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2722  0020CE  EF8B  F010         	goto	l2253
  2723  0020D2                     l8741:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2727  0020D2  0060  F32F  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2728  0020D8  0060  F333  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2729  0020DE  006F FF7C  F0CD    	movff	indf2,??_vfpfcnvrt
  2730  0020E4  0E04               	movlw	4
  2731  0020E6  26DE               	addwf	postinc2,f,c
  2732  0020E8  006F FF7C  F0CE    	movff	indf2,??_vfpfcnvrt+1
  2733  0020EE  0E00               	movlw	0
  2734  0020F0  22DD               	addwfc	postdec2,f,c
  2735  0020F2  0060  F337  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2736  0020F8  0060  F33B  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2737  0020FE  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f
  2738  002104  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+1
  2739  00210A  006F FF78  F0DD    	movff	postinc2,vfpfcnvrt@f+2
  2740  002110  006F FF78  F0DE    	movff	postinc2,vfpfcnvrt@f+3
  2741  002116                     l2253:
  2742                           
  2743                           ; BSR set to: 0
  2744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2745  002116  0E02               	movlw	2
  2746  002118  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2747  00211E  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  002124  26DE               	addwf	postinc2,f,c
  2749  002126  0E00               	movlw	0
  2750  002128  22DD               	addwfc	postdec2,f,c
  2751  00212A                     
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2754  00212A  C0C7  F083         	movff	vfpfcnvrt@fp,efgtoa@fp
  2755  00212E  C0C8  F084         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2756  002132  C0DB  F085         	movff	vfpfcnvrt@f,efgtoa@f
  2757  002136  C0DC  F086         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2758  00213A  C0DD  F087         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2759  00213E  C0DE  F088         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2760  002142  C0E2  F089         	movff	vfpfcnvrt@c,efgtoa@c
  2761  002146  EC26  F008         	call	_efgtoa	;wreg free
  2762  00214A  C083  F0C7         	movff	?_efgtoa,?_vfpfcnvrt
  2763  00214E  C084  F0C8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2764  002152  EF0E  F011         	goto	l2245
  2765  002156                     l8747:
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2768  002156  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2769  00215C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2770  002162  006F FF7B FFF6     	movff	postinc2,tblptrl
  2771  002168  006F FF77 FFF7     	movff	postdec2,tblptrh
  2772  00216E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2773  00216E  6AF8               	clrf	tblptru,c
  2774  002170                     	endif
  2775  002170                     	if	0	;tblptru may be non-zero
  2776  002170                     	endif
  2777  002170  0008               	tblrd		*
  2778  002172  50F5               	movf	tablat,w,c
  2779  002174  0A25               	xorlw	37
  2780  002176  A4D8               	btfss	status,2,c
  2781  002178  EFC0  F010         	goto	u9721
  2782  00217C  EFC2  F010         	goto	u9720
  2783  002180                     u9721:
  2784  002180  EFDC  F010         	goto	l8757
  2785  002184                     u9720:
  2786  002184                     
  2787                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2788  002184  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2789  00218A  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2790  002190  2ADE               	incf	postinc2,f,c
  2791  002192  0E00               	movlw	0
  2792  002194  22DD               	addwfc	postdec2,f,c
  2793  002196                     
  2794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2795  002196  0E00               	movlw	0
  2796  002198  6E17               	movwf	(fputc@c+1)^0,c
  2797  00219A  0E25               	movlw	37
  2798  00219C  6E16               	movwf	fputc@c^0,c
  2799  00219E  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2800  0021A2  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2801  0021A6  EC27  F028         	call	_fputc	;wreg free
  2802  0021AA                     l8753:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2805  0021AA  0E00               	movlw	0
  2806  0021AC  0100               	movlb	0	; () banked
  2807  0021AE  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2808  0021B0  0E01               	movlw	1
  2809  0021B2  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  2810  0021B4  EF0E  F011         	goto	l2245
  2811  0021B8                     l8757:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2814  0021B8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2815  0021BE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2816  0021C4  2ADE               	incf	postinc2,f,c
  2817  0021C6  0E00               	movlw	0
  2818  0021C8  22DD               	addwfc	postdec2,f,c
  2819  0021CA                     
  2820                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2821  0021CA  0E00               	movlw	0
  2822  0021CC  0100               	movlb	0	; () banked
  2823  0021CE  6FC8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2824  0021D0  0E00               	movlw	0
  2825  0021D2  6FC7               	movwf	?_vfpfcnvrt& (0+255),b
  2826  0021D4  EF0E  F011         	goto	l2245
  2827  0021D8                     l8763:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2830  0021D8  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2831  0021DE  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2832  0021E4  006F FF7B FFF6     	movff	postinc2,tblptrl
  2833  0021EA  006F FF77 FFF7     	movff	postdec2,tblptrh
  2834  0021F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2835  0021F0  6AF8               	clrf	tblptru,c
  2836  0021F2                     	endif
  2837  0021F2                     	if	0	;tblptru may be non-zero
  2838  0021F2                     	endif
  2839  0021F2  0008               	tblrd		*
  2840  0021F4  50F5               	movf	tablat,w,c
  2841  0021F6  6E16               	movwf	fputc@c^0,c
  2842  0021F8  6A17               	clrf	(fputc@c+1)^0,c
  2843  0021FA  C0C7  F018         	movff	vfpfcnvrt@fp,fputc@fp
  2844  0021FE  C0C8  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2845  002202  EC27  F028         	call	_fputc	;wreg free
  2846  002206                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2848  002206  0060  F327  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2849  00220C  0060  F32B  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2850  002212  2ADE               	incf	postinc2,f,c
  2851  002214  0E00               	movlw	0
  2852  002216  22DD               	addwfc	postdec2,f,c
  2853  002218  EFD5  F010         	goto	l8753
  2854  00221C                     l2245:
  2855  00221C  0012               	return		;funcret
  2856  00221E                     __end_of_vfpfcnvrt:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _strncmp *****************
  2860 ;; Defined at:
  2861 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  2864 ;;		 -> vfpfcnvrt@ct(3), 
  2865 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  2866 ;;		 -> STR_15(3), 
  2867 ;;  n               2   23[COMRAM] unsigned int 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  r               2   28[COMRAM] PTR const unsigned char 
  2870 ;;		 -> STR_15(3), 
  2871 ;;  l               2   26[COMRAM] PTR const unsigned char 
  2872 ;;		 -> vfpfcnvrt@ct(3), 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2   19[COMRAM] int 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:       11 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 8
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_vfpfcnvrt
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text6
  2897  004968                     __ptext6:
  2898                           	callstack 0
  2899  004968                     _strncmp:
  2900                           	callstack 17
  2901  004968  C014  F01B         	movff	strncmp@_l,strncmp@l
  2902  00496C  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  2903  004970  C016  F01D         	movff	strncmp@_r,strncmp@r
  2904  004974  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  2905  004978  0618               	decf	strncmp@n^0,f,c
  2906  00497A  A0D8               	btfss	status,0,c
  2907  00497C  0619               	decf	(strncmp@n+1)^0,f,c
  2908  00497E  2818               	incf	strncmp@n^0,w,c
  2909  004980  E106               	bnz	u9451
  2910  004982  2819               	incf	(strncmp@n+1)^0,w,c
  2911  004984  A4D8               	btfss	status,2,c
  2912  004986  EFC7  F024         	goto	u9451
  2913  00498A  EFC9  F024         	goto	u9450
  2914  00498E                     u9451:
  2915  00498E  EFD6  F024         	goto	l8629
  2916  004992                     u9450:
  2917  004992  0E00               	movlw	0
  2918  004994  6E15               	movwf	(?_strncmp+1)^0,c
  2919  004996  0E00               	movlw	0
  2920  004998  6E14               	movwf	?_strncmp^0,c
  2921  00499A  EF2D  F025         	goto	l2333
  2922  00499E                     l8627:
  2923  00499E  4A1B               	infsnz	strncmp@l^0,f,c
  2924  0049A0  2A1C               	incf	(strncmp@l+1)^0,f,c
  2925  0049A2  4A1D               	infsnz	strncmp@r^0,f,c
  2926  0049A4  2A1E               	incf	(strncmp@r+1)^0,f,c
  2927  0049A6  0618               	decf	strncmp@n^0,f,c
  2928  0049A8  A0D8               	btfss	status,0,c
  2929  0049AA  0619               	decf	(strncmp@n+1)^0,f,c
  2930  0049AC                     l8629:
  2931  0049AC  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  2932  0049B2  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  2933  0049B8  50DF               	movf	indf2,w,c
  2934  0049BA  B4D8               	btfsc	status,2,c
  2935  0049BC  EFE2  F024         	goto	u9461
  2936  0049C0  EFE4  F024         	goto	u9460
  2937  0049C4                     u9461:
  2938  0049C4  EF17  F025         	goto	l8637
  2939  0049C8                     u9460:
  2940  0049C8  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  2941  0049CE  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  2942  0049D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2943  0049D4  6AF8               	clrf	tblptru,c
  2944  0049D6                     	endif
  2945  0049D6                     	if	0	;tblptru may be non-zero
  2946  0049D6                     	endif
  2947  0049D6  0008               	tblrd		*
  2948  0049D8  50F5               	movf	tablat,w,c
  2949  0049DA  0900               	iorlw	0
  2950  0049DC  B4D8               	btfsc	status,2,c
  2951  0049DE  EFF3  F024         	goto	u9471
  2952  0049E2  EFF5  F024         	goto	u9470
  2953  0049E6                     u9471:
  2954  0049E6  EF17  F025         	goto	l8637
  2955  0049EA                     u9470:
  2956  0049EA  5018               	movf	strncmp@n^0,w,c
  2957  0049EC  1019               	iorwf	(strncmp@n+1)^0,w,c
  2958  0049EE  B4D8               	btfsc	status,2,c
  2959  0049F0  EFFC  F024         	goto	u9481
  2960  0049F4  EFFE  F024         	goto	u9480
  2961  0049F8                     u9481:
  2962  0049F8  EF17  F025         	goto	l8637
  2963  0049FC                     u9480:
  2964  0049FC  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  2965  004A02  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  2966  004A08  50DF               	movf	indf2,w,c
  2967  004A0A  6E1A               	movwf	??_strncmp^0,c
  2968  004A0C  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  2969  004A12  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  2970  004A18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2971  004A18  6AF8               	clrf	tblptru,c
  2972  004A1A                     	endif
  2973  004A1A                     	if	0	;tblptru may be non-zero
  2974  004A1A                     	endif
  2975  004A1A  0008               	tblrd		*
  2976  004A1C  50F5               	movf	tablat,w,c
  2977  004A1E  181A               	xorwf	??_strncmp^0,w,c
  2978  004A20  B4D8               	btfsc	status,2,c
  2979  004A22  EF15  F025         	goto	u9491
  2980  004A26  EF17  F025         	goto	u9490
  2981  004A2A                     u9491:
  2982  004A2A  EFCF  F024         	goto	l8627
  2983  004A2E                     u9490:
  2984  004A2E                     l8637:
  2985  004A2E  0060  F06F  FFD9   	movff	strncmp@l,fsr2l
  2986  004A34  0060  F073  FFDA   	movff	strncmp@l+1,fsr2h
  2987  004A3A  50DF               	movf	indf2,w,c
  2988  004A3C  6E1A               	movwf	??_strncmp^0,c
  2989  004A3E  0060  F077  FFF6   	movff	strncmp@r,tblptrl
  2990  004A44  0060  F07B  FFF7   	movff	strncmp@r+1,tblptrh
  2991  004A4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2992  004A4A  6AF8               	clrf	tblptru,c
  2993  004A4C                     	endif
  2994  004A4C                     	if	0	;tblptru may be non-zero
  2995  004A4C                     	endif
  2996  004A4C  0008               	tblrd		*
  2997  004A4E  50F5               	movf	tablat,w,c
  2998  004A50  5C1A               	subwf	??_strncmp^0,w,c
  2999  004A52  6E14               	movwf	?_strncmp^0,c
  3000  004A54  6A15               	clrf	(?_strncmp+1)^0,c
  3001  004A56  A0D8               	btfss	status,0,c
  3002  004A58  0615               	decf	(?_strncmp+1)^0,f,c
  3003  004A5A                     l2333:
  3004  004A5A  0012               	return		;funcret
  3005  004A5C                     __end_of_strncmp:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _efgtoa *****************
  3009 ;; Defined at:
  3010 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  3013 ;;		 -> NULL(0), 
  3014 ;;  f               4   37[BANK0 ] PTR struct _IO_FILE
  3015 ;;  c               1   41[BANK0 ] unsigned char 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  u               4   99[BANK0 ] unsigned char 
  3018 ;;  g               4   91[BANK0 ] unsigned char 
  3019 ;;  l               4   85[BANK0 ] unsigned char 
  3020 ;;  h               4   81[BANK0 ] unsigned char 
  3021 ;;  ou              4   67[BANK0 ] unsigned char 
  3022 ;;  n               2   97[BANK0 ] int 
  3023 ;;  e               2   95[BANK0 ] int 
  3024 ;;  i               2   89[BANK0 ] int 
  3025 ;;  w               2   77[BANK0 ] int 
  3026 ;;  p               2   75[BANK0 ] int 
  3027 ;;  sign            2   73[BANK0 ] int 
  3028 ;;  d               2   71[BANK0 ] int 
  3029 ;;  m               2   65[BANK0 ] int 
  3030 ;;  ne              2   63[BANK0 ] int 
  3031 ;;  pp              2   61[BANK0 ] int 
  3032 ;;  t               2   59[BANK0 ] int 
  3033 ;;  mode            1   80[BANK0 ] unsigned char 
  3034 ;;  nmode           1   79[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  2   35[BANK0 ] int 
  3037 ;; Registers used:
  3038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3044 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;Total ram usage:       68 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 13
  3051 ;; This function calls:
  3052 ;;		___awdiv
  3053 ;;		___awmod
  3054 ;;		___fladd
  3055 ;;		___fldiv
  3056 ;;		___fleq
  3057 ;;		___flge
  3058 ;;		___flmul
  3059 ;;		___flneg
  3060 ;;		___flsub
  3061 ;;		___fltol
  3062 ;;		___fpclassifyf
  3063 ;;		_floorf
  3064 ;;		_isupper
  3065 ;;		_pad
  3066 ;;		_strcpy
  3067 ;;		_tolower
  3068 ;; This function is called by:
  3069 ;;		_vfpfcnvrt
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text7
  3074  00104C                     __ptext7:
  3075                           	callstack 0
  3076  00104C                     _efgtoa:
  3077                           	callstack 12
  3078  00104C                     
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3080  00104C  0E00               	movlw	0
  3081  00104E  0100               	movlb	0	; () banked
  3082  001050  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3083  001052  0E00               	movlw	0
  3084  001054  6FA9               	movwf	efgtoa@sign& (0+255),b
  3085  001056                     
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3088  001056  C085  F0BB         	movff	efgtoa@f,efgtoa@g
  3089  00105A  C086  F0BC         	movff	efgtoa@f+1,efgtoa@g+1
  3090  00105E  C087  F0BD         	movff	efgtoa@f+2,efgtoa@g+2
  3091  001062  C088  F0BE         	movff	efgtoa@f+3,efgtoa@g+3
  3092  001066                     
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3095  001066  BFBE               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3096  001068  EF3A  F008         	goto	u8910
  3097  00106C  EF38  F008         	goto	u8911
  3098  001070                     u8911:
  3099  001070  EF50  F008         	goto	l8323
  3100  001074                     u8910:
  3101  001074                     
  3102                           ; BSR set to: 0
  3103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3104  001074  0E00               	movlw	0
  3105  001076  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  3106  001078  0E01               	movlw	1
  3107  00107A  6FA9               	movwf	efgtoa@sign& (0+255),b
  3108  00107C                     
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3111  00107C  C0BB  F014         	movff	efgtoa@g,___flneg@f1
  3112  001080  C0BC  F015         	movff	efgtoa@g+1,___flneg@f1+1
  3113  001084  C0BD  F016         	movff	efgtoa@g+2,___flneg@f1+2
  3114  001088  C0BE  F017         	movff	efgtoa@g+3,___flneg@f1+3
  3115  00108C  EC05  F02C         	call	___flneg	;wreg free
  3116  001090  C014  F0BB         	movff	?___flneg,efgtoa@g
  3117  001094  C015  F0BC         	movff	?___flneg+1,efgtoa@g+1
  3118  001098  C016  F0BD         	movff	?___flneg+2,efgtoa@g+2
  3119  00109C  C017  F0BE         	movff	?___flneg+3,efgtoa@g+3
  3120  0010A0                     l8323:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3123  0010A0  0E00               	movlw	0
  3124  0010A2  0100               	movlb	0	; () banked
  3125  0010A4  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  3126  0010A6  0E00               	movlw	0
  3127  0010A8  6FC1               	movwf	efgtoa@n& (0+255),b
  3128  0010AA                     
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3131  0010AA  C0E3  F0AD         	movff	_width,efgtoa@w
  3132  0010AE  C0E4  F0AE         	movff	_width+1,efgtoa@w+1
  3133  0010B2                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3136  0010B2  51A9               	movf	efgtoa@sign& (0+255),w,b
  3137  0010B4  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3138  0010B6  A4D8               	btfss	status,2,c
  3139  0010B8  EF60  F008         	goto	u8921
  3140  0010BC  EF62  F008         	goto	u8920
  3141  0010C0                     u8921:
  3142  0010C0  EF69  F008         	goto	l8331
  3143  0010C4                     u8920:
  3144  0010C4                     
  3145                           ; BSR set to: 0
  3146  0010C4  A43C               	btfss	_flags^0,2,c
  3147  0010C6  EF67  F008         	goto	u8931
  3148  0010CA  EF69  F008         	goto	u8930
  3149  0010CE                     u8931:
  3150  0010CE  EF83  F008         	goto	l8343
  3151  0010D2                     u8930:
  3152  0010D2                     l8331:
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3156  0010D2  51A9               	movf	efgtoa@sign& (0+255),w,b
  3157  0010D4  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3158  0010D6  A4D8               	btfss	status,2,c
  3159  0010D8  EF70  F008         	goto	u8941
  3160  0010DC  EF72  F008         	goto	u8940
  3161  0010E0                     u8941:
  3162  0010E0  EF78  F008         	goto	l8335
  3163  0010E4                     u8940:
  3164  0010E4                     
  3165                           ; BSR set to: 0
  3166  0010E4  0E00               	movlw	0
  3167  0010E6  6F90               	movwf	(_efgtoa$3550+1)& (0+255),b
  3168  0010E8  0E2B               	movlw	43
  3169  0010EA  6F8F               	movwf	_efgtoa$3550& (0+255),b
  3170  0010EC  EF7C  F008         	goto	l8337
  3171  0010F0                     l8335:
  3172                           
  3173                           ; BSR set to: 0
  3174  0010F0  0E00               	movlw	0
  3175  0010F2  6F90               	movwf	(_efgtoa$3550+1)& (0+255),b
  3176  0010F4  0E2D               	movlw	45
  3177  0010F6  6F8F               	movwf	_efgtoa$3550& (0+255),b
  3178  0010F8                     l8337:
  3179                           
  3180                           ; BSR set to: 0
  3181  0010F8  C08F  F132         	movff	_efgtoa$3550,_dbuf
  3182  0010FC                     
  3183                           ; BSR set to: 0
  3184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3185  0010FC  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  3186  0010FE  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  3187  001100                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3190  001100  07AD               	decf	efgtoa@w& (0+255),f,b
  3191  001102  A0D8               	btfss	status,0,c
  3192  001104  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  3193  001106                     l8343:
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3197  001106  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  3198  00110A  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3199  00110E  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3200  001112  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3201  001116  EC35  F024         	call	___fpclassifyf	;wreg free
  3202  00111A  0414               	decf	?___fpclassifyf^0,w,c
  3203  00111C  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  3204  00111E  A4D8               	btfss	status,2,c
  3205  001120  EF94  F008         	goto	u8951
  3206  001124  EF96  F008         	goto	u8950
  3207  001128                     u8951:
  3208  001128  EFED  F008         	goto	l8361
  3209  00112C                     u8950:
  3210  00112C  0EBF               	movlw	191
  3211  00112E  0100               	movlb	0	; () banked
  3212  001130  6F8A               	movwf	??_efgtoa& (0+255),b
  3213  001132  0EFF               	movlw	255
  3214  001134  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  3215  001136  5189               	movf	efgtoa@c& (0+255),w,b
  3216  001138  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  3217  00113A  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  3218  00113C  518A               	movf	??_efgtoa& (0+255),w,b
  3219  00113E  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  3220  001140  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  3221  001142  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3222  001144  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  3223  001146  E10A               	bnz	u8960
  3224  001148  0E1A               	movlw	26
  3225  00114A  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  3226  00114C  A0D8               	btfss	status,0,c
  3227  00114E  EFAB  F008         	goto	u8961
  3228  001152  EFAE  F008         	goto	u8960
  3229  001156                     u8961:
  3230  001156  0E01               	movlw	1
  3231  001158  EFAF  F008         	goto	u8970
  3232  00115C                     u8960:
  3233  00115C  0E00               	movlw	0
  3234  00115E                     u8970:
  3235  00115E  6F91               	movwf	_efgtoa$3551& (0+255),b
  3236  001160  6B92               	clrf	(_efgtoa$3551+1)& (0+255),b
  3237  001162                     
  3238                           ; BSR set to: 0
  3239  001162  5191               	movf	_efgtoa$3551& (0+255),w,b
  3240  001164  1192               	iorwf	(_efgtoa$3551+1)& (0+255),w,b
  3241  001166  B4D8               	btfsc	status,2,c
  3242  001168  EFB8  F008         	goto	u8981
  3243  00116C  EFBA  F008         	goto	u8980
  3244  001170                     u8981:
  3245  001170  EFC8  F008         	goto	l8353
  3246  001174                     u8980:
  3247  001174                     
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3250  001174  0E32               	movlw	low _dbuf
  3251  001176  25C1               	addwf	efgtoa@n& (0+255),w,b
  3252  001178  6E14               	movwf	strcpy@dest^0,c
  3253  00117A  0E01               	movlw	high _dbuf
  3254  00117C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3255  00117E  6E15               	movwf	(strcpy@dest+1)^0,c
  3256  001180  0E38               	movlw	low STR_5
  3257  001182  6E16               	movwf	strcpy@src^0,c
  3258  001184  0E10               	movlw	high STR_5
  3259  001186  6E17               	movwf	(strcpy@src+1)^0,c
  3260  001188  EC3D  F029         	call	_strcpy	;wreg free
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3263  00118C  EFD4  F008         	goto	l8355
  3264  001190                     l8353:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3268  001190  0E32               	movlw	low _dbuf
  3269  001192  25C1               	addwf	efgtoa@n& (0+255),w,b
  3270  001194  6E14               	movwf	strcpy@dest^0,c
  3271  001196  0E01               	movlw	high _dbuf
  3272  001198  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3273  00119A  6E15               	movwf	(strcpy@dest+1)^0,c
  3274  00119C  0E40               	movlw	low STR_6
  3275  00119E  6E16               	movwf	strcpy@src^0,c
  3276  0011A0  0E10               	movlw	high STR_6
  3277  0011A2  6E17               	movwf	(strcpy@src+1)^0,c
  3278  0011A4  EC3D  F029         	call	_strcpy	;wreg free
  3279  0011A8                     l8355:
  3280                           
  3281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3282  0011A8  0100               	movlb	0	; () banked
  3283  0011AA  0EFD               	movlw	253
  3284  0011AC  27AD               	addwf	efgtoa@w& (0+255),f,b
  3285  0011AE  0EFF               	movlw	255
  3286  0011B0  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3287  0011B2                     
  3288                           ; BSR set to: 0
  3289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3290  0011B2  C083  F026         	movff	efgtoa@fp,pad@fp
  3291  0011B6  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  3292  0011BA  0E32               	movlw	low _dbuf
  3293  0011BC  6E28               	movwf	pad@buf^0,c
  3294  0011BE  0E01               	movlw	high _dbuf
  3295  0011C0  6E29               	movwf	(pad@buf+1)^0,c
  3296  0011C2  C0AD  F02A         	movff	efgtoa@w,pad@p
  3297  0011C6  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  3298  0011CA  EC66  F026         	call	_pad	;wreg free
  3299  0011CE  C026  F083         	movff	?_pad,?_efgtoa
  3300  0011D2  C027  F084         	movff	?_pad+1,?_efgtoa+1
  3301  0011D6  EF7C  F00E         	goto	l2161
  3302  0011DA                     l8361:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3305  0011DA  C0BB  F014         	movff	efgtoa@g,___fpclassifyf@x
  3306  0011DE  C0BC  F015         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3307  0011E2  C0BD  F016         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3308  0011E6  C0BE  F017         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3309  0011EA  EC35  F024         	call	___fpclassifyf	;wreg free
  3310  0011EE  5014               	movf	?___fpclassifyf^0,w,c
  3311  0011F0  1015               	iorwf	(?___fpclassifyf+1)^0,w,c
  3312  0011F2  A4D8               	btfss	status,2,c
  3313  0011F4  EFFE  F008         	goto	u8991
  3314  0011F8  EF00  F009         	goto	u8990
  3315  0011FC                     u8991:
  3316  0011FC  EF57  F009         	goto	l8379
  3317  001200                     u8990:
  3318  001200  0EBF               	movlw	191
  3319  001202  0100               	movlb	0	; () banked
  3320  001204  6F8A               	movwf	??_efgtoa& (0+255),b
  3321  001206  0EFF               	movlw	255
  3322  001208  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  3323  00120A  5189               	movf	efgtoa@c& (0+255),w,b
  3324  00120C  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  3325  00120E  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  3326  001210  518A               	movf	??_efgtoa& (0+255),w,b
  3327  001212  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  3328  001214  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  3329  001216  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3330  001218  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  3331  00121A  E10A               	bnz	u9000
  3332  00121C  0E1A               	movlw	26
  3333  00121E  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  3334  001220  A0D8               	btfss	status,0,c
  3335  001222  EF15  F009         	goto	u9001
  3336  001226  EF18  F009         	goto	u9000
  3337  00122A                     u9001:
  3338  00122A  0E01               	movlw	1
  3339  00122C  EF19  F009         	goto	u9010
  3340  001230                     u9000:
  3341  001230  0E00               	movlw	0
  3342  001232                     u9010:
  3343  001232  6F93               	movwf	_efgtoa$3555& (0+255),b
  3344  001234  6B94               	clrf	(_efgtoa$3555+1)& (0+255),b
  3345  001236                     
  3346                           ; BSR set to: 0
  3347  001236  5193               	movf	_efgtoa$3555& (0+255),w,b
  3348  001238  1194               	iorwf	(_efgtoa$3555+1)& (0+255),w,b
  3349  00123A  B4D8               	btfsc	status,2,c
  3350  00123C  EF22  F009         	goto	u9021
  3351  001240  EF24  F009         	goto	u9020
  3352  001244                     u9021:
  3353  001244  EF32  F009         	goto	l8371
  3354  001248                     u9020:
  3355  001248                     
  3356                           ; BSR set to: 0
  3357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3358  001248  0E32               	movlw	low _dbuf
  3359  00124A  25C1               	addwf	efgtoa@n& (0+255),w,b
  3360  00124C  6E14               	movwf	strcpy@dest^0,c
  3361  00124E  0E01               	movlw	high _dbuf
  3362  001250  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3363  001252  6E15               	movwf	(strcpy@dest+1)^0,c
  3364  001254  0E3C               	movlw	low STR_9
  3365  001256  6E16               	movwf	strcpy@src^0,c
  3366  001258  0E10               	movlw	high STR_9
  3367  00125A  6E17               	movwf	(strcpy@src+1)^0,c
  3368  00125C  EC3D  F029         	call	_strcpy	;wreg free
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3371  001260  EF3E  F009         	goto	l8373
  3372  001264                     l8371:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3376  001264  0E32               	movlw	low _dbuf
  3377  001266  25C1               	addwf	efgtoa@n& (0+255),w,b
  3378  001268  6E14               	movwf	strcpy@dest^0,c
  3379  00126A  0E01               	movlw	high _dbuf
  3380  00126C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3381  00126E  6E15               	movwf	(strcpy@dest+1)^0,c
  3382  001270  0E44               	movlw	low STR_10
  3383  001272  6E16               	movwf	strcpy@src^0,c
  3384  001274  0E10               	movlw	high STR_10
  3385  001276  6E17               	movwf	(strcpy@src+1)^0,c
  3386  001278  EC3D  F029         	call	_strcpy	;wreg free
  3387  00127C                     l8373:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3390  00127C  0100               	movlb	0	; () banked
  3391  00127E  0EFD               	movlw	253
  3392  001280  27AD               	addwf	efgtoa@w& (0+255),f,b
  3393  001282  0EFF               	movlw	255
  3394  001284  23AE               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3395  001286                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3398  001286  C083  F026         	movff	efgtoa@fp,pad@fp
  3399  00128A  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  3400  00128E  0E32               	movlw	low _dbuf
  3401  001290  6E28               	movwf	pad@buf^0,c
  3402  001292  0E01               	movlw	high _dbuf
  3403  001294  6E29               	movwf	(pad@buf+1)^0,c
  3404  001296  C0AD  F02A         	movff	efgtoa@w,pad@p
  3405  00129A  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  3406  00129E  EC66  F026         	call	_pad	;wreg free
  3407  0012A2  C026  F083         	movff	?_pad,?_efgtoa
  3408  0012A6  C027  F084         	movff	?_pad+1,?_efgtoa+1
  3409  0012AA  EF7C  F00E         	goto	l2161
  3410  0012AE                     l8379:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3413  0012AE  0E00               	movlw	0
  3414  0012B0  0100               	movlb	0	; () banked
  3415  0012B2  6FC3               	movwf	efgtoa@u& (0+255),b
  3416  0012B4  0E00               	movlw	0
  3417  0012B6  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  3418  0012B8  0E80               	movlw	128
  3419  0012BA  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  3420  0012BC  0E3F               	movlw	63
  3421  0012BE  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3424  0012C0  0E00               	movlw	0
  3425  0012C2  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  3426  0012C4  0E00               	movlw	0
  3427  0012C6  6FBF               	movwf	efgtoa@e& (0+255),b
  3428  0012C8                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3431  0012C8  C0BB  F014         	movff	efgtoa@g,___fleq@ff1
  3432  0012CC  C0BC  F015         	movff	efgtoa@g+1,___fleq@ff1+1
  3433  0012D0  C0BD  F016         	movff	efgtoa@g+2,___fleq@ff1+2
  3434  0012D4  C0BE  F017         	movff	efgtoa@g+3,___fleq@ff1+3
  3435  0012D8  0E00               	movlw	0
  3436  0012DA  6E18               	movwf	___fleq@ff2^0,c
  3437  0012DC  0E00               	movlw	0
  3438  0012DE  6E19               	movwf	(___fleq@ff2+1)^0,c
  3439  0012E0  0E00               	movlw	0
  3440  0012E2  6E1A               	movwf	(___fleq@ff2+2)^0,c
  3441  0012E4  0E00               	movlw	0
  3442  0012E6  6E1B               	movwf	(___fleq@ff2+3)^0,c
  3443  0012E8  EC7F  F027         	call	___fleq	;wreg free
  3444  0012EC  B0D8               	btfsc	status,0,c
  3445  0012EE  EF7B  F009         	goto	u9031
  3446  0012F2  EF7D  F009         	goto	u9030
  3447  0012F6                     u9031:
  3448  0012F6  EF02  F00A         	goto	l8397
  3449  0012FA                     u9030:
  3450  0012FA  EF9C  F009         	goto	l8389
  3451  0012FE                     l8385:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3455  0012FE  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  3456  001302  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  3457  001306  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  3458  00130A  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  3459  00130E  0E00               	movlw	0
  3460  001310  6E2E               	movwf	___flmul@a^0,c
  3461  001312  0E00               	movlw	0
  3462  001314  6E2F               	movwf	(___flmul@a+1)^0,c
  3463  001316  0E20               	movlw	32
  3464  001318  6E30               	movwf	(___flmul@a+2)^0,c
  3465  00131A  0E41               	movlw	65
  3466  00131C  6E31               	movwf	(___flmul@a+3)^0,c
  3467  00131E  EC70  F013         	call	___flmul	;wreg free
  3468  001322  C02A  F0C3         	movff	?___flmul,efgtoa@u
  3469  001326  C02B  F0C4         	movff	?___flmul+1,efgtoa@u+1
  3470  00132A  C02C  F0C5         	movff	?___flmul+2,efgtoa@u+2
  3471  00132E  C02D  F0C6         	movff	?___flmul+3,efgtoa@u+3
  3472  001332                     
  3473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3474  001332  0100               	movlb	0	; () banked
  3475  001334  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  3476  001336  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  3477  001338                     l8389:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3480  001338  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  3481  00133C  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  3482  001340  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  3483  001344  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  3484  001348  0E00               	movlw	0
  3485  00134A  6E2E               	movwf	___flmul@a^0,c
  3486  00134C  0E00               	movlw	0
  3487  00134E  6E2F               	movwf	(___flmul@a+1)^0,c
  3488  001350  0E20               	movlw	32
  3489  001352  6E30               	movwf	(___flmul@a+2)^0,c
  3490  001354  0E41               	movlw	65
  3491  001356  6E31               	movwf	(___flmul@a+3)^0,c
  3492  001358  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  3493  00135C  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  3494  001360  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  3495  001364  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  3496  001368  EC70  F013         	call	___flmul	;wreg free
  3497  00136C  C02A  F071         	movff	?___flmul,___flge@ff2
  3498  001370  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  3499  001374  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  3500  001378  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  3501  00137C  ECB2  F023         	call	___flge	;wreg free
  3502  001380  0100               	movlb	0	; () banked
  3503  001382  B0D8               	btfsc	status,0,c
  3504  001384  EFC6  F009         	goto	u9041
  3505  001388  EFC8  F009         	goto	u9040
  3506  00138C                     u9041:
  3507  00138C  EF7F  F009         	goto	l8385
  3508  001390                     u9040:
  3509  001390  EFE8  F009         	goto	l8395
  3510  001394                     l8391:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3514  001394  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  3515  001398  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  3516  00139C  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  3517  0013A0  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  3518  0013A4  0E00               	movlw	0
  3519  0013A6  6E2E               	movwf	___fldiv@a^0,c
  3520  0013A8  0E00               	movlw	0
  3521  0013AA  6E2F               	movwf	(___fldiv@a+1)^0,c
  3522  0013AC  0E20               	movlw	32
  3523  0013AE  6E30               	movwf	(___fldiv@a+2)^0,c
  3524  0013B0  0E41               	movlw	65
  3525  0013B2  6E31               	movwf	(___fldiv@a+3)^0,c
  3526  0013B4  EC98  F015         	call	___fldiv	;wreg free
  3527  0013B8  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  3528  0013BC  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  3529  0013C0  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  3530  0013C4  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  3531  0013C8                     
  3532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3533  0013C8  0100               	movlb	0	; () banked
  3534  0013CA  07BF               	decf	efgtoa@e& (0+255),f,b
  3535  0013CC  A0D8               	btfss	status,0,c
  3536  0013CE  07C0               	decf	(efgtoa@e+1)& (0+255),f,b
  3537  0013D0                     l8395:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3541  0013D0  C0BB  F06D         	movff	efgtoa@g,___flge@ff1
  3542  0013D4  C0BC  F06E         	movff	efgtoa@g+1,___flge@ff1+1
  3543  0013D8  C0BD  F06F         	movff	efgtoa@g+2,___flge@ff1+2
  3544  0013DC  C0BE  F070         	movff	efgtoa@g+3,___flge@ff1+3
  3545  0013E0  C0C3  F071         	movff	efgtoa@u,___flge@ff2
  3546  0013E4  C0C4  F072         	movff	efgtoa@u+1,___flge@ff2+1
  3547  0013E8  C0C5  F073         	movff	efgtoa@u+2,___flge@ff2+2
  3548  0013EC  C0C6  F074         	movff	efgtoa@u+3,___flge@ff2+3
  3549  0013F0  ECB2  F023         	call	___flge	;wreg free
  3550  0013F4  0100               	movlb	0	; () banked
  3551  0013F6  A0D8               	btfss	status,0,c
  3552  0013F8  EF00  F00A         	goto	u9051
  3553  0013FC  EF02  F00A         	goto	u9050
  3554  001400                     u9051:
  3555  001400  EFCA  F009         	goto	l8391
  3556  001404                     u9050:
  3557  001404                     l8397:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3560  001404  C089  F01A         	movff	efgtoa@c,tolower@c
  3561  001408  6A1B               	clrf	(tolower@c+1)^0,c
  3562  00140A  ECA3  F029         	call	_tolower	;wreg free
  3563  00140E  501A               	movf	?_tolower^0,w,c
  3564  001410  0100               	movlb	0	; () banked
  3565  001412  6FB0               	movwf	efgtoa@mode& (0+255),b
  3566  001414                     
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3569  001414  C0B0  F0AF         	movff	efgtoa@mode,efgtoa@nmode
  3570  001418                     
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3573  001418  0E67               	movlw	103
  3574  00141A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3575  00141C  A4D8               	btfss	status,2,c
  3576  00141E  EF13  F00A         	goto	u9061
  3577  001422  EF15  F00A         	goto	u9060
  3578  001426                     u9061:
  3579  001426  EF3B  F00A         	goto	l8411
  3580  00142A                     u9060:
  3581  00142A                     
  3582                           ; BSR set to: 0
  3583                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3584  00142A  503A               	movf	_prec^0,w,c
  3585  00142C  103B               	iorwf	(_prec+1)^0,w,c
  3586  00142E  A4D8               	btfss	status,2,c
  3587  001430  EF1C  F00A         	goto	u9071
  3588  001434  EF1E  F00A         	goto	u9070
  3589  001438                     u9071:
  3590  001438  EF22  F00A         	goto	l8407
  3591  00143C                     u9070:
  3592  00143C                     
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3595  00143C  0E00               	movlw	0
  3596  00143E  6E3B               	movwf	(_prec+1)^0,c
  3597  001440  0E01               	movlw	1
  3598  001442  6E3A               	movwf	_prec^0,c
  3599  001444                     l8407:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3603  001444  BE3B               	btfsc	(_prec+1)^0,7,c
  3604  001446  EF2F  F00A         	goto	u9080
  3605  00144A  503B               	movf	(_prec+1)^0,w,c
  3606  00144C  E106               	bnz	u9081
  3607  00144E  043A               	decf	_prec^0,w,c
  3608  001450  B0D8               	btfsc	status,0,c
  3609  001452  EF2D  F00A         	goto	u9081
  3610  001456  EF2F  F00A         	goto	u9080
  3611  00145A                     u9081:
  3612  00145A  EF35  F00A         	goto	l2179
  3613  00145E                     u9080:
  3614  00145E                     l8409:
  3615                           
  3616                           ; BSR set to: 0
  3617  00145E  0E00               	movlw	0
  3618  001460  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  3619  001462  0E06               	movlw	6
  3620  001464  6FAB               	movwf	efgtoa@p& (0+255),b
  3621  001466  EF44  F00A         	goto	l8417
  3622  00146A                     l2179:
  3623                           
  3624                           ; BSR set to: 0
  3625  00146A  C03A  F0AB         	movff	_prec,efgtoa@p
  3626  00146E  C03B  F0AC         	movff	_prec+1,efgtoa@p+1
  3627  001472  EF44  F00A         	goto	l8417
  3628  001476                     l8411:
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3632  001476  BE3B               	btfsc	(_prec+1)^0,7,c
  3633  001478  EF40  F00A         	goto	u9091
  3634  00147C  EF42  F00A         	goto	u9090
  3635  001480                     u9091:
  3636  001480  EF2F  F00A         	goto	l8409
  3637  001484                     u9090:
  3638  001484  EF35  F00A         	goto	l2179
  3639  001488                     l8417:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3643  001488  0E67               	movlw	103
  3644  00148A  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3645  00148C  A4D8               	btfss	status,2,c
  3646  00148E  EF4B  F00A         	goto	u9101
  3647  001492  EF4D  F00A         	goto	u9100
  3648  001496                     u9101:
  3649  001496  EF7C  F00A         	goto	l8427
  3650  00149A                     u9100:
  3651  00149A                     
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3654  00149A  AFC0               	btfss	(efgtoa@e+1)& (0+255),7,b
  3655  00149C  EF5B  F00A         	goto	u9110
  3656  0014A0  0EFC               	movlw	252
  3657  0014A2  5DBF               	subwf	efgtoa@e& (0+255),w,b
  3658  0014A4  0EFF               	movlw	255
  3659  0014A6  59C0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3660  0014A8  A0D8               	btfss	status,0,c
  3661  0014AA  EF59  F00A         	goto	u9111
  3662  0014AE  EF5B  F00A         	goto	u9110
  3663  0014B2                     u9111:
  3664  0014B2  EF7A  F00A         	goto	l8425
  3665  0014B6                     u9110:
  3666  0014B6                     
  3667                           ; BSR set to: 0
  3668  0014B6  0EFF               	movlw	255
  3669  0014B8  6F8A               	movwf	??_efgtoa& (0+255),b
  3670  0014BA  0EFF               	movlw	255
  3671  0014BC  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  3672  0014BE  C0AB  F08C         	movff	efgtoa@p,??_efgtoa+2
  3673  0014C2  C0AC  F08D         	movff	efgtoa@p+1,??_efgtoa+3
  3674  0014C6  518A               	movf	??_efgtoa& (0+255),w,b
  3675  0014C8  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  3676  0014CA  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  3677  0014CC  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3678  0014CE  51BF               	movf	efgtoa@e& (0+255),w,b
  3679  0014D0  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  3680  0014D2  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  3681  0014D4  0A80               	xorlw	128
  3682  0014D6  6F8E               	movwf	(??_efgtoa+4)& (0+255),b
  3683  0014D8  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  3684  0014DA  0A80               	xorlw	128
  3685  0014DC  598E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3686  0014DE  A0D8               	btfss	status,0,c
  3687  0014E0  EF74  F00A         	goto	u9121
  3688  0014E4  EF76  F00A         	goto	u9120
  3689  0014E8                     u9121:
  3690  0014E8  EF7A  F00A         	goto	l8425
  3691  0014EC                     u9120:
  3692  0014EC                     
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3695  0014EC  0E66               	movlw	102
  3696  0014EE  6FAF               	movwf	efgtoa@nmode& (0+255),b
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3699  0014F0  EF7C  F00A         	goto	l8427
  3700  0014F4                     l8425:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3704  0014F4  0E65               	movlw	101
  3705  0014F6  6FAF               	movwf	efgtoa@nmode& (0+255),b
  3706  0014F8                     l8427:
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3710  0014F8  C0AB  F0A1         	movff	efgtoa@p,efgtoa@m
  3711  0014FC  C0AC  F0A2         	movff	efgtoa@p+1,efgtoa@m+1
  3712  001500                     
  3713                           ; BSR set to: 0
  3714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3715  001500  0E67               	movlw	103
  3716  001502  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3717  001504  A4D8               	btfss	status,2,c
  3718  001506  EF87  F00A         	goto	u9131
  3719  00150A  EF89  F00A         	goto	u9130
  3720  00150E                     u9131:
  3721  00150E  EF99  F00A         	goto	l8435
  3722  001512                     u9130:
  3723  001512                     
  3724                           ; BSR set to: 0
  3725  001512  0E66               	movlw	102
  3726  001514  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  3727  001516  A4D8               	btfss	status,2,c
  3728  001518  EF90  F00A         	goto	u9141
  3729  00151C  EF92  F00A         	goto	u9140
  3730  001520                     u9141:
  3731  001520  EF9B  F00A         	goto	l8437
  3732  001524                     u9140:
  3733  001524                     
  3734                           ; BSR set to: 0
  3735  001524  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3736  001526  EF99  F00A         	goto	u9150
  3737  00152A  EF97  F00A         	goto	u9151
  3738  00152E                     u9151:
  3739  00152E  EF9B  F00A         	goto	l8437
  3740  001532                     u9150:
  3741  001532                     l8435:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3745  001532  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  3746  001534  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  3747  001536                     l8437:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3751  001536  0E66               	movlw	102
  3752  001538  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  3753  00153A  A4D8               	btfss	status,2,c
  3754  00153C  EFA2  F00A         	goto	u9161
  3755  001540  EFA4  F00A         	goto	u9160
  3756  001544                     u9161:
  3757  001544  EFC4  F00A         	goto	l8447
  3758  001548                     u9160:
  3759  001548                     
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3762  001548  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3763  00154A  EFAB  F00A         	goto	u9170
  3764  00154E  EFA9  F00A         	goto	u9171
  3765  001552                     u9171:
  3766  001552  EFB7  F00A         	goto	l8443
  3767  001556                     u9170:
  3768  001556                     
  3769                           ; BSR set to: 0
  3770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3771  001556  0E00               	movlw	0
  3772  001558  6FC3               	movwf	efgtoa@u& (0+255),b
  3773  00155A  0E00               	movlw	0
  3774  00155C  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  3775  00155E  0E80               	movlw	128
  3776  001560  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  3777  001562  0E3F               	movlw	63
  3778  001564  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3781  001566  0E00               	movlw	0
  3782  001568  6FC0               	movwf	(efgtoa@e+1)& (0+255),b
  3783  00156A  0E00               	movlw	0
  3784  00156C  6FBF               	movwf	efgtoa@e& (0+255),b
  3785  00156E                     l8443:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3789  00156E  0E67               	movlw	103
  3790  001570  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  3791  001572  B4D8               	btfsc	status,2,c
  3792  001574  EFBE  F00A         	goto	u9181
  3793  001578  EFC0  F00A         	goto	u9180
  3794  00157C                     u9181:
  3795  00157C  EFC4  F00A         	goto	l8447
  3796  001580                     u9180:
  3797  001580                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3800  001580  51BF               	movf	efgtoa@e& (0+255),w,b
  3801  001582  27A1               	addwf	efgtoa@m& (0+255),f,b
  3802  001584  51C0               	movf	(efgtoa@e+1)& (0+255),w,b
  3803  001586  23A2               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3804  001588                     l8447:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3808  001588  0E00               	movlw	0
  3809  00158A  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  3810  00158C  0E00               	movlw	0
  3811  00158E  6FB9               	movwf	efgtoa@i& (0+255),b
  3812  001590                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3815  001590  C0BB  F0B1         	movff	efgtoa@g,efgtoa@h
  3816  001594  C0BC  F0B2         	movff	efgtoa@g+1,efgtoa@h+1
  3817  001598  C0BD  F0B3         	movff	efgtoa@g+2,efgtoa@h+2
  3818  00159C  C0BE  F0B4         	movff	efgtoa@g+3,efgtoa@h+3
  3819  0015A0                     
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3822  0015A0  C0C3  F0A3         	movff	efgtoa@u,efgtoa@ou
  3823  0015A4  C0C4  F0A4         	movff	efgtoa@u+1,efgtoa@ou+1
  3824  0015A8  C0C5  F0A5         	movff	efgtoa@u+2,efgtoa@ou+2
  3825  0015AC  C0C6  F0A6         	movff	efgtoa@u+3,efgtoa@ou+3
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3828  0015B0  EF55  F00B         	goto	l8461
  3829  0015B4                     l8453:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3833  0015B4  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  3834  0015B8  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  3835  0015BC  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  3836  0015C0  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  3837  0015C4  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  3838  0015C8  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  3839  0015CC  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  3840  0015D0  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  3841  0015D4  EC98  F015         	call	___fldiv	;wreg free
  3842  0015D8  C02A  F036         	movff	?___fldiv,floorf@x
  3843  0015DC  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  3844  0015E0  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  3845  0015E4  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  3846  0015E8  ECE7  F019         	call	_floorf	;wreg free
  3847  0015EC  C036  F0B5         	movff	?_floorf,efgtoa@l
  3848  0015F0  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  3849  0015F4  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  3850  0015F8  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3853  0015FC  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  3854  001600  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  3855  001604  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  3856  001608  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  3857  00160C  ECAB  F022         	call	___fltol	;wreg free
  3858  001610  C079  F0A7         	movff	?___fltol,efgtoa@d
  3859  001614  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  3860  001618                     
  3861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3862  001618  C0B1  F079         	movff	efgtoa@h,___flsub@b
  3863  00161C  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  3864  001620  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  3865  001624  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  3866  001628  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  3867  00162C  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  3868  001630  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  3869  001634  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  3870  001638  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  3871  00163C  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  3872  001640  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  3873  001644  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  3874  001648  EC70  F013         	call	___flmul	;wreg free
  3875  00164C  C02A  F07D         	movff	?___flmul,___flsub@a
  3876  001650  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  3877  001654  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  3878  001658  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  3879  00165C  ECE7  F02A         	call	___flsub	;wreg free
  3880  001660  C079  F0B1         	movff	?___flsub,efgtoa@h
  3881  001664  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  3882  001668  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  3883  00166C  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  3884  001670                     
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3886  001670  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  3887  001674  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  3888  001678  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  3889  00167C  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  3890  001680  0E00               	movlw	0
  3891  001682  6E2E               	movwf	___fldiv@a^0,c
  3892  001684  0E00               	movlw	0
  3893  001686  6E2F               	movwf	(___fldiv@a+1)^0,c
  3894  001688  0E20               	movlw	32
  3895  00168A  6E30               	movwf	(___fldiv@a+2)^0,c
  3896  00168C  0E41               	movlw	65
  3897  00168E  6E31               	movwf	(___fldiv@a+3)^0,c
  3898  001690  EC98  F015         	call	___fldiv	;wreg free
  3899  001694  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  3900  001698  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  3901  00169C  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  3902  0016A0  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  3903  0016A4                     
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3905  0016A4  0100               	movlb	0	; () banked
  3906  0016A6  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  3907  0016A8  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  3908  0016AA                     l8461:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3912  0016AA  51A1               	movf	efgtoa@m& (0+255),w,b
  3913  0016AC  5DB9               	subwf	efgtoa@i& (0+255),w,b
  3914  0016AE  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  3915  0016B0  0A80               	xorlw	128
  3916  0016B2  6F8A               	movwf	??_efgtoa& (0+255),b
  3917  0016B4  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  3918  0016B6  0A80               	xorlw	128
  3919  0016B8  598A               	subwfb	??_efgtoa& (0+255),w,b
  3920  0016BA  A0D8               	btfss	status,0,c
  3921  0016BC  EF62  F00B         	goto	u9191
  3922  0016C0  EF64  F00B         	goto	u9190
  3923  0016C4                     u9191:
  3924  0016C4  EFDA  F00A         	goto	l8453
  3925  0016C8                     u9190:
  3926  0016C8                     
  3927                           ; BSR set to: 0
  3928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3929  0016C8  C0C3  F02A         	movff	efgtoa@u,___flmul@b
  3930  0016CC  C0C4  F02B         	movff	efgtoa@u+1,___flmul@b+1
  3931  0016D0  C0C5  F02C         	movff	efgtoa@u+2,___flmul@b+2
  3932  0016D4  C0C6  F02D         	movff	efgtoa@u+3,___flmul@b+3
  3933  0016D8  0E00               	movlw	0
  3934  0016DA  6E2E               	movwf	___flmul@a^0,c
  3935  0016DC  0E00               	movlw	0
  3936  0016DE  6E2F               	movwf	(___flmul@a+1)^0,c
  3937  0016E0  0EA0               	movlw	160
  3938  0016E2  6E30               	movwf	(___flmul@a+2)^0,c
  3939  0016E4  0E40               	movlw	64
  3940  0016E6  6E31               	movwf	(___flmul@a+3)^0,c
  3941  0016E8  EC70  F013         	call	___flmul	;wreg free
  3942  0016EC  C02A  F0B5         	movff	?___flmul,efgtoa@l
  3943  0016F0  C02B  F0B6         	movff	?___flmul+1,efgtoa@l+1
  3944  0016F4  C02C  F0B7         	movff	?___flmul+2,efgtoa@l+2
  3945  0016F8  C02D  F0B8         	movff	?___flmul+3,efgtoa@l+3
  3946  0016FC                     
  3947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3948  0016FC  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  3949  001700  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  3950  001704  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  3951  001708  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  3952  00170C  C0B5  F071         	movff	efgtoa@l,___flge@ff2
  3953  001710  C0B6  F072         	movff	efgtoa@l+1,___flge@ff2+1
  3954  001714  C0B7  F073         	movff	efgtoa@l+2,___flge@ff2+2
  3955  001718  C0B8  F074         	movff	efgtoa@l+3,___flge@ff2+3
  3956  00171C  ECB2  F023         	call	___flge	;wreg free
  3957  001720  0100               	movlb	0	; () banked
  3958  001722  B0D8               	btfsc	status,0,c
  3959  001724  EF96  F00B         	goto	u9201
  3960  001728  EF98  F00B         	goto	u9200
  3961  00172C                     u9201:
  3962  00172C  EFA2  F00B         	goto	l8469
  3963  001730                     u9200:
  3964  001730                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3967  001730  0E00               	movlw	0
  3968  001732  6FB5               	movwf	efgtoa@l& (0+255),b
  3969  001734  0E00               	movlw	0
  3970  001736  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  3971  001738  0E00               	movlw	0
  3972  00173A  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  3973  00173C  0E00               	movlw	0
  3974  00173E  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3977  001740  EFCB  F00B         	goto	l8475
  3978  001744                     l8469:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3982  001744  C0B1  F014         	movff	efgtoa@h,___fleq@ff1
  3983  001748  C0B2  F015         	movff	efgtoa@h+1,___fleq@ff1+1
  3984  00174C  C0B3  F016         	movff	efgtoa@h+2,___fleq@ff1+2
  3985  001750  C0B4  F017         	movff	efgtoa@h+3,___fleq@ff1+3
  3986  001754  C0B5  F018         	movff	efgtoa@l,___fleq@ff2
  3987  001758  C0B6  F019         	movff	efgtoa@l+1,___fleq@ff2+1
  3988  00175C  C0B7  F01A         	movff	efgtoa@l+2,___fleq@ff2+2
  3989  001760  C0B8  F01B         	movff	efgtoa@l+3,___fleq@ff2+3
  3990  001764  EC7F  F027         	call	___fleq	;wreg free
  3991  001768  A0D8               	btfss	status,0,c
  3992  00176A  EFB9  F00B         	goto	u9211
  3993  00176E  EFBB  F00B         	goto	u9210
  3994  001772                     u9211:
  3995  001772  EFCB  F00B         	goto	l8475
  3996  001776                     u9210:
  3997  001776  0100               	movlb	0	; () banked
  3998  001778  B1A7               	btfsc	efgtoa@d& (0+255),0,b
  3999  00177A  EFC1  F00B         	goto	u9221
  4000  00177E  EFC3  F00B         	goto	u9220
  4001  001782                     u9221:
  4002  001782  EFCB  F00B         	goto	l8475
  4003  001786                     u9220:
  4004  001786                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4007  001786  0E00               	movlw	0
  4008  001788  6FB5               	movwf	efgtoa@l& (0+255),b
  4009  00178A  0E00               	movlw	0
  4010  00178C  6FB6               	movwf	(efgtoa@l+1)& (0+255),b
  4011  00178E  0E00               	movlw	0
  4012  001790  6FB7               	movwf	(efgtoa@l+2)& (0+255),b
  4013  001792  0E00               	movlw	0
  4014  001794  6FB8               	movwf	(efgtoa@l+3)& (0+255),b
  4015  001796                     l8475:
  4016                           
  4017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4018  001796  C0BB  F06D         	movff	efgtoa@g,___fladd@b
  4019  00179A  C0BC  F06E         	movff	efgtoa@g+1,___fladd@b+1
  4020  00179E  C0BD  F06F         	movff	efgtoa@g+2,___fladd@b+2
  4021  0017A2  C0BE  F070         	movff	efgtoa@g+3,___fladd@b+3
  4022  0017A6  C0B5  F071         	movff	efgtoa@l,___fladd@a
  4023  0017AA  C0B6  F072         	movff	efgtoa@l+1,___fladd@a+1
  4024  0017AE  C0B7  F073         	movff	efgtoa@l+2,___fladd@a+2
  4025  0017B2  C0B8  F074         	movff	efgtoa@l+3,___fladd@a+3
  4026  0017B6  EC0F  F011         	call	___fladd	;wreg free
  4027  0017BA  C06D  F0B1         	movff	?___fladd,efgtoa@h
  4028  0017BE  C06E  F0B2         	movff	?___fladd+1,efgtoa@h+1
  4029  0017C2  C06F  F0B3         	movff	?___fladd+2,efgtoa@h+2
  4030  0017C6  C070  F0B4         	movff	?___fladd+3,efgtoa@h+3
  4031  0017CA                     
  4032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4033  0017CA  C0B1  F06D         	movff	efgtoa@h,___flge@ff1
  4034  0017CE  C0B2  F06E         	movff	efgtoa@h+1,___flge@ff1+1
  4035  0017D2  C0B3  F06F         	movff	efgtoa@h+2,___flge@ff1+2
  4036  0017D6  C0B4  F070         	movff	efgtoa@h+3,___flge@ff1+3
  4037  0017DA  0E00               	movlw	0
  4038  0017DC  6E2E               	movwf	___flmul@a^0,c
  4039  0017DE  0E00               	movlw	0
  4040  0017E0  6E2F               	movwf	(___flmul@a+1)^0,c
  4041  0017E2  0E20               	movlw	32
  4042  0017E4  6E30               	movwf	(___flmul@a+2)^0,c
  4043  0017E6  0E41               	movlw	65
  4044  0017E8  6E31               	movwf	(___flmul@a+3)^0,c
  4045  0017EA  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  4046  0017EE  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4047  0017F2  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4048  0017F6  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4049  0017FA  EC70  F013         	call	___flmul	;wreg free
  4050  0017FE  C02A  F071         	movff	?___flmul,___flge@ff2
  4051  001802  C02B  F072         	movff	?___flmul+1,___flge@ff2+1
  4052  001806  C02C  F073         	movff	?___flmul+2,___flge@ff2+2
  4053  00180A  C02D  F074         	movff	?___flmul+3,___flge@ff2+3
  4054  00180E  ECB2  F023         	call	___flge	;wreg free
  4055  001812  0100               	movlb	0	; () banked
  4056  001814  A0D8               	btfss	status,0,c
  4057  001816  EF0F  F00C         	goto	u9231
  4058  00181A  EF11  F00C         	goto	u9230
  4059  00181E                     u9231:
  4060  00181E  EF39  F00C         	goto	l8487
  4061  001822                     u9230:
  4062  001822                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4065  001822  4BBF               	infsnz	efgtoa@e& (0+255),f,b
  4066  001824  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4067  001826                     
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4070  001826  C0A3  F02A         	movff	efgtoa@ou,___flmul@b
  4071  00182A  C0A4  F02B         	movff	efgtoa@ou+1,___flmul@b+1
  4072  00182E  C0A5  F02C         	movff	efgtoa@ou+2,___flmul@b+2
  4073  001832  C0A6  F02D         	movff	efgtoa@ou+3,___flmul@b+3
  4074  001836  0E00               	movlw	0
  4075  001838  6E2E               	movwf	___flmul@a^0,c
  4076  00183A  0E00               	movlw	0
  4077  00183C  6E2F               	movwf	(___flmul@a+1)^0,c
  4078  00183E  0E20               	movlw	32
  4079  001840  6E30               	movwf	(___flmul@a+2)^0,c
  4080  001842  0E41               	movlw	65
  4081  001844  6E31               	movwf	(___flmul@a+3)^0,c
  4082  001846  EC70  F013         	call	___flmul	;wreg free
  4083  00184A  C02A  F0A3         	movff	?___flmul,efgtoa@ou
  4084  00184E  C02B  F0A4         	movff	?___flmul+1,efgtoa@ou+1
  4085  001852  C02C  F0A5         	movff	?___flmul+2,efgtoa@ou+2
  4086  001856  C02D  F0A6         	movff	?___flmul+3,efgtoa@ou+3
  4087  00185A                     
  4088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4089  00185A  0E66               	movlw	102
  4090  00185C  0100               	movlb	0	; () banked
  4091  00185E  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4092  001860  A4D8               	btfss	status,2,c
  4093  001862  EF35  F00C         	goto	u9241
  4094  001866  EF37  F00C         	goto	u9240
  4095  00186A                     u9241:
  4096  00186A  EF39  F00C         	goto	l8487
  4097  00186E                     u9240:
  4098  00186E                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4101  00186E  4BA1               	infsnz	efgtoa@m& (0+255),f,b
  4102  001870  2BA2               	incf	(efgtoa@m+1)& (0+255),f,b
  4103  001872                     l8487:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4107  001872  C0A3  F0C3         	movff	efgtoa@ou,efgtoa@u
  4108  001876  C0A4  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  4109  00187A  C0A5  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  4110  00187E  C0A6  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  4111  001882                     
  4112                           ; BSR set to: 0
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4114  001882  0E65               	movlw	101
  4115  001884  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4116  001886  B4D8               	btfsc	status,2,c
  4117  001888  EF48  F00C         	goto	u9251
  4118  00188C  EF4A  F00C         	goto	u9250
  4119  001890                     u9251:
  4120  001890  EF50  F00C         	goto	l8493
  4121  001894                     u9250:
  4122  001894                     
  4123                           ; BSR set to: 0
  4124  001894  C0BF  F09F         	movff	efgtoa@e,efgtoa@ne
  4125  001898  C0C0  F0A0         	movff	efgtoa@e+1,efgtoa@ne+1
  4126  00189C  EF54  F00C         	goto	l2207
  4127  0018A0                     l8493:
  4128                           
  4129                           ; BSR set to: 0
  4130  0018A0  0E00               	movlw	0
  4131  0018A2  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  4132  0018A4  0E00               	movlw	0
  4133  0018A6  6F9F               	movwf	efgtoa@ne& (0+255),b
  4134  0018A8                     l2207:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4138  0018A8  0E00               	movlw	0
  4139  0018AA  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  4140  0018AC  0E00               	movlw	0
  4141  0018AE  6F9D               	movwf	efgtoa@pp& (0+255),b
  4142                           
  4143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4144  0018B0  0E00               	movlw	0
  4145  0018B2  6F9C               	movwf	(efgtoa@t+1)& (0+255),b
  4146  0018B4  0E00               	movlw	0
  4147  0018B6  6F9B               	movwf	efgtoa@t& (0+255),b
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4150  0018B8  0E00               	movlw	0
  4151  0018BA  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4152  0018BC  0E00               	movlw	0
  4153  0018BE  6FB9               	movwf	efgtoa@i& (0+255),b
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4156  0018C0  EF50  F00D         	goto	l8543
  4157  0018C4                     l8495:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4161  0018C4  C0B1  F02A         	movff	efgtoa@h,___fldiv@b
  4162  0018C8  C0B2  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  4163  0018CC  C0B3  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  4164  0018D0  C0B4  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  4165  0018D4  C0C3  F02E         	movff	efgtoa@u,___fldiv@a
  4166  0018D8  C0C4  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  4167  0018DC  C0C5  F030         	movff	efgtoa@u+2,___fldiv@a+2
  4168  0018E0  C0C6  F031         	movff	efgtoa@u+3,___fldiv@a+3
  4169  0018E4  EC98  F015         	call	___fldiv	;wreg free
  4170  0018E8  C02A  F036         	movff	?___fldiv,floorf@x
  4171  0018EC  C02B  F037         	movff	?___fldiv+1,floorf@x+1
  4172  0018F0  C02C  F038         	movff	?___fldiv+2,floorf@x+2
  4173  0018F4  C02D  F039         	movff	?___fldiv+3,floorf@x+3
  4174  0018F8  ECE7  F019         	call	_floorf	;wreg free
  4175  0018FC  C036  F0B5         	movff	?_floorf,efgtoa@l
  4176  001900  C037  F0B6         	movff	?_floorf+1,efgtoa@l+1
  4177  001904  C038  F0B7         	movff	?_floorf+2,efgtoa@l+2
  4178  001908  C039  F0B8         	movff	?_floorf+3,efgtoa@l+3
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4181  00190C  C0B5  F079         	movff	efgtoa@l,___fltol@f1
  4182  001910  C0B6  F07A         	movff	efgtoa@l+1,___fltol@f1+1
  4183  001914  C0B7  F07B         	movff	efgtoa@l+2,___fltol@f1+2
  4184  001918  C0B8  F07C         	movff	efgtoa@l+3,___fltol@f1+3
  4185  00191C  ECAB  F022         	call	___fltol	;wreg free
  4186  001920  C079  F0A7         	movff	?___fltol,efgtoa@d
  4187  001924  C07A  F0A8         	movff	?___fltol+1,efgtoa@d+1
  4188  001928                     
  4189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4190  001928  B83C               	btfsc	_flags^0,4,c
  4191  00192A  EF99  F00C         	goto	u9261
  4192  00192E  EF9B  F00C         	goto	u9260
  4193  001932                     u9261:
  4194  001932  EFB9  F00C         	goto	l8507
  4195  001936                     u9260:
  4196  001936  0100               	movlb	0	; () banked
  4197  001938  51A7               	movf	efgtoa@d& (0+255),w,b
  4198  00193A  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4199  00193C  A4D8               	btfss	status,2,c
  4200  00193E  EFA3  F00C         	goto	u9271
  4201  001942  EFA5  F00C         	goto	u9270
  4202  001946                     u9271:
  4203  001946  EFB9  F00C         	goto	l8507
  4204  00194A                     u9270:
  4205  00194A                     
  4206                           ; BSR set to: 0
  4207  00194A  0E67               	movlw	103
  4208  00194C  19B0               	xorwf	efgtoa@mode& (0+255),w,b
  4209  00194E  A4D8               	btfss	status,2,c
  4210  001950  EFAC  F00C         	goto	u9281
  4211  001954  EFAE  F00C         	goto	u9280
  4212  001958                     u9281:
  4213  001958  EFB9  F00C         	goto	l8507
  4214  00195C                     u9280:
  4215  00195C                     
  4216                           ; BSR set to: 0
  4217  00195C  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4218  00195E  EFB5  F00C         	goto	u9290
  4219  001962  EFB3  F00C         	goto	u9291
  4220  001966                     u9291:
  4221  001966  EFB9  F00C         	goto	l8507
  4222  00196A                     u9290:
  4223  00196A                     
  4224                           ; BSR set to: 0
  4225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4226  00196A  4B9B               	infsnz	efgtoa@t& (0+255),f,b
  4227  00196C  2B9C               	incf	(efgtoa@t+1)& (0+255),f,b
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4230  00196E  EF04  F00D         	goto	l8535
  4231  001972                     l8507:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4234  001972  0100               	movlb	0	; () banked
  4235  001974  519D               	movf	efgtoa@pp& (0+255),w,b
  4236  001976  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4237  001978  A4D8               	btfss	status,2,c
  4238  00197A  EFC1  F00C         	goto	u9301
  4239  00197E  EFC3  F00C         	goto	u9300
  4240  001982                     u9301:
  4241  001982  EFED  F00C         	goto	l8527
  4242  001986                     u9300:
  4243  001986                     
  4244                           ; BSR set to: 0
  4245  001986  BFA0               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4246  001988  EFCA  F00C         	goto	u9310
  4247  00198C  EFC8  F00C         	goto	u9311
  4248  001990                     u9311:
  4249  001990  EFED  F00C         	goto	l8527
  4250  001994                     u9310:
  4251  001994                     
  4252                           ; BSR set to: 0
  4253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4254  001994  0E32               	movlw	low _dbuf
  4255  001996  25C1               	addwf	efgtoa@n& (0+255),w,b
  4256  001998  6ED9               	movwf	fsr2l,c
  4257  00199A  0E01               	movlw	high _dbuf
  4258  00199C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4259  00199E  6EDA               	movwf	fsr2h,c
  4260  0019A0  0E2E               	movlw	46
  4261  0019A2  6EDF               	movwf	indf2,c
  4262  0019A4                     
  4263                           ; BSR set to: 0
  4264  0019A4  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4265  0019A6  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4266  0019A8                     
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4269  0019A8  07AD               	decf	efgtoa@w& (0+255),f,b
  4270  0019AA  A0D8               	btfss	status,0,c
  4271  0019AC  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4272  0019AE                     
  4273                           ; BSR set to: 0
  4274                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4275  0019AE  0E00               	movlw	0
  4276  0019B0  6F9E               	movwf	(efgtoa@pp+1)& (0+255),b
  4277  0019B2  0E01               	movlw	1
  4278  0019B4  6F9D               	movwf	efgtoa@pp& (0+255),b
  4279  0019B6  EFED  F00C         	goto	l8527
  4280  0019BA                     l8519:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4284  0019BA  0E32               	movlw	low _dbuf
  4285  0019BC  25C1               	addwf	efgtoa@n& (0+255),w,b
  4286  0019BE  6ED9               	movwf	fsr2l,c
  4287  0019C0  0E01               	movlw	high _dbuf
  4288  0019C2  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4289  0019C4  6EDA               	movwf	fsr2h,c
  4290  0019C6  0E30               	movlw	48
  4291  0019C8  6EDF               	movwf	indf2,c
  4292  0019CA                     
  4293                           ; BSR set to: 0
  4294  0019CA  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4295  0019CC  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4296  0019CE                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4299  0019CE  07AD               	decf	efgtoa@w& (0+255),f,b
  4300  0019D0  A0D8               	btfss	status,0,c
  4301  0019D2  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4302  0019D4                     
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4305  0019D4  079B               	decf	efgtoa@t& (0+255),f,b
  4306  0019D6  A0D8               	btfss	status,0,c
  4307  0019D8  079C               	decf	(efgtoa@t+1)& (0+255),f,b
  4308  0019DA                     l8527:
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4312  0019DA  519B               	movf	efgtoa@t& (0+255),w,b
  4313  0019DC  119C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4314  0019DE  A4D8               	btfss	status,2,c
  4315  0019E0  EFF4  F00C         	goto	u9321
  4316  0019E4  EFF6  F00C         	goto	u9320
  4317  0019E8                     u9321:
  4318  0019E8  EFDD  F00C         	goto	l8519
  4319  0019EC                     u9320:
  4320  0019EC                     
  4321                           ; BSR set to: 0
  4322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4323  0019EC  0E32               	movlw	low _dbuf
  4324  0019EE  25C1               	addwf	efgtoa@n& (0+255),w,b
  4325  0019F0  6ED9               	movwf	fsr2l,c
  4326  0019F2  0E01               	movlw	high _dbuf
  4327  0019F4  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4328  0019F6  6EDA               	movwf	fsr2h,c
  4329  0019F8  51A7               	movf	efgtoa@d& (0+255),w,b
  4330  0019FA  0F30               	addlw	48
  4331  0019FC  6EDF               	movwf	indf2,c
  4332  0019FE                     
  4333                           ; BSR set to: 0
  4334  0019FE  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4335  001A00  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4336  001A02                     
  4337                           ; BSR set to: 0
  4338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4339  001A02  07AD               	decf	efgtoa@w& (0+255),f,b
  4340  001A04  A0D8               	btfss	status,0,c
  4341  001A06  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4342  001A08                     l8535:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4346  001A08  C0B1  F079         	movff	efgtoa@h,___flsub@b
  4347  001A0C  C0B2  F07A         	movff	efgtoa@h+1,___flsub@b+1
  4348  001A10  C0B3  F07B         	movff	efgtoa@h+2,___flsub@b+2
  4349  001A14  C0B4  F07C         	movff	efgtoa@h+3,___flsub@b+3
  4350  001A18  C0C3  F02E         	movff	efgtoa@u,___flmul@a
  4351  001A1C  C0C4  F02F         	movff	efgtoa@u+1,___flmul@a+1
  4352  001A20  C0C5  F030         	movff	efgtoa@u+2,___flmul@a+2
  4353  001A24  C0C6  F031         	movff	efgtoa@u+3,___flmul@a+3
  4354  001A28  C0B5  F02A         	movff	efgtoa@l,___flmul@b
  4355  001A2C  C0B6  F02B         	movff	efgtoa@l+1,___flmul@b+1
  4356  001A30  C0B7  F02C         	movff	efgtoa@l+2,___flmul@b+2
  4357  001A34  C0B8  F02D         	movff	efgtoa@l+3,___flmul@b+3
  4358  001A38  EC70  F013         	call	___flmul	;wreg free
  4359  001A3C  C02A  F07D         	movff	?___flmul,___flsub@a
  4360  001A40  C02B  F07E         	movff	?___flmul+1,___flsub@a+1
  4361  001A44  C02C  F07F         	movff	?___flmul+2,___flsub@a+2
  4362  001A48  C02D  F080         	movff	?___flmul+3,___flsub@a+3
  4363  001A4C  ECE7  F02A         	call	___flsub	;wreg free
  4364  001A50  C079  F0B1         	movff	?___flsub,efgtoa@h
  4365  001A54  C07A  F0B2         	movff	?___flsub+1,efgtoa@h+1
  4366  001A58  C07B  F0B3         	movff	?___flsub+2,efgtoa@h+2
  4367  001A5C  C07C  F0B4         	movff	?___flsub+3,efgtoa@h+3
  4368  001A60                     
  4369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4370  001A60  C0C3  F02A         	movff	efgtoa@u,___fldiv@b
  4371  001A64  C0C4  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4372  001A68  C0C5  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4373  001A6C  C0C6  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4374  001A70  0E00               	movlw	0
  4375  001A72  6E2E               	movwf	___fldiv@a^0,c
  4376  001A74  0E00               	movlw	0
  4377  001A76  6E2F               	movwf	(___fldiv@a+1)^0,c
  4378  001A78  0E20               	movlw	32
  4379  001A7A  6E30               	movwf	(___fldiv@a+2)^0,c
  4380  001A7C  0E41               	movlw	65
  4381  001A7E  6E31               	movwf	(___fldiv@a+3)^0,c
  4382  001A80  EC98  F015         	call	___fldiv	;wreg free
  4383  001A84  C02A  F0C3         	movff	?___fldiv,efgtoa@u
  4384  001A88  C02B  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4385  001A8C  C02C  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4386  001A90  C02D  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4387  001A94                     
  4388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4389  001A94  0100               	movlb	0	; () banked
  4390  001A96  079F               	decf	efgtoa@ne& (0+255),f,b
  4391  001A98  A0D8               	btfss	status,0,c
  4392  001A9A  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  4393  001A9C                     
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4396  001A9C  4BB9               	infsnz	efgtoa@i& (0+255),f,b
  4397  001A9E  2BBA               	incf	(efgtoa@i+1)& (0+255),f,b
  4398  001AA0                     l8543:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4402  001AA0  51A1               	movf	efgtoa@m& (0+255),w,b
  4403  001AA2  5DB9               	subwf	efgtoa@i& (0+255),w,b
  4404  001AA4  51BA               	movf	(efgtoa@i+1)& (0+255),w,b
  4405  001AA6  0A80               	xorlw	128
  4406  001AA8  6F8A               	movwf	??_efgtoa& (0+255),b
  4407  001AAA  51A2               	movf	(efgtoa@m+1)& (0+255),w,b
  4408  001AAC  0A80               	xorlw	128
  4409  001AAE  598A               	subwfb	??_efgtoa& (0+255),w,b
  4410  001AB0  B0D8               	btfsc	status,0,c
  4411  001AB2  EF5D  F00D         	goto	u9331
  4412  001AB6  EF5F  F00D         	goto	u9330
  4413  001ABA                     u9331:
  4414  001ABA  EF6D  F00D         	goto	l8547
  4415  001ABE                     u9330:
  4416  001ABE                     
  4417                           ; BSR set to: 0
  4418  001ABE  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4419  001AC0  EF6B  F00D         	goto	u9341
  4420  001AC4  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  4421  001AC6  E109               	bnz	u9340
  4422  001AC8  0E4B               	movlw	75
  4423  001ACA  5DC1               	subwf	efgtoa@n& (0+255),w,b
  4424  001ACC  A0D8               	btfss	status,0,c
  4425  001ACE  EF6B  F00D         	goto	u9341
  4426  001AD2  EF6D  F00D         	goto	u9340
  4427  001AD6                     u9341:
  4428  001AD6  EF62  F00C         	goto	l8495
  4429  001ADA                     u9340:
  4430  001ADA                     l8547:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4434  001ADA  519D               	movf	efgtoa@pp& (0+255),w,b
  4435  001ADC  119E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4436  001ADE  A4D8               	btfss	status,2,c
  4437  001AE0  EF74  F00D         	goto	u9351
  4438  001AE4  EF76  F00D         	goto	u9350
  4439  001AE8                     u9351:
  4440  001AE8  EF87  F00D         	goto	l8555
  4441  001AEC                     u9350:
  4442  001AEC                     
  4443                           ; BSR set to: 0
  4444  001AEC  A83C               	btfss	_flags^0,4,c
  4445  001AEE  EF7B  F00D         	goto	u9361
  4446  001AF2  EF7D  F00D         	goto	u9360
  4447  001AF6                     u9361:
  4448  001AF6  EF87  F00D         	goto	l8555
  4449  001AFA                     u9360:
  4450  001AFA                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4453  001AFA  0E32               	movlw	low _dbuf
  4454  001AFC  25C1               	addwf	efgtoa@n& (0+255),w,b
  4455  001AFE  6ED9               	movwf	fsr2l,c
  4456  001B00  0E01               	movlw	high _dbuf
  4457  001B02  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4458  001B04  6EDA               	movwf	fsr2h,c
  4459  001B06  0E2E               	movlw	46
  4460  001B08  6EDF               	movwf	indf2,c
  4461  001B0A                     
  4462                           ; BSR set to: 0
  4463  001B0A  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4464  001B0C  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4465  001B0E                     l8555:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4469  001B0E  0E32               	movlw	low _dbuf
  4470  001B10  25C1               	addwf	efgtoa@n& (0+255),w,b
  4471  001B12  6ED9               	movwf	fsr2l,c
  4472  001B14  0E01               	movlw	high _dbuf
  4473  001B16  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4474  001B18  6EDA               	movwf	fsr2h,c
  4475  001B1A  0E00               	movlw	0
  4476  001B1C  6EDF               	movwf	indf2,c
  4477  001B1E                     
  4478                           ; BSR set to: 0
  4479                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4480  001B1E  0E65               	movlw	101
  4481  001B20  19AF               	xorwf	efgtoa@nmode& (0+255),w,b
  4482  001B22  A4D8               	btfss	status,2,c
  4483  001B24  EF96  F00D         	goto	u9371
  4484  001B28  EF98  F00D         	goto	u9370
  4485  001B2C                     u9371:
  4486  001B2C  EF6A  F00E         	goto	l8617
  4487  001B30                     u9370:
  4488  001B30                     
  4489                           ; BSR set to: 0
  4490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4491  001B30  0E00               	movlw	0
  4492  001B32  6FBA               	movwf	(efgtoa@i+1)& (0+255),b
  4493  001B34  0E4F               	movlw	79
  4494  001B36  6FB9               	movwf	efgtoa@i& (0+255),b
  4495  001B38                     
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4498  001B38  0E32               	movlw	low _dbuf
  4499  001B3A  25B9               	addwf	efgtoa@i& (0+255),w,b
  4500  001B3C  6ED9               	movwf	fsr2l,c
  4501  001B3E  0E01               	movlw	high _dbuf
  4502  001B40  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4503  001B42  6EDA               	movwf	fsr2h,c
  4504  001B44  0E00               	movlw	0
  4505  001B46  6EDF               	movwf	indf2,c
  4506  001B48                     
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4509  001B48  0E00               	movlw	0
  4510  001B4A  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4511  001B4C  0E00               	movlw	0
  4512  001B4E  6FA9               	movwf	efgtoa@sign& (0+255),b
  4513  001B50                     
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4516  001B50  BFC0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4517  001B52  EFAF  F00D         	goto	u9380
  4518  001B56  EFAD  F00D         	goto	u9381
  4519  001B5A                     u9381:
  4520  001B5A  EFB7  F00D         	goto	l8571
  4521  001B5E                     u9380:
  4522  001B5E                     
  4523                           ; BSR set to: 0
  4524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4525  001B5E  0E00               	movlw	0
  4526  001B60  6FAA               	movwf	(efgtoa@sign+1)& (0+255),b
  4527  001B62  0E01               	movlw	1
  4528  001B64  6FA9               	movwf	efgtoa@sign& (0+255),b
  4529  001B66                     
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4532  001B66  6DBF               	negf	efgtoa@e& (0+255),b
  4533  001B68  1FC0               	comf	(efgtoa@e+1)& (0+255),f,b
  4534  001B6A  B0D8               	btfsc	status,0,c
  4535  001B6C  2BC0               	incf	(efgtoa@e+1)& (0+255),f,b
  4536  001B6E                     l8571:
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4540  001B6E  0E00               	movlw	0
  4541  001B70  6FAC               	movwf	(efgtoa@p+1)& (0+255),b
  4542  001B72  0E02               	movlw	2
  4543  001B74  6FAB               	movwf	efgtoa@p& (0+255),b
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4546  001B76  EFE8  F00D         	goto	l8583
  4547  001B7A                     l8573:
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4551  001B7A  07B9               	decf	efgtoa@i& (0+255),f,b
  4552  001B7C  A0D8               	btfss	status,0,c
  4553  001B7E  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  4554  001B80                     
  4555                           ; BSR set to: 0
  4556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4557  001B80  0E32               	movlw	low _dbuf
  4558  001B82  25B9               	addwf	efgtoa@i& (0+255),w,b
  4559  001B84  6ED9               	movwf	fsr2l,c
  4560  001B86  0E01               	movlw	high _dbuf
  4561  001B88  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4562  001B8A  6EDA               	movwf	fsr2h,c
  4563  001B8C  C0BF  F014         	movff	efgtoa@e,___awmod@dividend
  4564  001B90  C0C0  F015         	movff	efgtoa@e+1,___awmod@dividend+1
  4565  001B94  0E00               	movlw	0
  4566  001B96  6E17               	movwf	(___awmod@divisor+1)^0,c
  4567  001B98  0E0A               	movlw	10
  4568  001B9A  6E16               	movwf	___awmod@divisor^0,c
  4569  001B9C  EC27  F027         	call	___awmod	;wreg free
  4570  001BA0  5014               	movf	?___awmod^0,w,c
  4571  001BA2  0F30               	addlw	48
  4572  001BA4  6EDF               	movwf	indf2,c
  4573  001BA6                     
  4574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4575  001BA6  C0BF  F014         	movff	efgtoa@e,___awdiv@dividend
  4576  001BAA  C0C0  F015         	movff	efgtoa@e+1,___awdiv@dividend+1
  4577  001BAE  0E00               	movlw	0
  4578  001BB0  6E17               	movwf	(___awdiv@divisor+1)^0,c
  4579  001BB2  0E0A               	movlw	10
  4580  001BB4  6E16               	movwf	___awdiv@divisor^0,c
  4581  001BB6  EC04  F026         	call	___awdiv	;wreg free
  4582  001BBA  C014  F0BF         	movff	?___awdiv,efgtoa@e
  4583  001BBE  C015  F0C0         	movff	?___awdiv+1,efgtoa@e+1
  4584  001BC2                     
  4585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4586  001BC2  0100               	movlb	0	; () banked
  4587  001BC4  07AB               	decf	efgtoa@p& (0+255),f,b
  4588  001BC6  A0D8               	btfss	status,0,c
  4589  001BC8  07AC               	decf	(efgtoa@p+1)& (0+255),f,b
  4590  001BCA                     
  4591                           ; BSR set to: 0
  4592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4593  001BCA  07AD               	decf	efgtoa@w& (0+255),f,b
  4594  001BCC  A0D8               	btfss	status,0,c
  4595  001BCE  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4596  001BD0                     l8583:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4600  001BD0  51BF               	movf	efgtoa@e& (0+255),w,b
  4601  001BD2  11C0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4602  001BD4  A4D8               	btfss	status,2,c
  4603  001BD6  EFEF  F00D         	goto	u9391
  4604  001BDA  EFF1  F00D         	goto	u9390
  4605  001BDE                     u9391:
  4606  001BDE  EFBD  F00D         	goto	l8573
  4607  001BE2                     u9390:
  4608  001BE2                     
  4609                           ; BSR set to: 0
  4610  001BE2  BFAC               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4611  001BE4  EFFE  F00D         	goto	u9400
  4612  001BE8  51AC               	movf	(efgtoa@p+1)& (0+255),w,b
  4613  001BEA  E106               	bnz	u9401
  4614  001BEC  05AB               	decf	efgtoa@p& (0+255),w,b
  4615  001BEE  B0D8               	btfsc	status,0,c
  4616  001BF0  EFFC  F00D         	goto	u9401
  4617  001BF4  EFFE  F00D         	goto	u9400
  4618  001BF8                     u9401:
  4619  001BF8  EFBD  F00D         	goto	l8573
  4620  001BFC                     u9400:
  4621  001BFC                     
  4622                           ; BSR set to: 0
  4623                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4624  001BFC  07B9               	decf	efgtoa@i& (0+255),f,b
  4625  001BFE  A0D8               	btfss	status,0,c
  4626  001C00  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  4627  001C02                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4630  001C02  51A9               	movf	efgtoa@sign& (0+255),w,b
  4631  001C04  11AA               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4632  001C06  A4D8               	btfss	status,2,c
  4633  001C08  EF08  F00E         	goto	u9411
  4634  001C0C  EF0A  F00E         	goto	u9410
  4635  001C10                     u9411:
  4636  001C10  EF10  F00E         	goto	l8593
  4637  001C14                     u9410:
  4638  001C14                     
  4639                           ; BSR set to: 0
  4640  001C14  0E00               	movlw	0
  4641  001C16  6F96               	movwf	(_efgtoa$3559+1)& (0+255),b
  4642  001C18  0E2B               	movlw	43
  4643  001C1A  6F95               	movwf	_efgtoa$3559& (0+255),b
  4644  001C1C  EF14  F00E         	goto	l8595
  4645  001C20                     l8593:
  4646                           
  4647                           ; BSR set to: 0
  4648  001C20  0E00               	movlw	0
  4649  001C22  6F96               	movwf	(_efgtoa$3559+1)& (0+255),b
  4650  001C24  0E2D               	movlw	45
  4651  001C26  6F95               	movwf	_efgtoa$3559& (0+255),b
  4652  001C28                     l8595:
  4653                           
  4654                           ; BSR set to: 0
  4655  001C28  0E32               	movlw	low _dbuf
  4656  001C2A  25B9               	addwf	efgtoa@i& (0+255),w,b
  4657  001C2C  6ED9               	movwf	fsr2l,c
  4658  001C2E  0E01               	movlw	high _dbuf
  4659  001C30  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4660  001C32  6EDA               	movwf	fsr2h,c
  4661  001C34  0060  F257  FFDF   	movff	_efgtoa$3559,indf2
  4662  001C3A                     
  4663                           ; BSR set to: 0
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4665  001C3A  07AD               	decf	efgtoa@w& (0+255),f,b
  4666  001C3C  A0D8               	btfss	status,0,c
  4667  001C3E  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4668  001C40                     
  4669                           ; BSR set to: 0
  4670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4671  001C40  07B9               	decf	efgtoa@i& (0+255),f,b
  4672  001C42  A0D8               	btfss	status,0,c
  4673  001C44  07BA               	decf	(efgtoa@i+1)& (0+255),f,b
  4674  001C46                     
  4675                           ; BSR set to: 0
  4676  001C46  0EBF               	movlw	191
  4677  001C48  6F8A               	movwf	??_efgtoa& (0+255),b
  4678  001C4A  0EFF               	movlw	255
  4679  001C4C  6F8B               	movwf	(??_efgtoa+1)& (0+255),b
  4680  001C4E  5189               	movf	efgtoa@c& (0+255),w,b
  4681  001C50  6F8C               	movwf	(??_efgtoa+2)& (0+255),b
  4682  001C52  6B8D               	clrf	(??_efgtoa+3)& (0+255),b
  4683  001C54  518A               	movf	??_efgtoa& (0+255),w,b
  4684  001C56  278C               	addwf	(??_efgtoa+2)& (0+255),f,b
  4685  001C58  518B               	movf	(??_efgtoa+1)& (0+255),w,b
  4686  001C5A  238D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4687  001C5C  518D               	movf	(??_efgtoa+3)& (0+255),w,b
  4688  001C5E  E10A               	bnz	u9420
  4689  001C60  0E1A               	movlw	26
  4690  001C62  5D8C               	subwf	(??_efgtoa+2)& (0+255),w,b
  4691  001C64  A0D8               	btfss	status,0,c
  4692  001C66  EF37  F00E         	goto	u9421
  4693  001C6A  EF3A  F00E         	goto	u9420
  4694  001C6E                     u9421:
  4695  001C6E  0E01               	movlw	1
  4696  001C70  EF3B  F00E         	goto	u9430
  4697  001C74                     u9420:
  4698  001C74  0E00               	movlw	0
  4699  001C76                     u9430:
  4700  001C76  6F99               	movwf	_efgtoa$3561& (0+255),b
  4701  001C78  6B9A               	clrf	(_efgtoa$3561+1)& (0+255),b
  4702  001C7A                     
  4703                           ; BSR set to: 0
  4704  001C7A  5199               	movf	_efgtoa$3561& (0+255),w,b
  4705  001C7C  119A               	iorwf	(_efgtoa$3561+1)& (0+255),w,b
  4706  001C7E  A4D8               	btfss	status,2,c
  4707  001C80  EF44  F00E         	goto	u9441
  4708  001C84  EF46  F00E         	goto	u9440
  4709  001C88                     u9441:
  4710  001C88  EF4C  F00E         	goto	l8609
  4711  001C8C                     u9440:
  4712  001C8C                     
  4713                           ; BSR set to: 0
  4714  001C8C  0E00               	movlw	0
  4715  001C8E  6F98               	movwf	(_efgtoa$3560+1)& (0+255),b
  4716  001C90  0E65               	movlw	101
  4717  001C92  6F97               	movwf	_efgtoa$3560& (0+255),b
  4718  001C94  EF50  F00E         	goto	l8611
  4719  001C98                     l8609:
  4720                           
  4721                           ; BSR set to: 0
  4722  001C98  0E00               	movlw	0
  4723  001C9A  6F98               	movwf	(_efgtoa$3560+1)& (0+255),b
  4724  001C9C  0E45               	movlw	69
  4725  001C9E  6F97               	movwf	_efgtoa$3560& (0+255),b
  4726  001CA0                     l8611:
  4727                           
  4728                           ; BSR set to: 0
  4729  001CA0  0E32               	movlw	low _dbuf
  4730  001CA2  25B9               	addwf	efgtoa@i& (0+255),w,b
  4731  001CA4  6ED9               	movwf	fsr2l,c
  4732  001CA6  0E01               	movlw	high _dbuf
  4733  001CA8  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4734  001CAA  6EDA               	movwf	fsr2h,c
  4735  001CAC  0060  F25F  FFDF   	movff	_efgtoa$3560,indf2
  4736  001CB2                     
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4739  001CB2  07AD               	decf	efgtoa@w& (0+255),f,b
  4740  001CB4  A0D8               	btfss	status,0,c
  4741  001CB6  07AE               	decf	(efgtoa@w+1)& (0+255),f,b
  4742  001CB8                     
  4743                           ; BSR set to: 0
  4744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4745  001CB8  0E32               	movlw	low _dbuf
  4746  001CBA  25C1               	addwf	efgtoa@n& (0+255),w,b
  4747  001CBC  6E14               	movwf	strcpy@dest^0,c
  4748  001CBE  0E01               	movlw	high _dbuf
  4749  001CC0  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4750  001CC2  6E15               	movwf	(strcpy@dest+1)^0,c
  4751  001CC4  0E32               	movlw	low _dbuf
  4752  001CC6  25B9               	addwf	efgtoa@i& (0+255),w,b
  4753  001CC8  6E16               	movwf	strcpy@src^0,c
  4754  001CCA  0E01               	movlw	high _dbuf
  4755  001CCC  21BA               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4756  001CCE  6E17               	movwf	(strcpy@src+1)^0,c
  4757  001CD0  EC3D  F029         	call	_strcpy	;wreg free
  4758  001CD4                     l8617:
  4759                           
  4760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4761  001CD4  C083  F026         	movff	efgtoa@fp,pad@fp
  4762  001CD8  C084  F027         	movff	efgtoa@fp+1,pad@fp+1
  4763  001CDC  0E32               	movlw	low _dbuf
  4764  001CDE  6E28               	movwf	pad@buf^0,c
  4765  001CE0  0E01               	movlw	high _dbuf
  4766  001CE2  6E29               	movwf	(pad@buf+1)^0,c
  4767  001CE4  C0AD  F02A         	movff	efgtoa@w,pad@p
  4768  001CE8  C0AE  F02B         	movff	efgtoa@w+1,pad@p+1
  4769  001CEC  EC66  F026         	call	_pad	;wreg free
  4770  001CF0  C026  F083         	movff	?_pad,?_efgtoa
  4771  001CF4  C027  F084         	movff	?_pad+1,?_efgtoa+1
  4772  001CF8                     l2161:
  4773  001CF8  0012               	return		;funcret
  4774  001CFA                     __end_of_efgtoa:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function _tolower *****************
  4778 ;; Defined at:
  4779 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  c               2   25[COMRAM] int 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  2   25[COMRAM] int 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:        8 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; Hardware stack levels required when called: 9
  4800 ;; This function calls:
  4801 ;;		_isupper
  4802 ;; This function is called by:
  4803 ;;		_efgtoa
  4804 ;;		_vfpfcnvrt
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text8
  4809  005346                     __ptext8:
  4810                           	callstack 0
  4811  005346                     _tolower:
  4812                           	callstack 16
  4813  005346  0EBF               	movlw	191
  4814  005348  6E1C               	movwf	??_tolower^0,c
  4815  00534A  0EFF               	movlw	255
  4816  00534C  6E1D               	movwf	(??_tolower+1)^0,c
  4817  00534E  C01A  F01E         	movff	tolower@c,??_tolower+2
  4818  005352  C01B  F01F         	movff	tolower@c+1,??_tolower+3
  4819  005356  501C               	movf	??_tolower^0,w,c
  4820  005358  261E               	addwf	(??_tolower+2)^0,f,c
  4821  00535A  501D               	movf	(??_tolower+1)^0,w,c
  4822  00535C  221F               	addwfc	(??_tolower+3)^0,f,c
  4823  00535E  501F               	movf	(??_tolower+3)^0,w,c
  4824  005360  E10A               	bnz	u8630
  4825  005362  0E1A               	movlw	26
  4826  005364  5C1E               	subwf	(??_tolower+2)^0,w,c
  4827  005366  A0D8               	btfss	status,0,c
  4828  005368  EFB8  F029         	goto	u8631
  4829  00536C  EFBB  F029         	goto	u8630
  4830  005370                     u8631:
  4831  005370  0E01               	movlw	1
  4832  005372  EFBC  F029         	goto	u8640
  4833  005376                     u8630:
  4834  005376  0E00               	movlw	0
  4835  005378                     u8640:
  4836  005378  6E20               	movwf	_tolower$3672^0,c
  4837  00537A  6A21               	clrf	(_tolower$3672+1)^0,c
  4838  00537C  5020               	movf	_tolower$3672^0,w,c
  4839  00537E  1021               	iorwf	(_tolower$3672+1)^0,w,c
  4840  005380  B4D8               	btfsc	status,2,c
  4841  005382  EFC5  F029         	goto	u8651
  4842  005386  EFC7  F029         	goto	u8650
  4843  00538A                     u8651:
  4844  00538A  EFCE  F029         	goto	l2343
  4845  00538E                     u8650:
  4846  00538E  0E20               	movlw	32
  4847  005390  101A               	iorwf	tolower@c^0,w,c
  4848  005392  6E1A               	movwf	?_tolower^0,c
  4849  005394  501B               	movf	(tolower@c+1)^0,w,c
  4850  005396  6E1B               	movwf	(?_tolower+1)^0,c
  4851  005398  EFD2  F029         	goto	l2348
  4852  00539C                     l2343:
  4853  00539C  C01A  F01A         	movff	tolower@c,?_tolower
  4854  0053A0  C01B  F01B         	movff	tolower@c+1,?_tolower+1
  4855  0053A4                     l2348:
  4856  0053A4  0012               	return		;funcret
  4857  0053A6                     __end_of_tolower:
  4858                           	callstack 0
  4859                           
  4860 ;; *************** function _isupper *****************
  4861 ;; Defined at:
  4862 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  c               2   19[COMRAM] int 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2   19[COMRAM] int 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        6 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 8
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_efgtoa
  4887 ;;		_vfpfcnvrt
  4888 ;;		_tolower
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text9
  4893  0057D2                     __ptext9:
  4894                           	callstack 0
  4895  0057D2                     _isupper:
  4896                           	callstack 16
  4897  0057D2  0EBF               	movlw	191
  4898  0057D4  6E16               	movwf	??_isupper^0,c
  4899  0057D6  0EFF               	movlw	255
  4900  0057D8  6E17               	movwf	(??_isupper+1)^0,c
  4901  0057DA  C014  F018         	movff	isupper@c,??_isupper+2
  4902  0057DE  C015  F019         	movff	isupper@c+1,??_isupper+3
  4903  0057E2  5016               	movf	??_isupper^0,w,c
  4904  0057E4  2618               	addwf	(??_isupper+2)^0,f,c
  4905  0057E6  5017               	movf	(??_isupper+1)^0,w,c
  4906  0057E8  2219               	addwfc	(??_isupper+3)^0,f,c
  4907  0057EA  5019               	movf	(??_isupper+3)^0,w,c
  4908  0057EC  E10A               	bnz	u7640
  4909  0057EE  0E1A               	movlw	26
  4910  0057F0  5C18               	subwf	(??_isupper+2)^0,w,c
  4911  0057F2  A0D8               	btfss	status,0,c
  4912  0057F4  EFFE  F02B         	goto	u7641
  4913  0057F8  EF01  F02C         	goto	u7640
  4914  0057FC                     u7641:
  4915  0057FC  0E01               	movlw	1
  4916  0057FE  EF02  F02C         	goto	u7650
  4917  005802                     u7640:
  4918  005802  0E00               	movlw	0
  4919  005804                     u7650:
  4920  005804  6E14               	movwf	?_isupper^0,c
  4921  005806  6A15               	clrf	(?_isupper+1)^0,c
  4922  005808  0012               	return		;funcret
  4923  00580A                     __end_of_isupper:
  4924                           	callstack 0
  4925                           
  4926 ;; *************** function _strcpy *****************
  4927 ;; Defined at:
  4928 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;  dest            2   19[COMRAM] PTR unsigned char 
  4931 ;;		 -> dbuf(80), 
  4932 ;;  src             2   21[COMRAM] PTR const unsigned char 
  4933 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4934 ;;		 -> dbuf(80), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  d               2   27[COMRAM] PTR unsigned char 
  4937 ;;		 -> dbuf(80), 
  4938 ;;  s               2   25[COMRAM] PTR const unsigned char 
  4939 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4940 ;;		 -> dbuf(80), 
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2   19[COMRAM] PTR unsigned char 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;Total ram usage:       10 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 8
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_efgtoa
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text10
  4965  00527A                     __ptext10:
  4966                           	callstack 0
  4967  00527A                     _strcpy:
  4968                           	callstack 16
  4969  00527A  C016  F01A         	movff	strcpy@src,strcpy@s
  4970  00527E  C017  F01B         	movff	strcpy@src+1,strcpy@s+1
  4971  005282  C014  F01C         	movff	strcpy@dest,strcpy@d
  4972  005286  C015  F01D         	movff	strcpy@dest+1,strcpy@d+1
  4973  00528A                     l8211:
  4974  00528A  501A               	movf	strcpy@s^0,w,c
  4975  00528C  6E18               	movwf	??_strcpy^0,c
  4976  00528E  501B               	movf	(strcpy@s+1)^0,w,c
  4977  005290  6E19               	movwf	(??_strcpy+1)^0,c
  4978  005292  4A1A               	infsnz	strcpy@s^0,f,c
  4979  005294  2A1B               	incf	(strcpy@s+1)^0,f,c
  4980  005296  0060  F063  FFF6   	movff	??_strcpy,tblptrl
  4981  00529C  0060  F067  FFF7   	movff	??_strcpy+1,tblptrh
  4982  0052A2  0E00               	movlw	low (__smallconst shr (0+16))
  4983  0052A4  6EF8               	movwf	tblptru,c
  4984  0052A6  0060  F073  FFD9   	movff	strcpy@d,fsr2l
  4985  0052AC  0060  F077  FFDA   	movff	strcpy@d+1,fsr2h
  4986  0052B2  4A1C               	infsnz	strcpy@d^0,f,c
  4987  0052B4  2A1D               	incf	(strcpy@d+1)^0,f,c
  4988  0052B6  0E0F               	movlw	(high __ramtop+-1)
  4989  0052B8  64F7               	cpfsgt	tblptrh,c
  4990  0052BA  D003               	bra	u8617
  4991  0052BC  0008               	tblrd		*
  4992  0052BE  50F5               	movf	tablat,w,c
  4993  0052C0  D007               	bra	u8610
  4994  0052C2                     u8617:
  4995  0052C2  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4996  0052C8  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4997  0052CE  50E7               	movf	indf1,w,c
  4998  0052D0                     u8610:
  4999  0052D0  6EDF               	movwf	indf2,c
  5000  0052D2  50DF               	movf	indf2,w,c
  5001  0052D4  A4D8               	btfss	status,2,c
  5002  0052D6  EF6F  F029         	goto	u8621
  5003  0052DA  EF71  F029         	goto	u8620
  5004  0052DE                     u8621:
  5005  0052DE  EF45  F029         	goto	l8211
  5006  0052E2                     u8620:
  5007  0052E2  0012               	return		;funcret
  5008  0052E4                     __end_of_strcpy:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _floorf *****************
  5012 ;; Defined at:
  5013 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  x               4   53[COMRAM] float 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  u               4   25[BANK0 ] struct .
  5018 ;;  m               4   19[BANK0 ] unsigned long 
  5019 ;;  e               2   23[BANK0 ] int 
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  4   53[COMRAM] float 
  5022 ;; Registers used:
  5023 ;;		wreg, status,2, status,0
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Totals:         4      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;Total ram usage:       20 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 8
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_efgtoa
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text11
  5044  0033CE                     __ptext11:
  5045                           	callstack 0
  5046  0033CE                     _floorf:
  5047                           	callstack 16
  5048  0033CE  C118  F079         	movff	floorf@F527,floorf@u
  5049  0033D2  C119  F07A         	movff	floorf@F527+1,floorf@u+1
  5050  0033D6  C11A  F07B         	movff	floorf@F527+2,floorf@u+2
  5051  0033DA  C11B  F07C         	movff	floorf@F527+3,floorf@u+3
  5052  0033DE  C036  F079         	movff	floorf@x,floorf@u
  5053  0033E2  C037  F07A         	movff	floorf@x+1,floorf@u+1
  5054  0033E6  C038  F07B         	movff	floorf@x+2,floorf@u+2
  5055  0033EA  C039  F07C         	movff	floorf@x+3,floorf@u+3
  5056  0033EE  0E81               	movlw	129
  5057  0033F0  0100               	movlb	0	; () banked
  5058  0033F2  6F6D               	movwf	??_floorf& (0+255),b
  5059  0033F4  0EFF               	movlw	255
  5060  0033F6  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5061  0033F8  C079  F06F         	movff	floorf@u,??_floorf+2
  5062  0033FC  C07A  F070         	movff	floorf@u+1,??_floorf+3
  5063  003400  C07B  F071         	movff	floorf@u+2,??_floorf+4
  5064  003404  C07C  F072         	movff	floorf@u+3,??_floorf+5
  5065  003408  0E18               	movlw	24
  5066  00340A  EF0C  F01A         	goto	u8660
  5067  00340E                     u8665:
  5068  00340E  90D8               	bcf	status,0,c
  5069  003410  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  5070  003412  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5071  003414  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5072  003416  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5073  003418                     u8660:
  5074  003418  2EE8               	decfsz	wreg,f,c
  5075  00341A  EF07  F01A         	goto	u8665
  5076  00341E  516F               	movf	(??_floorf+2)& (0+255),w,b
  5077  003420  256D               	addwf	??_floorf& (0+255),w,b
  5078  003422  6F77               	movwf	floorf@e& (0+255),b
  5079  003424  0E00               	movlw	0
  5080  003426  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  5081  003428  6F78               	movwf	(floorf@e+1)& (0+255),b
  5082  00342A  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5083  00342C  EF21  F01A         	goto	u8671
  5084  003430  5178               	movf	(floorf@e+1)& (0+255),w,b
  5085  003432  E109               	bnz	u8670
  5086  003434  0E17               	movlw	23
  5087  003436  5D77               	subwf	floorf@e& (0+255),w,b
  5088  003438  A0D8               	btfss	status,0,c
  5089  00343A  EF21  F01A         	goto	u8671
  5090  00343E  EF23  F01A         	goto	u8670
  5091  003442                     u8671:
  5092  003442  EF2D  F01A         	goto	l8229
  5093  003446                     u8670:
  5094  003446                     l8227:
  5095                           
  5096                           ; BSR set to: 0
  5097  003446  C036  F036         	movff	floorf@x,?_floorf
  5098  00344A  C037  F037         	movff	floorf@x+1,?_floorf+1
  5099  00344E  C038  F038         	movff	floorf@x+2,?_floorf+2
  5100  003452  C039  F039         	movff	floorf@x+3,?_floorf+3
  5101  003456  EFF1  F01A         	goto	l2284
  5102  00345A                     l8229:
  5103                           
  5104                           ; BSR set to: 0
  5105  00345A  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  5106  00345C  EF32  F01A         	goto	u8681
  5107  003460  EF34  F01A         	goto	u8680
  5108  003464                     u8681:
  5109  003464  EFA5  F01A         	goto	l8239
  5110  003468                     u8680:
  5111  003468                     
  5112                           ; BSR set to: 0
  5113  003468  C077  F06D         	movff	floorf@e,??_floorf
  5114  00346C  0EFF               	movlw	255
  5115  00346E  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5116  003470  0EFF               	movlw	255
  5117  003472  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5118  003474  0E7F               	movlw	127
  5119  003476  6F70               	movwf	(??_floorf+3)& (0+255),b
  5120  003478  0E00               	movlw	0
  5121  00347A  6F71               	movwf	(??_floorf+4)& (0+255),b
  5122  00347C                     u8695:
  5123  00347C  676D               	tstfsz	??_floorf& (0+255),b
  5124  00347E  EF43  F01A         	goto	u8696
  5125  003482  EF4B  F01A         	goto	u8697
  5126  003486                     u8696:
  5127  003486  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  5128  003488  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  5129  00348A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5130  00348C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5131  00348E  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5132  003490  2F6D               	decfsz	??_floorf& (0+255),f,b
  5133  003492  EF3E  F01A         	goto	u8695
  5134  003496                     u8697:
  5135  003496  C06E  F073         	movff	??_floorf+1,floorf@m
  5136  00349A  C06F  F074         	movff	??_floorf+2,floorf@m+1
  5137  00349E  C070  F075         	movff	??_floorf+3,floorf@m+2
  5138  0034A2  C071  F076         	movff	??_floorf+4,floorf@m+3
  5139  0034A6  0100               	movlb	0	; () banked
  5140  0034A8  5173               	movf	floorf@m& (0+255),w,b
  5141  0034AA  1579               	andwf	floorf@u& (0+255),w,b
  5142  0034AC  6F6D               	movwf	??_floorf& (0+255),b
  5143  0034AE  5174               	movf	(floorf@m+1)& (0+255),w,b
  5144  0034B0  157A               	andwf	(floorf@u+1)& (0+255),w,b
  5145  0034B2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5146  0034B4  5175               	movf	(floorf@m+2)& (0+255),w,b
  5147  0034B6  157B               	andwf	(floorf@u+2)& (0+255),w,b
  5148  0034B8  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5149  0034BA  5176               	movf	(floorf@m+3)& (0+255),w,b
  5150  0034BC  157C               	andwf	(floorf@u+3)& (0+255),w,b
  5151  0034BE  6F70               	movwf	(??_floorf+3)& (0+255),b
  5152  0034C0  516D               	movf	??_floorf& (0+255),w,b
  5153  0034C2  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5154  0034C4  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5155  0034C6  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5156  0034C8  A4D8               	btfss	status,2,c
  5157  0034CA  EF69  F01A         	goto	u8701
  5158  0034CE  EF6B  F01A         	goto	u8700
  5159  0034D2                     u8701:
  5160  0034D2  EF6D  F01A         	goto	l8235
  5161  0034D6                     u8700:
  5162  0034D6  EF23  F01A         	goto	l8227
  5163  0034DA                     l8235:
  5164                           
  5165                           ; BSR set to: 0
  5166  0034DA  C079  F06D         	movff	floorf@u,??_floorf
  5167  0034DE  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5168  0034E2  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5169  0034E6  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5170  0034EA  0E20               	movlw	32
  5171  0034EC  EF7D  F01A         	goto	u8710
  5172  0034F0                     u8715:
  5173  0034F0  90D8               	bcf	status,0,c
  5174  0034F2  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5175  0034F4  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5176  0034F6  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5177  0034F8  336D               	rrcf	??_floorf& (0+255),f,b
  5178  0034FA                     u8710:
  5179  0034FA  2EE8               	decfsz	wreg,f,c
  5180  0034FC  EF78  F01A         	goto	u8715
  5181  003500  516D               	movf	??_floorf& (0+255),w,b
  5182  003502  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5183  003504  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5184  003506  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5185  003508  B4D8               	btfsc	status,2,c
  5186  00350A  EF89  F01A         	goto	u8721
  5187  00350E  EF8B  F01A         	goto	u8720
  5188  003512                     u8721:
  5189  003512  EF93  F01A         	goto	l2287
  5190  003516                     u8720:
  5191  003516                     
  5192                           ; BSR set to: 0
  5193  003516  5173               	movf	floorf@m& (0+255),w,b
  5194  003518  2779               	addwf	floorf@u& (0+255),f,b
  5195  00351A  5174               	movf	(floorf@m+1)& (0+255),w,b
  5196  00351C  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  5197  00351E  5175               	movf	(floorf@m+2)& (0+255),w,b
  5198  003520  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  5199  003522  5176               	movf	(floorf@m+3)& (0+255),w,b
  5200  003524  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  5201  003526                     l2287:
  5202                           
  5203                           ; BSR set to: 0
  5204  003526  1D73               	comf	floorf@m& (0+255),w,b
  5205  003528  6F6D               	movwf	??_floorf& (0+255),b
  5206  00352A  1D74               	comf	(floorf@m+1)& (0+255),w,b
  5207  00352C  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5208  00352E  1D75               	comf	(floorf@m+2)& (0+255),w,b
  5209  003530  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5210  003532  1D76               	comf	(floorf@m+3)& (0+255),w,b
  5211  003534  6F70               	movwf	(??_floorf+3)& (0+255),b
  5212  003536  516D               	movf	??_floorf& (0+255),w,b
  5213  003538  1779               	andwf	floorf@u& (0+255),f,b
  5214  00353A  516E               	movf	(??_floorf+1)& (0+255),w,b
  5215  00353C  177A               	andwf	(floorf@u+1)& (0+255),f,b
  5216  00353E  516F               	movf	(??_floorf+2)& (0+255),w,b
  5217  003540  177B               	andwf	(floorf@u+2)& (0+255),f,b
  5218  003542  5170               	movf	(??_floorf+3)& (0+255),w,b
  5219  003544  177C               	andwf	(floorf@u+3)& (0+255),f,b
  5220  003546  EFE9  F01A         	goto	l8247
  5221  00354A                     l8239:
  5222                           
  5223                           ; BSR set to: 0
  5224  00354A  C079  F06D         	movff	floorf@u,??_floorf
  5225  00354E  C07A  F06E         	movff	floorf@u+1,??_floorf+1
  5226  003552  C07B  F06F         	movff	floorf@u+2,??_floorf+2
  5227  003556  C07C  F070         	movff	floorf@u+3,??_floorf+3
  5228  00355A  0E20               	movlw	32
  5229  00355C  EFB5  F01A         	goto	u8730
  5230  003560                     u8735:
  5231  003560  90D8               	bcf	status,0,c
  5232  003562  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  5233  003564  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  5234  003566  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  5235  003568  336D               	rrcf	??_floorf& (0+255),f,b
  5236  00356A                     u8730:
  5237  00356A  2EE8               	decfsz	wreg,f,c
  5238  00356C  EFB0  F01A         	goto	u8735
  5239  003570  516D               	movf	??_floorf& (0+255),w,b
  5240  003572  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5241  003574  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5242  003576  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5243  003578  A4D8               	btfss	status,2,c
  5244  00357A  EFC1  F01A         	goto	u8741
  5245  00357E  EFC3  F01A         	goto	u8740
  5246  003582                     u8741:
  5247  003582  EFCD  F01A         	goto	l8243
  5248  003586                     u8740:
  5249  003586                     
  5250                           ; BSR set to: 0
  5251  003586  0E00               	movlw	0
  5252  003588  6F79               	movwf	floorf@u& (0+255),b
  5253  00358A  0E00               	movlw	0
  5254  00358C  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5255  00358E  0E00               	movlw	0
  5256  003590  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5257  003592  0E00               	movlw	0
  5258  003594  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5259  003596  EFE9  F01A         	goto	l8247
  5260  00359A                     l8243:
  5261                           
  5262                           ; BSR set to: 0
  5263  00359A  90D8               	bcf	status,0,c
  5264  00359C  3579               	rlcf	floorf@u& (0+255),w,b
  5265  00359E  6F6D               	movwf	??_floorf& (0+255),b
  5266  0035A0  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  5267  0035A2  6F6E               	movwf	(??_floorf+1)& (0+255),b
  5268  0035A4  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  5269  0035A6  6F6F               	movwf	(??_floorf+2)& (0+255),b
  5270  0035A8  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  5271  0035AA  6F70               	movwf	(??_floorf+3)& (0+255),b
  5272  0035AC  516D               	movf	??_floorf& (0+255),w,b
  5273  0035AE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  5274  0035B0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  5275  0035B2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  5276  0035B4  B4D8               	btfsc	status,2,c
  5277  0035B6  EFDF  F01A         	goto	u8751
  5278  0035BA  EFE1  F01A         	goto	u8750
  5279  0035BE                     u8751:
  5280  0035BE  EFE9  F01A         	goto	l8247
  5281  0035C2                     u8750:
  5282  0035C2                     
  5283                           ; BSR set to: 0
  5284  0035C2  0E00               	movlw	0
  5285  0035C4  6F79               	movwf	floorf@u& (0+255),b
  5286  0035C6  0E00               	movlw	0
  5287  0035C8  6F7A               	movwf	(floorf@u+1)& (0+255),b
  5288  0035CA  0E80               	movlw	128
  5289  0035CC  6F7B               	movwf	(floorf@u+2)& (0+255),b
  5290  0035CE  0EBF               	movlw	191
  5291  0035D0  6F7C               	movwf	(floorf@u+3)& (0+255),b
  5292  0035D2                     l8247:
  5293                           
  5294                           ; BSR set to: 0
  5295  0035D2  C079  F036         	movff	floorf@u,?_floorf
  5296  0035D6  C07A  F037         	movff	floorf@u+1,?_floorf+1
  5297  0035DA  C07B  F038         	movff	floorf@u+2,?_floorf+2
  5298  0035DE  C07C  F039         	movff	floorf@u+3,?_floorf+3
  5299  0035E2                     l2284:
  5300                           
  5301                           ; BSR set to: 0
  5302  0035E2  0012               	return		;funcret
  5303  0035E4                     __end_of_floorf:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function ___fpclassifyf *****************
  5307 ;; Defined at:
  5308 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  x               4   19[COMRAM] float 
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  u               4   29[COMRAM] struct .
  5313 ;;  e               2   27[COMRAM] int 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  2   19[COMRAM] int 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;Total ram usage:       14 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 8
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_efgtoa
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text12
  5338  00486A                     __ptext12:
  5339                           	callstack 0
  5340  00486A                     ___fpclassifyf:
  5341                           	callstack 16
  5342  00486A  C11C  F01E         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5343  00486E  C11D  F01F         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5344  004872  C11E  F020         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5345  004876  C11F  F021         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5346  00487A  C014  F01E         	movff	___fpclassifyf@x,___fpclassifyf@u
  5347  00487E  C015  F01F         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5348  004882  C016  F020         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5349  004886  C017  F021         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5350  00488A  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  5351  00488E  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5352  004892  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5353  004896  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5354  00489A  0E18               	movlw	24
  5355  00489C  EF55  F024         	goto	u8540
  5356  0048A0                     u8545:
  5357  0048A0  90D8               	bcf	status,0,c
  5358  0048A2  321B               	rrcf	(??___fpclassifyf+3)^0,f,c
  5359  0048A4  321A               	rrcf	(??___fpclassifyf+2)^0,f,c
  5360  0048A6  3219               	rrcf	(??___fpclassifyf+1)^0,f,c
  5361  0048A8  3218               	rrcf	??___fpclassifyf^0,f,c
  5362  0048AA                     u8540:
  5363  0048AA  2EE8               	decfsz	wreg,f,c
  5364  0048AC  EF50  F024         	goto	u8545
  5365  0048B0  5018               	movf	??___fpclassifyf^0,w,c
  5366  0048B2  6E1C               	movwf	___fpclassifyf@e^0,c
  5367  0048B4  6A1D               	clrf	(___fpclassifyf@e+1)^0,c
  5368  0048B6  501C               	movf	___fpclassifyf@e^0,w,c
  5369  0048B8  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5370  0048BA  A4D8               	btfss	status,2,c
  5371  0048BC  EF62  F024         	goto	u8551
  5372  0048C0  EF64  F024         	goto	u8550
  5373  0048C4                     u8551:
  5374  0048C4  EF84  F024         	goto	l8199
  5375  0048C8                     u8550:
  5376  0048C8  90D8               	bcf	status,0,c
  5377  0048CA  341E               	rlcf	___fpclassifyf@u^0,w,c
  5378  0048CC  6E18               	movwf	??___fpclassifyf^0,c
  5379  0048CE  341F               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5380  0048D0  6E19               	movwf	(??___fpclassifyf+1)^0,c
  5381  0048D2  3420               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5382  0048D4  6E1A               	movwf	(??___fpclassifyf+2)^0,c
  5383  0048D6  3421               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5384  0048D8  6E1B               	movwf	(??___fpclassifyf+3)^0,c
  5385  0048DA  5018               	movf	??___fpclassifyf^0,w,c
  5386  0048DC  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  5387  0048DE  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5388  0048E0  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5389  0048E2  A4D8               	btfss	status,2,c
  5390  0048E4  EF76  F024         	goto	u8561
  5391  0048E8  EF78  F024         	goto	u8560
  5392  0048EC                     u8561:
  5393  0048EC  EF7E  F024         	goto	l8195
  5394  0048F0                     u8560:
  5395  0048F0  0E00               	movlw	0
  5396  0048F2  6E15               	movwf	(?___fpclassifyf+1)^0,c
  5397  0048F4  0E02               	movlw	2
  5398  0048F6  6E14               	movwf	?___fpclassifyf^0,c
  5399  0048F8  EFB3  F024         	goto	l2270
  5400  0048FC                     l8195:
  5401  0048FC  0E00               	movlw	0
  5402  0048FE  6E15               	movwf	(?___fpclassifyf+1)^0,c
  5403  004900  0E03               	movlw	3
  5404  004902  6E14               	movwf	?___fpclassifyf^0,c
  5405  004904  EFB3  F024         	goto	l2270
  5406  004908                     l8199:
  5407  004908  281C               	incf	___fpclassifyf@e^0,w,c
  5408  00490A  101D               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5409  00490C  A4D8               	btfss	status,2,c
  5410  00490E  EF8B  F024         	goto	u8571
  5411  004912  EF8D  F024         	goto	u8570
  5412  004916                     u8571:
  5413  004916  EFAF  F024         	goto	l8205
  5414  00491A                     u8570:
  5415  00491A  C01E  F018         	movff	___fpclassifyf@u,??___fpclassifyf
  5416  00491E  C01F  F019         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5417  004922  C020  F01A         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5418  004926  C021  F01B         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5419  00492A  0E09               	movlw	9
  5420  00492C                     u8585:
  5421  00492C  90D8               	bcf	status,0,c
  5422  00492E  3618               	rlcf	??___fpclassifyf^0,f,c
  5423  004930  3619               	rlcf	(??___fpclassifyf+1)^0,f,c
  5424  004932  361A               	rlcf	(??___fpclassifyf+2)^0,f,c
  5425  004934  361B               	rlcf	(??___fpclassifyf+3)^0,f,c
  5426  004936  2EE8               	decfsz	wreg,f,c
  5427  004938  EF96  F024         	goto	u8585
  5428  00493C  5018               	movf	??___fpclassifyf^0,w,c
  5429  00493E  1019               	iorwf	(??___fpclassifyf+1)^0,w,c
  5430  004940  101A               	iorwf	(??___fpclassifyf+2)^0,w,c
  5431  004942  101B               	iorwf	(??___fpclassifyf+3)^0,w,c
  5432  004944  B4D8               	btfsc	status,2,c
  5433  004946  EFA7  F024         	goto	u8591
  5434  00494A  EFAA  F024         	goto	u8590
  5435  00494E                     u8591:
  5436  00494E  0E01               	movlw	1
  5437  004950  EFAB  F024         	goto	u8600
  5438  004954                     u8590:
  5439  004954  0E00               	movlw	0
  5440  004956                     u8600:
  5441  004956  6E14               	movwf	?___fpclassifyf^0,c
  5442  004958  6A15               	clrf	(?___fpclassifyf+1)^0,c
  5443  00495A  EFB3  F024         	goto	l2270
  5444  00495E                     l8205:
  5445  00495E  0E00               	movlw	0
  5446  004960  6E15               	movwf	(?___fpclassifyf+1)^0,c
  5447  004962  0E04               	movlw	4
  5448  004964  6E14               	movwf	?___fpclassifyf^0,c
  5449  004966                     l2270:
  5450  004966  0012               	return		;funcret
  5451  004968                     __end_of___fpclassifyf:
  5452                           	callstack 0
  5453                           
  5454 ;; *************** function ___flsub *****************
  5455 ;; Defined at:
  5456 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  b               4   25[BANK0 ] int 
  5459 ;;  a               4   29[BANK0 ] int 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  4   25[BANK0 ] int 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        8 bytes
  5476 ;; Hardware stack levels used: 1
  5477 ;; Hardware stack levels required when called: 9
  5478 ;; This function calls:
  5479 ;;		___fladd
  5480 ;; This function is called by:
  5481 ;;		_efgtoa
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text13
  5486  0055CE                     __ptext13:
  5487                           	callstack 0
  5488  0055CE                     ___flsub:
  5489                           	callstack 15
  5490  0055CE  0E00               	movlw	0
  5491  0055D0  0100               	movlb	0	; () banked
  5492  0055D2  1B7D               	xorwf	___flsub@a& (0+255),f,b
  5493  0055D4  0E00               	movlw	0
  5494  0055D6  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  5495  0055D8  0E00               	movlw	0
  5496  0055DA  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  5497  0055DC  0E80               	movlw	128
  5498  0055DE  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  5499  0055E0                     
  5500                           ; BSR set to: 0
  5501  0055E0  C079  F06D         	movff	___flsub@b,___fladd@b
  5502  0055E4  C07A  F06E         	movff	___flsub@b+1,___fladd@b+1
  5503  0055E8  C07B  F06F         	movff	___flsub@b+2,___fladd@b+2
  5504  0055EC  C07C  F070         	movff	___flsub@b+3,___fladd@b+3
  5505  0055F0  C07D  F071         	movff	___flsub@a,___fladd@a
  5506  0055F4  C07E  F072         	movff	___flsub@a+1,___fladd@a+1
  5507  0055F8  C07F  F073         	movff	___flsub@a+2,___fladd@a+2
  5508  0055FC  C080  F074         	movff	___flsub@a+3,___fladd@a+3
  5509  005600  EC0F  F011         	call	___fladd	;wreg free
  5510  005604  C06D  F079         	movff	?___fladd,?___flsub
  5511  005608  C06E  F07A         	movff	?___fladd+1,?___flsub+1
  5512  00560C  C06F  F07B         	movff	?___fladd+2,?___flsub+2
  5513  005610  C070  F07C         	movff	?___fladd+3,?___flsub+3
  5514  005614  0012               	return		;funcret
  5515  005616                     __end_of___flsub:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function ___flneg *****************
  5519 ;; Defined at:
  5520 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  f1              4   19[COMRAM] int 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  4   19[COMRAM] int 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;Total ram usage:        4 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 8
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_efgtoa
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           	psect	text14
  5549  00580A                     __ptext14:
  5550                           	callstack 0
  5551  00580A                     ___flneg:
  5552                           	callstack 16
  5553  00580A  5014               	movf	___flneg@f1^0,w,c
  5554  00580C  1015               	iorwf	(___flneg@f1+1)^0,w,c
  5555  00580E  1016               	iorwf	(___flneg@f1+2)^0,w,c
  5556  005810  1017               	iorwf	(___flneg@f1+3)^0,w,c
  5557  005812  B4D8               	btfsc	status,2,c
  5558  005814  EF0E  F02C         	goto	u8411
  5559  005818  EF10  F02C         	goto	u8410
  5560  00581C                     u8411:
  5561  00581C  EF18  F02C         	goto	l8113
  5562  005820                     u8410:
  5563  005820  0E00               	movlw	0
  5564  005822  1A14               	xorwf	___flneg@f1^0,f,c
  5565  005824  0E00               	movlw	0
  5566  005826  1A15               	xorwf	(___flneg@f1+1)^0,f,c
  5567  005828  0E00               	movlw	0
  5568  00582A  1A16               	xorwf	(___flneg@f1+2)^0,f,c
  5569  00582C  0E80               	movlw	128
  5570  00582E  1A17               	xorwf	(___flneg@f1+3)^0,f,c
  5571  005830                     l8113:
  5572  005830  C014  F014         	movff	___flneg@f1,?___flneg
  5573  005834  C015  F015         	movff	___flneg@f1+1,?___flneg+1
  5574  005838  C016  F016         	movff	___flneg@f1+2,?___flneg+2
  5575  00583C  C017  F017         	movff	___flneg@f1+3,?___flneg+3
  5576  005840  0012               	return		;funcret
  5577  005842                     __end_of___flneg:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function ___fleq *****************
  5581 ;; Defined at:
  5582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  ff1             4   19[COMRAM] int 
  5585 ;;  ff2             4   23[COMRAM] int 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;		None               void
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5597 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;Total ram usage:       12 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 8
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_efgtoa
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text15
  5612  004EFE                     __ptext15:
  5613                           	callstack 0
  5614  004EFE                     ___fleq:
  5615                           	callstack 16
  5616  004EFE  0E00               	movlw	0
  5617  004F00  1414               	andwf	___fleq@ff1^0,w,c
  5618  004F02  6E1C               	movwf	??___fleq^0,c
  5619  004F04  0E00               	movlw	0
  5620  004F06  1415               	andwf	(___fleq@ff1+1)^0,w,c
  5621  004F08  6E1D               	movwf	(??___fleq+1)^0,c
  5622  004F0A  0E80               	movlw	128
  5623  004F0C  1416               	andwf	(___fleq@ff1+2)^0,w,c
  5624  004F0E  6E1E               	movwf	(??___fleq+2)^0,c
  5625  004F10  0E7F               	movlw	127
  5626  004F12  1417               	andwf	(___fleq@ff1+3)^0,w,c
  5627  004F14  6E1F               	movwf	(??___fleq+3)^0,c
  5628  004F16  501C               	movf	??___fleq^0,w,c
  5629  004F18  101D               	iorwf	(??___fleq+1)^0,w,c
  5630  004F1A  101E               	iorwf	(??___fleq+2)^0,w,c
  5631  004F1C  101F               	iorwf	(??___fleq+3)^0,w,c
  5632  004F1E  A4D8               	btfss	status,2,c
  5633  004F20  EF94  F027         	goto	u8331
  5634  004F24  EF96  F027         	goto	u8330
  5635  004F28                     u8331:
  5636  004F28  EF9E  F027         	goto	l8075
  5637  004F2C                     u8330:
  5638  004F2C  0E00               	movlw	0
  5639  004F2E  6E14               	movwf	___fleq@ff1^0,c
  5640  004F30  0E00               	movlw	0
  5641  004F32  6E15               	movwf	(___fleq@ff1+1)^0,c
  5642  004F34  0E00               	movlw	0
  5643  004F36  6E16               	movwf	(___fleq@ff1+2)^0,c
  5644  004F38  0E00               	movlw	0
  5645  004F3A  6E17               	movwf	(___fleq@ff1+3)^0,c
  5646  004F3C                     l8075:
  5647  004F3C  0E00               	movlw	0
  5648  004F3E  1418               	andwf	___fleq@ff2^0,w,c
  5649  004F40  6E1C               	movwf	??___fleq^0,c
  5650  004F42  0E00               	movlw	0
  5651  004F44  1419               	andwf	(___fleq@ff2+1)^0,w,c
  5652  004F46  6E1D               	movwf	(??___fleq+1)^0,c
  5653  004F48  0E80               	movlw	128
  5654  004F4A  141A               	andwf	(___fleq@ff2+2)^0,w,c
  5655  004F4C  6E1E               	movwf	(??___fleq+2)^0,c
  5656  004F4E  0E7F               	movlw	127
  5657  004F50  141B               	andwf	(___fleq@ff2+3)^0,w,c
  5658  004F52  6E1F               	movwf	(??___fleq+3)^0,c
  5659  004F54  501C               	movf	??___fleq^0,w,c
  5660  004F56  101D               	iorwf	(??___fleq+1)^0,w,c
  5661  004F58  101E               	iorwf	(??___fleq+2)^0,w,c
  5662  004F5A  101F               	iorwf	(??___fleq+3)^0,w,c
  5663  004F5C  A4D8               	btfss	status,2,c
  5664  004F5E  EFB3  F027         	goto	u8341
  5665  004F62  EFB5  F027         	goto	u8340
  5666  004F66                     u8341:
  5667  004F66  EFBD  F027         	goto	l8079
  5668  004F6A                     u8340:
  5669  004F6A  0E00               	movlw	0
  5670  004F6C  6E18               	movwf	___fleq@ff2^0,c
  5671  004F6E  0E00               	movlw	0
  5672  004F70  6E19               	movwf	(___fleq@ff2+1)^0,c
  5673  004F72  0E00               	movlw	0
  5674  004F74  6E1A               	movwf	(___fleq@ff2+2)^0,c
  5675  004F76  0E00               	movlw	0
  5676  004F78  6E1B               	movwf	(___fleq@ff2+3)^0,c
  5677  004F7A                     l8079:
  5678  004F7A  5018               	movf	___fleq@ff2^0,w,c
  5679  004F7C  1814               	xorwf	___fleq@ff1^0,w,c
  5680  004F7E  E10F               	bnz	u8350
  5681  004F80  5019               	movf	(___fleq@ff2+1)^0,w,c
  5682  004F82  1815               	xorwf	(___fleq@ff1+1)^0,w,c
  5683  004F84  E10C               	bnz	u8350
  5684  004F86  501A               	movf	(___fleq@ff2+2)^0,w,c
  5685  004F88  1816               	xorwf	(___fleq@ff1+2)^0,w,c
  5686  004F8A  E109               	bnz	u8350
  5687  004F8C  501B               	movf	(___fleq@ff2+3)^0,w,c
  5688  004F8E  1817               	xorwf	(___fleq@ff1+3)^0,w,c
  5689  004F90  B4D8               	btfsc	status,2,c
  5690  004F92  EFCD  F027         	goto	u8351
  5691  004F96  EFCF  F027         	goto	u8350
  5692  004F9A                     u8351:
  5693  004F9A  EFD2  F027         	goto	l8083
  5694  004F9E                     u8350:
  5695  004F9E  90D8               	bcf	status,0,c
  5696  004FA0  EFD3  F027         	goto	l1654
  5697  004FA4                     l8083:
  5698  004FA4  80D8               	bsf	status,0,c
  5699  004FA6                     l1654:
  5700  004FA6  0012               	return		;funcret
  5701  004FA8                     __end_of___fleq:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function ___awmod *****************
  5705 ;; Defined at:
  5706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  dividend        2   19[COMRAM] int 
  5709 ;;  divisor         2   21[COMRAM] int 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;  sign            1   24[COMRAM] unsigned char 
  5712 ;;  counter         1   23[COMRAM] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  2   19[COMRAM] int 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        6 bytes
  5727 ;; Hardware stack levels used: 1
  5728 ;; Hardware stack levels required when called: 8
  5729 ;; This function calls:
  5730 ;;		Nothing
  5731 ;; This function is called by:
  5732 ;;		_efgtoa
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text16
  5737  004E4E                     __ptext16:
  5738                           	callstack 0
  5739  004E4E                     ___awmod:
  5740                           	callstack 16
  5741  004E4E  0E00               	movlw	0
  5742  004E50  6E19               	movwf	___awmod@sign^0,c
  5743  004E52  BE15               	btfsc	(___awmod@dividend+1)^0,7,c
  5744  004E54  EF30  F027         	goto	u8270
  5745  004E58  EF2E  F027         	goto	u8271
  5746  004E5C                     u8271:
  5747  004E5C  EF36  F027         	goto	l8043
  5748  004E60                     u8270:
  5749  004E60  6C14               	negf	___awmod@dividend^0,c
  5750  004E62  1E15               	comf	(___awmod@dividend+1)^0,f,c
  5751  004E64  B0D8               	btfsc	status,0,c
  5752  004E66  2A15               	incf	(___awmod@dividend+1)^0,f,c
  5753  004E68  0E01               	movlw	1
  5754  004E6A  6E19               	movwf	___awmod@sign^0,c
  5755  004E6C                     l8043:
  5756  004E6C  BE17               	btfsc	(___awmod@divisor+1)^0,7,c
  5757  004E6E  EF3D  F027         	goto	u8280
  5758  004E72  EF3B  F027         	goto	u8281
  5759  004E76                     u8281:
  5760  004E76  EF41  F027         	goto	l8047
  5761  004E7A                     u8280:
  5762  004E7A  6C16               	negf	___awmod@divisor^0,c
  5763  004E7C  1E17               	comf	(___awmod@divisor+1)^0,f,c
  5764  004E7E  B0D8               	btfsc	status,0,c
  5765  004E80  2A17               	incf	(___awmod@divisor+1)^0,f,c
  5766  004E82                     l8047:
  5767  004E82  5016               	movf	___awmod@divisor^0,w,c
  5768  004E84  1017               	iorwf	(___awmod@divisor+1)^0,w,c
  5769  004E86  B4D8               	btfsc	status,2,c
  5770  004E88  EF48  F027         	goto	u8291
  5771  004E8C  EF4A  F027         	goto	u8290
  5772  004E90                     u8291:
  5773  004E90  EF6E  F027         	goto	l8063
  5774  004E94                     u8290:
  5775  004E94  0E01               	movlw	1
  5776  004E96  6E18               	movwf	___awmod@counter^0,c
  5777  004E98  EF52  F027         	goto	l8053
  5778  004E9C                     l8051:
  5779  004E9C  90D8               	bcf	status,0,c
  5780  004E9E  3616               	rlcf	___awmod@divisor^0,f,c
  5781  004EA0  3617               	rlcf	(___awmod@divisor+1)^0,f,c
  5782  004EA2  2A18               	incf	___awmod@counter^0,f,c
  5783  004EA4                     l8053:
  5784  004EA4  AE17               	btfss	(___awmod@divisor+1)^0,7,c
  5785  004EA6  EF57  F027         	goto	u8301
  5786  004EAA  EF59  F027         	goto	u8300
  5787  004EAE                     u8301:
  5788  004EAE  EF4E  F027         	goto	l8051
  5789  004EB2                     u8300:
  5790  004EB2                     l8055:
  5791  004EB2  5016               	movf	___awmod@divisor^0,w,c
  5792  004EB4  5C14               	subwf	___awmod@dividend^0,w,c
  5793  004EB6  5017               	movf	(___awmod@divisor+1)^0,w,c
  5794  004EB8  5815               	subwfb	(___awmod@dividend+1)^0,w,c
  5795  004EBA  A0D8               	btfss	status,0,c
  5796  004EBC  EF62  F027         	goto	u8311
  5797  004EC0  EF64  F027         	goto	u8310
  5798  004EC4                     u8311:
  5799  004EC4  EF68  F027         	goto	l8059
  5800  004EC8                     u8310:
  5801  004EC8  5016               	movf	___awmod@divisor^0,w,c
  5802  004ECA  5E14               	subwf	___awmod@dividend^0,f,c
  5803  004ECC  5017               	movf	(___awmod@divisor+1)^0,w,c
  5804  004ECE  5A15               	subwfb	(___awmod@dividend+1)^0,f,c
  5805  004ED0                     l8059:
  5806  004ED0  90D8               	bcf	status,0,c
  5807  004ED2  3217               	rrcf	(___awmod@divisor+1)^0,f,c
  5808  004ED4  3216               	rrcf	___awmod@divisor^0,f,c
  5809  004ED6  2E18               	decfsz	___awmod@counter^0,f,c
  5810  004ED8  EF59  F027         	goto	l8055
  5811  004EDC                     l8063:
  5812  004EDC  5019               	movf	___awmod@sign^0,w,c
  5813  004EDE  B4D8               	btfsc	status,2,c
  5814  004EE0  EF74  F027         	goto	u8321
  5815  004EE4  EF76  F027         	goto	u8320
  5816  004EE8                     u8321:
  5817  004EE8  EF7A  F027         	goto	l8067
  5818  004EEC                     u8320:
  5819  004EEC  6C14               	negf	___awmod@dividend^0,c
  5820  004EEE  1E15               	comf	(___awmod@dividend+1)^0,f,c
  5821  004EF0  B0D8               	btfsc	status,0,c
  5822  004EF2  2A15               	incf	(___awmod@dividend+1)^0,f,c
  5823  004EF4                     l8067:
  5824  004EF4  C014  F014         	movff	___awmod@dividend,?___awmod
  5825  004EF8  C015  F015         	movff	___awmod@dividend+1,?___awmod+1
  5826  004EFC  0012               	return		;funcret
  5827  004EFE                     __end_of___awmod:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _dtoa *****************
  5831 ;; Defined at:
  5832 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  5835 ;;		 -> NULL(0), 
  5836 ;;  d               8    2[BANK0 ] long long 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  n               8   18[BANK0 ] long long 
  5839 ;;  i               2   26[BANK0 ] int 
  5840 ;;  s               2   16[BANK0 ] int 
  5841 ;;  w               2   14[BANK0 ] int 
  5842 ;;  p               2   12[BANK0 ] int 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  2    0[BANK0 ] int 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:       36 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 13
  5859 ;; This function calls:
  5860 ;;		___aodiv
  5861 ;;		___aomod
  5862 ;;		_abs
  5863 ;;		_pad
  5864 ;; This function is called by:
  5865 ;;		_vfpfcnvrt
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text17
  5870  002ECC                     __ptext17:
  5871                           	callstack 0
  5872  002ECC                     _dtoa:
  5873                           	callstack 12
  5874  002ECC                     
  5875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5876  002ECC  C062  F072         	movff	dtoa@d,dtoa@n
  5877  002ED0  C063  F073         	movff	dtoa@d+1,dtoa@n+1
  5878  002ED4  C064  F074         	movff	dtoa@d+2,dtoa@n+2
  5879  002ED8  C065  F075         	movff	dtoa@d+3,dtoa@n+3
  5880  002EDC  C066  F076         	movff	dtoa@d+4,dtoa@n+4
  5881  002EE0  C067  F077         	movff	dtoa@d+5,dtoa@n+5
  5882  002EE4  C068  F078         	movff	dtoa@d+6,dtoa@n+6
  5883  002EE8  C069  F079         	movff	dtoa@d+7,dtoa@n+7
  5884  002EEC                     
  5885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5886  002EEC  0100               	movlb	0	; () banked
  5887  002EEE  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
  5888  002EF0  EF7C  F017         	goto	u8761
  5889  002EF4  EF7F  F017         	goto	u8760
  5890  002EF8                     u8761:
  5891  002EF8  0E01               	movlw	1
  5892  002EFA  EF80  F017         	goto	u8770
  5893  002EFE                     u8760:
  5894  002EFE  0E00               	movlw	0
  5895  002F00                     u8770:
  5896  002F00  6F70               	movwf	dtoa@s& (0+255),b
  5897  002F02  6B71               	clrf	(dtoa@s+1)& (0+255),b
  5898                           
  5899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5900  002F04  5170               	movf	dtoa@s& (0+255),w,b
  5901  002F06  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  5902  002F08  B4D8               	btfsc	status,2,c
  5903  002F0A  EF89  F017         	goto	u8781
  5904  002F0E  EF8B  F017         	goto	u8780
  5905  002F12                     u8781:
  5906  002F12  EF9B  F017         	goto	l8257
  5907  002F16                     u8780:
  5908  002F16                     
  5909                           ; BSR set to: 0
  5910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5911  002F16  1F79               	comf	(dtoa@n+7)& (0+255),f,b
  5912  002F18  1F78               	comf	(dtoa@n+6)& (0+255),f,b
  5913  002F1A  1F77               	comf	(dtoa@n+5)& (0+255),f,b
  5914  002F1C  1F76               	comf	(dtoa@n+4)& (0+255),f,b
  5915  002F1E  1F75               	comf	(dtoa@n+3)& (0+255),f,b
  5916  002F20  1F74               	comf	(dtoa@n+2)& (0+255),f,b
  5917  002F22  1F73               	comf	(dtoa@n+1)& (0+255),f,b
  5918  002F24  6D72               	negf	dtoa@n& (0+255),b
  5919  002F26  0E00               	movlw	0
  5920  002F28  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
  5921  002F2A  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
  5922  002F2C  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
  5923  002F2E  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
  5924  002F30  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
  5925  002F32  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
  5926  002F34  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
  5927  002F36                     l8257:
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5931  002F36  BE3B               	btfsc	(_prec+1)^0,7,c
  5932  002F38  EFA0  F017         	goto	u8791
  5933  002F3C  EFA2  F017         	goto	u8790
  5934  002F40                     u8791:
  5935  002F40  EFA3  F017         	goto	l8261
  5936  002F44                     u8790:
  5937  002F44                     
  5938                           ; BSR set to: 0
  5939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5940  002F44  923C               	bcf	_flags^0,1,c
  5941  002F46                     l8261:
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5945  002F46  BE3B               	btfsc	(_prec+1)^0,7,c
  5946  002F48  EFB0  F017         	goto	u8800
  5947  002F4C  503B               	movf	(_prec+1)^0,w,c
  5948  002F4E  E106               	bnz	u8801
  5949  002F50  043A               	decf	_prec^0,w,c
  5950  002F52  B0D8               	btfsc	status,0,c
  5951  002F54  EFAE  F017         	goto	u8801
  5952  002F58  EFB0  F017         	goto	u8800
  5953  002F5C                     u8801:
  5954  002F5C  EFB6  F017         	goto	l2123
  5955  002F60                     u8800:
  5956  002F60                     
  5957                           ; BSR set to: 0
  5958  002F60  0E00               	movlw	0
  5959  002F62  6F6D               	movwf	(dtoa@p+1)& (0+255),b
  5960  002F64  0E01               	movlw	1
  5961  002F66  6F6C               	movwf	dtoa@p& (0+255),b
  5962  002F68  EFBA  F017         	goto	l2125
  5963  002F6C                     l2123:
  5964                           
  5965                           ; BSR set to: 0
  5966  002F6C  C03A  F06C         	movff	_prec,dtoa@p
  5967  002F70  C03B  F06D         	movff	_prec+1,dtoa@p+1
  5968  002F74                     l2125:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5972  002F74  C0E3  F06E         	movff	_width,dtoa@w
  5973  002F78  C0E4  F06F         	movff	_width+1,dtoa@w+1
  5974  002F7C                     
  5975                           ; BSR set to: 0
  5976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5977  002F7C  5170               	movf	dtoa@s& (0+255),w,b
  5978  002F7E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  5979  002F80  A4D8               	btfss	status,2,c
  5980  002F82  EFC5  F017         	goto	u8811
  5981  002F86  EFC7  F017         	goto	u8810
  5982  002F8A                     u8811:
  5983  002F8A  EFCE  F017         	goto	l8269
  5984  002F8E                     u8810:
  5985  002F8E                     
  5986                           ; BSR set to: 0
  5987  002F8E  A43C               	btfss	_flags^0,2,c
  5988  002F90  EFCC  F017         	goto	u8821
  5989  002F94  EFCE  F017         	goto	u8820
  5990  002F98                     u8821:
  5991  002F98  EFD1  F017         	goto	l8271
  5992  002F9C                     u8820:
  5993  002F9C                     l8269:
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  5997  002F9C  076E               	decf	dtoa@w& (0+255),f,b
  5998  002F9E  A0D8               	btfss	status,0,c
  5999  002FA0  076F               	decf	(dtoa@w+1)& (0+255),f,b
  6000  002FA2                     l8271:
  6001                           
  6002                           ; BSR set to: 0
  6003                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6004  002FA2  0E00               	movlw	0
  6005  002FA4  6F7B               	movwf	(dtoa@i+1)& (0+255),b
  6006  002FA6  0E4F               	movlw	79
  6007  002FA8  6F7A               	movwf	dtoa@i& (0+255),b
  6008  002FAA                     
  6009                           ; BSR set to: 0
  6010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6011  002FAA  0E00               	movlw	0
  6012  002FAC  0101               	movlb	1	; () banked
  6013  002FAE  6F81               	movwf	(_dbuf+79)& (0+255),b
  6014                           
  6015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6016  002FB0  EF57  F018         	goto	l8285
  6017  002FB4                     l8275:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  6021  002FB4  077A               	decf	dtoa@i& (0+255),f,b
  6022  002FB6  A0D8               	btfss	status,0,c
  6023  002FB8  077B               	decf	(dtoa@i+1)& (0+255),f,b
  6024  002FBA                     
  6025                           ; BSR set to: 0
  6026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6027  002FBA  0E32               	movlw	low _dbuf
  6028  002FBC  257A               	addwf	dtoa@i& (0+255),w,b
  6029  002FBE  6ED9               	movwf	fsr2l,c
  6030  002FC0  0E01               	movlw	high _dbuf
  6031  002FC2  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  6032  002FC4  6EDA               	movwf	fsr2h,c
  6033  002FC6  C072  F014         	movff	dtoa@n,___aomod@dividend
  6034  002FCA  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
  6035  002FCE  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
  6036  002FD2  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
  6037  002FD6  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
  6038  002FDA  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
  6039  002FDE  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
  6040  002FE2  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
  6041  002FE6  0E0A               	movlw	10
  6042  002FE8  6E1C               	movwf	___aomod@divisor^0,c
  6043  002FEA  0E00               	movlw	0
  6044  002FEC  6E1D               	movwf	(___aomod@divisor+1)^0,c
  6045  002FEE  0E00               	movlw	0
  6046  002FF0  6E1E               	movwf	(___aomod@divisor+2)^0,c
  6047  002FF2  0E00               	movlw	0
  6048  002FF4  6E1F               	movwf	(___aomod@divisor+3)^0,c
  6049  002FF6  0E00               	movlw	0
  6050  002FF8  6E20               	movwf	(___aomod@divisor+4)^0,c
  6051  002FFA  0E00               	movlw	0
  6052  002FFC  6E21               	movwf	(___aomod@divisor+5)^0,c
  6053  002FFE  0E00               	movlw	0
  6054  003000  6E22               	movwf	(___aomod@divisor+6)^0,c
  6055  003002  0E00               	movlw	0
  6056  003004  6E23               	movwf	(___aomod@divisor+7)^0,c
  6057  003006  EC31  F020         	call	___aomod	;wreg free
  6058  00300A  C014  F031         	movff	?___aomod,??_dtoa
  6059  00300E  C015  F032         	movff	?___aomod+1,??_dtoa+1
  6060  003012  C016  F033         	movff	?___aomod+2,??_dtoa+2
  6061  003016  C017  F034         	movff	?___aomod+3,??_dtoa+3
  6062  00301A  C018  F035         	movff	?___aomod+4,??_dtoa+4
  6063  00301E  C019  F036         	movff	?___aomod+5,??_dtoa+5
  6064  003022  C01A  F037         	movff	?___aomod+6,??_dtoa+6
  6065  003026  C01B  F038         	movff	?___aomod+7,??_dtoa+7
  6066  00302A  C031  F026         	movff	??_dtoa,abs@a
  6067  00302E  C033  F027         	movff	??_dtoa+2,abs@a+1
  6068  003032  EC51  F02B         	call	_abs	;wreg free
  6069  003036  5026               	movf	?_abs^0,w,c
  6070  003038  0F30               	addlw	48
  6071  00303A  6EDF               	movwf	indf2,c
  6072  00303C                     
  6073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  6074  00303C  0100               	movlb	0	; () banked
  6075  00303E  076C               	decf	dtoa@p& (0+255),f,b
  6076  003040  A0D8               	btfss	status,0,c
  6077  003042  076D               	decf	(dtoa@p+1)& (0+255),f,b
  6078  003044                     
  6079                           ; BSR set to: 0
  6080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  6081  003044  076E               	decf	dtoa@w& (0+255),f,b
  6082  003046  A0D8               	btfss	status,0,c
  6083  003048  076F               	decf	(dtoa@w+1)& (0+255),f,b
  6084  00304A                     
  6085                           ; BSR set to: 0
  6086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6087  00304A  C072  F014         	movff	dtoa@n,___aodiv@dividend
  6088  00304E  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
  6089  003052  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
  6090  003056  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
  6091  00305A  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
  6092  00305E  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
  6093  003062  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
  6094  003066  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
  6095  00306A  0E0A               	movlw	10
  6096  00306C  6E1C               	movwf	___aodiv@divisor^0,c
  6097  00306E  0E00               	movlw	0
  6098  003070  6E1D               	movwf	(___aodiv@divisor+1)^0,c
  6099  003072  0E00               	movlw	0
  6100  003074  6E1E               	movwf	(___aodiv@divisor+2)^0,c
  6101  003076  0E00               	movlw	0
  6102  003078  6E1F               	movwf	(___aodiv@divisor+3)^0,c
  6103  00307A  0E00               	movlw	0
  6104  00307C  6E20               	movwf	(___aodiv@divisor+4)^0,c
  6105  00307E  0E00               	movlw	0
  6106  003080  6E21               	movwf	(___aodiv@divisor+5)^0,c
  6107  003082  0E00               	movlw	0
  6108  003084  6E22               	movwf	(___aodiv@divisor+6)^0,c
  6109  003086  0E00               	movlw	0
  6110  003088  6E23               	movwf	(___aodiv@divisor+7)^0,c
  6111  00308A  ECAD  F01E         	call	___aodiv	;wreg free
  6112  00308E  C014  F072         	movff	?___aodiv,dtoa@n
  6113  003092  C015  F073         	movff	?___aodiv+1,dtoa@n+1
  6114  003096  C016  F074         	movff	?___aodiv+2,dtoa@n+2
  6115  00309A  C017  F075         	movff	?___aodiv+3,dtoa@n+3
  6116  00309E  C018  F076         	movff	?___aodiv+4,dtoa@n+4
  6117  0030A2  C019  F077         	movff	?___aodiv+5,dtoa@n+5
  6118  0030A6  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
  6119  0030AA  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
  6120  0030AE                     l8285:
  6121                           
  6122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6123  0030AE  0100               	movlb	0	; () banked
  6124  0030B0  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
  6125  0030B2  EF63  F018         	goto	u8831
  6126  0030B6  517B               	movf	(dtoa@i+1)& (0+255),w,b
  6127  0030B8  E108               	bnz	u8830
  6128  0030BA  057A               	decf	dtoa@i& (0+255),w,b
  6129  0030BC  A0D8               	btfss	status,0,c
  6130  0030BE  EF63  F018         	goto	u8831
  6131  0030C2  EF65  F018         	goto	u8830
  6132  0030C6                     u8831:
  6133  0030C6  EF95  F018         	goto	l8295
  6134  0030CA                     u8830:
  6135  0030CA                     
  6136                           ; BSR set to: 0
  6137  0030CA  5172               	movf	dtoa@n& (0+255),w,b
  6138  0030CC  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
  6139  0030CE  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
  6140  0030D0  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
  6141  0030D2  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
  6142  0030D4  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
  6143  0030D6  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
  6144  0030D8  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
  6145  0030DA  A4D8               	btfss	status,2,c
  6146  0030DC  EF72  F018         	goto	u8841
  6147  0030E0  EF74  F018         	goto	u8840
  6148  0030E4                     u8841:
  6149  0030E4  EFDA  F017         	goto	l8275
  6150  0030E8                     u8840:
  6151  0030E8                     
  6152                           ; BSR set to: 0
  6153  0030E8  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
  6154  0030EA  EF81  F018         	goto	u8850
  6155  0030EE  516D               	movf	(dtoa@p+1)& (0+255),w,b
  6156  0030F0  E106               	bnz	u8851
  6157  0030F2  056C               	decf	dtoa@p& (0+255),w,b
  6158  0030F4  B0D8               	btfsc	status,0,c
  6159  0030F6  EF7F  F018         	goto	u8851
  6160  0030FA  EF81  F018         	goto	u8850
  6161  0030FE                     u8851:
  6162  0030FE  EFDA  F017         	goto	l8275
  6163  003102                     u8850:
  6164  003102                     
  6165                           ; BSR set to: 0
  6166  003102  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
  6167  003104  EF8C  F018         	goto	u8861
  6168  003108  516F               	movf	(dtoa@w+1)& (0+255),w,b
  6169  00310A  E108               	bnz	u8860
  6170  00310C  056E               	decf	dtoa@w& (0+255),w,b
  6171  00310E  A0D8               	btfss	status,0,c
  6172  003110  EF8C  F018         	goto	u8861
  6173  003114  EF8E  F018         	goto	u8860
  6174  003118                     u8861:
  6175  003118  EF95  F018         	goto	l8295
  6176  00311C                     u8860:
  6177  00311C                     
  6178                           ; BSR set to: 0
  6179  00311C  B23C               	btfsc	_flags^0,1,c
  6180  00311E  EF93  F018         	goto	u8871
  6181  003122  EF95  F018         	goto	u8870
  6182  003126                     u8871:
  6183  003126  EFDA  F017         	goto	l8275
  6184  00312A                     u8870:
  6185  00312A                     l8295:
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6189  00312A  5170               	movf	dtoa@s& (0+255),w,b
  6190  00312C  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  6191  00312E  A4D8               	btfss	status,2,c
  6192  003130  EF9C  F018         	goto	u8881
  6193  003134  EF9E  F018         	goto	u8880
  6194  003138                     u8881:
  6195  003138  EFA5  F018         	goto	l8299
  6196  00313C                     u8880:
  6197  00313C                     
  6198                           ; BSR set to: 0
  6199  00313C  A43C               	btfss	_flags^0,2,c
  6200  00313E  EFA3  F018         	goto	u8891
  6201  003142  EFA5  F018         	goto	u8890
  6202  003146                     u8891:
  6203  003146  EFC4  F018         	goto	l8309
  6204  00314A                     u8890:
  6205  00314A                     l8299:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  6209  00314A  077A               	decf	dtoa@i& (0+255),f,b
  6210  00314C  A0D8               	btfss	status,0,c
  6211  00314E  077B               	decf	(dtoa@i+1)& (0+255),f,b
  6212  003150                     
  6213                           ; BSR set to: 0
  6214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6215  003150  5170               	movf	dtoa@s& (0+255),w,b
  6216  003152  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
  6217  003154  A4D8               	btfss	status,2,c
  6218  003156  EFAF  F018         	goto	u8901
  6219  00315A  EFB1  F018         	goto	u8900
  6220  00315E                     u8901:
  6221  00315E  EFB7  F018         	goto	l8305
  6222  003162                     u8900:
  6223  003162                     
  6224                           ; BSR set to: 0
  6225  003162  0E00               	movlw	0
  6226  003164  6F6B               	movwf	(_dtoa$3526+1)& (0+255),b
  6227  003166  0E2B               	movlw	43
  6228  003168  6F6A               	movwf	_dtoa$3526& (0+255),b
  6229  00316A  EFBB  F018         	goto	l8307
  6230  00316E                     l8305:
  6231                           
  6232                           ; BSR set to: 0
  6233  00316E  0E00               	movlw	0
  6234  003170  6F6B               	movwf	(_dtoa$3526+1)& (0+255),b
  6235  003172  0E2D               	movlw	45
  6236  003174  6F6A               	movwf	_dtoa$3526& (0+255),b
  6237  003176                     l8307:
  6238                           
  6239                           ; BSR set to: 0
  6240  003176  0E32               	movlw	low _dbuf
  6241  003178  257A               	addwf	dtoa@i& (0+255),w,b
  6242  00317A  6ED9               	movwf	fsr2l,c
  6243  00317C  0E01               	movlw	high _dbuf
  6244  00317E  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  6245  003180  6EDA               	movwf	fsr2h,c
  6246  003182  0060  F1AB  FFDF   	movff	_dtoa$3526,indf2
  6247  003188                     l8309:
  6248                           
  6249                           ; BSR set to: 0
  6250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6251  003188  C060  F026         	movff	dtoa@fp,pad@fp
  6252  00318C  C061  F027         	movff	dtoa@fp+1,pad@fp+1
  6253  003190  0E32               	movlw	low _dbuf
  6254  003192  257A               	addwf	dtoa@i& (0+255),w,b
  6255  003194  6E28               	movwf	pad@buf^0,c
  6256  003196  0E01               	movlw	high _dbuf
  6257  003198  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
  6258  00319A  6E29               	movwf	(pad@buf+1)^0,c
  6259  00319C  C06E  F02A         	movff	dtoa@w,pad@p
  6260  0031A0  C06F  F02B         	movff	dtoa@w+1,pad@p+1
  6261  0031A4  EC66  F026         	call	_pad	;wreg free
  6262  0031A8  C026  F060         	movff	?_pad,?_dtoa
  6263  0031AC  C027  F061         	movff	?_pad+1,?_dtoa+1
  6264  0031B0  0012               	return		;funcret
  6265  0031B2                     __end_of_dtoa:
  6266                           	callstack 0
  6267                           
  6268 ;; *************** function _pad *****************
  6269 ;; Defined at:
  6270 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  6273 ;;		 -> NULL(0), 
  6274 ;;  buf             2   39[COMRAM] PTR unsigned char 
  6275 ;;		 -> dbuf(80), 
  6276 ;;  p               2   41[COMRAM] int 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  w               2   46[COMRAM] int 
  6279 ;;  i               2   44[COMRAM] int 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  2   37[COMRAM] int 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6289 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;Total ram usage:       11 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 12
  6296 ;; This function calls:
  6297 ;;		_fputc
  6298 ;;		_fputs
  6299 ;;		_strlen
  6300 ;; This function is called by:
  6301 ;;		_dtoa
  6302 ;;		_efgtoa
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text18
  6307  004CCC                     __ptext18:
  6308                           	callstack 0
  6309  004CCC                     _pad:
  6310                           	callstack 12
  6311  004CCC                     
  6312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6313  004CCC  A03C               	btfss	_flags^0,0,c
  6314  004CCE  EF6B  F026         	goto	u8491
  6315  004CD2  EF6D  F026         	goto	u8490
  6316  004CD6                     u8491:
  6317  004CD6  EF77  F026         	goto	l8165
  6318  004CDA                     u8490:
  6319  004CDA                     
  6320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6321  004CDA  C028  F01F         	movff	pad@buf,fputs@s
  6322  004CDE  C029  F020         	movff	pad@buf+1,fputs@s+1
  6323  004CE2  C026  F021         	movff	pad@fp,fputs@fp
  6324  004CE6  C027  F022         	movff	pad@fp+1,fputs@fp+1
  6325  004CEA  EC2F  F02B         	call	_fputs	;wreg free
  6326  004CEE                     l8165:
  6327                           
  6328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6329  004CEE  BE2B               	btfsc	(pad@p+1)^0,7,c
  6330  004CF0  EF7C  F026         	goto	u8501
  6331  004CF4  EF7E  F026         	goto	u8500
  6332  004CF8                     u8501:
  6333  004CF8  EF84  F026         	goto	l8169
  6334  004CFC                     u8500:
  6335  004CFC  C02A  F02F         	movff	pad@p,pad@w
  6336  004D00  C02B  F030         	movff	pad@p+1,pad@w+1
  6337  004D04  EF88  F026         	goto	l2112
  6338  004D08                     l8169:
  6339  004D08  0E00               	movlw	0
  6340  004D0A  6E30               	movwf	(pad@w+1)^0,c
  6341  004D0C  0E00               	movlw	0
  6342  004D0E  6E2F               	movwf	pad@w^0,c
  6343  004D10                     l2112:
  6344                           
  6345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6346  004D10  0E00               	movlw	0
  6347  004D12  6E2E               	movwf	(pad@i+1)^0,c
  6348  004D14  0E00               	movlw	0
  6349  004D16  6E2D               	movwf	pad@i^0,c
  6350                           
  6351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6352  004D18  EF9A  F026         	goto	l8175
  6353  004D1C                     l8171:
  6354                           
  6355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6356  004D1C  0E00               	movlw	0
  6357  004D1E  6E17               	movwf	(fputc@c+1)^0,c
  6358  004D20  0E20               	movlw	32
  6359  004D22  6E16               	movwf	fputc@c^0,c
  6360  004D24  C026  F018         	movff	pad@fp,fputc@fp
  6361  004D28  C027  F019         	movff	pad@fp+1,fputc@fp+1
  6362  004D2C  EC27  F028         	call	_fputc	;wreg free
  6363  004D30                     
  6364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6365  004D30  4A2D               	infsnz	pad@i^0,f,c
  6366  004D32  2A2E               	incf	(pad@i+1)^0,f,c
  6367  004D34                     l8175:
  6368                           
  6369                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6370  004D34  502F               	movf	pad@w^0,w,c
  6371  004D36  5C2D               	subwf	pad@i^0,w,c
  6372  004D38  502E               	movf	(pad@i+1)^0,w,c
  6373  004D3A  0A80               	xorlw	128
  6374  004D3C  6E2C               	movwf	??_pad^0,c
  6375  004D3E  5030               	movf	(pad@w+1)^0,w,c
  6376  004D40  0A80               	xorlw	128
  6377  004D42  582C               	subwfb	??_pad^0,w,c
  6378  004D44  A0D8               	btfss	status,0,c
  6379  004D46  EFA7  F026         	goto	u8511
  6380  004D4A  EFA9  F026         	goto	u8510
  6381  004D4E                     u8511:
  6382  004D4E  EF8E  F026         	goto	l8171
  6383  004D52                     u8510:
  6384  004D52                     
  6385                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6386  004D52  B03C               	btfsc	_flags^0,0,c
  6387  004D54  EFAE  F026         	goto	u8521
  6388  004D58  EFB0  F026         	goto	u8520
  6389  004D5C                     u8521:
  6390  004D5C  EFBA  F026         	goto	l8179
  6391  004D60                     u8520:
  6392  004D60                     
  6393                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6394  004D60  C028  F01F         	movff	pad@buf,fputs@s
  6395  004D64  C029  F020         	movff	pad@buf+1,fputs@s+1
  6396  004D68  C026  F021         	movff	pad@fp,fputs@fp
  6397  004D6C  C027  F022         	movff	pad@fp+1,fputs@fp+1
  6398  004D70  EC2F  F02B         	call	_fputs	;wreg free
  6399  004D74                     l8179:
  6400                           
  6401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6402  004D74  C028  F014         	movff	pad@buf,strlen@s
  6403  004D78  C029  F015         	movff	pad@buf+1,strlen@s+1
  6404  004D7C  EC90  F02B         	call	_strlen	;wreg free
  6405  004D80  502F               	movf	pad@w^0,w,c
  6406  004D82  2414               	addwf	?_strlen^0,w,c
  6407  004D84  6E26               	movwf	?_pad^0,c
  6408  004D86  5030               	movf	(pad@w+1)^0,w,c
  6409  004D88  2015               	addwfc	(?_strlen+1)^0,w,c
  6410  004D8A  6E27               	movwf	(?_pad+1)^0,c
  6411  004D8C  0012               	return		;funcret
  6412  004D8E                     __end_of_pad:
  6413                           	callstack 0
  6414                           
  6415 ;; *************** function _strlen *****************
  6416 ;; Defined at:
  6417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;  s               2   19[COMRAM] PTR const unsigned char 
  6420 ;;		 -> dbuf(80), 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  a               2   21[COMRAM] PTR const unsigned char 
  6423 ;;		 -> dbuf(80), 
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  2   19[COMRAM] unsigned int 
  6426 ;; Registers used:
  6427 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;Total ram usage:        4 bytes
  6438 ;; Hardware stack levels used: 1
  6439 ;; Hardware stack levels required when called: 8
  6440 ;; This function calls:
  6441 ;;		Nothing
  6442 ;; This function is called by:
  6443 ;;		_pad
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           	psect	text19
  6448  005720                     __ptext19:
  6449                           	callstack 0
  6450  005720                     _strlen:
  6451                           	callstack 15
  6452  005720  C014  F016         	movff	strlen@s,strlen@a
  6453  005724  C015  F017         	movff	strlen@s+1,strlen@a+1
  6454  005728  EF98  F02B         	goto	l7627
  6455  00572C                     l7625:
  6456  00572C  4A14               	infsnz	strlen@s^0,f,c
  6457  00572E  2A15               	incf	(strlen@s+1)^0,f,c
  6458  005730                     l7627:
  6459  005730  0060  F053  FFD9   	movff	strlen@s,fsr2l
  6460  005736  0060  F057  FFDA   	movff	strlen@s+1,fsr2h
  6461  00573C  50DF               	movf	indf2,w,c
  6462  00573E  A4D8               	btfss	status,2,c
  6463  005740  EFA4  F02B         	goto	u7631
  6464  005744  EFA6  F02B         	goto	u7630
  6465  005748                     u7631:
  6466  005748  EF96  F02B         	goto	l7625
  6467  00574C                     u7630:
  6468  00574C  5016               	movf	strlen@a^0,w,c
  6469  00574E  5C14               	subwf	strlen@s^0,w,c
  6470  005750  6E14               	movwf	?_strlen^0,c
  6471  005752  5017               	movf	(strlen@a+1)^0,w,c
  6472  005754  5815               	subwfb	(strlen@s+1)^0,w,c
  6473  005756  6E15               	movwf	(?_strlen+1)^0,c
  6474  005758  0012               	return		;funcret
  6475  00575A                     __end_of_strlen:
  6476                           	callstack 0
  6477                           
  6478 ;; *************** function _fputs *****************
  6479 ;; Defined at:
  6480 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  s               2   30[COMRAM] PTR const unsigned char 
  6483 ;;		 -> dbuf(80), 
  6484 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  6485 ;;		 -> NULL(0), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  i               2   35[COMRAM] int 
  6488 ;;  c               1   34[COMRAM] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  2   30[COMRAM] int 
  6491 ;; Registers used:
  6492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;Total ram usage:        7 bytes
  6503 ;; Hardware stack levels used: 1
  6504 ;; Hardware stack levels required when called: 11
  6505 ;; This function calls:
  6506 ;;		_fputc
  6507 ;; This function is called by:
  6508 ;;		_pad
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text20
  6513  00565E                     __ptext20:
  6514                           	callstack 0
  6515  00565E                     _fputs:
  6516                           	callstack 12
  6517  00565E  0E00               	movlw	0
  6518  005660  6E25               	movwf	(fputs@i+1)^0,c
  6519  005662  0E00               	movlw	0
  6520  005664  6E24               	movwf	fputs@i^0,c
  6521  005666  EF40  F02B         	goto	l7621
  6522  00566A                     l7617:
  6523  00566A  C023  F016         	movff	fputs@c,fputc@c
  6524  00566E  6A17               	clrf	(fputc@c+1)^0,c
  6525  005670  C021  F018         	movff	fputs@fp,fputc@fp
  6526  005674  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  6527  005678  EC27  F028         	call	_fputc	;wreg free
  6528  00567C  4A24               	infsnz	fputs@i^0,f,c
  6529  00567E  2A25               	incf	(fputs@i+1)^0,f,c
  6530  005680                     l7621:
  6531  005680  5024               	movf	fputs@i^0,w,c
  6532  005682  241F               	addwf	fputs@s^0,w,c
  6533  005684  6ED9               	movwf	fsr2l,c
  6534  005686  5025               	movf	(fputs@i+1)^0,w,c
  6535  005688  2020               	addwfc	(fputs@s+1)^0,w,c
  6536  00568A  6EDA               	movwf	fsr2h,c
  6537  00568C  50DF               	movf	indf2,w,c
  6538  00568E  6E23               	movwf	fputs@c^0,c
  6539  005690  5023               	movf	fputs@c^0,w,c
  6540  005692  A4D8               	btfss	status,2,c
  6541  005694  EF4E  F02B         	goto	u7621
  6542  005698  EF50  F02B         	goto	u7620
  6543  00569C                     u7621:
  6544  00569C  EF35  F02B         	goto	l7617
  6545  0056A0                     u7620:
  6546  0056A0  0012               	return		;funcret
  6547  0056A2                     __end_of_fputs:
  6548                           	callstack 0
  6549                           
  6550 ;; *************** function _fputc *****************
  6551 ;; Defined at:
  6552 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  c               2   21[COMRAM] int 
  6555 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  6556 ;;		 -> NULL(0), 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  2   21[COMRAM] int 
  6561 ;; Registers used:
  6562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;Total ram usage:        9 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 10
  6575 ;; This function calls:
  6576 ;;		_putch
  6577 ;; This function is called by:
  6578 ;;		_pad
  6579 ;;		_vfpfcnvrt
  6580 ;;		_fputs
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text21
  6585  00504E                     __ptext21:
  6586                           	callstack 0
  6587  00504E                     _fputc:
  6588                           	callstack 15
  6589  00504E  5018               	movf	fputc@fp^0,w,c
  6590  005050  1019               	iorwf	(fputc@fp+1)^0,w,c
  6591  005052  B4D8               	btfsc	status,2,c
  6592  005054  EF2E  F028         	goto	u7191
  6593  005058  EF30  F028         	goto	u7190
  6594  00505C                     u7191:
  6595  00505C  EF39  F028         	goto	l7403
  6596  005060                     u7190:
  6597  005060  5018               	movf	fputc@fp^0,w,c
  6598  005062  1019               	iorwf	(fputc@fp+1)^0,w,c
  6599  005064  A4D8               	btfss	status,2,c
  6600  005066  EF37  F028         	goto	u7201
  6601  00506A  EF39  F028         	goto	u7200
  6602  00506E                     u7201:
  6603  00506E  EF3E  F028         	goto	l7405
  6604  005072                     u7200:
  6605  005072                     l7403:
  6606  005072  5016               	movf	fputc@c^0,w,c
  6607  005074  ECB5  F02E         	call	_putch
  6608  005078  EF71  F028         	goto	l2309
  6609  00507C                     l7405:
  6610  00507C  EE20 F004          	lfsr	2,4
  6611  005080  5018               	movf	fputc@fp^0,w,c
  6612  005082  26D9               	addwf	fsr2l,f,c
  6613  005084  5019               	movf	(fputc@fp+1)^0,w,c
  6614  005086  22DA               	addwfc	fsr2h,f,c
  6615  005088  50DE               	movf	postinc2,w,c
  6616  00508A  10DE               	iorwf	postinc2,w,c
  6617  00508C  B4D8               	btfsc	status,2,c
  6618  00508E  EF4B  F028         	goto	u7211
  6619  005092  EF4D  F028         	goto	u7210
  6620  005096                     u7211:
  6621  005096  EF68  F028         	goto	l7409
  6622  00509A                     u7210:
  6623  00509A  EE20 F004          	lfsr	2,4
  6624  00509E  5018               	movf	fputc@fp^0,w,c
  6625  0050A0  26D9               	addwf	fsr2l,f,c
  6626  0050A2  5019               	movf	(fputc@fp+1)^0,w,c
  6627  0050A4  22DA               	addwfc	fsr2h,f,c
  6628  0050A6  EE10 F002          	lfsr	1,2
  6629  0050AA  5018               	movf	fputc@fp^0,w,c
  6630  0050AC  26E1               	addwf	fsr1l,f,c
  6631  0050AE  5019               	movf	(fputc@fp+1)^0,w,c
  6632  0050B0  22E2               	addwfc	fsr1h,f,c
  6633  0050B2  50DE               	movf	postinc2,w,c
  6634  0050B4  5CE6               	subwf	postinc1,w,c
  6635  0050B6  50E6               	movf	postinc1,w,c
  6636  0050B8  0A80               	xorlw	128
  6637  0050BA  6E1E               	movwf	(??_fputc+4)^0,c
  6638  0050BC  50DE               	movf	postinc2,w,c
  6639  0050BE  0A80               	xorlw	128
  6640  0050C0  581E               	subwfb	(??_fputc+4)^0,w,c
  6641  0050C2  B0D8               	btfsc	status,0,c
  6642  0050C4  EF66  F028         	goto	u7221
  6643  0050C8  EF68  F028         	goto	u7220
  6644  0050CC                     u7221:
  6645  0050CC  EF71  F028         	goto	l2309
  6646  0050D0                     u7220:
  6647  0050D0                     l7409:
  6648  0050D0  EE20 F002          	lfsr	2,2
  6649  0050D4  5018               	movf	fputc@fp^0,w,c
  6650  0050D6  26D9               	addwf	fsr2l,f,c
  6651  0050D8  5019               	movf	(fputc@fp+1)^0,w,c
  6652  0050DA  22DA               	addwfc	fsr2h,f,c
  6653  0050DC  2ADE               	incf	postinc2,f,c
  6654  0050DE  0E00               	movlw	0
  6655  0050E0  22DD               	addwfc	postdec2,f,c
  6656  0050E2                     l2309:
  6657  0050E2  0012               	return		;funcret
  6658  0050E4                     __end_of_fputc:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function _putch *****************
  6662 ;; Defined at:
  6663 ;;		line 230 in file "mcc_generated_files/uart1.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  txData          1    wreg     unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  txData          1   20[COMRAM] unsigned char 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      void 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6681 ;;Total ram usage:        1 bytes
  6682 ;; Hardware stack levels used: 1
  6683 ;; Hardware stack levels required when called: 9
  6684 ;; This function calls:
  6685 ;;		_UART1_Write
  6686 ;; This function is called by:
  6687 ;;		_fputc
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text22
  6692  005D6A                     __ptext22:
  6693                           	callstack 0
  6694  005D6A                     _putch:
  6695                           	callstack 15
  6696                           
  6697                           ;incstack = 0
  6698                           ;putch@txData stored from wreg
  6699  005D6A  6E15               	movwf	putch@txData^0,c
  6700  005D6C                     
  6701                           ;mcc_generated_files/uart1.c: 230: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          231: {;mcc_generated_files/uart1.c: 232:     UART1_Write(txData);
  6702  005D6C  5015               	movf	putch@txData^0,w,c
  6703  005D6E  EC72  F029         	call	_UART1_Write
  6704  005D72  0012               	return		;funcret
  6705  005D74                     __end_of_putch:
  6706                           	callstack 0
  6707                           
  6708 ;; *************** function _UART1_Write *****************
  6709 ;; Defined at:
  6710 ;;		line 202 in file "mcc_generated_files/uart1.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;  txData          1    wreg     unsigned char 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;  txData          1   19[COMRAM] unsigned char 
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used: 1
  6730 ;; Hardware stack levels required when called: 8
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_putch
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           	psect	text23
  6739  0052E4                     __ptext23:
  6740                           	callstack 0
  6741  0052E4                     _UART1_Write:
  6742                           	callstack 15
  6743                           
  6744                           ;incstack = 0
  6745                           ;UART1_Write@txData stored from wreg
  6746  0052E4  6E14               	movwf	UART1_Write@txData^0,c
  6747  0052E6                     l7381:
  6748                           
  6749                           ;mcc_generated_files/uart1.c: 204:     while(0 == uart1TxBufferRemaining)
  6750  0052E6  0100               	movlb	0	; () banked
  6751  0052E8  51FE               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
  6752  0052EA  B4D8               	btfsc	status,2,c
  6753  0052EC  EF7A  F029         	goto	u7161
  6754  0052F0  EF7C  F029         	goto	u7160
  6755  0052F4                     u7161:
  6756  0052F4  EF73  F029         	goto	l7381
  6757  0052F8                     u7160:
  6758  0052F8                     
  6759                           ; BSR set to: 0
  6760                           ;mcc_generated_files/uart1.c: 208:     if(0 == PIE3bits.U1TXIE)
  6761  0052F8  0139               	movlb	57	; () banked
  6762  0052FA  B993               	btfsc	147,4,b	;volatile
  6763  0052FC  EF82  F029         	goto	u7171
  6764  005300  EF84  F029         	goto	u7170
  6765  005304                     u7171:
  6766  005304  EF89  F029         	goto	l309
  6767  005308                     u7170:
  6768  005308                     
  6769                           ; BSR set to: 57
  6770                           ;mcc_generated_files/uart1.c: 209:     {;mcc_generated_files/uart1.c: 210:         U1TXB
      +                           = txData;
  6771  005308  0060  F053  FDEA   	movff	UART1_Write@txData,15850	;volatile
  6772                           
  6773                           ;mcc_generated_files/uart1.c: 211:     }
  6774  00530E  EFA0  F029         	goto	l7395
  6775  005312                     l309:
  6776                           
  6777                           ; BSR set to: 57
  6778                           ;mcc_generated_files/uart1.c: 213:     {;mcc_generated_files/uart1.c: 214:         PIE3b
      +                          its.U1TXIE = 0;
  6779  005312  9993               	bcf	147,4,b	;volatile
  6780  005314                     
  6781                           ; BSR set to: 57
  6782                           ;mcc_generated_files/uart1.c: 215:         uart1TxBuffer[uart1TxHead++] = txData;
  6783  005314  0E10               	movlw	low _uart1TxBuffer
  6784  005316  2445               	addwf	_uart1TxHead^0,w,c	;volatile
  6785  005318  6ED9               	movwf	fsr2l,c
  6786  00531A  6ADA               	clrf	fsr2h,c
  6787  00531C  0E01               	movlw	high _uart1TxBuffer
  6788  00531E  22DA               	addwfc	fsr2h,f,c
  6789  005320  0060  F053  FFDF   	movff	UART1_Write@txData,indf2
  6790  005326                     
  6791                           ; BSR set to: 57
  6792  005326  2A45               	incf	_uart1TxHead^0,f,c	;volatile
  6793  005328                     
  6794                           ; BSR set to: 57
  6795                           ;mcc_generated_files/uart1.c: 216:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
  6796  005328  0E07               	movlw	7
  6797  00532A  6445               	cpfsgt	_uart1TxHead^0,c	;volatile
  6798  00532C  EF9A  F029         	goto	u7181
  6799  005330  EF9C  F029         	goto	u7180
  6800  005334                     u7181:
  6801  005334  EF9E  F029         	goto	l7393
  6802  005338                     u7180:
  6803  005338                     
  6804                           ; BSR set to: 57
  6805                           ;mcc_generated_files/uart1.c: 217:         {;mcc_generated_files/uart1.c: 218:          
      +                             uart1TxHead = 0;
  6806  005338  0E00               	movlw	0
  6807  00533A  6E45               	movwf	_uart1TxHead^0,c	;volatile
  6808  00533C                     l7393:
  6809                           
  6810                           ; BSR set to: 57
  6811                           ;mcc_generated_files/uart1.c: 220:         uart1TxBufferRemaining--;
  6812  00533C  0100               	movlb	0	; () banked
  6813  00533E  07FE               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
  6814  005340                     l7395:
  6815                           
  6816                           ;mcc_generated_files/uart1.c: 222:     PIE3bits.U1TXIE = 1;
  6817  005340  0139               	movlb	57	; () banked
  6818  005342  8993               	bsf	147,4,b	;volatile
  6819  005344                     
  6820                           ; BSR set to: 57
  6821  005344  0012               	return		;funcret
  6822  005346                     __end_of_UART1_Write:
  6823                           	callstack 0
  6824                           
  6825 ;; *************** function _abs *****************
  6826 ;; Defined at:
  6827 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  a               2   37[COMRAM] int 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  2   37[COMRAM] int 
  6834 ;; Registers used:
  6835 ;;		wreg, status,2, status,0
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;Total ram usage:        4 bytes
  6846 ;; Hardware stack levels used: 1
  6847 ;; Hardware stack levels required when called: 8
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_dtoa
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text24
  6856  0056A2                     __ptext24:
  6857                           	callstack 0
  6858  0056A2                     _abs:
  6859                           	callstack 16
  6860  0056A2  BE27               	btfsc	(abs@a+1)^0,7,c
  6861  0056A4  EF5E  F02B         	goto	u8530
  6862  0056A8  5027               	movf	(abs@a+1)^0,w,c
  6863  0056AA  E106               	bnz	u8531
  6864  0056AC  0426               	decf	abs@a^0,w,c
  6865  0056AE  B0D8               	btfsc	status,0,c
  6866  0056B0  EF5C  F02B         	goto	u8531
  6867  0056B4  EF5E  F02B         	goto	u8530
  6868  0056B8                     u8531:
  6869  0056B8  EF6C  F02B         	goto	l2275
  6870  0056BC                     u8530:
  6871  0056BC  C026  F028         	movff	abs@a,??_abs
  6872  0056C0  C027  F029         	movff	abs@a+1,??_abs+1
  6873  0056C4  1E28               	comf	??_abs^0,f,c
  6874  0056C6  1E29               	comf	(??_abs+1)^0,f,c
  6875  0056C8  4A28               	infsnz	??_abs^0,f,c
  6876  0056CA  2A29               	incf	(??_abs+1)^0,f,c
  6877  0056CC  C028  F026         	movff	??_abs,?_abs
  6878  0056D0  C029  F027         	movff	??_abs+1,?_abs+1
  6879  0056D4  EF70  F02B         	goto	l2278
  6880  0056D8                     l2275:
  6881  0056D8  C026  F026         	movff	abs@a,?_abs
  6882  0056DC  C027  F027         	movff	abs@a+1,?_abs+1
  6883  0056E0                     l2278:
  6884  0056E0  0012               	return		;funcret
  6885  0056E2                     __end_of_abs:
  6886                           	callstack 0
  6887                           
  6888 ;; *************** function ___aomod *****************
  6889 ;; Defined at:
  6890 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  dividend        8   19[COMRAM] long long 
  6893 ;;  divisor         8   27[COMRAM] long long 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  sign            1   36[COMRAM] unsigned char 
  6896 ;;  counter         1   35[COMRAM] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  8   19[COMRAM] long long 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6906 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;Total ram usage:       18 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 8
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_dtoa
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text25
  6921  004062                     __ptext25:
  6922                           	callstack 0
  6923  004062                     ___aomod:
  6924                           	callstack 16
  6925  004062  0E00               	movlw	0
  6926  004064  6E25               	movwf	___aomod@sign^0,c
  6927  004066  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
  6928  004068  EF3A  F020         	goto	u7730
  6929  00406C  EF38  F020         	goto	u7731
  6930  004070                     u7731:
  6931  004070  EF4C  F020         	goto	l7689
  6932  004074                     u7730:
  6933  004074  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  6934  004076  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  6935  004078  1E19               	comf	(___aomod@dividend+5)^0,f,c
  6936  00407A  1E18               	comf	(___aomod@dividend+4)^0,f,c
  6937  00407C  1E17               	comf	(___aomod@dividend+3)^0,f,c
  6938  00407E  1E16               	comf	(___aomod@dividend+2)^0,f,c
  6939  004080  1E15               	comf	(___aomod@dividend+1)^0,f,c
  6940  004082  6C14               	negf	___aomod@dividend^0,c
  6941  004084  0E00               	movlw	0
  6942  004086  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  6943  004088  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  6944  00408A  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  6945  00408C  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  6946  00408E  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  6947  004090  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  6948  004092  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  6949  004094  0E01               	movlw	1
  6950  004096  6E25               	movwf	___aomod@sign^0,c
  6951  004098                     l7689:
  6952  004098  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
  6953  00409A  EF53  F020         	goto	u7740
  6954  00409E  EF51  F020         	goto	u7741
  6955  0040A2                     u7741:
  6956  0040A2  EF63  F020         	goto	l7693
  6957  0040A6                     u7740:
  6958  0040A6  1E23               	comf	(___aomod@divisor+7)^0,f,c
  6959  0040A8  1E22               	comf	(___aomod@divisor+6)^0,f,c
  6960  0040AA  1E21               	comf	(___aomod@divisor+5)^0,f,c
  6961  0040AC  1E20               	comf	(___aomod@divisor+4)^0,f,c
  6962  0040AE  1E1F               	comf	(___aomod@divisor+3)^0,f,c
  6963  0040B0  1E1E               	comf	(___aomod@divisor+2)^0,f,c
  6964  0040B2  1E1D               	comf	(___aomod@divisor+1)^0,f,c
  6965  0040B4  6C1C               	negf	___aomod@divisor^0,c
  6966  0040B6  0E00               	movlw	0
  6967  0040B8  221D               	addwfc	(___aomod@divisor+1)^0,f,c
  6968  0040BA  221E               	addwfc	(___aomod@divisor+2)^0,f,c
  6969  0040BC  221F               	addwfc	(___aomod@divisor+3)^0,f,c
  6970  0040BE  2220               	addwfc	(___aomod@divisor+4)^0,f,c
  6971  0040C0  2221               	addwfc	(___aomod@divisor+5)^0,f,c
  6972  0040C2  2222               	addwfc	(___aomod@divisor+6)^0,f,c
  6973  0040C4  2223               	addwfc	(___aomod@divisor+7)^0,f,c
  6974  0040C6                     l7693:
  6975  0040C6  501C               	movf	___aomod@divisor^0,w,c
  6976  0040C8  101D               	iorwf	(___aomod@divisor+1)^0,w,c
  6977  0040CA  101E               	iorwf	(___aomod@divisor+2)^0,w,c
  6978  0040CC  101F               	iorwf	(___aomod@divisor+3)^0,w,c
  6979  0040CE  1020               	iorwf	(___aomod@divisor+4)^0,w,c
  6980  0040D0  1021               	iorwf	(___aomod@divisor+5)^0,w,c
  6981  0040D2  1022               	iorwf	(___aomod@divisor+6)^0,w,c
  6982  0040D4  1023               	iorwf	(___aomod@divisor+7)^0,w,c
  6983  0040D6  B4D8               	btfsc	status,2,c
  6984  0040D8  EF70  F020         	goto	u7751
  6985  0040DC  EF72  F020         	goto	u7750
  6986  0040E0                     u7751:
  6987  0040E0  EFBA  F020         	goto	l7709
  6988  0040E4                     u7750:
  6989  0040E4  0E01               	movlw	1
  6990  0040E6  6E24               	movwf	___aomod@counter^0,c
  6991  0040E8  EF80  F020         	goto	l7699
  6992  0040EC                     l7697:
  6993  0040EC  90D8               	bcf	status,0,c
  6994  0040EE  361C               	rlcf	___aomod@divisor^0,f,c
  6995  0040F0  361D               	rlcf	(___aomod@divisor+1)^0,f,c
  6996  0040F2  361E               	rlcf	(___aomod@divisor+2)^0,f,c
  6997  0040F4  361F               	rlcf	(___aomod@divisor+3)^0,f,c
  6998  0040F6  3620               	rlcf	(___aomod@divisor+4)^0,f,c
  6999  0040F8  3621               	rlcf	(___aomod@divisor+5)^0,f,c
  7000  0040FA  3622               	rlcf	(___aomod@divisor+6)^0,f,c
  7001  0040FC  3623               	rlcf	(___aomod@divisor+7)^0,f,c
  7002  0040FE  2A24               	incf	___aomod@counter^0,f,c
  7003  004100                     l7699:
  7004  004100  AE23               	btfss	(___aomod@divisor+7)^0,7,c
  7005  004102  EF85  F020         	goto	u7761
  7006  004106  EF87  F020         	goto	u7760
  7007  00410A                     u7761:
  7008  00410A  EF76  F020         	goto	l7697
  7009  00410E                     u7760:
  7010  00410E                     l7701:
  7011  00410E  501C               	movf	___aomod@divisor^0,w,c
  7012  004110  5C14               	subwf	___aomod@dividend^0,w,c
  7013  004112  501D               	movf	(___aomod@divisor+1)^0,w,c
  7014  004114  5815               	subwfb	(___aomod@dividend+1)^0,w,c
  7015  004116  501E               	movf	(___aomod@divisor+2)^0,w,c
  7016  004118  5816               	subwfb	(___aomod@dividend+2)^0,w,c
  7017  00411A  501F               	movf	(___aomod@divisor+3)^0,w,c
  7018  00411C  5817               	subwfb	(___aomod@dividend+3)^0,w,c
  7019  00411E  5020               	movf	(___aomod@divisor+4)^0,w,c
  7020  004120  5818               	subwfb	(___aomod@dividend+4)^0,w,c
  7021  004122  5021               	movf	(___aomod@divisor+5)^0,w,c
  7022  004124  5819               	subwfb	(___aomod@dividend+5)^0,w,c
  7023  004126  5022               	movf	(___aomod@divisor+6)^0,w,c
  7024  004128  581A               	subwfb	(___aomod@dividend+6)^0,w,c
  7025  00412A  5023               	movf	(___aomod@divisor+7)^0,w,c
  7026  00412C  581B               	subwfb	(___aomod@dividend+7)^0,w,c
  7027  00412E  A0D8               	btfss	status,0,c
  7028  004130  EF9C  F020         	goto	u7771
  7029  004134  EF9E  F020         	goto	u7770
  7030  004138                     u7771:
  7031  004138  EFAE  F020         	goto	l7705
  7032  00413C                     u7770:
  7033  00413C  501C               	movf	___aomod@divisor^0,w,c
  7034  00413E  5E14               	subwf	___aomod@dividend^0,f,c
  7035  004140  501D               	movf	(___aomod@divisor+1)^0,w,c
  7036  004142  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
  7037  004144  501E               	movf	(___aomod@divisor+2)^0,w,c
  7038  004146  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
  7039  004148  501F               	movf	(___aomod@divisor+3)^0,w,c
  7040  00414A  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
  7041  00414C  5020               	movf	(___aomod@divisor+4)^0,w,c
  7042  00414E  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
  7043  004150  5021               	movf	(___aomod@divisor+5)^0,w,c
  7044  004152  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
  7045  004154  5022               	movf	(___aomod@divisor+6)^0,w,c
  7046  004156  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
  7047  004158  5023               	movf	(___aomod@divisor+7)^0,w,c
  7048  00415A  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
  7049  00415C                     l7705:
  7050  00415C  90D8               	bcf	status,0,c
  7051  00415E  3223               	rrcf	(___aomod@divisor+7)^0,f,c
  7052  004160  3222               	rrcf	(___aomod@divisor+6)^0,f,c
  7053  004162  3221               	rrcf	(___aomod@divisor+5)^0,f,c
  7054  004164  3220               	rrcf	(___aomod@divisor+4)^0,f,c
  7055  004166  321F               	rrcf	(___aomod@divisor+3)^0,f,c
  7056  004168  321E               	rrcf	(___aomod@divisor+2)^0,f,c
  7057  00416A  321D               	rrcf	(___aomod@divisor+1)^0,f,c
  7058  00416C  321C               	rrcf	___aomod@divisor^0,f,c
  7059  00416E  2E24               	decfsz	___aomod@counter^0,f,c
  7060  004170  EF87  F020         	goto	l7701
  7061  004174                     l7709:
  7062  004174  5025               	movf	___aomod@sign^0,w,c
  7063  004176  B4D8               	btfsc	status,2,c
  7064  004178  EFC0  F020         	goto	u7781
  7065  00417C  EFC2  F020         	goto	u7780
  7066  004180                     u7781:
  7067  004180  EFD2  F020         	goto	l7713
  7068  004184                     u7780:
  7069  004184  1E1B               	comf	(___aomod@dividend+7)^0,f,c
  7070  004186  1E1A               	comf	(___aomod@dividend+6)^0,f,c
  7071  004188  1E19               	comf	(___aomod@dividend+5)^0,f,c
  7072  00418A  1E18               	comf	(___aomod@dividend+4)^0,f,c
  7073  00418C  1E17               	comf	(___aomod@dividend+3)^0,f,c
  7074  00418E  1E16               	comf	(___aomod@dividend+2)^0,f,c
  7075  004190  1E15               	comf	(___aomod@dividend+1)^0,f,c
  7076  004192  6C14               	negf	___aomod@dividend^0,c
  7077  004194  0E00               	movlw	0
  7078  004196  2215               	addwfc	(___aomod@dividend+1)^0,f,c
  7079  004198  2216               	addwfc	(___aomod@dividend+2)^0,f,c
  7080  00419A  2217               	addwfc	(___aomod@dividend+3)^0,f,c
  7081  00419C  2218               	addwfc	(___aomod@dividend+4)^0,f,c
  7082  00419E  2219               	addwfc	(___aomod@dividend+5)^0,f,c
  7083  0041A0  221A               	addwfc	(___aomod@dividend+6)^0,f,c
  7084  0041A2  221B               	addwfc	(___aomod@dividend+7)^0,f,c
  7085  0041A4                     l7713:
  7086  0041A4  C014  F014         	movff	___aomod@dividend,?___aomod
  7087  0041A8  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
  7088  0041AC  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
  7089  0041B0  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
  7090  0041B4  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
  7091  0041B8  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
  7092  0041BC  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
  7093  0041C0  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
  7094  0041C4  0012               	return		;funcret
  7095  0041C6                     __end_of___aomod:
  7096                           	callstack 0
  7097                           
  7098 ;; *************** function ___aodiv *****************
  7099 ;; Defined at:
  7100 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  dividend        8   19[COMRAM] long long 
  7103 ;;  divisor         8   27[COMRAM] long long 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  quotient        8   37[COMRAM] long long 
  7106 ;;  sign            1   36[COMRAM] unsigned char 
  7107 ;;  counter         1   35[COMRAM] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  8   19[COMRAM] long long 
  7110 ;; Registers used:
  7111 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7117 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;Total ram usage:       26 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; Hardware stack levels required when called: 8
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_dtoa
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text26
  7132  003D5A                     __ptext26:
  7133                           	callstack 0
  7134  003D5A                     ___aodiv:
  7135                           	callstack 16
  7136  003D5A  0E00               	movlw	0
  7137  003D5C  6E25               	movwf	___aodiv@sign^0,c
  7138  003D5E  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
  7139  003D60  EFB6  F01E         	goto	u7660
  7140  003D64  EFB4  F01E         	goto	u7661
  7141  003D68                     u7661:
  7142  003D68  EFC8  F01E         	goto	l7645
  7143  003D6C                     u7660:
  7144  003D6C  1E23               	comf	(___aodiv@divisor+7)^0,f,c
  7145  003D6E  1E22               	comf	(___aodiv@divisor+6)^0,f,c
  7146  003D70  1E21               	comf	(___aodiv@divisor+5)^0,f,c
  7147  003D72  1E20               	comf	(___aodiv@divisor+4)^0,f,c
  7148  003D74  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
  7149  003D76  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
  7150  003D78  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
  7151  003D7A  6C1C               	negf	___aodiv@divisor^0,c
  7152  003D7C  0E00               	movlw	0
  7153  003D7E  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
  7154  003D80  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
  7155  003D82  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
  7156  003D84  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
  7157  003D86  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
  7158  003D88  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
  7159  003D8A  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
  7160  003D8C  0E01               	movlw	1
  7161  003D8E  6E25               	movwf	___aodiv@sign^0,c
  7162  003D90                     l7645:
  7163  003D90  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
  7164  003D92  EFCF  F01E         	goto	u7670
  7165  003D96  EFCD  F01E         	goto	u7671
  7166  003D9A                     u7671:
  7167  003D9A  EFE1  F01E         	goto	l7651
  7168  003D9E                     u7670:
  7169  003D9E  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
  7170  003DA0  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
  7171  003DA2  1E19               	comf	(___aodiv@dividend+5)^0,f,c
  7172  003DA4  1E18               	comf	(___aodiv@dividend+4)^0,f,c
  7173  003DA6  1E17               	comf	(___aodiv@dividend+3)^0,f,c
  7174  003DA8  1E16               	comf	(___aodiv@dividend+2)^0,f,c
  7175  003DAA  1E15               	comf	(___aodiv@dividend+1)^0,f,c
  7176  003DAC  6C14               	negf	___aodiv@dividend^0,c
  7177  003DAE  0E00               	movlw	0
  7178  003DB0  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
  7179  003DB2  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
  7180  003DB4  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
  7181  003DB6  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
  7182  003DB8  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
  7183  003DBA  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
  7184  003DBC  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
  7185  003DBE  0E01               	movlw	1
  7186  003DC0  1A25               	xorwf	___aodiv@sign^0,f,c
  7187  003DC2                     l7651:
  7188  003DC2  EE20  F026         	lfsr	2,___aodiv@quotient
  7189  003DC6  0E07               	movlw	7
  7190  003DC8                     u7681:
  7191  003DC8  6ADE               	clrf	postinc2,c
  7192  003DCA  06E8               	decf	wreg,f,c
  7193  003DCC  E2FD               	bc	u7681
  7194  003DCE  501C               	movf	___aodiv@divisor^0,w,c
  7195  003DD0  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
  7196  003DD2  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
  7197  003DD4  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
  7198  003DD6  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
  7199  003DD8  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
  7200  003DDA  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
  7201  003DDC  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
  7202  003DDE  B4D8               	btfsc	status,2,c
  7203  003DE0  EFF4  F01E         	goto	u7691
  7204  003DE4  EFF6  F01E         	goto	u7690
  7205  003DE8                     u7691:
  7206  003DE8  EF48  F01F         	goto	l7673
  7207  003DEC                     u7690:
  7208  003DEC  0E01               	movlw	1
  7209  003DEE  6E24               	movwf	___aodiv@counter^0,c
  7210  003DF0  EF04  F01F         	goto	l7659
  7211  003DF4                     l7657:
  7212  003DF4  90D8               	bcf	status,0,c
  7213  003DF6  361C               	rlcf	___aodiv@divisor^0,f,c
  7214  003DF8  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
  7215  003DFA  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
  7216  003DFC  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
  7217  003DFE  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
  7218  003E00  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
  7219  003E02  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
  7220  003E04  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
  7221  003E06  2A24               	incf	___aodiv@counter^0,f,c
  7222  003E08                     l7659:
  7223  003E08  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
  7224  003E0A  EF09  F01F         	goto	u7701
  7225  003E0E  EF0B  F01F         	goto	u7700
  7226  003E12                     u7701:
  7227  003E12  EFFA  F01E         	goto	l7657
  7228  003E16                     u7700:
  7229  003E16                     l7661:
  7230  003E16  90D8               	bcf	status,0,c
  7231  003E18  3626               	rlcf	___aodiv@quotient^0,f,c
  7232  003E1A  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
  7233  003E1C  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
  7234  003E1E  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
  7235  003E20  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
  7236  003E22  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
  7237  003E24  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
  7238  003E26  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
  7239  003E28  501C               	movf	___aodiv@divisor^0,w,c
  7240  003E2A  5C14               	subwf	___aodiv@dividend^0,w,c
  7241  003E2C  501D               	movf	(___aodiv@divisor+1)^0,w,c
  7242  003E2E  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
  7243  003E30  501E               	movf	(___aodiv@divisor+2)^0,w,c
  7244  003E32  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
  7245  003E34  501F               	movf	(___aodiv@divisor+3)^0,w,c
  7246  003E36  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
  7247  003E38  5020               	movf	(___aodiv@divisor+4)^0,w,c
  7248  003E3A  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
  7249  003E3C  5021               	movf	(___aodiv@divisor+5)^0,w,c
  7250  003E3E  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
  7251  003E40  5022               	movf	(___aodiv@divisor+6)^0,w,c
  7252  003E42  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
  7253  003E44  5023               	movf	(___aodiv@divisor+7)^0,w,c
  7254  003E46  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
  7255  003E48  A0D8               	btfss	status,0,c
  7256  003E4A  EF29  F01F         	goto	u7711
  7257  003E4E  EF2B  F01F         	goto	u7710
  7258  003E52                     u7711:
  7259  003E52  EF3C  F01F         	goto	l7669
  7260  003E56                     u7710:
  7261  003E56  501C               	movf	___aodiv@divisor^0,w,c
  7262  003E58  5E14               	subwf	___aodiv@dividend^0,f,c
  7263  003E5A  501D               	movf	(___aodiv@divisor+1)^0,w,c
  7264  003E5C  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
  7265  003E5E  501E               	movf	(___aodiv@divisor+2)^0,w,c
  7266  003E60  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
  7267  003E62  501F               	movf	(___aodiv@divisor+3)^0,w,c
  7268  003E64  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
  7269  003E66  5020               	movf	(___aodiv@divisor+4)^0,w,c
  7270  003E68  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
  7271  003E6A  5021               	movf	(___aodiv@divisor+5)^0,w,c
  7272  003E6C  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
  7273  003E6E  5022               	movf	(___aodiv@divisor+6)^0,w,c
  7274  003E70  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
  7275  003E72  5023               	movf	(___aodiv@divisor+7)^0,w,c
  7276  003E74  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
  7277  003E76  8026               	bsf	___aodiv@quotient^0,0,c
  7278  003E78                     l7669:
  7279  003E78  90D8               	bcf	status,0,c
  7280  003E7A  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
  7281  003E7C  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
  7282  003E7E  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
  7283  003E80  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
  7284  003E82  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
  7285  003E84  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
  7286  003E86  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
  7287  003E88  321C               	rrcf	___aodiv@divisor^0,f,c
  7288  003E8A  2E24               	decfsz	___aodiv@counter^0,f,c
  7289  003E8C  EF0B  F01F         	goto	l7661
  7290  003E90                     l7673:
  7291  003E90  5025               	movf	___aodiv@sign^0,w,c
  7292  003E92  B4D8               	btfsc	status,2,c
  7293  003E94  EF4E  F01F         	goto	u7721
  7294  003E98  EF50  F01F         	goto	u7720
  7295  003E9C                     u7721:
  7296  003E9C  EF60  F01F         	goto	l7677
  7297  003EA0                     u7720:
  7298  003EA0  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
  7299  003EA2  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
  7300  003EA4  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
  7301  003EA6  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
  7302  003EA8  1E29               	comf	(___aodiv@quotient+3)^0,f,c
  7303  003EAA  1E28               	comf	(___aodiv@quotient+2)^0,f,c
  7304  003EAC  1E27               	comf	(___aodiv@quotient+1)^0,f,c
  7305  003EAE  6C26               	negf	___aodiv@quotient^0,c
  7306  003EB0  0E00               	movlw	0
  7307  003EB2  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
  7308  003EB4  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
  7309  003EB6  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
  7310  003EB8  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
  7311  003EBA  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
  7312  003EBC  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
  7313  003EBE  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
  7314  003EC0                     l7677:
  7315  003EC0  C026  F014         	movff	___aodiv@quotient,?___aodiv
  7316  003EC4  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
  7317  003EC8  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
  7318  003ECC  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
  7319  003ED0  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
  7320  003ED4  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
  7321  003ED8  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
  7322  003EDC  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
  7323  003EE0  0012               	return		;funcret
  7324  003EE2                     __end_of___aodiv:
  7325                           	callstack 0
  7326                           
  7327 ;; *************** function _calcSteering *****************
  7328 ;; Defined at:
  7329 ;;		line 226 in file "main.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  delta           2   46[BANK0 ] short 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2, status,0, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; Hardware stack levels required when called: 10
  7350 ;; This function calls:
  7351 ;;		___awdiv
  7352 ;;		_setSteering
  7353 ;; This function is called by:
  7354 ;;		_loop
  7355 ;;		_startAccell
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text27
  7360  0039E4                     __ptext27:
  7361                           	callstack 0
  7362  0039E4                     _calcSteering:
  7363                           	callstack 18
  7364  0039E4                     
  7365                           ;main.c: 227:     int16_t delta = (int16_t) (distLeft - distRight) - (int16_t) ((0) * 1.
      +                          4142135);
  7366  0039E4  0100               	movlb	0	; () banked
  7367  0039E6  51F7               	movf	_distRight& (0+255),w,b	;volatile
  7368  0039E8  5DFB               	subwf	_distLeft& (0+255),w,b	;volatile
  7369  0039EA  6F8E               	movwf	calcSteering@delta& (0+255),b
  7370  0039EC  51F8               	movf	(_distRight+1)& (0+255),w,b	;volatile
  7371  0039EE  59FC               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  7372  0039F0  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  7373                           
  7374                           ;main.c: 231:     switch (driveMode) {
  7375  0039F2  EF23  F01D         	goto	l8865
  7376  0039F6                     l1316:
  7377  0039F6                     l8855:
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;main.c: 237:             if (delta > (40)) {
  7381  0039F6  BF8F               	btfsc	(calcSteering@delta+1)& (0+255),7,b
  7382  0039F8  EF07  F01D         	goto	u9841
  7383  0039FC  518F               	movf	(calcSteering@delta+1)& (0+255),w,b
  7384  0039FE  E109               	bnz	u9840
  7385  003A00  0E29               	movlw	41
  7386  003A02  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  7387  003A04  A0D8               	btfss	status,0,c
  7388  003A06  EF07  F01D         	goto	u9841
  7389  003A0A  EF09  F01D         	goto	u9840
  7390  003A0E                     u9841:
  7391  003A0E  EF0F  F01D         	goto	l8859
  7392  003A12                     u9840:
  7393  003A12                     
  7394                           ; BSR set to: 0
  7395                           ;main.c: 238:                 delta = (40);
  7396  003A12  0E00               	movlw	0
  7397  003A14  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  7398  003A16  0E28               	movlw	40
  7399  003A18  6F8E               	movwf	calcSteering@delta& (0+255),b
  7400                           
  7401                           ;main.c: 239:             } else if (delta < -(40)) {
  7402  003A1A  EFA9  F01D         	goto	l8891
  7403  003A1E                     l8859:
  7404                           
  7405                           ; BSR set to: 0
  7406  003A1E  AF8F               	btfss	(calcSteering@delta+1)& (0+255),7,b
  7407  003A20  EF1B  F01D         	goto	u9851
  7408  003A24  0ED8               	movlw	216
  7409  003A26  5D8E               	subwf	calcSteering@delta& (0+255),w,b
  7410  003A28  0EFF               	movlw	255
  7411  003A2A  598F               	subwfb	(calcSteering@delta+1)& (0+255),w,b
  7412  003A2C  B0D8               	btfsc	status,0,c
  7413  003A2E  EF1B  F01D         	goto	u9851
  7414  003A32  EF1D  F01D         	goto	u9850
  7415  003A36                     u9851:
  7416  003A36  EF44  F01D         	goto	l1321
  7417  003A3A                     u9850:
  7418  003A3A                     
  7419                           ; BSR set to: 0
  7420                           ;main.c: 240:                 delta = -(40);
  7421  003A3A  0EFF               	movlw	255
  7422  003A3C  6F8F               	movwf	(calcSteering@delta+1)& (0+255),b
  7423  003A3E  0ED8               	movlw	216
  7424  003A40  6F8E               	movwf	calcSteering@delta& (0+255),b
  7425  003A42  EFA9  F01D         	goto	l8891
  7426  003A46                     l8865:
  7427                           
  7428                           ; BSR set to: 0
  7429  003A46  504C               	movf	_driveMode^0,w,c
  7430  003A48  6F8C               	movwf	??_calcSteering& (0+255),b
  7431  003A4A  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  7432                           
  7433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7434                           ; Switch size 1, requested type "simple"
  7435                           ; Number of cases is 1, Range of values is 0 to 0
  7436                           ; switch strategies available:
  7437                           ; Name         Instructions Cycles
  7438                           ; simple_byte            4     3 (average)
  7439                           ;	Chosen strategy is simple_byte
  7440  003A4C  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  7441  003A4E  0A00               	xorlw	0	; case 0
  7442  003A50  B4D8               	btfsc	status,2,c
  7443  003A52  EF2D  F01D         	goto	l9265
  7444  003A56  EFA9  F01D         	goto	l8891
  7445  003A5A                     l9265:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ; Switch size 1, requested type "simple"
  7449                           ; Number of cases is 5, Range of values is 0 to 6
  7450                           ; switch strategies available:
  7451                           ; Name         Instructions Cycles
  7452                           ; simple_byte           16     9 (average)
  7453                           ;	Chosen strategy is simple_byte
  7454  003A5A  518C               	movf	??_calcSteering& (0+255),w,b
  7455  003A5C  0A00               	xorlw	0	; case 0
  7456  003A5E  B4D8               	btfsc	status,2,c
  7457  003A60  EFFB  F01C         	goto	l1316
  7458  003A64  0A01               	xorlw	1	; case 1
  7459  003A66  B4D8               	btfsc	status,2,c
  7460  003A68  EFFB  F01C         	goto	l8855
  7461  003A6C  0A03               	xorlw	3	; case 2
  7462  003A6E  B4D8               	btfsc	status,2,c
  7463  003A70  EFFB  F01C         	goto	l8855
  7464  003A74  0A07               	xorlw	7	; case 5
  7465  003A76  B4D8               	btfsc	status,2,c
  7466  003A78  EFFB  F01C         	goto	l8855
  7467  003A7C  0A03               	xorlw	3	; case 6
  7468  003A7E  B4D8               	btfsc	status,2,c
  7469  003A80  EFFB  F01C         	goto	l8855
  7470  003A84  EFA9  F01D         	goto	l8891
  7471  003A88                     l1321:
  7472                           
  7473                           ; BSR set to: 0
  7474                           ;main.c: 247:     switch (driveMode) {
  7475  003A88  EFA9  F01D         	goto	l8891
  7476  003A8C                     l8867:
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;main.c: 249:             setSteering(delta, Ratio);
  7480  003A8C  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  7481  003A90  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  7482  003A94  0E02               	movlw	2
  7483  003A96  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7484  003A98  ECF7  F01B         	call	_setSteering	;wreg free
  7485                           
  7486                           ;main.c: 250:             break;
  7487  003A9C  EFD2  F01D         	goto	l1336
  7488  003AA0                     l8869:
  7489                           
  7490                           ; BSR set to: 0
  7491                           ;main.c: 252:             setSteering(delta, Front);
  7492  003AA0  C08E  F083         	movff	calcSteering@delta,setSteering@steering
  7493  003AA4  C08F  F084         	movff	calcSteering@delta+1,setSteering@steering+1
  7494  003AA8  0E03               	movlw	3
  7495  003AAA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7496  003AAC  ECF7  F01B         	call	_setSteering	;wreg free
  7497                           
  7498                           ;main.c: 253:             break;
  7499  003AB0  EFD2  F01D         	goto	l1336
  7500  003AB4                     l8871:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;main.c: 255:             setSteering(delta / (2), Front);
  7504  003AB4  C08E  F014         	movff	calcSteering@delta,___awdiv@dividend
  7505  003AB8  C08F  F015         	movff	calcSteering@delta+1,___awdiv@dividend+1
  7506  003ABC  0E00               	movlw	0
  7507  003ABE  6E17               	movwf	(___awdiv@divisor+1)^0,c
  7508  003AC0  0E02               	movlw	2
  7509  003AC2  6E16               	movwf	___awdiv@divisor^0,c
  7510  003AC4  EC04  F026         	call	___awdiv	;wreg free
  7511  003AC8  C014  F083         	movff	?___awdiv,setSteering@steering
  7512  003ACC  C015  F084         	movff	?___awdiv+1,setSteering@steering+1
  7513  003AD0  0E03               	movlw	3
  7514  003AD2  0100               	movlb	0	; () banked
  7515  003AD4  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7516  003AD6  ECF7  F01B         	call	_setSteering	;wreg free
  7517                           
  7518                           ;main.c: 257:             break;
  7519  003ADA  EFD2  F01D         	goto	l1336
  7520  003ADE                     l8873:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;main.c: 259:             setSteering(-(50), Inverted);
  7524  003ADE  0EFF               	movlw	255
  7525  003AE0  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  7526  003AE2  0ECE               	movlw	206
  7527  003AE4  6F83               	movwf	setSteering@steering& (0+255),b
  7528  003AE6  0E00               	movlw	0
  7529  003AE8  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7530  003AEA  ECF7  F01B         	call	_setSteering	;wreg free
  7531                           
  7532                           ;main.c: 260:             break;
  7533  003AEE  EFD2  F01D         	goto	l1336
  7534  003AF2                     l8875:
  7535                           
  7536                           ; BSR set to: 0
  7537                           ;main.c: 262:             setSteering((50), Inverted);
  7538  003AF2  0E00               	movlw	0
  7539  003AF4  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  7540  003AF6  0E32               	movlw	50
  7541  003AF8  6F83               	movwf	setSteering@steering& (0+255),b
  7542  003AFA  0E00               	movlw	0
  7543  003AFC  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7544  003AFE  ECF7  F01B         	call	_setSteering	;wreg free
  7545                           
  7546                           ;main.c: 263:             break;
  7547  003B02  EFD2  F01D         	goto	l1336
  7548  003B06                     l8877:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;main.c: 265:             if (curveMode == InCurve) {
  7552  003B06  0E02               	movlw	2
  7553  003B08  183F               	xorwf	_curveMode^0,w,c
  7554  003B0A  A4D8               	btfss	status,2,c
  7555  003B0C  EF8A  F01D         	goto	u9861
  7556  003B10  EF8C  F01D         	goto	u9860
  7557  003B14                     u9861:
  7558  003B14  EF46  F01D         	goto	l8867
  7559  003B18                     u9860:
  7560  003B18                     
  7561                           ; BSR set to: 0
  7562                           ;main.c: 266:                 setSteering((50), Ratio);
  7563  003B18  0E00               	movlw	0
  7564  003B1A  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  7565  003B1C  0E32               	movlw	50
  7566  003B1E  6F83               	movwf	setSteering@steering& (0+255),b
  7567  003B20  0E02               	movlw	2
  7568  003B22  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7569  003B24  ECF7  F01B         	call	_setSteering	;wreg free
  7570                           
  7571                           ;main.c: 267:             } else {
  7572  003B28  EFD2  F01D         	goto	l1336
  7573  003B2C                     l8883:
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;main.c: 272:             if (curveMode == InCurve) {
  7577  003B2C  0E02               	movlw	2
  7578  003B2E  183F               	xorwf	_curveMode^0,w,c
  7579  003B30  A4D8               	btfss	status,2,c
  7580  003B32  EF9D  F01D         	goto	u9871
  7581  003B36  EF9F  F01D         	goto	u9870
  7582  003B3A                     u9871:
  7583  003B3A  EF46  F01D         	goto	l8867
  7584  003B3E                     u9870:
  7585  003B3E                     
  7586                           ; BSR set to: 0
  7587                           ;main.c: 273:                 setSteering(-(50), Ratio);
  7588  003B3E  0EFF               	movlw	255
  7589  003B40  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  7590  003B42  0ECE               	movlw	206
  7591  003B44  6F83               	movwf	setSteering@steering& (0+255),b
  7592  003B46  0E02               	movlw	2
  7593  003B48  6F85               	movwf	setSteering@steeringMode& (0+255),b
  7594  003B4A  ECF7  F01B         	call	_setSteering	;wreg free
  7595                           
  7596                           ;main.c: 274:             } else {
  7597  003B4E  EFD2  F01D         	goto	l1336
  7598  003B52                     l8891:
  7599                           
  7600                           ; BSR set to: 0
  7601  003B52  504C               	movf	_driveMode^0,w,c
  7602  003B54  6F8C               	movwf	??_calcSteering& (0+255),b
  7603  003B56  6B8D               	clrf	(??_calcSteering+1)& (0+255),b
  7604                           
  7605                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7606                           ; Switch size 1, requested type "simple"
  7607                           ; Number of cases is 1, Range of values is 0 to 0
  7608                           ; switch strategies available:
  7609                           ; Name         Instructions Cycles
  7610                           ; simple_byte            4     3 (average)
  7611                           ;	Chosen strategy is simple_byte
  7612  003B58  518D               	movf	(??_calcSteering+1)& (0+255),w,b
  7613  003B5A  0A00               	xorlw	0	; case 0
  7614  003B5C  B4D8               	btfsc	status,2,c
  7615  003B5E  EFB3  F01D         	goto	l9267
  7616  003B62  EFD2  F01D         	goto	l1336
  7617  003B66                     l9267:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ; Switch size 1, requested type "simple"
  7621                           ; Number of cases is 7, Range of values is 0 to 6
  7622                           ; switch strategies available:
  7623                           ; Name         Instructions Cycles
  7624                           ; simple_byte           22    12 (average)
  7625                           ;	Chosen strategy is simple_byte
  7626  003B66  518C               	movf	??_calcSteering& (0+255),w,b
  7627  003B68  0A00               	xorlw	0	; case 0
  7628  003B6A  B4D8               	btfsc	status,2,c
  7629  003B6C  EF5A  F01D         	goto	l8871
  7630  003B70  0A01               	xorlw	1	; case 1
  7631  003B72  B4D8               	btfsc	status,2,c
  7632  003B74  EF50  F01D         	goto	l8869
  7633  003B78  0A03               	xorlw	3	; case 2
  7634  003B7A  B4D8               	btfsc	status,2,c
  7635  003B7C  EF46  F01D         	goto	l8867
  7636  003B80  0A01               	xorlw	1	; case 3
  7637  003B82  B4D8               	btfsc	status,2,c
  7638  003B84  EF6F  F01D         	goto	l8873
  7639  003B88  0A07               	xorlw	7	; case 4
  7640  003B8A  B4D8               	btfsc	status,2,c
  7641  003B8C  EF79  F01D         	goto	l8875
  7642  003B90  0A01               	xorlw	1	; case 5
  7643  003B92  B4D8               	btfsc	status,2,c
  7644  003B94  EF83  F01D         	goto	l8877
  7645  003B98  0A03               	xorlw	3	; case 6
  7646  003B9A  B4D8               	btfsc	status,2,c
  7647  003B9C  EF96  F01D         	goto	l8883
  7648  003BA0  EFD2  F01D         	goto	l1336
  7649  003BA4                     l1336:
  7650  003BA4  0012               	return		;funcret
  7651  003BA6                     __end_of_calcSteering:
  7652                           	callstack 0
  7653                           
  7654 ;; *************** function _getReverse *****************
  7655 ;; Defined at:
  7656 ;;		line 192 in file "main.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, status,2, status,0
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;Total ram usage:        0 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; Hardware stack levels required when called: 8
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_loop
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text28
  7685  00465E                     __ptext28:
  7686                           	callstack 0
  7687  00465E                     _getReverse:
  7688                           	callstack 21
  7689  00465E                     
  7690                           ;main.c: 193:     if (distFront < (15)) {
  7691  00465E  504B               	movf	(_distFront+1)^0,w,c	;volatile
  7692  004660  E107               	bnz	u6641
  7693  004662  0E0F               	movlw	15
  7694  004664  5C4A               	subwf	_distFront^0,w,c	;volatile
  7695  004666  B0D8               	btfsc	status,0,c
  7696  004668  EF38  F023         	goto	u6641
  7697  00466C  EF3A  F023         	goto	u6640
  7698  004670                     u6641:
  7699  004670  EF3F  F023         	goto	l6871
  7700  004674                     u6640:
  7701  004674                     
  7702                           ;main.c: 194:         ++reverseCount;
  7703  004674  0100               	movlb	0	; () banked
  7704  004676  4BF1               	infsnz	_reverseCount& (0+255),f,b
  7705  004678  2BF2               	incf	(_reverseCount+1)& (0+255),f,b
  7706                           
  7707                           ;main.c: 195:     } else if(driveMode != ReverseRight && driveMode != ReverseLeft) {
  7708  00467A  EF56  F023         	goto	l6877
  7709  00467E                     l6871:
  7710  00467E  0E03               	movlw	3
  7711  004680  184C               	xorwf	_driveMode^0,w,c
  7712  004682  B4D8               	btfsc	status,2,c
  7713  004684  EF46  F023         	goto	u6651
  7714  004688  EF48  F023         	goto	u6650
  7715  00468C                     u6651:
  7716  00468C  EF56  F023         	goto	l6877
  7717  004690                     u6650:
  7718  004690  0E04               	movlw	4
  7719  004692  184C               	xorwf	_driveMode^0,w,c
  7720  004694  B4D8               	btfsc	status,2,c
  7721  004696  EF4F  F023         	goto	u6661
  7722  00469A  EF51  F023         	goto	u6660
  7723  00469E                     u6661:
  7724  00469E  EF56  F023         	goto	l6877
  7725  0046A2                     u6660:
  7726  0046A2                     
  7727                           ;main.c: 196:         reverseCount = 0;
  7728  0046A2  0E00               	movlw	0
  7729  0046A4  0100               	movlb	0	; () banked
  7730  0046A6  6FF2               	movwf	(_reverseCount+1)& (0+255),b
  7731  0046A8  0E00               	movlw	0
  7732  0046AA  6FF1               	movwf	_reverseCount& (0+255),b
  7733  0046AC                     l6877:
  7734                           
  7735                           ;main.c: 199:     if (reverseCount > (50)) {
  7736  0046AC  0100               	movlb	0	; () banked
  7737  0046AE  51F2               	movf	(_reverseCount+1)& (0+255),w,b
  7738  0046B0  E109               	bnz	u6670
  7739  0046B2  0E33               	movlw	51
  7740  0046B4  5DF1               	subwf	_reverseCount& (0+255),w,b
  7741  0046B6  A0D8               	btfss	status,0,c
  7742  0046B8  EF60  F023         	goto	u6671
  7743  0046BC  EF62  F023         	goto	u6670
  7744  0046C0                     u6671:
  7745  0046C0  EFB1  F023         	goto	l1309
  7746  0046C4                     u6670:
  7747  0046C4                     
  7748                           ; BSR set to: 0
  7749                           ;main.c: 200:         ++reverseTime;
  7750  0046C4  0101               	movlb	1	; () banked
  7751  0046C6  4B2A               	infsnz	_reverseTime& (0+255),f,b
  7752  0046C8  2B2B               	incf	(_reverseTime+1)& (0+255),f,b
  7753  0046CA                     
  7754                           ; BSR set to: 1
  7755                           ;main.c: 202:         if (driveMode != ReverseRight && driveMode != ReverseLeft) {
  7756  0046CA  0E03               	movlw	3
  7757  0046CC  184C               	xorwf	_driveMode^0,w,c
  7758  0046CE  B4D8               	btfsc	status,2,c
  7759  0046D0  EF6C  F023         	goto	u6681
  7760  0046D4  EF6E  F023         	goto	u6680
  7761  0046D8                     u6681:
  7762  0046D8  EF89  F023         	goto	l6891
  7763  0046DC                     u6680:
  7764  0046DC                     
  7765                           ; BSR set to: 1
  7766  0046DC  0E04               	movlw	4
  7767  0046DE  184C               	xorwf	_driveMode^0,w,c
  7768  0046E0  B4D8               	btfsc	status,2,c
  7769  0046E2  EF75  F023         	goto	u6691
  7770  0046E6  EF77  F023         	goto	u6690
  7771  0046EA                     u6691:
  7772  0046EA  EF89  F023         	goto	l6891
  7773  0046EE                     u6690:
  7774  0046EE                     
  7775                           ; BSR set to: 1
  7776                           ;main.c: 203:             if (distLeft > distRight) {
  7777  0046EE  0100               	movlb	0	; () banked
  7778  0046F0  51FB               	movf	_distLeft& (0+255),w,b	;volatile
  7779  0046F2  5DF7               	subwf	_distRight& (0+255),w,b	;volatile
  7780  0046F4  51FC               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  7781  0046F6  59F8               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  7782  0046F8  B0D8               	btfsc	status,0,c
  7783  0046FA  EF81  F023         	goto	u6701
  7784  0046FE  EF83  F023         	goto	u6700
  7785  004702                     u6701:
  7786  004702  EF87  F023         	goto	l6889
  7787  004706                     u6700:
  7788  004706                     
  7789                           ; BSR set to: 0
  7790                           ;main.c: 205:                 driveMode = ReverseRight;
  7791  004706  0E03               	movlw	3
  7792  004708  6E4C               	movwf	_driveMode^0,c
  7793                           
  7794                           ;main.c: 206:             } else {
  7795  00470A  EF89  F023         	goto	l6891
  7796  00470E                     l6889:
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;main.c: 208:                 driveMode = ReverseLeft;
  7800  00470E  0E04               	movlw	4
  7801  004710  6E4C               	movwf	_driveMode^0,c
  7802  004712                     l6891:
  7803                           
  7804                           ;main.c: 212:         if (distFront > (35) || reverseTime > (300)) {
  7805  004712  504B               	movf	(_distFront+1)^0,w,c	;volatile
  7806  004714  E107               	bnz	u6711
  7807  004716  0E24               	movlw	36
  7808  004718  5C4A               	subwf	_distFront^0,w,c	;volatile
  7809  00471A  B0D8               	btfsc	status,0,c
  7810  00471C  EF92  F023         	goto	u6711
  7811  004720  EF94  F023         	goto	u6710
  7812  004724                     u6711:
  7813  004724  EFA5  F023         	goto	l6895
  7814  004728                     u6710:
  7815  004728  0101               	movlb	1	; () banked
  7816  00472A  BF2B               	btfsc	(_reverseTime+1)& (0+255),7,b
  7817  00472C  EFA1  F023         	goto	u6721
  7818  004730  0E2D               	movlw	45
  7819  004732  5D2A               	subwf	_reverseTime& (0+255),w,b
  7820  004734  0E01               	movlw	1
  7821  004736  592B               	subwfb	(_reverseTime+1)& (0+255),w,b
  7822  004738  A0D8               	btfss	status,0,c
  7823  00473A  EFA1  F023         	goto	u6721
  7824  00473E  EFA3  F023         	goto	u6720
  7825  004742                     u6721:
  7826  004742  EFB1  F023         	goto	l1309
  7827  004746                     u6720:
  7828  004746  EFA5  F023         	goto	l6897
  7829  00474A                     l6895:
  7830  00474A                     l6897:
  7831                           
  7832                           ;main.c: 215:                 driveMode = Straight;
  7833  00474A  0E01               	movlw	1
  7834  00474C  6E4C               	movwf	_driveMode^0,c
  7835  00474E                     
  7836                           ;main.c: 220:             reverseCount = 0;
  7837  00474E  0E00               	movlw	0
  7838  004750  0100               	movlb	0	; () banked
  7839  004752  6FF2               	movwf	(_reverseCount+1)& (0+255),b
  7840  004754  0E00               	movlw	0
  7841  004756  6FF1               	movwf	_reverseCount& (0+255),b
  7842                           
  7843                           ;main.c: 221:             reverseTime = 0;
  7844  004758  0E00               	movlw	0
  7845  00475A  0101               	movlb	1	; () banked
  7846  00475C  6F2B               	movwf	(_reverseTime+1)& (0+255),b
  7847  00475E  0E00               	movlw	0
  7848  004760  6F2A               	movwf	_reverseTime& (0+255),b
  7849  004762                     l1309:
  7850  004762  0012               	return		;funcret
  7851  004764                     __end_of_getReverse:
  7852                           	callstack 0
  7853                           
  7854 ;; *************** function _getCurve *****************
  7855 ;; Defined at:
  7856 ;;		line 128 in file "main.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;		None
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  deltaLeft       2   23[COMRAM] short 
  7861 ;;  deltaRight      2   21[COMRAM] short 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7875 ;;Total ram usage:        6 bytes
  7876 ;; Hardware stack levels used: 1
  7877 ;; Hardware stack levels required when called: 8
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_loop
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text29
  7886  0031B2                     __ptext29:
  7887                           	callstack 0
  7888  0031B2                     _getCurve:
  7889                           	callstack 21
  7890  0031B2                     
  7891                           ;main.c: 129:     int16_t deltaLeft = (int16_t) (distLeft - oldDistLeft);
  7892  0031B2  0100               	movlb	0	; () banked
  7893  0031B4  51EF               	movf	_oldDistLeft& (0+255),w,b
  7894  0031B6  5DFB               	subwf	_distLeft& (0+255),w,b	;volatile
  7895  0031B8  6E18               	movwf	getCurve@deltaLeft^0,c
  7896  0031BA  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  7897  0031BC  59FC               	subwfb	(_distLeft+1)& (0+255),w,b	;volatile
  7898  0031BE  6E19               	movwf	(getCurve@deltaLeft+1)^0,c
  7899                           
  7900                           ;main.c: 130:     int16_t deltaRight = (int16_t) (distRight - oldDistRight);
  7901  0031C0  51ED               	movf	_oldDistRight& (0+255),w,b
  7902  0031C2  5DF7               	subwf	_distRight& (0+255),w,b	;volatile
  7903  0031C4  6E16               	movwf	getCurve@deltaRight^0,c
  7904  0031C6  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  7905  0031C8  59F8               	subwfb	(_distRight+1)& (0+255),w,b	;volatile
  7906  0031CA  6E17               	movwf	(getCurve@deltaRight+1)^0,c
  7907                           
  7908                           ;main.c: 132:     switch (curveMode) {
  7909  0031CC  EFC1  F019         	goto	l6857
  7910  0031D0                     l6805:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;main.c: 134:             if (deltaLeft > (30) && deltaLeft < (300) && oldDistLeft < (12
      +                          5)) {
  7914  0031D0  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  7915  0031D2  EFF4  F018         	goto	u6481
  7916  0031D6  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  7917  0031D8  E109               	bnz	u6480
  7918  0031DA  0E1F               	movlw	31
  7919  0031DC  5C18               	subwf	getCurve@deltaLeft^0,w,c
  7920  0031DE  A0D8               	btfss	status,0,c
  7921  0031E0  EFF4  F018         	goto	u6481
  7922  0031E4  EFF6  F018         	goto	u6480
  7923  0031E8                     u6481:
  7924  0031E8  EF17  F019         	goto	l6813
  7925  0031EC                     u6480:
  7926  0031EC                     
  7927                           ; BSR set to: 0
  7928  0031EC  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  7929  0031EE  EF04  F019         	goto	u6490
  7930  0031F2  0E2C               	movlw	44
  7931  0031F4  5C18               	subwf	getCurve@deltaLeft^0,w,c
  7932  0031F6  0E01               	movlw	1
  7933  0031F8  5819               	subwfb	(getCurve@deltaLeft+1)^0,w,c
  7934  0031FA  B0D8               	btfsc	status,0,c
  7935  0031FC  EF02  F019         	goto	u6491
  7936  003200  EF04  F019         	goto	u6490
  7937  003204                     u6491:
  7938  003204  EF17  F019         	goto	l6813
  7939  003208                     u6490:
  7940  003208                     
  7941                           ; BSR set to: 0
  7942  003208  51F0               	movf	(_oldDistLeft+1)& (0+255),w,b
  7943  00320A  E107               	bnz	u6501
  7944  00320C  0E7D               	movlw	125
  7945  00320E  5DEF               	subwf	_oldDistLeft& (0+255),w,b
  7946  003210  B0D8               	btfsc	status,0,c
  7947  003212  EF0D  F019         	goto	u6501
  7948  003216  EF0F  F019         	goto	u6500
  7949  00321A                     u6501:
  7950  00321A  EF17  F019         	goto	l6813
  7951  00321E                     u6500:
  7952  00321E                     l6811:
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;main.c: 135:                 delay = 0;
  7956  00321E  0E00               	movlw	0
  7957  003220  6E3E               	movwf	_delay^0,c
  7958                           
  7959                           ;main.c: 136:                 curveMode = BeforeCurve;
  7960  003222  0E01               	movlw	1
  7961  003224  6E3F               	movwf	_curveMode^0,c
  7962                           
  7963                           ;main.c: 137:                 driveMode = CurveLeft;
  7964  003226  0E05               	movlw	5
  7965  003228  6E4C               	movwf	_driveMode^0,c
  7966                           
  7967                           ;main.c: 140:             } else if (deltaRight > (30) && deltaRight < (300) && oldDistR
      +                          ight < (125)) {
  7968  00322A  EFDE  F019         	goto	l1275
  7969  00322E                     l6813:
  7970                           
  7971                           ; BSR set to: 0
  7972  00322E  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  7973  003230  EF23  F019         	goto	u6511
  7974  003234  5017               	movf	(getCurve@deltaRight+1)^0,w,c
  7975  003236  E109               	bnz	u6510
  7976  003238  0E1F               	movlw	31
  7977  00323A  5C16               	subwf	getCurve@deltaRight^0,w,c
  7978  00323C  A0D8               	btfss	status,0,c
  7979  00323E  EF23  F019         	goto	u6511
  7980  003242  EF25  F019         	goto	u6510
  7981  003246                     u6511:
  7982  003246  EFDE  F019         	goto	l1275
  7983  00324A                     u6510:
  7984  00324A                     
  7985                           ; BSR set to: 0
  7986  00324A  BE17               	btfsc	(getCurve@deltaRight+1)^0,7,c
  7987  00324C  EF33  F019         	goto	u6520
  7988  003250  0E2C               	movlw	44
  7989  003252  5C16               	subwf	getCurve@deltaRight^0,w,c
  7990  003254  0E01               	movlw	1
  7991  003256  5817               	subwfb	(getCurve@deltaRight+1)^0,w,c
  7992  003258  B0D8               	btfsc	status,0,c
  7993  00325A  EF31  F019         	goto	u6521
  7994  00325E  EF33  F019         	goto	u6520
  7995  003262                     u6521:
  7996  003262  EFDE  F019         	goto	l1275
  7997  003266                     u6520:
  7998  003266                     
  7999                           ; BSR set to: 0
  8000  003266  51EE               	movf	(_oldDistRight+1)& (0+255),w,b
  8001  003268  E107               	bnz	u6531
  8002  00326A  0E7D               	movlw	125
  8003  00326C  5DED               	subwf	_oldDistRight& (0+255),w,b
  8004  00326E  B0D8               	btfsc	status,0,c
  8005  003270  EF3C  F019         	goto	u6531
  8006  003274  EF3E  F019         	goto	u6530
  8007  003278                     u6531:
  8008  003278  EFDE  F019         	goto	l1275
  8009  00327C                     u6530:
  8010  00327C                     
  8011                           ; BSR set to: 0
  8012                           ;main.c: 141:                 delay = 0;
  8013  00327C  0E00               	movlw	0
  8014  00327E  6E3E               	movwf	_delay^0,c
  8015                           
  8016                           ;main.c: 142:                 curveMode = BeforeCurve;
  8017  003280  0E01               	movlw	1
  8018  003282  6E3F               	movwf	_curveMode^0,c
  8019                           
  8020                           ;main.c: 143:                 driveMode = CurveRight;
  8021  003284  0E06               	movlw	6
  8022  003286  6E4C               	movwf	_driveMode^0,c
  8023  003288  EFDE  F019         	goto	l1275
  8024  00328C                     l6821:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;main.c: 150:             if (delay >= (10)) {
  8028  00328C  0E09               	movlw	9
  8029  00328E  643E               	cpfsgt	_delay^0,c
  8030  003290  EF4C  F019         	goto	u6541
  8031  003294  EF4E  F019         	goto	u6540
  8032  003298                     u6541:
  8033  003298  EF54  F019         	goto	l6825
  8034  00329C                     u6540:
  8035  00329C                     
  8036                           ; BSR set to: 0
  8037                           ;main.c: 151:                 delay = 0;
  8038  00329C  0E00               	movlw	0
  8039  00329E  6E3E               	movwf	_delay^0,c
  8040                           
  8041                           ;main.c: 152:                 curveMode = InCurve;
  8042  0032A0  0E02               	movlw	2
  8043  0032A2  6E3F               	movwf	_curveMode^0,c
  8044                           
  8045                           ;main.c: 154:             } else {
  8046  0032A4  EFDE  F019         	goto	l1275
  8047  0032A8                     l6825:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;main.c: 155:                 ++delay;
  8051  0032A8  2A3E               	incf	_delay^0,f,c
  8052  0032AA  EFDE  F019         	goto	l1275
  8053  0032AE                     l6827:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;main.c: 159:             if (delay >= (20)) {
  8057  0032AE  0E13               	movlw	19
  8058  0032B0  643E               	cpfsgt	_delay^0,c
  8059  0032B2  EF5D  F019         	goto	u6551
  8060  0032B6  EF5F  F019         	goto	u6550
  8061  0032BA                     u6551:
  8062  0032BA  EF54  F019         	goto	l6825
  8063  0032BE                     u6550:
  8064  0032BE                     
  8065                           ; BSR set to: 0
  8066                           ;main.c: 160:                 if ((driveMode == CurveLeft && distLeft < (45)) || (driveM
      +                          ode == CurveRight && distRight < (45)) || distFront > (300)) {
  8067  0032BE  0E05               	movlw	5
  8068  0032C0  184C               	xorwf	_driveMode^0,w,c
  8069  0032C2  A4D8               	btfss	status,2,c
  8070  0032C4  EF66  F019         	goto	u6561
  8071  0032C8  EF68  F019         	goto	u6560
  8072  0032CC                     u6561:
  8073  0032CC  EF73  F019         	goto	l6833
  8074  0032D0                     u6560:
  8075  0032D0                     
  8076                           ; BSR set to: 0
  8077  0032D0  51FC               	movf	(_distLeft+1)& (0+255),w,b	;volatile
  8078  0032D2  E109               	bnz	u6570
  8079  0032D4  0E2D               	movlw	45
  8080  0032D6  5DFB               	subwf	_distLeft& (0+255),w,b	;volatile
  8081  0032D8  A0D8               	btfss	status,0,c
  8082  0032DA  EF71  F019         	goto	u6571
  8083  0032DE  EF73  F019         	goto	u6570
  8084  0032E2                     u6571:
  8085  0032E2  EF92  F019         	goto	l6839
  8086  0032E6                     u6570:
  8087  0032E6                     l6833:
  8088                           
  8089                           ; BSR set to: 0
  8090  0032E6  0E06               	movlw	6
  8091  0032E8  184C               	xorwf	_driveMode^0,w,c
  8092  0032EA  A4D8               	btfss	status,2,c
  8093  0032EC  EF7A  F019         	goto	u6581
  8094  0032F0  EF7C  F019         	goto	u6580
  8095  0032F4                     u6581:
  8096  0032F4  EF87  F019         	goto	l6837
  8097  0032F8                     u6580:
  8098  0032F8                     
  8099                           ; BSR set to: 0
  8100  0032F8  51F8               	movf	(_distRight+1)& (0+255),w,b	;volatile
  8101  0032FA  E109               	bnz	u6590
  8102  0032FC  0E2D               	movlw	45
  8103  0032FE  5DF7               	subwf	_distRight& (0+255),w,b	;volatile
  8104  003300  A0D8               	btfss	status,0,c
  8105  003302  EF85  F019         	goto	u6591
  8106  003306  EF87  F019         	goto	u6590
  8107  00330A                     u6591:
  8108  00330A  EF92  F019         	goto	l6839
  8109  00330E                     u6590:
  8110  00330E                     l6837:
  8111                           
  8112                           ; BSR set to: 0
  8113  00330E  0E2D               	movlw	45
  8114  003310  5C4A               	subwf	_distFront^0,w,c	;volatile
  8115  003312  0E01               	movlw	1
  8116  003314  584B               	subwfb	(_distFront+1)^0,w,c	;volatile
  8117  003316  A0D8               	btfss	status,0,c
  8118  003318  EF90  F019         	goto	u6601
  8119  00331C  EF92  F019         	goto	u6600
  8120  003320                     u6601:
  8121  003320  EF9A  F019         	goto	l6841
  8122  003324                     u6600:
  8123  003324                     l6839:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;main.c: 162:                     delay = 0;
  8127  003324  0E00               	movlw	0
  8128  003326  6E3E               	movwf	_delay^0,c
  8129                           
  8130                           ;main.c: 163:                     curveMode = AfterCurve;
  8131  003328  0E03               	movlw	3
  8132  00332A  6E3F               	movwf	_curveMode^0,c
  8133                           
  8134                           ;main.c: 164:                     driveMode = Straight;
  8135  00332C  0E01               	movlw	1
  8136  00332E  6E4C               	movwf	_driveMode^0,c
  8137                           
  8138                           ;main.c: 167:                 } else if(driveMode == CurveRight && deltaLeft > (30)){
  8139  003330  EFDE  F019         	goto	l1275
  8140  003334                     l6841:
  8141                           
  8142                           ; BSR set to: 0
  8143  003334  0E06               	movlw	6
  8144  003336  184C               	xorwf	_driveMode^0,w,c
  8145  003338  A4D8               	btfss	status,2,c
  8146  00333A  EFA1  F019         	goto	u6611
  8147  00333E  EFA3  F019         	goto	u6610
  8148  003342                     u6611:
  8149  003342  EFDE  F019         	goto	l1275
  8150  003346                     u6610:
  8151  003346                     
  8152                           ; BSR set to: 0
  8153  003346  BE19               	btfsc	(getCurve@deltaLeft+1)^0,7,c
  8154  003348  EFAF  F019         	goto	u6621
  8155  00334C  5019               	movf	(getCurve@deltaLeft+1)^0,w,c
  8156  00334E  E109               	bnz	u6620
  8157  003350  0E1F               	movlw	31
  8158  003352  5C18               	subwf	getCurve@deltaLeft^0,w,c
  8159  003354  A0D8               	btfss	status,0,c
  8160  003356  EFAF  F019         	goto	u6621
  8161  00335A  EFB1  F019         	goto	u6620
  8162  00335E                     u6621:
  8163  00335E  EFDE  F019         	goto	l1275
  8164  003362                     u6620:
  8165  003362  EF0F  F019         	goto	l6811
  8166  003366                     l6849:
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;main.c: 179:             if (delay >= (1)) {
  8170  003366  503E               	movf	_delay^0,w,c
  8171  003368  B4D8               	btfsc	status,2,c
  8172  00336A  EFB9  F019         	goto	u6631
  8173  00336E  EFBB  F019         	goto	u6630
  8174  003372                     u6631:
  8175  003372  EF54  F019         	goto	l6825
  8176  003376                     u6630:
  8177  003376                     
  8178                           ; BSR set to: 0
  8179                           ;main.c: 180:                 delay = 0;
  8180  003376  0E00               	movlw	0
  8181  003378  6E3E               	movwf	_delay^0,c
  8182                           
  8183                           ;main.c: 181:                 curveMode = OutCurve;
  8184  00337A  0E00               	movlw	0
  8185  00337C  6E3F               	movwf	_curveMode^0,c
  8186                           
  8187                           ;main.c: 183:             } else {
  8188  00337E  EFDE  F019         	goto	l1275
  8189  003382                     l6857:
  8190                           
  8191                           ; BSR set to: 0
  8192  003382  503F               	movf	_curveMode^0,w,c
  8193  003384  6E14               	movwf	??_getCurve^0,c
  8194  003386  6A15               	clrf	(??_getCurve+1)^0,c
  8195                           
  8196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8197                           ; Switch size 1, requested type "simple"
  8198                           ; Number of cases is 1, Range of values is 0 to 0
  8199                           ; switch strategies available:
  8200                           ; Name         Instructions Cycles
  8201                           ; simple_byte            4     3 (average)
  8202                           ;	Chosen strategy is simple_byte
  8203  003388  5015               	movf	(??_getCurve+1)^0,w,c
  8204  00338A  0A00               	xorlw	0	; case 0
  8205  00338C  B4D8               	btfsc	status,2,c
  8206  00338E  EFCB  F019         	goto	l9269
  8207  003392  EFDE  F019         	goto	l1275
  8208  003396                     l9269:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ; Switch size 1, requested type "simple"
  8212                           ; Number of cases is 4, Range of values is 0 to 3
  8213                           ; switch strategies available:
  8214                           ; Name         Instructions Cycles
  8215                           ; simple_byte           13     7 (average)
  8216                           ;	Chosen strategy is simple_byte
  8217  003396  5014               	movf	??_getCurve^0,w,c
  8218  003398  0A00               	xorlw	0	; case 0
  8219  00339A  B4D8               	btfsc	status,2,c
  8220  00339C  EFE8  F018         	goto	l6805
  8221  0033A0  0A01               	xorlw	1	; case 1
  8222  0033A2  B4D8               	btfsc	status,2,c
  8223  0033A4  EF46  F019         	goto	l6821
  8224  0033A8  0A03               	xorlw	3	; case 2
  8225  0033AA  B4D8               	btfsc	status,2,c
  8226  0033AC  EF57  F019         	goto	l6827
  8227  0033B0  0A01               	xorlw	1	; case 3
  8228  0033B2  B4D8               	btfsc	status,2,c
  8229  0033B4  EFB3  F019         	goto	l6849
  8230  0033B8  EFDE  F019         	goto	l1275
  8231  0033BC                     l1275:
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;main.c: 188:     oldDistLeft = distLeft;
  8235  0033BC  C0FB  F0EF         	movff	_distLeft,_oldDistLeft	;volatile
  8236  0033C0  C0FC  F0F0         	movff	_distLeft+1,_oldDistLeft+1	;volatile
  8237                           
  8238                           ;main.c: 189:     oldDistRight = distRight;
  8239  0033C4  C0F7  F0ED         	movff	_distRight,_oldDistRight	;volatile
  8240  0033C8  C0F8  F0EE         	movff	_distRight+1,_oldDistRight+1	;volatile
  8241  0033CC                     
  8242                           ; BSR set to: 0
  8243  0033CC  0012               	return		;funcret
  8244  0033CE                     __end_of_getCurve:
  8245                           	callstack 0
  8246                           
  8247 ;; *************** function _checkBatt *****************
  8248 ;; Defined at:
  8249 ;;		line 83 in file "main.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;		None
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;		None
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  1    wreg      _Bool 
  8256 ;; Registers used:
  8257 ;;		wreg, status,2, status,0, cstack
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8267 ;;Total ram usage:        0 bytes
  8268 ;; Hardware stack levels used: 1
  8269 ;; Hardware stack levels required when called: 10
  8270 ;; This function calls:
  8271 ;;		___flge
  8272 ;;		___xxtofl
  8273 ;;		_getBatteryVoltage
  8274 ;;		_setSteering
  8275 ;; This function is called by:
  8276 ;;		_loop
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           	psect	text30
  8281  005178                     __ptext30:
  8282                           	callstack 0
  8283  005178                     _checkBatt:
  8284                           	callstack 19
  8285  005178                     
  8286                           ;main.c: 84:     ++battCheckCount;
  8287  005178  0101               	movlb	1	; () banked
  8288  00517A  4B30               	infsnz	_battCheckCount& (0+255),f,b
  8289  00517C  2B31               	incf	(_battCheckCount+1)& (0+255),f,b
  8290  00517E                     
  8291                           ; BSR set to: 1
  8292                           ;main.c: 85:     if (battCheckCount > (500)) {
  8293  00517E  0EF5               	movlw	245
  8294  005180  5D30               	subwf	_battCheckCount& (0+255),w,b
  8295  005182  0E01               	movlw	1
  8296  005184  5931               	subwfb	(_battCheckCount+1)& (0+255),w,b
  8297  005186  A0D8               	btfss	status,0,c
  8298  005188  EFC8  F028         	goto	u9911
  8299  00518C  EFCA  F028         	goto	u9910
  8300  005190                     u9911:
  8301  005190  EF03  F029         	goto	l8963
  8302  005194                     u9910:
  8303  005194                     
  8304                           ; BSR set to: 1
  8305                           ;main.c: 86:         battCheckCount = 0;
  8306  005194  0E00               	movlw	0
  8307  005196  6F31               	movwf	(_battCheckCount+1)& (0+255),b
  8308  005198  0E00               	movlw	0
  8309  00519A  6F30               	movwf	_battCheckCount& (0+255),b
  8310  00519C                     
  8311                           ; BSR set to: 1
  8312                           ;main.c: 87:         getBatteryVoltage();
  8313  00519C  ECA6  F02E         	call	_getBatteryVoltage	;wreg free
  8314  0051A0                     
  8315                           ;main.c: 89:         if (BatteryVolt < (6.8) * 409.6f) {
  8316  0051A0  C0E5  F01C         	movff	_BatteryVolt,___xxtofl@val
  8317  0051A4  C0E6  F01D         	movff	_BatteryVolt+1,___xxtofl@val+1
  8318  0051A8  6A1E               	clrf	(___xxtofl@val+2)^0,c
  8319  0051AA  6A1F               	clrf	(___xxtofl@val+3)^0,c
  8320  0051AC  0E00               	movlw	0
  8321  0051AE  ECD3  F01D         	call	___xxtofl
  8322  0051B2  C01C  F06D         	movff	?___xxtofl,___flge@ff1
  8323  0051B6  C01D  F06E         	movff	?___xxtofl+1,___flge@ff1+1
  8324  0051BA  C01E  F06F         	movff	?___xxtofl+2,___flge@ff1+2
  8325  0051BE  C01F  F070         	movff	?___xxtofl+3,___flge@ff1+3
  8326  0051C2  0E7B               	movlw	123
  8327  0051C4  0100               	movlb	0	; () banked
  8328  0051C6  6F71               	movwf	___flge@ff2& (0+255),b
  8329  0051C8  0E14               	movlw	20
  8330  0051CA  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  8331  0051CC  0E2E               	movlw	46
  8332  0051CE  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  8333  0051D0  0E45               	movlw	69
  8334  0051D2  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  8335  0051D4  ECB2  F023         	call	___flge	;wreg free
  8336  0051D8  0100               	movlb	0	; () banked
  8337  0051DA  B0D8               	btfsc	status,0,c
  8338  0051DC  EFF2  F028         	goto	u9921
  8339  0051E0  EFF4  F028         	goto	u9920
  8340  0051E4                     u9921:
  8341  0051E4  EF03  F029         	goto	l8963
  8342  0051E8                     u9920:
  8343  0051E8                     
  8344                           ; BSR set to: 0
  8345                           ;main.c: 90:             setSpeed = 0;
  8346  0051E8  0E00               	movlw	0
  8347  0051EA  6FEC               	movwf	(_setSpeed+1)& (0+255),b
  8348  0051EC  0E00               	movlw	0
  8349  0051EE  6FEB               	movwf	_setSpeed& (0+255),b
  8350  0051F0                     
  8351                           ; BSR set to: 0
  8352                           ;main.c: 91:             setSteering(0, Front);
  8353  0051F0  0E00               	movlw	0
  8354  0051F2  6F84               	movwf	(setSteering@steering+1)& (0+255),b
  8355  0051F4  0E00               	movlw	0
  8356  0051F6  6F83               	movwf	setSteering@steering& (0+255),b
  8357  0051F8  0E03               	movlw	3
  8358  0051FA  6F85               	movwf	setSteering@steeringMode& (0+255),b
  8359  0051FC  ECF7  F01B         	call	_setSteering	;wreg free
  8360  005200                     
  8361                           ;main.c: 92:             return 1;
  8362  005200  0E01               	movlw	1
  8363  005202  EF04  F029         	goto	l1255
  8364  005206                     l8963:
  8365                           
  8366                           ;main.c: 95:     return 0;
  8367  005206  0E00               	movlw	0
  8368  005208                     l1255:
  8369  005208  0012               	return		;funcret
  8370  00520A                     __end_of_checkBatt:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _setSteering *****************
  8374 ;; Defined at:
  8375 ;;		line 389 in file "main.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;  steering        2   35[BANK0 ] short 
  8378 ;;  steeringMode    1   37[BANK0 ] enum E17304
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;  steeringB       2   42[BANK0 ] short 
  8381 ;;  steeringF       2   40[BANK0 ] short 
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      void 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2, status,0, cstack
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8391 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8392 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8393 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8394 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8395 ;;Total ram usage:        9 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 9
  8398 ;; This function calls:
  8399 ;;		_PWM5_LoadDutyValue
  8400 ;;		_PWM6_LoadDutyValue
  8401 ;;		___fldiv
  8402 ;;		___fltol
  8403 ;;		___xxtofl
  8404 ;; This function is called by:
  8405 ;;		_loop
  8406 ;;		_checkBatt
  8407 ;;		_startAccell
  8408 ;;		_calcSteering
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text31
  8413  0037EE                     __ptext31:
  8414                           	callstack 0
  8415  0037EE                     _setSteering:
  8416                           	callstack 19
  8417  0037EE  0E00               	movlw	0
  8418  0037F0  0100               	movlb	0	; () banked
  8419  0037F2  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8420  0037F4  0E00               	movlw	0
  8421  0037F6  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8422                           
  8423                           ;main.c: 391:     switch (steeringMode) {
  8424  0037F8  EF72  F01C         	goto	l8789
  8425  0037FC                     l1379:
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;main.c: 393:             steeringF = (+steering);
  8429  0037FC  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8430  003800  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8431                           
  8432                           ;main.c: 394:             steeringB = -steering;
  8433  003804  C083  F086         	movff	setSteering@steering,??_setSteering
  8434  003808  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  8435  00380C  1F86               	comf	??_setSteering& (0+255),f,b
  8436  00380E  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  8437  003810  4B86               	infsnz	??_setSteering& (0+255),f,b
  8438  003812  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  8439  003814  C086  F08A         	movff	??_setSteering,setSteering@steeringB
  8440  003818  C087  F08B         	movff	??_setSteering+1,setSteering@steeringB+1
  8441                           
  8442                           ;main.c: 395:             break;
  8443  00381C  EF93  F01C         	goto	l8791
  8444  003820                     l1381:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;main.c: 397:             steeringF = (+steering);
  8448  003820  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8449  003824  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8450                           
  8451                           ;main.c: 398:             steeringB = (+steering);
  8452  003828  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  8453  00382C  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  8454                           
  8455                           ;main.c: 399:             break;
  8456  003830  EF93  F01C         	goto	l8791
  8457  003834                     l1382:
  8458                           
  8459                           ; BSR set to: 0
  8460                           ;main.c: 401:             steeringF = (+steering);
  8461  003834  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8462  003838  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8463  00383C                     
  8464                           ; BSR set to: 0
  8465                           ;main.c: 402:             steeringB = (-steering / (1.25));
  8466  00383C  0E00               	movlw	0
  8467  00383E  6E2E               	movwf	___fldiv@a^0,c
  8468  003840  0E00               	movlw	0
  8469  003842  6E2F               	movwf	(___fldiv@a+1)^0,c
  8470  003844  0EA0               	movlw	160
  8471  003846  6E30               	movwf	(___fldiv@a+2)^0,c
  8472  003848  0E3F               	movlw	63
  8473  00384A  6E31               	movwf	(___fldiv@a+3)^0,c
  8474  00384C  C083  F086         	movff	setSteering@steering,??_setSteering
  8475  003850  C084  F087         	movff	setSteering@steering+1,??_setSteering+1
  8476  003854  1F86               	comf	??_setSteering& (0+255),f,b
  8477  003856  1F87               	comf	(??_setSteering+1)& (0+255),f,b
  8478  003858  4B86               	infsnz	??_setSteering& (0+255),f,b
  8479  00385A  2B87               	incf	(??_setSteering+1)& (0+255),f,b
  8480  00385C  C086  F01C         	movff	??_setSteering,___xxtofl@val
  8481  003860  C087  F01D         	movff	??_setSteering+1,___xxtofl@val+1
  8482  003864  0E00               	movlw	0
  8483  003866  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
  8484  003868  0EFF               	movlw	-1
  8485  00386A  6E1E               	movwf	(___xxtofl@val+2)^0,c
  8486  00386C  6E1F               	movwf	(___xxtofl@val+3)^0,c
  8487  00386E  0E01               	movlw	1
  8488  003870  ECD3  F01D         	call	___xxtofl
  8489  003874  C01C  F02A         	movff	?___xxtofl,___fldiv@b
  8490  003878  C01D  F02B         	movff	?___xxtofl+1,___fldiv@b+1
  8491  00387C  C01E  F02C         	movff	?___xxtofl+2,___fldiv@b+2
  8492  003880  C01F  F02D         	movff	?___xxtofl+3,___fldiv@b+3
  8493  003884  EC98  F015         	call	___fldiv	;wreg free
  8494  003888  C02A  F079         	movff	?___fldiv,___fltol@f1
  8495  00388C  C02B  F07A         	movff	?___fldiv+1,___fltol@f1+1
  8496  003890  C02C  F07B         	movff	?___fldiv+2,___fltol@f1+2
  8497  003894  C02D  F07C         	movff	?___fldiv+3,___fltol@f1+3
  8498  003898  ECAB  F022         	call	___fltol	;wreg free
  8499  00389C  C079  F08A         	movff	?___fltol,setSteering@steeringB
  8500  0038A0  C07A  F08B         	movff	?___fltol+1,setSteering@steeringB+1
  8501                           
  8502                           ;main.c: 403:             break;
  8503  0038A4  EF93  F01C         	goto	l8791
  8504  0038A8                     l1383:
  8505                           
  8506                           ; BSR set to: 0
  8507                           ;main.c: 405:             steeringF = (+steering);
  8508  0038A8  C083  F088         	movff	setSteering@steering,setSteering@steeringF
  8509  0038AC  C084  F089         	movff	setSteering@steering+1,setSteering@steeringF+1
  8510  0038B0                     
  8511                           ; BSR set to: 0
  8512                           ;main.c: 406:             steeringB = 0;
  8513  0038B0  0E00               	movlw	0
  8514  0038B2  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8515  0038B4  0E00               	movlw	0
  8516  0038B6  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8517                           
  8518                           ;main.c: 407:             break;
  8519  0038B8  EF93  F01C         	goto	l8791
  8520  0038BC                     l8781:
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;main.c: 409:             steeringF = 0;
  8524  0038BC  0E00               	movlw	0
  8525  0038BE  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8526  0038C0  0E00               	movlw	0
  8527  0038C2  6F88               	movwf	setSteering@steeringF& (0+255),b
  8528  0038C4                     
  8529                           ; BSR set to: 0
  8530                           ;main.c: 410:             steeringB = (+steering);
  8531  0038C4  C083  F08A         	movff	setSteering@steering,setSteering@steeringB
  8532  0038C8  C084  F08B         	movff	setSteering@steering+1,setSteering@steeringB+1
  8533                           
  8534                           ;main.c: 411:             break;
  8535  0038CC  EF93  F01C         	goto	l8791
  8536  0038D0                     l8785:
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;main.c: 413:             steeringF = 0;
  8540  0038D0  0E00               	movlw	0
  8541  0038D2  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8542  0038D4  0E00               	movlw	0
  8543  0038D6  6F88               	movwf	setSteering@steeringF& (0+255),b
  8544                           
  8545                           ;main.c: 414:             steeringB = 0;
  8546  0038D8  0E00               	movlw	0
  8547  0038DA  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8548  0038DC  0E00               	movlw	0
  8549  0038DE  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8550                           
  8551                           ;main.c: 415:             break;
  8552  0038E0  EF93  F01C         	goto	l8791
  8553  0038E4                     l8789:
  8554                           
  8555                           ; BSR set to: 0
  8556  0038E4  5185               	movf	setSteering@steeringMode& (0+255),w,b
  8557  0038E6  6F86               	movwf	??_setSteering& (0+255),b
  8558  0038E8  6B87               	clrf	(??_setSteering+1)& (0+255),b
  8559                           
  8560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8561                           ; Switch size 1, requested type "simple"
  8562                           ; Number of cases is 1, Range of values is 0 to 0
  8563                           ; switch strategies available:
  8564                           ; Name         Instructions Cycles
  8565                           ; simple_byte            4     3 (average)
  8566                           ;	Chosen strategy is simple_byte
  8567  0038EA  5187               	movf	(??_setSteering+1)& (0+255),w,b
  8568  0038EC  0A00               	xorlw	0	; case 0
  8569  0038EE  B4D8               	btfsc	status,2,c
  8570  0038F0  EF7C  F01C         	goto	l9271
  8571  0038F4  EF68  F01C         	goto	l8785
  8572  0038F8                     l9271:
  8573                           
  8574                           ; BSR set to: 0
  8575                           ; Switch size 1, requested type "simple"
  8576                           ; Number of cases is 5, Range of values is 0 to 4
  8577                           ; switch strategies available:
  8578                           ; Name         Instructions Cycles
  8579                           ; simple_byte           16     9 (average)
  8580                           ;	Chosen strategy is simple_byte
  8581  0038F8  5186               	movf	??_setSteering& (0+255),w,b
  8582  0038FA  0A00               	xorlw	0	; case 0
  8583  0038FC  B4D8               	btfsc	status,2,c
  8584  0038FE  EFFE  F01B         	goto	l1379
  8585  003902  0A01               	xorlw	1	; case 1
  8586  003904  B4D8               	btfsc	status,2,c
  8587  003906  EF10  F01C         	goto	l1381
  8588  00390A  0A03               	xorlw	3	; case 2
  8589  00390C  B4D8               	btfsc	status,2,c
  8590  00390E  EF1A  F01C         	goto	l1382
  8591  003912  0A01               	xorlw	1	; case 3
  8592  003914  B4D8               	btfsc	status,2,c
  8593  003916  EF54  F01C         	goto	l1383
  8594  00391A  0A07               	xorlw	7	; case 4
  8595  00391C  B4D8               	btfsc	status,2,c
  8596  00391E  EF5E  F01C         	goto	l8781
  8597  003922  EF68  F01C         	goto	l8785
  8598  003926                     l8791:
  8599                           
  8600                           ;main.c: 418:     if (steeringF > ((65))) {
  8601  003926  0100               	movlb	0	; () banked
  8602  003928  BF89               	btfsc	(setSteering@steeringF+1)& (0+255),7,b
  8603  00392A  EFA0  F01C         	goto	u9751
  8604  00392E  5189               	movf	(setSteering@steeringF+1)& (0+255),w,b
  8605  003930  E109               	bnz	u9750
  8606  003932  0E42               	movlw	66
  8607  003934  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  8608  003936  A0D8               	btfss	status,0,c
  8609  003938  EFA0  F01C         	goto	u9751
  8610  00393C  EFA2  F01C         	goto	u9750
  8611  003940                     u9751:
  8612  003940  EFA8  F01C         	goto	l8795
  8613  003944                     u9750:
  8614  003944                     
  8615                           ; BSR set to: 0
  8616                           ;main.c: 419:         steeringF = ((65));
  8617  003944  0E00               	movlw	0
  8618  003946  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8619  003948  0E41               	movlw	65
  8620  00394A  6F88               	movwf	setSteering@steeringF& (0+255),b
  8621                           
  8622                           ;main.c: 420:     } else if (steeringF < (-(65))) {
  8623  00394C  EFBA  F01C         	goto	l8799
  8624  003950                     l8795:
  8625                           
  8626                           ; BSR set to: 0
  8627  003950  AF89               	btfss	(setSteering@steeringF+1)& (0+255),7,b
  8628  003952  EFB4  F01C         	goto	u9761
  8629  003956  0EBF               	movlw	191
  8630  003958  5D88               	subwf	setSteering@steeringF& (0+255),w,b
  8631  00395A  0EFF               	movlw	255
  8632  00395C  5989               	subwfb	(setSteering@steeringF+1)& (0+255),w,b
  8633  00395E  B0D8               	btfsc	status,0,c
  8634  003960  EFB4  F01C         	goto	u9761
  8635  003964  EFB6  F01C         	goto	u9760
  8636  003968                     u9761:
  8637  003968  EFBA  F01C         	goto	l8799
  8638  00396C                     u9760:
  8639  00396C                     
  8640                           ; BSR set to: 0
  8641                           ;main.c: 421:         steeringF = (-(65));
  8642  00396C  0EFF               	movlw	255
  8643  00396E  6F89               	movwf	(setSteering@steeringF+1)& (0+255),b
  8644  003970  0EBF               	movlw	191
  8645  003972  6F88               	movwf	setSteering@steeringF& (0+255),b
  8646  003974                     l8799:
  8647                           
  8648                           ; BSR set to: 0
  8649                           ;main.c: 424:     if (steeringB > ((40))) {
  8650  003974  BF8B               	btfsc	(setSteering@steeringB+1)& (0+255),7,b
  8651  003976  EFC6  F01C         	goto	u9771
  8652  00397A  518B               	movf	(setSteering@steeringB+1)& (0+255),w,b
  8653  00397C  E109               	bnz	u9770
  8654  00397E  0E29               	movlw	41
  8655  003980  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  8656  003982  A0D8               	btfss	status,0,c
  8657  003984  EFC6  F01C         	goto	u9771
  8658  003988  EFC8  F01C         	goto	u9770
  8659  00398C                     u9771:
  8660  00398C  EFCE  F01C         	goto	l8803
  8661  003990                     u9770:
  8662  003990                     
  8663                           ; BSR set to: 0
  8664                           ;main.c: 425:         steeringB = ((40));
  8665  003990  0E00               	movlw	0
  8666  003992  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8667  003994  0E28               	movlw	40
  8668  003996  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8669                           
  8670                           ;main.c: 426:     } else if (steeringB < (-(40))) {
  8671  003998  EFE0  F01C         	goto	l8807
  8672  00399C                     l8803:
  8673                           
  8674                           ; BSR set to: 0
  8675  00399C  AF8B               	btfss	(setSteering@steeringB+1)& (0+255),7,b
  8676  00399E  EFDA  F01C         	goto	u9781
  8677  0039A2  0ED8               	movlw	216
  8678  0039A4  5D8A               	subwf	setSteering@steeringB& (0+255),w,b
  8679  0039A6  0EFF               	movlw	255
  8680  0039A8  598B               	subwfb	(setSteering@steeringB+1)& (0+255),w,b
  8681  0039AA  B0D8               	btfsc	status,0,c
  8682  0039AC  EFDA  F01C         	goto	u9781
  8683  0039B0  EFDC  F01C         	goto	u9780
  8684  0039B4                     u9781:
  8685  0039B4  EFE0  F01C         	goto	l8807
  8686  0039B8                     u9780:
  8687  0039B8                     
  8688                           ; BSR set to: 0
  8689                           ;main.c: 427:         steeringB = (-(40));
  8690  0039B8  0EFF               	movlw	255
  8691  0039BA  6F8B               	movwf	(setSteering@steeringB+1)& (0+255),b
  8692  0039BC  0ED8               	movlw	216
  8693  0039BE  6F8A               	movwf	setSteering@steeringB& (0+255),b
  8694  0039C0                     l8807:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;main.c: 431:     PWM6_LoadDutyValue((uint16_t) ((352) + steeringF));
  8698  0039C0  0E60               	movlw	96
  8699  0039C2  2588               	addwf	setSteering@steeringF& (0+255),w,b
  8700  0039C4  6E14               	movwf	PWM6_LoadDutyValue@dutyValue^0,c
  8701  0039C6  0E01               	movlw	1
  8702  0039C8  2189               	addwfc	(setSteering@steeringF+1)& (0+255),w,b
  8703  0039CA  6E15               	movwf	(PWM6_LoadDutyValue@dutyValue+1)^0,c
  8704  0039CC  EC3D  F02C         	call	_PWM6_LoadDutyValue	;wreg free
  8705  0039D0                     
  8706                           ;main.c: 432:     PWM5_LoadDutyValue((uint16_t) ((357) + steeringB));
  8707  0039D0  0E65               	movlw	101
  8708  0039D2  0100               	movlb	0	; () banked
  8709  0039D4  258A               	addwf	setSteering@steeringB& (0+255),w,b
  8710  0039D6  6E14               	movwf	PWM5_LoadDutyValue@dutyValue^0,c
  8711  0039D8  0E01               	movlw	1
  8712  0039DA  218B               	addwfc	(setSteering@steeringB+1)& (0+255),w,b
  8713  0039DC  6E15               	movwf	(PWM5_LoadDutyValue@dutyValue+1)^0,c
  8714  0039DE  EC57  F02C         	call	_PWM5_LoadDutyValue	;wreg free
  8715  0039E2  0012               	return		;funcret
  8716  0039E4                     __end_of_setSteering:
  8717                           	callstack 0
  8718                           
  8719 ;; *************** function ___fldiv *****************
  8720 ;; Defined at:
  8721 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  b               4   41[COMRAM] void 
  8724 ;;  a               4   45[COMRAM] void 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  grs             4    7[BANK0 ] unsigned long 
  8727 ;;  rem             4    0[BANK0 ] unsigned long 
  8728 ;;  new_exp         2    5[BANK0 ] short 
  8729 ;;  aexp            1   12[BANK0 ] unsigned char 
  8730 ;;  bexp            1   11[BANK0 ] unsigned char 
  8731 ;;  sign            1    4[BANK0 ] unsigned char 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  4   41[COMRAM] unsigned char 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2, status,0
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8741 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8742 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8744 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8745 ;;Total ram usage:       25 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 8
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_setSteering
  8752 ;;		_efgtoa
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text32
  8757  002B30                     __ptext32:
  8758                           	callstack 0
  8759  002B30                     ___fldiv:
  8760                           	callstack 19
  8761  002B30  502D               	movf	(___fldiv@b+3)^0,w,c
  8762  002B32  0B80               	andlw	128
  8763  002B34  0100               	movlb	0	; () banked
  8764  002B36  6F64               	movwf	___fldiv@sign& (0+255),b
  8765  002B38  502D               	movf	(___fldiv@b+3)^0,w,c
  8766  002B3A  242D               	addwf	(___fldiv@b+3)^0,w,c
  8767  002B3C  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8768  002B3E                     
  8769                           ; BSR set to: 0
  8770  002B3E  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  8771  002B40  EFA4  F015         	goto	u7791
  8772  002B44  EFA6  F015         	goto	u7790
  8773  002B48                     u7791:
  8774  002B48  EFA7  F015         	goto	l7723
  8775  002B4C                     u7790:
  8776  002B4C                     
  8777                           ; BSR set to: 0
  8778  002B4C  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8779  002B4E                     l7723:
  8780                           
  8781                           ; BSR set to: 0
  8782  002B4E  516B               	movf	___fldiv@bexp& (0+255),w,b
  8783  002B50  B4D8               	btfsc	status,2,c
  8784  002B52  EFAD  F015         	goto	u7801
  8785  002B56  EFAF  F015         	goto	u7800
  8786  002B5A                     u7801:
  8787  002B5A  EFC4  F015         	goto	l7733
  8788  002B5E                     u7800:
  8789  002B5E                     
  8790                           ; BSR set to: 0
  8791  002B5E  296B               	incf	___fldiv@bexp& (0+255),w,b
  8792  002B60  A4D8               	btfss	status,2,c
  8793  002B62  EFB5  F015         	goto	u7811
  8794  002B66  EFB7  F015         	goto	u7810
  8795  002B6A                     u7811:
  8796  002B6A  EFBF  F015         	goto	l7729
  8797  002B6E                     u7810:
  8798  002B6E                     
  8799                           ; BSR set to: 0
  8800  002B6E  0E00               	movlw	0
  8801  002B70  6E2A               	movwf	___fldiv@b^0,c
  8802  002B72  0E00               	movlw	0
  8803  002B74  6E2B               	movwf	(___fldiv@b+1)^0,c
  8804  002B76  0E00               	movlw	0
  8805  002B78  6E2C               	movwf	(___fldiv@b+2)^0,c
  8806  002B7A  0E00               	movlw	0
  8807  002B7C  6E2D               	movwf	(___fldiv@b+3)^0,c
  8808  002B7E                     l7729:
  8809                           
  8810                           ; BSR set to: 0
  8811  002B7E  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  8812  002B80                     
  8813                           ; BSR set to: 0
  8814  002B80  0E00               	movlw	0
  8815  002B82  6E2D               	movwf	(___fldiv@b+3)^0,c
  8816  002B84  EFCC  F015         	goto	l7735
  8817  002B88                     l7733:
  8818                           
  8819                           ; BSR set to: 0
  8820  002B88  0E00               	movlw	0
  8821  002B8A  6E2A               	movwf	___fldiv@b^0,c
  8822  002B8C  0E00               	movlw	0
  8823  002B8E  6E2B               	movwf	(___fldiv@b+1)^0,c
  8824  002B90  0E00               	movlw	0
  8825  002B92  6E2C               	movwf	(___fldiv@b+2)^0,c
  8826  002B94  0E00               	movlw	0
  8827  002B96  6E2D               	movwf	(___fldiv@b+3)^0,c
  8828  002B98                     l7735:
  8829                           
  8830                           ; BSR set to: 0
  8831  002B98  5031               	movf	(___fldiv@a+3)^0,w,c
  8832  002B9A  0B80               	andlw	128
  8833  002B9C  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8834  002B9E                     
  8835                           ; BSR set to: 0
  8836  002B9E  5031               	movf	(___fldiv@a+3)^0,w,c
  8837  002BA0  2431               	addwf	(___fldiv@a+3)^0,w,c
  8838  002BA2  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8839  002BA4                     
  8840                           ; BSR set to: 0
  8841  002BA4  AE30               	btfss	(___fldiv@a+2)^0,7,c
  8842  002BA6  EFD7  F015         	goto	u7821
  8843  002BAA  EFD9  F015         	goto	u7820
  8844  002BAE                     u7821:
  8845  002BAE  EFDA  F015         	goto	l7743
  8846  002BB2                     u7820:
  8847  002BB2                     
  8848                           ; BSR set to: 0
  8849  002BB2  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8850  002BB4                     l7743:
  8851                           
  8852                           ; BSR set to: 0
  8853  002BB4  516C               	movf	___fldiv@aexp& (0+255),w,b
  8854  002BB6  B4D8               	btfsc	status,2,c
  8855  002BB8  EFE0  F015         	goto	u7831
  8856  002BBC  EFE2  F015         	goto	u7830
  8857  002BC0                     u7831:
  8858  002BC0  EFF7  F015         	goto	l7753
  8859  002BC4                     u7830:
  8860  002BC4                     
  8861                           ; BSR set to: 0
  8862  002BC4  296C               	incf	___fldiv@aexp& (0+255),w,b
  8863  002BC6  A4D8               	btfss	status,2,c
  8864  002BC8  EFE8  F015         	goto	u7841
  8865  002BCC  EFEA  F015         	goto	u7840
  8866  002BD0                     u7841:
  8867  002BD0  EFF2  F015         	goto	l7749
  8868  002BD4                     u7840:
  8869  002BD4                     
  8870                           ; BSR set to: 0
  8871  002BD4  0E00               	movlw	0
  8872  002BD6  6E2E               	movwf	___fldiv@a^0,c
  8873  002BD8  0E00               	movlw	0
  8874  002BDA  6E2F               	movwf	(___fldiv@a+1)^0,c
  8875  002BDC  0E00               	movlw	0
  8876  002BDE  6E30               	movwf	(___fldiv@a+2)^0,c
  8877  002BE0  0E00               	movlw	0
  8878  002BE2  6E31               	movwf	(___fldiv@a+3)^0,c
  8879  002BE4                     l7749:
  8880                           
  8881                           ; BSR set to: 0
  8882  002BE4  8E30               	bsf	(___fldiv@a+2)^0,7,c
  8883  002BE6                     
  8884                           ; BSR set to: 0
  8885  002BE6  0E00               	movlw	0
  8886  002BE8  6E31               	movwf	(___fldiv@a+3)^0,c
  8887  002BEA  EFFF  F015         	goto	l7755
  8888  002BEE                     l7753:
  8889                           
  8890                           ; BSR set to: 0
  8891  002BEE  0E00               	movlw	0
  8892  002BF0  6E2E               	movwf	___fldiv@a^0,c
  8893  002BF2  0E00               	movlw	0
  8894  002BF4  6E2F               	movwf	(___fldiv@a+1)^0,c
  8895  002BF6  0E00               	movlw	0
  8896  002BF8  6E30               	movwf	(___fldiv@a+2)^0,c
  8897  002BFA  0E00               	movlw	0
  8898  002BFC  6E31               	movwf	(___fldiv@a+3)^0,c
  8899  002BFE                     l7755:
  8900                           
  8901                           ; BSR set to: 0
  8902  002BFE  502E               	movf	___fldiv@a^0,w,c
  8903  002C00  102F               	iorwf	(___fldiv@a+1)^0,w,c
  8904  002C02  1030               	iorwf	(___fldiv@a+2)^0,w,c
  8905  002C04  1031               	iorwf	(___fldiv@a+3)^0,w,c
  8906  002C06  A4D8               	btfss	status,2,c
  8907  002C08  EF08  F016         	goto	u7851
  8908  002C0C  EF0A  F016         	goto	u7850
  8909  002C10                     u7851:
  8910  002C10  EF22  F016         	goto	l7767
  8911  002C14                     u7850:
  8912  002C14                     
  8913                           ; BSR set to: 0
  8914  002C14  0E00               	movlw	0
  8915  002C16  6E2A               	movwf	___fldiv@b^0,c
  8916  002C18  0E00               	movlw	0
  8917  002C1A  6E2B               	movwf	(___fldiv@b+1)^0,c
  8918  002C1C  0E00               	movlw	0
  8919  002C1E  6E2C               	movwf	(___fldiv@b+2)^0,c
  8920  002C20  0E00               	movlw	0
  8921  002C22  6E2D               	movwf	(___fldiv@b+3)^0,c
  8922  002C24                     
  8923                           ; BSR set to: 0
  8924  002C24  0E80               	movlw	128
  8925  002C26  122C               	iorwf	(___fldiv@b+2)^0,f,c
  8926  002C28  0E7F               	movlw	127
  8927  002C2A  122D               	iorwf	(___fldiv@b+3)^0,f,c
  8928  002C2C                     l7761:
  8929                           
  8930                           ; BSR set to: 0
  8931  002C2C  5164               	movf	___fldiv@sign& (0+255),w,b
  8932  002C2E  122D               	iorwf	(___fldiv@b+3)^0,f,c
  8933  002C30                     
  8934                           ; BSR set to: 0
  8935  002C30  C02A  F02A         	movff	___fldiv@b,?___fldiv
  8936  002C34  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  8937  002C38  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  8938  002C3C  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  8939  002C40  EF65  F017         	goto	l1977
  8940  002C44                     l7767:
  8941                           
  8942                           ; BSR set to: 0
  8943  002C44  516B               	movf	___fldiv@bexp& (0+255),w,b
  8944  002C46  A4D8               	btfss	status,2,c
  8945  002C48  EF28  F016         	goto	u7861
  8946  002C4C  EF2A  F016         	goto	u7860
  8947  002C50                     u7861:
  8948  002C50  EF34  F016         	goto	l7775
  8949  002C54                     u7860:
  8950  002C54                     
  8951                           ; BSR set to: 0
  8952  002C54  0E00               	movlw	0
  8953  002C56  6E2A               	movwf	?___fldiv^0,c
  8954  002C58  0E00               	movlw	0
  8955  002C5A  6E2B               	movwf	(?___fldiv+1)^0,c
  8956  002C5C  0E00               	movlw	0
  8957  002C5E  6E2C               	movwf	(?___fldiv+2)^0,c
  8958  002C60  0E00               	movlw	0
  8959  002C62  6E2D               	movwf	(?___fldiv+3)^0,c
  8960  002C64  EF65  F017         	goto	l1977
  8961  002C68                     l7775:
  8962                           
  8963                           ; BSR set to: 0
  8964  002C68  516C               	movf	___fldiv@aexp& (0+255),w,b
  8965  002C6A  C06B  F032         	movff	___fldiv@bexp,??___fldiv
  8966  002C6E  6A33               	clrf	(??___fldiv+1)^0,c
  8967  002C70  5E32               	subwf	??___fldiv^0,f,c
  8968  002C72  0E00               	movlw	0
  8969  002C74  5A33               	subwfb	(??___fldiv+1)^0,f,c
  8970  002C76  0E7F               	movlw	127
  8971  002C78  2432               	addwf	??___fldiv^0,w,c
  8972  002C7A  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8973  002C7C  0E00               	movlw	0
  8974  002C7E  2033               	addwfc	(??___fldiv+1)^0,w,c
  8975  002C80  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8976  002C82                     
  8977                           ; BSR set to: 0
  8978  002C82  C02A  F060         	movff	___fldiv@b,___fldiv@rem
  8979  002C86  C02B  F061         	movff	___fldiv@b+1,___fldiv@rem+1
  8980  002C8A  C02C  F062         	movff	___fldiv@b+2,___fldiv@rem+2
  8981  002C8E  C02D  F063         	movff	___fldiv@b+3,___fldiv@rem+3
  8982  002C92                     
  8983                           ; BSR set to: 0
  8984  002C92  0E00               	movlw	0
  8985  002C94  6E2A               	movwf	___fldiv@b^0,c
  8986  002C96  0E00               	movlw	0
  8987  002C98  6E2B               	movwf	(___fldiv@b+1)^0,c
  8988  002C9A  0E00               	movlw	0
  8989  002C9C  6E2C               	movwf	(___fldiv@b+2)^0,c
  8990  002C9E  0E00               	movlw	0
  8991  002CA0  6E2D               	movwf	(___fldiv@b+3)^0,c
  8992  002CA2                     
  8993                           ; BSR set to: 0
  8994  002CA2  0E00               	movlw	0
  8995  002CA4  6F67               	movwf	___fldiv@grs& (0+255),b
  8996  002CA6  0E00               	movlw	0
  8997  002CA8  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8998  002CAA  0E00               	movlw	0
  8999  002CAC  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  9000  002CAE  0E00               	movlw	0
  9001  002CB0  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  9002  002CB2                     
  9003                           ; BSR set to: 0
  9004  002CB2  0E00               	movlw	0
  9005  002CB4  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9006  002CB6  EF95  F016         	goto	l1979
  9007  002CBA                     l7785:
  9008                           
  9009                           ; BSR set to: 0
  9010  002CBA  516C               	movf	___fldiv@aexp& (0+255),w,b
  9011  002CBC  B4D8               	btfsc	status,2,c
  9012  002CBE  EF63  F016         	goto	u7871
  9013  002CC2  EF65  F016         	goto	u7870
  9014  002CC6                     u7871:
  9015  002CC6  EF7C  F016         	goto	l7793
  9016  002CCA                     u7870:
  9017  002CCA                     
  9018                           ; BSR set to: 0
  9019  002CCA  90D8               	bcf	status,0,c
  9020  002CCC  3760               	rlcf	___fldiv@rem& (0+255),f,b
  9021  002CCE  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9022  002CD0  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9023  002CD2  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9024  002CD4  90D8               	bcf	status,0,c
  9025  002CD6  362A               	rlcf	___fldiv@b^0,f,c
  9026  002CD8  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9027  002CDA  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9028  002CDC  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9029  002CDE                     
  9030                           ; BSR set to: 0
  9031  002CDE  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9032  002CE0  EF74  F016         	goto	u7881
  9033  002CE4  EF76  F016         	goto	u7880
  9034  002CE8                     u7881:
  9035  002CE8  EF77  F016         	goto	l1982
  9036  002CEC                     u7880:
  9037  002CEC                     
  9038                           ; BSR set to: 0
  9039  002CEC  802A               	bsf	___fldiv@b^0,0,c
  9040  002CEE                     l1982:
  9041                           
  9042                           ; BSR set to: 0
  9043  002CEE  90D8               	bcf	status,0,c
  9044  002CF0  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9045  002CF2  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9046  002CF4  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9047  002CF6  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9048  002CF8                     l7793:
  9049                           
  9050                           ; BSR set to: 0
  9051  002CF8  502E               	movf	___fldiv@a^0,w,c
  9052  002CFA  5D60               	subwf	___fldiv@rem& (0+255),w,b
  9053  002CFC  502F               	movf	(___fldiv@a+1)^0,w,c
  9054  002CFE  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9055  002D00  5030               	movf	(___fldiv@a+2)^0,w,c
  9056  002D02  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9057  002D04  5031               	movf	(___fldiv@a+3)^0,w,c
  9058  002D06  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9059  002D08  A0D8               	btfss	status,0,c
  9060  002D0A  EF89  F016         	goto	u7891
  9061  002D0E  EF8B  F016         	goto	u7890
  9062  002D12                     u7891:
  9063  002D12  EF94  F016         	goto	l7799
  9064  002D16                     u7890:
  9065  002D16                     
  9066                           ; BSR set to: 0
  9067  002D16  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9068  002D18                     
  9069                           ; BSR set to: 0
  9070  002D18  502E               	movf	___fldiv@a^0,w,c
  9071  002D1A  5F60               	subwf	___fldiv@rem& (0+255),f,b
  9072  002D1C  502F               	movf	(___fldiv@a+1)^0,w,c
  9073  002D1E  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9074  002D20  5030               	movf	(___fldiv@a+2)^0,w,c
  9075  002D22  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9076  002D24  5031               	movf	(___fldiv@a+3)^0,w,c
  9077  002D26  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9078  002D28                     l7799:
  9079                           
  9080                           ; BSR set to: 0
  9081  002D28  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  9082  002D2A                     l1979:
  9083                           
  9084                           ; BSR set to: 0
  9085  002D2A  0E19               	movlw	25
  9086  002D2C  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  9087  002D2E  EF9B  F016         	goto	u7901
  9088  002D32  EF9D  F016         	goto	u7900
  9089  002D36                     u7901:
  9090  002D36  EF5D  F016         	goto	l7785
  9091  002D3A                     u7900:
  9092  002D3A                     
  9093                           ; BSR set to: 0
  9094  002D3A  5160               	movf	___fldiv@rem& (0+255),w,b
  9095  002D3C  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9096  002D3E  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9097  002D40  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9098  002D42  B4D8               	btfsc	status,2,c
  9099  002D44  EFA6  F016         	goto	u7911
  9100  002D48  EFA8  F016         	goto	u7910
  9101  002D4C                     u7911:
  9102  002D4C  EFC0  F016         	goto	l7811
  9103  002D50                     u7910:
  9104  002D50                     
  9105                           ; BSR set to: 0
  9106  002D50  8167               	bsf	___fldiv@grs& (0+255),0,b
  9107  002D52  EFC0  F016         	goto	l7811
  9108  002D56                     l7805:
  9109                           
  9110                           ; BSR set to: 0
  9111  002D56  90D8               	bcf	status,0,c
  9112  002D58  362A               	rlcf	___fldiv@b^0,f,c
  9113  002D5A  362B               	rlcf	(___fldiv@b+1)^0,f,c
  9114  002D5C  362C               	rlcf	(___fldiv@b+2)^0,f,c
  9115  002D5E  362D               	rlcf	(___fldiv@b+3)^0,f,c
  9116  002D60                     
  9117                           ; BSR set to: 0
  9118  002D60  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9119  002D62  EFB5  F016         	goto	u7921
  9120  002D66  EFB7  F016         	goto	u7920
  9121  002D6A                     u7921:
  9122  002D6A  EFB8  F016         	goto	l1988
  9123  002D6E                     u7920:
  9124  002D6E                     
  9125                           ; BSR set to: 0
  9126  002D6E  802A               	bsf	___fldiv@b^0,0,c
  9127  002D70                     l1988:
  9128                           
  9129                           ; BSR set to: 0
  9130  002D70  90D8               	bcf	status,0,c
  9131  002D72  3767               	rlcf	___fldiv@grs& (0+255),f,b
  9132  002D74  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9133  002D76  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9134  002D78  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9135  002D7A  0765               	decf	___fldiv@new_exp& (0+255),f,b
  9136  002D7C  A0D8               	btfss	status,0,c
  9137  002D7E  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9138  002D80                     l7811:
  9139                           
  9140                           ; BSR set to: 0
  9141  002D80  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  9142  002D82  EFC5  F016         	goto	u7931
  9143  002D86  EFC7  F016         	goto	u7930
  9144  002D8A                     u7931:
  9145  002D8A  EFAB  F016         	goto	l7805
  9146  002D8E                     u7930:
  9147  002D8E                     
  9148                           ; BSR set to: 0
  9149  002D8E  0E00               	movlw	0
  9150  002D90  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9151  002D92                     
  9152                           ; BSR set to: 0
  9153  002D92  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9154  002D94  EFCE  F016         	goto	u7941
  9155  002D98  EFD0  F016         	goto	u7940
  9156  002D9C                     u7941:
  9157  002D9C  EFF4  F016         	goto	l1990
  9158  002DA0                     u7940:
  9159  002DA0                     
  9160                           ; BSR set to: 0
  9161  002DA0  0EFF               	movlw	255
  9162  002DA2  1567               	andwf	___fldiv@grs& (0+255),w,b
  9163  002DA4  6E32               	movwf	??___fldiv^0,c
  9164  002DA6  0EFF               	movlw	255
  9165  002DA8  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9166  002DAA  6E33               	movwf	(??___fldiv+1)^0,c
  9167  002DAC  0EFF               	movlw	255
  9168  002DAE  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9169  002DB0  6E34               	movwf	(??___fldiv+2)^0,c
  9170  002DB2  0E7F               	movlw	127
  9171  002DB4  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9172  002DB6  6E35               	movwf	(??___fldiv+3)^0,c
  9173  002DB8  5032               	movf	??___fldiv^0,w,c
  9174  002DBA  1033               	iorwf	(??___fldiv+1)^0,w,c
  9175  002DBC  1034               	iorwf	(??___fldiv+2)^0,w,c
  9176  002DBE  1035               	iorwf	(??___fldiv+3)^0,w,c
  9177  002DC0  B4D8               	btfsc	status,2,c
  9178  002DC2  EFE5  F016         	goto	u7951
  9179  002DC6  EFE7  F016         	goto	u7950
  9180  002DCA                     u7951:
  9181  002DCA  EFEB  F016         	goto	l1991
  9182  002DCE                     u7950:
  9183  002DCE                     l7819:
  9184                           
  9185                           ; BSR set to: 0
  9186  002DCE  0E01               	movlw	1
  9187  002DD0  6F6C               	movwf	___fldiv@aexp& (0+255),b
  9188  002DD2  EFF4  F016         	goto	l1990
  9189  002DD6                     l1991:
  9190                           
  9191                           ; BSR set to: 0
  9192  002DD6  A02A               	btfss	___fldiv@b^0,0,c
  9193  002DD8  EFF0  F016         	goto	u7961
  9194  002DDC  EFF2  F016         	goto	u7960
  9195  002DE0                     u7961:
  9196  002DE0  EFF4  F016         	goto	l1990
  9197  002DE4                     u7960:
  9198  002DE4  EFE7  F016         	goto	l7819
  9199  002DE8                     l1990:
  9200                           
  9201                           ; BSR set to: 0
  9202  002DE8  516C               	movf	___fldiv@aexp& (0+255),w,b
  9203  002DEA  B4D8               	btfsc	status,2,c
  9204  002DEC  EFFA  F016         	goto	u7971
  9205  002DF0  EFFC  F016         	goto	u7970
  9206  002DF4                     u7971:
  9207  002DF4  EF20  F017         	goto	l7831
  9208  002DF8                     u7970:
  9209  002DF8                     
  9210                           ; BSR set to: 0
  9211  002DF8  0E01               	movlw	1
  9212  002DFA  262A               	addwf	___fldiv@b^0,f,c
  9213  002DFC  0E00               	movlw	0
  9214  002DFE  222B               	addwfc	(___fldiv@b+1)^0,f,c
  9215  002E00  222C               	addwfc	(___fldiv@b+2)^0,f,c
  9216  002E02  222D               	addwfc	(___fldiv@b+3)^0,f,c
  9217  002E04                     
  9218                           ; BSR set to: 0
  9219  002E04  A02D               	btfss	(___fldiv@b+3)^0,0,c
  9220  002E06  EF07  F017         	goto	u7981
  9221  002E0A  EF09  F017         	goto	u7980
  9222  002E0E                     u7981:
  9223  002E0E  EF20  F017         	goto	l7831
  9224  002E12                     u7980:
  9225  002E12                     
  9226                           ; BSR set to: 0
  9227  002E12  C02A  F032         	movff	___fldiv@b,??___fldiv
  9228  002E16  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  9229  002E1A  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  9230  002E1E  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  9231  002E22  3435               	rlcf	(??___fldiv+3)^0,w,c
  9232  002E24  3235               	rrcf	(??___fldiv+3)^0,f,c
  9233  002E26  3234               	rrcf	(??___fldiv+2)^0,f,c
  9234  002E28  3233               	rrcf	(??___fldiv+1)^0,f,c
  9235  002E2A  3232               	rrcf	??___fldiv^0,f,c
  9236  002E2C  C032  F02A         	movff	??___fldiv,___fldiv@b
  9237  002E30  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  9238  002E34  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  9239  002E38  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  9240  002E3C                     
  9241                           ; BSR set to: 0
  9242  002E3C  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  9243  002E3E  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9244  002E40                     l7831:
  9245                           
  9246                           ; BSR set to: 0
  9247  002E40  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9248  002E42  EF2B  F017         	goto	u7991
  9249  002E46  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9250  002E48  E108               	bnz	u7990
  9251  002E4A  2965               	incf	___fldiv@new_exp& (0+255),w,b
  9252  002E4C  A0D8               	btfss	status,0,c
  9253  002E4E  EF2B  F017         	goto	u7991
  9254  002E52  EF2D  F017         	goto	u7990
  9255  002E56                     u7991:
  9256  002E56  EF38  F017         	goto	l7835
  9257  002E5A                     u7990:
  9258  002E5A                     
  9259                           ; BSR set to: 0
  9260  002E5A  0E00               	movlw	0
  9261  002E5C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9262  002E5E  6965               	setf	___fldiv@new_exp& (0+255),b
  9263  002E60  0E00               	movlw	0
  9264  002E62  6E2A               	movwf	___fldiv@b^0,c
  9265  002E64  0E00               	movlw	0
  9266  002E66  6E2B               	movwf	(___fldiv@b+1)^0,c
  9267  002E68  0E00               	movlw	0
  9268  002E6A  6E2C               	movwf	(___fldiv@b+2)^0,c
  9269  002E6C  0E00               	movlw	0
  9270  002E6E  6E2D               	movwf	(___fldiv@b+3)^0,c
  9271  002E70                     l7835:
  9272                           
  9273                           ; BSR set to: 0
  9274  002E70  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9275  002E72  EF45  F017         	goto	u8000
  9276  002E76  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9277  002E78  E106               	bnz	u8001
  9278  002E7A  0565               	decf	___fldiv@new_exp& (0+255),w,b
  9279  002E7C  B0D8               	btfsc	status,0,c
  9280  002E7E  EF43  F017         	goto	u8001
  9281  002E82  EF45  F017         	goto	u8000
  9282  002E86                     u8001:
  9283  002E86  EF53  F017         	goto	l7839
  9284  002E8A                     u8000:
  9285  002E8A                     
  9286                           ; BSR set to: 0
  9287  002E8A  0E00               	movlw	0
  9288  002E8C  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9289  002E8E  0E00               	movlw	0
  9290  002E90  6F65               	movwf	___fldiv@new_exp& (0+255),b
  9291  002E92  0E00               	movlw	0
  9292  002E94  6E2A               	movwf	___fldiv@b^0,c
  9293  002E96  0E00               	movlw	0
  9294  002E98  6E2B               	movwf	(___fldiv@b+1)^0,c
  9295  002E9A  0E00               	movlw	0
  9296  002E9C  6E2C               	movwf	(___fldiv@b+2)^0,c
  9297  002E9E  0E00               	movlw	0
  9298  002EA0  6E2D               	movwf	(___fldiv@b+3)^0,c
  9299  002EA2  0E00               	movlw	0
  9300  002EA4  6F64               	movwf	___fldiv@sign& (0+255),b
  9301  002EA6                     l7839:
  9302                           
  9303                           ; BSR set to: 0
  9304  002EA6  C065  F06B         	movff	___fldiv@new_exp,___fldiv@bexp
  9305  002EAA                     
  9306                           ; BSR set to: 0
  9307  002EAA  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  9308  002EAC  EF5A  F017         	goto	u8011
  9309  002EB0  EF5C  F017         	goto	u8010
  9310  002EB4                     u8011:
  9311  002EB4  EF5F  F017         	goto	l7845
  9312  002EB8                     u8010:
  9313  002EB8                     
  9314                           ; BSR set to: 0
  9315  002EB8  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  9316  002EBA  EF60  F017         	goto	l7847
  9317  002EBE                     l7845:
  9318                           
  9319                           ; BSR set to: 0
  9320  002EBE  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  9321  002EC0                     l7847:
  9322                           
  9323                           ; BSR set to: 0
  9324  002EC0  90D8               	bcf	status,0,c
  9325  002EC2  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  9326  002EC4  6E2D               	movwf	(___fldiv@b+3)^0,c
  9327  002EC6  EF16  F016         	goto	l7761
  9328  002ECA                     l1977:
  9329                           
  9330                           ; BSR set to: 0
  9331  002ECA  0012               	return		;funcret
  9332  002ECC                     __end_of___fldiv:
  9333                           	callstack 0
  9334                           
  9335 ;; *************** function _PWM6_LoadDutyValue *****************
  9336 ;; Defined at:
  9337 ;;		line 74 in file "mcc_generated_files/pwm6.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;		None
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      void 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9355 ;;Total ram usage:        4 bytes
  9356 ;; Hardware stack levels used: 1
  9357 ;; Hardware stack levels required when called: 8
  9358 ;; This function calls:
  9359 ;;		Nothing
  9360 ;; This function is called by:
  9361 ;;		_setSteering
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text33
  9366  00587A                     __ptext33:
  9367                           	callstack 0
  9368  00587A                     _PWM6_LoadDutyValue:
  9369                           	callstack 19
  9370  00587A                     
  9371                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9372  00587A  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9373  00587E  C015  F017         	movff	PWM6_LoadDutyValue@dutyValue+1,??_PWM6_LoadDutyValue+1
  9374  005882  90D8               	bcf	status,0,c
  9375  005884  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9376  005886  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9377  005888  90D8               	bcf	status,0,c
  9378  00588A  3217               	rrcf	(??_PWM6_LoadDutyValue+1)^0,f,c
  9379  00588C  3216               	rrcf	??_PWM6_LoadDutyValue^0,f,c
  9380  00588E  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9381  005890  6E69               	movwf	105,c	;volatile
  9382                           
  9383                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
  9384  005892  C014  F016         	movff	PWM6_LoadDutyValue@dutyValue,??_PWM6_LoadDutyValue
  9385  005896  0E03               	movlw	3
  9386  005898  1616               	andwf	??_PWM6_LoadDutyValue^0,f,c
  9387  00589A  0E06               	movlw	6
  9388  00589C  6E17               	movwf	(??_PWM6_LoadDutyValue+1)^0,c
  9389  00589E                     u9515:
  9390  00589E  90D8               	bcf	status,0,c
  9391  0058A0  3616               	rlcf	??_PWM6_LoadDutyValue^0,f,c
  9392  0058A2  2E17               	decfsz	(??_PWM6_LoadDutyValue+1)^0,f,c
  9393  0058A4  EF4F  F02C         	goto	u9515
  9394  0058A8  5016               	movf	??_PWM6_LoadDutyValue^0,w,c
  9395  0058AA  6E68               	movwf	104,c	;volatile
  9396  0058AC  0012               	return		;funcret
  9397  0058AE                     __end_of_PWM6_LoadDutyValue:
  9398                           	callstack 0
  9399                           
  9400 ;; *************** function _PWM5_LoadDutyValue *****************
  9401 ;; Defined at:
  9402 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  dutyValue       2   19[COMRAM] unsigned short 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9420 ;;Total ram usage:        4 bytes
  9421 ;; Hardware stack levels used: 1
  9422 ;; Hardware stack levels required when called: 8
  9423 ;; This function calls:
  9424 ;;		Nothing
  9425 ;; This function is called by:
  9426 ;;		_setSteering
  9427 ;; This function uses a non-reentrant model
  9428 ;;
  9429                           
  9430                           	psect	text34
  9431  0058AE                     __ptext34:
  9432                           	callstack 0
  9433  0058AE                     _PWM5_LoadDutyValue:
  9434                           	callstack 19
  9435  0058AE                     
  9436                           ;mcc_generated_files/pwm5.c: 74:  void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm5.c: 75:  {;mcc_generated_files/pwm5.c: 77:      PWM5DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9437  0058AE  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9438  0058B2  C015  F017         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  9439  0058B6  90D8               	bcf	status,0,c
  9440  0058B8  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9441  0058BA  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9442  0058BC  90D8               	bcf	status,0,c
  9443  0058BE  3217               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  9444  0058C0  3216               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  9445  0058C2  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9446  0058C4  6E6D               	movwf	109,c	;volatile
  9447                           
  9448                           ;mcc_generated_files/pwm5.c: 80:      PWM5DCL = (dutyValue & 0x0003)<<6;
  9449  0058C6  C014  F016         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  9450  0058CA  0E03               	movlw	3
  9451  0058CC  1616               	andwf	??_PWM5_LoadDutyValue^0,f,c
  9452  0058CE  0E06               	movlw	6
  9453  0058D0  6E17               	movwf	(??_PWM5_LoadDutyValue+1)^0,c
  9454  0058D2                     u9505:
  9455  0058D2  90D8               	bcf	status,0,c
  9456  0058D4  3616               	rlcf	??_PWM5_LoadDutyValue^0,f,c
  9457  0058D6  2E17               	decfsz	(??_PWM5_LoadDutyValue+1)^0,f,c
  9458  0058D8  EF69  F02C         	goto	u9505
  9459  0058DC  5016               	movf	??_PWM5_LoadDutyValue^0,w,c
  9460  0058DE  6E6C               	movwf	108,c	;volatile
  9461  0058E0  0012               	return		;funcret
  9462  0058E2                     __end_of_PWM5_LoadDutyValue:
  9463                           	callstack 0
  9464                           
  9465 ;; *************** function _getBatteryVoltage *****************
  9466 ;; Defined at:
  9467 ;;		line 78 in file "main.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;		None
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1    wreg      void 
  9474 ;; Registers used:
  9475 ;;		wreg, status,2, status,0, cstack
  9476 ;; Tracked objects:
  9477 ;;		On entry : 0/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used: 1
  9487 ;; Hardware stack levels required when called: 9
  9488 ;; This function calls:
  9489 ;;		_ADCC_GetSingleConversion
  9490 ;; This function is called by:
  9491 ;;		_loop
  9492 ;;		_checkBatt
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text35
  9497  005D4C                     __ptext35:
  9498                           	callstack 0
  9499  005D4C                     _getBatteryVoltage:
  9500                           	callstack 20
  9501  005D4C                     
  9502                           ;main.c: 79:     BatteryVolt = ADCC_GetSingleConversion(aiBatt);
  9503  005D4C  0E22               	movlw	34
  9504  005D4E  ECDA  F02C         	call	_ADCC_GetSingleConversion
  9505  005D52  C014  F0E5         	movff	?_ADCC_GetSingleConversion,_BatteryVolt
  9506  005D56  C015  F0E6         	movff	?_ADCC_GetSingleConversion+1,_BatteryVolt+1
  9507  005D5A  0012               	return		;funcret
  9508  005D5C                     __end_of_getBatteryVoltage:
  9509                           	callstack 0
  9510                           
  9511 ;; *************** function _ADCC_GetSingleConversion *****************
  9512 ;; Defined at:
  9513 ;;		line 137 in file "mcc_generated_files/adcc.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  channel         1    wreg     enum E16058
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;  channel         1   23[COMRAM] enum E16058
  9518 ;; Return value:  Size  Location     Type
  9519 ;;                  2   19[COMRAM] unsigned short 
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0
  9522 ;; Tracked objects:
  9523 ;;		On entry : 0/0
  9524 ;;		On exit  : 0/0
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9530 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9531 ;;Total ram usage:        5 bytes
  9532 ;; Hardware stack levels used: 1
  9533 ;; Hardware stack levels required when called: 8
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_getBatteryVoltage
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           	psect	text36
  9542  0059B4                     __ptext36:
  9543                           	callstack 0
  9544  0059B4                     _ADCC_GetSingleConversion:
  9545                           	callstack 20
  9546                           
  9547                           ;incstack = 0
  9548                           ;ADCC_GetSingleConversion@channel stored from wreg
  9549  0059B4  6E18               	movwf	ADCC_GetSingleConversion@channel^0,c
  9550  0059B6                     
  9551                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  9552  0059B6  0060  F063  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  9553  0059BC                     
  9554                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  9555  0059BC  013E               	movlb	62	; () banked
  9556  0059BE  8FF8               	bsf	248,7,b	;volatile
  9557  0059C0                     
  9558                           ; BSR set to: 62
  9559                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  9560  0059C0  9DF8               	bcf	248,6,b	;volatile
  9561  0059C2                     
  9562                           ; BSR set to: 62
  9563                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  9564  0059C2  81F8               	bsf	248,0,b	;volatile
  9565  0059C4                     l1054:
  9566                           
  9567                           ; BSR set to: 62
  9568                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  9569  0059C4  B1F8               	btfsc	248,0,b	;volatile
  9570  0059C6  EFE7  F02C         	goto	u6191
  9571  0059CA  EFE9  F02C         	goto	u6190
  9572  0059CE                     u6191:
  9573  0059CE  EFE2  F02C         	goto	l1054
  9574  0059D2                     u6190:
  9575  0059D2                     
  9576                           ; BSR set to: 62
  9577                           ;mcc_generated_files/adcc.c: 159:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  9578  0059D2  51F0               	movf	240,w,b	;volatile
  9579  0059D4  6E17               	movwf	(??_ADCC_GetSingleConversion+1)^0,c
  9580  0059D6  6A16               	clrf	??_ADCC_GetSingleConversion^0,c
  9581  0059D8  51EF               	movf	239,w,b	;volatile
  9582  0059DA  2416               	addwf	??_ADCC_GetSingleConversion^0,w,c
  9583  0059DC  6E14               	movwf	?_ADCC_GetSingleConversion^0,c
  9584  0059DE  0E00               	movlw	0
  9585  0059E0  2017               	addwfc	(??_ADCC_GetSingleConversion+1)^0,w,c
  9586  0059E2  6E15               	movwf	(?_ADCC_GetSingleConversion+1)^0,c
  9587  0059E4                     
  9588                           ; BSR set to: 62
  9589  0059E4  0012               	return		;funcret
  9590  0059E6                     __end_of_ADCC_GetSingleConversion:
  9591                           	callstack 0
  9592                           
  9593 ;; *************** function ___flge *****************
  9594 ;; Defined at:
  9595 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;  ff1             4   13[BANK0 ] unsigned short 
  9598 ;;  ff2             4   17[BANK0 ] unsigned short 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;		None               void
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9610 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;Total ram usage:       12 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; Hardware stack levels required when called: 8
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_loop
  9621 ;;		_checkBatt
  9622 ;;		_startAccell
  9623 ;;		_efgtoa
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           	psect	text37
  9628  004764                     __ptext37:
  9629                           	callstack 0
  9630  004764                     ___flge:
  9631                           	callstack 16
  9632  004764  0E00               	movlw	0
  9633  004766  0100               	movlb	0	; () banked
  9634  004768  156D               	andwf	___flge@ff1& (0+255),w,b
  9635  00476A  6E36               	movwf	??___flge^0,c
  9636  00476C  0E00               	movlw	0
  9637  00476E  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  9638  004770  6E37               	movwf	(??___flge+1)^0,c
  9639  004772  0E80               	movlw	128
  9640  004774  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  9641  004776  6E38               	movwf	(??___flge+2)^0,c
  9642  004778  0E7F               	movlw	127
  9643  00477A  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  9644  00477C  6E39               	movwf	(??___flge+3)^0,c
  9645  00477E  5036               	movf	??___flge^0,w,c
  9646  004780  1037               	iorwf	(??___flge+1)^0,w,c
  9647  004782  1038               	iorwf	(??___flge+2)^0,w,c
  9648  004784  1039               	iorwf	(??___flge+3)^0,w,c
  9649  004786  A4D8               	btfss	status,2,c
  9650  004788  EFC8  F023         	goto	u8361
  9651  00478C  EFCA  F023         	goto	u8360
  9652  004790                     u8361:
  9653  004790  EFD2  F023         	goto	l8091
  9654  004794                     u8360:
  9655  004794                     
  9656                           ; BSR set to: 0
  9657  004794  0E00               	movlw	0
  9658  004796  6F6D               	movwf	___flge@ff1& (0+255),b
  9659  004798  0E00               	movlw	0
  9660  00479A  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  9661  00479C  0E00               	movlw	0
  9662  00479E  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  9663  0047A0  0E00               	movlw	0
  9664  0047A2  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  9665  0047A4                     l8091:
  9666                           
  9667                           ; BSR set to: 0
  9668  0047A4  0E00               	movlw	0
  9669  0047A6  1571               	andwf	___flge@ff2& (0+255),w,b
  9670  0047A8  6E36               	movwf	??___flge^0,c
  9671  0047AA  0E00               	movlw	0
  9672  0047AC  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  9673  0047AE  6E37               	movwf	(??___flge+1)^0,c
  9674  0047B0  0E80               	movlw	128
  9675  0047B2  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  9676  0047B4  6E38               	movwf	(??___flge+2)^0,c
  9677  0047B6  0E7F               	movlw	127
  9678  0047B8  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  9679  0047BA  6E39               	movwf	(??___flge+3)^0,c
  9680  0047BC  5036               	movf	??___flge^0,w,c
  9681  0047BE  1037               	iorwf	(??___flge+1)^0,w,c
  9682  0047C0  1038               	iorwf	(??___flge+2)^0,w,c
  9683  0047C2  1039               	iorwf	(??___flge+3)^0,w,c
  9684  0047C4  A4D8               	btfss	status,2,c
  9685  0047C6  EFE7  F023         	goto	u8371
  9686  0047CA  EFE9  F023         	goto	u8370
  9687  0047CE                     u8371:
  9688  0047CE  EFF1  F023         	goto	l8095
  9689  0047D2                     u8370:
  9690  0047D2                     
  9691                           ; BSR set to: 0
  9692  0047D2  0E00               	movlw	0
  9693  0047D4  6F71               	movwf	___flge@ff2& (0+255),b
  9694  0047D6  0E00               	movlw	0
  9695  0047D8  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  9696  0047DA  0E00               	movlw	0
  9697  0047DC  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  9698  0047DE  0E00               	movlw	0
  9699  0047E0  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  9700  0047E2                     l8095:
  9701                           
  9702                           ; BSR set to: 0
  9703  0047E2  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  9704  0047E4  EFF6  F023         	goto	u8381
  9705  0047E8  EFF8  F023         	goto	u8380
  9706  0047EC                     u8381:
  9707  0047EC  EF01  F024         	goto	l8099
  9708  0047F0                     u8380:
  9709  0047F0                     
  9710                           ; BSR set to: 0
  9711  0047F0  6D6D               	negf	___flge@ff1& (0+255),b
  9712  0047F2  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  9713  0047F4  B0D8               	btfsc	status,0,c
  9714  0047F6  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  9715  0047F8  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  9716  0047FA  B0D8               	btfsc	status,0,c
  9717  0047FC  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  9718  0047FE  0E80               	movlw	128
  9719  004800  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  9720  004802                     l8099:
  9721                           
  9722                           ; BSR set to: 0
  9723  004802  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  9724  004804  EF06  F024         	goto	u8391
  9725  004808  EF08  F024         	goto	u8390
  9726  00480C                     u8391:
  9727  00480C  EF11  F024         	goto	l1660
  9728  004810                     u8390:
  9729  004810                     
  9730                           ; BSR set to: 0
  9731  004810  6D71               	negf	___flge@ff2& (0+255),b
  9732  004812  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  9733  004814  B0D8               	btfsc	status,0,c
  9734  004816  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  9735  004818  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  9736  00481A  B0D8               	btfsc	status,0,c
  9737  00481C  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  9738  00481E  0E80               	movlw	128
  9739  004820  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  9740  004822                     l1660:
  9741                           
  9742                           ; BSR set to: 0
  9743  004822  0E00               	movlw	0
  9744  004824  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  9745  004826  0E00               	movlw	0
  9746  004828  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9747  00482A  0E00               	movlw	0
  9748  00482C  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9749  00482E  0E80               	movlw	128
  9750  004830  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9751  004832  0E00               	movlw	0
  9752  004834  1B71               	xorwf	___flge@ff2& (0+255),f,b
  9753  004836  0E00               	movlw	0
  9754  004838  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9755  00483A  0E00               	movlw	0
  9756  00483C  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9757  00483E  0E80               	movlw	128
  9758  004840  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9759  004842  5171               	movf	___flge@ff2& (0+255),w,b
  9760  004844  5D6D               	subwf	___flge@ff1& (0+255),w,b
  9761  004846  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  9762  004848  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9763  00484A  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  9764  00484C  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9765  00484E  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  9766  004850  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9767  004852  B0D8               	btfsc	status,0,c
  9768  004854  EF2E  F024         	goto	u8401
  9769  004858  EF30  F024         	goto	u8400
  9770  00485C                     u8401:
  9771  00485C  EF33  F024         	goto	l8105
  9772  004860                     u8400:
  9773  004860                     
  9774                           ; BSR set to: 0
  9775  004860  90D8               	bcf	status,0,c
  9776  004862  EF34  F024         	goto	l1665
  9777  004866                     l8105:
  9778                           
  9779                           ; BSR set to: 0
  9780  004866  80D8               	bsf	status,0,c
  9781  004868                     l1665:
  9782                           
  9783                           ; BSR set to: 0
  9784  004868  0012               	return		;funcret
  9785  00486A                     __end_of___flge:
  9786                           	callstack 0
  9787                           
  9788 ;; *************** function _calcSpeed *****************
  9789 ;; Defined at:
  9790 ;;		line 281 in file "main.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;		None
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;  speed           2   39[BANK0 ] short 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  1    wreg      void 
  9797 ;; Registers used:
  9798 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9807 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9808 ;;Total ram usage:        6 bytes
  9809 ;; Hardware stack levels used: 1
  9810 ;; Hardware stack levels required when called: 9
  9811 ;; This function calls:
  9812 ;;		___fladd
  9813 ;;		___flmul
  9814 ;;		___fltol
  9815 ;;		___xxtofl
  9816 ;; This function is called by:
  9817 ;;		_loop
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text38
  9822  0035E4                     __ptext38:
  9823                           	callstack 0
  9824  0035E4                     _calcSpeed:
  9825                           	callstack 20
  9826  0035E4                     
  9827                           ;main.c: 282:     int16_t speed = 0;
  9828  0035E4  0E00               	movlw	0
  9829  0035E6  0100               	movlb	0	; () banked
  9830  0035E8  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9831  0035EA  0E00               	movlw	0
  9832  0035EC  6F87               	movwf	calcSpeed@speed& (0+255),b
  9833                           
  9834                           ;main.c: 284:     switch (driveMode) {
  9835  0035EE  EFA8  F01B         	goto	l9005
  9836  0035F2                     l8969:
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;main.c: 286:             if (distFront > (30)) {
  9840  0035F2  504B               	movf	(_distFront+1)^0,w,c	;volatile
  9841  0035F4  E109               	bnz	u9930
  9842  0035F6  0E1F               	movlw	31
  9843  0035F8  5C4A               	subwf	_distFront^0,w,c	;volatile
  9844  0035FA  A0D8               	btfss	status,0,c
  9845  0035FC  EF02  F01B         	goto	u9931
  9846  003600  EF04  F01B         	goto	u9930
  9847  003604                     u9931:
  9848  003604  EF06  F01B         	goto	l8973
  9849  003608                     u9930:
  9850  003608                     
  9851                           ; BSR set to: 0
  9852                           ;main.c: 287:                 driveMode = Straight;
  9853  003608  0E01               	movlw	1
  9854  00360A  6E4C               	movwf	_driveMode^0,c
  9855  00360C                     l8973:
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;main.c: 289:             if (setSpeed > (100)) {
  9859  00360C  BFEC               	btfsc	(_setSpeed+1)& (0+255),7,b
  9860  00360E  EF12  F01B         	goto	u9941
  9861  003612  51EC               	movf	(_setSpeed+1)& (0+255),w,b
  9862  003614  E109               	bnz	u9940
  9863  003616  0E65               	movlw	101
  9864  003618  5DEB               	subwf	_setSpeed& (0+255),w,b
  9865  00361A  A0D8               	btfss	status,0,c
  9866  00361C  EF12  F01B         	goto	u9941
  9867  003620  EF14  F01B         	goto	u9940
  9868  003624                     u9941:
  9869  003624  EF2F  F01B         	goto	l8983
  9870  003628                     u9940:
  9871  003628                     
  9872                           ; BSR set to: 0
  9873                           ;main.c: 290:                     speed = setSpeed;
  9874  003628  C0EB  F087         	movff	_setSpeed,calcSpeed@speed
  9875  00362C  C0EC  F088         	movff	_setSpeed+1,calcSpeed@speed+1
  9876  003630                     
  9877                           ; BSR set to: 0
  9878                           ;main.c: 291:                 if (distFront < (15)) {
  9879  003630  504B               	movf	(_distFront+1)^0,w,c	;volatile
  9880  003632  E107               	bnz	u9951
  9881  003634  0E0F               	movlw	15
  9882  003636  5C4A               	subwf	_distFront^0,w,c	;volatile
  9883  003638  B0D8               	btfsc	status,0,c
  9884  00363A  EF21  F01B         	goto	u9951
  9885  00363E  EF23  F01B         	goto	u9950
  9886  003642                     u9951:
  9887  003642  EF29  F01B         	goto	l8981
  9888  003646                     u9950:
  9889  003646                     
  9890                           ; BSR set to: 0
  9891                           ;main.c: 292:                     speed -= 4;
  9892  003646  0EFC               	movlw	252
  9893  003648  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9894  00364A  0EFF               	movlw	255
  9895  00364C  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9896                           
  9897                           ;main.c: 293:                 } else {
  9898  00364E  EFCD  F01B         	goto	l9007
  9899  003652                     l8981:
  9900                           
  9901                           ; BSR set to: 0
  9902                           ;main.c: 294:                     speed -= 2;
  9903  003652  0EFE               	movlw	254
  9904  003654  2787               	addwf	calcSpeed@speed& (0+255),f,b
  9905  003656  0EFF               	movlw	255
  9906  003658  2388               	addwfc	(calcSpeed@speed+1)& (0+255),f,b
  9907  00365A  EFCD  F01B         	goto	l9007
  9908  00365E                     l8983:
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;main.c: 297:                 speed = (100);
  9912  00365E  0E00               	movlw	0
  9913  003660  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
  9914  003662  0E64               	movlw	100
  9915  003664  6F87               	movwf	calcSpeed@speed& (0+255),b
  9916  003666  EFCD  F01B         	goto	l9007
  9917  00366A                     l8985:
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;main.c: 301:             if (distFront < (30)) {
  9921  00366A  504B               	movf	(_distFront+1)^0,w,c	;volatile
  9922  00366C  E107               	bnz	u9961
  9923  00366E  0E1E               	movlw	30
  9924  003670  5C4A               	subwf	_distFront^0,w,c	;volatile
  9925  003672  B0D8               	btfsc	status,0,c
  9926  003674  EF3E  F01B         	goto	u9961
  9927  003678  EF40  F01B         	goto	u9960
  9928  00367C                     u9961:
  9929  00367C  EF42  F01B         	goto	l8989
  9930  003680                     u9960:
  9931  003680                     
  9932                           ; BSR set to: 0
  9933                           ;main.c: 302:                 driveMode = Brake;
  9934  003680  0E02               	movlw	2
  9935  003682  6E4C               	movwf	_driveMode^0,c
  9936  003684                     l8989:
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;main.c: 305:             if (distFront >= (150)) {
  9940  003684  504B               	movf	(_distFront+1)^0,w,c	;volatile
  9941  003686  E109               	bnz	u9970
  9942  003688  0E96               	movlw	150
  9943  00368A  5C4A               	subwf	_distFront^0,w,c	;volatile
  9944  00368C  A0D8               	btfss	status,0,c
  9945  00368E  EF4B  F01B         	goto	u9971
  9946  003692  EF4D  F01B         	goto	u9970
  9947  003696                     u9971:
  9948  003696  EF96  F01B         	goto	l8993
  9949  00369A                     u9970:
  9950  00369A                     
  9951                           ; BSR set to: 0
  9952                           ;main.c: 306:                 speed = (int16_t) ((0.7) * (distFront - (150)) + (275));
  9953  00369A  0E00               	movlw	0
  9954  00369C  6F71               	movwf	___fladd@a& (0+255),b
  9955  00369E  0E80               	movlw	128
  9956  0036A0  6F72               	movwf	(___fladd@a+1)& (0+255),b
  9957  0036A2  0E89               	movlw	137
  9958  0036A4  6F73               	movwf	(___fladd@a+2)& (0+255),b
  9959  0036A6  0E43               	movlw	67
  9960  0036A8  6F74               	movwf	(___fladd@a+3)& (0+255),b
  9961  0036AA  0E33               	movlw	51
  9962  0036AC  6E2E               	movwf	___flmul@a^0,c
  9963  0036AE  0E33               	movlw	51
  9964  0036B0  6E2F               	movwf	(___flmul@a+1)^0,c
  9965  0036B2  0E33               	movlw	51
  9966  0036B4  6E30               	movwf	(___flmul@a+2)^0,c
  9967  0036B6  0E3F               	movlw	63
  9968  0036B8  6E31               	movwf	(___flmul@a+3)^0,c
  9969  0036BA  0E6A               	movlw	106
  9970  0036BC  6F83               	movwf	??_calcSpeed& (0+255),b
  9971  0036BE  0EFF               	movlw	255
  9972  0036C0  6F84               	movwf	(??_calcSpeed+1)& (0+255),b
  9973  0036C2  C04A  F085         	movff	_distFront,??_calcSpeed+2	;volatile
  9974  0036C6  C04B  F086         	movff	_distFront+1,??_calcSpeed+3	;volatile
  9975  0036CA  5183               	movf	??_calcSpeed& (0+255),w,b
  9976  0036CC  2785               	addwf	(??_calcSpeed+2)& (0+255),f,b
  9977  0036CE  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
  9978  0036D0  2386               	addwfc	(??_calcSpeed+3)& (0+255),f,b
  9979  0036D2  C085  F01C         	movff	??_calcSpeed+2,___xxtofl@val
  9980  0036D6  C086  F01D         	movff	??_calcSpeed+3,___xxtofl@val+1
  9981  0036DA  6A1E               	clrf	(___xxtofl@val+2)^0,c
  9982  0036DC  6A1F               	clrf	(___xxtofl@val+3)^0,c
  9983  0036DE  0E00               	movlw	0
  9984  0036E0  ECD3  F01D         	call	___xxtofl
  9985  0036E4  C01C  F02A         	movff	?___xxtofl,___flmul@b
  9986  0036E8  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
  9987  0036EC  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
  9988  0036F0  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
  9989  0036F4  EC70  F013         	call	___flmul	;wreg free
  9990  0036F8  C02A  F06D         	movff	?___flmul,___fladd@b
  9991  0036FC  C02B  F06E         	movff	?___flmul+1,___fladd@b+1
  9992  003700  C02C  F06F         	movff	?___flmul+2,___fladd@b+2
  9993  003704  C02D  F070         	movff	?___flmul+3,___fladd@b+3
  9994  003708  EC0F  F011         	call	___fladd	;wreg free
  9995  00370C  C06D  F079         	movff	?___fladd,___fltol@f1
  9996  003710  C06E  F07A         	movff	?___fladd+1,___fltol@f1+1
  9997  003714  C06F  F07B         	movff	?___fladd+2,___fltol@f1+2
  9998  003718  C070  F07C         	movff	?___fladd+3,___fltol@f1+3
  9999  00371C  ECAB  F022         	call	___fltol	;wreg free
 10000  003720  C079  F087         	movff	?___fltol,calcSpeed@speed
 10001  003724  C07A  F088         	movff	?___fltol+1,calcSpeed@speed+1
 10002                           
 10003                           ;main.c: 307:             } else {
 10004  003728  EFCD  F01B         	goto	l9007
 10005  00372C                     l8993:
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;main.c: 308:                 speed = (275);
 10009  00372C  0E01               	movlw	1
 10010  00372E  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10011  003730  0E13               	movlw	19
 10012  003732  6F87               	movwf	calcSpeed@speed& (0+255),b
 10013  003734  EFCD  F01B         	goto	l9007
 10014  003738                     l8995:
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;main.c: 313:             speed = (-125);
 10018  003738  0EFF               	movlw	255
 10019  00373A  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10020  00373C  0E83               	movlw	131
 10021  00373E  6F87               	movwf	calcSpeed@speed& (0+255),b
 10022                           
 10023                           ;main.c: 314:             break;
 10024  003740  EFCD  F01B         	goto	l9007
 10025  003744                     l8999:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;main.c: 319:             speed = (200);
 10029  003744  0E00               	movlw	0
 10030  003746  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10031  003748  0EC8               	movlw	200
 10032  00374A  6F87               	movwf	calcSpeed@speed& (0+255),b
 10033                           
 10034                           ;main.c: 320:             break;
 10035  00374C  EFCD  F01B         	goto	l9007
 10036  003750                     l9005:
 10037                           
 10038                           ; BSR set to: 0
 10039  003750  504C               	movf	_driveMode^0,w,c
 10040  003752  6F83               	movwf	??_calcSpeed& (0+255),b
 10041  003754  6B84               	clrf	(??_calcSpeed+1)& (0+255),b
 10042                           
 10043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10044                           ; Switch size 1, requested type "simple"
 10045                           ; Number of cases is 1, Range of values is 0 to 0
 10046                           ; switch strategies available:
 10047                           ; Name         Instructions Cycles
 10048                           ; simple_byte            4     3 (average)
 10049                           ;	Chosen strategy is simple_byte
 10050  003756  5184               	movf	(??_calcSpeed+1)& (0+255),w,b
 10051  003758  0A00               	xorlw	0	; case 0
 10052  00375A  B4D8               	btfsc	status,2,c
 10053  00375C  EFB2  F01B         	goto	l9273
 10054  003760  EFCD  F01B         	goto	l9007
 10055  003764                     l9273:
 10056                           
 10057                           ; BSR set to: 0
 10058                           ; Switch size 1, requested type "simple"
 10059                           ; Number of cases is 6, Range of values is 1 to 6
 10060                           ; switch strategies available:
 10061                           ; Name         Instructions Cycles
 10062                           ; simple_byte           19    10 (average)
 10063                           ;	Chosen strategy is simple_byte
 10064  003764  5183               	movf	??_calcSpeed& (0+255),w,b
 10065  003766  0A01               	xorlw	1	; case 1
 10066  003768  B4D8               	btfsc	status,2,c
 10067  00376A  EF35  F01B         	goto	l8985
 10068  00376E  0A03               	xorlw	3	; case 2
 10069  003770  B4D8               	btfsc	status,2,c
 10070  003772  EFF9  F01A         	goto	l8969
 10071  003776  0A01               	xorlw	1	; case 3
 10072  003778  B4D8               	btfsc	status,2,c
 10073  00377A  EF9C  F01B         	goto	l8995
 10074  00377E  0A07               	xorlw	7	; case 4
 10075  003780  B4D8               	btfsc	status,2,c
 10076  003782  EF9C  F01B         	goto	l8995
 10077  003786  0A01               	xorlw	1	; case 5
 10078  003788  B4D8               	btfsc	status,2,c
 10079  00378A  EFA2  F01B         	goto	l8999
 10080  00378E  0A03               	xorlw	3	; case 6
 10081  003790  B4D8               	btfsc	status,2,c
 10082  003792  EFA2  F01B         	goto	l8999
 10083  003796  EFCD  F01B         	goto	l9007
 10084  00379A                     l9007:
 10085                           
 10086                           ;main.c: 326:     if (speed > (400)) {
 10087  00379A  0100               	movlb	0	; () banked
 10088  00379C  BF88               	btfsc	(calcSpeed@speed+1)& (0+255),7,b
 10089  00379E  EFDA  F01B         	goto	u9981
 10090  0037A2  0E91               	movlw	145
 10091  0037A4  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10092  0037A6  0E01               	movlw	1
 10093  0037A8  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10094  0037AA  A0D8               	btfss	status,0,c
 10095  0037AC  EFDA  F01B         	goto	u9981
 10096  0037B0  EFDC  F01B         	goto	u9980
 10097  0037B4                     u9981:
 10098  0037B4  EFE0  F01B         	goto	l9011
 10099  0037B8                     u9980:
 10100  0037B8                     
 10101                           ; BSR set to: 0
 10102                           ;main.c: 327:         speed = (400);
 10103  0037B8  0E01               	movlw	1
 10104  0037BA  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10105  0037BC  0E90               	movlw	144
 10106  0037BE  6F87               	movwf	calcSpeed@speed& (0+255),b
 10107  0037C0                     l9011:
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;main.c: 329:     if (speed < (-250)) {
 10111  0037C0  AF88               	btfss	(calcSpeed@speed+1)& (0+255),7,b
 10112  0037C2  EFEC  F01B         	goto	u9991
 10113  0037C6  0E06               	movlw	6
 10114  0037C8  5D87               	subwf	calcSpeed@speed& (0+255),w,b
 10115  0037CA  0EFF               	movlw	255
 10116  0037CC  5988               	subwfb	(calcSpeed@speed+1)& (0+255),w,b
 10117  0037CE  B0D8               	btfsc	status,0,c
 10118  0037D0  EFEC  F01B         	goto	u9991
 10119  0037D4  EFEE  F01B         	goto	u9990
 10120  0037D8                     u9991:
 10121  0037D8  EFF2  F01B         	goto	l9015
 10122  0037DC                     u9990:
 10123  0037DC                     
 10124                           ; BSR set to: 0
 10125                           ;main.c: 330:         speed = (-250);
 10126  0037DC  0EFF               	movlw	255
 10127  0037DE  6F88               	movwf	(calcSpeed@speed+1)& (0+255),b
 10128  0037E0  0E06               	movlw	6
 10129  0037E2  6F87               	movwf	calcSpeed@speed& (0+255),b
 10130  0037E4                     l9015:
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;main.c: 332:     setSpeed = speed;
 10134  0037E4  C087  F0EB         	movff	calcSpeed@speed,_setSpeed
 10135  0037E8  C088  F0EC         	movff	calcSpeed@speed+1,_setSpeed+1
 10136  0037EC                     
 10137                           ; BSR set to: 0
 10138  0037EC  0012               	return		;funcret
 10139  0037EE                     __end_of_calcSpeed:
 10140                           	callstack 0
 10141                           
 10142 ;; *************** function ___fladd *****************
 10143 ;; Defined at:
 10144 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;  b               4   13[BANK0 ] void 
 10147 ;;  a               4   17[BANK0 ] void 
 10148 ;; Auto vars:     Size  Location     Type
 10149 ;;  grs             1   24[BANK0 ] unsigned char 
 10150 ;;  bexp            1   23[BANK0 ] unsigned char 
 10151 ;;  aexp            1   22[BANK0 ] unsigned char 
 10152 ;;  signs           1   21[BANK0 ] unsigned char 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  4   13[BANK0 ] unsigned char 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10162 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;Total ram usage:       16 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; Hardware stack levels required when called: 8
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_calcSpeed
 10173 ;;		___flsub
 10174 ;;		_efgtoa
 10175 ;; This function uses a non-reentrant model
 10176 ;;
 10177                           
 10178                           	psect	text39
 10179  00221E                     __ptext39:
 10180                           	callstack 0
 10181  00221E                     ___fladd:
 10182                           	callstack 15
 10183  00221E  0100               	movlb	0	; () banked
 10184  002220  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10185  002222  0B80               	andlw	128
 10186  002224  6F75               	movwf	___fladd@signs& (0+255),b
 10187  002226  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10188  002228  2570               	addwf	(___fladd@b+3)& (0+255),w,b
 10189  00222A  6F77               	movwf	___fladd@bexp& (0+255),b
 10190  00222C                     
 10191                           ; BSR set to: 0
 10192  00222C  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10193  00222E  EF1B  F011         	goto	u7231
 10194  002232  EF1D  F011         	goto	u7230
 10195  002236                     u7231:
 10196  002236  EF1E  F011         	goto	l7419
 10197  00223A                     u7230:
 10198  00223A                     
 10199                           ; BSR set to: 0
 10200  00223A  8177               	bsf	___fladd@bexp& (0+255),0,b
 10201  00223C                     l7419:
 10202                           
 10203                           ; BSR set to: 0
 10204  00223C  5177               	movf	___fladd@bexp& (0+255),w,b
 10205  00223E  B4D8               	btfsc	status,2,c
 10206  002240  EF24  F011         	goto	u7241
 10207  002244  EF26  F011         	goto	u7240
 10208  002248                     u7241:
 10209  002248  EF3B  F011         	goto	l7429
 10210  00224C                     u7240:
 10211  00224C                     
 10212                           ; BSR set to: 0
 10213  00224C  2977               	incf	___fladd@bexp& (0+255),w,b
 10214  00224E  A4D8               	btfss	status,2,c
 10215  002250  EF2C  F011         	goto	u7251
 10216  002254  EF2E  F011         	goto	u7250
 10217  002258                     u7251:
 10218  002258  EF36  F011         	goto	l7425
 10219  00225C                     u7250:
 10220  00225C                     
 10221                           ; BSR set to: 0
 10222  00225C  0E00               	movlw	0
 10223  00225E  6F6D               	movwf	___fladd@b& (0+255),b
 10224  002260  0E00               	movlw	0
 10225  002262  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10226  002264  0E00               	movlw	0
 10227  002266  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10228  002268  0E00               	movlw	0
 10229  00226A  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10230  00226C                     l7425:
 10231                           
 10232                           ; BSR set to: 0
 10233  00226C  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10234  00226E                     
 10235                           ; BSR set to: 0
 10236  00226E  0E00               	movlw	0
 10237  002270  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10238  002272  EF43  F011         	goto	l7431
 10239  002276                     l7429:
 10240                           
 10241                           ; BSR set to: 0
 10242  002276  0E00               	movlw	0
 10243  002278  6F6D               	movwf	___fladd@b& (0+255),b
 10244  00227A  0E00               	movlw	0
 10245  00227C  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10246  00227E  0E00               	movlw	0
 10247  002280  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10248  002282  0E00               	movlw	0
 10249  002284  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10250  002286                     l7431:
 10251                           
 10252                           ; BSR set to: 0
 10253  002286  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10254  002288  0B80               	andlw	128
 10255  00228A  6F76               	movwf	___fladd@aexp& (0+255),b
 10256  00228C                     
 10257                           ; BSR set to: 0
 10258  00228C  5175               	movf	___fladd@signs& (0+255),w,b
 10259  00228E  1976               	xorwf	___fladd@aexp& (0+255),w,b
 10260  002290  B4D8               	btfsc	status,2,c
 10261  002292  EF4D  F011         	goto	u7261
 10262  002296  EF4F  F011         	goto	u7260
 10263  00229A                     u7261:
 10264  00229A  EF50  F011         	goto	l7437
 10265  00229E                     u7260:
 10266  00229E                     
 10267                           ; BSR set to: 0
 10268  00229E  8D75               	bsf	___fladd@signs& (0+255),6,b
 10269  0022A0                     l7437:
 10270                           
 10271                           ; BSR set to: 0
 10272  0022A0  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10273  0022A2  2574               	addwf	(___fladd@a+3)& (0+255),w,b
 10274  0022A4  6F76               	movwf	___fladd@aexp& (0+255),b
 10275  0022A6                     
 10276                           ; BSR set to: 0
 10277  0022A6  AF73               	btfss	(___fladd@a+2)& (0+255),7,b
 10278  0022A8  EF58  F011         	goto	u7271
 10279  0022AC  EF5A  F011         	goto	u7270
 10280  0022B0                     u7271:
 10281  0022B0  EF5B  F011         	goto	l7443
 10282  0022B4                     u7270:
 10283  0022B4                     
 10284                           ; BSR set to: 0
 10285  0022B4  8176               	bsf	___fladd@aexp& (0+255),0,b
 10286  0022B6                     l7443:
 10287                           
 10288                           ; BSR set to: 0
 10289  0022B6  5176               	movf	___fladd@aexp& (0+255),w,b
 10290  0022B8  B4D8               	btfsc	status,2,c
 10291  0022BA  EF61  F011         	goto	u7281
 10292  0022BE  EF63  F011         	goto	u7280
 10293  0022C2                     u7281:
 10294  0022C2  EF78  F011         	goto	l7453
 10295  0022C6                     u7280:
 10296  0022C6                     
 10297                           ; BSR set to: 0
 10298  0022C6  2976               	incf	___fladd@aexp& (0+255),w,b
 10299  0022C8  A4D8               	btfss	status,2,c
 10300  0022CA  EF69  F011         	goto	u7291
 10301  0022CE  EF6B  F011         	goto	u7290
 10302  0022D2                     u7291:
 10303  0022D2  EF73  F011         	goto	l7449
 10304  0022D6                     u7290:
 10305  0022D6                     
 10306                           ; BSR set to: 0
 10307  0022D6  0E00               	movlw	0
 10308  0022D8  6F71               	movwf	___fladd@a& (0+255),b
 10309  0022DA  0E00               	movlw	0
 10310  0022DC  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10311  0022DE  0E00               	movlw	0
 10312  0022E0  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10313  0022E2  0E00               	movlw	0
 10314  0022E4  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10315  0022E6                     l7449:
 10316                           
 10317                           ; BSR set to: 0
 10318  0022E6  8F73               	bsf	(___fladd@a+2)& (0+255),7,b
 10319  0022E8                     
 10320                           ; BSR set to: 0
 10321  0022E8  0E00               	movlw	0
 10322  0022EA  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10323  0022EC  EF80  F011         	goto	l7455
 10324  0022F0                     l7453:
 10325                           
 10326                           ; BSR set to: 0
 10327  0022F0  0E00               	movlw	0
 10328  0022F2  6F71               	movwf	___fladd@a& (0+255),b
 10329  0022F4  0E00               	movlw	0
 10330  0022F6  6F72               	movwf	(___fladd@a+1)& (0+255),b
 10331  0022F8  0E00               	movlw	0
 10332  0022FA  6F73               	movwf	(___fladd@a+2)& (0+255),b
 10333  0022FC  0E00               	movlw	0
 10334  0022FE  6F74               	movwf	(___fladd@a+3)& (0+255),b
 10335  002300                     l7455:
 10336                           
 10337                           ; BSR set to: 0
 10338  002300  5177               	movf	___fladd@bexp& (0+255),w,b
 10339  002302  5D76               	subwf	___fladd@aexp& (0+255),w,b
 10340  002304  B0D8               	btfsc	status,0,c
 10341  002306  EF87  F011         	goto	u7301
 10342  00230A  EF89  F011         	goto	u7300
 10343  00230E                     u7301:
 10344  00230E  EFB0  F011         	goto	l7491
 10345  002312                     u7300:
 10346  002312                     
 10347                           ; BSR set to: 0
 10348  002312  AD75               	btfss	___fladd@signs& (0+255),6,b
 10349  002314  EF8E  F011         	goto	u7311
 10350  002318  EF90  F011         	goto	u7310
 10351  00231C                     u7311:
 10352  00231C  EF92  F011         	goto	l7461
 10353  002320                     u7310:
 10354  002320                     
 10355                           ; BSR set to: 0
 10356  002320  0E80               	movlw	128
 10357  002322  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10358  002324                     l7461:
 10359                           
 10360                           ; BSR set to: 0
 10361  002324  C077  F078         	movff	___fladd@bexp,___fladd@grs
 10362  002328                     
 10363                           ; BSR set to: 0
 10364  002328  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10365  00232C                     
 10366                           ; BSR set to: 0
 10367  00232C  C078  F076         	movff	___fladd@grs,___fladd@aexp
 10368  002330                     
 10369                           ; BSR set to: 0
 10370  002330  C06D  F078         	movff	___fladd@b,___fladd@grs
 10371  002334                     
 10372                           ; BSR set to: 0
 10373  002334  C071  F06D         	movff	___fladd@a,___fladd@b
 10374  002338                     
 10375                           ; BSR set to: 0
 10376  002338  C078  F071         	movff	___fladd@grs,___fladd@a
 10377  00233C                     
 10378                           ; BSR set to: 0
 10379  00233C  C06E  F078         	movff	___fladd@b+1,___fladd@grs
 10380  002340                     
 10381                           ; BSR set to: 0
 10382  002340  C072  F06E         	movff	___fladd@a+1,___fladd@b+1
 10383  002344                     
 10384                           ; BSR set to: 0
 10385  002344  C078  F072         	movff	___fladd@grs,___fladd@a+1
 10386  002348                     
 10387                           ; BSR set to: 0
 10388  002348  C06F  F078         	movff	___fladd@b+2,___fladd@grs
 10389  00234C                     
 10390                           ; BSR set to: 0
 10391  00234C  C073  F06F         	movff	___fladd@a+2,___fladd@b+2
 10392  002350                     
 10393                           ; BSR set to: 0
 10394  002350  C078  F073         	movff	___fladd@grs,___fladd@a+2
 10395  002354                     
 10396                           ; BSR set to: 0
 10397  002354  C070  F078         	movff	___fladd@b+3,___fladd@grs
 10398  002358                     
 10399                           ; BSR set to: 0
 10400  002358  C074  F070         	movff	___fladd@a+3,___fladd@b+3
 10401  00235C                     
 10402                           ; BSR set to: 0
 10403  00235C  C078  F074         	movff	___fladd@grs,___fladd@a+3
 10404  002360                     l7491:
 10405                           
 10406                           ; BSR set to: 0
 10407  002360  0E00               	movlw	0
 10408  002362  6F78               	movwf	___fladd@grs& (0+255),b
 10409  002364                     
 10410                           ; BSR set to: 0
 10411  002364  5177               	movf	___fladd@bexp& (0+255),w,b
 10412  002366  C076  F036         	movff	___fladd@aexp,??___fladd
 10413  00236A  6A37               	clrf	(??___fladd+1)^0,c
 10414  00236C  5E36               	subwf	??___fladd^0,f,c
 10415  00236E  0E00               	movlw	0
 10416  002370  5A37               	subwfb	(??___fladd+1)^0,f,c
 10417  002372  BE37               	btfsc	(??___fladd+1)^0,7,c
 10418  002374  EFC5  F011         	goto	u7321
 10419  002378  5037               	movf	(??___fladd+1)^0,w,c
 10420  00237A  E109               	bnz	u7320
 10421  00237C  0E1A               	movlw	26
 10422  00237E  5C36               	subwf	??___fladd^0,w,c
 10423  002380  A0D8               	btfss	status,0,c
 10424  002382  EFC5  F011         	goto	u7321
 10425  002386  EFC7  F011         	goto	u7320
 10426  00238A                     u7321:
 10427  00238A  EFFE  F011         	goto	l1924
 10428  00238E                     u7320:
 10429  00238E                     
 10430                           ; BSR set to: 0
 10431  00238E  516D               	movf	___fladd@b& (0+255),w,b
 10432  002390  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10433  002392  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10434  002394  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10435  002396  A4D8               	btfss	status,2,c
 10436  002398  EFD0  F011         	goto	u7331
 10437  00239C  EFD3  F011         	goto	u7330
 10438  0023A0                     u7331:
 10439  0023A0  0E01               	movlw	1
 10440  0023A2  EFD4  F011         	goto	u7340
 10441  0023A6                     u7330:
 10442  0023A6  0E00               	movlw	0
 10443  0023A8                     u7340:
 10444  0023A8  6F78               	movwf	___fladd@grs& (0+255),b
 10445  0023AA                     
 10446                           ; BSR set to: 0
 10447  0023AA  0E00               	movlw	0
 10448  0023AC  6F6D               	movwf	___fladd@b& (0+255),b
 10449  0023AE  0E00               	movlw	0
 10450  0023B0  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10451  0023B2  0E00               	movlw	0
 10452  0023B4  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10453  0023B6  0E00               	movlw	0
 10454  0023B8  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10455  0023BA                     
 10456                           ; BSR set to: 0
 10457  0023BA  C076  F077         	movff	___fladd@aexp,___fladd@bexp
 10458  0023BE  EF07  F012         	goto	l1923
 10459  0023C2                     l1925:
 10460                           
 10461                           ; BSR set to: 0
 10462  0023C2  A178               	btfss	___fladd@grs& (0+255),0,b
 10463  0023C4  EFE6  F011         	goto	u7351
 10464  0023C8  EFE8  F011         	goto	u7350
 10465  0023CC                     u7351:
 10466  0023CC  EFEE  F011         	goto	l7503
 10467  0023D0                     u7350:
 10468  0023D0                     
 10469                           ; BSR set to: 0
 10470  0023D0  90D8               	bcf	status,0,c
 10471  0023D2  3178               	rrcf	___fladd@grs& (0+255),w,b
 10472  0023D4  0901               	iorlw	1
 10473  0023D6  6F78               	movwf	___fladd@grs& (0+255),b
 10474  0023D8  EFF0  F011         	goto	l7505
 10475  0023DC                     l7503:
 10476                           
 10477                           ; BSR set to: 0
 10478  0023DC  90D8               	bcf	status,0,c
 10479  0023DE  3378               	rrcf	___fladd@grs& (0+255),f,b
 10480  0023E0                     l7505:
 10481                           
 10482                           ; BSR set to: 0
 10483  0023E0  A16D               	btfss	___fladd@b& (0+255),0,b
 10484  0023E2  EFF5  F011         	goto	u7361
 10485  0023E6  EFF7  F011         	goto	u7360
 10486  0023EA                     u7361:
 10487  0023EA  EFF8  F011         	goto	l7509
 10488  0023EE                     u7360:
 10489  0023EE                     
 10490                           ; BSR set to: 0
 10491  0023EE  8F78               	bsf	___fladd@grs& (0+255),7,b
 10492  0023F0                     l7509:
 10493                           
 10494                           ; BSR set to: 0
 10495  0023F0  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10496  0023F2  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10497  0023F4  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10498  0023F6  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10499  0023F8  336D               	rrcf	___fladd@b& (0+255),f,b
 10500  0023FA                     
 10501                           ; BSR set to: 0
 10502  0023FA  2B77               	incf	___fladd@bexp& (0+255),f,b
 10503  0023FC                     l1924:
 10504                           
 10505                           ; BSR set to: 0
 10506  0023FC  5176               	movf	___fladd@aexp& (0+255),w,b
 10507  0023FE  5D77               	subwf	___fladd@bexp& (0+255),w,b
 10508  002400  A0D8               	btfss	status,0,c
 10509  002402  EF05  F012         	goto	u7371
 10510  002406  EF07  F012         	goto	u7370
 10511  00240A                     u7371:
 10512  00240A  EFE1  F011         	goto	l1925
 10513  00240E                     u7370:
 10514  00240E                     l1923:
 10515                           
 10516                           ; BSR set to: 0
 10517  00240E  BD75               	btfsc	___fladd@signs& (0+255),6,b
 10518  002410  EF0C  F012         	goto	u7381
 10519  002414  EF0E  F012         	goto	u7380
 10520  002418                     u7381:
 10521  002418  EF4E  F012         	goto	l7537
 10522  00241C                     u7380:
 10523  00241C                     
 10524                           ; BSR set to: 0
 10525  00241C  5177               	movf	___fladd@bexp& (0+255),w,b
 10526  00241E  A4D8               	btfss	status,2,c
 10527  002420  EF14  F012         	goto	u7391
 10528  002424  EF16  F012         	goto	u7390
 10529  002428                     u7391:
 10530  002428  EF20  F012         	goto	l7519
 10531  00242C                     u7390:
 10532  00242C                     
 10533                           ; BSR set to: 0
 10534  00242C  0E00               	movlw	0
 10535  00242E  6F6D               	movwf	?___fladd& (0+255),b
 10536  002430  0E00               	movlw	0
 10537  002432  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10538  002434  0E00               	movlw	0
 10539  002436  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10540  002438  0E00               	movlw	0
 10541  00243A  6F70               	movwf	(?___fladd+3)& (0+255),b
 10542  00243C  EF6F  F013         	goto	l1932
 10543  002440                     l7519:
 10544                           
 10545                           ; BSR set to: 0
 10546  002440  5171               	movf	___fladd@a& (0+255),w,b
 10547  002442  276D               	addwf	___fladd@b& (0+255),f,b
 10548  002444  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10549  002446  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10550  002448  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10551  00244A  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10552  00244C  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10553  00244E  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10554  002450                     
 10555                           ; BSR set to: 0
 10556  002450  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10557  002452  EF2D  F012         	goto	u7401
 10558  002456  EF2F  F012         	goto	u7400
 10559  00245A                     u7401:
 10560  00245A  EFDB  F012         	goto	l7573
 10561  00245E                     u7400:
 10562  00245E                     
 10563                           ; BSR set to: 0
 10564  00245E  A178               	btfss	___fladd@grs& (0+255),0,b
 10565  002460  EF34  F012         	goto	u7411
 10566  002464  EF36  F012         	goto	u7410
 10567  002468                     u7411:
 10568  002468  EF3C  F012         	goto	l7527
 10569  00246C                     u7410:
 10570  00246C                     
 10571                           ; BSR set to: 0
 10572  00246C  90D8               	bcf	status,0,c
 10573  00246E  3178               	rrcf	___fladd@grs& (0+255),w,b
 10574  002470  0901               	iorlw	1
 10575  002472  6F78               	movwf	___fladd@grs& (0+255),b
 10576  002474  EF3E  F012         	goto	l7529
 10577  002478                     l7527:
 10578                           
 10579                           ; BSR set to: 0
 10580  002478  90D8               	bcf	status,0,c
 10581  00247A  3378               	rrcf	___fladd@grs& (0+255),f,b
 10582  00247C                     l7529:
 10583                           
 10584                           ; BSR set to: 0
 10585  00247C  A16D               	btfss	___fladd@b& (0+255),0,b
 10586  00247E  EF43  F012         	goto	u7421
 10587  002482  EF45  F012         	goto	u7420
 10588  002486                     u7421:
 10589  002486  EF46  F012         	goto	l7533
 10590  00248A                     u7420:
 10591  00248A                     
 10592                           ; BSR set to: 0
 10593  00248A  8F78               	bsf	___fladd@grs& (0+255),7,b
 10594  00248C                     l7533:
 10595                           
 10596                           ; BSR set to: 0
 10597  00248C  3570               	rlcf	(___fladd@b+3)& (0+255),w,b
 10598  00248E  3370               	rrcf	(___fladd@b+3)& (0+255),f,b
 10599  002490  336F               	rrcf	(___fladd@b+2)& (0+255),f,b
 10600  002492  336E               	rrcf	(___fladd@b+1)& (0+255),f,b
 10601  002494  336D               	rrcf	___fladd@b& (0+255),f,b
 10602  002496                     
 10603                           ; BSR set to: 0
 10604  002496  2B77               	incf	___fladd@bexp& (0+255),f,b
 10605  002498  EFDB  F012         	goto	l7573
 10606  00249C                     l7537:
 10607                           
 10608                           ; BSR set to: 0
 10609  00249C  5171               	movf	___fladd@a& (0+255),w,b
 10610  00249E  5D6D               	subwf	___fladd@b& (0+255),w,b
 10611  0024A0  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10612  0024A2  596E               	subwfb	(___fladd@b+1)& (0+255),w,b
 10613  0024A4  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10614  0024A6  596F               	subwfb	(___fladd@b+2)& (0+255),w,b
 10615  0024A8  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10616  0024AA  0A80               	xorlw	128
 10617  0024AC  6E36               	movwf	??___fladd^0,c
 10618  0024AE  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10619  0024B0  0A80               	xorlw	128
 10620  0024B2  5836               	subwfb	??___fladd^0,w,c
 10621  0024B4  B0D8               	btfsc	status,0,c
 10622  0024B6  EF5F  F012         	goto	u7431
 10623  0024BA  EF61  F012         	goto	u7430
 10624  0024BE                     u7431:
 10625  0024BE  EF8C  F012         	goto	l7547
 10626  0024C2                     u7430:
 10627  0024C2                     
 10628                           ; BSR set to: 0
 10629  0024C2  516D               	movf	___fladd@b& (0+255),w,b
 10630  0024C4  5D71               	subwf	___fladd@a& (0+255),w,b
 10631  0024C6  6E36               	movwf	??___fladd^0,c
 10632  0024C8  516E               	movf	(___fladd@b+1)& (0+255),w,b
 10633  0024CA  5972               	subwfb	(___fladd@a+1)& (0+255),w,b
 10634  0024CC  6E37               	movwf	(??___fladd+1)^0,c
 10635  0024CE  516F               	movf	(___fladd@b+2)& (0+255),w,b
 10636  0024D0  5973               	subwfb	(___fladd@a+2)& (0+255),w,b
 10637  0024D2  6E38               	movwf	(??___fladd+2)^0,c
 10638  0024D4  5170               	movf	(___fladd@b+3)& (0+255),w,b
 10639  0024D6  5974               	subwfb	(___fladd@a+3)& (0+255),w,b
 10640  0024D8  6E39               	movwf	(??___fladd+3)^0,c
 10641  0024DA  0EFF               	movlw	255
 10642  0024DC  2436               	addwf	??___fladd^0,w,c
 10643  0024DE  6F6D               	movwf	___fladd@b& (0+255),b
 10644  0024E0  0EFF               	movlw	255
 10645  0024E2  2037               	addwfc	(??___fladd+1)^0,w,c
 10646  0024E4  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10647  0024E6  0EFF               	movlw	255
 10648  0024E8  2038               	addwfc	(??___fladd+2)^0,w,c
 10649  0024EA  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10650  0024EC  0EFF               	movlw	255
 10651  0024EE  2039               	addwfc	(??___fladd+3)^0,w,c
 10652  0024F0  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10653  0024F2  0E80               	movlw	128
 10654  0024F4  1B75               	xorwf	___fladd@signs& (0+255),f,b
 10655  0024F6                     
 10656                           ; BSR set to: 0
 10657  0024F6  6D78               	negf	___fladd@grs& (0+255),b
 10658  0024F8                     
 10659                           ; BSR set to: 0
 10660  0024F8  5178               	movf	___fladd@grs& (0+255),w,b
 10661  0024FA  A4D8               	btfss	status,2,c
 10662  0024FC  EF82  F012         	goto	u7441
 10663  002500  EF84  F012         	goto	u7440
 10664  002504                     u7441:
 10665  002504  EF94  F012         	goto	l1940
 10666  002508                     u7440:
 10667  002508                     
 10668                           ; BSR set to: 0
 10669  002508  0E01               	movlw	1
 10670  00250A  276D               	addwf	___fladd@b& (0+255),f,b
 10671  00250C  0E00               	movlw	0
 10672  00250E  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10673  002510  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10674  002512  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10675  002514  EF94  F012         	goto	l1940
 10676  002518                     l7547:
 10677                           
 10678                           ; BSR set to: 0
 10679  002518  5171               	movf	___fladd@a& (0+255),w,b
 10680  00251A  5F6D               	subwf	___fladd@b& (0+255),f,b
 10681  00251C  5172               	movf	(___fladd@a+1)& (0+255),w,b
 10682  00251E  5B6E               	subwfb	(___fladd@b+1)& (0+255),f,b
 10683  002520  5173               	movf	(___fladd@a+2)& (0+255),w,b
 10684  002522  5B6F               	subwfb	(___fladd@b+2)& (0+255),f,b
 10685  002524  5174               	movf	(___fladd@a+3)& (0+255),w,b
 10686  002526  5B70               	subwfb	(___fladd@b+3)& (0+255),f,b
 10687  002528                     l1940:
 10688                           
 10689                           ; BSR set to: 0
 10690  002528  516D               	movf	___fladd@b& (0+255),w,b
 10691  00252A  116E               	iorwf	(___fladd@b+1)& (0+255),w,b
 10692  00252C  116F               	iorwf	(___fladd@b+2)& (0+255),w,b
 10693  00252E  1170               	iorwf	(___fladd@b+3)& (0+255),w,b
 10694  002530  A4D8               	btfss	status,2,c
 10695  002532  EF9D  F012         	goto	u7451
 10696  002536  EF9F  F012         	goto	u7450
 10697  00253A                     u7451:
 10698  00253A  EFD4  F012         	goto	l7571
 10699  00253E                     u7450:
 10700  00253E                     
 10701                           ; BSR set to: 0
 10702  00253E  5178               	movf	___fladd@grs& (0+255),w,b
 10703  002540  A4D8               	btfss	status,2,c
 10704  002542  EFA5  F012         	goto	u7461
 10705  002546  EFA7  F012         	goto	u7460
 10706  00254A                     u7461:
 10707  00254A  EFD4  F012         	goto	l7571
 10708  00254E                     u7460:
 10709  00254E                     
 10710                           ; BSR set to: 0
 10711  00254E  0E00               	movlw	0
 10712  002550  6F6D               	movwf	?___fladd& (0+255),b
 10713  002552  0E00               	movlw	0
 10714  002554  6F6E               	movwf	(?___fladd+1)& (0+255),b
 10715  002556  0E00               	movlw	0
 10716  002558  6F6F               	movwf	(?___fladd+2)& (0+255),b
 10717  00255A  0E00               	movlw	0
 10718  00255C  6F70               	movwf	(?___fladd+3)& (0+255),b
 10719  00255E  EF6F  F013         	goto	l1932
 10720  002562                     l7555:
 10721                           
 10722                           ; BSR set to: 0
 10723  002562  90D8               	bcf	status,0,c
 10724  002564  376D               	rlcf	___fladd@b& (0+255),f,b
 10725  002566  376E               	rlcf	(___fladd@b+1)& (0+255),f,b
 10726  002568  376F               	rlcf	(___fladd@b+2)& (0+255),f,b
 10727  00256A  3770               	rlcf	(___fladd@b+3)& (0+255),f,b
 10728  00256C                     
 10729                           ; BSR set to: 0
 10730  00256C  AF78               	btfss	___fladd@grs& (0+255),7,b
 10731  00256E  EFBB  F012         	goto	u7471
 10732  002572  EFBD  F012         	goto	u7470
 10733  002576                     u7471:
 10734  002576  EFBE  F012         	goto	l7561
 10735  00257A                     u7470:
 10736  00257A                     
 10737                           ; BSR set to: 0
 10738  00257A  816D               	bsf	___fladd@b& (0+255),0,b
 10739  00257C                     l7561:
 10740                           
 10741                           ; BSR set to: 0
 10742  00257C  A178               	btfss	___fladd@grs& (0+255),0,b
 10743  00257E  EFC3  F012         	goto	u7481
 10744  002582  EFC5  F012         	goto	u7480
 10745  002586                     u7481:
 10746  002586  EFC9  F012         	goto	l7565
 10747  00258A                     u7480:
 10748  00258A                     
 10749                           ; BSR set to: 0
 10750  00258A  80D8               	bsf	status,0,c
 10751  00258C  3778               	rlcf	___fladd@grs& (0+255),f,b
 10752  00258E  EFCB  F012         	goto	l7567
 10753  002592                     l7565:
 10754                           
 10755                           ; BSR set to: 0
 10756  002592  90D8               	bcf	status,0,c
 10757  002594  3778               	rlcf	___fladd@grs& (0+255),f,b
 10758  002596                     l7567:
 10759                           
 10760                           ; BSR set to: 0
 10761  002596  5177               	movf	___fladd@bexp& (0+255),w,b
 10762  002598  B4D8               	btfsc	status,2,c
 10763  00259A  EFD1  F012         	goto	u7491
 10764  00259E  EFD3  F012         	goto	u7490
 10765  0025A2                     u7491:
 10766  0025A2  EFD4  F012         	goto	l7571
 10767  0025A6                     u7490:
 10768  0025A6                     
 10769                           ; BSR set to: 0
 10770  0025A6  0777               	decf	___fladd@bexp& (0+255),f,b
 10771  0025A8                     l7571:
 10772                           
 10773                           ; BSR set to: 0
 10774  0025A8  AF6F               	btfss	(___fladd@b+2)& (0+255),7,b
 10775  0025AA  EFD9  F012         	goto	u7501
 10776  0025AE  EFDB  F012         	goto	u7500
 10777  0025B2                     u7501:
 10778  0025B2  EFB1  F012         	goto	l7555
 10779  0025B6                     u7500:
 10780  0025B6                     l7573:
 10781                           
 10782                           ; BSR set to: 0
 10783  0025B6  0E00               	movlw	0
 10784  0025B8  6F76               	movwf	___fladd@aexp& (0+255),b
 10785  0025BA                     
 10786                           ; BSR set to: 0
 10787  0025BA  AF78               	btfss	___fladd@grs& (0+255),7,b
 10788  0025BC  EFE2  F012         	goto	u7511
 10789  0025C0  EFE4  F012         	goto	u7510
 10790  0025C4                     u7511:
 10791  0025C4  EFFC  F012         	goto	l1949
 10792  0025C8                     u7510:
 10793  0025C8                     
 10794                           ; BSR set to: 0
 10795  0025C8  C078  F036         	movff	___fladd@grs,??___fladd
 10796  0025CC  0E7F               	movlw	127
 10797  0025CE  1636               	andwf	??___fladd^0,f,c
 10798  0025D0  B4D8               	btfsc	status,2,c
 10799  0025D2  EFED  F012         	goto	u7521
 10800  0025D6  EFEF  F012         	goto	u7520
 10801  0025DA                     u7521:
 10802  0025DA  EFF3  F012         	goto	l1950
 10803  0025DE                     u7520:
 10804  0025DE                     l7579:
 10805                           
 10806                           ; BSR set to: 0
 10807  0025DE  0E01               	movlw	1
 10808  0025E0  6F76               	movwf	___fladd@aexp& (0+255),b
 10809  0025E2  EFFC  F012         	goto	l1949
 10810  0025E6                     l1950:
 10811                           
 10812                           ; BSR set to: 0
 10813  0025E6  A16D               	btfss	___fladd@b& (0+255),0,b
 10814  0025E8  EFF8  F012         	goto	u7531
 10815  0025EC  EFFA  F012         	goto	u7530
 10816  0025F0                     u7531:
 10817  0025F0  EFFC  F012         	goto	l1949
 10818  0025F4                     u7530:
 10819  0025F4  EFEF  F012         	goto	l7579
 10820  0025F8                     l1949:
 10821                           
 10822                           ; BSR set to: 0
 10823  0025F8  5176               	movf	___fladd@aexp& (0+255),w,b
 10824  0025FA  B4D8               	btfsc	status,2,c
 10825  0025FC  EF02  F013         	goto	u7541
 10826  002600  EF04  F013         	goto	u7540
 10827  002604                     u7541:
 10828  002604  EF2F  F013         	goto	l7591
 10829  002608                     u7540:
 10830  002608                     
 10831                           ; BSR set to: 0
 10832  002608  0E01               	movlw	1
 10833  00260A  276D               	addwf	___fladd@b& (0+255),f,b
 10834  00260C  0E00               	movlw	0
 10835  00260E  236E               	addwfc	(___fladd@b+1)& (0+255),f,b
 10836  002610  236F               	addwfc	(___fladd@b+2)& (0+255),f,b
 10837  002612  2370               	addwfc	(___fladd@b+3)& (0+255),f,b
 10838  002614                     
 10839                           ; BSR set to: 0
 10840  002614  A170               	btfss	(___fladd@b+3)& (0+255),0,b
 10841  002616  EF0F  F013         	goto	u7551
 10842  00261A  EF11  F013         	goto	u7550
 10843  00261E                     u7551:
 10844  00261E  EF2F  F013         	goto	l7591
 10845  002622                     u7550:
 10846  002622                     
 10847                           ; BSR set to: 0
 10848  002622  C06D  F036         	movff	___fladd@b,??___fladd
 10849  002626  C06E  F037         	movff	___fladd@b+1,??___fladd+1
 10850  00262A  C06F  F038         	movff	___fladd@b+2,??___fladd+2
 10851  00262E  C070  F039         	movff	___fladd@b+3,??___fladd+3
 10852  002632  3439               	rlcf	(??___fladd+3)^0,w,c
 10853  002634  3239               	rrcf	(??___fladd+3)^0,f,c
 10854  002636  3238               	rrcf	(??___fladd+2)^0,f,c
 10855  002638  3237               	rrcf	(??___fladd+1)^0,f,c
 10856  00263A  3236               	rrcf	??___fladd^0,f,c
 10857  00263C  C036  F06D         	movff	??___fladd,___fladd@b
 10858  002640  C037  F06E         	movff	??___fladd+1,___fladd@b+1
 10859  002644  C038  F06F         	movff	??___fladd+2,___fladd@b+2
 10860  002648  C039  F070         	movff	??___fladd+3,___fladd@b+3
 10861  00264C  2977               	incf	___fladd@bexp& (0+255),w,b
 10862  00264E  B4D8               	btfsc	status,2,c
 10863  002650  EF2C  F013         	goto	u7561
 10864  002654  EF2E  F013         	goto	u7560
 10865  002658                     u7561:
 10866  002658  EF2F  F013         	goto	l7591
 10867  00265C                     u7560:
 10868  00265C                     
 10869                           ; BSR set to: 0
 10870  00265C  2B77               	incf	___fladd@bexp& (0+255),f,b
 10871  00265E                     l7591:
 10872                           
 10873                           ; BSR set to: 0
 10874  00265E  2977               	incf	___fladd@bexp& (0+255),w,b
 10875  002660  B4D8               	btfsc	status,2,c
 10876  002662  EF35  F013         	goto	u7571
 10877  002666  EF37  F013         	goto	u7570
 10878  00266A                     u7571:
 10879  00266A  EF3F  F013         	goto	l7595
 10880  00266E                     u7570:
 10881  00266E                     
 10882                           ; BSR set to: 0
 10883  00266E  5177               	movf	___fladd@bexp& (0+255),w,b
 10884  002670  A4D8               	btfss	status,2,c
 10885  002672  EF3D  F013         	goto	u7581
 10886  002676  EF3F  F013         	goto	u7580
 10887  00267A                     u7581:
 10888  00267A  EF51  F013         	goto	l7599
 10889  00267E                     u7580:
 10890  00267E                     l7595:
 10891                           
 10892                           ; BSR set to: 0
 10893  00267E  0E00               	movlw	0
 10894  002680  6F6D               	movwf	___fladd@b& (0+255),b
 10895  002682  0E00               	movlw	0
 10896  002684  6F6E               	movwf	(___fladd@b+1)& (0+255),b
 10897  002686  0E00               	movlw	0
 10898  002688  6F6F               	movwf	(___fladd@b+2)& (0+255),b
 10899  00268A  0E00               	movlw	0
 10900  00268C  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10901  00268E  5177               	movf	___fladd@bexp& (0+255),w,b
 10902  002690  A4D8               	btfss	status,2,c
 10903  002692  EF4D  F013         	goto	u7591
 10904  002696  EF4F  F013         	goto	u7590
 10905  00269A                     u7591:
 10906  00269A  EF51  F013         	goto	l7599
 10907  00269E                     u7590:
 10908  00269E                     
 10909                           ; BSR set to: 0
 10910  00269E  0E00               	movlw	0
 10911  0026A0  6F75               	movwf	___fladd@signs& (0+255),b
 10912  0026A2                     l7599:
 10913                           
 10914                           ; BSR set to: 0
 10915  0026A2  A177               	btfss	___fladd@bexp& (0+255),0,b
 10916  0026A4  EF56  F013         	goto	u7601
 10917  0026A8  EF58  F013         	goto	u7600
 10918  0026AC                     u7601:
 10919  0026AC  EF5B  F013         	goto	l7603
 10920  0026B0                     u7600:
 10921  0026B0                     
 10922                           ; BSR set to: 0
 10923  0026B0  8F6F               	bsf	(___fladd@b+2)& (0+255),7,b
 10924  0026B2  EF5C  F013         	goto	l7605
 10925  0026B6                     l7603:
 10926                           
 10927                           ; BSR set to: 0
 10928  0026B6  9F6F               	bcf	(___fladd@b+2)& (0+255),7,b
 10929  0026B8                     l7605:
 10930                           
 10931                           ; BSR set to: 0
 10932  0026B8  90D8               	bcf	status,0,c
 10933  0026BA  3177               	rrcf	___fladd@bexp& (0+255),w,b
 10934  0026BC  6F70               	movwf	(___fladd@b+3)& (0+255),b
 10935  0026BE                     
 10936                           ; BSR set to: 0
 10937  0026BE  AF75               	btfss	___fladd@signs& (0+255),7,b
 10938  0026C0  EF64  F013         	goto	u7611
 10939  0026C4  EF66  F013         	goto	u7610
 10940  0026C8                     u7611:
 10941  0026C8  EF67  F013         	goto	l7611
 10942  0026CC                     u7610:
 10943  0026CC                     
 10944                           ; BSR set to: 0
 10945  0026CC  8F70               	bsf	(___fladd@b+3)& (0+255),7,b
 10946  0026CE                     l7611:
 10947                           
 10948                           ; BSR set to: 0
 10949  0026CE  C06D  F06D         	movff	___fladd@b,?___fladd
 10950  0026D2  C06E  F06E         	movff	___fladd@b+1,?___fladd+1
 10951  0026D6  C06F  F06F         	movff	___fladd@b+2,?___fladd+2
 10952  0026DA  C070  F070         	movff	___fladd@b+3,?___fladd+3
 10953  0026DE                     l1932:
 10954                           
 10955                           ; BSR set to: 0
 10956  0026DE  0012               	return		;funcret
 10957  0026E0                     __end_of___fladd:
 10958                           	callstack 0
 10959                           
 10960 ;; *************** function _calcMotorPow *****************
 10961 ;; Defined at:
 10962 ;;		line 335 in file "main.c"
 10963 ;; Parameters:    Size  Location     Type
 10964 ;;		None
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;  oldSpeedDelt    2   39[BANK0 ] short 
 10967 ;;  setSpeedDelt    2   37[BANK0 ] short 
 10968 ;;  addMPow         1   41[BANK0 ] char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10979 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10981 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10982 ;;Total ram usage:        7 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 10
 10985 ;; This function calls:
 10986 ;;		___awdiv
 10987 ;;		___flmul
 10988 ;;		___fltol
 10989 ;;		___xxtofl
 10990 ;;		_actSpeed
 10991 ;;		_setMotor
 10992 ;; This function is called by:
 10993 ;;		_loop
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text40
 10998  0041C6                     __ptext40:
 10999                           	callstack 0
 11000  0041C6                     _calcMotorPow:
 11001                           	callstack 19
 11002  0041C6                     
 11003                           ;main.c: 336:     currentSpeed = actSpeed();
 11004  0041C6  EC72  F028         	call	_actSpeed	;wreg free
 11005  0041CA  C022  F0E9         	movff	?_actSpeed,_currentSpeed
 11006  0041CE  C023  F0EA         	movff	?_actSpeed+1,_currentSpeed+1
 11007  0041D2                     
 11008                           ;main.c: 338:     int16_t setSpeedDelta = setSpeed - currentSpeed;
 11009  0041D2  0100               	movlb	0	; () banked
 11010  0041D4  51E9               	movf	_currentSpeed& (0+255),w,b
 11011  0041D6  5DEB               	subwf	_setSpeed& (0+255),w,b
 11012  0041D8  6F85               	movwf	calcMotorPow@setSpeedDelta& (0+255),b
 11013  0041DA  51EA               	movf	(_currentSpeed+1)& (0+255),w,b
 11014  0041DC  59EC               	subwfb	(_setSpeed+1)& (0+255),w,b
 11015  0041DE  6F86               	movwf	(calcMotorPow@setSpeedDelta+1)& (0+255),b
 11016  0041E0                     
 11017                           ; BSR set to: 0
 11018                           ;main.c: 339:     int16_t oldSpeedDelta = currentSpeed - oldSpeed;
 11019  0041E0  0101               	movlb	1	; () banked
 11020  0041E2  512C               	movf	_oldSpeed& (0+255),w,b
 11021  0041E4  0100               	movlb	0	; () banked
 11022  0041E6  5DE9               	subwf	_currentSpeed& (0+255),w,b
 11023  0041E8  6F87               	movwf	calcMotorPow@oldSpeedDelta& (0+255),b
 11024  0041EA  0101               	movlb	1	; () banked
 11025  0041EC  512D               	movf	(_oldSpeed+1)& (0+255),w,b
 11026  0041EE  0100               	movlb	0	; () banked
 11027  0041F0  59EA               	subwfb	(_currentSpeed+1)& (0+255),w,b
 11028  0041F2  6F88               	movwf	(calcMotorPow@oldSpeedDelta+1)& (0+255),b
 11029  0041F4                     
 11030                           ; BSR set to: 0
 11031                           ;main.c: 345:     addMPow = (int8_t) ((0.020) * (setSpeedDelta - (oldSpeedDelta / (2))))
      +                          ;
 11032  0041F4  0E0A               	movlw	10
 11033  0041F6  6E2E               	movwf	___flmul@a^0,c
 11034  0041F8  0ED7               	movlw	215
 11035  0041FA  6E2F               	movwf	(___flmul@a+1)^0,c
 11036  0041FC  0EA3               	movlw	163
 11037  0041FE  6E30               	movwf	(___flmul@a+2)^0,c
 11038  004200  0E3C               	movlw	60
 11039  004202  6E31               	movwf	(___flmul@a+3)^0,c
 11040  004204  0E00               	movlw	0
 11041  004206  6E17               	movwf	(___awdiv@divisor+1)^0,c
 11042  004208  0E02               	movlw	2
 11043  00420A  6E16               	movwf	___awdiv@divisor^0,c
 11044  00420C  C087  F014         	movff	calcMotorPow@oldSpeedDelta,___awdiv@dividend
 11045  004210  C088  F015         	movff	calcMotorPow@oldSpeedDelta+1,___awdiv@dividend+1
 11046  004214  EC04  F026         	call	___awdiv	;wreg free
 11047  004218  C085  F083         	movff	calcMotorPow@setSpeedDelta,??_calcMotorPow
 11048  00421C  C086  F084         	movff	calcMotorPow@setSpeedDelta+1,??_calcMotorPow+1
 11049  004220  5014               	movf	?___awdiv^0,w,c
 11050  004222  0100               	movlb	0	; () banked
 11051  004224  5F83               	subwf	??_calcMotorPow& (0+255),f,b
 11052  004226  5015               	movf	(?___awdiv+1)^0,w,c
 11053  004228  5B84               	subwfb	(??_calcMotorPow+1)& (0+255),f,b
 11054  00422A  C083  F01C         	movff	??_calcMotorPow,___xxtofl@val
 11055  00422E  C084  F01D         	movff	??_calcMotorPow+1,___xxtofl@val+1
 11056  004232  0E00               	movlw	0
 11057  004234  BE1D               	btfsc	(___xxtofl@val+1)^0,7,c
 11058  004236  0EFF               	movlw	-1
 11059  004238  6E1E               	movwf	(___xxtofl@val+2)^0,c
 11060  00423A  6E1F               	movwf	(___xxtofl@val+3)^0,c
 11061  00423C  0E01               	movlw	1
 11062  00423E  ECD3  F01D         	call	___xxtofl
 11063  004242  C01C  F02A         	movff	?___xxtofl,___flmul@b
 11064  004246  C01D  F02B         	movff	?___xxtofl+1,___flmul@b+1
 11065  00424A  C01E  F02C         	movff	?___xxtofl+2,___flmul@b+2
 11066  00424E  C01F  F02D         	movff	?___xxtofl+3,___flmul@b+3
 11067  004252  EC70  F013         	call	___flmul	;wreg free
 11068  004256  C02A  F079         	movff	?___flmul,___fltol@f1
 11069  00425A  C02B  F07A         	movff	?___flmul+1,___fltol@f1+1
 11070  00425E  C02C  F07B         	movff	?___flmul+2,___fltol@f1+2
 11071  004262  C02D  F07C         	movff	?___flmul+3,___fltol@f1+3
 11072  004266  ECAB  F022         	call	___fltol	;wreg free
 11073  00426A  0100               	movlb	0	; () banked
 11074  00426C  5179               	movf	?___fltol& (0+255),w,b
 11075  00426E  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11076  004270                     
 11077                           ; BSR set to: 0
 11078                           ;main.c: 347:     if (addMPow > (3)) {
 11079  004270  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11080  004272  0A80               	xorlw	128
 11081  004274  0F7C               	addlw	-132
 11082  004276  A0D8               	btfss	status,0,c
 11083  004278  EF40  F021         	goto	u10001
 11084  00427C  EF42  F021         	goto	u10000
 11085  004280                     u10001:
 11086  004280  EF46  F021         	goto	l9037
 11087  004284                     u10000:
 11088  004284                     
 11089                           ; BSR set to: 0
 11090                           ;main.c: 348:         addMPow = (3);
 11091  004284  0E03               	movlw	3
 11092  004286  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11093                           
 11094                           ;main.c: 349:     } else if (addMPow < -(3)) {
 11095  004288  EF52  F021         	goto	l9041
 11096  00428C                     l9037:
 11097                           
 11098                           ; BSR set to: 0
 11099  00428C  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11100  00428E  0A80               	xorlw	128
 11101  004290  0F83               	addlw	131
 11102  004292  B0D8               	btfsc	status,0,c
 11103  004294  EF4E  F021         	goto	u10011
 11104  004298  EF50  F021         	goto	u10010
 11105  00429C                     u10011:
 11106  00429C  EF52  F021         	goto	l9041
 11107  0042A0                     u10010:
 11108  0042A0                     
 11109                           ; BSR set to: 0
 11110                           ;main.c: 350:         addMPow = -(3);
 11111  0042A0  0EFD               	movlw	253
 11112  0042A2  6F89               	movwf	calcMotorPow@addMPow& (0+255),b
 11113  0042A4                     l9041:
 11114                           
 11115                           ; BSR set to: 0
 11116                           ;main.c: 353:     actMotorPow += addMPow;
 11117  0042A4  5189               	movf	calcMotorPow@addMPow& (0+255),w,b
 11118  0042A6  27E7               	addwf	_actMotorPow& (0+255),f,b
 11119  0042A8  0E00               	movlw	0
 11120  0042AA  BF89               	btfsc	calcMotorPow@addMPow& (0+255),7,b
 11121  0042AC  0EFF               	movlw	255
 11122  0042AE  23E8               	addwfc	(_actMotorPow+1)& (0+255),f,b
 11123  0042B0                     
 11124                           ; BSR set to: 0
 11125                           ;main.c: 355:     if (actMotorPow > (700)) {
 11126  0042B0  BFE8               	btfsc	(_actMotorPow+1)& (0+255),7,b
 11127  0042B2  EF64  F021         	goto	u10021
 11128  0042B6  0EBD               	movlw	189
 11129  0042B8  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11130  0042BA  0E02               	movlw	2
 11131  0042BC  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11132  0042BE  A0D8               	btfss	status,0,c
 11133  0042C0  EF64  F021         	goto	u10021
 11134  0042C4  EF66  F021         	goto	u10020
 11135  0042C8                     u10021:
 11136  0042C8  EF6C  F021         	goto	l9047
 11137  0042CC                     u10020:
 11138  0042CC                     
 11139                           ; BSR set to: 0
 11140                           ;main.c: 356:         actMotorPow = (700);
 11141  0042CC  0E02               	movlw	2
 11142  0042CE  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11143  0042D0  0EBC               	movlw	188
 11144  0042D2  6FE7               	movwf	_actMotorPow& (0+255),b
 11145                           
 11146                           ;main.c: 357:     } else if (actMotorPow < (-400)) {
 11147  0042D4  EF7E  F021         	goto	l9051
 11148  0042D8                     l9047:
 11149                           
 11150                           ; BSR set to: 0
 11151  0042D8  AFE8               	btfss	(_actMotorPow+1)& (0+255),7,b
 11152  0042DA  EF78  F021         	goto	u10031
 11153  0042DE  0E70               	movlw	112
 11154  0042E0  5DE7               	subwf	_actMotorPow& (0+255),w,b
 11155  0042E2  0EFE               	movlw	254
 11156  0042E4  59E8               	subwfb	(_actMotorPow+1)& (0+255),w,b
 11157  0042E6  B0D8               	btfsc	status,0,c
 11158  0042E8  EF78  F021         	goto	u10031
 11159  0042EC  EF7A  F021         	goto	u10030
 11160  0042F0                     u10031:
 11161  0042F0  EF7E  F021         	goto	l9051
 11162  0042F4                     u10030:
 11163  0042F4                     
 11164                           ; BSR set to: 0
 11165                           ;main.c: 358:         actMotorPow = (-400);
 11166  0042F4  0EFE               	movlw	254
 11167  0042F6  6FE8               	movwf	(_actMotorPow+1)& (0+255),b
 11168  0042F8  0E70               	movlw	112
 11169  0042FA  6FE7               	movwf	_actMotorPow& (0+255),b
 11170  0042FC                     l9051:
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;main.c: 361:     setMotor(actMotorPow);
 11174  0042FC  C0E7  F018         	movff	_actMotorPow,setMotor@motorPower
 11175  004300  C0E8  F019         	movff	_actMotorPow+1,setMotor@motorPower+1
 11176  004304  EC2E  F025         	call	_setMotor	;wreg free
 11177  004308                     
 11178                           ;main.c: 363:     oldSpeed = currentSpeed;
 11179  004308  C0E9  F12C         	movff	_currentSpeed,_oldSpeed
 11180  00430C  C0EA  F12D         	movff	_currentSpeed+1,_oldSpeed+1
 11181  004310  0012               	return		;funcret
 11182  004312                     __end_of_calcMotorPow:
 11183                           	callstack 0
 11184                           
 11185 ;; *************** function _setMotor *****************
 11186 ;; Defined at:
 11187 ;;		line 366 in file "main.c"
 11188 ;; Parameters:    Size  Location     Type
 11189 ;;  motorPower      2   23[COMRAM] short 
 11190 ;; Auto vars:     Size  Location     Type
 11191 ;;		None
 11192 ;; Return value:  Size  Location     Type
 11193 ;;                  1    wreg      void 
 11194 ;; Registers used:
 11195 ;;		wreg, status,2, status,0, cstack
 11196 ;; Tracked objects:
 11197 ;;		On entry : 0/0
 11198 ;;		On exit  : 0/0
 11199 ;;		Unchanged: 0/0
 11200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11205 ;;Total ram usage:        4 bytes
 11206 ;; Hardware stack levels used: 1
 11207 ;; Hardware stack levels required when called: 9
 11208 ;; This function calls:
 11209 ;;		_PWM7_LoadDutyValue
 11210 ;;		_PWM8_LoadDutyValue
 11211 ;; This function is called by:
 11212 ;;		_loop
 11213 ;;		_startAccell
 11214 ;;		_calcMotorPow
 11215 ;; This function uses a non-reentrant model
 11216 ;;
 11217                           
 11218                           	psect	text41
 11219  004A5C                     __ptext41:
 11220                           	callstack 0
 11221  004A5C                     _setMotor:
 11222                           	callstack 19
 11223  004A5C                     
 11224                           ;main.c: 367:     if (motorPower >= (40)) {
 11225  004A5C  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11226  004A5E  EF3A  F025         	goto	u9801
 11227  004A62  5019               	movf	(setMotor@motorPower+1)^0,w,c
 11228  004A64  E109               	bnz	u9800
 11229  004A66  0E28               	movlw	40
 11230  004A68  5C18               	subwf	setMotor@motorPower^0,w,c
 11231  004A6A  A0D8               	btfss	status,0,c
 11232  004A6C  EF3A  F025         	goto	u9801
 11233  004A70  EF3C  F025         	goto	u9800
 11234  004A74                     u9801:
 11235  004A74  EF5C  F025         	goto	l8835
 11236  004A78                     u9800:
 11237  004A78                     
 11238                           ;main.c: 368:         if (motorPower > (700)) {
 11239  004A78  BE19               	btfsc	(setMotor@motorPower+1)^0,7,c
 11240  004A7A  EF48  F025         	goto	u9811
 11241  004A7E  0EBD               	movlw	189
 11242  004A80  5C18               	subwf	setMotor@motorPower^0,w,c
 11243  004A82  0E02               	movlw	2
 11244  004A84  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11245  004A86  A0D8               	btfss	status,0,c
 11246  004A88  EF48  F025         	goto	u9811
 11247  004A8C  EF4A  F025         	goto	u9810
 11248  004A90                     u9811:
 11249  004A90  EF4E  F025         	goto	l8831
 11250  004A94                     u9810:
 11251  004A94                     
 11252                           ;main.c: 369:             motorPower = (700);
 11253  004A94  0E02               	movlw	2
 11254  004A96  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11255  004A98  0EBC               	movlw	188
 11256  004A9A  6E18               	movwf	setMotor@motorPower^0,c
 11257  004A9C                     l8831:
 11258                           
 11259                           ;main.c: 371:         PWM7_LoadDutyValue((uint16_t) (motorPower));
 11260  004A9C  C018  F014         	movff	setMotor@motorPower,PWM7_LoadDutyValue@dutyValue
 11261  004AA0  C019  F015         	movff	setMotor@motorPower+1,PWM7_LoadDutyValue@dutyValue+1
 11262  004AA4  EC8B  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11263  004AA8                     
 11264                           ;main.c: 372:         PWM8_LoadDutyValue(0);
 11265  004AA8  0E00               	movlw	0
 11266  004AAA  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11267  004AAC  0E00               	movlw	0
 11268  004AAE  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11269  004AB0  EC71  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11270                           
 11271                           ;main.c: 373:     } else if (motorPower <= -(40)) {
 11272  004AB4  EF9E  F025         	goto	l1375
 11273  004AB8                     l8835:
 11274  004AB8  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11275  004ABA  EF68  F025         	goto	u9821
 11276  004ABE  0ED9               	movlw	217
 11277  004AC0  5C18               	subwf	setMotor@motorPower^0,w,c
 11278  004AC2  0EFF               	movlw	255
 11279  004AC4  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11280  004AC6  B0D8               	btfsc	status,0,c
 11281  004AC8  EF68  F025         	goto	u9821
 11282  004ACC  EF6A  F025         	goto	u9820
 11283  004AD0                     u9821:
 11284  004AD0  EF92  F025         	goto	l8845
 11285  004AD4                     u9820:
 11286  004AD4                     
 11287                           ;main.c: 374:         if (motorPower < (-400)) {
 11288  004AD4  AE19               	btfss	(setMotor@motorPower+1)^0,7,c
 11289  004AD6  EF76  F025         	goto	u9831
 11290  004ADA  0E70               	movlw	112
 11291  004ADC  5C18               	subwf	setMotor@motorPower^0,w,c
 11292  004ADE  0EFE               	movlw	254
 11293  004AE0  5819               	subwfb	(setMotor@motorPower+1)^0,w,c
 11294  004AE2  B0D8               	btfsc	status,0,c
 11295  004AE4  EF76  F025         	goto	u9831
 11296  004AE8  EF78  F025         	goto	u9830
 11297  004AEC                     u9831:
 11298  004AEC  EF7C  F025         	goto	l8841
 11299  004AF0                     u9830:
 11300  004AF0                     
 11301                           ;main.c: 375:             motorPower = (-400);
 11302  004AF0  0EFE               	movlw	254
 11303  004AF2  6E19               	movwf	(setMotor@motorPower+1)^0,c
 11304  004AF4  0E70               	movlw	112
 11305  004AF6  6E18               	movwf	setMotor@motorPower^0,c
 11306  004AF8                     l8841:
 11307                           
 11308                           ;main.c: 377:         PWM7_LoadDutyValue(0);
 11309  004AF8  0E00               	movlw	0
 11310  004AFA  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11311  004AFC  0E00               	movlw	0
 11312  004AFE  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11313  004B00  EC8B  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11314  004B04                     
 11315                           ;main.c: 378:         PWM8_LoadDutyValue((uint16_t) (-motorPower));
 11316  004B04  C018  F01A         	movff	setMotor@motorPower,??_setMotor
 11317  004B08  C019  F01B         	movff	setMotor@motorPower+1,??_setMotor+1
 11318  004B0C  1E1A               	comf	??_setMotor^0,f,c
 11319  004B0E  1E1B               	comf	(??_setMotor+1)^0,f,c
 11320  004B10  4A1A               	infsnz	??_setMotor^0,f,c
 11321  004B12  2A1B               	incf	(??_setMotor+1)^0,f,c
 11322  004B14  C01A  F014         	movff	??_setMotor,PWM8_LoadDutyValue@dutyValue
 11323  004B18  C01B  F015         	movff	??_setMotor+1,PWM8_LoadDutyValue@dutyValue+1
 11324  004B1C  EC71  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11325                           
 11326                           ;main.c: 379:     } else {
 11327  004B20  EF9E  F025         	goto	l1375
 11328  004B24                     l8845:
 11329                           
 11330                           ;main.c: 381:         PWM7_LoadDutyValue(0);
 11331  004B24  0E00               	movlw	0
 11332  004B26  6E15               	movwf	(PWM7_LoadDutyValue@dutyValue+1)^0,c
 11333  004B28  0E00               	movlw	0
 11334  004B2A  6E14               	movwf	PWM7_LoadDutyValue@dutyValue^0,c
 11335  004B2C  EC8B  F02C         	call	_PWM7_LoadDutyValue	;wreg free
 11336                           
 11337                           ;main.c: 382:         PWM8_LoadDutyValue(0);
 11338  004B30  0E00               	movlw	0
 11339  004B32  6E15               	movwf	(PWM8_LoadDutyValue@dutyValue+1)^0,c
 11340  004B34  0E00               	movlw	0
 11341  004B36  6E14               	movwf	PWM8_LoadDutyValue@dutyValue^0,c
 11342  004B38  EC71  F02C         	call	_PWM8_LoadDutyValue	;wreg free
 11343  004B3C                     l1375:
 11344  004B3C  0012               	return		;funcret
 11345  004B3E                     __end_of_setMotor:
 11346                           	callstack 0
 11347                           
 11348 ;; *************** function _PWM8_LoadDutyValue *****************
 11349 ;; Defined at:
 11350 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 11351 ;; Parameters:    Size  Location     Type
 11352 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;		None
 11355 ;; Return value:  Size  Location     Type
 11356 ;;                  1    wreg      void 
 11357 ;; Registers used:
 11358 ;;		wreg, status,2, status,0
 11359 ;; Tracked objects:
 11360 ;;		On entry : 0/0
 11361 ;;		On exit  : 0/0
 11362 ;;		Unchanged: 0/0
 11363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11367 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11368 ;;Total ram usage:        4 bytes
 11369 ;; Hardware stack levels used: 1
 11370 ;; Hardware stack levels required when called: 8
 11371 ;; This function calls:
 11372 ;;		Nothing
 11373 ;; This function is called by:
 11374 ;;		_setMotor
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           	psect	text42
 11379  0058E2                     __ptext42:
 11380                           	callstack 0
 11381  0058E2                     _PWM8_LoadDutyValue:
 11382                           	callstack 19
 11383  0058E2                     
 11384                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11385  0058E2  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11386  0058E6  C015  F017         	movff	PWM8_LoadDutyValue@dutyValue+1,??_PWM8_LoadDutyValue+1
 11387  0058EA  90D8               	bcf	status,0,c
 11388  0058EC  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11389  0058EE  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11390  0058F0  90D8               	bcf	status,0,c
 11391  0058F2  3217               	rrcf	(??_PWM8_LoadDutyValue+1)^0,f,c
 11392  0058F4  3216               	rrcf	??_PWM8_LoadDutyValue^0,f,c
 11393  0058F6  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11394  0058F8  6E61               	movwf	97,c	;volatile
 11395                           
 11396                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 11397  0058FA  C014  F016         	movff	PWM8_LoadDutyValue@dutyValue,??_PWM8_LoadDutyValue
 11398  0058FE  0E03               	movlw	3
 11399  005900  1616               	andwf	??_PWM8_LoadDutyValue^0,f,c
 11400  005902  0E06               	movlw	6
 11401  005904  6E17               	movwf	(??_PWM8_LoadDutyValue+1)^0,c
 11402  005906                     u9745:
 11403  005906  90D8               	bcf	status,0,c
 11404  005908  3616               	rlcf	??_PWM8_LoadDutyValue^0,f,c
 11405  00590A  2E17               	decfsz	(??_PWM8_LoadDutyValue+1)^0,f,c
 11406  00590C  EF83  F02C         	goto	u9745
 11407  005910  5016               	movf	??_PWM8_LoadDutyValue^0,w,c
 11408  005912  6E60               	movwf	96,c	;volatile
 11409  005914  0012               	return		;funcret
 11410  005916                     __end_of_PWM8_LoadDutyValue:
 11411                           	callstack 0
 11412                           
 11413 ;; *************** function _PWM7_LoadDutyValue *****************
 11414 ;; Defined at:
 11415 ;;		line 74 in file "mcc_generated_files/pwm7.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  dutyValue       2   19[COMRAM] unsigned short 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;		None
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  1    wreg      void 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 0/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;Total ram usage:        4 bytes
 11434 ;; Hardware stack levels used: 1
 11435 ;; Hardware stack levels required when called: 8
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_setMotor
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text43
 11444  005916                     __ptext43:
 11445                           	callstack 0
 11446  005916                     _PWM7_LoadDutyValue:
 11447                           	callstack 19
 11448  005916                     
 11449                           ;mcc_generated_files/pwm7.c: 74:  void PWM7_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm7.c: 75:  {;mcc_generated_files/pwm7.c: 77:      PWM7DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 11450  005916  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11451  00591A  C015  F017         	movff	PWM7_LoadDutyValue@dutyValue+1,??_PWM7_LoadDutyValue+1
 11452  00591E  90D8               	bcf	status,0,c
 11453  005920  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11454  005922  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11455  005924  90D8               	bcf	status,0,c
 11456  005926  3217               	rrcf	(??_PWM7_LoadDutyValue+1)^0,f,c
 11457  005928  3216               	rrcf	??_PWM7_LoadDutyValue^0,f,c
 11458  00592A  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11459  00592C  6E65               	movwf	101,c	;volatile
 11460                           
 11461                           ;mcc_generated_files/pwm7.c: 80:      PWM7DCL = (dutyValue & 0x0003)<<6;
 11462  00592E  C014  F016         	movff	PWM7_LoadDutyValue@dutyValue,??_PWM7_LoadDutyValue
 11463  005932  0E03               	movlw	3
 11464  005934  1616               	andwf	??_PWM7_LoadDutyValue^0,f,c
 11465  005936  0E06               	movlw	6
 11466  005938  6E17               	movwf	(??_PWM7_LoadDutyValue+1)^0,c
 11467  00593A                     u9735:
 11468  00593A  90D8               	bcf	status,0,c
 11469  00593C  3616               	rlcf	??_PWM7_LoadDutyValue^0,f,c
 11470  00593E  2E17               	decfsz	(??_PWM7_LoadDutyValue+1)^0,f,c
 11471  005940  EF9D  F02C         	goto	u9735
 11472  005944  5016               	movf	??_PWM7_LoadDutyValue^0,w,c
 11473  005946  6E64               	movwf	100,c	;volatile
 11474  005948  0012               	return		;funcret
 11475  00594A                     __end_of_PWM7_LoadDutyValue:
 11476                           	callstack 0
 11477                           
 11478 ;; *************** function _actSpeed *****************
 11479 ;; Defined at:
 11480 ;;		line 66 in file "main.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;		None
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;  speed           2   35[COMRAM] short 
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  2   33[COMRAM] short 
 11487 ;; Registers used:
 11488 ;;		wreg, status,2, status,0, cstack
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;Total ram usage:        4 bytes
 11499 ;; Hardware stack levels used: 1
 11500 ;; Hardware stack levels required when called: 9
 11501 ;; This function calls:
 11502 ;;		___aldiv
 11503 ;; This function is called by:
 11504 ;;		_calcMotorPow
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text44
 11509  0050E4                     __ptext44:
 11510                           	callstack 0
 11511  0050E4                     _actSpeed:
 11512                           	callstack 19
 11513  0050E4                     
 11514                           ;main.c: 67:     int16_t speed = 0;
 11515  0050E4  0E00               	movlw	0
 11516  0050E6  6E25               	movwf	(actSpeed@speed+1)^0,c
 11517  0050E8  0E00               	movlw	0
 11518  0050EA  6E24               	movwf	actSpeed@speed^0,c
 11519  0050EC                     
 11520                           ;main.c: 68:     if (smtPeriod) {
 11521  0050EC  5046               	movf	_smtPeriod^0,w,c	;volatile
 11522  0050EE  1047               	iorwf	(_smtPeriod+1)^0,w,c	;volatile
 11523  0050F0  1048               	iorwf	(_smtPeriod+2)^0,w,c	;volatile
 11524  0050F2  1049               	iorwf	(_smtPeriod+3)^0,w,c	;volatile
 11525  0050F4  B4D8               	btfsc	status,2,c
 11526  0050F6  EF7F  F028         	goto	u6411
 11527  0050FA  EF81  F028         	goto	u6410
 11528  0050FE                     u6411:
 11529  0050FE  EFB7  F028         	goto	l6629
 11530  005102                     u6410:
 11531  005102                     
 11532                           ;main.c: 69:         if (CLC3CONbits.LC3OUT) {
 11533  005102  013C               	movlb	60	; () banked
 11534  005104  AB60               	btfss	96,5,b	;volatile
 11535  005106  EF87  F028         	goto	u6421
 11536  00510A  EF89  F028         	goto	u6420
 11537  00510E                     u6421:
 11538  00510E  EFA1  F028         	goto	l6627
 11539  005112                     u6420:
 11540  005112                     
 11541                           ; BSR set to: 60
 11542                           ;main.c: 70:             speed = (int16_t) ((int32_t) (500000 / (int32_t) smtPeriod));
 11543  005112  0E20               	movlw	32
 11544  005114  6E14               	movwf	___aldiv@dividend^0,c
 11545  005116  0EA1               	movlw	161
 11546  005118  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11547  00511A  0E07               	movlw	7
 11548  00511C  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11549  00511E  0E00               	movlw	0
 11550  005120  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11551  005122  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11552  005126  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11553  00512A  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11554  00512E  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11555  005132  EC25  F022         	call	___aldiv	;wreg free
 11556  005136  C014  F024         	movff	?___aldiv,actSpeed@speed
 11557  00513A  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11558                           
 11559                           ;main.c: 71:         } else {
 11560  00513E  EFB7  F028         	goto	l6629
 11561  005142                     l6627:
 11562                           
 11563                           ; BSR set to: 60
 11564                           ;main.c: 72:             speed = (int16_t) ((int32_t) (-500000 / (int32_t) smtPeriod));
 11565  005142  0EE0               	movlw	224
 11566  005144  6E14               	movwf	___aldiv@dividend^0,c
 11567  005146  0E5E               	movlw	94
 11568  005148  6E15               	movwf	(___aldiv@dividend+1)^0,c
 11569  00514A  0EF8               	movlw	248
 11570  00514C  6E16               	movwf	(___aldiv@dividend+2)^0,c
 11571  00514E  0EFF               	movlw	255
 11572  005150  6E17               	movwf	(___aldiv@dividend+3)^0,c
 11573  005152  C046  F018         	movff	_smtPeriod,___aldiv@divisor	;volatile
 11574  005156  C047  F019         	movff	_smtPeriod+1,___aldiv@divisor+1	;volatile
 11575  00515A  C048  F01A         	movff	_smtPeriod+2,___aldiv@divisor+2	;volatile
 11576  00515E  C049  F01B         	movff	_smtPeriod+3,___aldiv@divisor+3	;volatile
 11577  005162  EC25  F022         	call	___aldiv	;wreg free
 11578  005166  C014  F024         	movff	?___aldiv,actSpeed@speed
 11579  00516A  C015  F025         	movff	?___aldiv+1,actSpeed@speed+1
 11580  00516E                     l6629:
 11581                           
 11582                           ;main.c: 75:     return speed;
 11583  00516E  C024  F022         	movff	actSpeed@speed,?_actSpeed
 11584  005172  C025  F023         	movff	actSpeed@speed+1,?_actSpeed+1
 11585  005176  0012               	return		;funcret
 11586  005178                     __end_of_actSpeed:
 11587                           	callstack 0
 11588                           
 11589 ;; *************** function ___aldiv *****************
 11590 ;; Defined at:
 11591 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  dividend        4   19[COMRAM] long 
 11594 ;;  divisor         4   23[COMRAM] long 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;  quotient        4   29[COMRAM] long 
 11597 ;;  sign            1   28[COMRAM] unsigned char 
 11598 ;;  counter         1   27[COMRAM] unsigned char 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  4   19[COMRAM] long 
 11601 ;; Registers used:
 11602 ;;		wreg, status,2, status,0
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11608 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11609 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;Total ram usage:       14 bytes
 11613 ;; Hardware stack levels used: 1
 11614 ;; Hardware stack levels required when called: 8
 11615 ;; This function calls:
 11616 ;;		Nothing
 11617 ;; This function is called by:
 11618 ;;		_actSpeed
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           	psect	text45
 11623  00444A                     __ptext45:
 11624                           	callstack 0
 11625  00444A                     ___aldiv:
 11626                           	callstack 19
 11627  00444A  0E00               	movlw	0
 11628  00444C  6E1D               	movwf	___aldiv@sign^0,c
 11629  00444E  BE1B               	btfsc	(___aldiv@divisor+3)^0,7,c
 11630  004450  EF2E  F022         	goto	u6240
 11631  004454  EF2C  F022         	goto	u6241
 11632  004458                     u6241:
 11633  004458  EF38  F022         	goto	l6451
 11634  00445C                     u6240:
 11635  00445C  1E1B               	comf	(___aldiv@divisor+3)^0,f,c
 11636  00445E  1E1A               	comf	(___aldiv@divisor+2)^0,f,c
 11637  004460  1E19               	comf	(___aldiv@divisor+1)^0,f,c
 11638  004462  6C18               	negf	___aldiv@divisor^0,c
 11639  004464  0E00               	movlw	0
 11640  004466  2219               	addwfc	(___aldiv@divisor+1)^0,f,c
 11641  004468  221A               	addwfc	(___aldiv@divisor+2)^0,f,c
 11642  00446A  221B               	addwfc	(___aldiv@divisor+3)^0,f,c
 11643  00446C  0E01               	movlw	1
 11644  00446E  6E1D               	movwf	___aldiv@sign^0,c
 11645  004470                     l6451:
 11646  004470  BE17               	btfsc	(___aldiv@dividend+3)^0,7,c
 11647  004472  EF3F  F022         	goto	u6250
 11648  004476  EF3D  F022         	goto	u6251
 11649  00447A                     u6251:
 11650  00447A  EF49  F022         	goto	l6457
 11651  00447E                     u6250:
 11652  00447E  1E17               	comf	(___aldiv@dividend+3)^0,f,c
 11653  004480  1E16               	comf	(___aldiv@dividend+2)^0,f,c
 11654  004482  1E15               	comf	(___aldiv@dividend+1)^0,f,c
 11655  004484  6C14               	negf	___aldiv@dividend^0,c
 11656  004486  0E00               	movlw	0
 11657  004488  2215               	addwfc	(___aldiv@dividend+1)^0,f,c
 11658  00448A  2216               	addwfc	(___aldiv@dividend+2)^0,f,c
 11659  00448C  2217               	addwfc	(___aldiv@dividend+3)^0,f,c
 11660  00448E  0E01               	movlw	1
 11661  004490  1A1D               	xorwf	___aldiv@sign^0,f,c
 11662  004492                     l6457:
 11663  004492  0E00               	movlw	0
 11664  004494  6E1E               	movwf	___aldiv@quotient^0,c
 11665  004496  0E00               	movlw	0
 11666  004498  6E1F               	movwf	(___aldiv@quotient+1)^0,c
 11667  00449A  0E00               	movlw	0
 11668  00449C  6E20               	movwf	(___aldiv@quotient+2)^0,c
 11669  00449E  0E00               	movlw	0
 11670  0044A0  6E21               	movwf	(___aldiv@quotient+3)^0,c
 11671  0044A2  5018               	movf	___aldiv@divisor^0,w,c
 11672  0044A4  1019               	iorwf	(___aldiv@divisor+1)^0,w,c
 11673  0044A6  101A               	iorwf	(___aldiv@divisor+2)^0,w,c
 11674  0044A8  101B               	iorwf	(___aldiv@divisor+3)^0,w,c
 11675  0044AA  B4D8               	btfsc	status,2,c
 11676  0044AC  EF5A  F022         	goto	u6261
 11677  0044B0  EF5C  F022         	goto	u6260
 11678  0044B4                     u6261:
 11679  0044B4  EF92  F022         	goto	l6479
 11680  0044B8                     u6260:
 11681  0044B8  0E01               	movlw	1
 11682  0044BA  6E1C               	movwf	___aldiv@counter^0,c
 11683  0044BC  EF66  F022         	goto	l6465
 11684  0044C0                     l6463:
 11685  0044C0  90D8               	bcf	status,0,c
 11686  0044C2  3618               	rlcf	___aldiv@divisor^0,f,c
 11687  0044C4  3619               	rlcf	(___aldiv@divisor+1)^0,f,c
 11688  0044C6  361A               	rlcf	(___aldiv@divisor+2)^0,f,c
 11689  0044C8  361B               	rlcf	(___aldiv@divisor+3)^0,f,c
 11690  0044CA  2A1C               	incf	___aldiv@counter^0,f,c
 11691  0044CC                     l6465:
 11692  0044CC  AE1B               	btfss	(___aldiv@divisor+3)^0,7,c
 11693  0044CE  EF6B  F022         	goto	u6271
 11694  0044D2  EF6D  F022         	goto	u6270
 11695  0044D6                     u6271:
 11696  0044D6  EF60  F022         	goto	l6463
 11697  0044DA                     u6270:
 11698  0044DA                     l6467:
 11699  0044DA  90D8               	bcf	status,0,c
 11700  0044DC  361E               	rlcf	___aldiv@quotient^0,f,c
 11701  0044DE  361F               	rlcf	(___aldiv@quotient+1)^0,f,c
 11702  0044E0  3620               	rlcf	(___aldiv@quotient+2)^0,f,c
 11703  0044E2  3621               	rlcf	(___aldiv@quotient+3)^0,f,c
 11704  0044E4  5018               	movf	___aldiv@divisor^0,w,c
 11705  0044E6  5C14               	subwf	___aldiv@dividend^0,w,c
 11706  0044E8  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11707  0044EA  5815               	subwfb	(___aldiv@dividend+1)^0,w,c
 11708  0044EC  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11709  0044EE  5816               	subwfb	(___aldiv@dividend+2)^0,w,c
 11710  0044F0  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11711  0044F2  5817               	subwfb	(___aldiv@dividend+3)^0,w,c
 11712  0044F4  A0D8               	btfss	status,0,c
 11713  0044F6  EF7F  F022         	goto	u6281
 11714  0044FA  EF81  F022         	goto	u6280
 11715  0044FE                     u6281:
 11716  0044FE  EF8A  F022         	goto	l6475
 11717  004502                     u6280:
 11718  004502  5018               	movf	___aldiv@divisor^0,w,c
 11719  004504  5E14               	subwf	___aldiv@dividend^0,f,c
 11720  004506  5019               	movf	(___aldiv@divisor+1)^0,w,c
 11721  004508  5A15               	subwfb	(___aldiv@dividend+1)^0,f,c
 11722  00450A  501A               	movf	(___aldiv@divisor+2)^0,w,c
 11723  00450C  5A16               	subwfb	(___aldiv@dividend+2)^0,f,c
 11724  00450E  501B               	movf	(___aldiv@divisor+3)^0,w,c
 11725  004510  5A17               	subwfb	(___aldiv@dividend+3)^0,f,c
 11726  004512  801E               	bsf	___aldiv@quotient^0,0,c
 11727  004514                     l6475:
 11728  004514  90D8               	bcf	status,0,c
 11729  004516  321B               	rrcf	(___aldiv@divisor+3)^0,f,c
 11730  004518  321A               	rrcf	(___aldiv@divisor+2)^0,f,c
 11731  00451A  3219               	rrcf	(___aldiv@divisor+1)^0,f,c
 11732  00451C  3218               	rrcf	___aldiv@divisor^0,f,c
 11733  00451E  2E1C               	decfsz	___aldiv@counter^0,f,c
 11734  004520  EF6D  F022         	goto	l6467
 11735  004524                     l6479:
 11736  004524  501D               	movf	___aldiv@sign^0,w,c
 11737  004526  B4D8               	btfsc	status,2,c
 11738  004528  EF98  F022         	goto	u6291
 11739  00452C  EF9A  F022         	goto	u6290
 11740  004530                     u6291:
 11741  004530  EFA2  F022         	goto	l6483
 11742  004534                     u6290:
 11743  004534  1E21               	comf	(___aldiv@quotient+3)^0,f,c
 11744  004536  1E20               	comf	(___aldiv@quotient+2)^0,f,c
 11745  004538  1E1F               	comf	(___aldiv@quotient+1)^0,f,c
 11746  00453A  6C1E               	negf	___aldiv@quotient^0,c
 11747  00453C  0E00               	movlw	0
 11748  00453E  221F               	addwfc	(___aldiv@quotient+1)^0,f,c
 11749  004540  2220               	addwfc	(___aldiv@quotient+2)^0,f,c
 11750  004542  2221               	addwfc	(___aldiv@quotient+3)^0,f,c
 11751  004544                     l6483:
 11752  004544  C01E  F014         	movff	___aldiv@quotient,?___aldiv
 11753  004548  C01F  F015         	movff	___aldiv@quotient+1,?___aldiv+1
 11754  00454C  C020  F016         	movff	___aldiv@quotient+2,?___aldiv+2
 11755  004550  C021  F017         	movff	___aldiv@quotient+3,?___aldiv+3
 11756  004554  0012               	return		;funcret
 11757  004556                     __end_of___aldiv:
 11758                           	callstack 0
 11759                           
 11760 ;; *************** function ___xxtofl *****************
 11761 ;; Defined at:
 11762 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  sign            1    wreg     unsigned char 
 11765 ;;  val             4   27[COMRAM] long 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  sign            1   35[COMRAM] unsigned char 
 11768 ;;  arg             4   37[COMRAM] unsigned long 
 11769 ;;  exp             1   36[COMRAM] unsigned char 
 11770 ;; Return value:  Size  Location     Type
 11771 ;;                  4   27[COMRAM] unsigned char 
 11772 ;; Registers used:
 11773 ;;		wreg, status,2, status,0
 11774 ;; Tracked objects:
 11775 ;;		On entry : 0/0
 11776 ;;		On exit  : 0/0
 11777 ;;		Unchanged: 0/0
 11778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;Total ram usage:       14 bytes
 11784 ;; Hardware stack levels used: 1
 11785 ;; Hardware stack levels required when called: 8
 11786 ;; This function calls:
 11787 ;;		Nothing
 11788 ;; This function is called by:
 11789 ;;		_loop
 11790 ;;		_checkBatt
 11791 ;;		_startAccell
 11792 ;;		_calcSpeed
 11793 ;;		_calcMotorPow
 11794 ;;		_setSteering
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text46
 11799  003BA6                     __ptext46:
 11800                           	callstack 0
 11801  003BA6                     ___xxtofl:
 11802                           	callstack 19
 11803                           
 11804                           ;incstack = 0
 11805                           ;___xxtofl@sign stored from wreg
 11806  003BA6  6E24               	movwf	___xxtofl@sign^0,c
 11807  003BA8  5024               	movf	___xxtofl@sign^0,w,c
 11808  003BAA  B4D8               	btfsc	status,2,c
 11809  003BAC  EFDA  F01D         	goto	u9521
 11810  003BB0  EFDC  F01D         	goto	u9520
 11811  003BB4                     u9521:
 11812  003BB4  EFFE  F01D         	goto	l2050
 11813  003BB8                     u9520:
 11814  003BB8  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11815  003BBA  EFE3  F01D         	goto	u9530
 11816  003BBE  EFE1  F01D         	goto	u9531
 11817  003BC2                     u9531:
 11818  003BC2  EFFE  F01D         	goto	l2050
 11819  003BC6                     u9530:
 11820  003BC6  C01C  F020         	movff	___xxtofl@val,??___xxtofl
 11821  003BCA  C01D  F021         	movff	___xxtofl@val+1,??___xxtofl+1
 11822  003BCE  C01E  F022         	movff	___xxtofl@val+2,??___xxtofl+2
 11823  003BD2  C01F  F023         	movff	___xxtofl@val+3,??___xxtofl+3
 11824  003BD6  1E20               	comf	??___xxtofl^0,f,c
 11825  003BD8  1E21               	comf	(??___xxtofl+1)^0,f,c
 11826  003BDA  1E22               	comf	(??___xxtofl+2)^0,f,c
 11827  003BDC  1E23               	comf	(??___xxtofl+3)^0,f,c
 11828  003BDE  2A20               	incf	??___xxtofl^0,f,c
 11829  003BE0  0E00               	movlw	0
 11830  003BE2  2221               	addwfc	(??___xxtofl+1)^0,f,c
 11831  003BE4  2222               	addwfc	(??___xxtofl+2)^0,f,c
 11832  003BE6  2223               	addwfc	(??___xxtofl+3)^0,f,c
 11833  003BE8  C020  F026         	movff	??___xxtofl,___xxtofl@arg
 11834  003BEC  C021  F027         	movff	??___xxtofl+1,___xxtofl@arg+1
 11835  003BF0  C022  F028         	movff	??___xxtofl+2,___xxtofl@arg+2
 11836  003BF4  C023  F029         	movff	??___xxtofl+3,___xxtofl@arg+3
 11837  003BF8  EF06  F01E         	goto	l8651
 11838  003BFC                     l2050:
 11839  003BFC  C01C  F026         	movff	___xxtofl@val,___xxtofl@arg
 11840  003C00  C01D  F027         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11841  003C04  C01E  F028         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11842  003C08  C01F  F029         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11843  003C0C                     l8651:
 11844  003C0C  501C               	movf	___xxtofl@val^0,w,c
 11845  003C0E  101D               	iorwf	(___xxtofl@val+1)^0,w,c
 11846  003C10  101E               	iorwf	(___xxtofl@val+2)^0,w,c
 11847  003C12  101F               	iorwf	(___xxtofl@val+3)^0,w,c
 11848  003C14  A4D8               	btfss	status,2,c
 11849  003C16  EF0F  F01E         	goto	u9541
 11850  003C1A  EF11  F01E         	goto	u9540
 11851  003C1E                     u9541:
 11852  003C1E  EF1B  F01E         	goto	l8657
 11853  003C22                     u9540:
 11854  003C22  0E00               	movlw	0
 11855  003C24  6E1C               	movwf	?___xxtofl^0,c
 11856  003C26  0E00               	movlw	0
 11857  003C28  6E1D               	movwf	(?___xxtofl+1)^0,c
 11858  003C2A  0E00               	movlw	0
 11859  003C2C  6E1E               	movwf	(?___xxtofl+2)^0,c
 11860  003C2E  0E00               	movlw	0
 11861  003C30  6E1F               	movwf	(?___xxtofl+3)^0,c
 11862  003C32  EFAC  F01E         	goto	l2053
 11863  003C36                     l8657:
 11864  003C36  0E96               	movlw	150
 11865  003C38  6E25               	movwf	___xxtofl@exp^0,c
 11866  003C3A  EF25  F01E         	goto	l8661
 11867  003C3E                     l8659:
 11868  003C3E  2A25               	incf	___xxtofl@exp^0,f,c
 11869  003C40  90D8               	bcf	status,0,c
 11870  003C42  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11871  003C44  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11872  003C46  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11873  003C48  3226               	rrcf	___xxtofl@arg^0,f,c
 11874  003C4A                     l8661:
 11875  003C4A  0E00               	movlw	0
 11876  003C4C  1426               	andwf	___xxtofl@arg^0,w,c
 11877  003C4E  6E20               	movwf	??___xxtofl^0,c
 11878  003C50  0E00               	movlw	0
 11879  003C52  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11880  003C54  6E21               	movwf	(??___xxtofl+1)^0,c
 11881  003C56  0E00               	movlw	0
 11882  003C58  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11883  003C5A  6E22               	movwf	(??___xxtofl+2)^0,c
 11884  003C5C  0EFE               	movlw	254
 11885  003C5E  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11886  003C60  6E23               	movwf	(??___xxtofl+3)^0,c
 11887  003C62  5020               	movf	??___xxtofl^0,w,c
 11888  003C64  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11889  003C66  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11890  003C68  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11891  003C6A  A4D8               	btfss	status,2,c
 11892  003C6C  EF3A  F01E         	goto	u9551
 11893  003C70  EF3C  F01E         	goto	u9550
 11894  003C74                     u9551:
 11895  003C74  EF1F  F01E         	goto	l8659
 11896  003C78                     u9550:
 11897  003C78  EF4A  F01E         	goto	l2057
 11898  003C7C                     l8663:
 11899  003C7C  2A25               	incf	___xxtofl@exp^0,f,c
 11900  003C7E  0E01               	movlw	1
 11901  003C80  2626               	addwf	___xxtofl@arg^0,f,c
 11902  003C82  0E00               	movlw	0
 11903  003C84  2227               	addwfc	(___xxtofl@arg+1)^0,f,c
 11904  003C86  2228               	addwfc	(___xxtofl@arg+2)^0,f,c
 11905  003C88  2229               	addwfc	(___xxtofl@arg+3)^0,f,c
 11906  003C8A  90D8               	bcf	status,0,c
 11907  003C8C  3229               	rrcf	(___xxtofl@arg+3)^0,f,c
 11908  003C8E  3228               	rrcf	(___xxtofl@arg+2)^0,f,c
 11909  003C90  3227               	rrcf	(___xxtofl@arg+1)^0,f,c
 11910  003C92  3226               	rrcf	___xxtofl@arg^0,f,c
 11911  003C94                     l2057:
 11912  003C94  0E00               	movlw	0
 11913  003C96  1426               	andwf	___xxtofl@arg^0,w,c
 11914  003C98  6E20               	movwf	??___xxtofl^0,c
 11915  003C9A  0E00               	movlw	0
 11916  003C9C  1427               	andwf	(___xxtofl@arg+1)^0,w,c
 11917  003C9E  6E21               	movwf	(??___xxtofl+1)^0,c
 11918  003CA0  0E00               	movlw	0
 11919  003CA2  1428               	andwf	(___xxtofl@arg+2)^0,w,c
 11920  003CA4  6E22               	movwf	(??___xxtofl+2)^0,c
 11921  003CA6  0EFF               	movlw	255
 11922  003CA8  1429               	andwf	(___xxtofl@arg+3)^0,w,c
 11923  003CAA  6E23               	movwf	(??___xxtofl+3)^0,c
 11924  003CAC  5020               	movf	??___xxtofl^0,w,c
 11925  003CAE  1021               	iorwf	(??___xxtofl+1)^0,w,c
 11926  003CB0  1022               	iorwf	(??___xxtofl+2)^0,w,c
 11927  003CB2  1023               	iorwf	(??___xxtofl+3)^0,w,c
 11928  003CB4  A4D8               	btfss	status,2,c
 11929  003CB6  EF5F  F01E         	goto	u9561
 11930  003CBA  EF61  F01E         	goto	u9560
 11931  003CBE                     u9561:
 11932  003CBE  EF3E  F01E         	goto	l8663
 11933  003CC2                     u9560:
 11934  003CC2  EF69  F01E         	goto	l8671
 11935  003CC6                     l8669:
 11936  003CC6  0625               	decf	___xxtofl@exp^0,f,c
 11937  003CC8  90D8               	bcf	status,0,c
 11938  003CCA  3626               	rlcf	___xxtofl@arg^0,f,c
 11939  003CCC  3627               	rlcf	(___xxtofl@arg+1)^0,f,c
 11940  003CCE  3628               	rlcf	(___xxtofl@arg+2)^0,f,c
 11941  003CD0  3629               	rlcf	(___xxtofl@arg+3)^0,f,c
 11942  003CD2                     l8671:
 11943  003CD2  BE28               	btfsc	(___xxtofl@arg+2)^0,7,c
 11944  003CD4  EF6E  F01E         	goto	u9571
 11945  003CD8  EF70  F01E         	goto	u9570
 11946  003CDC                     u9571:
 11947  003CDC  EF78  F01E         	goto	l2064
 11948  003CE0                     u9570:
 11949  003CE0  0E02               	movlw	2
 11950  003CE2  6025               	cpfslt	___xxtofl@exp^0,c
 11951  003CE4  EF76  F01E         	goto	u9581
 11952  003CE8  EF78  F01E         	goto	u9580
 11953  003CEC                     u9581:
 11954  003CEC  EF63  F01E         	goto	l8669
 11955  003CF0                     u9580:
 11956  003CF0                     l2064:
 11957  003CF0  B025               	btfsc	___xxtofl@exp^0,0,c
 11958  003CF2  EF7D  F01E         	goto	u9591
 11959  003CF6  EF7F  F01E         	goto	u9590
 11960  003CFA                     u9591:
 11961  003CFA  EF80  F01E         	goto	l8677
 11962  003CFE                     u9590:
 11963  003CFE  9E28               	bcf	(___xxtofl@arg+2)^0,7,c
 11964  003D00                     l8677:
 11965  003D00  90D8               	bcf	status,0,c
 11966  003D02  3225               	rrcf	___xxtofl@exp^0,f,c
 11967  003D04  C025  F020         	movff	___xxtofl@exp,??___xxtofl
 11968  003D08  6A21               	clrf	(??___xxtofl+1)^0,c
 11969  003D0A  6A22               	clrf	(??___xxtofl+2)^0,c
 11970  003D0C  6A23               	clrf	(??___xxtofl+3)^0,c
 11971  003D0E  C020  F023         	movff	??___xxtofl,??___xxtofl+3
 11972  003D12  6A22               	clrf	(??___xxtofl+2)^0,c
 11973  003D14  6A21               	clrf	(??___xxtofl+1)^0,c
 11974  003D16  6A20               	clrf	??___xxtofl^0,c
 11975  003D18  5020               	movf	??___xxtofl^0,w,c
 11976  003D1A  1226               	iorwf	___xxtofl@arg^0,f,c
 11977  003D1C  5021               	movf	(??___xxtofl+1)^0,w,c
 11978  003D1E  1227               	iorwf	(___xxtofl@arg+1)^0,f,c
 11979  003D20  5022               	movf	(??___xxtofl+2)^0,w,c
 11980  003D22  1228               	iorwf	(___xxtofl@arg+2)^0,f,c
 11981  003D24  5023               	movf	(??___xxtofl+3)^0,w,c
 11982  003D26  1229               	iorwf	(___xxtofl@arg+3)^0,f,c
 11983  003D28  5024               	movf	___xxtofl@sign^0,w,c
 11984  003D2A  B4D8               	btfsc	status,2,c
 11985  003D2C  EF9A  F01E         	goto	u9601
 11986  003D30  EF9C  F01E         	goto	u9600
 11987  003D34                     u9601:
 11988  003D34  EFA4  F01E         	goto	l8687
 11989  003D38                     u9600:
 11990  003D38  BE1F               	btfsc	(___xxtofl@val+3)^0,7,c
 11991  003D3A  EFA3  F01E         	goto	u9610
 11992  003D3E  EFA1  F01E         	goto	u9611
 11993  003D42                     u9611:
 11994  003D42  EFA4  F01E         	goto	l8687
 11995  003D46                     u9610:
 11996  003D46  8E29               	bsf	(___xxtofl@arg+3)^0,7,c
 11997  003D48                     l8687:
 11998  003D48  C026  F01C         	movff	___xxtofl@arg,?___xxtofl
 11999  003D4C  C027  F01D         	movff	___xxtofl@arg+1,?___xxtofl+1
 12000  003D50  C028  F01E         	movff	___xxtofl@arg+2,?___xxtofl+2
 12001  003D54  C029  F01F         	movff	___xxtofl@arg+3,?___xxtofl+3
 12002  003D58                     l2053:
 12003  003D58  0012               	return		;funcret
 12004  003D5A                     __end_of___xxtofl:
 12005                           	callstack 0
 12006                           
 12007 ;; *************** function ___fltol *****************
 12008 ;; Defined at:
 12009 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;  f1              4   25[BANK0 ] unsigned char 
 12012 ;; Auto vars:     Size  Location     Type
 12013 ;;  exp1            1   34[BANK0 ] unsigned char 
 12014 ;;  sign1           1   33[BANK0 ] unsigned char 
 12015 ;; Return value:  Size  Location     Type
 12016 ;;                  4   25[BANK0 ] long 
 12017 ;; Registers used:
 12018 ;;		wreg, status,2, status,0
 12019 ;; Tracked objects:
 12020 ;;		On entry : 0/0
 12021 ;;		On exit  : 0/0
 12022 ;;		Unchanged: 0/0
 12023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12024 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;Total ram usage:       10 bytes
 12029 ;; Hardware stack levels used: 1
 12030 ;; Hardware stack levels required when called: 8
 12031 ;; This function calls:
 12032 ;;		Nothing
 12033 ;; This function is called by:
 12034 ;;		_startAccell
 12035 ;;		_calcSpeed
 12036 ;;		_calcMotorPow
 12037 ;;		_setSteering
 12038 ;;		_efgtoa
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           
 12042                           	psect	text47
 12043  004556                     __ptext47:
 12044                           	callstack 0
 12045  004556                     ___fltol:
 12046                           	callstack 19
 12047  004556  0100               	movlb	0	; () banked
 12048  004558  357B               	rlcf	(___fltol@f1+2)& (0+255),w,b
 12049  00455A  357C               	rlcf	(___fltol@f1+3)& (0+255),w,b
 12050  00455C  6F82               	movwf	___fltol@exp1& (0+255),b
 12051  00455E  5182               	movf	___fltol@exp1& (0+255),w,b
 12052  004560  A4D8               	btfss	status,2,c
 12053  004562  EFB5  F022         	goto	u8421
 12054  004566  EFB7  F022         	goto	u8420
 12055  00456A                     u8421:
 12056  00456A  EFC1  F022         	goto	l8123
 12057  00456E                     u8420:
 12058  00456E                     l8119:
 12059                           
 12060                           ; BSR set to: 0
 12061  00456E  0E00               	movlw	0
 12062  004570  6F79               	movwf	?___fltol& (0+255),b
 12063  004572  0E00               	movlw	0
 12064  004574  6F7A               	movwf	(?___fltol+1)& (0+255),b
 12065  004576  0E00               	movlw	0
 12066  004578  6F7B               	movwf	(?___fltol+2)& (0+255),b
 12067  00457A  0E00               	movlw	0
 12068  00457C  6F7C               	movwf	(?___fltol+3)& (0+255),b
 12069  00457E  EF2E  F023         	goto	l1692
 12070  004582                     l8123:
 12071                           
 12072                           ; BSR set to: 0
 12073  004582  C079  F07D         	movff	___fltol@f1,??___fltol
 12074  004586  C07A  F07E         	movff	___fltol@f1+1,??___fltol+1
 12075  00458A  C07B  F07F         	movff	___fltol@f1+2,??___fltol+2
 12076  00458E  C07C  F080         	movff	___fltol@f1+3,??___fltol+3
 12077  004592  0E20               	movlw	32
 12078  004594  EFD1  F022         	goto	u8430
 12079  004598                     u8435:
 12080  004598  90D8               	bcf	status,0,c
 12081  00459A  3380               	rrcf	(??___fltol+3)& (0+255),f,b
 12082  00459C  337F               	rrcf	(??___fltol+2)& (0+255),f,b
 12083  00459E  337E               	rrcf	(??___fltol+1)& (0+255),f,b
 12084  0045A0  337D               	rrcf	??___fltol& (0+255),f,b
 12085  0045A2                     u8430:
 12086  0045A2  2EE8               	decfsz	wreg,f,c
 12087  0045A4  EFCC  F022         	goto	u8435
 12088  0045A8  517D               	movf	??___fltol& (0+255),w,b
 12089  0045AA  6F81               	movwf	___fltol@sign1& (0+255),b
 12090  0045AC                     
 12091                           ; BSR set to: 0
 12092  0045AC  8F7B               	bsf	(___fltol@f1+2)& (0+255),7,b
 12093  0045AE                     
 12094                           ; BSR set to: 0
 12095  0045AE  0EFF               	movlw	255
 12096  0045B0  1779               	andwf	___fltol@f1& (0+255),f,b
 12097  0045B2  0EFF               	movlw	255
 12098  0045B4  177A               	andwf	(___fltol@f1+1)& (0+255),f,b
 12099  0045B6  0EFF               	movlw	255
 12100  0045B8  177B               	andwf	(___fltol@f1+2)& (0+255),f,b
 12101  0045BA  0E00               	movlw	0
 12102  0045BC  177C               	andwf	(___fltol@f1+3)& (0+255),f,b
 12103  0045BE                     
 12104                           ; BSR set to: 0
 12105  0045BE  0E96               	movlw	150
 12106  0045C0  5F82               	subwf	___fltol@exp1& (0+255),f,b
 12107  0045C2                     
 12108                           ; BSR set to: 0
 12109  0045C2  BF82               	btfsc	___fltol@exp1& (0+255),7,b
 12110  0045C4  EFE8  F022         	goto	u8440
 12111  0045C8  EFE6  F022         	goto	u8441
 12112  0045CC                     u8441:
 12113  0045CC  EFFE  F022         	goto	l8143
 12114  0045D0                     u8440:
 12115  0045D0                     
 12116                           ; BSR set to: 0
 12117  0045D0  5182               	movf	___fltol@exp1& (0+255),w,b
 12118  0045D2  0A80               	xorlw	128
 12119  0045D4  0F97               	addlw	151
 12120  0045D6  B0D8               	btfsc	status,0,c
 12121  0045D8  EFF0  F022         	goto	u8451
 12122  0045DC  EFF2  F022         	goto	u8450
 12123  0045E0                     u8451:
 12124  0045E0  EFF4  F022         	goto	l8139
 12125  0045E4                     u8450:
 12126  0045E4  EFB7  F022         	goto	l8119
 12127  0045E8                     l8139:
 12128                           
 12129                           ; BSR set to: 0
 12130  0045E8  90D8               	bcf	status,0,c
 12131  0045EA  337C               	rrcf	(___fltol@f1+3)& (0+255),f,b
 12132  0045EC  337B               	rrcf	(___fltol@f1+2)& (0+255),f,b
 12133  0045EE  337A               	rrcf	(___fltol@f1+1)& (0+255),f,b
 12134  0045F0  3379               	rrcf	___fltol@f1& (0+255),f,b
 12135  0045F2                     
 12136                           ; BSR set to: 0
 12137  0045F2  3F82               	incfsz	___fltol@exp1& (0+255),f,b
 12138  0045F4  EFF4  F022         	goto	l8139
 12139  0045F8  EF16  F023         	goto	l8153
 12140  0045FC                     l8143:
 12141                           
 12142                           ; BSR set to: 0
 12143  0045FC  0E1F               	movlw	31
 12144  0045FE  6582               	cpfsgt	___fltol@exp1& (0+255),b
 12145  004600  EF04  F023         	goto	u8461
 12146  004604  EF06  F023         	goto	u8460
 12147  004608                     u8461:
 12148  004608  EF0E  F023         	goto	l8151
 12149  00460C                     u8460:
 12150  00460C  EFB7  F022         	goto	l8119
 12151  004610                     l8149:
 12152                           
 12153                           ; BSR set to: 0
 12154  004610  90D8               	bcf	status,0,c
 12155  004612  3779               	rlcf	___fltol@f1& (0+255),f,b
 12156  004614  377A               	rlcf	(___fltol@f1+1)& (0+255),f,b
 12157  004616  377B               	rlcf	(___fltol@f1+2)& (0+255),f,b
 12158  004618  377C               	rlcf	(___fltol@f1+3)& (0+255),f,b
 12159  00461A  0782               	decf	___fltol@exp1& (0+255),f,b
 12160  00461C                     l8151:
 12161                           
 12162                           ; BSR set to: 0
 12163  00461C  5182               	movf	___fltol@exp1& (0+255),w,b
 12164  00461E  A4D8               	btfss	status,2,c
 12165  004620  EF14  F023         	goto	u8471
 12166  004624  EF16  F023         	goto	u8470
 12167  004628                     u8471:
 12168  004628  EF08  F023         	goto	l8149
 12169  00462C                     u8470:
 12170  00462C                     l8153:
 12171                           
 12172                           ; BSR set to: 0
 12173  00462C  5181               	movf	___fltol@sign1& (0+255),w,b
 12174  00462E  B4D8               	btfsc	status,2,c
 12175  004630  EF1C  F023         	goto	u8481
 12176  004634  EF1E  F023         	goto	u8480
 12177  004638                     u8481:
 12178  004638  EF26  F023         	goto	l8157
 12179  00463C                     u8480:
 12180  00463C                     
 12181                           ; BSR set to: 0
 12182  00463C  1F7C               	comf	(___fltol@f1+3)& (0+255),f,b
 12183  00463E  1F7B               	comf	(___fltol@f1+2)& (0+255),f,b
 12184  004640  1F7A               	comf	(___fltol@f1+1)& (0+255),f,b
 12185  004642  6D79               	negf	___fltol@f1& (0+255),b
 12186  004644  0E00               	movlw	0
 12187  004646  237A               	addwfc	(___fltol@f1+1)& (0+255),f,b
 12188  004648  237B               	addwfc	(___fltol@f1+2)& (0+255),f,b
 12189  00464A  237C               	addwfc	(___fltol@f1+3)& (0+255),f,b
 12190  00464C                     l8157:
 12191                           
 12192                           ; BSR set to: 0
 12193  00464C  C079  F079         	movff	___fltol@f1,?___fltol
 12194  004650  C07A  F07A         	movff	___fltol@f1+1,?___fltol+1
 12195  004654  C07B  F07B         	movff	___fltol@f1+2,?___fltol+2
 12196  004658  C07C  F07C         	movff	___fltol@f1+3,?___fltol+3
 12197  00465C                     l1692:
 12198                           
 12199                           ; BSR set to: 0
 12200  00465C  0012               	return		;funcret
 12201  00465E                     __end_of___fltol:
 12202                           	callstack 0
 12203                           
 12204 ;; *************** function ___flmul *****************
 12205 ;; Defined at:
 12206 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;  b               4   41[COMRAM] long 
 12209 ;;  a               4   45[COMRAM] long 
 12210 ;; Auto vars:     Size  Location     Type
 12211 ;;  prod            4    7[BANK0 ] struct .
 12212 ;;  grs             4    2[BANK0 ] unsigned long 
 12213 ;;  temp            2   11[BANK0 ] struct .
 12214 ;;  bexp            1    6[BANK0 ] unsigned char 
 12215 ;;  aexp            1    1[BANK0 ] unsigned char 
 12216 ;;  sign            1    0[BANK0 ] unsigned char 
 12217 ;; Return value:  Size  Location     Type
 12218 ;;                  4   41[COMRAM] unsigned char 
 12219 ;; Registers used:
 12220 ;;		wreg, status,2, status,0, prodl, prodh
 12221 ;; Tracked objects:
 12222 ;;		On entry : 0/0
 12223 ;;		On exit  : 0/0
 12224 ;;		Unchanged: 0/0
 12225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12226 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12230 ;;Total ram usage:       25 bytes
 12231 ;; Hardware stack levels used: 1
 12232 ;; Hardware stack levels required when called: 8
 12233 ;; This function calls:
 12234 ;;		Nothing
 12235 ;; This function is called by:
 12236 ;;		_startAccell
 12237 ;;		_calcSpeed
 12238 ;;		_calcMotorPow
 12239 ;;		_efgtoa
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text48
 12244  0026E0                     __ptext48:
 12245                           	callstack 0
 12246  0026E0                     ___flmul:
 12247                           	callstack 16
 12248  0026E0  502D               	movf	(___flmul@b+3)^0,w,c
 12249  0026E2  0B80               	andlw	128
 12250  0026E4  0100               	movlb	0	; () banked
 12251  0026E6  6F60               	movwf	___flmul@sign& (0+255),b
 12252  0026E8  502D               	movf	(___flmul@b+3)^0,w,c
 12253  0026EA  242D               	addwf	(___flmul@b+3)^0,w,c
 12254  0026EC  6F66               	movwf	___flmul@bexp& (0+255),b
 12255  0026EE                     
 12256                           ; BSR set to: 0
 12257  0026EE  AE2C               	btfss	(___flmul@b+2)^0,7,c
 12258  0026F0  EF7C  F013         	goto	u8021
 12259  0026F4  EF7E  F013         	goto	u8020
 12260  0026F8                     u8021:
 12261  0026F8  EF7F  F013         	goto	l7861
 12262  0026FC                     u8020:
 12263  0026FC                     
 12264                           ; BSR set to: 0
 12265  0026FC  8166               	bsf	___flmul@bexp& (0+255),0,b
 12266  0026FE                     l7861:
 12267                           
 12268                           ; BSR set to: 0
 12269  0026FE  5166               	movf	___flmul@bexp& (0+255),w,b
 12270  002700  B4D8               	btfsc	status,2,c
 12271  002702  EF85  F013         	goto	u8031
 12272  002706  EF87  F013         	goto	u8030
 12273  00270A                     u8031:
 12274  00270A  EF9A  F013         	goto	l7869
 12275  00270E                     u8030:
 12276  00270E                     
 12277                           ; BSR set to: 0
 12278  00270E  2966               	incf	___flmul@bexp& (0+255),w,b
 12279  002710  A4D8               	btfss	status,2,c
 12280  002712  EF8D  F013         	goto	u8041
 12281  002716  EF8F  F013         	goto	u8040
 12282  00271A                     u8041:
 12283  00271A  EF97  F013         	goto	l7867
 12284  00271E                     u8040:
 12285  00271E                     
 12286                           ; BSR set to: 0
 12287  00271E  0E00               	movlw	0
 12288  002720  6E2A               	movwf	___flmul@b^0,c
 12289  002722  0E00               	movlw	0
 12290  002724  6E2B               	movwf	(___flmul@b+1)^0,c
 12291  002726  0E00               	movlw	0
 12292  002728  6E2C               	movwf	(___flmul@b+2)^0,c
 12293  00272A  0E00               	movlw	0
 12294  00272C  6E2D               	movwf	(___flmul@b+3)^0,c
 12295  00272E                     l7867:
 12296                           
 12297                           ; BSR set to: 0
 12298  00272E  8E2C               	bsf	(___flmul@b+2)^0,7,c
 12299  002730  EFA2  F013         	goto	l7871
 12300  002734                     l7869:
 12301                           
 12302                           ; BSR set to: 0
 12303  002734  0E00               	movlw	0
 12304  002736  6E2A               	movwf	___flmul@b^0,c
 12305  002738  0E00               	movlw	0
 12306  00273A  6E2B               	movwf	(___flmul@b+1)^0,c
 12307  00273C  0E00               	movlw	0
 12308  00273E  6E2C               	movwf	(___flmul@b+2)^0,c
 12309  002740  0E00               	movlw	0
 12310  002742  6E2D               	movwf	(___flmul@b+3)^0,c
 12311  002744                     l7871:
 12312                           
 12313                           ; BSR set to: 0
 12314  002744  5031               	movf	(___flmul@a+3)^0,w,c
 12315  002746  0B80               	andlw	128
 12316  002748  1B60               	xorwf	___flmul@sign& (0+255),f,b
 12317  00274A                     
 12318                           ; BSR set to: 0
 12319  00274A  5031               	movf	(___flmul@a+3)^0,w,c
 12320  00274C  2431               	addwf	(___flmul@a+3)^0,w,c
 12321  00274E  6F61               	movwf	___flmul@aexp& (0+255),b
 12322  002750                     
 12323                           ; BSR set to: 0
 12324  002750  AE30               	btfss	(___flmul@a+2)^0,7,c
 12325  002752  EFAD  F013         	goto	u8051
 12326  002756  EFAF  F013         	goto	u8050
 12327  00275A                     u8051:
 12328  00275A  EFB0  F013         	goto	l7879
 12329  00275E                     u8050:
 12330  00275E                     
 12331                           ; BSR set to: 0
 12332  00275E  8161               	bsf	___flmul@aexp& (0+255),0,b
 12333  002760                     l7879:
 12334                           
 12335                           ; BSR set to: 0
 12336  002760  5161               	movf	___flmul@aexp& (0+255),w,b
 12337  002762  B4D8               	btfsc	status,2,c
 12338  002764  EFB6  F013         	goto	u8061
 12339  002768  EFB8  F013         	goto	u8060
 12340  00276C                     u8061:
 12341  00276C  EFCB  F013         	goto	l7887
 12342  002770                     u8060:
 12343  002770                     
 12344                           ; BSR set to: 0
 12345  002770  2961               	incf	___flmul@aexp& (0+255),w,b
 12346  002772  A4D8               	btfss	status,2,c
 12347  002774  EFBE  F013         	goto	u8071
 12348  002778  EFC0  F013         	goto	u8070
 12349  00277C                     u8071:
 12350  00277C  EFC8  F013         	goto	l7885
 12351  002780                     u8070:
 12352  002780                     
 12353                           ; BSR set to: 0
 12354  002780  0E00               	movlw	0
 12355  002782  6E2E               	movwf	___flmul@a^0,c
 12356  002784  0E00               	movlw	0
 12357  002786  6E2F               	movwf	(___flmul@a+1)^0,c
 12358  002788  0E00               	movlw	0
 12359  00278A  6E30               	movwf	(___flmul@a+2)^0,c
 12360  00278C  0E00               	movlw	0
 12361  00278E  6E31               	movwf	(___flmul@a+3)^0,c
 12362  002790                     l7885:
 12363                           
 12364                           ; BSR set to: 0
 12365  002790  8E30               	bsf	(___flmul@a+2)^0,7,c
 12366  002792  EFD3  F013         	goto	l2009
 12367  002796                     l7887:
 12368                           
 12369                           ; BSR set to: 0
 12370  002796  0E00               	movlw	0
 12371  002798  6E2E               	movwf	___flmul@a^0,c
 12372  00279A  0E00               	movlw	0
 12373  00279C  6E2F               	movwf	(___flmul@a+1)^0,c
 12374  00279E  0E00               	movlw	0
 12375  0027A0  6E30               	movwf	(___flmul@a+2)^0,c
 12376  0027A2  0E00               	movlw	0
 12377  0027A4  6E31               	movwf	(___flmul@a+3)^0,c
 12378  0027A6                     l2009:
 12379                           
 12380                           ; BSR set to: 0
 12381  0027A6  5161               	movf	___flmul@aexp& (0+255),w,b
 12382  0027A8  B4D8               	btfsc	status,2,c
 12383  0027AA  EFD9  F013         	goto	u8081
 12384  0027AE  EFDB  F013         	goto	u8080
 12385  0027B2                     u8081:
 12386  0027B2  EFE3  F013         	goto	l7891
 12387  0027B6                     u8080:
 12388  0027B6                     
 12389                           ; BSR set to: 0
 12390  0027B6  5166               	movf	___flmul@bexp& (0+255),w,b
 12391  0027B8  A4D8               	btfss	status,2,c
 12392  0027BA  EFE1  F013         	goto	u8091
 12393  0027BE  EFE3  F013         	goto	u8090
 12394  0027C2                     u8091:
 12395  0027C2  EFED  F013         	goto	l7895
 12396  0027C6                     u8090:
 12397  0027C6                     l7891:
 12398                           
 12399                           ; BSR set to: 0
 12400  0027C6  0E00               	movlw	0
 12401  0027C8  6E2A               	movwf	?___flmul^0,c
 12402  0027CA  0E00               	movlw	0
 12403  0027CC  6E2B               	movwf	(?___flmul+1)^0,c
 12404  0027CE  0E00               	movlw	0
 12405  0027D0  6E2C               	movwf	(?___flmul+2)^0,c
 12406  0027D2  0E00               	movlw	0
 12407  0027D4  6E2D               	movwf	(?___flmul+3)^0,c
 12408  0027D6  EF97  F015         	goto	l2013
 12409  0027DA                     l7895:
 12410                           
 12411                           ; BSR set to: 0
 12412  0027DA  5030               	movf	(___flmul@a+2)^0,w,c
 12413  0027DC  022A               	mulwf	___flmul@b^0,c
 12414  0027DE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12415  0027E4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12416  0027EA                     
 12417                           ; BSR set to: 0
 12418  0027EA  516B               	movf	___flmul@temp& (0+255),w,b
 12419  0027EC  6F62               	movwf	___flmul@grs& (0+255),b
 12420  0027EE  6B63               	clrf	(___flmul@grs+1)& (0+255),b
 12421  0027F0  6B64               	clrf	(___flmul@grs+2)& (0+255),b
 12422  0027F2  6B65               	clrf	(___flmul@grs+3)& (0+255),b
 12423  0027F4                     
 12424                           ; BSR set to: 0
 12425  0027F4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12426  0027F6  6F67               	movwf	___flmul@prod& (0+255),b
 12427  0027F8  6B68               	clrf	(___flmul@prod+1)& (0+255),b
 12428  0027FA  6B69               	clrf	(___flmul@prod+2)& (0+255),b
 12429  0027FC  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
 12430  0027FE  502F               	movf	(___flmul@a+1)^0,w,c
 12431  002800  022B               	mulwf	(___flmul@b+1)^0,c
 12432  002802  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12433  002808  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12434  00280E                     
 12435                           ; BSR set to: 0
 12436  00280E  516B               	movf	___flmul@temp& (0+255),w,b
 12437  002810  2762               	addwf	___flmul@grs& (0+255),f,b
 12438  002812  0E00               	movlw	0
 12439  002814  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12440  002816  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12441  002818  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12442  00281A                     
 12443                           ; BSR set to: 0
 12444  00281A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12445  00281C  2767               	addwf	___flmul@prod& (0+255),f,b
 12446  00281E  0E00               	movlw	0
 12447  002820  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12448  002822  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12449  002824  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12450  002826  502E               	movf	___flmul@a^0,w,c
 12451  002828  022C               	mulwf	(___flmul@b+2)^0,c
 12452  00282A  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12453  002830  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12454  002836                     
 12455                           ; BSR set to: 0
 12456  002836  516B               	movf	___flmul@temp& (0+255),w,b
 12457  002838  2762               	addwf	___flmul@grs& (0+255),f,b
 12458  00283A  0E00               	movlw	0
 12459  00283C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12460  00283E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12461  002840  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12462  002842                     
 12463                           ; BSR set to: 0
 12464  002842  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12465  002844  2767               	addwf	___flmul@prod& (0+255),f,b
 12466  002846  0E00               	movlw	0
 12467  002848  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12468  00284A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12469  00284C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12470  00284E                     
 12471                           ; BSR set to: 0
 12472  00284E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12473  002852  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12474  002856  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12475  00285A  6B62               	clrf	___flmul@grs& (0+255),b
 12476  00285C                     
 12477                           ; BSR set to: 0
 12478  00285C  502E               	movf	___flmul@a^0,w,c
 12479  00285E  022B               	mulwf	(___flmul@b+1)^0,c
 12480  002860  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12481  002866  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12482  00286C                     
 12483                           ; BSR set to: 0
 12484  00286C  516B               	movf	___flmul@temp& (0+255),w,b
 12485  00286E  2762               	addwf	___flmul@grs& (0+255),f,b
 12486  002870  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12487  002872  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12488  002874  0E00               	movlw	0
 12489  002876  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12490  002878  0E00               	movlw	0
 12491  00287A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12492  00287C                     
 12493                           ; BSR set to: 0
 12494  00287C  502F               	movf	(___flmul@a+1)^0,w,c
 12495  00287E  022A               	mulwf	___flmul@b^0,c
 12496  002880  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12497  002886  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12498  00288C                     
 12499                           ; BSR set to: 0
 12500  00288C  516B               	movf	___flmul@temp& (0+255),w,b
 12501  00288E  2762               	addwf	___flmul@grs& (0+255),f,b
 12502  002890  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12503  002892  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12504  002894  0E00               	movlw	0
 12505  002896  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12506  002898  0E00               	movlw	0
 12507  00289A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12508  00289C                     
 12509                           ; BSR set to: 0
 12510  00289C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12511  0028A0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12512  0028A4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12513  0028A8  6B62               	clrf	___flmul@grs& (0+255),b
 12514  0028AA  502E               	movf	___flmul@a^0,w,c
 12515  0028AC  022A               	mulwf	___flmul@b^0,c
 12516  0028AE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12517  0028B4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12518  0028BA                     
 12519                           ; BSR set to: 0
 12520  0028BA  516B               	movf	___flmul@temp& (0+255),w,b
 12521  0028BC  2762               	addwf	___flmul@grs& (0+255),f,b
 12522  0028BE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12523  0028C0  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
 12524  0028C2  0E00               	movlw	0
 12525  0028C4  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
 12526  0028C6  0E00               	movlw	0
 12527  0028C8  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
 12528  0028CA                     
 12529                           ; BSR set to: 0
 12530  0028CA  5030               	movf	(___flmul@a+2)^0,w,c
 12531  0028CC  022B               	mulwf	(___flmul@b+1)^0,c
 12532  0028CE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12533  0028D4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12534  0028DA  516B               	movf	___flmul@temp& (0+255),w,b
 12535  0028DC  2767               	addwf	___flmul@prod& (0+255),f,b
 12536  0028DE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12537  0028E0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12538  0028E2  0E00               	movlw	0
 12539  0028E4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12540  0028E6  0E00               	movlw	0
 12541  0028E8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12542  0028EA                     
 12543                           ; BSR set to: 0
 12544  0028EA  502F               	movf	(___flmul@a+1)^0,w,c
 12545  0028EC  022C               	mulwf	(___flmul@b+2)^0,c
 12546  0028EE  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12547  0028F4  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12548  0028FA                     
 12549                           ; BSR set to: 0
 12550  0028FA  516B               	movf	___flmul@temp& (0+255),w,b
 12551  0028FC  2767               	addwf	___flmul@prod& (0+255),f,b
 12552  0028FE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12553  002900  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12554  002902  0E00               	movlw	0
 12555  002904  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12556  002906  0E00               	movlw	0
 12557  002908  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12558  00290A  5030               	movf	(___flmul@a+2)^0,w,c
 12559  00290C  022C               	mulwf	(___flmul@b+2)^0,c
 12560  00290E  006F FFCC  F06B    	movff	prodl,___flmul@temp
 12561  002914  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
 12562  00291A                     
 12563                           ; BSR set to: 0
 12564  00291A  516B               	movf	___flmul@temp& (0+255),w,b
 12565  00291C  6E32               	movwf	??___flmul^0,c
 12566  00291E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12567  002920  6E33               	movwf	(??___flmul+1)^0,c
 12568  002922  6A34               	clrf	(??___flmul+2)^0,c
 12569  002924  6A35               	clrf	(??___flmul+3)^0,c
 12570  002926  C034  F035         	movff	??___flmul+2,??___flmul+3
 12571  00292A  C033  F034         	movff	??___flmul+1,??___flmul+2
 12572  00292E  C032  F033         	movff	??___flmul,??___flmul+1
 12573  002932  6A32               	clrf	??___flmul^0,c
 12574  002934  5032               	movf	??___flmul^0,w,c
 12575  002936  2767               	addwf	___flmul@prod& (0+255),f,b
 12576  002938  5033               	movf	(??___flmul+1)^0,w,c
 12577  00293A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12578  00293C  5034               	movf	(??___flmul+2)^0,w,c
 12579  00293E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12580  002940  5035               	movf	(??___flmul+3)^0,w,c
 12581  002942  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12582  002944                     
 12583                           ; BSR set to: 0
 12584  002944  C062  F032         	movff	___flmul@grs,??___flmul
 12585  002948  C063  F033         	movff	___flmul@grs+1,??___flmul+1
 12586  00294C  C064  F034         	movff	___flmul@grs+2,??___flmul+2
 12587  002950  C065  F035         	movff	___flmul@grs+3,??___flmul+3
 12588  002954  0E19               	movlw	25
 12589  002956  EFB2  F014         	goto	u8100
 12590  00295A                     u8105:
 12591  00295A  90D8               	bcf	status,0,c
 12592  00295C  3235               	rrcf	(??___flmul+3)^0,f,c
 12593  00295E  3234               	rrcf	(??___flmul+2)^0,f,c
 12594  002960  3233               	rrcf	(??___flmul+1)^0,f,c
 12595  002962  3232               	rrcf	??___flmul^0,f,c
 12596  002964                     u8100:
 12597  002964  2EE8               	decfsz	wreg,f,c
 12598  002966  EFAD  F014         	goto	u8105
 12599  00296A  5032               	movf	??___flmul^0,w,c
 12600  00296C  2767               	addwf	___flmul@prod& (0+255),f,b
 12601  00296E  5033               	movf	(??___flmul+1)^0,w,c
 12602  002970  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12603  002972  5034               	movf	(??___flmul+2)^0,w,c
 12604  002974  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12605  002976  5035               	movf	(??___flmul+3)^0,w,c
 12606  002978  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12607  00297A                     
 12608                           ; BSR set to: 0
 12609  00297A  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
 12610  00297E  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
 12611  002982  C062  F063         	movff	___flmul@grs,___flmul@grs+1
 12612  002986  6B62               	clrf	___flmul@grs& (0+255),b
 12613  002988                     
 12614                           ; BSR set to: 0
 12615  002988  5161               	movf	___flmul@aexp& (0+255),w,b
 12616  00298A  C066  F032         	movff	___flmul@bexp,??___flmul
 12617  00298E  6A33               	clrf	(??___flmul+1)^0,c
 12618  002990  2632               	addwf	??___flmul^0,f,c
 12619  002992  0E00               	movlw	0
 12620  002994  2233               	addwfc	(??___flmul+1)^0,f,c
 12621  002996  0E82               	movlw	130
 12622  002998  2432               	addwf	??___flmul^0,w,c
 12623  00299A  6F6B               	movwf	___flmul@temp& (0+255),b
 12624  00299C  0EFF               	movlw	255
 12625  00299E  2033               	addwfc	(??___flmul+1)^0,w,c
 12626  0029A0  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
 12627  0029A2  EFE8  F014         	goto	l7943
 12628  0029A6                     l7937:
 12629                           
 12630                           ; BSR set to: 0
 12631  0029A6  90D8               	bcf	status,0,c
 12632  0029A8  3767               	rlcf	___flmul@prod& (0+255),f,b
 12633  0029AA  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
 12634  0029AC  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
 12635  0029AE  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 12636  0029B0                     
 12637                           ; BSR set to: 0
 12638  0029B0  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12639  0029B2  EFDD  F014         	goto	u8111
 12640  0029B6  EFDF  F014         	goto	u8110
 12641  0029BA                     u8111:
 12642  0029BA  EFE0  F014         	goto	l2016
 12643  0029BE                     u8110:
 12644  0029BE                     
 12645                           ; BSR set to: 0
 12646  0029BE  8167               	bsf	___flmul@prod& (0+255),0,b
 12647  0029C0                     l2016:
 12648                           
 12649                           ; BSR set to: 0
 12650  0029C0  90D8               	bcf	status,0,c
 12651  0029C2  3762               	rlcf	___flmul@grs& (0+255),f,b
 12652  0029C4  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
 12653  0029C6  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
 12654  0029C8  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
 12655  0029CA  076B               	decf	___flmul@temp& (0+255),f,b
 12656  0029CC  A0D8               	btfss	status,0,c
 12657  0029CE  076C               	decf	(___flmul@temp+1)& (0+255),f,b
 12658  0029D0                     l7943:
 12659                           
 12660                           ; BSR set to: 0
 12661  0029D0  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
 12662  0029D2  EFED  F014         	goto	u8121
 12663  0029D6  EFEF  F014         	goto	u8120
 12664  0029DA                     u8121:
 12665  0029DA  EFD3  F014         	goto	l7937
 12666  0029DE                     u8120:
 12667  0029DE                     
 12668                           ; BSR set to: 0
 12669  0029DE  0E00               	movlw	0
 12670  0029E0  6F61               	movwf	___flmul@aexp& (0+255),b
 12671  0029E2                     
 12672                           ; BSR set to: 0
 12673  0029E2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
 12674  0029E4  EFF6  F014         	goto	u8131
 12675  0029E8  EFF8  F014         	goto	u8130
 12676  0029EC                     u8131:
 12677  0029EC  EF1C  F015         	goto	l2018
 12678  0029F0                     u8130:
 12679  0029F0                     
 12680                           ; BSR set to: 0
 12681  0029F0  0EFF               	movlw	255
 12682  0029F2  1562               	andwf	___flmul@grs& (0+255),w,b
 12683  0029F4  6E32               	movwf	??___flmul^0,c
 12684  0029F6  0EFF               	movlw	255
 12685  0029F8  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
 12686  0029FA  6E33               	movwf	(??___flmul+1)^0,c
 12687  0029FC  0EFF               	movlw	255
 12688  0029FE  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
 12689  002A00  6E34               	movwf	(??___flmul+2)^0,c
 12690  002A02  0E7F               	movlw	127
 12691  002A04  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
 12692  002A06  6E35               	movwf	(??___flmul+3)^0,c
 12693  002A08  5032               	movf	??___flmul^0,w,c
 12694  002A0A  1033               	iorwf	(??___flmul+1)^0,w,c
 12695  002A0C  1034               	iorwf	(??___flmul+2)^0,w,c
 12696  002A0E  1035               	iorwf	(??___flmul+3)^0,w,c
 12697  002A10  B4D8               	btfsc	status,2,c
 12698  002A12  EF0D  F015         	goto	u8141
 12699  002A16  EF0F  F015         	goto	u8140
 12700  002A1A                     u8141:
 12701  002A1A  EF13  F015         	goto	l2019
 12702  002A1E                     u8140:
 12703  002A1E                     l7951:
 12704                           
 12705                           ; BSR set to: 0
 12706  002A1E  0E01               	movlw	1
 12707  002A20  6F61               	movwf	___flmul@aexp& (0+255),b
 12708  002A22  EF1C  F015         	goto	l2018
 12709  002A26                     l2019:
 12710                           
 12711                           ; BSR set to: 0
 12712  002A26  A167               	btfss	___flmul@prod& (0+255),0,b
 12713  002A28  EF18  F015         	goto	u8151
 12714  002A2C  EF1A  F015         	goto	u8150
 12715  002A30                     u8151:
 12716  002A30  EF1C  F015         	goto	l2018
 12717  002A34                     u8150:
 12718  002A34  EF0F  F015         	goto	l7951
 12719  002A38                     l2018:
 12720                           
 12721                           ; BSR set to: 0
 12722  002A38  5161               	movf	___flmul@aexp& (0+255),w,b
 12723  002A3A  B4D8               	btfsc	status,2,c
 12724  002A3C  EF22  F015         	goto	u8161
 12725  002A40  EF24  F015         	goto	u8160
 12726  002A44                     u8161:
 12727  002A44  EF48  F015         	goto	l7963
 12728  002A48                     u8160:
 12729  002A48                     
 12730                           ; BSR set to: 0
 12731  002A48  0E01               	movlw	1
 12732  002A4A  2767               	addwf	___flmul@prod& (0+255),f,b
 12733  002A4C  0E00               	movlw	0
 12734  002A4E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
 12735  002A50  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
 12736  002A52  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 12737  002A54                     
 12738                           ; BSR set to: 0
 12739  002A54  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
 12740  002A56  EF2F  F015         	goto	u8171
 12741  002A5A  EF31  F015         	goto	u8170
 12742  002A5E                     u8171:
 12743  002A5E  EF48  F015         	goto	l7963
 12744  002A62                     u8170:
 12745  002A62                     
 12746                           ; BSR set to: 0
 12747  002A62  C067  F032         	movff	___flmul@prod,??___flmul
 12748  002A66  C068  F033         	movff	___flmul@prod+1,??___flmul+1
 12749  002A6A  C069  F034         	movff	___flmul@prod+2,??___flmul+2
 12750  002A6E  C06A  F035         	movff	___flmul@prod+3,??___flmul+3
 12751  002A72  3435               	rlcf	(??___flmul+3)^0,w,c
 12752  002A74  3235               	rrcf	(??___flmul+3)^0,f,c
 12753  002A76  3234               	rrcf	(??___flmul+2)^0,f,c
 12754  002A78  3233               	rrcf	(??___flmul+1)^0,f,c
 12755  002A7A  3232               	rrcf	??___flmul^0,f,c
 12756  002A7C  C032  F067         	movff	??___flmul,___flmul@prod
 12757  002A80  C033  F068         	movff	??___flmul+1,___flmul@prod+1
 12758  002A84  C034  F069         	movff	??___flmul+2,___flmul@prod+2
 12759  002A88  C035  F06A         	movff	??___flmul+3,___flmul@prod+3
 12760  002A8C                     
 12761                           ; BSR set to: 0
 12762  002A8C  4B6B               	infsnz	___flmul@temp& (0+255),f,b
 12763  002A8E  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
 12764  002A90                     l7963:
 12765                           
 12766                           ; BSR set to: 0
 12767  002A90  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12768  002A92  EF53  F015         	goto	u8181
 12769  002A96  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12770  002A98  E108               	bnz	u8180
 12771  002A9A  296B               	incf	___flmul@temp& (0+255),w,b
 12772  002A9C  A0D8               	btfss	status,0,c
 12773  002A9E  EF53  F015         	goto	u8181
 12774  002AA2  EF55  F015         	goto	u8180
 12775  002AA6                     u8181:
 12776  002AA6  EF5F  F015         	goto	l7967
 12777  002AAA                     u8180:
 12778  002AAA                     
 12779                           ; BSR set to: 0
 12780  002AAA  0E00               	movlw	0
 12781  002AAC  6F67               	movwf	___flmul@prod& (0+255),b
 12782  002AAE  0E00               	movlw	0
 12783  002AB0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12784  002AB2  0E80               	movlw	128
 12785  002AB4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12786  002AB6  0E7F               	movlw	127
 12787  002AB8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12788  002ABA  EF8D  F015         	goto	l7979
 12789  002ABE                     l7967:
 12790                           
 12791                           ; BSR set to: 0
 12792  002ABE  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 12793  002AC0  EF6C  F015         	goto	u8190
 12794  002AC4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
 12795  002AC6  E106               	bnz	u8191
 12796  002AC8  056B               	decf	___flmul@temp& (0+255),w,b
 12797  002ACA  B0D8               	btfsc	status,0,c
 12798  002ACC  EF6A  F015         	goto	u8191
 12799  002AD0  EF6C  F015         	goto	u8190
 12800  002AD4                     u8191:
 12801  002AD4  EF78  F015         	goto	l2026
 12802  002AD8                     u8190:
 12803  002AD8                     
 12804                           ; BSR set to: 0
 12805  002AD8  0E00               	movlw	0
 12806  002ADA  6F67               	movwf	___flmul@prod& (0+255),b
 12807  002ADC  0E00               	movlw	0
 12808  002ADE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
 12809  002AE0  0E00               	movlw	0
 12810  002AE2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
 12811  002AE4  0E00               	movlw	0
 12812  002AE6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12813  002AE8  0E00               	movlw	0
 12814  002AEA  6F60               	movwf	___flmul@sign& (0+255),b
 12815  002AEC  EF8D  F015         	goto	l7979
 12816  002AF0                     l2026:
 12817                           
 12818                           ; BSR set to: 0
 12819  002AF0  C06B  F066         	movff	___flmul@temp,___flmul@bexp
 12820  002AF4                     
 12821                           ; BSR set to: 0
 12822  002AF4  0EFF               	movlw	255
 12823  002AF6  1767               	andwf	___flmul@prod& (0+255),f,b
 12824  002AF8  0EFF               	movlw	255
 12825  002AFA  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
 12826  002AFC  0E7F               	movlw	127
 12827  002AFE  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
 12828  002B00  0E00               	movlw	0
 12829  002B02  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
 12830  002B04                     
 12831                           ; BSR set to: 0
 12832  002B04  A166               	btfss	___flmul@bexp& (0+255),0,b
 12833  002B06  EF87  F015         	goto	u8201
 12834  002B0A  EF89  F015         	goto	u8200
 12835  002B0E                     u8201:
 12836  002B0E  EF8A  F015         	goto	l7977
 12837  002B12                     u8200:
 12838  002B12                     
 12839                           ; BSR set to: 0
 12840  002B12  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
 12841  002B14                     l7977:
 12842                           
 12843                           ; BSR set to: 0
 12844  002B14  90D8               	bcf	status,0,c
 12845  002B16  3166               	rrcf	___flmul@bexp& (0+255),w,b
 12846  002B18  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
 12847  002B1A                     l7979:
 12848                           
 12849                           ; BSR set to: 0
 12850  002B1A  5160               	movf	___flmul@sign& (0+255),w,b
 12851  002B1C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 12852  002B1E                     
 12853                           ; BSR set to: 0
 12854  002B1E  C067  F02A         	movff	___flmul@prod,?___flmul
 12855  002B22  C068  F02B         	movff	___flmul@prod+1,?___flmul+1
 12856  002B26  C069  F02C         	movff	___flmul@prod+2,?___flmul+2
 12857  002B2A  C06A  F02D         	movff	___flmul@prod+3,?___flmul+3
 12858  002B2E                     l2013:
 12859                           
 12860                           ; BSR set to: 0
 12861  002B2E  0012               	return		;funcret
 12862  002B30                     __end_of___flmul:
 12863                           	callstack 0
 12864                           
 12865 ;; *************** function ___awdiv *****************
 12866 ;; Defined at:
 12867 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;  dividend        2   19[COMRAM] int 
 12870 ;;  divisor         2   21[COMRAM] int 
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;  quotient        2   25[COMRAM] int 
 12873 ;;  sign            1   24[COMRAM] unsigned char 
 12874 ;;  counter         1   23[COMRAM] unsigned char 
 12875 ;; Return value:  Size  Location     Type
 12876 ;;                  2   19[COMRAM] int 
 12877 ;; Registers used:
 12878 ;;		wreg, status,2, status,0
 12879 ;; Tracked objects:
 12880 ;;		On entry : 0/0
 12881 ;;		On exit  : 0/0
 12882 ;;		Unchanged: 0/0
 12883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12885 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12887 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12888 ;;Total ram usage:        8 bytes
 12889 ;; Hardware stack levels used: 1
 12890 ;; Hardware stack levels required when called: 8
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		_calcSteering
 12895 ;;		_calcMotorPow
 12896 ;;		_efgtoa
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text49
 12901  004C08                     __ptext49:
 12902                           	callstack 0
 12903  004C08                     ___awdiv:
 12904                           	callstack 16
 12905  004C08  0E00               	movlw	0
 12906  004C0A  6E19               	movwf	___awdiv@sign^0,c
 12907  004C0C  BE17               	btfsc	(___awdiv@divisor+1)^0,7,c
 12908  004C0E  EF0D  F026         	goto	u8210
 12909  004C12  EF0B  F026         	goto	u8211
 12910  004C16                     u8211:
 12911  004C16  EF13  F026         	goto	l7999
 12912  004C1A                     u8210:
 12913  004C1A  6C16               	negf	___awdiv@divisor^0,c
 12914  004C1C  1E17               	comf	(___awdiv@divisor+1)^0,f,c
 12915  004C1E  B0D8               	btfsc	status,0,c
 12916  004C20  2A17               	incf	(___awdiv@divisor+1)^0,f,c
 12917  004C22  0E01               	movlw	1
 12918  004C24  6E19               	movwf	___awdiv@sign^0,c
 12919  004C26                     l7999:
 12920  004C26  BE15               	btfsc	(___awdiv@dividend+1)^0,7,c
 12921  004C28  EF1A  F026         	goto	u8220
 12922  004C2C  EF18  F026         	goto	u8221
 12923  004C30                     u8221:
 12924  004C30  EF20  F026         	goto	l8005
 12925  004C34                     u8220:
 12926  004C34  6C14               	negf	___awdiv@dividend^0,c
 12927  004C36  1E15               	comf	(___awdiv@dividend+1)^0,f,c
 12928  004C38  B0D8               	btfsc	status,0,c
 12929  004C3A  2A15               	incf	(___awdiv@dividend+1)^0,f,c
 12930  004C3C  0E01               	movlw	1
 12931  004C3E  1A19               	xorwf	___awdiv@sign^0,f,c
 12932  004C40                     l8005:
 12933  004C40  0E00               	movlw	0
 12934  004C42  6E1B               	movwf	(___awdiv@quotient+1)^0,c
 12935  004C44  0E00               	movlw	0
 12936  004C46  6E1A               	movwf	___awdiv@quotient^0,c
 12937  004C48  5016               	movf	___awdiv@divisor^0,w,c
 12938  004C4A  1017               	iorwf	(___awdiv@divisor+1)^0,w,c
 12939  004C4C  B4D8               	btfsc	status,2,c
 12940  004C4E  EF2B  F026         	goto	u8231
 12941  004C52  EF2D  F026         	goto	u8230
 12942  004C56                     u8231:
 12943  004C56  EF55  F026         	goto	l8027
 12944  004C5A                     u8230:
 12945  004C5A  0E01               	movlw	1
 12946  004C5C  6E18               	movwf	___awdiv@counter^0,c
 12947  004C5E  EF35  F026         	goto	l8013
 12948  004C62                     l8011:
 12949  004C62  90D8               	bcf	status,0,c
 12950  004C64  3616               	rlcf	___awdiv@divisor^0,f,c
 12951  004C66  3617               	rlcf	(___awdiv@divisor+1)^0,f,c
 12952  004C68  2A18               	incf	___awdiv@counter^0,f,c
 12953  004C6A                     l8013:
 12954  004C6A  AE17               	btfss	(___awdiv@divisor+1)^0,7,c
 12955  004C6C  EF3A  F026         	goto	u8241
 12956  004C70  EF3C  F026         	goto	u8240
 12957  004C74                     u8241:
 12958  004C74  EF31  F026         	goto	l8011
 12959  004C78                     u8240:
 12960  004C78                     l8015:
 12961  004C78  90D8               	bcf	status,0,c
 12962  004C7A  361A               	rlcf	___awdiv@quotient^0,f,c
 12963  004C7C  361B               	rlcf	(___awdiv@quotient+1)^0,f,c
 12964  004C7E  5016               	movf	___awdiv@divisor^0,w,c
 12965  004C80  5C14               	subwf	___awdiv@dividend^0,w,c
 12966  004C82  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12967  004C84  5815               	subwfb	(___awdiv@dividend+1)^0,w,c
 12968  004C86  A0D8               	btfss	status,0,c
 12969  004C88  EF48  F026         	goto	u8251
 12970  004C8C  EF4A  F026         	goto	u8250
 12971  004C90                     u8251:
 12972  004C90  EF4F  F026         	goto	l8023
 12973  004C94                     u8250:
 12974  004C94  5016               	movf	___awdiv@divisor^0,w,c
 12975  004C96  5E14               	subwf	___awdiv@dividend^0,f,c
 12976  004C98  5017               	movf	(___awdiv@divisor+1)^0,w,c
 12977  004C9A  5A15               	subwfb	(___awdiv@dividend+1)^0,f,c
 12978  004C9C  801A               	bsf	___awdiv@quotient^0,0,c
 12979  004C9E                     l8023:
 12980  004C9E  90D8               	bcf	status,0,c
 12981  004CA0  3217               	rrcf	(___awdiv@divisor+1)^0,f,c
 12982  004CA2  3216               	rrcf	___awdiv@divisor^0,f,c
 12983  004CA4  2E18               	decfsz	___awdiv@counter^0,f,c
 12984  004CA6  EF3C  F026         	goto	l8015
 12985  004CAA                     l8027:
 12986  004CAA  5019               	movf	___awdiv@sign^0,w,c
 12987  004CAC  B4D8               	btfsc	status,2,c
 12988  004CAE  EF5B  F026         	goto	u8261
 12989  004CB2  EF5D  F026         	goto	u8260
 12990  004CB6                     u8261:
 12991  004CB6  EF61  F026         	goto	l8031
 12992  004CBA                     u8260:
 12993  004CBA  6C1A               	negf	___awdiv@quotient^0,c
 12994  004CBC  1E1B               	comf	(___awdiv@quotient+1)^0,f,c
 12995  004CBE  B0D8               	btfsc	status,0,c
 12996  004CC0  2A1B               	incf	(___awdiv@quotient+1)^0,f,c
 12997  004CC2                     l8031:
 12998  004CC2  C01A  F014         	movff	___awdiv@quotient,?___awdiv
 12999  004CC6  C01B  F015         	movff	___awdiv@quotient+1,?___awdiv+1
 13000  004CCA  0012               	return		;funcret
 13001  004CCC                     __end_of___awdiv:
 13002                           	callstack 0
 13003                           
 13004 ;; *************** function _SYSTEM_Initialize *****************
 13005 ;; Defined at:
 13006 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13007 ;; Parameters:    Size  Location     Type
 13008 ;;		None
 13009 ;; Auto vars:     Size  Location     Type
 13010 ;;		None
 13011 ;; Return value:  Size  Location     Type
 13012 ;;                  1    wreg      void 
 13013 ;; Registers used:
 13014 ;;		wreg, status,2, status,0, cstack
 13015 ;; Tracked objects:
 13016 ;;		On entry : 0/0
 13017 ;;		On exit  : 0/0
 13018 ;;		Unchanged: 0/0
 13019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13024 ;;Total ram usage:        0 bytes
 13025 ;; Hardware stack levels used: 1
 13026 ;; Hardware stack levels required when called: 10
 13027 ;; This function calls:
 13028 ;;		_ADCC_Initialize
 13029 ;;		_CCP3_Initialize
 13030 ;;		_CCP4_Initialize
 13031 ;;		_CLC3_Initialize
 13032 ;;		_INTERRUPT_Initialize
 13033 ;;		_OSCILLATOR_Initialize
 13034 ;;		_PIN_MANAGER_Initialize
 13035 ;;		_PMD_Initialize
 13036 ;;		_PWM5_Initialize
 13037 ;;		_PWM6_Initialize
 13038 ;;		_PWM7_Initialize
 13039 ;;		_PWM8_Initialize
 13040 ;;		_SMT1_Initialize
 13041 ;;		_TMR2_Initialize
 13042 ;;		_TMR3_Initialize
 13043 ;;		_TMR4_Initialize
 13044 ;;		_TMR5_Initialize
 13045 ;;		_UART1_Initialize
 13046 ;; This function is called by:
 13047 ;;		_main
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           	psect	text50
 13052  0054EE                     __ptext50:
 13053                           	callstack 0
 13054  0054EE                     _SYSTEM_Initialize:
 13055                           	callstack 20
 13056  0054EE                     
 13057                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13058  0054EE  EC2C  F02A         	call	_INTERRUPT_Initialize	;wreg free
 13059                           
 13060                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13061  0054F2  EC1A  F02E         	call	_PMD_Initialize	;wreg free
 13062                           
 13063                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13064  0054F6  EC9F  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 13065                           
 13066                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13067  0054FA  EC9A  F02E         	call	_OSCILLATOR_Initialize	;wreg free
 13068  0054FE                     
 13069                           ;mcc_generated_files/mcc.c: 56:     CCP3_Initialize();
 13070  0054FE  EC6C  F02D         	call	_CCP3_Initialize	;wreg free
 13071  005502                     
 13072                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 13073  005502  ECD3  F029         	call	_ADCC_Initialize	;wreg free
 13074                           
 13075                           ;mcc_generated_files/mcc.c: 58:     TMR4_Initialize();
 13076  005506  EC9A  F02D         	call	_TMR4_Initialize	;wreg free
 13077  00550A                     
 13078                           ;mcc_generated_files/mcc.c: 59:     SMT1_Initialize();
 13079  00550A  EC0D  F02D         	call	_SMT1_Initialize	;wreg free
 13080  00550E                     
 13081                           ;mcc_generated_files/mcc.c: 60:     PWM8_Initialize();
 13082  00550E  EC6A  F02E         	call	_PWM8_Initialize	;wreg free
 13083  005512                     
 13084                           ;mcc_generated_files/mcc.c: 61:     TMR2_Initialize();
 13085  005512  EC4E  F02E         	call	_TMR2_Initialize	;wreg free
 13086  005516                     
 13087                           ;mcc_generated_files/mcc.c: 62:     PWM6_Initialize();
 13088  005516  EC82  F02E         	call	_PWM6_Initialize	;wreg free
 13089                           
 13090                           ;mcc_generated_files/mcc.c: 63:     CCP4_Initialize();
 13091  00551A  EC55  F02D         	call	_CCP4_Initialize	;wreg free
 13092  00551E                     
 13093                           ;mcc_generated_files/mcc.c: 64:     CLC3_Initialize();
 13094  00551E  ECB0  F02D         	call	_CLC3_Initialize	;wreg free
 13095  005522                     
 13096                           ;mcc_generated_files/mcc.c: 65:     TMR3_Initialize();
 13097  005522  EC21  F02C         	call	_TMR3_Initialize	;wreg free
 13098                           
 13099                           ;mcc_generated_files/mcc.c: 66:     PWM5_Initialize();
 13100  005526  EC8E  F02E         	call	_PWM5_Initialize	;wreg free
 13101  00552A                     
 13102                           ;mcc_generated_files/mcc.c: 67:     TMR5_Initialize();
 13103  00552A  EC9C  F02A         	call	_TMR5_Initialize	;wreg free
 13104  00552E                     
 13105                           ;mcc_generated_files/mcc.c: 68:     PWM7_Initialize();
 13106  00552E  EC76  F02E         	call	_PWM7_Initialize	;wreg free
 13107                           
 13108                           ;mcc_generated_files/mcc.c: 69:     UART1_Initialize();
 13109  005532  ECD4  F027         	call	_UART1_Initialize	;wreg free
 13110  005536  0012               	return		;funcret
 13111  005538                     __end_of_SYSTEM_Initialize:
 13112                           	callstack 0
 13113                           
 13114 ;; *************** function _UART1_Initialize *****************
 13115 ;; Defined at:
 13116 ;;		line 87 in file "mcc_generated_files/uart1.c"
 13117 ;; Parameters:    Size  Location     Type
 13118 ;;		None
 13119 ;; Auto vars:     Size  Location     Type
 13120 ;;		None
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  1    wreg      void 
 13123 ;; Registers used:
 13124 ;;		wreg, status,2, status,0, cstack
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;Total ram usage:        0 bytes
 13135 ;; Hardware stack levels used: 1
 13136 ;; Hardware stack levels required when called: 9
 13137 ;; This function calls:
 13138 ;;		_UART1_SetErrorHandler
 13139 ;;		_UART1_SetFramingErrorHandler
 13140 ;;		_UART1_SetOverrunErrorHandler
 13141 ;;		_UART1_SetRxInterruptHandler
 13142 ;;		_UART1_SetTxInterruptHandler
 13143 ;; This function is called by:
 13144 ;;		_SYSTEM_Initialize
 13145 ;; This function uses a non-reentrant model
 13146 ;;
 13147                           
 13148                           	psect	text51
 13149  004FA8                     __ptext51:
 13150                           	callstack 0
 13151  004FA8                     _UART1_Initialize:
 13152                           	callstack 20
 13153  004FA8                     
 13154                           ;mcc_generated_files/uart1.c: 90:     PIE3bits.U1RXIE = 0;
 13155  004FA8  0139               	movlb	57	; () banked
 13156  004FAA  9793               	bcf	147,3,b	;volatile
 13157  004FAC                     
 13158                           ; BSR set to: 57
 13159                           ;mcc_generated_files/uart1.c: 91:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13160  004FAC  0E8E               	movlw	low _UART1_Receive_ISR
 13161  004FAE  6E14               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 13162  004FB0  0E4D               	movlw	high _UART1_Receive_ISR
 13163  004FB2  6E15               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 13164  004FB4  ECBF  F02E         	call	_UART1_SetRxInterruptHandler	;wreg free
 13165  004FB8                     
 13166                           ;mcc_generated_files/uart1.c: 92:     PIE3bits.U1TXIE = 0;
 13167  004FB8  0139               	movlb	57	; () banked
 13168  004FBA  9993               	bcf	147,4,b	;volatile
 13169                           
 13170                           ;mcc_generated_files/uart1.c: 93:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13171  004FBC  0E16               	movlw	low _UART1_Transmit_ISR
 13172  004FBE  6E14               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 13173  004FC0  0E56               	movlw	high _UART1_Transmit_ISR
 13174  004FC2  6E15               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 13175  004FC4  ECBA  F02E         	call	_UART1_SetTxInterruptHandler	;wreg free
 13176  004FC8                     
 13177                           ;mcc_generated_files/uart1.c: 98:     U1P1L = 0x00;
 13178  004FC8  0E00               	movlw	0
 13179  004FCA  013D               	movlb	61	; () banked
 13180  004FCC  6FEC               	movwf	236,b	;volatile
 13181  004FCE                     
 13182                           ; BSR set to: 61
 13183                           ;mcc_generated_files/uart1.c: 101:     U1P1H = 0x00;
 13184  004FCE  0E00               	movlw	0
 13185  004FD0  6FED               	movwf	237,b	;volatile
 13186  004FD2                     
 13187                           ; BSR set to: 61
 13188                           ;mcc_generated_files/uart1.c: 104:     U1P2L = 0x00;
 13189  004FD2  0E00               	movlw	0
 13190  004FD4  6FEE               	movwf	238,b	;volatile
 13191  004FD6                     
 13192                           ; BSR set to: 61
 13193                           ;mcc_generated_files/uart1.c: 107:     U1P2H = 0x00;
 13194  004FD6  0E00               	movlw	0
 13195  004FD8  6FEF               	movwf	239,b	;volatile
 13196  004FDA                     
 13197                           ; BSR set to: 61
 13198                           ;mcc_generated_files/uart1.c: 110:     U1P3L = 0x00;
 13199  004FDA  0E00               	movlw	0
 13200  004FDC  6FF0               	movwf	240,b	;volatile
 13201  004FDE                     
 13202                           ; BSR set to: 61
 13203                           ;mcc_generated_files/uart1.c: 113:     U1P3H = 0x00;
 13204  004FDE  0E00               	movlw	0
 13205  004FE0  6FF1               	movwf	241,b	;volatile
 13206  004FE2                     
 13207                           ; BSR set to: 61
 13208                           ;mcc_generated_files/uart1.c: 116:     U1CON0 = 0xB0;
 13209  004FE2  0EB0               	movlw	176
 13210  004FE4  6FF2               	movwf	242,b	;volatile
 13211  004FE6                     
 13212                           ; BSR set to: 61
 13213                           ;mcc_generated_files/uart1.c: 119:     U1CON1 = 0x80;
 13214  004FE6  0E80               	movlw	128
 13215  004FE8  6FF3               	movwf	243,b	;volatile
 13216  004FEA                     
 13217                           ; BSR set to: 61
 13218                           ;mcc_generated_files/uart1.c: 122:     U1CON2 = 0x00;
 13219  004FEA  0E00               	movlw	0
 13220  004FEC  6FF4               	movwf	244,b	;volatile
 13221  004FEE                     
 13222                           ; BSR set to: 61
 13223                           ;mcc_generated_files/uart1.c: 125:     U1BRGL = 0x8A;
 13224  004FEE  0E8A               	movlw	138
 13225  004FF0  6FF5               	movwf	245,b	;volatile
 13226  004FF2                     
 13227                           ; BSR set to: 61
 13228                           ;mcc_generated_files/uart1.c: 128:     U1BRGH = 0x00;
 13229  004FF2  0E00               	movlw	0
 13230  004FF4  6FF6               	movwf	246,b	;volatile
 13231  004FF6                     
 13232                           ; BSR set to: 61
 13233                           ;mcc_generated_files/uart1.c: 131:     U1FIFO = 0x00;
 13234  004FF6  0E00               	movlw	0
 13235  004FF8  6FF7               	movwf	247,b	;volatile
 13236  004FFA                     
 13237                           ; BSR set to: 61
 13238                           ;mcc_generated_files/uart1.c: 134:     U1UIR = 0x00;
 13239  004FFA  0E00               	movlw	0
 13240  004FFC  6FF8               	movwf	248,b	;volatile
 13241  004FFE                     
 13242                           ; BSR set to: 61
 13243                           ;mcc_generated_files/uart1.c: 137:     U1ERRIR = 0x00;
 13244  004FFE  0E00               	movlw	0
 13245  005000  6FF9               	movwf	249,b	;volatile
 13246  005002                     
 13247                           ; BSR set to: 61
 13248                           ;mcc_generated_files/uart1.c: 140:     U1ERRIE = 0x00;
 13249  005002  0E00               	movlw	0
 13250  005004  6FFA               	movwf	250,b	;volatile
 13251  005006                     
 13252                           ; BSR set to: 61
 13253                           ;mcc_generated_files/uart1.c: 143:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 13254  005006  0EDC               	movlw	low _UART1_DefaultFramingErrorHandler
 13255  005008  6E14               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 13256  00500A  0E5D               	movlw	high _UART1_DefaultFramingErrorHandler
 13257  00500C  6E15               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 13258  00500E  ECC9  F02E         	call	_UART1_SetFramingErrorHandler	;wreg free
 13259  005012                     
 13260                           ;mcc_generated_files/uart1.c: 144:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 13261  005012  0EDA               	movlw	low _UART1_DefaultOverrunErrorHandler
 13262  005014  6E14               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 13263  005016  0E5D               	movlw	high _UART1_DefaultOverrunErrorHandler
 13264  005018  6E15               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13265  00501A  ECC4  F02E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 13266  00501E                     
 13267                           ;mcc_generated_files/uart1.c: 145:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 13268  00501E  0ECE               	movlw	low _UART1_DefaultErrorHandler
 13269  005020  6E14               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 13270  005022  0E5D               	movlw	high _UART1_DefaultErrorHandler
 13271  005024  6E15               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 13272  005026  ECCE  F02E         	call	_UART1_SetErrorHandler	;wreg free
 13273                           
 13274                           ;mcc_generated_files/uart1.c: 147:     uart1RxLastError.status = 0;
 13275  00502A  0E00               	movlw	0
 13276  00502C  6E40               	movwf	_uart1RxLastError^0,c	;volatile
 13277                           
 13278                           ;mcc_generated_files/uart1.c: 150:     uart1TxHead = 0;
 13279  00502E  0E00               	movlw	0
 13280  005030  6E45               	movwf	_uart1TxHead^0,c	;volatile
 13281                           
 13282                           ;mcc_generated_files/uart1.c: 151:     uart1TxTail = 0;
 13283  005032  0E00               	movlw	0
 13284  005034  6E44               	movwf	_uart1TxTail^0,c	;volatile
 13285                           
 13286                           ;mcc_generated_files/uart1.c: 152:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13287  005036  0E08               	movlw	8
 13288  005038  0100               	movlb	0	; () banked
 13289  00503A  6FFE               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 13290                           
 13291                           ;mcc_generated_files/uart1.c: 153:     uart1RxHead = 0;
 13292  00503C  0E00               	movlw	0
 13293  00503E  6E43               	movwf	_uart1RxHead^0,c	;volatile
 13294                           
 13295                           ;mcc_generated_files/uart1.c: 154:     uart1RxTail = 0;
 13296  005040  0E00               	movlw	0
 13297  005042  6E42               	movwf	_uart1RxTail^0,c	;volatile
 13298                           
 13299                           ;mcc_generated_files/uart1.c: 155:     uart1RxCount = 0;
 13300  005044  0E00               	movlw	0
 13301  005046  6E41               	movwf	_uart1RxCount^0,c	;volatile
 13302  005048                     
 13303                           ; BSR set to: 0
 13304                           ;mcc_generated_files/uart1.c: 158:     PIE3bits.U1RXIE = 1;
 13305  005048  0139               	movlb	57	; () banked
 13306  00504A  8793               	bsf	147,3,b	;volatile
 13307  00504C                     
 13308                           ; BSR set to: 57
 13309  00504C  0012               	return		;funcret
 13310  00504E                     __end_of_UART1_Initialize:
 13311                           	callstack 0
 13312                           
 13313 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13314 ;; Defined at:
 13315 ;;		line 333 in file "mcc_generated_files/uart1.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13318 ;;		 -> UART1_Transmit_ISR(1), 
 13319 ;; Auto vars:     Size  Location     Type
 13320 ;;		None
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  1    wreg      void 
 13323 ;; Registers used:
 13324 ;;		wreg, status,2, status,0
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13334 ;;Total ram usage:        2 bytes
 13335 ;; Hardware stack levels used: 1
 13336 ;; Hardware stack levels required when called: 8
 13337 ;; This function calls:
 13338 ;;		Nothing
 13339 ;; This function is called by:
 13340 ;;		_UART1_Initialize
 13341 ;; This function uses a non-reentrant model
 13342 ;;
 13343                           
 13344                           	psect	text52
 13345  005D74                     __ptext52:
 13346                           	callstack 0
 13347  005D74                     _UART1_SetTxInterruptHandler:
 13348                           	callstack 20
 13349  005D74                     
 13350                           ;mcc_generated_files/uart1.c: 334:     UART1_TxInterruptHandler = InterruptHandler;
 13351  005D74  C014  F194         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 13352  005D78  C015  F195         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 13353  005D7C  0012               	return		;funcret
 13354  005D7E                     __end_of_UART1_SetTxInterruptHandler:
 13355                           	callstack 0
 13356                           
 13357 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13358 ;; Defined at:
 13359 ;;		line 329 in file "mcc_generated_files/uart1.c"
 13360 ;; Parameters:    Size  Location     Type
 13361 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13362 ;;		 -> UART1_Receive_ISR(1), 
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;		None
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  1    wreg      void 
 13367 ;; Registers used:
 13368 ;;		wreg, status,2, status,0
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13378 ;;Total ram usage:        2 bytes
 13379 ;; Hardware stack levels used: 1
 13380 ;; Hardware stack levels required when called: 8
 13381 ;; This function calls:
 13382 ;;		Nothing
 13383 ;; This function is called by:
 13384 ;;		_UART1_Initialize
 13385 ;; This function uses a non-reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text53
 13389  005D7E                     __ptext53:
 13390                           	callstack 0
 13391  005D7E                     _UART1_SetRxInterruptHandler:
 13392                           	callstack 20
 13393  005D7E                     
 13394                           ;mcc_generated_files/uart1.c: 330:     UART1_RxInterruptHandler = InterruptHandler;
 13395  005D7E  C014  F196         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 13396  005D82  C015  F197         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 13397  005D86  0012               	return		;funcret
 13398  005D88                     __end_of_UART1_SetRxInterruptHandler:
 13399                           	callstack 0
 13400                           
 13401 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 13402 ;; Defined at:
 13403 ;;		line 319 in file "mcc_generated_files/uart1.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13406 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		wreg, status,2, status,0
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13422 ;;Total ram usage:        2 bytes
 13423 ;; Hardware stack levels used: 1
 13424 ;; Hardware stack levels required when called: 8
 13425 ;; This function calls:
 13426 ;;		Nothing
 13427 ;; This function is called by:
 13428 ;;		_UART1_Initialize
 13429 ;; This function uses a non-reentrant model
 13430 ;;
 13431                           
 13432                           	psect	text54
 13433  005D88                     __ptext54:
 13434                           	callstack 0
 13435  005D88                     _UART1_SetOverrunErrorHandler:
 13436                           	callstack 20
 13437  005D88                     
 13438                           ;mcc_generated_files/uart1.c: 320:     UART1_OverrunErrorHandler = interruptHandler;
 13439  005D88  C014  F190         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 13440  005D8C  C015  F191         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 13441  005D90  0012               	return		;funcret
 13442  005D92                     __end_of_UART1_SetOverrunErrorHandler:
 13443                           	callstack 0
 13444                           
 13445 ;; *************** function _UART1_SetFramingErrorHandler *****************
 13446 ;; Defined at:
 13447 ;;		line 315 in file "mcc_generated_files/uart1.c"
 13448 ;; Parameters:    Size  Location     Type
 13449 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13450 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 13451 ;; Auto vars:     Size  Location     Type
 13452 ;;		None
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  1    wreg      void 
 13455 ;; Registers used:
 13456 ;;		wreg, status,2, status,0
 13457 ;; Tracked objects:
 13458 ;;		On entry : 0/0
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;Total ram usage:        2 bytes
 13467 ;; Hardware stack levels used: 1
 13468 ;; Hardware stack levels required when called: 8
 13469 ;; This function calls:
 13470 ;;		Nothing
 13471 ;; This function is called by:
 13472 ;;		_UART1_Initialize
 13473 ;; This function uses a non-reentrant model
 13474 ;;
 13475                           
 13476                           	psect	text55
 13477  005D92                     __ptext55:
 13478                           	callstack 0
 13479  005D92                     _UART1_SetFramingErrorHandler:
 13480                           	callstack 20
 13481  005D92                     
 13482                           ;mcc_generated_files/uart1.c: 316:     UART1_FramingErrorHandler = interruptHandler;
 13483  005D92  C014  F192         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 13484  005D96  C015  F193         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 13485  005D9A  0012               	return		;funcret
 13486  005D9C                     __end_of_UART1_SetFramingErrorHandler:
 13487                           	callstack 0
 13488                           
 13489 ;; *************** function _UART1_SetErrorHandler *****************
 13490 ;; Defined at:
 13491 ;;		line 323 in file "mcc_generated_files/uart1.c"
 13492 ;; Parameters:    Size  Location     Type
 13493 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
 13494 ;;		 -> UART1_DefaultErrorHandler(1), 
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  1    wreg      void 
 13499 ;; Registers used:
 13500 ;;		wreg, status,2, status,0
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13510 ;;Total ram usage:        2 bytes
 13511 ;; Hardware stack levels used: 1
 13512 ;; Hardware stack levels required when called: 8
 13513 ;; This function calls:
 13514 ;;		Nothing
 13515 ;; This function is called by:
 13516 ;;		_UART1_Initialize
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520                           	psect	text56
 13521  005D9C                     __ptext56:
 13522                           	callstack 0
 13523  005D9C                     _UART1_SetErrorHandler:
 13524                           	callstack 20
 13525  005D9C                     
 13526                           ;mcc_generated_files/uart1.c: 324:     UART1_ErrorHandler = interruptHandler;
 13527  005D9C  C014  F18E         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 13528  005DA0  C015  F18F         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 13529  005DA4  0012               	return		;funcret
 13530  005DA6                     __end_of_UART1_SetErrorHandler:
 13531                           	callstack 0
 13532                           
 13533 ;; *************** function _TMR5_Initialize *****************
 13534 ;; Defined at:
 13535 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;		None
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;		None
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  1    wreg      void 
 13542 ;; Registers used:
 13543 ;;		wreg, status,2, status,0, cstack
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/0
 13546 ;;		On exit  : 0/0
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;Total ram usage:        2 bytes
 13554 ;; Hardware stack levels used: 1
 13555 ;; Hardware stack levels required when called: 9
 13556 ;; This function calls:
 13557 ;;		_TMR5_SetGateInterruptHandler
 13558 ;; This function is called by:
 13559 ;;		_SYSTEM_Initialize
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563                           	psect	text57
 13564  005538                     __ptext57:
 13565                           	callstack 0
 13566  005538                     _TMR5_Initialize:
 13567                           	callstack 20
 13568  005538                     
 13569                           ;mcc_generated_files/tmr5.c: 72:     T5GCON = 0xC0;
 13570  005538  0EC0               	movlw	192
 13571  00553A  6E9B               	movwf	155,c	;volatile
 13572                           
 13573                           ;mcc_generated_files/tmr5.c: 75:     T5GATE = 0x00;
 13574  00553C  0E00               	movlw	0
 13575  00553E  6E9C               	movwf	156,c	;volatile
 13576                           
 13577                           ;mcc_generated_files/tmr5.c: 78:     T5CLK = 0x05;
 13578  005540  0E05               	movlw	5
 13579  005542  6E9D               	movwf	157,c	;volatile
 13580                           
 13581                           ;mcc_generated_files/tmr5.c: 81:     TMR5H = 0x00;
 13582  005544  0E00               	movlw	0
 13583  005546  6E99               	movwf	153,c	;volatile
 13584                           
 13585                           ;mcc_generated_files/tmr5.c: 84:     TMR5L = 0x00;
 13586  005548  0E00               	movlw	0
 13587  00554A  6E98               	movwf	152,c	;volatile
 13588  00554C                     
 13589                           ;mcc_generated_files/tmr5.c: 87:     PIR8bits.TMR5IF = 0;
 13590  00554C  0139               	movlb	57	; () banked
 13591  00554E  9DA8               	bcf	168,6,b	;volatile
 13592  005550                     
 13593                           ; BSR set to: 57
 13594                           ;mcc_generated_files/tmr5.c: 90:     timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 13595  005550  5098               	movf	152,w,c	;volatile
 13596  005552  006F FE64  F016    	movff	16281,??_TMR5_Initialize	;volatile
 13597  005558  6A17               	clrf	(??_TMR5_Initialize+1)^0,c
 13598  00555A  C016  F017         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 13599  00555E  6A16               	clrf	??_TMR5_Initialize^0,c
 13600  005560  1016               	iorwf	??_TMR5_Initialize^0,w,c
 13601  005562  0101               	movlb	1	; () banked
 13602  005564  6F88               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 13603  005566  5017               	movf	(??_TMR5_Initialize+1)^0,w,c
 13604  005568  6F89               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 13605  00556A                     
 13606                           ; BSR set to: 1
 13607                           ;mcc_generated_files/tmr5.c: 93:     PIR8bits.TMR5GIF = 0;
 13608  00556A  0139               	movlb	57	; () banked
 13609  00556C  9FA8               	bcf	168,7,b	;volatile
 13610  00556E                     
 13611                           ; BSR set to: 57
 13612                           ;mcc_generated_files/tmr5.c: 96:     PIE8bits.TMR5GIE = 1;
 13613  00556E  8F98               	bsf	152,7,b	;volatile
 13614  005570                     
 13615                           ; BSR set to: 57
 13616                           ;mcc_generated_files/tmr5.c: 99:     TMR5_SetGateInterruptHandler(TMR5_DefaultGateInterr
      +                          uptHandler);
 13617  005570  0EB8               	movlw	low _TMR5_DefaultGateInterruptHandler
 13618  005572  6E14               	movwf	TMR5_SetGateInterruptHandler@InterruptHandler^0,c
 13619  005574  0E5C               	movlw	high _TMR5_DefaultGateInterruptHandler
 13620  005576  6E15               	movwf	(TMR5_SetGateInterruptHandler@InterruptHandler+1)^0,c
 13621  005578  ECD3  F02E         	call	_TMR5_SetGateInterruptHandler	;wreg free
 13622  00557C                     
 13623                           ;mcc_generated_files/tmr5.c: 102:     T5CON = 0x03;
 13624  00557C  0E03               	movlw	3
 13625  00557E  6E9A               	movwf	154,c	;volatile
 13626  005580  0012               	return		;funcret
 13627  005582                     __end_of_TMR5_Initialize:
 13628                           	callstack 0
 13629                           
 13630 ;; *************** function _TMR5_SetGateInterruptHandler *****************
 13631 ;; Defined at:
 13632 ;;		line 186 in file "mcc_generated_files/tmr5.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13635 ;;		 -> TMR5_DefaultGateInterruptHandler(1), 
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;		None
 13638 ;; Return value:  Size  Location     Type
 13639 ;;                  1    wreg      void 
 13640 ;; Registers used:
 13641 ;;		wreg, status,2, status,0
 13642 ;; Tracked objects:
 13643 ;;		On entry : 0/0
 13644 ;;		On exit  : 0/0
 13645 ;;		Unchanged: 0/0
 13646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13651 ;;Total ram usage:        2 bytes
 13652 ;; Hardware stack levels used: 1
 13653 ;; Hardware stack levels required when called: 8
 13654 ;; This function calls:
 13655 ;;		Nothing
 13656 ;; This function is called by:
 13657 ;;		_TMR5_Initialize
 13658 ;; This function uses a non-reentrant model
 13659 ;;
 13660                           
 13661                           	psect	text58
 13662  005DA6                     __ptext58:
 13663                           	callstack 0
 13664  005DA6                     _TMR5_SetGateInterruptHandler:
 13665                           	callstack 20
 13666  005DA6                     
 13667                           ;mcc_generated_files/tmr5.c: 187:     TMR5_GateInterruptHandler = InterruptHandler;
 13668  005DA6  C014  F186         	movff	TMR5_SetGateInterruptHandler@InterruptHandler,_TMR5_GateInterruptHandler
 13669  005DAA  C015  F187         	movff	TMR5_SetGateInterruptHandler@InterruptHandler+1,_TMR5_GateInterruptHandler+1
 13670  005DAE  0012               	return		;funcret
 13671  005DB0                     __end_of_TMR5_SetGateInterruptHandler:
 13672                           	callstack 0
 13673                           
 13674 ;; *************** function _TMR4_Initialize *****************
 13675 ;; Defined at:
 13676 ;;		line 65 in file "mcc_generated_files/tmr4.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;		None
 13679 ;; Auto vars:     Size  Location     Type
 13680 ;;		None
 13681 ;; Return value:  Size  Location     Type
 13682 ;;                  1    wreg      void 
 13683 ;; Registers used:
 13684 ;;		wreg, status,2, status,0, cstack
 13685 ;; Tracked objects:
 13686 ;;		On entry : 0/0
 13687 ;;		On exit  : 0/0
 13688 ;;		Unchanged: 0/0
 13689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13694 ;;Total ram usage:        0 bytes
 13695 ;; Hardware stack levels used: 1
 13696 ;; Hardware stack levels required when called: 9
 13697 ;; This function calls:
 13698 ;;		_TMR4_SetInterruptHandler
 13699 ;; This function is called by:
 13700 ;;		_SYSTEM_Initialize
 13701 ;; This function uses a non-reentrant model
 13702 ;;
 13703                           
 13704                           	psect	text59
 13705  005B34                     __ptext59:
 13706                           	callstack 0
 13707  005B34                     _TMR4_Initialize:
 13708                           	callstack 20
 13709  005B34                     
 13710                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
 13711  005B34  0E01               	movlw	1
 13712  005B36  6EA2               	movwf	162,c	;volatile
 13713                           
 13714                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
 13715  005B38  0E00               	movlw	0
 13716  005B3A  6EA1               	movwf	161,c	;volatile
 13717                           
 13718                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
 13719  005B3C  0E00               	movlw	0
 13720  005B3E  6EA3               	movwf	163,c	;volatile
 13721                           
 13722                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0xF9;
 13723  005B40  0EF9               	movlw	249
 13724  005B42  6E9F               	movwf	159,c	;volatile
 13725                           
 13726                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
 13727  005B44  0E00               	movlw	0
 13728  005B46  6E9E               	movwf	158,c	;volatile
 13729  005B48                     
 13730                           ;mcc_generated_files/tmr4.c: 85:     PIR7bits.TMR4IF = 0;
 13731  005B48  0139               	movlb	57	; () banked
 13732  005B4A  91A7               	bcf	167,0,b	;volatile
 13733  005B4C                     
 13734                           ; BSR set to: 57
 13735                           ;mcc_generated_files/tmr4.c: 88:     PIE7bits.TMR4IE = 1;
 13736  005B4C  8197               	bsf	151,0,b	;volatile
 13737  005B4E                     
 13738                           ; BSR set to: 57
 13739                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 13740  005B4E  0EDE               	movlw	low _TMR4_DefaultInterruptHandler
 13741  005B50  6E14               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
 13742  005B52  0E5D               	movlw	high _TMR4_DefaultInterruptHandler
 13743  005B54  6E15               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
 13744  005B56  ECD8  F02E         	call	_TMR4_SetInterruptHandler	;wreg free
 13745  005B5A                     
 13746                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0xE0;
 13747  005B5A  0EE0               	movlw	224
 13748  005B5C  6EA0               	movwf	160,c	;volatile
 13749  005B5E  0012               	return		;funcret
 13750  005B60                     __end_of_TMR4_Initialize:
 13751                           	callstack 0
 13752                           
 13753 ;; *************** function _TMR4_SetInterruptHandler *****************
 13754 ;; Defined at:
 13755 ;;		line 194 in file "mcc_generated_files/tmr4.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
 13758 ;;		 -> TMR4_10msISR(1), TMR4_DefaultInterruptHandler(1), 
 13759 ;; Auto vars:     Size  Location     Type
 13760 ;;		None
 13761 ;; Return value:  Size  Location     Type
 13762 ;;                  1    wreg      void 
 13763 ;; Registers used:
 13764 ;;		wreg, status,2, status,0
 13765 ;; Tracked objects:
 13766 ;;		On entry : 0/0
 13767 ;;		On exit  : 0/0
 13768 ;;		Unchanged: 0/0
 13769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13773 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;Total ram usage:        2 bytes
 13775 ;; Hardware stack levels used: 1
 13776 ;; Hardware stack levels required when called: 8
 13777 ;; This function calls:
 13778 ;;		Nothing
 13779 ;; This function is called by:
 13780 ;;		_TMR4_Initialize
 13781 ;;		_main
 13782 ;; This function uses a non-reentrant model
 13783 ;;
 13784                           
 13785                           	psect	text60
 13786  005DB0                     __ptext60:
 13787                           	callstack 0
 13788  005DB0                     _TMR4_SetInterruptHandler:
 13789                           	callstack 22
 13790  005DB0                     
 13791                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
 13792  005DB0  C014  F182         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
 13793  005DB4  C015  F183         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
 13794  005DB8  0012               	return		;funcret
 13795  005DBA                     __end_of_TMR4_SetInterruptHandler:
 13796                           	callstack 0
 13797                           
 13798 ;; *************** function _TMR3_Initialize *****************
 13799 ;; Defined at:
 13800 ;;		line 63 in file "mcc_generated_files/tmr3.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;		None
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;		None
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  1    wreg      void 
 13807 ;; Registers used:
 13808 ;;		wreg, status,2, status,0
 13809 ;; Tracked objects:
 13810 ;;		On entry : 0/0
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13818 ;;Total ram usage:        2 bytes
 13819 ;; Hardware stack levels used: 1
 13820 ;; Hardware stack levels required when called: 8
 13821 ;; This function calls:
 13822 ;;		Nothing
 13823 ;; This function is called by:
 13824 ;;		_SYSTEM_Initialize
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           	psect	text61
 13829  005842                     __ptext61:
 13830                           	callstack 0
 13831  005842                     _TMR3_Initialize:
 13832                           	callstack 21
 13833  005842                     
 13834                           ;mcc_generated_files/tmr3.c: 68:     T3GCON = 0x00;
 13835  005842  0E00               	movlw	0
 13836  005844  6EA7               	movwf	167,c	;volatile
 13837                           
 13838                           ;mcc_generated_files/tmr3.c: 71:     T3GATE = 0x00;
 13839  005846  0E00               	movlw	0
 13840  005848  6EA8               	movwf	168,c	;volatile
 13841                           
 13842                           ;mcc_generated_files/tmr3.c: 74:     T3CLK = 0x05;
 13843  00584A  0E05               	movlw	5
 13844  00584C  6EA9               	movwf	169,c	;volatile
 13845                           
 13846                           ;mcc_generated_files/tmr3.c: 77:     TMR3H = 0x00;
 13847  00584E  0E00               	movlw	0
 13848  005850  6EA5               	movwf	165,c	;volatile
 13849                           
 13850                           ;mcc_generated_files/tmr3.c: 80:     TMR3L = 0x00;
 13851  005852  0E00               	movlw	0
 13852  005854  6EA4               	movwf	164,c	;volatile
 13853  005856                     
 13854                           ;mcc_generated_files/tmr3.c: 83:     PIR6bits.TMR3IF = 0;
 13855  005856  0139               	movlb	57	; () banked
 13856  005858  9DA6               	bcf	166,6,b	;volatile
 13857  00585A                     
 13858                           ; BSR set to: 57
 13859                           ;mcc_generated_files/tmr3.c: 86:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 13860  00585A  50A4               	movf	164,w,c	;volatile
 13861  00585C  006F FE94  F014    	movff	16293,??_TMR3_Initialize	;volatile
 13862  005862  6A15               	clrf	(??_TMR3_Initialize+1)^0,c
 13863  005864  C014  F015         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 13864  005868  6A14               	clrf	??_TMR3_Initialize^0,c
 13865  00586A  1014               	iorwf	??_TMR3_Initialize^0,w,c
 13866  00586C  0101               	movlb	1	; () banked
 13867  00586E  6F84               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 13868  005870  5015               	movf	(??_TMR3_Initialize+1)^0,w,c
 13869  005872  6F85               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 13870  005874                     
 13871                           ; BSR set to: 1
 13872                           ;mcc_generated_files/tmr3.c: 89:     T3CON = 0x01;
 13873  005874  0E01               	movlw	1
 13874  005876  6EA6               	movwf	166,c	;volatile
 13875  005878                     
 13876                           ; BSR set to: 1
 13877  005878  0012               	return		;funcret
 13878  00587A                     __end_of_TMR3_Initialize:
 13879                           	callstack 0
 13880                           
 13881 ;; *************** function _TMR2_Initialize *****************
 13882 ;; Defined at:
 13883 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;		None
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;		None
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  1    wreg      void 
 13890 ;; Registers used:
 13891 ;;		wreg, status,2
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13901 ;;Total ram usage:        0 bytes
 13902 ;; Hardware stack levels used: 1
 13903 ;; Hardware stack levels required when called: 8
 13904 ;; This function calls:
 13905 ;;		Nothing
 13906 ;; This function is called by:
 13907 ;;		_SYSTEM_Initialize
 13908 ;; This function uses a non-reentrant model
 13909 ;;
 13910                           
 13911                           	psect	text62
 13912  005C9C                     __ptext62:
 13913                           	callstack 0
 13914  005C9C                     _TMR2_Initialize:
 13915                           	callstack 21
 13916  005C9C                     
 13917                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x05;
 13918  005C9C  0E05               	movlw	5
 13919  005C9E  6EAE               	movwf	174,c	;volatile
 13920                           
 13921                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 13922  005CA0  0E00               	movlw	0
 13923  005CA2  6EAD               	movwf	173,c	;volatile
 13924                           
 13925                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 13926  005CA4  0E00               	movlw	0
 13927  005CA6  6EAF               	movwf	175,c	;volatile
 13928  005CA8                     
 13929                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 13930  005CA8  68AB               	setf	171,c	;volatile
 13931                           
 13932                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 13933  005CAA  0E00               	movlw	0
 13934  005CAC  6EAA               	movwf	170,c	;volatile
 13935  005CAE                     
 13936                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 13937  005CAE  0139               	movlb	57	; () banked
 13938  005CB0  95A4               	bcf	164,2,b	;volatile
 13939                           
 13940                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xB0;
 13941  005CB2  0EB0               	movlw	176
 13942  005CB4  6EAC               	movwf	172,c	;volatile
 13943  005CB6                     
 13944                           ; BSR set to: 57
 13945  005CB6  0012               	return		;funcret
 13946  005CB8                     __end_of_TMR2_Initialize:
 13947                           	callstack 0
 13948                           
 13949 ;; *************** function _SMT1_Initialize *****************
 13950 ;; Defined at:
 13951 ;;		line 60 in file "mcc_generated_files/smt1.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;		None
 13954 ;; Auto vars:     Size  Location     Type
 13955 ;;		None
 13956 ;; Return value:  Size  Location     Type
 13957 ;;                  1    wreg      void 
 13958 ;; Registers used:
 13959 ;;		wreg, status,2
 13960 ;; Tracked objects:
 13961 ;;		On entry : 0/0
 13962 ;;		On exit  : 0/0
 13963 ;;		Unchanged: 0/0
 13964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13969 ;;Total ram usage:        0 bytes
 13970 ;; Hardware stack levels used: 1
 13971 ;; Hardware stack levels required when called: 8
 13972 ;; This function calls:
 13973 ;;		Nothing
 13974 ;; This function is called by:
 13975 ;;		_SYSTEM_Initialize
 13976 ;; This function uses a non-reentrant model
 13977 ;;
 13978                           
 13979                           	psect	text63
 13980  005A1A                     __ptext63:
 13981                           	callstack 0
 13982  005A1A                     _SMT1_Initialize:
 13983                           	callstack 21
 13984  005A1A                     
 13985                           ;mcc_generated_files/smt1.c: 63:     SMT1CON0 = 0x80;
 13986  005A1A  0E80               	movlw	128
 13987  005A1C  013F               	movlb	63	; () banked
 13988  005A1E  6F1E               	movwf	30,b	;volatile
 13989                           
 13990                           ;mcc_generated_files/smt1.c: 66:     SMT1CON1 = 0x42;
 13991  005A20  0E42               	movlw	66
 13992  005A22  6F1F               	movwf	31,b	;volatile
 13993                           
 13994                           ;mcc_generated_files/smt1.c: 69:     SMT1STAT = 0x00;
 13995  005A24  0E00               	movlw	0
 13996  005A26  6F20               	movwf	32,b	;volatile
 13997                           
 13998                           ;mcc_generated_files/smt1.c: 72:     SMT1CLK = 0x04;
 13999  005A28  0E04               	movlw	4
 14000  005A2A  6F21               	movwf	33,b	;volatile
 14001                           
 14002                           ;mcc_generated_files/smt1.c: 75:     SMT1WIN = 0x00;
 14003  005A2C  0E00               	movlw	0
 14004  005A2E  6F23               	movwf	35,b	;volatile
 14005                           
 14006                           ;mcc_generated_files/smt1.c: 78:     SMT1SIG = 0x00;
 14007  005A30  0E00               	movlw	0
 14008  005A32  6F22               	movwf	34,b	;volatile
 14009                           
 14010                           ;mcc_generated_files/smt1.c: 81:     SMT1PRU = 0x01;
 14011  005A34  0E01               	movlw	1
 14012  005A36  6F1D               	movwf	29,b	;volatile
 14013  005A38                     
 14014                           ; BSR set to: 63
 14015                           ;mcc_generated_files/smt1.c: 84:     SMT1PRH = 0xFF;
 14016  005A38  691C               	setf	28,b	;volatile
 14017  005A3A                     
 14018                           ; BSR set to: 63
 14019                           ;mcc_generated_files/smt1.c: 87:     SMT1PRL = 0xFF;
 14020  005A3A  691B               	setf	27,b	;volatile
 14021  005A3C                     
 14022                           ; BSR set to: 63
 14023                           ;mcc_generated_files/smt1.c: 90:     PIE1bits.SMT1IE = 1;
 14024  005A3C  0139               	movlb	57	; () banked
 14025  005A3E  8B91               	bsf	145,5,b	;volatile
 14026  005A40                     
 14027                           ; BSR set to: 57
 14028                           ;mcc_generated_files/smt1.c: 93:     PIE1bits.SMT1PWAIE = 1;
 14029  005A40  8F91               	bsf	145,7,b	;volatile
 14030  005A42                     
 14031                           ; BSR set to: 57
 14032                           ;mcc_generated_files/smt1.c: 96:     PIE1bits.SMT1PRAIE = 1;
 14033  005A42  8D91               	bsf	145,6,b	;volatile
 14034  005A44                     
 14035                           ; BSR set to: 57
 14036                           ;mcc_generated_files/smt1.c: 99:     SMT1CON1bits.SMT1GO = 1;
 14037  005A44  013F               	movlb	63	; () banked
 14038  005A46  8F1F               	bsf	31,7,b	;volatile
 14039  005A48                     
 14040                           ; BSR set to: 63
 14041  005A48  0012               	return		;funcret
 14042  005A4A                     __end_of_SMT1_Initialize:
 14043                           	callstack 0
 14044                           
 14045 ;; *************** function _PWM8_Initialize *****************
 14046 ;; Defined at:
 14047 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;		None
 14050 ;; Auto vars:     Size  Location     Type
 14051 ;;		None
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  1    wreg      void 
 14054 ;; Registers used:
 14055 ;;		wreg, status,2
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14065 ;;Total ram usage:        0 bytes
 14066 ;; Hardware stack levels used: 1
 14067 ;; Hardware stack levels required when called: 8
 14068 ;; This function calls:
 14069 ;;		Nothing
 14070 ;; This function is called by:
 14071 ;;		_SYSTEM_Initialize
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text64
 14076  005CD4                     __ptext64:
 14077                           	callstack 0
 14078  005CD4                     _PWM8_Initialize:
 14079                           	callstack 21
 14080  005CD4                     
 14081                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 14082  005CD4  0E80               	movlw	128
 14083  005CD6  6E62               	movwf	98,c	;volatile
 14084                           
 14085                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 14086  005CD8  0E00               	movlw	0
 14087  005CDA  6E61               	movwf	97,c	;volatile
 14088                           
 14089                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x00;
 14090  005CDC  0E00               	movlw	0
 14091  005CDE  6E60               	movwf	96,c	;volatile
 14092                           
 14093                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 2;
 14094  005CE0  013F               	movlb	63	; () banked
 14095  005CE2  515F               	movf	95,w,b	;volatile
 14096  005CE4  0B3F               	andlw	-193
 14097  005CE6  0980               	iorlw	128
 14098  005CE8  6F5F               	movwf	95,b	;volatile
 14099  005CEA                     
 14100                           ; BSR set to: 63
 14101  005CEA  0012               	return		;funcret
 14102  005CEC                     __end_of_PWM8_Initialize:
 14103                           	callstack 0
 14104                           
 14105 ;; *************** function _PWM7_Initialize *****************
 14106 ;; Defined at:
 14107 ;;		line 58 in file "mcc_generated_files/pwm7.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;		None
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      void 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;Total ram usage:        0 bytes
 14126 ;; Hardware stack levels used: 1
 14127 ;; Hardware stack levels required when called: 8
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_SYSTEM_Initialize
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           	psect	text65
 14136  005CEC                     __ptext65:
 14137                           	callstack 0
 14138  005CEC                     _PWM7_Initialize:
 14139                           	callstack 21
 14140  005CEC                     
 14141                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
 14142  005CEC  0E80               	movlw	128
 14143  005CEE  6E66               	movwf	102,c	;volatile
 14144                           
 14145                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x00;
 14146  005CF0  0E00               	movlw	0
 14147  005CF2  6E65               	movwf	101,c	;volatile
 14148                           
 14149                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0x00;
 14150  005CF4  0E00               	movlw	0
 14151  005CF6  6E64               	movwf	100,c	;volatile
 14152                           
 14153                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 2;
 14154  005CF8  013F               	movlb	63	; () banked
 14155  005CFA  515F               	movf	95,w,b	;volatile
 14156  005CFC  0BCF               	andlw	-49
 14157  005CFE  0920               	iorlw	32
 14158  005D00  6F5F               	movwf	95,b	;volatile
 14159  005D02                     
 14160                           ; BSR set to: 63
 14161  005D02  0012               	return		;funcret
 14162  005D04                     __end_of_PWM7_Initialize:
 14163                           	callstack 0
 14164                           
 14165 ;; *************** function _PWM6_Initialize *****************
 14166 ;; Defined at:
 14167 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 14168 ;; Parameters:    Size  Location     Type
 14169 ;;		None
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;		None
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  1    wreg      void 
 14174 ;; Registers used:
 14175 ;;		wreg, status,2
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14185 ;;Total ram usage:        0 bytes
 14186 ;; Hardware stack levels used: 1
 14187 ;; Hardware stack levels required when called: 8
 14188 ;; This function calls:
 14189 ;;		Nothing
 14190 ;; This function is called by:
 14191 ;;		_SYSTEM_Initialize
 14192 ;; This function uses a non-reentrant model
 14193 ;;
 14194                           
 14195                           	psect	text66
 14196  005D04                     __ptext66:
 14197                           	callstack 0
 14198  005D04                     _PWM6_Initialize:
 14199                           	callstack 21
 14200  005D04                     
 14201                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 14202  005D04  0E80               	movlw	128
 14203  005D06  6E6A               	movwf	106,c	;volatile
 14204                           
 14205                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x59;
 14206  005D08  0E59               	movlw	89
 14207  005D0A  6E69               	movwf	105,c	;volatile
 14208                           
 14209                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 14210  005D0C  0E40               	movlw	64
 14211  005D0E  6E68               	movwf	104,c	;volatile
 14212                           
 14213                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 14214  005D10  013F               	movlb	63	; () banked
 14215  005D12  515F               	movf	95,w,b	;volatile
 14216  005D14  0BF3               	andlw	-13
 14217  005D16  0904               	iorlw	4
 14218  005D18  6F5F               	movwf	95,b	;volatile
 14219  005D1A                     
 14220                           ; BSR set to: 63
 14221  005D1A  0012               	return		;funcret
 14222  005D1C                     __end_of_PWM6_Initialize:
 14223                           	callstack 0
 14224                           
 14225 ;; *************** function _PWM5_Initialize *****************
 14226 ;; Defined at:
 14227 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;		None
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;		None
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      void 
 14234 ;; Registers used:
 14235 ;;		wreg, status,2
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;Total ram usage:        0 bytes
 14246 ;; Hardware stack levels used: 1
 14247 ;; Hardware stack levels required when called: 8
 14248 ;; This function calls:
 14249 ;;		Nothing
 14250 ;; This function is called by:
 14251 ;;		_SYSTEM_Initialize
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           	psect	text67
 14256  005D1C                     __ptext67:
 14257                           	callstack 0
 14258  005D1C                     _PWM5_Initialize:
 14259                           	callstack 21
 14260  005D1C                     
 14261                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 14262  005D1C  0E80               	movlw	128
 14263  005D1E  6E6E               	movwf	110,c	;volatile
 14264                           
 14265                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x59;
 14266  005D20  0E59               	movlw	89
 14267  005D22  6E6D               	movwf	109,c	;volatile
 14268                           
 14269                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 14270  005D24  0E40               	movlw	64
 14271  005D26  6E6C               	movwf	108,c	;volatile
 14272                           
 14273                           ;mcc_generated_files/pwm5.c: 71:     CCPTMRS1bits.P5TSEL = 1;
 14274  005D28  013F               	movlb	63	; () banked
 14275  005D2A  515F               	movf	95,w,b	;volatile
 14276  005D2C  0BFC               	andlw	-4
 14277  005D2E  0901               	iorlw	1
 14278  005D30  6F5F               	movwf	95,b	;volatile
 14279  005D32                     
 14280                           ; BSR set to: 63
 14281  005D32  0012               	return		;funcret
 14282  005D34                     __end_of_PWM5_Initialize:
 14283                           	callstack 0
 14284                           
 14285 ;; *************** function _PMD_Initialize *****************
 14286 ;; Defined at:
 14287 ;;		line 86 in file "mcc_generated_files/mcc.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;		None
 14290 ;; Auto vars:     Size  Location     Type
 14291 ;;		None
 14292 ;; Return value:  Size  Location     Type
 14293 ;;                  1    wreg      void 
 14294 ;; Registers used:
 14295 ;;		wreg, status,2
 14296 ;; Tracked objects:
 14297 ;;		On entry : 0/0
 14298 ;;		On exit  : 0/0
 14299 ;;		Unchanged: 0/0
 14300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;Total ram usage:        0 bytes
 14306 ;; Hardware stack levels used: 1
 14307 ;; Hardware stack levels required when called: 8
 14308 ;; This function calls:
 14309 ;;		Nothing
 14310 ;; This function is called by:
 14311 ;;		_SYSTEM_Initialize
 14312 ;; This function uses a non-reentrant model
 14313 ;;
 14314                           
 14315                           	psect	text68
 14316  005C34                     __ptext68:
 14317                           	callstack 0
 14318  005C34                     _PMD_Initialize:
 14319                           	callstack 21
 14320  005C34                     
 14321                           ;mcc_generated_files/mcc.c: 89:     PMD0 = 0x00;
 14322  005C34  0E00               	movlw	0
 14323  005C36  0139               	movlb	57	; () banked
 14324  005C38  6FC0               	movwf	192,b	;volatile
 14325                           
 14326                           ;mcc_generated_files/mcc.c: 91:     PMD1 = 0x00;
 14327  005C3A  0E00               	movlw	0
 14328  005C3C  6FC1               	movwf	193,b	;volatile
 14329                           
 14330                           ;mcc_generated_files/mcc.c: 93:     PMD2 = 0x00;
 14331  005C3E  0E00               	movlw	0
 14332  005C40  6FC2               	movwf	194,b	;volatile
 14333                           
 14334                           ;mcc_generated_files/mcc.c: 95:     PMD3 = 0x00;
 14335  005C42  0E00               	movlw	0
 14336  005C44  6FC3               	movwf	195,b	;volatile
 14337                           
 14338                           ;mcc_generated_files/mcc.c: 97:     PMD4 = 0x00;
 14339  005C46  0E00               	movlw	0
 14340  005C48  6FC4               	movwf	196,b	;volatile
 14341                           
 14342                           ;mcc_generated_files/mcc.c: 99:     PMD5 = 0x00;
 14343  005C4A  0E00               	movlw	0
 14344  005C4C  6FC5               	movwf	197,b	;volatile
 14345                           
 14346                           ;mcc_generated_files/mcc.c: 101:     PMD6 = 0x00;
 14347  005C4E  0E00               	movlw	0
 14348  005C50  6FC6               	movwf	198,b	;volatile
 14349                           
 14350                           ;mcc_generated_files/mcc.c: 103:     PMD7 = 0x00;
 14351  005C52  0E00               	movlw	0
 14352  005C54  6FC7               	movwf	199,b	;volatile
 14353  005C56                     
 14354                           ; BSR set to: 57
 14355  005C56  0012               	return		;funcret
 14356  005C58                     __end_of_PMD_Initialize:
 14357                           	callstack 0
 14358                           
 14359 ;; *************** function _PIN_MANAGER_Initialize *****************
 14360 ;; Defined at:
 14361 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;		None
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;		None
 14366 ;; Return value:  Size  Location     Type
 14367 ;;                  1    wreg      void 
 14368 ;; Registers used:
 14369 ;;		wreg, status,2
 14370 ;; Tracked objects:
 14371 ;;		On entry : 0/0
 14372 ;;		On exit  : 0/0
 14373 ;;		Unchanged: 0/0
 14374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14379 ;;Total ram usage:        0 bytes
 14380 ;; Hardware stack levels used: 1
 14381 ;; Hardware stack levels required when called: 8
 14382 ;; This function calls:
 14383 ;;		Nothing
 14384 ;; This function is called by:
 14385 ;;		_SYSTEM_Initialize
 14386 ;; This function uses a non-reentrant model
 14387 ;;
 14388                           
 14389                           	psect	text69
 14390  004B3E                     __ptext69:
 14391                           	callstack 0
 14392  004B3E                     _PIN_MANAGER_Initialize:
 14393                           	callstack 21
 14394  004B3E                     
 14395                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 14396  004B3E  0E00               	movlw	0
 14397  004B40  6EBE               	movwf	190,c	;volatile
 14398                           
 14399                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 14400  004B42  0E00               	movlw	0
 14401  004B44  6EBD               	movwf	189,c	;volatile
 14402                           
 14403                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x24;
 14404  004B46  0E24               	movlw	36
 14405  004B48  6EBA               	movwf	186,c	;volatile
 14406                           
 14407                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 14408  004B4A  0E00               	movlw	0
 14409  004B4C  6EBB               	movwf	187,c	;volatile
 14410                           
 14411                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 14412  004B4E  0E00               	movlw	0
 14413  004B50  6EBC               	movwf	188,c	;volatile
 14414                           
 14415                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 14416  004B52  0E07               	movlw	7
 14417  004B54  6EC6               	movwf	198,c	;volatile
 14418                           
 14419                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xC0;
 14420  004B56  0EC0               	movlw	192
 14421  004B58  6EC2               	movwf	194,c	;volatile
 14422                           
 14423                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xF7;
 14424  004B5A  0EF7               	movlw	247
 14425  004B5C  6EC3               	movwf	195,c	;volatile
 14426  004B5E                     
 14427                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 14428  004B5E  68C4               	setf	196,c	;volatile
 14429  004B60                     
 14430                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 14431  004B60  68C5               	setf	197,c	;volatile
 14432                           
 14433                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x1F;
 14434  004B62  0E1F               	movlw	31
 14435  004B64  013A               	movlb	58	; () banked
 14436  004B66  6F70               	movwf	112,b	;volatile
 14437  004B68                     
 14438                           ; BSR set to: 58
 14439                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xFF;
 14440  004B68  6960               	setf	96,b	;volatile
 14441                           
 14442                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC0;
 14443  004B6A  0EC0               	movlw	192
 14444  004B6C  6F50               	movwf	80,b	;volatile
 14445                           
 14446                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 14447  004B6E  0E07               	movlw	7
 14448  004B70  6F80               	movwf	128,b	;volatile
 14449                           
 14450                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x7F;
 14451  004B72  0E7F               	movlw	127
 14452  004B74  6F40               	movwf	64,b	;volatile
 14453                           
 14454                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 14455  004B76  0E00               	movlw	0
 14456  004B78  6F71               	movwf	113,b	;volatile
 14457                           
 14458                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 14459  004B7A  0E00               	movlw	0
 14460  004B7C  6F81               	movwf	129,b	;volatile
 14461                           
 14462                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 14463  004B7E  0E00               	movlw	0
 14464  004B80  6F51               	movwf	81,b	;volatile
 14465                           
 14466                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 14467  004B82  0E00               	movlw	0
 14468  004B84  6F41               	movwf	65,b	;volatile
 14469                           
 14470                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 14471  004B86  0E00               	movlw	0
 14472  004B88  6F61               	movwf	97,b	;volatile
 14473                           
 14474                           ;mcc_generated_files/pin_manager.c: 96:     RB1I2C = 0x00;
 14475  004B8A  0E00               	movlw	0
 14476  004B8C  6F5A               	movwf	90,b	;volatile
 14477                           
 14478                           ;mcc_generated_files/pin_manager.c: 97:     RB2I2C = 0x00;
 14479  004B8E  0E00               	movlw	0
 14480  004B90  6F5B               	movwf	91,b	;volatile
 14481                           
 14482                           ;mcc_generated_files/pin_manager.c: 98:     RC3I2C = 0x00;
 14483  004B92  0E00               	movlw	0
 14484  004B94  6F6A               	movwf	106,b	;volatile
 14485                           
 14486                           ;mcc_generated_files/pin_manager.c: 99:     RC4I2C = 0x00;
 14487  004B96  0E00               	movlw	0
 14488  004B98  6F6B               	movwf	107,b	;volatile
 14489                           
 14490                           ;mcc_generated_files/pin_manager.c: 100:     RD0I2C = 0x00;
 14491  004B9A  0E00               	movlw	0
 14492  004B9C  6F7A               	movwf	122,b	;volatile
 14493                           
 14494                           ;mcc_generated_files/pin_manager.c: 101:     RD1I2C = 0x00;
 14495  004B9E  0E00               	movlw	0
 14496  004BA0  6F7B               	movwf	123,b	;volatile
 14497                           
 14498                           ;mcc_generated_files/pin_manager.c: 106:     ODCONE = 0x00;
 14499  004BA2  0E00               	movlw	0
 14500  004BA4  6F82               	movwf	130,b	;volatile
 14501                           
 14502                           ;mcc_generated_files/pin_manager.c: 107:     ODCONA = 0x00;
 14503  004BA6  0E00               	movlw	0
 14504  004BA8  6F42               	movwf	66,b	;volatile
 14505                           
 14506                           ;mcc_generated_files/pin_manager.c: 108:     ODCONB = 0x00;
 14507  004BAA  0E00               	movlw	0
 14508  004BAC  6F52               	movwf	82,b	;volatile
 14509                           
 14510                           ;mcc_generated_files/pin_manager.c: 109:     ODCONC = 0x00;
 14511  004BAE  0E00               	movlw	0
 14512  004BB0  6F62               	movwf	98,b	;volatile
 14513                           
 14514                           ;mcc_generated_files/pin_manager.c: 110:     ODCOND = 0x00;
 14515  004BB2  0E00               	movlw	0
 14516  004BB4  6F72               	movwf	114,b	;volatile
 14517  004BB6                     
 14518                           ; BSR set to: 58
 14519                           ;mcc_generated_files/pin_manager.c: 115:     SLRCONA = 0xFF;
 14520  004BB6  6943               	setf	67,b	;volatile
 14521  004BB8                     
 14522                           ; BSR set to: 58
 14523                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONB = 0xFF;
 14524  004BB8  6953               	setf	83,b	;volatile
 14525  004BBA                     
 14526                           ; BSR set to: 58
 14527                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONC = 0xFF;
 14528  004BBA  6963               	setf	99,b	;volatile
 14529  004BBC                     
 14530                           ; BSR set to: 58
 14531                           ;mcc_generated_files/pin_manager.c: 118:     SLRCOND = 0xFF;
 14532  004BBC  6973               	setf	115,b	;volatile
 14533                           
 14534                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONE = 0x07;
 14535  004BBE  0E07               	movlw	7
 14536  004BC0  6F83               	movwf	131,b	;volatile
 14537  004BC2                     
 14538                           ; BSR set to: 58
 14539                           ;mcc_generated_files/pin_manager.c: 124:     INLVLA = 0xFF;
 14540  004BC2  6944               	setf	68,b	;volatile
 14541  004BC4                     
 14542                           ; BSR set to: 58
 14543                           ;mcc_generated_files/pin_manager.c: 125:     INLVLB = 0xFF;
 14544  004BC4  6954               	setf	84,b	;volatile
 14545  004BC6                     
 14546                           ; BSR set to: 58
 14547                           ;mcc_generated_files/pin_manager.c: 126:     INLVLC = 0xFF;
 14548  004BC6  6964               	setf	100,b	;volatile
 14549  004BC8                     
 14550                           ; BSR set to: 58
 14551                           ;mcc_generated_files/pin_manager.c: 127:     INLVLD = 0xFF;
 14552  004BC8  6974               	setf	116,b	;volatile
 14553                           
 14554                           ;mcc_generated_files/pin_manager.c: 128:     INLVLE = 0x0F;
 14555  004BCA  0E0F               	movlw	15
 14556  004BCC  6F84               	movwf	132,b	;volatile
 14557                           
 14558                           ;mcc_generated_files/pin_manager.c: 137:     CCP3PPS = 0x1F;
 14559  004BCE  0E1F               	movlw	31
 14560  004BD0  6FCF               	movwf	207,b	;volatile
 14561                           
 14562                           ;mcc_generated_files/pin_manager.c: 138:     CLCIN3PPS = 0x09;
 14563  004BD2  0E09               	movlw	9
 14564  004BD4  6FDC               	movwf	220,b	;volatile
 14565                           
 14566                           ;mcc_generated_files/pin_manager.c: 139:     RA1PPS = 0x0E;
 14567  004BD6  0E0E               	movlw	14
 14568  004BD8  6F01               	movwf	1,b	;volatile
 14569                           
 14570                           ;mcc_generated_files/pin_manager.c: 140:     U1RXPPS = 0x0A;
 14571  004BDA  0E0A               	movlw	10
 14572  004BDC  6FE5               	movwf	229,b	;volatile
 14573                           
 14574                           ;mcc_generated_files/pin_manager.c: 141:     RA0PPS = 0x0D;
 14575  004BDE  0E0D               	movlw	13
 14576  004BE0  6F00               	movwf	0,b	;volatile
 14577                           
 14578                           ;mcc_generated_files/pin_manager.c: 142:     T5GPPS = 0x1D;
 14579  004BE2  0E1D               	movlw	29
 14580  004BE4  6FC9               	movwf	201,b	;volatile
 14581                           
 14582                           ;mcc_generated_files/pin_manager.c: 143:     RA4PPS = 0x10;
 14583  004BE6  0E10               	movlw	16
 14584  004BE8  6F04               	movwf	4,b	;volatile
 14585                           
 14586                           ;mcc_generated_files/pin_manager.c: 144:     CLCIN0PPS = 0x07;
 14587  004BEA  0E07               	movlw	7
 14588  004BEC  6FD9               	movwf	217,b	;volatile
 14589                           
 14590                           ;mcc_generated_files/pin_manager.c: 145:     SMT1WINPPS = 0x09;
 14591  004BEE  0E09               	movlw	9
 14592  004BF0  6FD1               	movwf	209,b	;volatile
 14593                           
 14594                           ;mcc_generated_files/pin_manager.c: 146:     RA3PPS = 0x0F;
 14595  004BF2  0E0F               	movlw	15
 14596  004BF4  6F03               	movwf	3,b	;volatile
 14597                           
 14598                           ;mcc_generated_files/pin_manager.c: 147:     RB3PPS = 0x13;
 14599  004BF6  0E13               	movlw	19
 14600  004BF8  6F0B               	movwf	11,b	;volatile
 14601                           
 14602                           ;mcc_generated_files/pin_manager.c: 148:     CLCIN2PPS = 0x08;
 14603  004BFA  0E08               	movlw	8
 14604  004BFC  6FDB               	movwf	219,b	;volatile
 14605                           
 14606                           ;mcc_generated_files/pin_manager.c: 149:     SMT1SIGPPS = 0x08;
 14607  004BFE  0E08               	movlw	8
 14608  004C00  6FD2               	movwf	210,b	;volatile
 14609                           
 14610                           ;mcc_generated_files/pin_manager.c: 150:     CCP4PPS = 0x1E;
 14611  004C02  0E1E               	movlw	30
 14612  004C04  6FD0               	movwf	208,b	;volatile
 14613  004C06                     
 14614                           ; BSR set to: 58
 14615  004C06  0012               	return		;funcret
 14616  004C08                     __end_of_PIN_MANAGER_Initialize:
 14617                           	callstack 0
 14618                           
 14619 ;; *************** function _OSCILLATOR_Initialize *****************
 14620 ;; Defined at:
 14621 ;;		line 72 in file "mcc_generated_files/mcc.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;		None
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;		None
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  1    wreg      void 
 14628 ;; Registers used:
 14629 ;;		wreg, status,2
 14630 ;; Tracked objects:
 14631 ;;		On entry : 0/0
 14632 ;;		On exit  : 0/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14639 ;;Total ram usage:        0 bytes
 14640 ;; Hardware stack levels used: 1
 14641 ;; Hardware stack levels required when called: 8
 14642 ;; This function calls:
 14643 ;;		Nothing
 14644 ;; This function is called by:
 14645 ;;		_SYSTEM_Initialize
 14646 ;; This function uses a non-reentrant model
 14647 ;;
 14648                           
 14649                           	psect	text70
 14650  005D34                     __ptext70:
 14651                           	callstack 0
 14652  005D34                     _OSCILLATOR_Initialize:
 14653                           	callstack 21
 14654  005D34                     
 14655                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x60;
 14656  005D34  0E60               	movlw	96
 14657  005D36  0139               	movlb	57	; () banked
 14658  005D38  6FD9               	movwf	217,b	;volatile
 14659                           
 14660                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 14661  005D3A  0E00               	movlw	0
 14662  005D3C  6FDB               	movwf	219,b	;volatile
 14663                           
 14664                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 14665  005D3E  0E00               	movlw	0
 14666  005D40  6FDD               	movwf	221,b	;volatile
 14667                           
 14668                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x08;
 14669  005D42  0E08               	movlw	8
 14670  005D44  6FDF               	movwf	223,b	;volatile
 14671                           
 14672                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 14673  005D46  0E00               	movlw	0
 14674  005D48  6FDE               	movwf	222,b	;volatile
 14675  005D4A                     
 14676                           ; BSR set to: 57
 14677  005D4A  0012               	return		;funcret
 14678  005D4C                     __end_of_OSCILLATOR_Initialize:
 14679                           	callstack 0
 14680                           
 14681 ;; *************** function _INTERRUPT_Initialize *****************
 14682 ;; Defined at:
 14683 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;		None
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;  state           1   19[COMRAM] _Bool 
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1    wreg      void 
 14690 ;; Registers used:
 14691 ;;		wreg, status,2
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;Total ram usage:        1 bytes
 14702 ;; Hardware stack levels used: 1
 14703 ;; Hardware stack levels required when called: 8
 14704 ;; This function calls:
 14705 ;;		Nothing
 14706 ;; This function is called by:
 14707 ;;		_SYSTEM_Initialize
 14708 ;; This function uses a non-reentrant model
 14709 ;;
 14710                           
 14711                           	psect	text71
 14712  005458                     __ptext71:
 14713                           	callstack 0
 14714  005458                     _INTERRUPT_Initialize:
 14715                           	callstack 21
 14716  005458                     
 14717                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14718  005458  8AD2               	bsf	210,5,c	;volatile
 14719  00545A                     
 14720                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14721  00545A  0E00               	movlw	0
 14722  00545C  BED2               	btfsc	16338,7,c	;volatile
 14723  00545E  0E01               	movlw	1
 14724  005460  6E14               	movwf	INTERRUPT_Initialize@state^0,c
 14725  005462                     
 14726                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14727  005462  9ED2               	bcf	16338,7,c	;volatile
 14728                           
 14729                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14730  005464  0E55               	movlw	85
 14731  005466  6ED4               	movwf	212,c	;volatile
 14732                           
 14733                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14734  005468  0EAA               	movlw	170
 14735  00546A  6ED4               	movwf	212,c	;volatile
 14736  00546C                     
 14737                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14738  00546C  90D4               	bcf	212,0,c	;volatile
 14739                           
 14740                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 14741  00546E  0E00               	movlw	0
 14742  005470  6ED7               	movwf	215,c	;volatile
 14743                           
 14744                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 14745  005472  0E00               	movlw	0
 14746  005474  6ED6               	movwf	214,c	;volatile
 14747                           
 14748                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 14749  005476  0E08               	movlw	8
 14750  005478  6ED5               	movwf	213,c	;volatile
 14751                           
 14752                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14753  00547A  0E55               	movlw	85
 14754  00547C  6ED4               	movwf	212,c	;volatile
 14755                           
 14756                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14757  00547E  0EAA               	movlw	170
 14758  005480  6ED4               	movwf	212,c	;volatile
 14759  005482                     
 14760                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14761  005482  80D4               	bsf	212,0,c	;volatile
 14762  005484                     
 14763                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14764  005484  B014               	btfsc	INTERRUPT_Initialize@state^0,0,c
 14765  005486  D002               	bra	u2845
 14766  005488  9ED2               	bcf	16338,7,c	;volatile
 14767  00548A  D001               	bra	u2846
 14768  00548C                     u2845:
 14769  00548C  8ED2               	bsf	16338,7,c	;volatile
 14770  00548E                     u2846:
 14771  00548E                     
 14772                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 0;
 14773  00548E  0139               	movlb	57	; () banked
 14774  005490  9983               	bcf	131,4,b	;volatile
 14775  005492                     
 14776                           ; BSR set to: 57
 14777                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 0;
 14778  005492  9783               	bcf	131,3,b	;volatile
 14779  005494                     
 14780                           ; BSR set to: 57
 14781                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR1bits.SMT1PWAIP = 1;
 14782  005494  8F81               	bsf	129,7,b	;volatile
 14783  005496                     
 14784                           ; BSR set to: 57
 14785                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR1bits.SMT1IP = 1;
 14786  005496  8B81               	bsf	129,5,b	;volatile
 14787  005498                     
 14788                           ; BSR set to: 57
 14789                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR1bits.SMT1PRAIP = 1;
 14790  005498  8D81               	bsf	129,6,b	;volatile
 14791  00549A                     
 14792                           ; BSR set to: 57
 14793                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR10bits.CCP4IP = 1;
 14794  00549A  818A               	bsf	138,0,b	;volatile
 14795  00549C                     
 14796                           ; BSR set to: 57
 14797                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR8bits.TMR5GIP = 1;
 14798  00549C  8F88               	bsf	136,7,b	;volatile
 14799  00549E                     
 14800                           ; BSR set to: 57
 14801                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR7bits.TMR4IP = 0;
 14802  00549E  9187               	bcf	135,0,b	;volatile
 14803  0054A0                     
 14804                           ; BSR set to: 57
 14805                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR9bits.CCP3IP = 1;
 14806  0054A0  8389               	bsf	137,1,b	;volatile
 14807  0054A2                     
 14808                           ; BSR set to: 57
 14809  0054A2  0012               	return		;funcret
 14810  0054A4                     __end_of_INTERRUPT_Initialize:
 14811                           	callstack 0
 14812                           
 14813 ;; *************** function _CLC3_Initialize *****************
 14814 ;; Defined at:
 14815 ;;		line 58 in file "mcc_generated_files/clc3.c"
 14816 ;; Parameters:    Size  Location     Type
 14817 ;;		None
 14818 ;; Auto vars:     Size  Location     Type
 14819 ;;		None
 14820 ;; Return value:  Size  Location     Type
 14821 ;;                  1    wreg      void 
 14822 ;; Registers used:
 14823 ;;		wreg, status,2
 14824 ;; Tracked objects:
 14825 ;;		On entry : 0/0
 14826 ;;		On exit  : 0/0
 14827 ;;		Unchanged: 0/0
 14828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14833 ;;Total ram usage:        0 bytes
 14834 ;; Hardware stack levels used: 1
 14835 ;; Hardware stack levels required when called: 8
 14836 ;; This function calls:
 14837 ;;		Nothing
 14838 ;; This function is called by:
 14839 ;;		_SYSTEM_Initialize
 14840 ;; This function uses a non-reentrant model
 14841 ;;
 14842                           
 14843                           	psect	text72
 14844  005B60                     __ptext72:
 14845                           	callstack 0
 14846  005B60                     _CLC3_Initialize:
 14847                           	callstack 21
 14848  005B60                     
 14849                           ;mcc_generated_files/clc3.c: 63:     CLC3POL = 0x00;
 14850  005B60  0E00               	movlw	0
 14851  005B62  013C               	movlb	60	; () banked
 14852  005B64  6F61               	movwf	97,b	;volatile
 14853                           
 14854                           ;mcc_generated_files/clc3.c: 65:     CLC3SEL0 = 0x03;
 14855  005B66  0E03               	movlw	3
 14856  005B68  6F62               	movwf	98,b	;volatile
 14857                           
 14858                           ;mcc_generated_files/clc3.c: 67:     CLC3SEL1 = 0x02;
 14859  005B6A  0E02               	movlw	2
 14860  005B6C  6F63               	movwf	99,b	;volatile
 14861                           
 14862                           ;mcc_generated_files/clc3.c: 69:     CLC3SEL2 = 0x00;
 14863  005B6E  0E00               	movlw	0
 14864  005B70  6F64               	movwf	100,b	;volatile
 14865                           
 14866                           ;mcc_generated_files/clc3.c: 71:     CLC3SEL3 = 0x00;
 14867  005B72  0E00               	movlw	0
 14868  005B74  6F65               	movwf	101,b	;volatile
 14869                           
 14870                           ;mcc_generated_files/clc3.c: 73:     CLC3GLS0 = 0x02;
 14871  005B76  0E02               	movlw	2
 14872  005B78  6F66               	movwf	102,b	;volatile
 14873                           
 14874                           ;mcc_generated_files/clc3.c: 75:     CLC3GLS1 = 0x08;
 14875  005B7A  0E08               	movlw	8
 14876  005B7C  6F67               	movwf	103,b	;volatile
 14877                           
 14878                           ;mcc_generated_files/clc3.c: 77:     CLC3GLS2 = 0x00;
 14879  005B7E  0E00               	movlw	0
 14880  005B80  6F68               	movwf	104,b	;volatile
 14881                           
 14882                           ;mcc_generated_files/clc3.c: 79:     CLC3GLS3 = 0x00;
 14883  005B82  0E00               	movlw	0
 14884  005B84  6F69               	movwf	105,b	;volatile
 14885                           
 14886                           ;mcc_generated_files/clc3.c: 81:     CLC3CON = 0x85;
 14887  005B86  0E85               	movlw	133
 14888  005B88  6F60               	movwf	96,b	;volatile
 14889  005B8A                     
 14890                           ; BSR set to: 60
 14891  005B8A  0012               	return		;funcret
 14892  005B8C                     __end_of_CLC3_Initialize:
 14893                           	callstack 0
 14894                           
 14895 ;; *************** function _CCP4_Initialize *****************
 14896 ;; Defined at:
 14897 ;;		line 78 in file "mcc_generated_files/ccp4.c"
 14898 ;; Parameters:    Size  Location     Type
 14899 ;;		None
 14900 ;; Auto vars:     Size  Location     Type
 14901 ;;		None
 14902 ;; Return value:  Size  Location     Type
 14903 ;;                  1    wreg      void 
 14904 ;; Registers used:
 14905 ;;		wreg, status,2, status,0, cstack
 14906 ;; Tracked objects:
 14907 ;;		On entry : 0/0
 14908 ;;		On exit  : 0/0
 14909 ;;		Unchanged: 0/0
 14910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14915 ;;Total ram usage:        0 bytes
 14916 ;; Hardware stack levels used: 1
 14917 ;; Hardware stack levels required when called: 9
 14918 ;; This function calls:
 14919 ;;		_CCP4_SetCallBack
 14920 ;; This function is called by:
 14921 ;;		_SYSTEM_Initialize
 14922 ;; This function uses a non-reentrant model
 14923 ;;
 14924                           
 14925                           	psect	text73
 14926  005AAA                     __ptext73:
 14927                           	callstack 0
 14928  005AAA                     _CCP4_Initialize:
 14929                           	callstack 20
 14930  005AAA                     
 14931                           ;mcc_generated_files/ccp4.c: 83:  CCP4CON = 0x83;
 14932  005AAA  0E83               	movlw	131
 14933  005AAC  6E72               	movwf	114,c	;volatile
 14934                           
 14935                           ;mcc_generated_files/ccp4.c: 86:  CCP4CAP = 0x00;
 14936  005AAE  0E00               	movlw	0
 14937  005AB0  6E73               	movwf	115,c	;volatile
 14938                           
 14939                           ;mcc_generated_files/ccp4.c: 89:  CCPR4H = 0x00;
 14940  005AB2  0E00               	movlw	0
 14941  005AB4  6E71               	movwf	113,c	;volatile
 14942                           
 14943                           ;mcc_generated_files/ccp4.c: 92:  CCPR4L = 0x00;
 14944  005AB6  0E00               	movlw	0
 14945  005AB8  6E70               	movwf	112,c	;volatile
 14946  005ABA                     
 14947                           ;mcc_generated_files/ccp4.c: 95:     CCP4_SetCallBack(CCP4_DefaultCallBack);
 14948  005ABA  0E7A               	movlw	low _CCP4_DefaultCallBack
 14949  005ABC  6E14               	movwf	CCP4_SetCallBack@customCallBack^0,c
 14950  005ABE  0E5A               	movlw	high _CCP4_DefaultCallBack
 14951  005AC0  6E15               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
 14952  005AC2  ECDD  F02E         	call	_CCP4_SetCallBack	;wreg free
 14953  005AC6                     
 14954                           ;mcc_generated_files/ccp4.c: 98:  CCPTMRS0bits.C4TSEL = 0x2;
 14955  005AC6  013F               	movlb	63	; () banked
 14956  005AC8  515E               	movf	94,w,b	;volatile
 14957  005ACA  0B3F               	andlw	-193
 14958  005ACC  0980               	iorlw	128
 14959  005ACE  6F5E               	movwf	94,b	;volatile
 14960  005AD0                     
 14961                           ; BSR set to: 63
 14962                           ;mcc_generated_files/ccp4.c: 101:     PIR10bits.CCP4IF = 0;
 14963  005AD0  0139               	movlb	57	; () banked
 14964  005AD2  91AA               	bcf	170,0,b	;volatile
 14965  005AD4                     
 14966                           ; BSR set to: 57
 14967                           ;mcc_generated_files/ccp4.c: 104:     PIE10bits.CCP4IE = 1;
 14968  005AD4  819A               	bsf	154,0,b	;volatile
 14969  005AD6                     
 14970                           ; BSR set to: 57
 14971  005AD6  0012               	return		;funcret
 14972  005AD8                     __end_of_CCP4_Initialize:
 14973                           	callstack 0
 14974                           
 14975 ;; *************** function _CCP4_SetCallBack *****************
 14976 ;; Defined at:
 14977 ;;		line 75 in file "mcc_generated_files/ccp4.c"
 14978 ;; Parameters:    Size  Location     Type
 14979 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 14980 ;;		 -> CCP4_DefaultCallBack(1), 
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;		None
 14983 ;; Return value:  Size  Location     Type
 14984 ;;                  1    wreg      void 
 14985 ;; Registers used:
 14986 ;;		wreg, status,2, status,0
 14987 ;; Tracked objects:
 14988 ;;		On entry : 0/0
 14989 ;;		On exit  : 0/0
 14990 ;;		Unchanged: 0/0
 14991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14996 ;;Total ram usage:        2 bytes
 14997 ;; Hardware stack levels used: 1
 14998 ;; Hardware stack levels required when called: 8
 14999 ;; This function calls:
 15000 ;;		Nothing
 15001 ;; This function is called by:
 15002 ;;		_CCP4_Initialize
 15003 ;; This function uses a non-reentrant model
 15004 ;;
 15005                           
 15006                           	psect	text74
 15007  005DBA                     __ptext74:
 15008                           	callstack 0
 15009  005DBA                     _CCP4_SetCallBack:
 15010                           	callstack 20
 15011  005DBA                     
 15012                           ;mcc_generated_files/ccp4.c: 76:     CCP4_CallBack = customCallBack;
 15013  005DBA  C014  F18A         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
 15014  005DBE  C015  F18B         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
 15015  005DC2  0012               	return		;funcret
 15016  005DC4                     __end_of_CCP4_SetCallBack:
 15017                           	callstack 0
 15018                           
 15019 ;; *************** function _CCP3_Initialize *****************
 15020 ;; Defined at:
 15021 ;;		line 75 in file "mcc_generated_files/ccp3.c"
 15022 ;; Parameters:    Size  Location     Type
 15023 ;;		None
 15024 ;; Auto vars:     Size  Location     Type
 15025 ;;		None
 15026 ;; Return value:  Size  Location     Type
 15027 ;;                  1    wreg      void 
 15028 ;; Registers used:
 15029 ;;		wreg, status,2, status,0, cstack
 15030 ;; Tracked objects:
 15031 ;;		On entry : 0/0
 15032 ;;		On exit  : 0/0
 15033 ;;		Unchanged: 0/0
 15034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15039 ;;Total ram usage:        0 bytes
 15040 ;; Hardware stack levels used: 1
 15041 ;; Hardware stack levels required when called: 9
 15042 ;; This function calls:
 15043 ;;		_CCP3_SetCallBack
 15044 ;; This function is called by:
 15045 ;;		_SYSTEM_Initialize
 15046 ;; This function uses a non-reentrant model
 15047 ;;
 15048                           
 15049                           	psect	text75
 15050  005AD8                     __ptext75:
 15051                           	callstack 0
 15052  005AD8                     _CCP3_Initialize:
 15053                           	callstack 20
 15054  005AD8                     
 15055                           ;mcc_generated_files/ccp3.c: 80:  CCP3CON = 0x83;
 15056  005AD8  0E83               	movlw	131
 15057  005ADA  6E76               	movwf	118,c	;volatile
 15058                           
 15059                           ;mcc_generated_files/ccp3.c: 83:  CCP3CAP = 0x00;
 15060  005ADC  0E00               	movlw	0
 15061  005ADE  6E77               	movwf	119,c	;volatile
 15062                           
 15063                           ;mcc_generated_files/ccp3.c: 86:  CCPR3H = 0x00;
 15064  005AE0  0E00               	movlw	0
 15065  005AE2  6E75               	movwf	117,c	;volatile
 15066                           
 15067                           ;mcc_generated_files/ccp3.c: 89:  CCPR3L = 0x00;
 15068  005AE4  0E00               	movlw	0
 15069  005AE6  6E74               	movwf	116,c	;volatile
 15070  005AE8                     
 15071                           ;mcc_generated_files/ccp3.c: 92:     CCP3_SetCallBack(CCP3_DefaultCallBack);
 15072  005AE8  0E4A               	movlw	low _CCP3_DefaultCallBack
 15073  005AEA  6E14               	movwf	CCP3_SetCallBack@customCallBack^0,c
 15074  005AEC  0E5A               	movlw	high _CCP3_DefaultCallBack
 15075  005AEE  6E15               	movwf	(CCP3_SetCallBack@customCallBack+1)^0,c
 15076  005AF0  ECE2  F02E         	call	_CCP3_SetCallBack	;wreg free
 15077  005AF4                     
 15078                           ;mcc_generated_files/ccp3.c: 95:  CCPTMRS0bits.C3TSEL = 0x2;
 15079  005AF4  013F               	movlb	63	; () banked
 15080  005AF6  515E               	movf	94,w,b	;volatile
 15081  005AF8  0BCF               	andlw	-49
 15082  005AFA  0920               	iorlw	32
 15083  005AFC  6F5E               	movwf	94,b	;volatile
 15084  005AFE                     
 15085                           ; BSR set to: 63
 15086                           ;mcc_generated_files/ccp3.c: 98:     PIR9bits.CCP3IF = 0;
 15087  005AFE  0139               	movlb	57	; () banked
 15088  005B00  93A9               	bcf	169,1,b	;volatile
 15089  005B02                     
 15090                           ; BSR set to: 57
 15091                           ;mcc_generated_files/ccp3.c: 101:     PIE9bits.CCP3IE = 1;
 15092  005B02  8399               	bsf	153,1,b	;volatile
 15093  005B04                     
 15094                           ; BSR set to: 57
 15095  005B04  0012               	return		;funcret
 15096  005B06                     __end_of_CCP3_Initialize:
 15097                           	callstack 0
 15098                           
 15099 ;; *************** function _CCP3_SetCallBack *****************
 15100 ;; Defined at:
 15101 ;;		line 119 in file "mcc_generated_files/ccp3.c"
 15102 ;; Parameters:    Size  Location     Type
 15103 ;;  customCallBa    2   19[COMRAM] PTR FTN(unsigned short ,
 15104 ;;		 -> CCP3_DefaultCallBack(1), 
 15105 ;; Auto vars:     Size  Location     Type
 15106 ;;		None
 15107 ;; Return value:  Size  Location     Type
 15108 ;;                  1    wreg      void 
 15109 ;; Registers used:
 15110 ;;		wreg, status,2, status,0
 15111 ;; Tracked objects:
 15112 ;;		On entry : 0/0
 15113 ;;		On exit  : 0/0
 15114 ;;		Unchanged: 0/0
 15115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15120 ;;Total ram usage:        2 bytes
 15121 ;; Hardware stack levels used: 1
 15122 ;; Hardware stack levels required when called: 8
 15123 ;; This function calls:
 15124 ;;		Nothing
 15125 ;; This function is called by:
 15126 ;;		_CCP3_Initialize
 15127 ;; This function uses a non-reentrant model
 15128 ;;
 15129                           
 15130                           	psect	text76
 15131  005DC4                     __ptext76:
 15132                           	callstack 0
 15133  005DC4                     _CCP3_SetCallBack:
 15134                           	callstack 20
 15135  005DC4                     
 15136                           ;mcc_generated_files/ccp3.c: 120:     CCP3_CallBack = customCallBack;
 15137  005DC4  C014  F18C         	movff	CCP3_SetCallBack@customCallBack,_CCP3_CallBack
 15138  005DC8  C015  F18D         	movff	CCP3_SetCallBack@customCallBack+1,_CCP3_CallBack+1
 15139  005DCC  0012               	return		;funcret
 15140  005DCE                     __end_of_CCP3_SetCallBack:
 15141                           	callstack 0
 15142                           
 15143 ;; *************** function _ADCC_Initialize *****************
 15144 ;; Defined at:
 15145 ;;		line 62 in file "mcc_generated_files/adcc.c"
 15146 ;; Parameters:    Size  Location     Type
 15147 ;;		None
 15148 ;; Auto vars:     Size  Location     Type
 15149 ;;		None
 15150 ;; Return value:  Size  Location     Type
 15151 ;;                  1    wreg      void 
 15152 ;; Registers used:
 15153 ;;		wreg, status,2
 15154 ;; Tracked objects:
 15155 ;;		On entry : 0/0
 15156 ;;		On exit  : 0/0
 15157 ;;		Unchanged: 0/0
 15158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15163 ;;Total ram usage:        0 bytes
 15164 ;; Hardware stack levels used: 1
 15165 ;; Hardware stack levels required when called: 8
 15166 ;; This function calls:
 15167 ;;		Nothing
 15168 ;; This function is called by:
 15169 ;;		_SYSTEM_Initialize
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           	psect	text77
 15174  0053A6                     __ptext77:
 15175                           	callstack 0
 15176  0053A6                     _ADCC_Initialize:
 15177                           	callstack 21
 15178  0053A6                     
 15179                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
 15180  0053A6  0E00               	movlw	0
 15181  0053A8  013E               	movlb	62	; () banked
 15182  0053AA  6FDE               	movwf	222,b	;volatile
 15183                           
 15184                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
 15185  0053AC  0E00               	movlw	0
 15186  0053AE  6FDF               	movwf	223,b	;volatile
 15187                           
 15188                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
 15189  0053B0  0E00               	movlw	0
 15190  0053B2  6FE0               	movwf	224,b	;volatile
 15191                           
 15192                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
 15193  0053B4  0E00               	movlw	0
 15194  0053B6  6FE1               	movwf	225,b	;volatile
 15195                           
 15196                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
 15197  0053B8  0E00               	movlw	0
 15198  0053BA  6FE4               	movwf	228,b	;volatile
 15199                           
 15200                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
 15201  0053BC  0E00               	movlw	0
 15202  0053BE  6FE5               	movwf	229,b	;volatile
 15203                           
 15204                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
 15205  0053C0  0E00               	movlw	0
 15206  0053C2  6FEA               	movwf	234,b	;volatile
 15207                           
 15208                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
 15209  0053C4  0E00               	movlw	0
 15210  0053C6  6FEC               	movwf	236,b	;volatile
 15211                           
 15212                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
 15213  0053C8  0E00               	movlw	0
 15214  0053CA  6FF1               	movwf	241,b	;volatile
 15215                           
 15216                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x58;
 15217  0053CC  0E58               	movlw	88
 15218  0053CE  6FF3               	movwf	243,b	;volatile
 15219                           
 15220                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x02;
 15221  0053D0  0E02               	movlw	2
 15222  0053D2  6FF4               	movwf	244,b	;volatile
 15223                           
 15224                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
 15225  0053D4  0E00               	movlw	0
 15226  0053D6  6FF5               	movwf	245,b	;volatile
 15227                           
 15228                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
 15229  0053D8  0E00               	movlw	0
 15230  0053DA  6FF6               	movwf	246,b	;volatile
 15231                           
 15232                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
 15233  0053DC  0E00               	movlw	0
 15234  0053DE  6FF7               	movwf	247,b	;volatile
 15235                           
 15236                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
 15237  0053E0  0E00               	movlw	0
 15238  0053E2  6FF9               	movwf	249,b	;volatile
 15239                           
 15240                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
 15241  0053E4  0E00               	movlw	0
 15242  0053E6  6FFA               	movwf	250,b	;volatile
 15243                           
 15244                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
 15245  0053E8  0E00               	movlw	0
 15246  0053EA  6FFB               	movwf	251,b	;volatile
 15247                           
 15248                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
 15249  0053EC  0E00               	movlw	0
 15250  0053EE  6FFC               	movwf	252,b	;volatile
 15251                           
 15252                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
 15253  0053F0  0E00               	movlw	0
 15254  0053F2  6FFD               	movwf	253,b	;volatile
 15255                           
 15256                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
 15257  0053F4  0E00               	movlw	0
 15258  0053F6  6FFE               	movwf	254,b	;volatile
 15259                           
 15260                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x1F;
 15261  0053F8  0E1F               	movlw	31
 15262  0053FA  6FFF               	movwf	255,b	;volatile
 15263                           
 15264                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x84;
 15265  0053FC  0E84               	movlw	132
 15266  0053FE  6FF8               	movwf	248,b	;volatile
 15267  005400                     
 15268                           ; BSR set to: 62
 15269  005400  0012               	return		;funcret
 15270  005402                     __end_of_ADCC_Initialize:
 15271                           	callstack 0
 15272                           
 15273 ;; *************** function _UART1_tx_vect_isr *****************
 15274 ;; Defined at:
 15275 ;;		line 235 in file "mcc_generated_files/uart1.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;		None
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;		None
 15280 ;; Return value:  Size  Location     Type
 15281 ;;                  1    wreg      void 
 15282 ;; Registers used:
 15283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15284 ;; Tracked objects:
 15285 ;;		On entry : 0/0
 15286 ;;		On exit  : 0/0
 15287 ;;		Unchanged: 0/0
 15288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15293 ;;Total ram usage:        1 bytes
 15294 ;; Hardware stack levels used: 1
 15295 ;; Hardware stack levels required when called: 5
 15296 ;; This function calls:
 15297 ;;		Absolute function
 15298 ;;		_UART1_Transmit_ISR
 15299 ;; This function is called by:
 15300 ;;		Interrupt level 1
 15301 ;; This function uses a non-reentrant model
 15302 ;;
 15303                           
 15304                           	psect	text78
 15305  00575C                     __ptext78:
 15306                           	callstack 0
 15307  00575C                     _UART1_tx_vect_isr:
 15308                           	callstack 14
 15309                           
 15310                           ; BSR set to: 62
 15311                           ;incstack = 0
 15312  00575C  006F FF60  F011    	movff	status,??_UART1_tx_vect_isr
 15313  005762                     
 15314                           ;mcc_generated_files/uart1.c: 237:     if(UART1_TxInterruptHandler)
 15315  005762  0101               	movlb	1	; () banked
 15316  005764  5194               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15317  005766  1195               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15318  005768  B4D8               	btfsc	status,2,c
 15319  00576A  EFB9  F02B         	goto	i1u705_21
 15320  00576E  EFBB  F02B         	goto	i1u705_20
 15321  005772                     i1u705_21:
 15322  005772  EFC7  F02B         	goto	i1l324
 15323  005776                     i1u705_20:
 15324  005776                     
 15325                           ; BSR set to: 1
 15326                           ;mcc_generated_files/uart1.c: 238:     {;mcc_generated_files/uart1.c: 239:         UART1
      +                          _TxInterruptHandler();
 15327  005776  D802               	call	i1u706_28
 15328  005778  EFC7  F02B         	goto	i1u706_29
 15329  00577C                     i1u706_28:
 15330  00577C  0005               	push	
 15331  00577E  6EFA               	movwf	pclath,c
 15332  005780  5194               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 15333  005782  6EFD               	movwf	tosl,c
 15334  005784  5195               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 15335  005786  6EFE               	movwf	tosh,c
 15336  005788  6AFF               	clrf	tosu,c
 15337  00578A  50FA               	movf	pclath,w,c
 15338  00578C  0012               	return		;indir
 15339  00578E                     i1u706_29:
 15340  00578E                     i1l324:
 15341  00578E  0060  F047  FFD8   	movff	??_UART1_tx_vect_isr,status
 15342  005794  0011               	retfie		f
 15343  005796                     __end_of_UART1_tx_vect_isr:
 15344                           	callstack 0
 15345                           
 15346 ;; *************** function _UART1_Transmit_ISR *****************
 15347 ;; Defined at:
 15348 ;;		line 253 in file "mcc_generated_files/uart1.c"
 15349 ;; Parameters:    Size  Location     Type
 15350 ;;		None
 15351 ;; Auto vars:     Size  Location     Type
 15352 ;;		None
 15353 ;; Return value:  Size  Location     Type
 15354 ;;                  1    wreg      void 
 15355 ;; Registers used:
 15356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15357 ;; Tracked objects:
 15358 ;;		On entry : 0/0
 15359 ;;		On exit  : 0/0
 15360 ;;		Unchanged: 0/0
 15361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15366 ;;Total ram usage:        0 bytes
 15367 ;; Hardware stack levels used: 1
 15368 ;; Hardware stack levels required when called: 4
 15369 ;; This function calls:
 15370 ;;		Nothing
 15371 ;; This function is called by:
 15372 ;;		_UART1_Initialize
 15373 ;;		_UART1_tx_vect_isr
 15374 ;; This function uses a non-reentrant model
 15375 ;;
 15376                           
 15377                           	psect	text79
 15378  005616                     __ptext79:
 15379                           	callstack 0
 15380  005616                     _UART1_Transmit_ISR:
 15381                           	callstack 14
 15382  005616                     
 15383                           ;mcc_generated_files/uart1.c: 256:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 15384  005616  0E08               	movlw	8
 15385  005618  0100               	movlb	0	; () banked
 15386  00561A  61FE               	cpfslt	_uart1TxBufferRemaining& (0+255),b	;volatile
 15387  00561C  EF12  F02B         	goto	i1u686_21
 15388  005620  EF14  F02B         	goto	i1u686_20
 15389  005624                     i1u686_21:
 15390  005624  EF2C  F02B         	goto	i1l333
 15391  005628                     i1u686_20:
 15392  005628                     
 15393                           ; BSR set to: 0
 15394                           ;mcc_generated_files/uart1.c: 257:     {;mcc_generated_files/uart1.c: 258:         U1TXB
      +                           = uart1TxBuffer[uart1TxTail++];
 15395  005628  0E10               	movlw	low _uart1TxBuffer
 15396  00562A  2444               	addwf	_uart1TxTail^0,w,c	;volatile
 15397  00562C  6ED9               	movwf	fsr2l,c
 15398  00562E  6ADA               	clrf	fsr2h,c
 15399  005630  0E01               	movlw	high _uart1TxBuffer
 15400  005632  22DA               	addwfc	fsr2h,f,c
 15401  005634  50DF               	movf	indf2,w,c
 15402  005636  013D               	movlb	61	; () banked
 15403  005638  6FEA               	movwf	234,b	;volatile
 15404  00563A                     
 15405                           ; BSR set to: 61
 15406  00563A  2A44               	incf	_uart1TxTail^0,f,c	;volatile
 15407  00563C                     
 15408                           ; BSR set to: 61
 15409                           ;mcc_generated_files/uart1.c: 259:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 15410  00563C  0E07               	movlw	7
 15411  00563E  6444               	cpfsgt	_uart1TxTail^0,c	;volatile
 15412  005640  EF24  F02B         	goto	i1u687_21
 15413  005644  EF26  F02B         	goto	i1u687_20
 15414  005648                     i1u687_21:
 15415  005648  EF28  F02B         	goto	i1l7045
 15416  00564C                     i1u687_20:
 15417  00564C                     
 15418                           ; BSR set to: 61
 15419                           ;mcc_generated_files/uart1.c: 260:         {;mcc_generated_files/uart1.c: 261:          
      +                             uart1TxTail = 0;
 15420  00564C  0E00               	movlw	0
 15421  00564E  6E44               	movwf	_uart1TxTail^0,c	;volatile
 15422  005650                     i1l7045:
 15423                           
 15424                           ; BSR set to: 61
 15425                           ;mcc_generated_files/uart1.c: 263:         uart1TxBufferRemaining++;
 15426  005650  0100               	movlb	0	; () banked
 15427  005652  2BFE               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 15428                           
 15429                           ;mcc_generated_files/uart1.c: 264:     }
 15430  005654  EF2E  F02B         	goto	i1l336
 15431  005658                     i1l333:
 15432                           
 15433                           ; BSR set to: 0
 15434                           ;mcc_generated_files/uart1.c: 266:     {;mcc_generated_files/uart1.c: 267:         PIE3b
      +                          its.U1TXIE = 0;
 15435  005658  0139               	movlb	57	; () banked
 15436  00565A  9993               	bcf	147,4,b	;volatile
 15437  00565C                     i1l336:
 15438  00565C  0012               	return		;funcret
 15439  00565E                     __end_of_UART1_Transmit_ISR:
 15440                           	callstack 0
 15441                           
 15442 ;; *************** function _UART1_rx_vect_isr *****************
 15443 ;; Defined at:
 15444 ;;		line 243 in file "mcc_generated_files/uart1.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;		None
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 0/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15460 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15462 ;;Total ram usage:        1 bytes
 15463 ;; Hardware stack levels used: 1
 15464 ;; Hardware stack levels required when called: 7
 15465 ;; This function calls:
 15466 ;;		Absolute function
 15467 ;;		_UART1_Receive_ISR
 15468 ;; This function is called by:
 15469 ;;		Interrupt level 1
 15470 ;; This function uses a non-reentrant model
 15471 ;;
 15472                           
 15473                           	psect	text80
 15474  005798                     __ptext80:
 15475                           	callstack 0
 15476  005798                     _UART1_rx_vect_isr:
 15477                           	callstack 12
 15478                           
 15479                           ;incstack = 0
 15480  005798  006F FF60  F012    	movff	status,??_UART1_rx_vect_isr
 15481  00579E                     
 15482                           ;mcc_generated_files/uart1.c: 245:     if(UART1_RxInterruptHandler)
 15483  00579E  0101               	movlb	1	; () banked
 15484  0057A0  5196               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15485  0057A2  1197               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15486  0057A4  B4D8               	btfsc	status,2,c
 15487  0057A6  EFD7  F02B         	goto	i1u707_21
 15488  0057AA  EFD9  F02B         	goto	i1u707_20
 15489  0057AE                     i1u707_21:
 15490  0057AE  EFE5  F02B         	goto	i1l330
 15491  0057B2                     i1u707_20:
 15492  0057B2                     
 15493                           ; BSR set to: 1
 15494                           ;mcc_generated_files/uart1.c: 246:     {;mcc_generated_files/uart1.c: 247:         UART1
      +                          _RxInterruptHandler();
 15495  0057B2  D802               	call	i1u708_28
 15496  0057B4  EFE5  F02B         	goto	i1u708_29
 15497  0057B8                     i1u708_28:
 15498  0057B8  0005               	push	
 15499  0057BA  6EFA               	movwf	pclath,c
 15500  0057BC  5196               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 15501  0057BE  6EFD               	movwf	tosl,c
 15502  0057C0  5197               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 15503  0057C2  6EFE               	movwf	tosh,c
 15504  0057C4  6AFF               	clrf	tosu,c
 15505  0057C6  50FA               	movf	pclath,w,c
 15506  0057C8  0012               	return		;indir
 15507  0057CA                     i1u708_29:
 15508  0057CA                     i1l330:
 15509  0057CA  0060  F04B  FFD8   	movff	??_UART1_rx_vect_isr,status
 15510  0057D0  0011               	retfie		f
 15511  0057D2                     __end_of_UART1_rx_vect_isr:
 15512                           	callstack 0
 15513                           
 15514 ;; *************** function _UART1_Receive_ISR *****************
 15515 ;; Defined at:
 15516 ;;		line 273 in file "mcc_generated_files/uart1.c"
 15517 ;; Parameters:    Size  Location     Type
 15518 ;;		None
 15519 ;; Auto vars:     Size  Location     Type
 15520 ;;		None
 15521 ;; Return value:  Size  Location     Type
 15522 ;;                  1    wreg      void 
 15523 ;; Registers used:
 15524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15525 ;; Tracked objects:
 15526 ;;		On entry : 0/0
 15527 ;;		On exit  : 0/0
 15528 ;;		Unchanged: 0/0
 15529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15534 ;;Total ram usage:        0 bytes
 15535 ;; Hardware stack levels used: 1
 15536 ;; Hardware stack levels required when called: 6
 15537 ;; This function calls:
 15538 ;;		Absolute function
 15539 ;;		_UART1_DefaultErrorHandler
 15540 ;;		_UART1_DefaultFramingErrorHandler
 15541 ;;		_UART1_DefaultOverrunErrorHandler
 15542 ;;		_UART1_RxDataHandler
 15543 ;; This function is called by:
 15544 ;;		_UART1_Initialize
 15545 ;;		_UART1_rx_vect_isr
 15546 ;; This function uses a non-reentrant model
 15547 ;;
 15548                           
 15549                           	psect	text81
 15550  004D8E                     __ptext81:
 15551                           	callstack 0
 15552  004D8E                     _UART1_Receive_ISR:
 15553                           	callstack 12
 15554  004D8E                     
 15555                           ;mcc_generated_files/uart1.c: 276:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 15556  004D8E  0E00               	movlw	low _uart1RxStatusBuffer
 15557  004D90  2443               	addwf	_uart1RxHead^0,w,c	;volatile
 15558  004D92  6ED9               	movwf	fsr2l,c
 15559  004D94  6ADA               	clrf	fsr2h,c
 15560  004D96  0E01               	movlw	high _uart1RxStatusBuffer
 15561  004D98  22DA               	addwfc	fsr2h,f,c
 15562  004D9A  0E00               	movlw	0
 15563  004D9C  6EDF               	movwf	indf2,c
 15564  004D9E                     
 15565                           ;mcc_generated_files/uart1.c: 278:     if(U1ERRIRbits.FERIF){
 15566  004D9E  013D               	movlb	61	; () banked
 15567  004DA0  A7F9               	btfss	249,3,b	;volatile
 15568  004DA2  EFD5  F026         	goto	i1u688_21
 15569  004DA6  EFD7  F026         	goto	i1u688_20
 15570  004DAA                     i1u688_21:
 15571  004DAA  EFEB  F026         	goto	i1l7055
 15572  004DAE                     i1u688_20:
 15573  004DAE                     
 15574                           ; BSR set to: 61
 15575                           ;mcc_generated_files/uart1.c: 279:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 15576  004DAE  0E00               	movlw	low _uart1RxStatusBuffer
 15577  004DB0  2443               	addwf	_uart1RxHead^0,w,c	;volatile
 15578  004DB2  6ED9               	movwf	fsr2l,c
 15579  004DB4  6ADA               	clrf	fsr2h,c
 15580  004DB6  0E01               	movlw	high _uart1RxStatusBuffer
 15581  004DB8  22DA               	addwfc	fsr2h,f,c
 15582  004DBA  0101               	movlb	1	; () banked
 15583  004DBC  82DF               	bsf	indf2,1,c
 15584  004DBE                     
 15585                           ; BSR set to: 1
 15586                           ;mcc_generated_files/uart1.c: 280:         UART1_FramingErrorHandler();
 15587  004DBE  D802               	call	i1u689_28
 15588  004DC0  EFEB  F026         	goto	i1u689_29
 15589  004DC4                     i1u689_28:
 15590  004DC4  0005               	push	
 15591  004DC6  6EFA               	movwf	pclath,c
 15592  004DC8  5192               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 15593  004DCA  6EFD               	movwf	tosl,c
 15594  004DCC  5193               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 15595  004DCE  6EFE               	movwf	tosh,c
 15596  004DD0  6AFF               	clrf	tosu,c
 15597  004DD2  50FA               	movf	pclath,w,c
 15598  004DD4  0012               	return		;indir
 15599  004DD6                     i1u689_29:
 15600  004DD6                     i1l7055:
 15601                           
 15602                           ;mcc_generated_files/uart1.c: 283:     if(U1ERRIRbits.RXFOIF){
 15603  004DD6  013D               	movlb	61	; () banked
 15604  004DD8  A3F9               	btfss	249,1,b	;volatile
 15605  004DDA  EFF1  F026         	goto	i1u690_21
 15606  004DDE  EFF3  F026         	goto	i1u690_20
 15607  004DE2                     i1u690_21:
 15608  004DE2  EF07  F027         	goto	i1l7061
 15609  004DE6                     i1u690_20:
 15610  004DE6                     
 15611                           ; BSR set to: 61
 15612                           ;mcc_generated_files/uart1.c: 284:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 15613  004DE6  0E00               	movlw	low _uart1RxStatusBuffer
 15614  004DE8  2443               	addwf	_uart1RxHead^0,w,c	;volatile
 15615  004DEA  6ED9               	movwf	fsr2l,c
 15616  004DEC  6ADA               	clrf	fsr2h,c
 15617  004DEE  0E01               	movlw	high _uart1RxStatusBuffer
 15618  004DF0  22DA               	addwfc	fsr2h,f,c
 15619  004DF2  0101               	movlb	1	; () banked
 15620  004DF4  84DF               	bsf	indf2,2,c
 15621  004DF6                     
 15622                           ; BSR set to: 1
 15623                           ;mcc_generated_files/uart1.c: 285:         UART1_OverrunErrorHandler();
 15624  004DF6  D802               	call	i1u691_28
 15625  004DF8  EF07  F027         	goto	i1u691_29
 15626  004DFC                     i1u691_28:
 15627  004DFC  0005               	push	
 15628  004DFE  6EFA               	movwf	pclath,c
 15629  004E00  5190               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 15630  004E02  6EFD               	movwf	tosl,c
 15631  004E04  5191               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 15632  004E06  6EFE               	movwf	tosh,c
 15633  004E08  6AFF               	clrf	tosu,c
 15634  004E0A  50FA               	movf	pclath,w,c
 15635  004E0C  0012               	return		;indir
 15636  004E0E                     i1u691_29:
 15637  004E0E                     i1l7061:
 15638                           
 15639                           ;mcc_generated_files/uart1.c: 288:     if(uart1RxStatusBuffer[uart1RxHead].status){
 15640  004E0E  0E00               	movlw	low _uart1RxStatusBuffer
 15641  004E10  2443               	addwf	_uart1RxHead^0,w,c	;volatile
 15642  004E12  6ED9               	movwf	fsr2l,c
 15643  004E14  6ADA               	clrf	fsr2h,c
 15644  004E16  0E01               	movlw	high _uart1RxStatusBuffer
 15645  004E18  22DA               	addwfc	fsr2h,f,c
 15646  004E1A  50DF               	movf	indf2,w,c
 15647  004E1C  B4D8               	btfsc	status,2,c
 15648  004E1E  EF13  F027         	goto	i1u692_21
 15649  004E22  EF15  F027         	goto	i1u692_20
 15650  004E26                     i1u692_21:
 15651  004E26  EF24  F027         	goto	i1l7065
 15652  004E2A                     i1u692_20:
 15653  004E2A                     
 15654                           ;mcc_generated_files/uart1.c: 289:         UART1_ErrorHandler();
 15655  004E2A  D802               	call	i1u693_28
 15656  004E2C  EF22  F027         	goto	i1u693_29
 15657  004E30                     i1u693_28:
 15658  004E30  0005               	push	
 15659  004E32  6EFA               	movwf	pclath,c
 15660  004E34  0101               	movlb	1	; () banked
 15661  004E36  518E               	movf	_UART1_ErrorHandler& (0+255),w,b
 15662  004E38  6EFD               	movwf	tosl,c
 15663  004E3A  518F               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 15664  004E3C  6EFE               	movwf	tosh,c
 15665  004E3E  6AFF               	clrf	tosu,c
 15666  004E40  50FA               	movf	pclath,w,c
 15667  004E42  0012               	return		;indir
 15668  004E44                     i1u693_29:
 15669                           
 15670                           ;mcc_generated_files/uart1.c: 290:     } else {
 15671  004E44  EF26  F027         	goto	i1l343
 15672  004E48                     i1l7065:
 15673                           
 15674                           ;mcc_generated_files/uart1.c: 291:         UART1_RxDataHandler();
 15675  004E48  ECC6  F02D         	call	_UART1_RxDataHandler	;wreg free
 15676  004E4C                     i1l343:
 15677  004E4C  0012               	return		;funcret
 15678  004E4E                     __end_of_UART1_Receive_ISR:
 15679                           	callstack 0
 15680                           
 15681 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 15682 ;; Defined at:
 15683 ;;		line 309 in file "mcc_generated_files/uart1.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;		None
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;		None
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1    wreg      void 
 15690 ;; Registers used:
 15691 ;;		None
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15701 ;;Total ram usage:        0 bytes
 15702 ;; Hardware stack levels used: 1
 15703 ;; Hardware stack levels required when called: 4
 15704 ;; This function calls:
 15705 ;;		Nothing
 15706 ;; This function is called by:
 15707 ;;		_UART1_Initialize
 15708 ;;		_UART1_Receive_ISR
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           	psect	text82
 15713  005DDA                     __ptext82:
 15714                           	callstack 0
 15715  005DDA                     _UART1_DefaultOverrunErrorHandler:
 15716                           	callstack 13
 15717  005DDA  0012               	return		;funcret
 15718  005DDC                     __end_of_UART1_DefaultOverrunErrorHandler:
 15719                           	callstack 0
 15720                           
 15721 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 15722 ;; Defined at:
 15723 ;;		line 307 in file "mcc_generated_files/uart1.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;		None
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;		None
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1    wreg      void 
 15730 ;; Registers used:
 15731 ;;		None
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;Total ram usage:        0 bytes
 15742 ;; Hardware stack levels used: 1
 15743 ;; Hardware stack levels required when called: 4
 15744 ;; This function calls:
 15745 ;;		Nothing
 15746 ;; This function is called by:
 15747 ;;		_UART1_Initialize
 15748 ;;		_UART1_Receive_ISR
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text83
 15753  005DDC                     __ptext83:
 15754                           	callstack 0
 15755  005DDC                     _UART1_DefaultFramingErrorHandler:
 15756                           	callstack 13
 15757  005DDC  0012               	return		;funcret
 15758  005DDE                     __end_of_UART1_DefaultFramingErrorHandler:
 15759                           	callstack 0
 15760                           
 15761 ;; *************** function _UART1_DefaultErrorHandler *****************
 15762 ;; Defined at:
 15763 ;;		line 311 in file "mcc_generated_files/uart1.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;		None
 15766 ;; Auto vars:     Size  Location     Type
 15767 ;;		None
 15768 ;; Return value:  Size  Location     Type
 15769 ;;                  1    wreg      void 
 15770 ;; Registers used:
 15771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15781 ;;Total ram usage:        0 bytes
 15782 ;; Hardware stack levels used: 1
 15783 ;; Hardware stack levels required when called: 5
 15784 ;; This function calls:
 15785 ;;		_UART1_RxDataHandler
 15786 ;; This function is called by:
 15787 ;;		_UART1_Initialize
 15788 ;;		_UART1_Receive_ISR
 15789 ;; This function uses a non-reentrant model
 15790 ;;
 15791                           
 15792                           	psect	text84
 15793  005DCE                     __ptext84:
 15794                           	callstack 0
 15795  005DCE                     _UART1_DefaultErrorHandler:
 15796                           	callstack 12
 15797  005DCE                     
 15798                           ;mcc_generated_files/uart1.c: 312:     UART1_RxDataHandler();
 15799  005DCE  ECC6  F02D         	call	_UART1_RxDataHandler	;wreg free
 15800  005DD2  0012               	return		;funcret
 15801  005DD4                     __end_of_UART1_DefaultErrorHandler:
 15802                           	callstack 0
 15803                           
 15804 ;; *************** function _UART1_RxDataHandler *****************
 15805 ;; Defined at:
 15806 ;;		line 297 in file "mcc_generated_files/uart1.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;		None
 15809 ;; Auto vars:     Size  Location     Type
 15810 ;;		None
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  1    wreg      void 
 15813 ;; Registers used:
 15814 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15815 ;; Tracked objects:
 15816 ;;		On entry : 0/0
 15817 ;;		On exit  : 0/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;Total ram usage:        0 bytes
 15825 ;; Hardware stack levels used: 1
 15826 ;; Hardware stack levels required when called: 4
 15827 ;; This function calls:
 15828 ;;		Nothing
 15829 ;; This function is called by:
 15830 ;;		_UART1_Receive_ISR
 15831 ;;		_UART1_DefaultErrorHandler
 15832 ;; This function uses a non-reentrant model
 15833 ;;
 15834                           
 15835                           	psect	text85
 15836  005B8C                     __ptext85:
 15837                           	callstack 0
 15838  005B8C                     _UART1_RxDataHandler:
 15839                           	callstack 13
 15840  005B8C                     
 15841                           ;mcc_generated_files/uart1.c: 299:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 15842  005B8C  0E08               	movlw	low _uart1RxBuffer
 15843  005B8E  2443               	addwf	_uart1RxHead^0,w,c	;volatile
 15844  005B90  6ED9               	movwf	fsr2l,c
 15845  005B92  6ADA               	clrf	fsr2h,c
 15846  005B94  0E01               	movlw	high _uart1RxBuffer
 15847  005B96  22DA               	addwfc	fsr2h,f,c
 15848  005B98  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 15849  005B9E  2A43               	incf	_uart1RxHead^0,f,c	;volatile
 15850  005BA0                     
 15851                           ;mcc_generated_files/uart1.c: 300:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 15852  005BA0  0E07               	movlw	7
 15853  005BA2  6443               	cpfsgt	_uart1RxHead^0,c	;volatile
 15854  005BA4  EFD6  F02D         	goto	i1u631_21
 15855  005BA8  EFD8  F02D         	goto	i1u631_20
 15856  005BAC                     i1u631_21:
 15857  005BAC  EFDA  F02D         	goto	i1l6513
 15858  005BB0                     i1u631_20:
 15859  005BB0                     
 15860                           ;mcc_generated_files/uart1.c: 301:     {;mcc_generated_files/uart1.c: 302:         uart1
      +                          RxHead = 0;
 15861  005BB0  0E00               	movlw	0
 15862  005BB2  6E43               	movwf	_uart1RxHead^0,c	;volatile
 15863  005BB4                     i1l6513:
 15864                           
 15865                           ;mcc_generated_files/uart1.c: 304:     uart1RxCount++;
 15866  005BB4  2A41               	incf	_uart1RxCount^0,f,c	;volatile
 15867  005BB6  0012               	return		;funcret
 15868  005BB8                     __end_of_UART1_RxDataHandler:
 15869                           	callstack 0
 15870                           
 15871 ;; *************** function _TMR4_ISR *****************
 15872 ;; Defined at:
 15873 ;;		line 166 in file "mcc_generated_files/tmr4.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15882 ;; Tracked objects:
 15883 ;;		On entry : 0/0
 15884 ;;		On exit  : 0/0
 15885 ;;		Unchanged: 0/0
 15886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15891 ;;Total ram usage:        1 bytes
 15892 ;; Hardware stack levels used: 1
 15893 ;; Hardware stack levels required when called: 6
 15894 ;; This function calls:
 15895 ;;		_TMR4_CallBack
 15896 ;; This function is called by:
 15897 ;;		Interrupt level 1
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text86
 15902  0056E4                     __ptext86:
 15903                           	callstack 0
 15904  0056E4                     _TMR4_ISR:
 15905                           	callstack 13
 15906                           
 15907                           ;incstack = 0
 15908  0056E4  006F FF60  F013    	movff	status,??_TMR4_ISR
 15909  0056EA                     
 15910                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR7bits.TMR4IF = 0;
 15911  0056EA  0139               	movlb	57	; () banked
 15912  0056EC  91A7               	bcf	167,0,b	;volatile
 15913  0056EE                     
 15914                           ; BSR set to: 57
 15915                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 10)
 15916  0056EE  0100               	movlb	0	; () banked
 15917  0056F0  4BF3               	infsnz	TMR4_ISR@CountCallBack& (0+255),f,b	;volatile
 15918  0056F2  2BF4               	incf	(TMR4_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 15919  0056F4  51F4               	movf	(TMR4_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 15920  0056F6  E109               	bnz	i1u713_20
 15921  0056F8  0E0A               	movlw	10
 15922  0056FA  5DF3               	subwf	TMR4_ISR@CountCallBack& (0+255),w,b	;volatile
 15923  0056FC  A0D8               	btfss	status,0,c
 15924  0056FE  EF83  F02B         	goto	i1u713_21
 15925  005702  EF85  F02B         	goto	i1u713_20
 15926  005706                     i1u713_21:
 15927  005706  EF8C  F02B         	goto	i1l688
 15928  00570A                     i1u713_20:
 15929  00570A                     
 15930                           ; BSR set to: 0
 15931                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:         TMR4_Ca
      +                          llBack();
 15932  00570A  EC83  F02D         	call	_TMR4_CallBack	;wreg free
 15933  00570E                     
 15934                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
 15935  00570E  0E00               	movlw	0
 15936  005710  0100               	movlb	0	; () banked
 15937  005712  6FF4               	movwf	(TMR4_ISR@CountCallBack+1)& (0+255),b	;volatile
 15938  005714  0E00               	movlw	0
 15939  005716  6FF3               	movwf	TMR4_ISR@CountCallBack& (0+255),b	;volatile
 15940  005718                     i1l688:
 15941                           
 15942                           ; BSR set to: 0
 15943  005718  0060  F04F  FFD8   	movff	??_TMR4_ISR,status
 15944  00571E  0011               	retfie		f
 15945  005720                     __end_of_TMR4_ISR:
 15946                           	callstack 0
 15947                           
 15948 ;; *************** function _TMR4_CallBack *****************
 15949 ;; Defined at:
 15950 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 15951 ;; Parameters:    Size  Location     Type
 15952 ;;		None
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;		None
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1    wreg      void 
 15957 ;; Registers used:
 15958 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 15959 ;; Tracked objects:
 15960 ;;		On entry : 0/0
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15968 ;;Total ram usage:        0 bytes
 15969 ;; Hardware stack levels used: 1
 15970 ;; Hardware stack levels required when called: 5
 15971 ;; This function calls:
 15972 ;;		Absolute function
 15973 ;;		_TMR4_10msISR
 15974 ;;		_TMR4_DefaultInterruptHandler
 15975 ;; This function is called by:
 15976 ;;		_TMR4_ISR
 15977 ;; This function uses a non-reentrant model
 15978 ;;
 15979                           
 15980                           	psect	text87
 15981  005B06                     __ptext87:
 15982                           	callstack 0
 15983  005B06                     _TMR4_CallBack:
 15984                           	callstack 13
 15985  005B06                     
 15986                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
 15987  005B06  0101               	movlb	1	; () banked
 15988  005B08  5182               	movf	_TMR4_InterruptHandler& (0+255),w,b
 15989  005B0A  1183               	iorwf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 15990  005B0C  B4D8               	btfsc	status,2,c
 15991  005B0E  EF8B  F02D         	goto	i1u697_21
 15992  005B12  EF8D  F02D         	goto	i1u697_20
 15993  005B16                     i1u697_21:
 15994  005B16  EF99  F02D         	goto	i1l692
 15995  005B1A                     i1u697_20:
 15996  005B1A                     
 15997                           ; BSR set to: 1
 15998                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
 15999  005B1A  D802               	call	i1u698_28
 16000  005B1C  EF99  F02D         	goto	i1u698_29
 16001  005B20                     i1u698_28:
 16002  005B20  0005               	push	
 16003  005B22  6EFA               	movwf	pclath,c
 16004  005B24  5182               	movf	_TMR4_InterruptHandler& (0+255),w,b
 16005  005B26  6EFD               	movwf	tosl,c
 16006  005B28  5183               	movf	(_TMR4_InterruptHandler+1)& (0+255),w,b
 16007  005B2A  6EFE               	movwf	tosh,c
 16008  005B2C  6AFF               	clrf	tosu,c
 16009  005B2E  50FA               	movf	pclath,w,c
 16010  005B30  0012               	return		;indir
 16011  005B32                     i1u698_29:
 16012  005B32                     i1l692:
 16013  005B32  0012               	return		;funcret
 16014  005B34                     __end_of_TMR4_CallBack:
 16015                           	callstack 0
 16016                           
 16017 ;; *************** function _TMR4_10msISR *****************
 16018 ;; Defined at:
 16019 ;;		line 62 in file "main.c"
 16020 ;; Parameters:    Size  Location     Type
 16021 ;;		None
 16022 ;; Auto vars:     Size  Location     Type
 16023 ;;		None
 16024 ;; Return value:  Size  Location     Type
 16025 ;;                  1    wreg      void 
 16026 ;; Registers used:
 16027 ;;		status,2, status,0
 16028 ;; Tracked objects:
 16029 ;;		On entry : 0/0
 16030 ;;		On exit  : 0/0
 16031 ;;		Unchanged: 0/0
 16032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16037 ;;Total ram usage:        0 bytes
 16038 ;; Hardware stack levels used: 1
 16039 ;; Hardware stack levels required when called: 4
 16040 ;; This function calls:
 16041 ;;		Nothing
 16042 ;; This function is called by:
 16043 ;;		_main
 16044 ;;		_TMR4_CallBack
 16045 ;; This function uses a non-reentrant model
 16046 ;;
 16047                           
 16048                           	psect	text88
 16049  005DD4                     __ptext88:
 16050                           	callstack 0
 16051  005DD4                     _TMR4_10msISR:
 16052                           	callstack 13
 16053  005DD4                     
 16054                           ;main.c: 63:     ++cycle10ms;
 16055  005DD4  0100               	movlb	0	; () banked
 16056  005DD6  2BFD               	incf	_cycle10ms& (0+255),f,b	;volatile
 16057  005DD8                     
 16058                           ; BSR set to: 0
 16059  005DD8  0012               	return		;funcret
 16060  005DDA                     __end_of_TMR4_10msISR:
 16061                           	callstack 0
 16062                           
 16063 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 16064 ;; Defined at:
 16065 ;;		line 198 in file "mcc_generated_files/tmr4.c"
 16066 ;; Parameters:    Size  Location     Type
 16067 ;;		None
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;		None
 16070 ;; Return value:  Size  Location     Type
 16071 ;;                  1    wreg      void 
 16072 ;; Registers used:
 16073 ;;		None
 16074 ;; Tracked objects:
 16075 ;;		On entry : 0/0
 16076 ;;		On exit  : 0/0
 16077 ;;		Unchanged: 0/0
 16078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16083 ;;Total ram usage:        0 bytes
 16084 ;; Hardware stack levels used: 1
 16085 ;; Hardware stack levels required when called: 4
 16086 ;; This function calls:
 16087 ;;		Nothing
 16088 ;; This function is called by:
 16089 ;;		_TMR4_Initialize
 16090 ;;		_TMR4_CallBack
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           	psect	text89
 16095  005DDE                     __ptext89:
 16096                           	callstack 0
 16097  005DDE                     _TMR4_DefaultInterruptHandler:
 16098                           	callstack 13
 16099  005DDE  0012               	return		;funcret
 16100  005DE0                     __end_of_TMR4_DefaultInterruptHandler:
 16101                           	callstack 0
 16102                           
 16103 ;; *************** function _Default_ISR *****************
 16104 ;; Defined at:
 16105 ;;		line 83 in file "mcc_generated_files/interrupt_manager.c"
 16106 ;; Parameters:    Size  Location     Type
 16107 ;;		None
 16108 ;; Auto vars:     Size  Location     Type
 16109 ;;		None
 16110 ;; Return value:  Size  Location     Type
 16111 ;;                  1    wreg      void 
 16112 ;; Registers used:
 16113 ;;		None
 16114 ;; Tracked objects:
 16115 ;;		On entry : 0/0
 16116 ;;		On exit  : 0/0
 16117 ;;		Unchanged: 0/0
 16118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16123 ;;Total ram usage:        0 bytes
 16124 ;; Hardware stack levels used: 1
 16125 ;; This function calls:
 16126 ;;		Nothing
 16127 ;; This function is called by:
 16128 ;;		Interrupt level 2
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text90
 16133  005DE0                     __ptext90:
 16134                           	callstack 0
 16135  005DE0                     _Default_ISR:
 16136                           	callstack 15
 16137  005DE0  0011               	retfie		f
 16138  005DE2                     __end_of_Default_ISR:
 16139                           	callstack 0
 16140                           
 16141 ;; *************** function _CCP3_CaptureISR *****************
 16142 ;; Defined at:
 16143 ;;		line 104 in file "mcc_generated_files/ccp3.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;		None
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;  module          2    2[COMRAM] struct CCPR3Reg_tag
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  1    wreg      void 
 16150 ;; Registers used:
 16151 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16152 ;; Tracked objects:
 16153 ;;		On entry : 0/0
 16154 ;;		On exit  : 0/0
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16161 ;;Total ram usage:        2 bytes
 16162 ;; Hardware stack levels used: 1
 16163 ;; Hardware stack levels required when called: 1
 16164 ;; This function calls:
 16165 ;;		Absolute function
 16166 ;;		_CCP3_DefaultCallBack
 16167 ;; This function is called by:
 16168 ;;		Interrupt level 2
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           
 16172                           	psect	text91
 16173  00594C                     __ptext91:
 16174                           	callstack 0
 16175  00594C                     _CCP3_CaptureISR:
 16176                           	callstack 14
 16177  00594C                     
 16178                           ;mcc_generated_files/ccp3.c: 106:     CCP3_PERIOD_REG_T module;;mcc_generated_files/ccp3
      +                          .c: 109:     PIR9bits.CCP3IF = 0;
 16179  00594C  0139               	movlb	57	; () banked
 16180  00594E  93A9               	bcf	169,1,b	;volatile
 16181                           
 16182                           ;mcc_generated_files/ccp3.c: 112:     module.ccpr3l = CCPR3L;
 16183  005950  006F FDD0  F003    	movff	16244,CCP3_CaptureISR@module	;volatile
 16184                           
 16185                           ;mcc_generated_files/ccp3.c: 113:     module.ccpr3h = CCPR3H;
 16186  005956  006F FDD4  F004    	movff	16245,CCP3_CaptureISR@module+1	;volatile
 16187  00595C                     
 16188                           ; BSR set to: 57
 16189                           ;mcc_generated_files/ccp3.c: 116:     CCP3_CallBack(module.ccpr3_16Bit);
 16190  00595C  C003  F001         	movff	CCP3_CaptureISR@module,CCP3_DefaultCallBack@capturedValue
 16191  005960  C004  F002         	movff	CCP3_CaptureISR@module+1,CCP3_DefaultCallBack@capturedValue+1
 16192  005964  D802               	call	i2u709_48
 16193  005966  EFBF  F02C         	goto	i2u709_49
 16194  00596A                     i2u709_48:
 16195  00596A  0005               	push	
 16196  00596C  6EFA               	movwf	pclath,c
 16197  00596E  0101               	movlb	1	; () banked
 16198  005970  518C               	movf	_CCP3_CallBack& (0+255),w,b
 16199  005972  6EFD               	movwf	tosl,c
 16200  005974  518D               	movf	(_CCP3_CallBack+1)& (0+255),w,b
 16201  005976  6EFE               	movwf	tosh,c
 16202  005978  6AFF               	clrf	tosu,c
 16203  00597A  50FA               	movf	pclath,w,c
 16204  00597C  0012               	return		;indir
 16205  00597E                     i2u709_49:
 16206  00597E  0011               	retfie		f
 16207  005980                     __end_of_CCP3_CaptureISR:
 16208                           	callstack 0
 16209                           
 16210 ;; *************** function _CCP3_DefaultCallBack *****************
 16211 ;; Defined at:
 16212 ;;		line 64 in file "mcc_generated_files/ccp3.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;  capturedValu    2    0[COMRAM] unsigned short 
 16215 ;; Auto vars:     Size  Location     Type
 16216 ;;		None
 16217 ;; Return value:  Size  Location     Type
 16218 ;;                  1    wreg      void 
 16219 ;; Registers used:
 16220 ;;		wreg, status,2, status,0
 16221 ;; Tracked objects:
 16222 ;;		On entry : 0/0
 16223 ;;		On exit  : 0/0
 16224 ;;		Unchanged: 0/0
 16225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16230 ;;Total ram usage:        2 bytes
 16231 ;; Hardware stack levels used: 1
 16232 ;; This function calls:
 16233 ;;		Nothing
 16234 ;; This function is called by:
 16235 ;;		_CCP3_Initialize
 16236 ;;		_CCP3_CaptureISR
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           	psect	text92
 16241  005A4A                     __ptext92:
 16242                           	callstack 0
 16243  005A4A                     _CCP3_DefaultCallBack:
 16244                           	callstack 14
 16245  005A4A                     
 16246                           ;mcc_generated_files/ccp3.c: 64: static void CCP3_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp3.c: 65: {;mcc_generated_files/ccp3.c: 67:     if(PORTDbits.RD7
      +                          ) {
 16247  005A4A  AECD               	btfss	205,7,c	;volatile
 16248  005A4C  EF2A  F02D         	goto	i2u694_41
 16249  005A50  EF2C  F02D         	goto	i2u694_40
 16250  005A54                     i2u694_41:
 16251  005A54  EF32  F02D         	goto	i2l7071
 16252  005A58                     i2u694_40:
 16253  005A58                     
 16254                           ;mcc_generated_files/ccp3.c: 68:         distLeftM = capturedValue;
 16255  005A58  C001  F0F9         	movff	CCP3_DefaultCallBack@capturedValue,_distLeftM
 16256  005A5C  C002  F0FA         	movff	CCP3_DefaultCallBack@capturedValue+1,_distLeftM+1
 16257                           
 16258                           ;mcc_generated_files/ccp3.c: 69:     } else {
 16259  005A60  EF3C  F02D         	goto	i2l438
 16260  005A64                     i2l7071:
 16261                           
 16262                           ;mcc_generated_files/ccp3.c: 70:         distLeft = capturedValue - distLeftM;
 16263  005A64  0100               	movlb	0	; () banked
 16264  005A66  51F9               	movf	_distLeftM& (0+255),w,b
 16265  005A68  5C01               	subwf	CCP3_DefaultCallBack@capturedValue^0,w,c
 16266  005A6A  6FFB               	movwf	_distLeft& (0+255),b	;volatile
 16267  005A6C  51FA               	movf	(_distLeftM+1)& (0+255),w,b
 16268  005A6E  5802               	subwfb	(CCP3_DefaultCallBack@capturedValue+1)^0,w,c
 16269  005A70  6FFC               	movwf	(_distLeft+1)& (0+255),b	;volatile
 16270  005A72                     
 16271                           ; BSR set to: 0
 16272                           ;mcc_generated_files/ccp3.c: 71:         distLeft >>= 1;
 16273  005A72  90D8               	bcf	status,0,c
 16274  005A74  33FC               	rrcf	(_distLeft+1)& (0+255),f,b	;volatile
 16275  005A76  33FB               	rrcf	_distLeft& (0+255),f,b	;volatile
 16276  005A78                     i2l438:
 16277  005A78  0012               	return		;funcret
 16278  005A7A                     __end_of_CCP3_DefaultCallBack:
 16279                           	callstack 0
 16280                           
 16281 ;; *************** function _CCP4_CaptureISR *****************
 16282 ;; Defined at:
 16283 ;;		line 107 in file "mcc_generated_files/ccp4.c"
 16284 ;; Parameters:    Size  Location     Type
 16285 ;;		None
 16286 ;; Auto vars:     Size  Location     Type
 16287 ;;  module          2    6[COMRAM] struct CCPR4Reg_tag
 16288 ;; Return value:  Size  Location     Type
 16289 ;;                  1    wreg      void 
 16290 ;; Registers used:
 16291 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16292 ;; Tracked objects:
 16293 ;;		On entry : 0/0
 16294 ;;		On exit  : 0/0
 16295 ;;		Unchanged: 0/0
 16296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16301 ;;Total ram usage:        2 bytes
 16302 ;; Hardware stack levels used: 1
 16303 ;; Hardware stack levels required when called: 1
 16304 ;; This function calls:
 16305 ;;		Absolute function
 16306 ;;		_CCP4_DefaultCallBack
 16307 ;; This function is called by:
 16308 ;;		Interrupt level 2
 16309 ;; This function uses a non-reentrant model
 16310 ;;
 16311                           
 16312                           	psect	text93
 16313  005980                     __ptext93:
 16314                           	callstack 0
 16315  005980                     _CCP4_CaptureISR:
 16316                           	callstack 14
 16317  005980                     
 16318                           ;mcc_generated_files/ccp4.c: 109:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4
      +                          .c: 112:     PIR10bits.CCP4IF = 0;
 16319  005980  0139               	movlb	57	; () banked
 16320  005982  91AA               	bcf	170,0,b	;volatile
 16321                           
 16322                           ;mcc_generated_files/ccp4.c: 115:     module.ccpr4l = CCPR4L;
 16323  005984  006F FDC0  F007    	movff	16240,CCP4_CaptureISR@module	;volatile
 16324                           
 16325                           ;mcc_generated_files/ccp4.c: 116:     module.ccpr4h = CCPR4H;
 16326  00598A  006F FDC4  F008    	movff	16241,CCP4_CaptureISR@module+1	;volatile
 16327  005990                     
 16328                           ; BSR set to: 57
 16329                           ;mcc_generated_files/ccp4.c: 119:     CCP4_CallBack(module.ccpr4_16Bit);
 16330  005990  C007  F005         	movff	CCP4_CaptureISR@module,CCP4_DefaultCallBack@capturedValue
 16331  005994  C008  F006         	movff	CCP4_CaptureISR@module+1,CCP4_DefaultCallBack@capturedValue+1
 16332  005998  D802               	call	i2u710_48
 16333  00599A  EFD9  F02C         	goto	i2u710_49
 16334  00599E                     i2u710_48:
 16335  00599E  0005               	push	
 16336  0059A0  6EFA               	movwf	pclath,c
 16337  0059A2  0101               	movlb	1	; () banked
 16338  0059A4  518A               	movf	_CCP4_CallBack& (0+255),w,b
 16339  0059A6  6EFD               	movwf	tosl,c
 16340  0059A8  518B               	movf	(_CCP4_CallBack+1)& (0+255),w,b
 16341  0059AA  6EFE               	movwf	tosh,c
 16342  0059AC  6AFF               	clrf	tosu,c
 16343  0059AE  50FA               	movf	pclath,w,c
 16344  0059B0  0012               	return		;indir
 16345  0059B2                     i2u710_49:
 16346  0059B2  0011               	retfie		f
 16347  0059B4                     __end_of_CCP4_CaptureISR:
 16348                           	callstack 0
 16349                           
 16350 ;; *************** function _CCP4_DefaultCallBack *****************
 16351 ;; Defined at:
 16352 ;;		line 64 in file "mcc_generated_files/ccp4.c"
 16353 ;; Parameters:    Size  Location     Type
 16354 ;;  capturedValu    2    4[COMRAM] unsigned short 
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;                  1    wreg      void 
 16359 ;; Registers used:
 16360 ;;		wreg, status,2, status,0
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/0
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16369 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16370 ;;Total ram usage:        2 bytes
 16371 ;; Hardware stack levels used: 1
 16372 ;; This function calls:
 16373 ;;		Nothing
 16374 ;; This function is called by:
 16375 ;;		_CCP4_Initialize
 16376 ;;		_CCP4_CaptureISR
 16377 ;; This function uses a non-reentrant model
 16378 ;;
 16379                           
 16380                           	psect	text94
 16381  005A7A                     __ptext94:
 16382                           	callstack 0
 16383  005A7A                     _CCP4_DefaultCallBack:
 16384                           	callstack 14
 16385  005A7A                     
 16386                           ;mcc_generated_files/ccp4.c: 64: static void CCP4_DefaultCallBack(uint16_t capturedValue
      +                          );mcc_generated_files/ccp4.c: 65: {;mcc_generated_files/ccp4.c: 67:     if(PORTDbits.RD6
      +                          ) {
 16387  005A7A  ACCD               	btfss	205,6,c	;volatile
 16388  005A7C  EF42  F02D         	goto	i2u695_41
 16389  005A80  EF44  F02D         	goto	i2u695_40
 16390  005A84                     i2u695_41:
 16391  005A84  EF4A  F02D         	goto	i2l7079
 16392  005A88                     i2u695_40:
 16393  005A88                     
 16394                           ;mcc_generated_files/ccp4.c: 68:         distRightM = capturedValue;
 16395  005A88  C005  F0F5         	movff	CCP4_DefaultCallBack@capturedValue,_distRightM
 16396  005A8C  C006  F0F6         	movff	CCP4_DefaultCallBack@capturedValue+1,_distRightM+1
 16397                           
 16398                           ;mcc_generated_files/ccp4.c: 70:     } else {
 16399  005A90  EF54  F02D         	goto	i2l476
 16400  005A94                     i2l7079:
 16401                           
 16402                           ;mcc_generated_files/ccp4.c: 71:         distRight = capturedValue - distRightM;
 16403  005A94  0100               	movlb	0	; () banked
 16404  005A96  51F5               	movf	_distRightM& (0+255),w,b
 16405  005A98  5C05               	subwf	CCP4_DefaultCallBack@capturedValue^0,w,c
 16406  005A9A  6FF7               	movwf	_distRight& (0+255),b	;volatile
 16407  005A9C  51F6               	movf	(_distRightM+1)& (0+255),w,b
 16408  005A9E  5806               	subwfb	(CCP4_DefaultCallBack@capturedValue+1)^0,w,c
 16409  005AA0  6FF8               	movwf	(_distRight+1)& (0+255),b	;volatile
 16410  005AA2                     
 16411                           ; BSR set to: 0
 16412                           ;mcc_generated_files/ccp4.c: 72:         distRight >>= 1;
 16413  005AA2  90D8               	bcf	status,0,c
 16414  005AA4  33F8               	rrcf	(_distRight+1)& (0+255),f,b	;volatile
 16415  005AA6  33F7               	rrcf	_distRight& (0+255),f,b	;volatile
 16416  005AA8                     i2l476:
 16417  005AA8  0012               	return		;funcret
 16418  005AAA                     __end_of_CCP4_DefaultCallBack:
 16419                           	callstack 0
 16420                           
 16421 ;; *************** function _TMR5_GATE_ISR *****************
 16422 ;; Defined at:
 16423 ;;		line 175 in file "mcc_generated_files/tmr5.c"
 16424 ;; Parameters:    Size  Location     Type
 16425 ;;		None
 16426 ;; Auto vars:     Size  Location     Type
 16427 ;;		None
 16428 ;; Return value:  Size  Location     Type
 16429 ;;                  1    wreg      void 
 16430 ;; Registers used:
 16431 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16432 ;; Tracked objects:
 16433 ;;		On entry : 0/0
 16434 ;;		On exit  : 0/0
 16435 ;;		Unchanged: 0/0
 16436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16441 ;;Total ram usage:        0 bytes
 16442 ;; Hardware stack levels used: 1
 16443 ;; Hardware stack levels required when called: 3
 16444 ;; This function calls:
 16445 ;;		Absolute function
 16446 ;;		_TMR5_DefaultGateInterruptHandler
 16447 ;; This function is called by:
 16448 ;;		Interrupt level 2
 16449 ;; This function uses a non-reentrant model
 16450 ;;
 16451                           
 16452                           	psect	text95
 16453  0059E8                     __ptext95:
 16454                           	callstack 0
 16455  0059E8                     _TMR5_GATE_ISR:
 16456                           	callstack 12
 16457  0059E8                     
 16458                           ;mcc_generated_files/tmr5.c: 178:     PIR8bits.TMR5GIF = 0;
 16459  0059E8  0139               	movlb	57	; () banked
 16460  0059EA  9FA8               	bcf	168,7,b	;volatile
 16461  0059EC                     
 16462                           ; BSR set to: 57
 16463                           ;mcc_generated_files/tmr5.c: 180:     if(TMR5_GateInterruptHandler)
 16464  0059EC  0101               	movlb	1	; () banked
 16465  0059EE  5186               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16466  0059F0  1187               	iorwf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16467  0059F2  B4D8               	btfsc	status,2,c
 16468  0059F4  EFFE  F02C         	goto	i2u711_41
 16469  0059F8  EF00  F02D         	goto	i2u711_40
 16470  0059FC                     i2u711_41:
 16471  0059FC  EF0C  F02D         	goto	i2l552
 16472  005A00                     i2u711_40:
 16473  005A00                     
 16474                           ; BSR set to: 1
 16475                           ;mcc_generated_files/tmr5.c: 181:     {;mcc_generated_files/tmr5.c: 182:         TMR5_Ga
      +                          teInterruptHandler();
 16476  005A00  D802               	call	i2u712_48
 16477  005A02  EF0C  F02D         	goto	i2u712_49
 16478  005A06                     i2u712_48:
 16479  005A06  0005               	push	
 16480  005A08  6EFA               	movwf	pclath,c
 16481  005A0A  5186               	movf	_TMR5_GateInterruptHandler& (0+255),w,b
 16482  005A0C  6EFD               	movwf	tosl,c
 16483  005A0E  5187               	movf	(_TMR5_GateInterruptHandler+1)& (0+255),w,b
 16484  005A10  6EFE               	movwf	tosh,c
 16485  005A12  6AFF               	clrf	tosu,c
 16486  005A14  50FA               	movf	pclath,w,c
 16487  005A16  0012               	return		;indir
 16488  005A18                     i2u712_49:
 16489  005A18                     i2l552:
 16490  005A18  0011               	retfie		f
 16491  005A1A                     __end_of_TMR5_GATE_ISR:
 16492                           	callstack 0
 16493                           
 16494 ;; *************** function _TMR5_DefaultGateInterruptHandler *****************
 16495 ;; Defined at:
 16496 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 16497 ;; Parameters:    Size  Location     Type
 16498 ;;		None
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;		None
 16501 ;; Return value:  Size  Location     Type
 16502 ;;                  1    wreg      void 
 16503 ;; Registers used:
 16504 ;;		wreg, status,2, status,0, cstack
 16505 ;; Tracked objects:
 16506 ;;		On entry : 0/0
 16507 ;;		On exit  : 0/0
 16508 ;;		Unchanged: 0/0
 16509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16514 ;;Total ram usage:        0 bytes
 16515 ;; Hardware stack levels used: 1
 16516 ;; Hardware stack levels required when called: 2
 16517 ;; This function calls:
 16518 ;;		_TMR5_ReadTimer
 16519 ;;		_TMR5_Reload
 16520 ;; This function is called by:
 16521 ;;		_TMR5_Initialize
 16522 ;;		_TMR5_GATE_ISR
 16523 ;; This function uses a non-reentrant model
 16524 ;;
 16525                           
 16526                           	psect	text96
 16527  005CB8                     __ptext96:
 16528                           	callstack 0
 16529  005CB8                     _TMR5_DefaultGateInterruptHandler:
 16530                           	callstack 12
 16531  005CB8                     
 16532                           ;mcc_generated_files/tmr5.c: 194:     distFront = TMR5_ReadTimer();
 16533  005CB8  EC2C  F02E         	call	_TMR5_ReadTimer	;wreg free
 16534  005CBC  C009  F04A         	movff	?_TMR5_ReadTimer,_distFront	;volatile
 16535  005CC0  C00A  F04B         	movff	?_TMR5_ReadTimer+1,_distFront+1	;volatile
 16536  005CC4                     
 16537                           ;mcc_generated_files/tmr5.c: 195:     distFront >>= 1;
 16538  005CC4  90D8               	bcf	status,0,c
 16539  005CC6  324B               	rrcf	(_distFront+1)^0,f,c	;volatile
 16540  005CC8  324A               	rrcf	_distFront^0,f,c	;volatile
 16541  005CCA                     
 16542                           ;mcc_generated_files/tmr5.c: 196:     TMR5_Reload();
 16543  005CCA  ECAE  F02E         	call	_TMR5_Reload	;wreg free
 16544  005CCE                     
 16545                           ;mcc_generated_files/tmr5.c: 197:     PIR8bits.TMR5GIF = 0;
 16546  005CCE  0139               	movlb	57	; () banked
 16547  005CD0  9FA8               	bcf	168,7,b	;volatile
 16548  005CD2                     
 16549                           ; BSR set to: 57
 16550  005CD2  0012               	return		;funcret
 16551  005CD4                     __end_of_TMR5_DefaultGateInterruptHandler:
 16552                           	callstack 0
 16553                           
 16554 ;; *************** function _TMR5_Reload *****************
 16555 ;; Defined at:
 16556 ;;		line 155 in file "mcc_generated_files/tmr5.c"
 16557 ;; Parameters:    Size  Location     Type
 16558 ;;		None
 16559 ;; Auto vars:     Size  Location     Type
 16560 ;;		None
 16561 ;; Return value:  Size  Location     Type
 16562 ;;                  1    wreg      void 
 16563 ;; Registers used:
 16564 ;;		wreg, status,2, cstack
 16565 ;; Tracked objects:
 16566 ;;		On entry : 0/0
 16567 ;;		On exit  : 0/0
 16568 ;;		Unchanged: 0/0
 16569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16574 ;;Total ram usage:        0 bytes
 16575 ;; Hardware stack levels used: 1
 16576 ;; Hardware stack levels required when called: 1
 16577 ;; This function calls:
 16578 ;;		_TMR5_WriteTimer
 16579 ;; This function is called by:
 16580 ;;		_TMR5_DefaultGateInterruptHandler
 16581 ;; This function uses a non-reentrant model
 16582 ;;
 16583                           
 16584                           	psect	text97
 16585  005D5C                     __ptext97:
 16586                           	callstack 0
 16587  005D5C                     _TMR5_Reload:
 16588                           	callstack 12
 16589  005D5C                     
 16590                           ;mcc_generated_files/tmr5.c: 157:     TMR5_WriteTimer(timer5ReloadVal);
 16591  005D5C  C188  F009         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 16592  005D60  C189  F00A         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 16593  005D64  ECDC  F02D         	call	_TMR5_WriteTimer	;wreg free
 16594  005D68  0012               	return		;funcret
 16595  005D6A                     __end_of_TMR5_Reload:
 16596                           	callstack 0
 16597                           
 16598 ;; *************** function _TMR5_WriteTimer *****************
 16599 ;; Defined at:
 16600 ;;		line 133 in file "mcc_generated_files/tmr5.c"
 16601 ;; Parameters:    Size  Location     Type
 16602 ;;  timerVal        2    8[COMRAM] unsigned short 
 16603 ;; Auto vars:     Size  Location     Type
 16604 ;;		None
 16605 ;; Return value:  Size  Location     Type
 16606 ;;                  1    wreg      void 
 16607 ;; Registers used:
 16608 ;;		wreg, status,2
 16609 ;; Tracked objects:
 16610 ;;		On entry : 0/0
 16611 ;;		On exit  : 0/0
 16612 ;;		Unchanged: 0/0
 16613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16618 ;;Total ram usage:        2 bytes
 16619 ;; Hardware stack levels used: 1
 16620 ;; This function calls:
 16621 ;;		Nothing
 16622 ;; This function is called by:
 16623 ;;		_TMR5_Reload
 16624 ;; This function uses a non-reentrant model
 16625 ;;
 16626                           
 16627                           	psect	text98
 16628  005BB8                     __ptext98:
 16629                           	callstack 0
 16630  005BB8                     _TMR5_WriteTimer:
 16631                           	callstack 12
 16632  005BB8                     
 16633                           ;mcc_generated_files/tmr5.c: 133: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 134: {;mcc_generated_files/tmr5.c: 135:     if (T5CONbits.NOT_SYNC == 1)
 16634  005BB8  A49A               	btfss	154,2,c	;volatile
 16635  005BBA  EFE1  F02D         	goto	i2u632_41
 16636  005BBE  EFE3  F02D         	goto	i2u632_40
 16637  005BC2                     i2u632_41:
 16638  005BC2  EFEC  F02D         	goto	i2l6531
 16639  005BC6                     i2u632_40:
 16640  005BC6                     
 16641                           ;mcc_generated_files/tmr5.c: 136:     {;mcc_generated_files/tmr5.c: 138:         T5CONbi
      +                          ts.TMR5ON = 0;
 16642  005BC6  909A               	bcf	154,0,c	;volatile
 16643  005BC8                     
 16644                           ;mcc_generated_files/tmr5.c: 141:         TMR5H = (uint8_t)(timerVal >> 8);
 16645  005BC8  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16646  005BCA  6E99               	movwf	153,c	;volatile
 16647  005BCC                     
 16648                           ;mcc_generated_files/tmr5.c: 142:         TMR5L = (uint8_t)timerVal;
 16649  005BCC  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16650  005BD2                     
 16651                           ;mcc_generated_files/tmr5.c: 145:         T5CONbits.TMR5ON =1;
 16652  005BD2  809A               	bsf	154,0,c	;volatile
 16653                           
 16654                           ;mcc_generated_files/tmr5.c: 146:     }
 16655  005BD4  EFF1  F02D         	goto	i2l534
 16656  005BD8                     i2l6531:
 16657                           
 16658                           ;mcc_generated_files/tmr5.c: 148:     {;mcc_generated_files/tmr5.c: 150:         TMR5H =
      +                           (uint8_t)(timerVal >> 8);
 16659  005BD8  500A               	movf	(TMR5_WriteTimer@timerVal+1)^0,w,c
 16660  005BDA  6E99               	movwf	153,c	;volatile
 16661  005BDC                     
 16662                           ;mcc_generated_files/tmr5.c: 151:         TMR5L = (uint8_t)timerVal;
 16663  005BDC  0060  F027  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
 16664  005BE2                     i2l534:
 16665  005BE2  0012               	return		;funcret
 16666  005BE4                     __end_of_TMR5_WriteTimer:
 16667                           	callstack 0
 16668                           
 16669 ;; *************** function _TMR5_ReadTimer *****************
 16670 ;; Defined at:
 16671 ;;		line 117 in file "mcc_generated_files/tmr5.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;		None
 16674 ;; Auto vars:     Size  Location     Type
 16675 ;;  readVal         2   12[COMRAM] unsigned short 
 16676 ;;  readValLow      1   15[COMRAM] unsigned char 
 16677 ;;  readValHigh     1   14[COMRAM] unsigned char 
 16678 ;; Return value:  Size  Location     Type
 16679 ;;                  2    8[COMRAM] unsigned short 
 16680 ;; Registers used:
 16681 ;;		wreg, status,2
 16682 ;; Tracked objects:
 16683 ;;		On entry : 0/0
 16684 ;;		On exit  : 0/0
 16685 ;;		Unchanged: 0/0
 16686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16688 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16691 ;;Total ram usage:        8 bytes
 16692 ;; Hardware stack levels used: 1
 16693 ;; This function calls:
 16694 ;;		Nothing
 16695 ;; This function is called by:
 16696 ;;		_TMR5_DefaultGateInterruptHandler
 16697 ;; This function uses a non-reentrant model
 16698 ;;
 16699                           
 16700                           	psect	text99
 16701  005C58                     __ptext99:
 16702                           	callstack 0
 16703  005C58                     _TMR5_ReadTimer:
 16704                           	callstack 13
 16705  005C58                     
 16706                           ;mcc_generated_files/tmr5.c: 119:     uint16_t readVal;;mcc_generated_files/tmr5.c: 120:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 121:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 123:     T5CONbits.T5RD16 = 1;
 16707  005C58  829A               	bsf	154,1,c	;volatile
 16708                           
 16709                           ;mcc_generated_files/tmr5.c: 125:     readValLow = TMR5L;
 16710  005C5A  006F FE60  F010    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
 16711                           
 16712                           ;mcc_generated_files/tmr5.c: 126:     readValHigh = TMR5H;
 16713  005C60  006F FE64  F00F    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
 16714  005C66                     
 16715                           ;mcc_generated_files/tmr5.c: 128:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
 16716  005C66  500F               	movf	TMR5_ReadTimer@readValHigh^0,w,c
 16717  005C68  6E0B               	movwf	??_TMR5_ReadTimer^0,c
 16718  005C6A  5010               	movf	TMR5_ReadTimer@readValLow^0,w,c
 16719  005C6C  6E0D               	movwf	TMR5_ReadTimer@readVal^0,c
 16720  005C6E  C00B  F00E         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
 16721  005C72                     
 16722                           ;mcc_generated_files/tmr5.c: 130:     return readVal;
 16723  005C72  C00D  F009         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
 16724  005C76  C00E  F00A         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
 16725  005C7A  0012               	return		;funcret
 16726  005C7C                     __end_of_TMR5_ReadTimer:
 16727                           	callstack 0
 16728                           
 16729 ;; *************** function _SMT1_PR_ACQ_ISR *****************
 16730 ;; Defined at:
 16731 ;;		line 192 in file "mcc_generated_files/smt1.c"
 16732 ;; Parameters:    Size  Location     Type
 16733 ;;		None
 16734 ;; Auto vars:     Size  Location     Type
 16735 ;;		None
 16736 ;; Return value:  Size  Location     Type
 16737 ;;                  1    wreg      void 
 16738 ;; Registers used:
 16739 ;;		wreg, status,2, status,0
 16740 ;; Tracked objects:
 16741 ;;		On entry : 0/0
 16742 ;;		On exit  : 0/0
 16743 ;;		Unchanged: 0/0
 16744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16749 ;;Total ram usage:        0 bytes
 16750 ;; Hardware stack levels used: 1
 16751 ;; This function calls:
 16752 ;;		Nothing
 16753 ;; This function is called by:
 16754 ;;		Interrupt level 2
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           	psect	text100
 16759  005584                     __ptext100:
 16760                           	callstack 0
 16761  005584                     _SMT1_PR_ACQ_ISR:
 16762                           	callstack 15
 16763  005584                     
 16764                           ;mcc_generated_files/smt1.c: 196:     PIR1bits.SMT1PRAIF = 0;
 16765  005584  0139               	movlb	57	; () banked
 16766  005586  9DA1               	bcf	161,6,b	;volatile
 16767  005588                     
 16768                           ; BSR set to: 57
 16769                           ;mcc_generated_files/smt1.c: 197:     smtPeriod = SMT1CPR;
 16770  005588  013F               	movlb	63	; () banked
 16771  00558A  5115               	movf	21,w,b	;volatile
 16772  00558C  6E46               	movwf	_smtPeriod^0,c	;volatile
 16773  00558E  5116               	movf	22,w,b	;volatile
 16774  005590  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 16775  005592  5117               	movf	23,w,b	;volatile
 16776  005594  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 16777  005596  6A49               	clrf	(_smtPeriod+3)^0,c	;volatile
 16778  005598                     
 16779                           ; BSR set to: 63
 16780                           ;mcc_generated_files/smt1.c: 198:     if(CLC3CONbits.LC3OUT) smtWay++;
 16781  005598  013C               	movlb	60	; () banked
 16782  00559A  AB60               	btfss	96,5,b	;volatile
 16783  00559C  EFD2  F02A         	goto	i2u714_41
 16784  0055A0  EFD4  F02A         	goto	i2u714_40
 16785  0055A4                     i2u714_41:
 16786  0055A4  EFDD  F02A         	goto	i2l7195
 16787  0055A8                     i2u714_40:
 16788  0055A8                     
 16789                           ; BSR set to: 60
 16790  0055A8  0E01               	movlw	1
 16791  0055AA  0101               	movlb	1	; () banked
 16792  0055AC  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16793  0055AE  0E00               	movlw	0
 16794  0055B0  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16795  0055B2  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16796  0055B4  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16797  0055B6  EFE6  F02A         	goto	i2l856
 16798  0055BA                     i2l7195:
 16799                           
 16800                           ; BSR set to: 60
 16801  0055BA  0EFF               	movlw	255
 16802  0055BC  0101               	movlb	1	; () banked
 16803  0055BE  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16804  0055C0  0EFF               	movlw	255
 16805  0055C2  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16806  0055C4  0EFF               	movlw	255
 16807  0055C6  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16808  0055C8  0EFF               	movlw	255
 16809  0055CA  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16810  0055CC                     i2l856:
 16811                           
 16812                           ; BSR set to: 1
 16813  0055CC  0011               	retfie		f
 16814  0055CE                     __end_of_SMT1_PR_ACQ_ISR:
 16815                           	callstack 0
 16816                           
 16817 ;; *************** function _SMT1_PW_ACQ_ISR *****************
 16818 ;; Defined at:
 16819 ;;		line 203 in file "mcc_generated_files/smt1.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;		None
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;		None
 16824 ;; Return value:  Size  Location     Type
 16825 ;;                  1    wreg      void 
 16826 ;; Registers used:
 16827 ;;		wreg, status,2, status,0
 16828 ;; Tracked objects:
 16829 ;;		On entry : 0/0
 16830 ;;		On exit  : 0/0
 16831 ;;		Unchanged: 0/0
 16832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16837 ;;Total ram usage:        0 bytes
 16838 ;; Hardware stack levels used: 1
 16839 ;; This function calls:
 16840 ;;		Nothing
 16841 ;; This function is called by:
 16842 ;;		Interrupt level 2
 16843 ;; This function uses a non-reentrant model
 16844 ;;
 16845                           
 16846                           	psect	text101
 16847  005404                     __ptext101:
 16848                           	callstack 0
 16849  005404                     _SMT1_PW_ACQ_ISR:
 16850                           	callstack 15
 16851  005404                     
 16852                           ;mcc_generated_files/smt1.c: 207:     PIR1bits.SMT1PWAIF = 0;
 16853  005404  0139               	movlb	57	; () banked
 16854  005406  9FA1               	bcf	161,7,b	;volatile
 16855  005408                     
 16856                           ; BSR set to: 57
 16857                           ;mcc_generated_files/smt1.c: 208:     smtDuty = SMT1CPW;
 16858  005408  013F               	movlb	63	; () banked
 16859  00540A  5118               	movf	24,w,b	;volatile
 16860  00540C  0101               	movlb	1	; () banked
 16861  00540E  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16862  005410  013F               	movlb	63	; () banked
 16863  005412  5119               	movf	25,w,b	;volatile
 16864  005414  0101               	movlb	1	; () banked
 16865  005416  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16866  005418  013F               	movlb	63	; () banked
 16867  00541A  511A               	movf	26,w,b	;volatile
 16868  00541C  0101               	movlb	1	; () banked
 16869  00541E  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16870  005420  6B27               	clrf	(_smtDuty+3)& (0+255),b	;volatile
 16871  005422                     
 16872                           ; BSR set to: 1
 16873                           ;mcc_generated_files/smt1.c: 209:     if(CLC3CONbits.LC3OUT) smtWay++;
 16874  005422  013C               	movlb	60	; () banked
 16875  005424  AB60               	btfss	96,5,b	;volatile
 16876  005426  EF17  F02A         	goto	i2u715_41
 16877  00542A  EF19  F02A         	goto	i2u715_40
 16878  00542E                     i2u715_41:
 16879  00542E  EF22  F02A         	goto	i2l7205
 16880  005432                     i2u715_40:
 16881  005432                     
 16882                           ; BSR set to: 60
 16883  005432  0E01               	movlw	1
 16884  005434  0101               	movlb	1	; () banked
 16885  005436  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16886  005438  0E00               	movlw	0
 16887  00543A  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16888  00543C  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16889  00543E  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16890  005440  EF2B  F02A         	goto	i2l863
 16891  005444                     i2l7205:
 16892                           
 16893                           ; BSR set to: 60
 16894  005444  0EFF               	movlw	255
 16895  005446  0101               	movlb	1	; () banked
 16896  005448  2720               	addwf	_smtWay& (0+255),f,b	;volatile
 16897  00544A  0EFF               	movlw	255
 16898  00544C  2321               	addwfc	(_smtWay+1)& (0+255),f,b	;volatile
 16899  00544E  0EFF               	movlw	255
 16900  005450  2322               	addwfc	(_smtWay+2)& (0+255),f,b	;volatile
 16901  005452  0EFF               	movlw	255
 16902  005454  2323               	addwfc	(_smtWay+3)& (0+255),f,b	;volatile
 16903  005456                     i2l863:
 16904                           
 16905                           ; BSR set to: 1
 16906  005456  0011               	retfie		f
 16907  005458                     __end_of_SMT1_PW_ACQ_ISR:
 16908                           	callstack 0
 16909                           
 16910 ;; *************** function _SMT1_Overflow_ISR *****************
 16911 ;; Defined at:
 16912 ;;		line 213 in file "mcc_generated_files/smt1.c"
 16913 ;; Parameters:    Size  Location     Type
 16914 ;;		None
 16915 ;; Auto vars:     Size  Location     Type
 16916 ;;		None
 16917 ;; Return value:  Size  Location     Type
 16918 ;;                  1    wreg      void 
 16919 ;; Registers used:
 16920 ;;		wreg, status,2
 16921 ;; Tracked objects:
 16922 ;;		On entry : 0/0
 16923 ;;		On exit  : 0/0
 16924 ;;		Unchanged: 0/0
 16925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16930 ;;Total ram usage:        0 bytes
 16931 ;; Hardware stack levels used: 1
 16932 ;; This function calls:
 16933 ;;		Nothing
 16934 ;; This function is called by:
 16935 ;;		Interrupt level 2
 16936 ;; This function uses a non-reentrant model
 16937 ;;
 16938                           
 16939                           	psect	text102
 16940  005C0C                     __ptext102:
 16941                           	callstack 0
 16942  005C0C                     _SMT1_Overflow_ISR:
 16943                           	callstack 15
 16944  005C0C                     
 16945                           ;mcc_generated_files/smt1.c: 217:     PIR1bits.SMT1IF = 0;
 16946  005C0C  0139               	movlb	57	; () banked
 16947  005C0E  9BA1               	bcf	161,5,b	;volatile
 16948  005C10                     
 16949                           ; BSR set to: 57
 16950                           ;mcc_generated_files/smt1.c: 218:     smtPeriod = 0;
 16951  005C10  0E00               	movlw	0
 16952  005C12  6E46               	movwf	_smtPeriod^0,c	;volatile
 16953  005C14  0E00               	movlw	0
 16954  005C16  6E47               	movwf	(_smtPeriod+1)^0,c	;volatile
 16955  005C18  0E00               	movlw	0
 16956  005C1A  6E48               	movwf	(_smtPeriod+2)^0,c	;volatile
 16957  005C1C  0E00               	movlw	0
 16958  005C1E  6E49               	movwf	(_smtPeriod+3)^0,c	;volatile
 16959                           
 16960                           ;mcc_generated_files/smt1.c: 219:     smtDuty = 0;
 16961  005C20  0E00               	movlw	0
 16962  005C22  0101               	movlb	1	; () banked
 16963  005C24  6F24               	movwf	_smtDuty& (0+255),b	;volatile
 16964  005C26  0E00               	movlw	0
 16965  005C28  6F25               	movwf	(_smtDuty+1)& (0+255),b	;volatile
 16966  005C2A  0E00               	movlw	0
 16967  005C2C  6F26               	movwf	(_smtDuty+2)& (0+255),b	;volatile
 16968  005C2E  0E00               	movlw	0
 16969  005C30  6F27               	movwf	(_smtDuty+3)& (0+255),b	;volatile
 16970  005C32                     
 16971                           ; BSR set to: 1
 16972  005C32  0011               	retfie		f
 16973  005C34                     __end_of_SMT1_Overflow_ISR:
 16974                           	callstack 0
 16975                           
 16976                           ;
 16977                           ; Interrupt Vector Table @ 0x8
 16978                           ;
 16979                           
 16980                           	psect	ivt0x8
 16981  000008                     __pivt0x8:
 16982                           	callstack 0
 16983  000008                     ivt0x8_base:
 16984                           	callstack 0
 16985                           
 16986                           ; Vector 0 : SWINT
 16987  000008  1778               	dw	_Default_ISR shr (0+2)
 16988                           
 16989                           ; Vector 1 : HLVD
 16990  00000A  1778               	dw	_Default_ISR shr (0+2)
 16991                           
 16992                           ; Vector 2 : OSF
 16993  00000C  1778               	dw	_Default_ISR shr (0+2)
 16994                           
 16995                           ; Vector 3 : CSW
 16996  00000E  1778               	dw	_Default_ISR shr (0+2)
 16997                           
 16998                           ; Vector 4 : NVM
 16999  000010  1778               	dw	_Default_ISR shr (0+2)
 17000                           
 17001                           ; Vector 5 : SCAN
 17002  000012  1778               	dw	_Default_ISR shr (0+2)
 17003                           
 17004                           ; Vector 6 : CRC
 17005  000014  1778               	dw	_Default_ISR shr (0+2)
 17006                           
 17007                           ; Vector 7 : IOC
 17008  000016  1778               	dw	_Default_ISR shr (0+2)
 17009                           
 17010                           ; Vector 8 : INT0
 17011  000018  1778               	dw	_Default_ISR shr (0+2)
 17012                           
 17013                           ; Vector 9 : ZCD
 17014  00001A  1778               	dw	_Default_ISR shr (0+2)
 17015                           
 17016                           ; Vector 10 : AD
 17017  00001C  1778               	dw	_Default_ISR shr (0+2)
 17018                           
 17019                           ; Vector 11 : ADT
 17020  00001E  1778               	dw	_Default_ISR shr (0+2)
 17021                           
 17022                           ; Vector 12 : CMP1
 17023  000020  1778               	dw	_Default_ISR shr (0+2)
 17024                           
 17025                           ; Vector 13 : SMT1
 17026  000022  1703               	dw	_SMT1_Overflow_ISR shr (0+2)
 17027                           
 17028                           ; Vector 14 : SMT1PRA
 17029  000024  1561               	dw	_SMT1_PR_ACQ_ISR shr (0+2)
 17030                           
 17031                           ; Vector 15 : SMT1PRW
 17032  000026  1501               	dw	_SMT1_PW_ACQ_ISR shr (0+2)
 17033                           
 17034                           ; Vector 16 : DMA1SCNT
 17035  000028  1778               	dw	_Default_ISR shr (0+2)
 17036                           
 17037                           ; Vector 17 : DMA1DCNT
 17038  00002A  1778               	dw	_Default_ISR shr (0+2)
 17039                           
 17040                           ; Vector 18 : DMA1OR
 17041  00002C  1778               	dw	_Default_ISR shr (0+2)
 17042                           
 17043                           ; Vector 19 : DMA1A
 17044  00002E  1778               	dw	_Default_ISR shr (0+2)
 17045                           
 17046                           ; Vector 20 : SPI1RX
 17047  000030  1778               	dw	_Default_ISR shr (0+2)
 17048                           
 17049                           ; Vector 21 : SPI1TX
 17050  000032  1778               	dw	_Default_ISR shr (0+2)
 17051                           
 17052                           ; Vector 22 : SPI1
 17053  000034  1778               	dw	_Default_ISR shr (0+2)
 17054                           
 17055                           ; Vector 23 : I2C1RX
 17056  000036  1778               	dw	_Default_ISR shr (0+2)
 17057                           
 17058                           ; Vector 24 : I2C1TX
 17059  000038  1778               	dw	_Default_ISR shr (0+2)
 17060                           
 17061                           ; Vector 25 : I2C1
 17062  00003A  1778               	dw	_Default_ISR shr (0+2)
 17063                           
 17064                           ; Vector 26 : I2C1E
 17065  00003C  1778               	dw	_Default_ISR shr (0+2)
 17066                           
 17067                           ; Vector 27 : U1RX
 17068  00003E  15E6               	dw	_UART1_rx_vect_isr shr (0+2)
 17069                           
 17070                           ; Vector 28 : U1TX
 17071  000040  15D7               	dw	_UART1_tx_vect_isr shr (0+2)
 17072                           
 17073                           ; Vector 29 : U1E
 17074  000042  1778               	dw	_Default_ISR shr (0+2)
 17075                           
 17076                           ; Vector 30 : U1
 17077  000044  1778               	dw	_Default_ISR shr (0+2)
 17078                           
 17079                           ; Vector 31 : TMR0
 17080  000046  1778               	dw	_Default_ISR shr (0+2)
 17081                           
 17082                           ; Vector 32 : TMR1
 17083  000048  1778               	dw	_Default_ISR shr (0+2)
 17084                           
 17085                           ; Vector 33 : TMR1G
 17086  00004A  1778               	dw	_Default_ISR shr (0+2)
 17087                           
 17088                           ; Vector 34 : TMR2
 17089  00004C  1778               	dw	_Default_ISR shr (0+2)
 17090                           
 17091                           ; Vector 35 : CCP1
 17092  00004E  1778               	dw	_Default_ISR shr (0+2)
 17093                           
 17094                           ; Vector 36 : Undefined
 17095  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17096                           
 17097                           ; Vector 37 : NCO1
 17098  000052  1778               	dw	_Default_ISR shr (0+2)
 17099                           
 17100                           ; Vector 38 : CWG1
 17101  000054  1778               	dw	_Default_ISR shr (0+2)
 17102                           
 17103                           ; Vector 39 : CLC1
 17104  000056  1778               	dw	_Default_ISR shr (0+2)
 17105                           
 17106                           ; Vector 40 : INT1
 17107  000058  1778               	dw	_Default_ISR shr (0+2)
 17108                           
 17109                           ; Vector 41 : CMP2
 17110  00005A  1778               	dw	_Default_ISR shr (0+2)
 17111                           
 17112                           ; Vector 42 : DMA2SCNT
 17113  00005C  1778               	dw	_Default_ISR shr (0+2)
 17114                           
 17115                           ; Vector 43 : DMA2DCNT
 17116  00005E  1778               	dw	_Default_ISR shr (0+2)
 17117                           
 17118                           ; Vector 44 : DMA2OR
 17119  000060  1778               	dw	_Default_ISR shr (0+2)
 17120                           
 17121                           ; Vector 45 : DMA2A
 17122  000062  1778               	dw	_Default_ISR shr (0+2)
 17123                           
 17124                           ; Vector 46 : I2C2RX
 17125  000064  1778               	dw	_Default_ISR shr (0+2)
 17126                           
 17127                           ; Vector 47 : I2C2TX
 17128  000066  1778               	dw	_Default_ISR shr (0+2)
 17129                           
 17130                           ; Vector 48 : I2C2
 17131  000068  1778               	dw	_Default_ISR shr (0+2)
 17132                           
 17133                           ; Vector 49 : I2C2E
 17134  00006A  1778               	dw	_Default_ISR shr (0+2)
 17135                           
 17136                           ; Vector 50 : U2RX
 17137  00006C  1778               	dw	_Default_ISR shr (0+2)
 17138                           
 17139                           ; Vector 51 : U2TX
 17140  00006E  1778               	dw	_Default_ISR shr (0+2)
 17141                           
 17142                           ; Vector 52 : U2E
 17143  000070  1778               	dw	_Default_ISR shr (0+2)
 17144                           
 17145                           ; Vector 53 : U2
 17146  000072  1778               	dw	_Default_ISR shr (0+2)
 17147                           
 17148                           ; Vector 54 : TMR3
 17149  000074  1778               	dw	_Default_ISR shr (0+2)
 17150                           
 17151                           ; Vector 55 : TMR3G
 17152  000076  1778               	dw	_Default_ISR shr (0+2)
 17153                           
 17154                           ; Vector 56 : TMR4
 17155  000078  15B9               	dw	_TMR4_ISR shr (0+2)
 17156                           
 17157                           ; Vector 57 : CCP2
 17158  00007A  1778               	dw	_Default_ISR shr (0+2)
 17159                           
 17160                           ; Vector 58 : Undefined
 17161  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17162                           
 17163                           ; Vector 59 : CWG2
 17164  00007E  1778               	dw	_Default_ISR shr (0+2)
 17165                           
 17166                           ; Vector 60 : CLC2
 17167  000080  1778               	dw	_Default_ISR shr (0+2)
 17168                           
 17169                           ; Vector 61 : INT2
 17170  000082  1778               	dw	_Default_ISR shr (0+2)
 17171                           
 17172                           ; Vector 62 : Undefined
 17173  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17174                           
 17175                           ; Vector 63 : Undefined
 17176  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17177                           
 17178                           ; Vector 64 : Undefined
 17179  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17180                           
 17181                           ; Vector 65 : Undefined
 17182  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17183                           
 17184                           ; Vector 66 : Undefined
 17185  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17186                           
 17187                           ; Vector 67 : Undefined
 17188  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17189                           
 17190                           ; Vector 68 : Undefined
 17191  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17192                           
 17193                           ; Vector 69 : Undefined
 17194  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17195                           
 17196                           ; Vector 70 : TMR5
 17197  000094  1778               	dw	_Default_ISR shr (0+2)
 17198                           
 17199                           ; Vector 71 : TMR5G
 17200  000096  167A               	dw	_TMR5_GATE_ISR shr (0+2)
 17201                           
 17202                           ; Vector 72 : TMR6
 17203  000098  1778               	dw	_Default_ISR shr (0+2)
 17204                           
 17205                           ; Vector 73 : CCP3
 17206  00009A  1653               	dw	_CCP3_CaptureISR shr (0+2)
 17207                           
 17208                           ; Vector 74 : CWG3
 17209  00009C  1778               	dw	_Default_ISR shr (0+2)
 17210                           
 17211                           ; Vector 75 : CLC3
 17212  00009E  1778               	dw	_Default_ISR shr (0+2)
 17213                           
 17214                           ; Vector 76 : Undefined
 17215  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17216                           
 17217                           ; Vector 77 : Undefined
 17218  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17219                           
 17220                           ; Vector 78 : Undefined
 17221  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17222                           
 17223                           ; Vector 79 : Undefined
 17224  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17225                           
 17226                           ; Vector 80 : CCP4
 17227  0000A8  1660               	dw	_CCP4_CaptureISR shr (0+2)
 17228                           
 17229                           ; Vector 81 : CLC4
 17230  0000AA  1778               	dw	_Default_ISR shr (0+2)
 17231  0000AC                     ivt0x8_undefint:
 17232                           	callstack 0
 17233  0000AC  00FF               	reset	
 17234                           
 17235                           	psect	text103
 17236  000000                     __ptext103:
 17237                           	callstack 0
 17238  000000                     
 17239                           	psect	rparam
 17240  0000                     
 17241                           	psect	idloc
 17242                           
 17243                           ;Config register IDLOC0 @ 0x200000
 17244                           ;	unspecified, using default values
 17245  200000                     	org	2097152
 17246  200000  0FFF               	dw	4095
 17247                           
 17248                           ;Config register IDLOC1 @ 0x200002
 17249                           ;	unspecified, using default values
 17250  200002                     	org	2097154
 17251  200002  0FFF               	dw	4095
 17252                           
 17253                           ;Config register IDLOC2 @ 0x200004
 17254                           ;	unspecified, using default values
 17255  200004                     	org	2097156
 17256  200004  0FFF               	dw	4095
 17257                           
 17258                           ;Config register IDLOC3 @ 0x200006
 17259                           ;	unspecified, using default values
 17260  200006                     	org	2097158
 17261  200006  0FFF               	dw	4095
 17262                           
 17263                           ;Config register IDLOC4 @ 0x200008
 17264                           ;	unspecified, using default values
 17265  200008                     	org	2097160
 17266  200008  0FFF               	dw	4095
 17267                           
 17268                           ;Config register IDLOC5 @ 0x20000A
 17269                           ;	unspecified, using default values
 17270  20000A                     	org	2097162
 17271  20000A  0FFF               	dw	4095
 17272                           
 17273                           ;Config register IDLOC6 @ 0x20000C
 17274                           ;	unspecified, using default values
 17275  20000C                     	org	2097164
 17276  20000C  0FFF               	dw	4095
 17277                           
 17278                           ;Config register IDLOC7 @ 0x20000E
 17279                           ;	unspecified, using default values
 17280  20000E                     	org	2097166
 17281  20000E  0FFF               	dw	4095
 17282                           
 17283                           	psect	config
 17284                           
 17285                           ;Config register CONFIG1L @ 0x300000
 17286                           ;	External Oscillator Selection
 17287                           ;	FEXTOSC = OFF, Oscillator not enabled
 17288                           ;	Reset Oscillator Selection
 17289                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 17290  300000                     	org	3145728
 17291  300000  8C                 	db	140
 17292                           
 17293                           ;Config register CONFIG1H @ 0x300001
 17294                           ;	Clock out Enable bit
 17295                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 17296                           ;	PRLOCKED One-Way Set Enable bit
 17297                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 17298                           ;	Clock Switch Enable bit
 17299                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 17300                           ;	Fail-Safe Clock Monitor Enable bit
 17301                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 17302  300001                     	org	3145729
 17303  300001  FF                 	db	255
 17304                           
 17305                           ;Config register CONFIG2L @ 0x300002
 17306                           ;	MCLR Enable bit
 17307                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 17308                           ;	Power-up timer selection bits
 17309                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 17310                           ;	Multi-vector enable bit
 17311                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 17312                           ;	IVTLOCK bit One-way set enable bit
 17313                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 17314                           ;	Low Power BOR Enable bit
 17315                           ;	LPBOREN = OFF, ULPBOR disabled
 17316                           ;	Brown-out Reset Enable bits
 17317                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 17318  300002                     	org	3145730
 17319  300002  FF                 	db	255
 17320                           
 17321                           ;Config register CONFIG2H @ 0x300003
 17322                           ;	Brown-out Reset Voltage Selection bits
 17323                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 17324                           ;	ZCD Disable bit
 17325                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 17326                           ;	PPSLOCK bit One-Way Set Enable bit
 17327                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 17328                           ;	Stack Full/Underflow Reset Enable bit
 17329                           ;	STVREN = ON, Stack full/underflow will cause Reset
 17330                           ;	Debugger Enable bit
 17331                           ;	DEBUG = OFF, Background debugger disabled
 17332                           ;	Extended Instruction Set Enable bit
 17333                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 17334  300003                     	org	3145731
 17335  300003  FF                 	db	255
 17336                           
 17337                           ;Config register CONFIG3L @ 0x300004
 17338                           ;	WDT Period selection bits
 17339                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 17340                           ;	WDT operating mode
 17341                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 17342  300004                     	org	3145732
 17343  300004  9F                 	db	159
 17344                           
 17345                           ;Config register CONFIG3H @ 0x300005
 17346                           ;	WDT Window Select bits
 17347                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 17348                           ;	WDT input clock selector
 17349                           ;	WDTCCS = SC, Software Control
 17350  300005                     	org	3145733
 17351  300005  FF                 	db	255
 17352                           
 17353                           ;Config register CONFIG4L @ 0x300006
 17354                           ;	Boot Block Size selection bits
 17355                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 17356                           ;	Boot Block enable bit
 17357                           ;	BBEN = OFF, Boot block disabled
 17358                           ;	Storage Area Flash enable bit
 17359                           ;	SAFEN = OFF, SAF disabled
 17360                           ;	Application Block write protection bit
 17361                           ;	WRTAPP = OFF, Application Block not write protected
 17362  300006                     	org	3145734
 17363  300006  FF                 	db	255
 17364                           
 17365                           ;Config register CONFIG4H @ 0x300007
 17366                           ;	Configuration Register Write Protection bit
 17367                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 17368                           ;	Boot Block Write Protection bit
 17369                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 17370                           ;	Data EEPROM Write Protection bit
 17371                           ;	WRTD = OFF, Data EEPROM not write-protected
 17372                           ;	SAF Write protection bit
 17373                           ;	WRTSAF = OFF, SAF not Write Protected
 17374                           ;	Low Voltage Programming Enable bit
 17375                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 17376  300007                     	org	3145735
 17377  300007  FF                 	db	255
 17378                           
 17379                           ;Config register CONFIG5L @ 0x300008
 17380                           ;	PFM and Data EEPROM Code Protection bit
 17381                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 17382  300008                     	org	3145736
 17383  300008  FF                 	db	255
 17384                           
 17385                           ;Config register CONFIG5H @ 0x300009
 17386                           ;	unspecified, using default values
 17387  300009                     	org	3145737
 17388  300009  FF                 	db	255
 17389                           tosu	equ	0x3FFF
 17390                           tosh	equ	0x3FFE
 17391                           tosl	equ	0x3FFD
 17392                           stkptr	equ	0x3FFC
 17393                           pclatu	equ	0x3FFB
 17394                           pclath	equ	0x3FFA
 17395                           pcl	equ	0x3FF9
 17396                           tblptru	equ	0x3FF8
 17397                           tblptrh	equ	0x3FF7
 17398                           tblptrl	equ	0x3FF6
 17399                           tablat	equ	0x3FF5
 17400                           prodh	equ	0x3FF4
 17401                           prodl	equ	0x3FF3
 17402                           indf0	equ	0x3FEF
 17403                           postinc0	equ	0x3FEE
 17404                           postdec0	equ	0x3FED
 17405                           preinc0	equ	0x3FEC
 17406                           plusw0	equ	0x3FEB
 17407                           fsr0h	equ	0x3FEA
 17408                           fsr0l	equ	0x3FE9
 17409                           wreg	equ	0x3FE8
 17410                           indf1	equ	0x3FE7
 17411                           postinc1	equ	0x3FE6
 17412                           postdec1	equ	0x3FE5
 17413                           preinc1	equ	0x3FE4
 17414                           plusw1	equ	0x3FE3
 17415                           fsr1h	equ	0x3FE2
 17416                           fsr1l	equ	0x3FE1
 17417                           bsr	equ	0x3FE0
 17418                           indf2	equ	0x3FDF
 17419                           postinc2	equ	0x3FDE
 17420                           postdec2	equ	0x3FDD
 17421                           preinc2	equ	0x3FDC
 17422                           plusw2	equ	0x3FDB
 17423                           fsr2h	equ	0x3FDA
 17424                           fsr2l	equ	0x3FD9
 17425                           status	equ	0x3FD8

Data Sizes:
    Strings     74
    Constant    0
    Data        1
    BSS         175
    Persistent  23
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      76
    BANK0           160    131     159
    BANK1           256     20     172
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3429_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_4(CODE[20]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[12]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_10msISR(), TMR4_DefaultInterruptHandler(), Absolute function(), 

    TMR5_SetGateInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), 

    TMR5_GateInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_DefaultGateInterruptHandler(), Absolute function(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4_DefaultCallBack(), Absolute function(), 

    CCP3_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), 

    CCP3_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP3_DefaultCallBack(), Absolute function(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultErrorHandler(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultOverrunErrorHandler(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_DefaultFramingErrorHandler(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Receive_ISR(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), UART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _loop->___flge
    _startAccell->___flge
    _efgtoa->___fladd
    _efgtoa->___flge
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _checkBatt->___flge
    ___fldiv->___xxtofl
    _getBatteryVoltage->_ADCC_GetSingleConversion
    ___flge->___flmul
    _calcSpeed->___fladd
    ___fladd->___flmul
    _setMotor->_PWM7_LoadDutyValue
    _setMotor->_PWM8_LoadDutyValue
    _actSpeed->___aldiv
    ___xxtofl->___awdiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    _SYSTEM_Initialize->_TMR5_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR5_Initialize->_TMR5_SetGateInterruptHandler
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _CCP4_Initialize->_CCP4_SetCallBack
    _CCP3_Initialize->_CCP3_SetCallBack

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR4_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _CCP3_CaptureISR in COMRAM

    _CCP3_CaptureISR->_CCP3_DefaultCallBack

Critical Paths under _CCP4_CaptureISR in COMRAM

    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _TMR5_GATE_ISR in COMRAM

    _TMR5_DefaultGateInterruptHandler->_TMR5_ReadTimer
    _TMR5_Reload->_TMR5_WriteTimer

Critical Paths under _SMT1_PR_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in COMRAM

    None.

Critical Paths under _SMT1_Overflow_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _floorf->___fldiv
    ___flsub->___fladd
    _calcSteering->_setSteering
    _checkBatt->_setSteering
    _setSteering->___fltol
    ___flge->___flmul
    _calcSpeed->___fltol
    ___fladd->___flmul
    _calcMotorPow->___fltol
    ___fltol->___fladd

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR4_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _CCP3_CaptureISR in BANK0

    None.

Critical Paths under _CCP4_CaptureISR in BANK0

    None.

Critical Paths under _TMR5_GATE_ISR in BANK0

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK0

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _loop->_startAccell
    _startAccell->_printf
    _printf->_vfprintf

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR4_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _CCP3_CaptureISR in BANK1

    None.

Critical Paths under _CCP4_CaptureISR in BANK1

    None.

Critical Paths under _TMR5_GATE_ISR in BANK1

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK1

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR4_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _CCP3_CaptureISR in BANK2

    None.

Critical Paths under _CCP4_CaptureISR in BANK2

    None.

Critical Paths under _TMR5_GATE_ISR in BANK2

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK2

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR4_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _CCP3_CaptureISR in BANK3

    None.

Critical Paths under _CCP4_CaptureISR in BANK3

    None.

Critical Paths under _TMR5_GATE_ISR in BANK3

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK3

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR4_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _CCP3_CaptureISR in BANK4

    None.

Critical Paths under _CCP4_CaptureISR in BANK4

    None.

Critical Paths under _TMR5_GATE_ISR in BANK4

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK4

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR4_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _CCP3_CaptureISR in BANK5

    None.

Critical Paths under _CCP4_CaptureISR in BANK5

    None.

Critical Paths under _TMR5_GATE_ISR in BANK5

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK5

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR4_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _CCP3_CaptureISR in BANK6

    None.

Critical Paths under _CCP4_CaptureISR in BANK6

    None.

Critical Paths under _TMR5_GATE_ISR in BANK6

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK6

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR4_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _CCP3_CaptureISR in BANK7

    None.

Critical Paths under _CCP4_CaptureISR in BANK7

    None.

Critical Paths under _TMR5_GATE_ISR in BANK7

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK7

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR4_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _CCP3_CaptureISR in BANK8

    None.

Critical Paths under _CCP4_CaptureISR in BANK8

    None.

Critical Paths under _TMR5_GATE_ISR in BANK8

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK8

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR4_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _CCP3_CaptureISR in BANK9

    None.

Critical Paths under _CCP4_CaptureISR in BANK9

    None.

Critical Paths under _TMR5_GATE_ISR in BANK9

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK9

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR4_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _CCP3_CaptureISR in BANK10

    None.

Critical Paths under _CCP4_CaptureISR in BANK10

    None.

Critical Paths under _TMR5_GATE_ISR in BANK10

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK10

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR4_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _CCP3_CaptureISR in BANK11

    None.

Critical Paths under _CCP4_CaptureISR in BANK11

    None.

Critical Paths under _TMR5_GATE_ISR in BANK11

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK11

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR4_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _CCP3_CaptureISR in BANK12

    None.

Critical Paths under _CCP4_CaptureISR in BANK12

    None.

Critical Paths under _TMR5_GATE_ISR in BANK12

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK12

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR4_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _CCP3_CaptureISR in BANK13

    None.

Critical Paths under _CCP4_CaptureISR in BANK13

    None.

Critical Paths under _TMR5_GATE_ISR in BANK13

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK13

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR4_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _CCP3_CaptureISR in BANK14

    None.

Critical Paths under _CCP4_CaptureISR in BANK14

    None.

Critical Paths under _TMR5_GATE_ISR in BANK14

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK14

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR4_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _CCP3_CaptureISR in BANK15

    None.

Critical Paths under _CCP4_CaptureISR in BANK15

    None.

Critical Paths under _TMR5_GATE_ISR in BANK15

    None.

Critical Paths under _SMT1_PR_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_PW_ACQ_ISR in BANK15

    None.

Critical Paths under _SMT1_Overflow_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  166515
                  _SYSTEM_Initialize
           _TMR4_SetInterruptHandler
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  165368
                             ___flge
                           ___xxtofl
                       _calcMotorPow
                          _calcSpeed
                       _calcSteering
                          _checkBatt
                  _getBatteryVoltage
                           _getCurve
                         _getReverse
                             _printf
                           _setMotor
                        _setSteering
                        _startAccell
 ---------------------------------------------------------------------------------
 (2) _startAccell                                          4     4      0   70521
                                             16 BANK1      4     4      0
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _calcSteering
                             _printf
                           _setMotor
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _printf                                              10     4      6   44494
                                              8 BANK1      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   44035
                                              0 BANK1      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   43529
                                            103 BANK0     28    22      6
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   32150
                                             35 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1142
                                             25 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     551
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4    1037
                                             19 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     669
                                             53 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     375
                                             19 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4187
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     155
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     770
                                             19 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    6493
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    4227
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      93
                                             20 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      62
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _calcSteering                                         4     4      0    9170
                                             44 BANK0      4     4      0
                            ___awdiv
                        _setSteering
 ---------------------------------------------------------------------------------
 (2) _getReverse                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCurve                                             6     6      0     112
                                             19 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (2) _checkBatt                                            0     0      0   10523
                             ___flge
                           ___xxtofl
                  _getBatteryVoltage
                        _setSteering
 ---------------------------------------------------------------------------------
 (3) _setSteering                                          9     6      3    7959
                                             35 BANK0      9     6      3
                 _PWM5_LoadDutyValue
                 _PWM6_LoadDutyValue
                            ___awdiv (ARG)
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2903
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM5_LoadDutyValue                                   4     2      2     152
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _getBatteryVoltage                                    0     0      0      22
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (3) _ADCC_GetSingleConversion                             5     3      2      22
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1526
                                             53 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcSpeed                                            6     6      0    9780
                                             35 BANK0      6     6      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3622
                                             53 COMRAM     4     4      0
                                             13 BANK0     12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _calcMotorPow                                         7     7      0    9029
                                             35 BANK0      7     7      0
                            ___awdiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _actSpeed
                           _setMotor
 ---------------------------------------------------------------------------------
 (3) _setMotor                                             4     2      2    1216
                                             23 COMRAM     4     2      2
                 _PWM7_LoadDutyValue
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM8_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM7_LoadDutyValue                                   4     2      2     332
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _actSpeed                                             4     2      2     629
                                             33 COMRAM     4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     604
                                             19 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             27 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     877
                                             25 BANK0     10     6      4
                            ___awdiv (ARG)
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    4133
                                             41 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     985
                                             19 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     973
                    _ADCC_Initialize
                    _CCP3_Initialize
                    _CCP4_Initialize
                    _CLC3_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _PWM6_Initialize
                    _PWM7_Initialize
                    _PWM8_Initialize
                    _SMT1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR4_Initialize
                    _TMR5_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     490
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0      98
                                             21 COMRAM     2     2      0
       _TMR5_SetGateInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetGateInterruptHandler                         2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     174
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0       0
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0      98
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP3_Initialize                                      0     0      0      98
                   _CCP3_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP3_SetCallBack                                     2     0      2      98
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   1     1      0       0
                                             16 COMRAM     1     1      0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   1     1      0       0
                                             17 COMRAM     1     1      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR4_ISR                                            1     1      0       0
                                             18 COMRAM     1     1      0
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR4_CallBack                                       0     0      0       0
                   Absolute function *
                       _TMR4_10msISR *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR4_10msISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP3_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
               _CCP3_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP3_DefaultCallBack                                2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _CCP4_CaptureISR                                     2     2      0     144
                                              6 COMRAM     2     2      0
                   Absolute function *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (17) _CCP4_DefaultCallBack                                2     0      2      97
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _TMR5_GATE_ISR                                       0     0      0     233
                   Absolute function *
   _TMR5_DefaultGateInterruptHandler *
 ---------------------------------------------------------------------------------
 (17) _TMR5_DefaultGateInterruptHandler                    0     0      0     233
                     _TMR5_ReadTimer
                        _TMR5_Reload
 ---------------------------------------------------------------------------------
 (18) _TMR5_Reload                                         0     0      0     164
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (19) _TMR5_WriteTimer                                     2     0      2     164
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _TMR5_ReadTimer                                      8     6      2      69
                                              8 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PR_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_PW_ACQ_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _SMT1_Overflow_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CCP3_Initialize
       _CCP3_SetCallBack
     _CCP4_Initialize
       _CCP4_SetCallBack
     _CLC3_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _PWM6_Initialize
     _PWM7_Initialize
     _PWM8_Initialize
     _SMT1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetGateInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _TMR4_SetInterruptHandler
   _loop
     ___flge
       ___flmul (ARG)
         ___awdiv (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _calcMotorPow
       ___awdiv
       ___flmul
       ___fltol
         ___awdiv (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       _actSpeed
         ___aldiv
       _setMotor
         _PWM7_LoadDutyValue
         _PWM8_LoadDutyValue
     _calcSpeed
       ___fladd
       ___flmul
       ___fltol
       ___xxtofl
     _calcSteering
       ___awdiv
       _setSteering
         _PWM5_LoadDutyValue
         _PWM6_LoadDutyValue
         ___awdiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
     _checkBatt
       ___flge
       ___xxtofl
       _getBatteryVoltage
         _ADCC_GetSingleConversion
       _setSteering
     _getBatteryVoltage
     _getCurve
     _getReverse
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
             _strcpy
             _tolower
               _isupper
           _fputc
           _isupper
           _strncmp
           _tolower
     _setMotor
     _setSteering
     _startAccell
       ___flge
       ___flmul
       ___fltol
       ___xxtofl
       _calcSteering
       _printf
       _setMotor
       _setSteering

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 _TMR4_ISR (ROOT)
   _TMR4_CallBack
     Absolute function(Fake) *
     _TMR4_10msISR *
     _TMR4_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _CCP3_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP3_DefaultCallBack *

 _CCP4_CaptureISR (ROOT)
   Absolute function(Fake) *
   _CCP4_DefaultCallBack *

 _TMR5_GATE_ISR (ROOT)
   Absolute function(Fake) *
   _TMR5_DefaultGateInterruptHandler *
     _TMR5_ReadTimer
     _TMR5_Reload
       _TMR5_WriteTimer

 _SMT1_PR_ACQ_ISR (ROOT)

 _SMT1_PW_ACQ_ISR (ROOT)

 _SMT1_Overflow_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     14      AC       7       67.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     83      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      4C       1       80.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     197      32        0.0%
DATA                 0      0     197       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 31 11:40:45 2024

                             _CCP4_Initialize 5AAA                        ??_CCP3_DefaultCallBack 0003  
                                ___fldiv@aexp 006C                                  ___fldiv@bexp 006B  
                                 _startAccell 3EE2                                  ___fldiv@sign 0064  
                                          l72 5D4A                                            l75 5C56  
                                          l69 5536                                  ___awdiv@sign 0019  
                           ??_TMR5_WriteTimer 000B                   __size_of_PWM6_LoadDutyValue 0034  
                                         l312 5344                                           l404 54A2  
                                         l308 52F8                                           l309 5312  
                                         l318 5D72                                           l520 5580  
                                         l441 5B04                                           l362 5D90  
                                         l371 5D7C                                           l188 4C06  
                                         l284 504C                                           l365 5DA4  
                                         l359 5D9A                                           l368 5D86  
                                         l712 5948                                           l449 5DCC  
                                         l482 5AD6                                           l723 5CEA  
                                         l555 5DAE                                           l644 5B5E  
                                         l740 58E0                                           l709 5D02  
                                         l581 5878                                           l726 5914  
                                         l479 5DC2                                           l751 5D1A  
                                         l737 5D32                                           l754 58AC  
                                         l923 5CB6                                           l695 5DB8  
                                         l795 5A48                                           l893 5B8A  
                                         _GIE 01FE97                                           _PR2 003FAB  
                                         _PR4 003F9F                                           _abs 56A2  
                                         _pad 4CCC                       __size_of_PMD_Initialize 0024  
                                ___awmod@sign 0019                               _TMR2_Initialize 5C9C  
              CCP4_SetCallBack@customCallBack 0014                                           tosl 003FFD  
                                         wreg 003FE8                              _CCP4_SetCallBack 5DBA  
                                ___flmul@aexp 0061                                  ___flmul@bexp 0066  
                          _UART1_Transmit_ISR 5616                                  ___flmul@sign 0060  
                                ___flmul@temp 006B                                  ___flmul@prod 0067  
                     __end_of_CCP4_CaptureISR 59B4                                  ___fltol@exp1 0082  
                                        l1042 5400                                          ?_abs 0026  
                                        l2013 2B2E                                          l1054 59C4  
                                        l1222 4330                                          l2016 29C0  
                                        l2112 4D10                                          l2009 27A6  
                                        l1057 59E4                                          l1321 3A88  
                                        l2026 2AF0                                          l2018 2A38  
                                        l2050 3BFC                                          l1250 5D5A  
                                        l2019 2A26                                          l2115 4D52  
                                        l2123 2F6C                                          l1308 474E  
                                        l1316 39F6                                          l2053 3D58  
                                        l1309 4762                                          l2117 4D8C  
                                        l2125 2F74                                          l1238 4448  
                                        l1247 5176                                          l1255 5208  
                                        l2143 31B0                                          l2207 18A8  
                                        l2064 3CF0                                          l1336 3BA4  
                                        l4001 5492                                          l2057 3C94  
                                        l2161 1CF8                                          l2073 5C0A  
                                        l1522 41C4                                          l4011 549C  
                                        l4003 5494                                          l1275 33BC  
                                        l2323 52E2                                          l1267 4060  
                             _timer3ReloadVal 0184                                          l2260 5278  
                                        l4101 5B60                                          l4013 549E  
                                        l4005 5496                                          l4021 4B5E  
                                        l1357 37EC                                          l1381 3820  
                                        l1509 3EE0                                          l2309 50E2  
                                        l2317 56A0                                          l2333 4A5A  
                                        l2253 2116                                          l2245 221C  
                                        l1366 4310                                          l1382 3834  
                                        l1294 33CC                                          l2270 4966  
                                        l4015 54A0                                          l4007 5498  
                                        l4031 4BBA                                          l4023 4B60  
                                        l4111 5D1C                                          l1375 4B3C  
                                        l1383 38A8                                          l2343 539C  
                                        l1392 39E2                                          l4009 549A  
                                        l4041 4BC8                                          l4033 4BBC  
                                        l4025 4B68                                          l4017 5C34  
                                        l2329 5758                                          l1626 4CCA  
                                        l1474 4554                                          l4043 5D34  
                                        l4035 4BC2                                          l4027 4BB6  
                                        l4019 4B3E                                          l1379 37FC  
                                        l2275 56D8                                          l2179 146A  
                                        l2259 5270                                          l1660 4822  
                                        l2284 35E2                                          l2348 53A4  
                                        l4037 4BC4                                          l4029 4BB8  
                                        l2278 56E0                                          l1654 4FA6  
                                        l2294 5808                                          l4055 53A6  
                                        l4039 4BC6                                          l4127 5CEC  
                                        l4071 5A3A                                          l1639 4EFC  
                                        l2287 3526                                          l4081 5CD4  
                                        l4073 5A3C                                          l1665 4868  
                                        l4075 5A40                                          l4067 5A1A  
                                        l4083 5C9C                                          l1923 240E  
                                        l1692 465C                                          l1940 2528  
                                        l1932 26DE                                          l1924 23FC  
                                        l4077 5A42                                          l4069 5A38  
                                        l4085 5CA8                                          l1925 23C2  
                                        l1669 5840                                          l1950 25E6  
                                        l4079 5A44                                          l4087 5CAE  
                                        l4089 5D04                                          l7001 5512  
                                        l7011 552E                                          l7003 5516  
                                        l7005 551E                                          l1949 25F8  
                                        l1965 5614                                          l1990 2DE8  
                                        l1982 2CEE                                          ?_pad 0026  
                                        l7007 5522                                          l1991 2DD6  
                                        l7009 552A                                          l8001 4C34  
                                        l1977 2ECA                                          l8011 4C62  
                                        l8003 4C3C                                          l1979 2D2A  
                                        l1988 2D70                                          l6501 5D88  
                                        l8021 4C9C                                          l8013 4C6A  
                                        l8005 4C40                                          l8101 4810  
                                        l6503 5D9C                                          l8031 4CC2  
                                        l8023 4C9E                                          l8015 4C78  
                                        l8007 4C48                                          l8103 4860  
                                        l8111 5820                                          l8025 4CA4  
                                        l8017 4C7E                                          l8009 4C5A  
                                        l8105 4866                                          l7401 5060  
                                        l8041 4E68                                          l8113 5830  
                                        l8201 491A                                          l6515 5DC4  
                                        l8019 4C94                                          l8027 4CAA  
                                        l8131 45C2                                          l8123 4582  
                                        l6451 4470                                          l6443 444A  
                                        l9011 37C0                                          l7403 5072  
                                        l8051 4E9C                                          l8043 4E6C  
                                        l8035 4E4E                                          l8211 528A  
                                        l6517 5DBA                                          l6701 4FDE  
                                        l8029 4CBA                                          l8141 45F2  
                                        l8133 45D0                                          l8125 45AC  
                                        l8117 4556                                          l6461 44B8  
                                        l6453 447E                                          l6445 444E  
                                        l6621 50EC                                          l7501 23D0  
                                        l7421 224C                                          l7413 221E  
                                        l9013 37DC                                          l9005 3750  
                                        l7405 507C                                          l8301 3150  
                                        l8061 4ED6                                          l8053 4EA4  
                                        l8045 4E7A                                          l8037 4E52  
                                        l8109 580A                                          l8205 495E  
                                        l8213 5346                                          l9101 5C82  
                                        l3991 5462                                          l6535 5DB0  
                                        l6519 5DA6                                          l6711 4FF2  
                                        l6703 4FE2                                          l8151 461C  
                                        l8143 45FC                                          l8127 45AE  
                                        l8119 456E                                          l6471 4502  
                                        l6463 44C0                                          l6455 448E  
                                        l6447 445C                                          l6623 5102  
                                        l9031 41F4                                          l9023 41C6  
                                        l7511 23FA                                          l7503 23DC  
                                        l7431 2286                                          l7423 225C  
                                        l7415 222C                                          l9015 37E4  
                                        l9007 379A                                          l6391 59BC  
                                        l7407 509A                                          l8303 3162  
                                        l8055 4EB2                                          l8063 4EDC  
                                        l8047 4E82                                          l8039 4E60  
                                        l8071 4EFE                                          l8231 3468  
                                        l8223 33CE                                          l9103 5C90  
                                        l6641 5B02                                          l6633 5AD8  
                                        l3993 546C                                          l6721 5006  
                                        l6713 4FF6                                          l6705 4FE6  
                                        l8153 462C                                          l8129 45BE  
                                        l6481 4534                                          l6473 4512  
                                        l6465 44CC                                          l6457 4492  
                                        l6449 446C                                          l6625 5112  
                                        l9041 42A4                                          l9033 4270  
                                        l9025 41D2                                          l7601 26B0  
                                        l7521 2450                                          l7513 241C  
                                        l7505 23E0                                          l7441 22B4  
                                        l7433 228C                                          l7425 226C  
                                        l7417 223A                                          l9009 37B8  
                                        l6393 59C0                                          l7409 50D0  
                                        l8161 4CCC                                          l8305 316E  
                                        l8065 4EEC                                          l8057 4EC8  
                                        l8049 4E94                                          l8081 4F9E  
                                        l8073 4F2C                                          l8241 3586  
                                        l8225 33EE                                          l8209 527A  
                                        l8217 537C                                          l8401 1418  
                                        l8321 107C                                          l8313 104C  
                                        l6635 5AE8                                          l3995 5482  
                                        l3987 5458                                          l6651 5B5A  
                                        l6643 5B34                                          l6723 5012  
                                        l6715 4FFA                                          l6707 4FEA  
                                        l8155 463C                                          l8139 45E8  
                                        l6483 4544                                          l6475 4514  
                                        l6467 44DA                                          l6459 44A2  
                                        l6627 5142                                          l6619 50E4  
                                        l9051 42FC                                          l9043 42B0  
                                        l9035 4284                                          l9027 41E0  
                                        l7611 26CE                                          l7603 26B6  
                                        l7531 248A                                          l7523 245E  
                                        l7515 242C                                          l7507 23EE  
                                        l7451 22E8                                          l7443 22B6  
                                        l7435 229E                                          l7427 226E  
                                        l7419 223C                                          l8091 47A4  
                                        l6395 59C2                                          l6811 321E  
                                        l6803 31B2                                          l8171 4D1C  
                                        l8163 4CDA                                          l8307 3176  
                                        l8251 2ECC                                          l8067 4EF4  
                                        l8059 4ED0                                          l8083 4FA4  
                                        l8075 4F3C                                          l8243 359A  
                                        l8235 34DA                                          l8227 3446  
                                        l8219 538E                                          l8403 142A  
                                        l8411 1476                                          l8331 10D2  
                                        l8323 10A0                                          l8315 1056  
                                        l6637 5AF4                                          l6661 5AD4  
                                        l6653 5AAA                                          l3997 5484  
                                        l3989 545A                                          l6645 5B48  
                                        l6725 501E                                          l6717 4FFE  
                                        l6709 4FEE                                          l8157 464C  
                                        l8149 4610                                          l6477 451E  
                                        l6469 44E4                                          l6629 516E  
                                        l9053 4308                                          l9045 42CC  
                                        l9037 428C                                          l9029 41F4  
                                        l7605 26B8                                          l7541 24F6  
                                        l7533 248C                                          l7525 246C  
                                        l7509 23F0                                          l7461 2324  
                                        l7445 22C6                                          l7453 22F0  
                                        l7437 22A0                                          l7429 2276  
                                        l8093 47D2                                          l6397 59D2  
                                        l6389 59B6                                          l6821 328C  
                                        l6813 322E                                          l6805 31D0  
                                        l7701 410E                                          l7381 52E6  
                                        l7621 5680                                          l8173 4D30  
                                        l8165 4CEE                                          l8309 3188  
                                        l8261 2F46                                          l8253 2EEC  
                                        l8077 4F6A                                          l8245 35C2  
                                        l8237 3516                                          l8229 345A  
                                        l8501 194A                                          l8421 14B6  
                                        l8405 143C                                          l8341 1100  
                                        l8333 10E4                                          l8325 10AA  
                                        l8317 1066                                          l9061 4354  
                                        l6639 5AFE                                          l6655 5ABA  
                                        l3999 548E                                          l6663 5842  
                                        l6647 5B4C                                          l6671 5538  
                                        l6495 5D7E                                          l6727 5048  
                                        l6719 5002                                          l6479 4524  
                                        l9047 42D8                                          l9039 42A0  
                                        l7607 26BE                                          l7551 254E  
                                        l7543 24F8                                          l7535 2496  
                                        l7527 2478                                          l7519 2440  
                                        l7471 2338                                          l7463 2328  
                                        l7455 2300                                          l7447 22D6  
                                        l7439 22A6                                          l8095 47E2  
                                        l8087 4764                                          l6559 5D4C  
                                        l6831 32D0                                          l6823 329C  
                                        l6815 324A                                          l6807 31EC  
                                        l7711 4184                                          l7703 413C  
                                        l8183 56A2                                          l7391 5338  
                                        l7383 5308                                          l7615 565E  
                                        l7623 5720                                          l8175 4D34  
                                        l8167 4CFC                                          l8271 2FA2  
                                        l8263 2F60                                          l8255 2F16  
                                        l8079 4F7A                                          l8191 48C8  
                                        l8247 35D2                                          l8239 354A  
                                        l8511 1994                                          l8503 195C  
                                        l8431 1512                                          l8423 14EC  
                                        l8407 1444                                          l8351 1174  
                                        l8335 10F0                                          l8343 1106  
                                        l8327 10B2                                          l8319 1074  
                                        l9071 43AC                                          l9063 4358  
                                        l9055 4312                                          l6657 5AC6  
                                        l6665 5856                                          l6649 5B4E  
                                        l6681 5570                                          l6673 554C  
                                        l6497 5D74                                          l9049 42F4  
                                        l7609 26CC                                          l7561 257C  
                                        l7545 2508                                          l7529 247C  
                                        l7537 249C                                          l7481 234C  
                                        l7473 233C                                          l7465 232C  
                                        l7457 2312                                          l7449 22E6  
                                        l8097 47F0                                          l8089 4794  
                                        l7801 2D3A                                          l7721 2B4C  
                                        l6841 3334                                          l6833 32E6  
                                        l6825 32A8                                          l6817 3266  
                                        l6809 3208                                          l7641 3D6C  
                                        l7713 41A4                                          l7705 415C  
                                        l8185 56BC                                          l7393 533C  
                                        l7385 5314                                          l7617 566A  
                                        l7625 572C                                          l8177 4D60  
                                        l8169 4D08                                          l8281 3044  
                                        l8273 2FAA                                          l8265 2F7C  
                                        l8257 2F36                                          l8193 48F0  
                                        l7633 57D2                                          l8601 1C46  
                                        l8521 19CA                                          l8513 19A4  
                                        l8505 196A                                          l8441 1556  
                                        l8433 1524                                          l8425 14F4  
                                        l8417 1488                                          l8409 145E  
                                        l8353 1190                                          l8345 112C  
                                        l8361 11DA                                          l8337 10F8  
                                        l8329 10C4                                          l9081 43D8  
                                        l9073 43B4                                          l9065 43A0  
                                        l9057 433E                                          l6659 5AD0  
                                        l6667 585A                                          l6683 557C  
                                        l6675 5550                                          l6499 5D92  
                                        l6691 4FC8                                          l7563 258A  
                                        l7555 2562                                          l7571 25A8  
                                        l7539 24C2                                          l7547 2518  
                                        l7483 2350                                          l7475 2340  
                                        l7467 2330                                          l7459 2320  
                                        l7491 2360                                          l8099 4802  
                                        l7803 2D50                                          l7811 2D80  
                                        l7731 2B80                                          l7723 2B4E  
                                        l6851 3376                                          l6843 3346  
                                        l6835 32F8                                          l6827 32AE  
                                        l6819 327C                                          l7651 3DC2  
                                        l7643 3D8C                                          l7707 416E  
                                        l7387 5326                                          l7395 5340  
                                        l7379 52E6                                          l7619 567C  
                                        l7627 5730                                          l8179 4D74  
                                        l8291 3102                                          l8283 304A  
                                        l8275 2FB4                                          l8267 2F8E  
                                        l8259 2F44                                          l8195 48FC  
                                        l8187 486A                                          l8611 1CA0  
                                        l8531 19FE                                          l8523 19CE  
                                        l8515 19A8                                          l8507 1972  
                                        l8451 15A0                                          l8443 156E  
                                        l8435 1532                                          l8419 149A  
                                        l8427 14F8                                          l8371 1264  
                                        l8363 1200                                          l8355 11A8  
                                        l8339 10FC                                          l9091 4430  
                                        l9083 43E6                                          l9075 43BC  
                                        l9067 43A4                                          l9059 4350  
                                        l6669 5874                                          l6677 556A  
                                        l6693 4FCE                                          l6685 4FA8  
                                        l7901 280E                                          l7565 2592  
                                        l7557 256C                                          l7549 253E  
                                        l7573 25B6                                          l7493 2364  
                                        l7485 2354                                          l7477 2344  
                                        l7469 2334                                          l7813 2D8E  
                                        l7805 2D56                                          l7741 2BB2  
                                        l7725 2B5E                                          l7733 2B88  
                                        l7717 2B30                                          l6837 330E  
                                        l6829 32BE                                          l7661 3E16  
                                        l7653 3DCE                                          l7645 3D90  
                                        l7637 3D5A                                          l7709 4174  
                                        l7389 5328                                          l7397 5D6C  
                                        l7629 574C                                          l8293 311C  
                                        l8277 2FBA                                          l8285 30AE  
                                        l8269 2F9C                                          l8189 488A  
                                        l8613 1CB2                                          l8605 1C7A  
                                        l8541 1A9C                                          l8533 1A02  
                                        l8525 19D4                                          l8517 19AE  
                                        l8509 1986                                          l8453 15B4  
                                        l8461 16AA                                          l8445 1580  
                                        l8437 1536                                          l8429 1500  
                                        l8381 12C8                                          l8373 127C  
                                        l8357 11B2                                          l8349 1162  
                                        l8621 4968                                          l8701 1D7C  
                                        l9093 443C                                          l9085 43F6  
                                        l9077 43C2                                          l9069 43A8  
                                        l6679 556E                                          l6695 4FD2  
                                        l6687 4FAC                                          l7911 285C  
                                        l7903 281A                                          l7583 2608  
                                        l7591 265E                                          l7575 25BA  
                                        l7567 2596                                          l7559 257A  
                                        l7495 238E                                          l7487 2358  
                                        l7479 2348                                          l7823 2DF8  
                                        l7831 2E40                                          l7815 2D92  
                                        l7807 2D60                                          l7751 2BE6  
                                        l7743 2BB4                                          l7735 2B98  
                                        l7727 2B6E                                          l7719 2B3E  
                                        l9271 38F8                                          l6839 3324  
                                        l6871 467E                                          l7671 3E8A  
                                        l7663 3E28                                          l7655 3DEC  
                                        l7647 3D9E                                          l7639 3D5E  
                                        l7399 504E                                          l8287 30CA  
                                        l8295 312A                                          l8279 303C  
                                        l8199 4908                                          l8615 1CB8  
                                        l8607 1C8C                                          l8551 1AFA  
                                        l8519 19BA                                          l8527 19DA  
                                        l8535 1A08                                          l8543 1AA0  
                                        l8471 1776                                          l8463 16C8  
                                        l8455 1618                                          l8439 1548  
                                        l8447 1588                                          l8391 1394  
                                        l8375 1286                                          l8367 1236  
                                        l8631 49C8                                          l8623 4992  
                                        l8711 1E4A                                          l8703 1D8C  
                                        l9095 4440                                          l9087 440A  
                                        l9079 43D4                                          l6697 4FD6  
                                        l6689 4FB8                                          l7921 28BA  
                                        l7913 286C                                          l7905 2836  
                                        l7593 266E                                          l7585 2614  
                                        l7577 25C8                                          l7569 25A6  
                                        l7497 23AA                                          l7489 235C  
                                        l9273 3764                                          l8641 58AE  
                                        l7841 2EAA                                          l7833 2E5A  
                                        l7825 2E04                                          l7817 2DA0  
                                        l7809 2D6E                                          l7761 2C2C  
                                        l7745 2BC4                                          l7753 2BEE  
                                        l7737 2B9E                                          l7729 2B7E  
                                        l8801 3990                                          l6849 3366  
                                        l6857 3382                                          l6881 46CA  
                                        l6873 4690                                          l9265 3A5A  
                                        l7665 3E56                                          l7657 3DF4  
                                        l7673 3E90                                          l7649 3DBE  
                                        l7681 4062                                          l8297 313C  
                                        l8289 30E8                                          l8609 1C98  
                                        l8561 1B38                                          l8617 1CD4  
                                        l8553 1B0A                                          l8545 1ABE  
                                        l8537 1A60                                          l8529 19EC  
                                        l8481 1826                                          l8473 1786  
                                        l8465 16FC                                          l8457 1670  
                                        l8449 1590                                          l8393 13C8  
                                        l8385 12FE                                          l8369 1248  
                                        l8633 49EA                                          l8721 1F1E  
                                        l8713 1E78                                          l8705 1DCC  
                                        l9089 441E                                          l9097 5C7C  
                                        l6699 4FDA                                          l7931 2944  
                                        l7923 28CA                                          l7915 287C  
                                        l7907 2842                                          l8651 3C0C  
                                        l7595 267E                                          l7587 2622  
                                        l7579 25DE                                          l7499 23BA  
                                        l8643 587A                                          l7843 2EB8  
                                        l7835 2E70                                          l7827 2E12  
                                        l7819 2DCE                                          l7771 2C54  
                                        l7763 2C30                                          l7755 2BFE  
                                        l7747 2BD4                                          l7739 2BA4  
                                        l8803 399C                                          l6883 46DC  
                                        l6891 4712                                          l6875 46A2  
                                        l6867 465E                                          l9267 3B66  
                                        l7675 3EA0                                          l7667 3E76  
                                        l7659 3E08                                          l7691 40A6  
                                        l7683 4066                                          l8299 314A  
                                        l8571 1B6E                                          l8563 1B48  
                                        l8555 1B0E                                          l8547 1ADA  
                                        l8539 1A94                                          l8491 1894  
                                        l8483 185A                                          l8475 1796  
                                        l8467 1730                                          l8459 16A4  
                                        l8395 13D0                                          l8387 1332  
                                        l8379 12AE                                          l8635 49FC  
                                        l8627 499E                                          l8723 1F40  
                                        l8731 1FC2                                          l8715 1ED4  
                                        l8707 1DDC                                          l9099 5C80  
                                        l7941 29BE                                          l7933 297A  
                                        l7925 28EA                                          l7917 288C  
                                        l7909 284E                                          l7861 26FE  
                                        l8661 3C4A                                          l8653 3C22  
                                        l8645 3BA8                                          l7597 269E  
                                        l7589 265C                                          l7845 2EBE  
                                        l7837 2E8A                                          l7829 2E3C  
                                        l7781 2CA2                                          l7757 2C14  
                                        l7749 2BE4                                          l8805 39B8  
                                        l9269 3396                                          l6893 4728  
                                        l6885 46EE                                          l6877 46AC  
                                        l6869 4674                                          l7677 3EC0  
                                        l7669 3E78                                          l7693 40C6  
                                        l7685 4074                                          l8581 1BCA  
                                        l8573 1B7A                                          l8565 1B50  
                                        l8557 1B1E                                          l8549 1AEC  
                                        l8493 18A0                                          l8485 186E  
                                        l8477 17CA                                          l8469 1744  
                                        l8389 1338                                          l8397 1404  
                                        l8637 4A2E                                          l8629 49AC  
                                        l8741 20D2                                          l8733 1FF0  
                                        l8725 1F52                                          l8709 1E1C  
                                        l8821 5220                                          l6991 54EE  
                                        l7951 2A1E                                          l7943 29D0  
                                        l7935 2988                                          l7927 28FA  
                                        l7919 289C                                          l7871 2744  
                                        l7863 270E                                          l7855 26E0  
                                        l8671 3CD2                                          l8663 3C7C  
                                        l8647 3BB8                                          l8831 4A9C  
                                        l7599 26A2                                          l7847 2EC0  
                                        l7839 2EA6                                          l7791 2CEC  
                                        l7783 2CB2                                          l7775 2C68  
                                        l7759 2C24                                          l7767 2C44  
                                        l8807 39C0                                          l6895 474A  
                                        l6887 4706                                          l6879 46C4  
                                        l7695 40E4                                          l7687 4094  
                                        l8591 1C14                                          l8575 1B80  
                                        l8583 1BD0                                          l8567 1B5E  
                                        l8559 1B30                                          l8495 18C4  
                                        l8479 1822                                          l8487 1872  
                                        l8399 1414                                          l8751 2196  
                                        l8743 212A                                          l8727 1F96  
                                        l8719 1F0C                                          l8823 524E  
                                        l8911 3F2A                                          l6993 54FE  
                                        l7961 2A8C                                          l7945 29DE  
                                        l7937 29A6                                          l7929 291A  
                                        l7881 2770                                          l7873 274A  
                                        l7865 271E                                          l7857 26EE  
                                        l8681 3D28                                          l8673 3CE0  
                                        l8665 3C7E                                          l8657 3C36  
                                        l8649 3BC6                                          l8841 4AF8  
                                        l8833 4AA8                                          l8825 4A5C  
                                        l7793 2CF8                                          l7785 2CBA  
                                        l7777 2C82                                          l7769 2C54  
                                        l8809 39D0                                          l6897 474A  
                                        l6889 470E                                          l7697 40EC  
                                        l7689 4098                                          l8593 1C20  
                                        l8585 1BE2                                          l8577 1BA6  
                                        l8569 1B66                                          l8497 1928  
                                        l8489 1882                                          l8753 21AA  
                                        l8737 2078                                          l8817 520A  
                                        l8921 3FBE                                          l8913 3F4C  
                                        l8905 3EE2                                          l6995 5502  
                                        l7971 2AF4                                          l7955 2A48  
                                        l7963 2A90                                          l7947 29E2  
                                        l7939 29B0                                          l7891 27C6  
                                        l7883 2780                                          l7875 2750  
                                        l7867 272E                                          l7859 26FC  
                                        l8683 3D38                                          l8675 3CFE  
                                        l8667 3C8A                                          l8659 3C3E  
                                        l8771 5916                                          l8843 4B04  
                                        l8827 4A78                                          l8835 4AB8  
                                        l7795 2D16                                          l7787 2CCA  
                                        l7779 2C92                                          l7699 4100  
                                        l8595 1C28                                          l8587 1BFC  
                                        l8579 1BC2                                          l8499 1936  
                                        l8739 208A                                          l8747 2156  
                                        l8763 21D8                                          l8691 1CFA  
                                        l8819 5212                                          l8931 4016  
                                        l8923 3FC2                                          l8915 3F80  
                                        l8907 3EF4                                          l6997 550A  
                                        l7981 2B1E                                          l7973 2B04  
                                        l7965 2AAA                                          l7957 2A54  
                                        l7949 29F0                                          l7885 2790  
                                        l7877 275E                                          l7869 2734  
                                        l8685 3D46                                          l8677 3D00  
                                        l8669 3CC6                                          l8773 58E2  
                                        l8837 4AD4                                          l8845 4B24  
                                        l8829 4A94                                          l7797 2D18  
                                        l7789 2CDE                                          l8781 38BC  
                                        l8861 3A3A                                          l8853 39E4  
                                        l8597 1C3A                                          l8589 1C02  
                                        l8765 2206                                          l8749 2184  
                                        l8757 21B8                                          l8693 1D28  
                                        l8941 4058                                          l8933 4022  
                                        l8925 3FC8                                          l8917 3F9C  
                                        l8909 3EF8                                          l6999 550E  
                                        l7991 4C08                                          l7975 2B12  
                                        l7967 2ABE                                          l7959 2A62  
                                        l7895 27DA                                          l7887 2796  
                                        l7879 2760                                          l8687 3D48  
                                        l8679 3D04                                          l8839 4AF0  
                                        l7799 2D28                                          l8783 38C4  
                                        l8791 3926                                          l8775 37EE  
                                        l8951 519C                                          l8871 3AB4  
                                        l8855 39F6                                          l8599 1C40  
                                        l8759 21CA                                          l8695 1D3A  
                                        l8847 5BE4                                          l8943 405C  
                                        l8935 4038                                          l8919 3FA8  
                                        l8927 3FD8                                          l7993 4C0C  
                                        l7977 2B14                                          l7969 2AD8  
                                        l7897 27EA                                          l7889 27B6  
                                        l8793 3944                                          l8785 38D0  
                                        l8777 383C                                          l8953 51A0  
                                        l8945 5178                                          l8873 3ADE  
                                        l8857 3A12                                          l8865 3A46  
                                        l7985 55CE                                          l8697 1D4C  
                                        l8849 5BEE                                          l8937 4042  
                                        l8929 400E                                          l7995 4C1A  
                                        l7979 2B1A                                          l7899 27F4  
                                        l8971 3608                                          l8795 3950  
                                        l8779 38B0                                          l8955 51E8  
                                        l8963 5206                                          l8947 517E  
                                        l8883 3B2C                                          l8875 3AF2  
                                        l8867 3A8C                                          l8891 3B52  
                                        l8859 3A1E                                          l7987 55E0  
                                        l8699 1D50                                          l8939 4046  
                                        l7997 4C22                                          l8981 3652  
                                        l8973 360C                                          l8797 396C  
                                        l8789 38E4                                          l8957 51F0  
                                        l8949 5194                                          l8885 3B3E  
                                        l8877 3B06                                          l8869 3AA0  
                                        l7999 4C26                                          l8991 369A  
                                        l8975 3628                                          l8983 365E  
                                        l8967 35E4                                          l8799 3974  
                                        l8959 5200                                          l8879 3B18  
                                        STR_1 1022                                          STR_2 102E  
                                        l8993 372C                                          l8985 366A  
                                        l8977 3630                                          l8969 35F2  
                                        STR_3 1015                                          STR_4 1001  
                                        l8995 3738                                          l8987 3680  
                                        l8979 3646                                          STR_5 1038  
                                        STR_6 1040                                          l8989 3684  
                                        l8999 3744                                          STR_9 103C  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                                          _LATD 003FBD  
                                        _LATE 003FBE                                          _T2PR 003FAB  
                                        _T4PR 003F9F                                          _PMD0 0039C0  
                                        u2845 548C                                          _PMD1 0039C1  
                                        u2846 548E                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          u6240 445C  
                                        u8000 2E8A                                          u7200 5072  
                                        _PMD4 0039C4                                          u6241 4458  
                                        u8001 2E86                                          u7201 506E  
                                        _PMD5 0039C5                                          u6250 447E  
                                        u6410 5102                                          u8010 2EB8  
                                        u7210 509A                                          _PMD6 0039C6  
                                        u6251 447A                                          u6411 50FE  
                                        u8011 2EB4                                          u7211 5096  
                                        _PMD7 0039C7                                          u8100 2964  
                                        u8020 26FC                                          u6260 44B8  
                                        u6420 5112                                          u7300 2312  
                                        u6500 321E                                          u7220 50D0  
                                        u8021 26F8                                          u6261 44B4  
                                        u6421 510E                                          u7301 230E  
                                        u6501 321A                                          u7221 50CC  
                                        u8110 29BE                                          u8030 270E  
                                        u6270 44DA                                          u7310 2320  
                                        u7230 223A                                          u6190 59D2  
                                        u6510 324A                                          u8111 29BA  
                                        u8031 270A                                          u6271 44D6  
                                        u7311 231C                                          u7231 2236  
                                        u6191 59CE                                          u6511 3246  
                                        u8200 2B12                                          u8120 29DE  
                                        u8040 271E                                          u6280 4502  
                                        u7400 245E                                          u7320 238E  
                                        u7240 224C                                          u6600 3324  
                                        u6520 3266                                          u7160 52F8  
                                        u9000 1230                                          u8201 2B0E  
                                        u8121 29DA                                          u8105 295A  
                                        u8041 271A                                          u6281 44FE  
                                        u7401 245A                                          u7321 238A  
                                        u7241 2248                                          u6601 3320  
                                        u6521 3262                                          u7161 52F4  
                                        u9001 122A                                          u8210 4C1A  
                                        u8130 29F0                                          u8050 275E  
                                        u6290 4534                                          u7410 246C  
                                        u7330 23A6                                          u7250 225C  
                                        u6610 3346                                          u6530 327C  
                                        u7170 5308                                          u9010 1232  
                                        u8211 4C16                                          u8131 29EC  
                                        u8051 275A                                          u6291 4530  
                                        u7411 2468                                          u7331 23A0  
                                        u7251 2258                                          u6611 3342  
                                        u6531 3278                                          u7171 5304  
                                        u8220 4C34                                          u8140 2A1E  
                                        u8060 2770                                          u7500 25B6  
                                        u7420 248A                                          u7340 23A8  
                                        u7260 229E                                          u6620 3362  
                                        u6540 329C                                          u6700 4706  
                                        u7180 5338                                          u8300 4EB2  
                                        u9100 149A                                          u9020 1248  
                                        u8221 4C30                                          u8141 2A1A  
                                        u8061 276C                                          u7501 25B2  
                                        u7421 2486                                          u7261 229A  
                                        u6621 335E                                          u6541 3298  
                                        u6701 4702                                          u7181 5334  
                                        u8301 4EAE                                          u9101 1496  
                                        u9021 1244                                          u8230 4C5A  
                                        u8150 2A34                                          u8070 2780  
                                        u7510 25C8                                          u7430 24C2  
                                        u7350 23D0                                          u7270 22B4  
                                        u6630 3376                                          u6550 32BE  
                                        u6710 4728                                          u7190 5060  
                                        u8310 4EC8                                          u9110 14B6  
                                        u9030 12FA                                          u8231 4C56  
                                        u8151 2A30                                          u8071 277C  
                                        u7511 25C4                                          u7431 24BE  
                                        u7351 23CC                                          u7271 22B0  
                                        u6631 3372                                          u6551 32BA  
                                        u6711 4724                                          u7191 505C  
                                        u8311 4EC4                                          u9111 14B2  
                                        u9031 12F6                                          u8240 4C78  
                                        u8160 2A48                                          u8080 27B6  
                                        u7600 26B0                                          u7520 25DE  
                                        u7440 2508                                          u7360 23EE  
                                        u7280 22C6                                          u8400 4860  
                                        u6560 32D0                                          u6480 31EC  
                                        u6720 4746                                          u6640 4674  
                                        u8320 4EEC                                          u9200 1730  
                                        u9120 14EC                                          u9040 1390  
                                        u8241 4C74                                          u8161 2A44  
                                        u8081 27B2                                          u7601 26AC  
                                        u7521 25DA                                          u7441 2504  
                                        u7361 23EA                                          u7281 22C2  
                                        u8401 485C                                          u6561 32CC  
                                        u6481 31E8                                          u6721 4742  
                                        u6641 4670                                          u8321 4EE8  
                                        u9201 172C                                          u9121 14E8  
                                        u9041 138C                                          u8250 4C94  
                                        u8170 2A62                                          u8090 27C6  
                                        u7610 26CC                                          u7530 25F4  
                                        u7450 253E                                          u7370 240E  
                                        u7290 22D6                                          u6570 32E6  
                                        u6490 3208                                          u6650 4690  
                                        u8330 4F2C                                          u8410 5820  
                                        u9210 1776                                          u9130 1512  
                                        u9050 1404                                          u8251 4C90  
                                        u8171 2A5E                                          u8091 27C2  
                                        u7611 26C8                                          u7531 25F0  
                                        u7451 253A                                          u7371 240A  
                                        u7291 22D2                                          u6571 32E2  
                                        u6491 3204                                          u6651 468C  
                                        u8331 4F28                                          u8411 581C  
                                        u9211 1772                                          u9131 150E  
                                        u9051 1400                                          u8260 4CBA  
                                        u8180 2AAA                                          u8420 456E  
                                        u7540 2608                                          u7460 254E  
                                        u7380 241C                                          u6580 32F8  
                                        u6660 46A2                                          u7700 3E16  
                                        u7620 56A0                                          u8500 4CFC  
                                        u8340 4F6A                                          u9300 1986  
                                        u9220 1786                                          u9140 1524  
                                        u9060 142A                                          u8261 4CB6  
                                        u8181 2AA6                                          u8421 456A  
                                        u7541 2604                                          u7461 254A  
                                        u7381 2418                                          u6581 32F4  
                                        u6661 469E                                          u7701 3E12  
                                        u7621 569C                                          u8501 4CF8  
                                        u8341 4F66                                          u9301 1982  
                                        u9221 1782                                          u9141 1520  
                                        u9061 1426                                          u8190 2AD8  
                                        u8430 45A2                                          u7550 2622  
                                        u7470 257A                                          u7390 242C  
                                        u6590 330E                                          u6670 46C4  
                                        u7710 3E56                                          u7630 574C  
                                        u8510 4D52                                          u8270 4E60  
                                        u8350 4F9E                                          u9310 1994  
                                        u9230 1822                                          u9150 1532  
                                        u9070 143C                                          u8191 2AD4  
                                        u7551 261E                                          u7471 2576  
                                        u7391 2428                                          u6591 330A  
                                        u6671 46C0                                          u7711 3E52  
                                        u7631 5748                                          u8511 4D4E  
                                        u8271 4E5C                                          u8351 4F9A  
                                        u9311 1990                                          u9231 181E  
                                        u9151 152E                                          u9071 1438  
                                        u8440 45D0                                          u7560 265C  
                                        u7480 258A                                          u8360 4794  
                                        u7800 2B5E                                          u6680 46DC  
                                        u7720 3EA0                                          u8520 4D60  
                                        u8280 4E7A                                          u8600 4956  
                                        u7640 5802                                          u9400 1BFC  
                                        u9320 19EC                                          u9240 186E  
                                        u9160 1548                                          u9080 145E  
                                        u8441 45CC                                          u7561 2658  
                                        u7481 2586                                          u8361 4790  
                                        u7801 2B5A                                          u6681 46D8  
                                        u7721 3E9C                                          u8521 4D5C  
                                        u8281 4E76                                          u7641 57FC  
                                        u9401 1BF8                                          u9321 19E8  
                                        u9241 186A                                          u9161 1544  
                                        u9081 145A                                          u8450 45E4  
                                        u7570 266E                                          u7490 25A6  
                                        u8370 47D2                                          u7810 2B6E  
                                        u6690 46EE                                          u7730 4074  
                                        u8530 56BC                                          u8290 4E94  
                                        u8610 52D0                                          u7650 5804  
                                        u9410 1C14                                          u9330 1ABE  
                                        u9250 1894                                          u9170 1556  
                                        u9090 1484                                          u8451 45E0  
                                        u8435 4598                                          u7571 266A  
                                        u7491 25A2                                          u8371 47CE  
                                        u7811 2B6A                                          u6691 46EA  
                                        u7731 4070                                          u8531 56B8  
                                        u8291 4E90                                          u9411 1C10  
                                        u9331 1ABA                                          u9251 1890  
                                        u9171 1552                                          u9091 1480  
                                        u8460 460C                                          u7580 267E  
                                        u8380 47F0                                          u7900 2D3A  
                                        u7820 2BB2                                          u7660 3D6C  
                                        u7740 40A6                                          u8540 48AA  
                                        u8700 34D6                                          u8620 52E2  
                                        u9420 1C74                                          u9340 1ADA  
                                        u9260 1936                                          u9180 1580  
                                        u8461 4608                                          u7581 267A  
                                        u8381 47EC                                          u7901 2D36  
                                        u7821 2BAE                                          u7661 3D68  
                                        u7741 40A2                                          u8701 34D2  
                                        u8621 52DE                                          u9421 1C6E  
                                        u9341 1AD6                                          u9261 1932  
                                        u9181 157C                                          u8470 462C  
                                        u7590 269E                                          u8390 4810  
                                        u7910 2D50                                          u7830 2BC4  
                                        u7670 3D9E                                          u7750 40E4  
                                        u8550 48C8                                          u8710 34FA  
                                        u8630 5376                                          u9430 1C76  
                                        u9350 1AEC                                          u9270 194A  
                                        u9190 16C8                                          u8471 4628  
                                        u7591 269A                                          u8391 480C  
                                        u7911 2D4C                                          u7831 2BC0  
                                        u7671 3D9A                                          u7751 40E0  
                                        u8551 48C4                                          u8631 5370  
                                        u9351 1AE8                                          u9271 1946  
                                        u9191 16C4                                          u8480 463C  
                                        u9600 3D38                                          u9520 3BB8  
                                        u7920 2D6E                                          u7840 2BD4  
                                        u7760 410E                                          u8800 2F60  
                                        u8560 48F0                                          u8720 3516  
                                        u8640 5378                                          u9440 1C8C  
                                        u9360 1AFA                                          u9280 195C  
                                        u8481 4638                                          u9601 3D34  
                                        u9521 3BB4                                          u9505 58D2  
                                        u7921 2D6A                                          u7841 2BD0  
                                        u7681 3DC8                                          u7761 410A  
                                        u8801 2F5C                                          u8561 48EC  
                                        u8545 48A0                                          u8721 3512  
                                        u8617 52C2                                          u9441 1C88  
                                        u9361 1AF6                                          u9281 1958  
                                        u9610 3D46                                          u9530 3BC6  
                                        u7930 2D8E                                          u7850 2C14  
                                        u7690 3DEC                                          u7770 413C  
                                        u8490 4CDA                                          u8810 2F8E  
                                        u8570 491A                                          u8730 356A  
                                        u8650 538E                                          u9370 1B30  
                                        u9290 196A                                          u9450 4992  
                                        u9611 3D42                                          u9531 3BC2  
                                        u9515 589E                                          u7931 2D8A  
                                        u7851 2C10                                          u7691 3DE8  
                                        u7771 4138                                          u8491 4CD6  
                                        u8811 2F8A                                          u8571 4916  
                                        u8715 34F0                                          u8651 538A  
                                        u9371 1B2C                                          u9291 1966  
                                        u9451 498E                                          u9540 3C22  
                                        u7940 2DA0                                          u7860 2C54  
                                        u7780 4184                                          u8900 3162  
                                        u8820 2F9C                                          u8740 3586  
                                        u8660 3418                                          u9380 1B5E  
                                        u9460 49C8                                          u9700 2074  
                                        u9620 1D28                                          u9541 3C1E  
                                        u7941 2D9C                                          u7861 2C50  
                                        u7781 4180                                          u8901 315E  
                                        u8821 2F98                                          u8741 3582  
                                        u9381 1B5A                                          u9461 49C4  
                                        u9621 1D24                                          u9550 3C78  
                                        u7950 2DCE                                          u7870 2CCA  
                                        u7790 2B4C                                          u8830 30CA  
                                        u8590 4954                                          u8750 35C2  
                                        u8670 3446                                          u9390 1BE2  
                                        u8910 1074                                          u9470 49EA  
                                        u9710 208A                                          u9630 1D8C  
                                        u9551 3C74                                          u7951 2DCA  
                                        u7871 2CC6                                          u7791 2B48  
                                        u8831 30C6                                          u8591 494E  
                                        u8751 35BE                                          u8735 3560  
                                        u8671 3442                                          u9391 1BDE  
                                        u8911 1070                                          u9471 49E6  
                                        u9711 2086                                          u9631 1D88  
                                        u9560 3CC2                                          u9800 4A78  
                                        u7960 2DE4                                          u7880 2CEC  
                                        u8840 30E8                                          u8760 2EFE  
                                        u8680 3468                                          u8920 10C4  
                                        u9480 49FC                                          u9720 2184  
                                        u9640 1DDC                                          u9561 3CBE  
                                        u9801 4A74                                          u7961 2DE0  
                                        u7881 2CE8                                          u8841 30E4  
                                        u8761 2EF8                                          u8585 492C  
                                        u8681 3464                                          u8665 340E  
                                        u8921 10C0                                          u9481 49F8  
                                        u9721 2180                                          u9641 1DD8  
                                        u9570 3CE0                                          u9810 4A94  
                                        u7970 2DF8                                          u7890 2D16  
                                        u8850 3102                                          u8770 2F00  
                                        u8930 10D2                                          u9490 4A2E  
                                        u9650 1E4A                                          u9571 3CDC  
                                        u9811 4A90                                          u7971 2DF4  
                                        u7891 2D12                                          u8851 30FE  
                                        u8931 10CE                                          u9491 4A2A  
                                        u9651 1E46                                          u9580 3CF0  
                                        u9820 4AD4                                          u7980 2E12  
                                        u8860 311C                                          u8780 2F16  
                                        u8940 10E4                                          u9660 1E78  
                                        u9900 4058                                          u9581 3CEC  
                                        u9821 4AD0                                          u7981 2E0E  
                                        u8861 3118                                          u8781 2F12  
                                        u8941 10E0                                          u9661 1E74  
                                        u9901 4054                                          u9590 3CFE  
                                        u9830 4AF0                                          u7990 2E5A  
                                        u9750 3944                                          u9910 5194  
                                        u8870 312A                                          u8790 2F44  
                                        u8950 112C                                          u9670 1F1E  
                                        u9591 3CFA                                          u9735 593A  
                                        u9831 4AEC                                          u7991 2E56  
                                        u9751 3940                                          u9911 5190  
                                        u8871 3126                                          u8791 2F40  
                                        u8695 347C                                          u8951 1128  
                                        u9671 1F1A                                          u9760 396C  
                                        u9920 51E8                                          u9840 3A12  
                                        u8880 313C                                          u8696 3486  
                                        u8960 115C                                          u9680 1FF0  
                                        u9745 5906                                          u9761 3968  
                                        u9921 51E4                                          u9841 3A0E  
                                        u8881 3138                                          u8697 3496  
                                        u8961 1156                                          u9681 1FEC  
                                        u9930 3608                                          u9770 3990  
                                        u9850 3A3A                                          u8890 314A  
                                        u8970 115E                                          u9690 2072  
                                        u9931 3604                                          u9771 398C  
                                        u9851 3A36                                          u8891 3146  
                                        u9691 206C                                          u9940 3628  
                                        u9780 39B8                                          u9860 3B18  
                                        u8980 1174                                          u9941 3624  
                                        u9781 39B4                                          u9861 3B14  
                                        u8981 1170                                          u9950 3646  
                                        u9870 3B3E                                          u8990 1200  
                                        u9790 5270                                          u9951 3642  
                                        u9871 3B3A                                          u8991 11FC  
                                        u9791 526C                                          u9960 3680  
                                        u9880 3FD8                                          u9961 367C  
                                        u9881 3FD4                                          u9970 369A  
                                        u9890 400E                                          _TMR2 003FAA  
                                        u9971 3696                                          u9891 400A  
                                        u9980 37B8                                          _TMR4 003F9E  
                                        u9981 37B4                                          u9990 37DC  
                                        u9991 37D8                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUD 003A71                                          _WPUE 003A81  
                         ?_UART1_Transmit_ISR 0001                                          abs@a 0026  
                                        _dbuf 0132                                          _main 5C7C  
                                        _dtoa 2ECC                                          _loop 4312  
                                        _prec 003A                                          _nout 0128  
                                        pad@i 002D                                          pad@p 002A  
                                        fsr1h 003FE2                                          fsr2h 003FDA  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 002F  
                                        fsr2l 003FD9                                 ___fpclassifyf 486A  
                                        prodh 003FF4                                          prodl 003FF3  
                                        start 00AE                               _timer5ReloadVal 0188  
                             ___fldiv@new_exp 0065                               _TMR3_Initialize 5842  
                             _PWM5_Initialize 5D1C                             ??_CLC3_Initialize 0014  
               ??_UART1_SetTxInterruptHandler 0016                                  _tolower$3672 0020  
                  ??_TMR4_SetInterruptHandler 0016                             _UART1_rx_vect_isr 5798  
                                ___param_bank 000000                    __end_of_PWM5_LoadDutyValue 58E2  
                          ?_UART1_rx_vect_isr 0001                                         ??_abs 0028  
                                       ??_pad 002C                __size_of_OSCILLATOR_Initialize 0018  
                        ??_UART1_Transmit_ISR 0011                 __end_of_OSCILLATOR_Initialize 5D4C  
                               ___fltol@sign1 0081                               __end_of___aldiv 4556  
                             __end_of___aodiv 3EE2                                         _ADCAP 003EF5  
                                       _ADACT 003EFE                       __end_of_CCP3_Initialize 5B06  
                             __end_of___fladd 26E0                                         ?_main 0001  
                                       ?_dtoa 0060                                         _ADCLK 003EFF  
                             __end_of___aomod 41C6                                         _ADCNT 003EEB  
                                       _ADPCH 003EF1                               __end_of___fldiv 2ECC  
                                       _ADREF 003EFD                               __end_of___awdiv 4CCC  
                             __end_of___flneg 5842                                         ?_loop 0001  
                                       STR_10 1044                                         STR_13 1048  
                                       STR_15 1048                               __end_of___awmod 4EFE  
                                       _ADRPT 003EEC                        ??_CCP4_DefaultCallBack 0007  
                             __end_of___flmul 2B30                      TMR5_ReadTimer@readValLow 0010  
                             __end_of___flsub 5616                               __end_of___fltol 465E  
                                       u10000 4284                                         u10001 4280  
                                       u10010 42A0                                         u10011 429C  
                                       u10020 42CC                                         u10021 42C8  
                                       u10030 42F4                                         u10031 42F0  
                                       u10040 433E                                         u10041 433A  
                                       u10050 4350                                         u10051 434C  
                                       u10060 43A0                                         u10061 439C  
                                       u10070 43D4                                         u10071 43D0  
                                       u10080 43E6                                         u10081 43E2  
                                       u10090 441E                                         u10091 441A  
                             ___awdiv@divisor 0016                                         _U1P1H 003DED  
                                       _U1P2H 003DEF                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         _T3CLK 003FA9  
                                       _T2CON 003FAC                                         _U1P2L 003DEE  
                                       _U1P3L 003DF0                                         _T3CON 003FA6  
                                       _T5CLK 003F9D                                         _T4CON 003FA0  
                                       _T2HLT 003FAD                                         _T5CON 003F9A  
                                       _T4HLT 003FA1                                         _T2TMR 003FAA  
                                       _U1UIR 003DF8                                         i1l330 57CA  
                                       _T2RST 003FAF                                         _U1RXB 003DE8  
                                       i1l324 578E                                         i1l333 5658  
                                       i1l350 5DDC                                         i1l343 4E4C  
                                       i1l336 565C                                         i1l353 5DDA  
                                       _U1TXB 003DEA                                         i1l347 5BB6  
                                       i1l356 5DD2                                         _T4TMR 003F9E  
                                       _T4RST 003FA3                                         i2l409 5DE0  
                                       i1l692 5B32                                         i2l534 5BE2  
                                       i2l438 5A78                                         i2l446 597E  
                                       i2l552 5A18                                         i1l688 5718  
                                       i2l529 5C7A                                         i2l537 5D68  
                                       i1l698 5DDE                                         i2l476 5AA8  
                                       i2l558 5CD2                                         i2l487 59B2  
                         ??_UART1_rx_vect_isr 0012                                         i2l863 5456  
                                       i2l856 55CC                                         i2l868 5C32  
                             ___awdiv@counter 0018                                         _OSCEN 0039DD  
                                vfpfcnvrt@fmt 00C9                                         _TMR3H 003FA5  
                                       _TMR5H 003F99                                         _TMR3L 003FA4  
                                       _TMR5L 003F98                                         _TRISA 003FC2  
                                       _TRISB 003FC3                                         _TRISC 003FC4  
                                       _TRISD 003FC5                                         _TRISE 003FC6  
                                 _Default_ISR 5DE0                               _TMR4_Initialize 5B34  
                             _PWM6_Initialize 5D04                             _UART1_tx_vect_isr 575C  
                            __end_of_TMR4_ISR 5720                       setSteering@steeringMode 0085  
                                       _delay 003E                                         _flags 003C  
                                       _fputc 504E                                         _fputs 565E  
                       __size_of_calcMotorPow 014C                            ?_UART1_tx_vect_isr 0001  
                                       pad@fp 0026                                         _width 00E3  
                                       _putch 5D6A                                         dtoa@d 0062  
                                       dtoa@i 007A                                         dtoa@n 0072  
                                       dtoa@p 006C                                         dtoa@s 0070  
                                       dtoa@w 006E                              ?_SMT1_Initialize 0001  
                             __end_of_isupper 580A                                         pclath 003FFA  
                                       tablat 003FF5                                   _BatteryVolt 00E5  
                       __size_of_calcSteering 01C2                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 5D88                   _UART1_SetRxInterruptHandler 5D7E  
                     __end_of_CCP4_Initialize 5AD8                                ?___fpclassifyf 0014  
                             __end_of_tolower 53A6                               __end_of_strncmp 4A5C  
         fp__UART1_DefaultFramingErrorHandler 0000      __end_of_UART1_DefaultFramingErrorHandler 5DDE  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0012  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 5DDC  
                         ??_UART1_tx_vect_isr 0011                     __end_of_UART1_rx_vect_isr 57D2  
                             _TMR5_Initialize 5538                               _PWM7_Initialize 5CEC  
                             __initialization 54A4                         TMR5_ReadTimer@readVal 000D  
                            ?_CCP3_CaptureISR 0001                                  __end_of_main 5C9C  
                                __end_of_dtoa 31B2                                  __end_of_loop 444A  
                 ??_UART1_DefaultErrorHandler 0012                       __end_of_TMR2_Initialize 5CB8  
                                ?_UART1_Write 0001                                        ??_main 003A  
                                      ??_dtoa 0031                                        ??_loop 003A  
                               __activetblptr 000003                                  _calcMotorPow 41C6  
        __size_of_UART1_SetTxInterruptHandler 000A                     __end_of_UART1_tx_vect_isr 5796  
                             _PWM8_Initialize 5CD4                              _UART1_Initialize 4FA8  
                                _calcSteering 39E4                              ?_CCP4_CaptureISR 0001  
                                      _ADACCH 003EE9                                        _ADACCL 003EE8  
                                      _ADACCU 003EEA                                        _ADACQH 003EF4  
                                      _ADACQL 003EF3                                        _ADCON0 003EF8  
                                      _ADCON1 003EF9                                        _ADCON2 003EFA  
                                      _ADCON3 003EFB                                        _ADERRH 003EE3  
                                      _ADERRL 003EE2                                        ?_fputc 0016  
                                      _ADLTHH 003EDF                                        _ADLTHL 003EDE  
                                      ?_fputs 001F                                        _ADRESH 003EF0  
                                      _ADRESL 003EEF                                        _ADPREH 003EF7  
                                      _ADPREL 003EF6                                        _CCPR3H 003F75  
                                      _CCPR4H 003F71                                        _CCPR3L 003F74  
                                      _CCPR4L 003F70                                        _ADSTAT 003EFC  
                                      _ADUTHH 003EE1                              ___awdiv@dividend 0014  
                                      _ADUTHL 003EE0                            _PWM8_LoadDutyValue 58E2  
                                      _ANSELA 003A40                                        ?_putch 0001  
                                      _ANSELB 003A50                                        _ANSELC 003A60  
                                      _ANSELD 003A70                                        _ANSELE 003A80  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                                      _RD0I2C 003A7A                                        _U1CON0 003DF2  
                                      _U1CON1 003DF3                                        _U1CON2 003DF4  
                                      _RC3I2C 003A6A                                        _RD1I2C 003A7B  
                                      _T3GATE 003FA8                                        _RC4I2C 003A6B  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _T3GCON 003FA7                                        _U1BRGL 003DF5  
                                      _T5GATE 003F9C                                        _T5GCON 003F9B  
                                      _RA0PPS 003A00                                        _RA1PPS 003A01  
                                      _RA3PPS 003A03                                        _RA4PPS 003A04  
                                      _RB3PPS 003A0B                                        _T5GPPS 003AC9  
                                      i1l1241 5DD8                                        _ODCONA 003A42  
                                      _ODCONB 003A52                                        _ODCONC 003A62  
                                      _ODCOND 003A72                                        _ODCONE 003A82  
                     __end_of_PWM5_Initialize 5D34                       __end_of_TMR3_Initialize 587A  
                                      i1l7105 5B06                                        i1l7041 563C  
                                      i1l7107 5B1A                                        i1l7051 4DAE  
                                      i1l7043 564C                                        i1l7035 5616  
                                      i1l7061 4E0E                                        i1l7053 4DBE  
                                      i1l7045 5650                                        i1l7037 5628  
                                      i1l6511 5BB0                                        i1l7063 4E2A  
                                      i1l7055 4DD6                                        i1l7047 4D8E  
                                      i1l7039 563A                                        i1l6513 5BB4  
                                      i1l6505 5B8C                                        i1l7065 4E48  
                                      i1l7057 4DE6                                        i1l7049 4D9E  
                                      i1l7161 57B2                                        i1l6507 5B9E  
                                      i1l7059 4DF6                                        i1l7155 5762  
                                      i1l7181 56EE                                        i1l6509 5BA0  
                                      i1l7157 5776                                        i1l7183 570A  
                                      i1l7159 579E                                        i1l7185 570E  
                                      i1l7179 56EA                                        i1l6729 5DCE  
                                      i2l7201 5422                                        _INLVLA 003A44  
                                      _INLVLB 003A54                                        i2l7203 5432  
                                      _INLVLC 003A64                                        _INLVLD 003A74  
                                      i2l7205 5444                                        _INLVLE 003A84  
                                      i2l7207 5C0C                                        i2l7071 5A64  
                                      i2l7209 5C10                                        i2l6521 5BB8  
                                      i2l7081 5AA2                                        i2l7073 5A72  
                                      i2l6523 5BC6                                        i2l6531 5BD8  
                                      i2l7083 5CB8                                        i2l7171 59E8  
                                      i2l7075 5A7A                                        i2l7067 5A4A  
                                      i2l7163 594C                                        i2l6533 5BDC  
                                      i2l6525 5BC8                                        i2l7085 5CC4  
                                      i2l7173 59EC                                        i2l7077 5A88  
                                      i2l7069 5A58                                        i2l7165 595C  
                                      i1l6989 5DD4                                        i2l7191 5598  
                                      i2l6527 5BCC                                        i2l7087 5CCA  
                                      i2l7175 5A00                                        i2l7079 5A94  
                                      i2l7167 5980                                        i2l7193 55A8  
                                      i2l6529 5BD2                                        i2l7089 5CCE  
                                      i2l7169 5990                                        i2l7195 55BA  
                                      i2l7187 5584                                        i2l6731 5C58  
                                      i2l7197 5404                                        i2l7189 5588  
                                      i2l6733 5C66                                        i2l7199 5408  
                                      i2l6735 5C72                                        i2l6739 5D5C  
                                ?_setSteering 0083                                        _OSCFRQ 0039DF  
                            __end_of_actSpeed 5178                                        _SMT1PR 003F1B  
                       _UART1_SetErrorHandler 5D9C                              __end_of___xxtofl 3D5A  
                         ?_PWM8_LoadDutyValue 0014                              __end_of_getCurve 33CE  
                    __end_of_CCP3_SetCallBack 5DCE                                  _CCPTMRS0bits 003F5E  
                                _CCPTMRS1bits 003F5F                                  vfprintf@cfmt 019E  
                                      ___flge 4764                                        ___fleq 4EFE  
                                   ??___aldiv 001C                                     ??___aodiv 0024  
                                   ??___fladd 0036                                     ??___aomod 0024  
                                   ??___fldiv 0032                                     ??___awdiv 0018  
                                   ??___flneg 0018                                     ??___awmod 0018  
                                   ??___flmul 0032                                     ??___flsub 003A  
                                   ??___fltol 007D                                        _efgtoa 104C  
                               _CCP3_CallBack 018C                                        _floorf 33CE  
                                ?_TMR5_Reload 0001                       __end_of_PWM6_Initialize 5D1C  
                     __end_of_TMR4_Initialize 5B60                                        clear_0 54BE  
                                      clear_1 54CA                                        clear_2 54D6  
                            ___awdiv@quotient 001A                                        _motPow 012E  
                             ___awmod@divisor 0016                       fp__CCP3_DefaultCallBack 0000  
                                      isa$std 000001                               ___awmod@counter 0018  
                               _CCP4_CallBack 018A                                        _smtWay 0120  
                                      _printf 5BE4                                        pad@buf 0028  
                                      dtoa@fp 0060                              ?_CCP3_Initialize 0001  
                                      _strcpy 527A                                        _strlen 5720  
                        ??_PWM8_LoadDutyValue 0016                              __end_of_setMotor 4B3E  
                             _ADCC_Initialize 53A6          __end_of_TMR4_DefaultInterruptHandler 5DE0  
       __size_of_TMR4_DefaultInterruptHandler 0002                  _TMR4_DefaultInterruptHandler 5DDE  
                                      fputc@c 0016                                _PMD_Initialize 5C34  
                                      fputs@c 0023                                        fputs@i 0024  
                                __pdataCOMRAM 004C                                        fputs@s 001F  
                             ___fpclassifyf@e 001C                               ___fpclassifyf@u 001E  
                             ___fpclassifyf@x 0014                                  __mediumconst 0000  
                       __end_of_TMR5_GATE_ISR 5A1A                                        tblptrh 003FF7  
                                   ??_isupper 0016                                        tblptrl 003FF6  
                                      tblptru 003FF8             __size_of_ADCC_GetSingleConversion 0032  
                            __end_of_vfprintf 527A                     ?_ADCC_GetSingleConversion 0014  
    TMR4_SetInterruptHandler@InterruptHandler 0014  TMR5_SetGateInterruptHandler@InterruptHandler 0014  
 UART1_SetTxInterruptHandler@InterruptHandler 0014   UART1_SetRxInterruptHandler@InterruptHandler 0014  
        __end_of_UART1_SetOverrunErrorHandler 5D92         __size_of_UART1_SetOverrunErrorHandler 000A  
                _UART1_SetOverrunErrorHandler 5D88                     _UART1_DefaultErrorHandler 5DCE  
                                   ??_tolower 001C                                     ??_strncmp 001A  
               __size_of_INTERRUPT_Initialize 004C                  __size_of_UART1_RxDataHandler 002C  
                           getCurve@deltaLeft 0018                                    ___flge@ff1 006D  
                             ??___fpclassifyf 0018                                    ___flge@ff2 0071  
                     __end_of_PWM7_Initialize 5D04                       __end_of_TMR5_Initialize 5582  
                                ___xxtofl@arg 0026                                  ___xxtofl@exp 0025  
                           _SYSTEM_Initialize 54EE                                  ___xxtofl@val 001C  
                                  ___fleq@ff1 0014                                    ___fleq@ff2 0018  
                                  __accesstop 0060                       __end_of__initialization 54E8  
                                  ___flneg@f1 0014                              ?_CCP4_Initialize 0001  
                         setSteering@steering 0083                            ?_SYSTEM_Initialize 0001  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 003A  
                                  ___fltol@f1 0079                               _TMR5_WriteTimer 5BB8  
                          __size_of_calcSpeed 020A                     calcMotorPow@setSpeedDelta 0085  
                    __end_of_CCP4_SetCallBack 5DC4                                __pcstackCOMRAM 0001  
                       __end_of_TMR4_CallBack 5B34                            __size_of_checkBatt 0092  
                                ?_startAccell 0001                           ??_SYSTEM_Initialize 0018  
                                   ?_TMR4_ISR 0001                               startAccell@MPow 01A8  
                              ivt0x8_undefint 00AC                                 __end_of_fputc 50E4  
                               __end_of_fputs 56A2                               fp__TMR4_10msISR 0000  
                               __end_of_putch 5D74                              ?_TMR2_Initialize 0001  
                     __end_of_PWM8_Initialize 5CEC                        __end_of_PMD_Initialize 5C58  
                 __size_of_PWM7_LoadDutyValue 0034                         CCP3_CaptureISR@module 0003  
                  __size_of_UART1_tx_vect_isr 003A                CCP3_SetCallBack@customCallBack 0014  
                   _UART1_FramingErrorHandler 0192               fp__TMR4_DefaultInterruptHandler 0000  
               ?_TMR4_DefaultInterruptHandler 0001                       fp__CCP4_DefaultCallBack 0000  
                    __size_of_SMT1_PR_ACQ_ISR 004A                                       ??_fputc 001A  
                   __end_of_SYSTEM_Initialize 5538                                       ??_fputs 0023  
                             _CLC3_Initialize 5B60                                       ??_putch 0015  
                 PWM7_LoadDutyValue@dutyValue 0014                                    __pbssBANK0 00E3  
                                  __pbssBANK1 0100                 ?_UART1_SetOverrunErrorHandler 0014  
                      ?_UART1_SetErrorHandler 0014                              ?_PWM5_Initialize 0001  
                            ?_TMR3_Initialize 0001                      __size_of_SMT1_PW_ACQ_ISR 0054  
                       _TMR4_InterruptHandler 0182                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                                     ?___flge 006D                                       ?___fleq 0014  
                                  ??_TMR4_ISR 0013                       __end_of_ADCC_Initialize 5402  
                  __end_of_PWM6_LoadDutyValue 58AE                                       ?_efgtoa 0083  
        __end_of_TMR5_SetGateInterruptHandler 5DB0         __size_of_TMR5_SetGateInterruptHandler 000A  
                _TMR5_SetGateInterruptHandler 5DA6                                       _CCP3CAP 003F77  
                                     _CCP4CAP 003F73                                       _CCP3CON 003F76  
                                     _CCP4CON 003F72                                       _ADFLTRH 003EE7  
                                     ?_floorf 0036                                       _ADFLTRL 003EE6  
               __size_of_CCP3_DefaultCallBack 0030                                       _CCP3PPS 003ACF  
                                     _CCP4PPS 003AD0                                       _CLC3CON 003C60  
                                     _CLC3POL 003C61                                       _ADPREVH 003EEE  
                                     _ADPREVL 003EED                              ?_PWM6_Initialize 0001  
                            ?_TMR4_Initialize 0001                                       _ADSTPTH 003EE5  
                                     _ADSTPTL 003EE4                                       ?_printf 01A0  
                             ?_PMD_Initialize 0001                             _UART1_Receive_ISR 4D8E  
                                  _getReverse 465E                                       ?_strcpy 0014  
                                     ?_strlen 0014                                       _U1ERRIE 003DFA  
                                   ?_actSpeed 0022                                       _U1ERRIR 003DF9  
                               ?_TMR4_10msISR 0001                                  ?_Default_ISR 0001  
                        __size_of_UART1_Write 0062                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?___xxtofl 001C  
                          _PWM5_LoadDutyValue 58AE                                    _distRightM 00F5  
                     __size_of_TMR5_ReadTimer 0024                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                             __end_of_calcSpeed 37EE  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 0524  
                                     _SMT1CLK 003F21                                       _OSCTUNE 0039DE  
                                     _SMT1CPR 003F15                                       _SMT1CPW 003F18  
                                     _PWM5DCH 003F6D                                       _PWM5DCL 003F6C  
                                     _PWM6DCH 003F69                                       _PWM6DCL 003F68  
                                     _PWM7DCH 003F65                                       _PWM7DCL 003F64  
                                     _SMT1SIG 003F22                                       _PWM8DCH 003F61  
                                     _PWM5CON 003F6E                                       _PWM8DCL 003F60  
                                     _SMT1PRH 003F1C                                       _PWM6CON 003F6A  
                                     _SMT1PRL 003F1B                                       _PWM7CON 003F66  
                                     _SMT1PRU 003F1D                                     ?_getCurve 0001  
                                     _SMT1WIN 003F23                                       _SMT1TMR 003F12  
                                     _PWM8CON 003F62                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                                     _SLRCOND 003A73                                       _SLRCONE 003A83  
                           __end_of_checkBatt 520A                           ??_UART1_Receive_ISR 0012  
                     __end_of_TMR5_WriteTimer 5BE4                           ?_PWM5_LoadDutyValue 0014  
                            ?_PWM7_Initialize 0001                              ?_TMR5_Initialize 0001  
                   INTERRUPT_Initialize@state 0014                          __size_of_setSteering 01F6  
                                   _CLCIN0PPS 003AD9                                     _CLCIN2PPS 003ADB  
                                   _CLCIN3PPS 003ADC                                       __Hparam 0000  
                                   ?_setMotor 0018                                       __Lparam 0000  
                    __end_of_UART1_Initialize 504E                                       ___aldiv 444A  
                             __size_of___flge 0106                               __size_of___fleq 00AA  
                                     ___aodiv 3D5A                                       ___fladd 221E  
                                     ___aomod 4062                                       ___fldiv 2B30  
                                     ___awdiv 4C08                                       ___flneg 580A  
                                     ___awmod 4E4E                                       ___flmul 26E0  
                                     ___flsub 55CE                                       ___fltol 4556  
                   __end_of_UART1_Receive_ISR 4E4E                                     ?_vfprintf 0198  
                        ??_PWM5_LoadDutyValue 0016                                  __psmallconst 1000  
                             __size_of_efgtoa 0CAE                               __size_of_floorf 0216  
                                     __pcinit 54A4                     _TMR5_GateInterruptHandler 0186  
                            ?_PWM8_Initialize 0001                                       __ramtop 1000  
                 __size_of_UART1_Transmit_ISR 0048                 ?_TMR5_SetGateInterruptHandler 0014  
                                     __ptext0 5C7C                                       __ptext1 4312  
                                     __ptext2 3EE2                                       __ptext3 5BE4  
                                     __ptext4 520A                                       __ptext5 1CFA  
                                     __ptext6 4968                                       __ptext7 104C  
                                     __ptext8 5346                                       __ptext9 57D2  
                             __size_of_printf 0028                                ??_TMR4_10msISR 0013  
                        __size_of_TMR5_Reload 000E                                    ??_actSpeed 0024  
                             __size_of_strcpy 006A                               __size_of_strlen 003A  
                     __end_of_CLC3_Initialize 5B8C                         _OSCILLATOR_Initialize 5D34  
                                   _T2CONbits 003FAC                                  __size_of_abs 0040  
                                __size_of_pad 00C2                                    ??___xxtofl 0020  
                                   _T3CONbits 003FA6                              ___awmod@dividend 0014  
               __size_of_CCP4_DefaultCallBack 0030                              ___aldiv@dividend 0014  
                                   _T4CONbits 003FA0                      ??_PIN_MANAGER_Initialize 0014  
           __size_of_TMR4_SetInterruptHandler 000A                                     _T2HLTbits 003FAD  
                                   _T5CONbits 003F9A                     ?_TMR4_SetInterruptHandler 0014  
                                     _isupper 57D2                                       efgtoa@c 0089  
                                     efgtoa@d 00A7                                       efgtoa@e 00BF  
                                     efgtoa@f 0085                                       efgtoa@g 00BB  
                                     efgtoa@h 00B1                                       efgtoa@i 00B9  
                                     efgtoa@l 00B5                                       efgtoa@m 00A1  
                                     efgtoa@n 00C1                                       efgtoa@p 00AB  
                                     efgtoa@t 009B                                       efgtoa@u 00C3  
                                     efgtoa@w 00AD                                     _IPR10bits 00398A  
                                     _smtDuty 0124                                     _T4HLTbits 003FA1  
                                  ??_getCurve 0014                                     _PIE10bits 00399A  
                  __size_of_SYSTEM_Initialize 004A                                       _tolower 5346  
                                     _strncmp 4968                          end_of_initialization 54E8  
                                     floorf@e 0077                                     _T2RSTbits 003FAF  
                                     floorf@m 0073                                       floorf@u 0079  
                                     floorf@x 0036                ??_TMR4_DefaultInterruptHandler 0013  
                                   _T4RSTbits 003FA3                                     _PIR10bits 0039AA  
                                     fputc@fp 0018                             ??_SMT1_PR_ACQ_ISR 0011  
         __end_of_UART1_SetTxInterruptHandler 5D7E                   _UART1_SetTxInterruptHandler 5D74  
                                     fputs@fp 0021                ??_UART1_SetOverrunErrorHandler 0016  
                                  ??_setMotor 001A                      __size_of_SMT1_Initialize 0030  
                           __end_of_vfpfcnvrt 221E                                    efgtoa@mode 00B0  
                           ?_CCP3_SetCallBack 0014                                    efgtoa@sign 00A9  
                            ___aldiv@quotient 001E                                       postdec2 003FDD  
                           ??_SMT1_PW_ACQ_ISR 0011                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                            ?_ADCC_Initialize 0001                            ??_CCP3_SetCallBack 0016  
                                  ??_vfprintf 003A              __end_of_ADCC_GetSingleConversion 59E6  
                           UART1_Write@txData 0014                           _UART1_RxDataHandler 5B8C  
                                     strcpy@d 001C                                       strlen@a 0016  
                                     strcpy@s 001A                                       strlen@s 0014  
                        __size_of_startAccell 0180                                   ?_getReverse 0001  
                                   _PORTBbits 003FCB                                     _PORTDbits 003FCD  
                    __size_of_CCP3_CaptureISR 0034                                   ___fladd@grs 0078  
                          getCurve@deltaRight 0016                                 ___xxtofl@sign 0024  
                                 ___fldiv@grs 0067                                   ___fldiv@rem 0060  
                        ?_UART1_RxDataHandler 0001                              ?_TMR5_WriteTimer 0009  
                        setSteering@steeringB 008A                          setSteering@steeringF 0088  
                     TMR5_WriteTimer@timerVal 0009                                   ___flmul@grs 0062  
                    __size_of_CCP4_CaptureISR 0034             CCP4_DefaultCallBack@capturedValue 0005  
                           ?_CCP4_SetCallBack 0014                  __end_of_INTERRUPT_Initialize 54A4  
                              __end_of___flge 486A                                __end_of___fleq 4FA8  
                  __size_of_UART1_Receive_ISR 00C0                            ??_CCP4_SetCallBack 0016  
                                 _CLC3CONbits 003C60                                   vfpfcnvrt@ap 00CB  
                                 vfpfcnvrt@ct 00DF                                   vfpfcnvrt@fp 00C7  
                                 vfpfcnvrt@ll 00D1                                 __pidataCOMRAM 5DE2  
                              __end_of_efgtoa 1CFA                             __size_of_TMR4_ISR 003C  
                              __end_of_floorf 35E4                        ?_OSCILLATOR_Initialize 0001  
                                  floorf@F527 0118                                __end_of_printf 5C0C  
                 __size_of_PWM8_LoadDutyValue 0034                              ?_CLC3_Initialize 0001  
                              __end_of_strcpy 52E4                                __end_of_strlen 575A  
                              _TMR5_ReadTimer 5C58                           start_initialization 54A4  
              ??_TMR5_SetGateInterruptHandler 0016               __size_of_PIN_MANAGER_Initialize 00CA  
                                 __end_of_abs 56E2                                   __end_of_pad 4D8E  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0016  
                    __size_of_CCP3_Initialize 002E                         ??_UART1_RxDataHandler 0012  
                                 putch@txData 0015                                    ivt0x8_base 0008  
                               _uart1RxBuffer 0108                                   _actMotorPow 00E7  
                       __end_of___fpclassifyf 4968                                 _uart1TxBuffer 0110  
                         __size_of_getReverse 0106                          __end_of_TMR4_10msISR 5DDA  
                                 vfprintf@fmt 019A                                      ??___flge 0036  
                                    ??___fleq 001C                              ??_PMD_Initialize 0014  
                      __size_of_TMR5_GATE_ISR 0032                                  _oldDistRight 00ED  
                    __size_of_CCP4_Initialize 002E                                      ??_efgtoa 008A  
                                    ??_floorf 006D                    __end_of_PWM7_LoadDutyValue 594A  
                           ??_SMT1_Initialize 0014                                      ??_printf 003A  
                                    ??_strcpy 0018                                      ??_strlen 0016  
                      __end_of_TMR5_ReadTimer 5C7C                         CCP4_CaptureISR@module 0007  
                                   ___fladd@a 0071                                     ___fladd@b 006D  
                         calcMotorPow@addMPow 0089                      _ADCC_GetSingleConversion 59B4  
                                   ___fldiv@a 002E                                     ___fldiv@b 002A  
                 PWM5_LoadDutyValue@dutyValue 0014                         TMR4_ISR@CountCallBack 00F3  
                                   ___flmul@a 002E                                     ___flmul@b 002A  
                                 __pbssCOMRAM 003A                                     ___flsub@a 007D  
                                   ___flsub@b 0079                            _UART1_ErrorHandler 018E  
                               __pcstackBANK0 0060                                 __pcstackBANK1 0198  
                           __size_of_actSpeed 0094                              ___aodiv@dividend 0014  
                          _PWM6_LoadDutyValue 587A                      __size_of_TMR2_Initialize 001C  
                           __size_of___xxtofl 01B4                      _UART1_RxInterruptHandler 0196  
                           ??_CCP3_CaptureISR 0003                  __end_of_CCP3_DefaultCallBack 5A7A  
                      __size_of_TMR4_CallBack 002E                                     _calcSpeed 35E4  
                           __size_of_getCurve 021C                           ?_PWM6_LoadDutyValue 0014  
                 PWM8_LoadDutyValue@dutyValue 0014                  fp__UART1_DefaultErrorHandler 0000  
                                   _checkBatt 5178                                  _currentSpeed 00E9  
                ?_UART1_SetRxInterruptHandler 0014                                     __pnvBANK0 00FE  
                                   __pnvBANK1 0182                                   _efgtoa$3550 008F  
                                 _efgtoa$3551 0091                                   _efgtoa$3560 0097  
                                 _efgtoa$3561 0099                                   _efgtoa$3555 0093  
                                 _efgtoa$3559 0095                            setMotor@motorPower 0018  
                      _PIN_MANAGER_Initialize 4B3E                                     _dtoa$3526 006A  
                    __size_of_PWM5_Initialize 0018                      __size_of_TMR3_Initialize 0038  
                           ?_UART1_Initialize 0001          __end_of_UART1_SetFramingErrorHandler 5D9C  
       __size_of_UART1_SetFramingErrorHandler 000A                  _UART1_SetFramingErrorHandler 5D92  
                                    ?___aldiv 0014               ADCC_GetSingleConversion@channel 0018  
                                    ?___aodiv 0014                                      ?___fladd 006D  
                                    ?___aomod 0014                             __size_of_setMotor 00E2  
            __end_of_TMR4_SetInterruptHandler 5DBA                                      ?___fldiv 002A  
                                    ?___awdiv 0014                                     __ptext100 5584  
                                   __ptext101 5404                                     __ptext102 5C0C  
                            ___aodiv@quotient 0026                                      ?___flneg 0014  
                                   __ptext103 0000             CCP3_DefaultCallBack@capturedValue 0001  
                                    ?___awmod 0014                             ??_CCP4_CaptureISR 0007  
                                    ?___flmul 002A                                      ?___flsub 0079  
                                    ?___fltol 0079                            ??_UART1_Initialize 0016  
                                   _distLeftM 00F9                                     _distFront 004A  
                            _uart1RxLastError 0040                                 ??_UART1_Write 0014  
                                   _distRight 00F7                          ??_PWM6_LoadDutyValue 0016  
                                   _cycle10ms 00FD                             __size_of_vfprintf 0070  
                             ?_TMR5_ReadTimer 0009                                 ?_calcMotorPow 0001  
                                 __smallconst 1000                                      _CLC3GLS0 003C66  
                                    _CLC3GLS1 003C67                                      _CLC3GLS2 003C68  
                                    _CLC3GLS3 003C69                                     _driveMode 004C  
         fp__UART1_DefaultOverrunErrorHandler 0000      __end_of_UART1_DefaultOverrunErrorHandler 5DDC  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0012  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 5DDA  
                                    _CLC3SEL0 003C62                                      _CLC3SEL1 003C63  
                                    _CLC3SEL2 003C64                                      _CLC3SEL3 003C65  
                             _SMT1_PR_ACQ_ISR 5584                                 ?_calcSteering 0001  
                                    ?_isupper 0014                      __size_of_PWM6_Initialize 0018  
                    __size_of_TMR4_Initialize 002C                                 _TMR5_GATE_ISR 59E8  
                                   _curveMode 003F                                      ?_tolower 001A  
                              __size_of_fputc 0096                                      _T2CLKCON 003FAE  
                              __size_of_fputs 0044                                      ?_strncmp 0014  
                                 _U1ERRIRbits 003DF9                                      _T4CLKCON 003FA2  
                              __size_of_putch 000A                                    ?_calcSpeed 0001  
                        _INTERRUPT_Initialize 5458                                 ??_setSteering 0086  
                             ___aldiv@divisor 0018                               _SMT1_PW_ACQ_ISR 5404  
                             ___aldiv@counter 001C                                    ?_checkBatt 0001  
       UART1_SetErrorHandler@interruptHandler 0014                                      _IPR1bits 003981  
                __end_of_CCP4_DefaultCallBack 5AAA                             ??_CCP3_Initialize 0016  
                                    _IPR3bits 003983                                      _PIE1bits 003991  
                                    _PIE3bits 003993                                      _IPR7bits 003987  
                                    _IPR8bits 003988                                      _IPR9bits 003989  
                                    _PIE7bits 003997                                      _PIE8bits 003998  
                                    _PIE9bits 003999                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
               ??_UART1_SetRxInterruptHandler 0016                                      i1u631_20 5BB0  
                                    i1u631_21 5BAC                                      i1u713_20 570A  
                                    i1u705_20 5776                                      i1u713_21 5706  
                                    i1u705_21 5772                                      i1u707_20 57B2  
                                    i1u706_28 577C                                      i1u707_21 57AE  
                                    i1u706_29 578E                                      i1u708_28 57B8  
                                    i1u708_29 57CA                                      _PIR1bits 0039A1  
                                    i1u690_20 4DE6                                      i1u690_21 4DE2  
                                    i1u692_20 4E2A                                      i1u691_28 4DFC  
                                    i1u692_21 4E26                                      i1u691_29 4E0E  
                                    i1u693_28 4E30                                      i1u686_20 5628  
                                    i1u693_29 4E44                                      i1u686_21 5624  
                                    i1u687_20 564C                                      i1u687_21 5648  
                                    i2u711_40 5A00                                      i2u710_48 599E  
                                    i2u711_41 59FC                                      i2u710_49 59B2  
                                    _PIR4bits 0039A4                                      i1u688_20 4DAE  
                                    i1u688_21 4DAA                                      i2u632_40 5BC6  
                                    i2u632_41 5BC2                                      i1u697_20 5B1A  
                                    i1u697_21 5B16                                      i2u712_48 5A06  
                                    i2u712_49 5A18                                      i1u689_28 4DC4  
                                    i1u689_29 4DD6                                      i2u714_40 55A8  
                                    i2u714_41 55A4                                      i1u698_28 5B20  
                                    i1u698_29 5B32                                      i2u715_40 5432  
                                    i2u715_41 542E                                      _PIR6bits 0039A6  
                                    _PIR7bits 0039A7                                      i2u709_48 596A  
                                    i2u709_49 597E                                      _PIR8bits 0039A8  
                                    _PIR9bits 0039A9                                      i2u694_40 5A58  
                                    i2u694_41 5A54                                      i2u695_40 5A88  
                                    i2u695_41 5A84                                      _SMT1CON0 003F1E  
                                    _SMT1CON1 003F1F                      __size_of_PWM7_Initialize 0018  
                    __size_of_TMR5_Initialize 004A                                      _SMT1STAT 003F20  
                           _SMT1_Overflow_ISR 5C0C                                      _TMR4_ISR 56E4  
                  __end_of_UART1_Transmit_ISR 565E                                 _TMR4_CallBack 5B06  
                                   _smtPeriod 0046                 ?_UART1_SetFramingErrorHandler 0014  
                               ??_TMR5_Reload 000B                   __size_of_PWM5_LoadDutyValue 0034  
                                   _vfpfcnvrt 1CFA                            ?_SMT1_Overflow_ISR 0001  
                           _getBatteryVoltage 5D4C                                  ??_getReverse 0014  
                              ??_calcMotorPow 0083                                    _ADCON0bits 003EF8  
                                  _ADCON1bits 003EF9                                    _ADCON2bits 003EFA  
                                  _ADCON3bits 003EFB                            ?_getBatteryVoltage 0001  
                           ??_CCP4_Initialize 0016                                ??_calcSteering 008C  
                         ??_SMT1_Overflow_ISR 0011                     TMR5_ReadTimer@readValHigh 000F  
                   __size_of_CCP3_SetCallBack 000A                                ?_TMR5_GATE_ISR 0001  
                         __end_of_UART1_Write 5346                      __size_of_PWM8_Initialize 0018  
                                _SMT1CON0bits 003F1E                                  _SMT1CON1bits 003F1F  
                                  vfpfcnvrt@c 00E2                                    vfpfcnvrt@f 00DB  
                         ??_getBatteryVoltage 0019                                   _INTCON0bits 003FD2  
                       ?_INTERRUPT_Initialize 0001                         __size_of_TMR4_10msISR 0006  
                        fp__UART1_Receive_ISR 0000                        _uart1TxBufferRemaining 00FE  
                           ??_TMR2_Initialize 0014                                  _uart1RxCount 0041  
                          __end_of_getReverse 4764                                    _ADSTATbits 003EFC  
                                    __Hrparam 0000                     __end_of_SMT1_Overflow_ISR 5C34  
                         __end_of_setSteering 39E4                                    vfprintf@ap 019C  
                                    __Lrparam 0000                                    vfprintf@fp 0198  
                                 _oldDistLeft 00EF                                 ??_startAccell 003A  
                              ?_TMR4_CallBack 0001                                calcSpeed@speed 0087  
                   __end_of_getBatteryVoltage 5D5C                       ??_OSCILLATOR_Initialize 0014  
                            __size_of___aldiv 010C                              __size_of___aodiv 0188  
                            __size_of___fladd 04C2                              __size_of___aomod 0164  
                            __size_of___fldiv 039C                              __size_of___awdiv 00C4  
                            __size_of___flneg 0038                              __size_of___awmod 00B0  
                            __size_of___flmul 0450                              __size_of___flsub 0048  
                            __size_of___fltol 0108                                  _SMT1STATbits 003F20  
                        _CCP3_DefaultCallBack 5A4A                       __end_of_SMT1_PR_ACQ_ISR 55CE  
                                  ?_vfpfcnvrt 00C7                               ___aodiv@divisor 001C  
                           ??_PWM5_Initialize 0014                             ??_TMR3_Initialize 0014  
                             ___aodiv@counter 0024                      _TMR4_SetInterruptHandler 5DB0  
                          ___fpclassifyf@F465 011C                                      _actSpeed 50E4  
        __size_of_UART1_SetRxInterruptHandler 000A                                  _TMR4_10msISR 5DD4  
                                    ___xxtofl 3BA6                      __size_of_ADCC_Initialize 005C  
                         __end_of_TMR5_Reload 5D6A                     __size_of_CCP4_SetCallBack 000A  
                                    __pivt0x8 0008                       __end_of_SMT1_PW_ACQ_ISR 5458  
                                    _getCurve 31B2                                      __ptext10 527A  
                                    __ptext11 33CE                                      __ptext20 565E  
                                    __ptext12 486A                                      __ptext21 504E  
                                    __ptext13 55CE                                      __ptext30 5178  
                                    __ptext22 5D6A                                      __ptext14 580A  
                                    __ptext31 37EE                                      __ptext23 52E4  
                                    __ptext15 4EFE                                      __ptext40 41C6  
                                    __ptext32 2B30                                      __ptext24 56A2  
                                    __ptext16 4E4E                                      __ptext41 4A5C  
                                    __ptext33 587A                                      __ptext25 4062  
                                    __ptext17 2ECC                                      __ptext50 54EE  
                                    __ptext42 58E2                                      __ptext34 58AE  
                                    __ptext26 3D5A                                      __ptext18 4CCC  
                                    __ptext51 4FA8                                      __ptext43 5916  
                                    __ptext35 5D4C                                      __ptext27 39E4  
                                    __ptext19 5720                                      __ptext60 5DB0  
                                    __ptext52 5D74                                      __ptext44 50E4  
                                    __ptext36 59B4                                      __ptext28 465E  
                                    __ptext61 5842                                      __ptext53 5D7E  
                                    __ptext45 444A                                      __ptext37 4764  
                                    __ptext29 31B2                                      __ptext70 5D34  
                                    __ptext62 5C9C                                      __ptext54 5D88  
                                    __ptext46 3BA6                                      __ptext38 35E4  
                                    __ptext71 5458                                      __ptext63 5A1A  
                                    __ptext55 5D92                                      __ptext47 4556  
                                    __ptext39 221E                                      __ptext80 5798  
                                    __ptext72 5B60                                      __ptext64 5CD4  
                                    __ptext56 5D9C                                      __ptext48 26E0  
                                    __ptext81 4D8E                                      __ptext73 5AAA  
                                    __ptext65 5CEC                                      __ptext57 5538  
                                    __ptext49 4C08                                      __ptext90 5DE0  
                                    __ptext82 5DDA                                      __ptext74 5DBA  
                                    __ptext66 5D04                                      __ptext58 5DA6  
                                    __ptext91 594C                                      __ptext83 5DDC  
                                    __ptext75 5AD8                                      __ptext67 5D1C  
                                    __ptext59 5B34                                      __ptext92 5A4A  
                                    __ptext84 5DCE                                      __ptext76 5DC4  
                                    __ptext68 5C34                                      __ptext93 5980  
                                    __ptext85 5B8C                                      __ptext77 53A6  
                                    __ptext69 4B3E                                      __ptext94 5A7A  
                                    __ptext86 56E4                                      __ptext78 575C  
                                    __ptext95 59E8                                      __ptext87 5B06  
                                    __ptext79 5616                                      __ptext96 5CB8  
                                    __ptext88 5DD4                                      __ptext97 5D5C  
                                    __ptext89 5DDE                                      __ptext98 5BB8  
                                    __ptext99 5C58                              __size_of_isupper 0038  
                                    _distLeft 00FB                __size_of_UART1_SetErrorHandler 000A  
                                 ??_calcSpeed 0083                 __end_of_UART1_SetErrorHandler 5DA6  
                            __size_of_tolower 0060                                    _T3GCONbits 003FA7  
                                  strcpy@dest 0014                              __size_of_strncmp 00F4  
                                 ??_checkBatt 003A                             ??_TMR4_Initialize 0016  
                           ??_PWM6_Initialize 0014                                 __size_of_main 0020  
                               __size_of_dtoa 02E6                                      _oldSpeed 012C  
                                  _T5GCONbits 003F9B                                 __size_of_loop 0138  
                             _SMT1_Initialize 5A1A                                   _IVTLOCKbits 003FD4  
                                    _setMotor 4A5C                                      _setSpeed 00EB  
                    __size_of_TMR5_WriteTimer 002C                                      efgtoa@fp 0083  
                                    efgtoa@ne 009F                                      efgtoa@pp 009D  
                                    efgtoa@ou 00A3                     _UART1_OverrunErrorHandler 0190  
UART1_SetOverrunErrorHandler@interruptHandler 0014                                      isa$xinst 000000  
          __size_of_UART1_DefaultErrorHandler 0006                    ??_ADCC_GetSingleConversion 0016  
                  ?_UART1_DefaultErrorHandler 0001                         ?_CCP3_DefaultCallBack 0001  
                                    _vfprintf 520A                                     printf@fmt 01A0  
                  __end_of_PWM8_LoadDutyValue 5916                               _CCP3_CaptureISR 594C  
                                 _UART1_Write 52E4                         fp__UART1_Transmit_ISR 0000  
                           ??_TMR5_Initialize 0016                             ??_PWM7_Initialize 0014  
         fp__TMR5_DefaultGateInterruptHandler 0000      __end_of_TMR5_DefaultGateInterruptHandler 5CD4  
   __size_of_TMR5_DefaultGateInterruptHandler 001C            ??_TMR5_DefaultGateInterruptHandler 0011  
           ?_TMR5_DefaultGateInterruptHandler 0001              _TMR5_DefaultGateInterruptHandler 5CB8  
                            ___aomod@dividend 0014                           __end_of_startAccell 4062  
                              _battCheckCount 0130                                 ??_Default_ISR 0001  
              ??_UART1_SetFramingErrorHandler 0016                                  _reverseCount 00F1  
                             ??_TMR5_GATE_ISR 0011                                _vfpfcnvrt$3579 00D9  
                 __end_of_UART1_RxDataHandler 5BB8                                   _uart1RxHead 0043  
                        _CCP4_DefaultCallBack 5A7A                                   _uart1TxHead 0045  
                                 _uart1RxTail 0042                                   _uart1TxTail 0044  
                      ??_INTERRUPT_Initialize 0014                            _PWM7_LoadDutyValue 5916  
                                    intlevel1 0000                                      intlevel2 0000  
                    __size_of_CLC3_Initialize 002C                                   _setSteering 37EE  
                             _CCP4_CaptureISR 5980                       ?_PIN_MANAGER_Initialize 0001  
                           ??_PWM8_Initialize 0014                           ?_PWM7_LoadDutyValue 0014  
                        __end_of_calcMotorPow 4312                                     strcpy@src 0016  
                                    isupper@c 0014                                     strncmp@_l 0014  
                                   strncmp@_r 0016                               ??_TMR4_CallBack 0013  
                  __size_of_SMT1_Overflow_ISR 0028                          __end_of_calcSteering 3BA6  
                         _uart1RxStatusBuffer 0100                                   efgtoa@nmode 00AF  
                                    printf@ap 01A6                              ??_TMR5_ReadTimer 000B  
                  __size_of_getBatteryVoltage 0010  UART1_SetFramingErrorHandler@interruptHandler 0014  
           __end_of_UART1_DefaultErrorHandler 5DD4                               ___aomod@divisor 001C  
                                 ??_vfpfcnvrt 00CD                                   _reverseTime 012A  
                             ___aomod@counter 0024                              ?_SMT1_PR_ACQ_ISR 0001  
                                 _TMR5_Reload 5D5C                                    _SMT1SIGPPS 003AD2  
                                  _SMT1WINPPS 003AD1                          ??_PWM7_LoadDutyValue 0016  
                                    tolower@c 001A                                 actSpeed@speed 0024  
                      __size_of___fpclassifyf 00FE                         ?_CCP4_DefaultCallBack 0005  
                   calcMotorPow@oldSpeedDelta 0087                                      strncmp@l 001B  
                                    strncmp@n 0018                              _CCP3_SetCallBack 5DC4  
                                    strncmp@r 001D                     __size_of_UART1_Initialize 00A6  
                                ___aldiv@sign 001D                              ?_SMT1_PW_ACQ_ISR 0001  
                             _CCP3_Initialize 5AD8                   PWM6_LoadDutyValue@dutyValue 0014  
                           calcSteering@delta 008E                      _UART1_TxInterruptHandler 0194  
                               ___fladd@signs 0075                           __end_of_Default_ISR 5DE2  
                     __end_of_SMT1_Initialize 5A4A                                  ___aodiv@sign 0025  
              __end_of_PIN_MANAGER_Initialize 4C08                             ??_ADCC_Initialize 0014  
                                ___fladd@aexp 0076                                  ___fladd@bexp 0077  
                ?_UART1_SetTxInterruptHandler 0014                                  ___aomod@sign 0025  
                     __end_of_CCP3_CaptureISR 5980  
